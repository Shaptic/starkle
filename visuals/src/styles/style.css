/* Reset and base styling */

/* Main container: three columns – left (stats), center (game area), right (chat) */
.container {
  display: grid;
  grid-template-columns: 30% 1fr 1fr;
  height: 100vh;
}

/* Left sidebar: Stats panel with two inner panels (Account Status and Scoreboard) */
.stats {
  border-right: 1px solid #ccc;
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: flex-start;
  padding: 1rem;
  gap: 1rem;
}

/* Shared panel styling */
.panel {
  width: 100%;
  text-align: center;
  border: 2px solid #ccc;
  border-radius: 8px;
  padding: 1rem;
  background: #fff;
  box-shadow: 0 2px 5px rgba(0, 0, 0, 0.1);
}

/* Account Status panel styling */
.account-panel h3 {
  margin-bottom: 0.5rem;
  font-size: 1.2em;
  color: #333;
}
.account-panel div {
  margin: 0.3rem 0;
  font-size: 1em;
  color: #555;
}

/* Scoreboard styling */
.scoreboard {
  text-align: center;
}
.scoreboard-row {
  display: grid;
  grid-template-columns: 1fr 1fr 1fr;
  align-items: center;
  margin: 0.5rem 0;
}
.scoreboard-row.header {
  font-weight: bold;
  font-size: 1.2em;
  border-bottom: 1px solid #ccc;
  padding-bottom: 0.5rem;
}
.scoreboard-row.header .playerA {
  color: #28a745; /* Green for current player */
}
.scoreboard-row.header .playerB {
  color: #dc3545; /* Red for opponent */
}
.scoreboard-row .label {
  font-style: italic;
  color: #666;
}
/* Score numbers (totals and turns) revert to original colors */
.playerA.total,
.playerB.total {
  font-size: 2em;
  color: #007acc;
}
.playerA.turn,
.playerB.turn {
  font-size: 1em;
  color: #555;
}

/* Game area (center) */
.game-area {
  position: relative;
  background: url(/woodgrain2.jpg) repeat;
  display: flex;
  justify-content: center;
  align-items: center;
  min-width: 768px;
}

/* Chat panel (right column) */
.chat-panel {
  background: #f8f9fa;
  padding: 1rem;
  border-left: 1px solid #ccc;
  display: flex;
  flex-direction: column;
  box-shadow: -2px 0 5px rgba(0, 0, 0, 0.05);
}
.chat-panel h2 {
  margin-bottom: 1rem;
  font-size: 1.3em;
  color: #333;
}
.chat-messages {
  flex: 1;
  border: 1px solid #ccc;
  padding: 0.5rem;
  background: #fff;
  overflow-y: auto;
  margin-bottom: 1rem;
  border-radius: 4px;
}
.chat-input {
  padding: 0.5rem;
  width: 100%;
  border: 1px solid #ccc;
  border-radius: 4px;
  font-size: 1em;
}

#accountStatusHeader {
  position: relative; /* Establish a containing block for the absolutely positioned button */
  text-align: center; /* Center the text */
  padding: 0.5em 0;
}

#logout {
  position: absolute; /* Take the button out of normal flow */
  right: 0; /* Align to the right edge of the header */
  top: 50%;
  transform: translateY(-50%); /* Vertically center the button */
  background: transparent;
  border: none;
  color: #007acc;
  font-size: 0.6em;
  cursor: pointer;
  padding: 0.2em 0.5em;
  transition: color 0.3s ease;
}

#logout:hover {
  color: #005fa3;
}

.btn-tiny {
  padding: 0;
  margin: 0 0 0 0.3rem;
  font-size: 1rem;
}
.btn-tiny:active {
  transform: rotate(180deg);
}

/* Action Buttons (Deposit, Withdraw, Refresh, and Play) */
.action-buttons {
  display: flex;
  gap: 1rem;
  justify-content: center;
  margin-top: 1rem;
}
.action-button {
  border: none;
  color: #fff;
  font-size: 1em;
  padding: 0.75rem 1.5rem;
  border-radius: 5px;
  cursor: pointer;
  transition: background-color 0.3s ease;
}
.btn-green {
  background-color: #2ecc71;
}
.btn-green:hover {
  background-color: #27ae60;
}
.btn-red {
  background-color: #e74c3c;
}
.btn-red:hover {
  background-color: #c0392b;
}
.btn-yellow {
  background-color: #f1c40f;
  color: #333;
}
.btn-yellow:hover {
  background-color: #f39c12;
}
/* Play button - reusing the refresh style for simplicity */
#play {
  margin-top: 1rem;
}

/* "Waiting for opponent" Modal (full-screen overlay) */
.waiting-modal {
  display: none; /* Hidden by default */
  position: fixed;
  z-index: 100;
  left: 0;
  top: 0;
  width: 100vw;
  height: 100vh;
  background-color: rgba(0, 0, 0, 0.5);
  justify-content: center;
  align-items: center;
}
.waiting-modal-content {
  position: relative;
  background-color: #fff;
  padding: 2rem;
  border-radius: 8px;
  text-align: center;
  box-shadow: 0 2px 5px rgba(0, 0, 0, 0.2);
  max-width: 300px;
  width: 90%;
}
.spinner {
  border: 4px solid #f3f3f3;
  border-top: 4px solid #007acc;
  border-radius: 50%;
  width: 40px;
  height: 40px;
  animation: spin 1s linear infinite;
  margin: 0 auto 1rem;
}

/* 1. Error Icon (Pretty X) */
.check-icon,
.error-icon {
  display: inline-block;
  width: 50px; /* Adjust size as needed */
  height: 50px;
  position: relative;
}
.error-icon::before,
.error-icon::after {
  content: "";
  position: absolute;
  top: 50%;
  left: 0;
  width: 100%;
  height: 4px; /* Thickness of the line */
  background-color: #dc3545; /* Red color */
  transform-origin: center;
}
.error-icon::before {
  transform: translateY(-50%) rotate(45deg);
}
.error-icon::after {
  transform: translateY(-50%) rotate(-45deg);
}
/* 1. Success Icon (Check Mark) */
.check-icon {
  font-size: 50px; /* size of the checkmark */
  color: #28a745; /* your pleasant green */
  display: block;
  margin: 0 auto 1rem; /* center it and add space below */
}

/* 2. Small Close Button inside .waiting-modal-content */
.waiting-modal-content .close-button {
  position: absolute;
  top: 8px;
  right: 8px;
  width: 24px;
  height: 24px;
  background: transparent;
  border: none;
  font-size: 20px;
  line-height: 1;
  color: #555; /* Dark gray */
  cursor: pointer;
  padding: 0;
}

/* Optional hover state for the close button */
.waiting-modal-content .close-button:hover {
  color: #333;
}

/* Dice Panel - Bottom Center Overlay */
.dice-panel {
  position: absolute;
  left: 50%;
  bottom: 20px;
  transform: translateX(-50%);
  background: #fff;
  padding: 1rem;
  border-radius: 8px;
  box-shadow: 0 2px 5px rgba(0, 0, 0, 0.2);
  z-index: 50;
  display: none; /* Hidden by default */
  width: 90%;
  max-width: 500px;
}
.dice-panel-content {
  text-align: center;
}
.dice-panel h2 {
  margin-bottom: 1rem;
  font-size: 1.5em;
  color: #333;
}
.dice-container {
  display: flex;
  justify-content: center;
  flex-wrap: wrap;
  gap: 1rem;
  margin-bottom: 1rem;
}
/* .die {
  width: 50px;
  height: 50px;
  line-height: 50px;
  border: 2px solid #007acc;
  border-radius: 8px;
  text-align: center;
  font-size: 1.5em;
  cursor: pointer;
  user-select: none;
  transition: all 0.3s ease;
}
.die.active {
  background-color: #007acc;
  color: #fff;
} */
.modal-buttons {
  display: flex;
  justify-content: center;
  gap: 1rem;
}

/* Mobile layout: stack vertically */
@media (max-width: 768px) {
  .container {
    display: flex;
    flex-direction: column;
    /* height: auto; */
  }
  .stats,
  .game-area,
  .chat-panel {
    border: none;
    box-shadow: none;
  }
  .panel {
    max-width: 420px;
  }
  .stats {
    border-bottom: 1px solid #ccc;
  }
  .chat-panel {
    border-top: 1px solid #ccc;
  }
  .game-area {
    flex: 1;
    min-height: 300px;
  }
}

/* Popup base styling */
.popup {
  position: fixed;
  left: 50%;
  bottom: -100px; /* start off-screen */
  transform: translateX(-50%);
  background: rgba(0, 0, 0, 0.6);
  color: #fff;
  padding: 1rem 2rem;
  border-radius: 8px;
  opacity: 0;
  z-index: 200;
  pointer-events: none;
}

/* Animation to slide in and fade in */
@keyframes fadeInPopup {
  from {
    bottom: -100px;
    opacity: 0;
  }
  to {
    bottom: 50%;
    opacity: 1;
  }
}

/* Animation to fade out */
@keyframes fadeOutPopup {
  from {
    opacity: 1;
  }
  to {
    opacity: 0;
  }
}

/* Class to apply slide in animation */
.popup.show {
  animation: fadeInPopup 0.5s ease-out forwards;
}
/* Class to apply fade out animation */
.popup.hide {
  animation: fadeOutPopup 0.5s ease-out forwards;
}

.balance-change {
  position: absolute;
  animation: fadeInOut 2.5s ease forwards;
  pointer-events: none;
  font-size: larger;
  color: white;
}
.balance-change.loss {
  color: rgba(200, 0, 0, 1);
}
.balance-change.win {
  color: rgba(0, 200, 0, 1);
}
@keyframes fadeInOut {
  0% {
    opacity: 0;
    transform: translateY(10px);
  }
  20% {
    opacity: 1;
    transform: translateY(0);
  }
  80% {
    opacity: 1;
    transform: translateY(0);
  }
  100% {
    opacity: 0;
    transform: translateY(-10px);
  }
}

.footer {
  position: fixed;
  bottom: 0;
  left: 0;
  right: 0;
  background: #333;
  color: #fff;
  font-size: 0.9em;
  text-align: left;
  padding: 5px 10px;
  z-index: 100;
}

/* Base status icons styling */
.status-icon {
  margin-right: 0.5em;
}

/* Connected: checkmark icon styling */
.status-icon.connected::before {
  content: "✅";
}

/* Not connected: X icon styling */
.status-icon.disconnected::before {
  content: "❌";
  cursor: pointer; /* Allows clicking to reconnect */
}

/* Reconnecting: create a spinning indicator */
.status-icon.connecting {
  display: inline-block;
  width: 1em;
  height: 1em;
  border: 2px solid #fff;
  border-top: 2px solid transparent;
  border-radius: 50%;
  margin-right: 0.5em;
  animation: spin 1s linear infinite;
}

/* Spinner animation */
@keyframes spin {
  0% {
    transform: rotate(0deg);
  }
  100% {
    transform: rotate(360deg);
  }
}

/* Popup Styling */
.top-popup {
  position: fixed;
  top: -100px; /* Start hidden above the screen */
  left: 50%;
  transform: translateX(-50%);
  max-width: 400px;
  width: 90%;
  background-color: #ffffff;
  color: #333;
  padding: 1rem;
  border-radius: 4px;
  box-shadow: 0px 2px 8px rgba(0, 0, 0, 0.2);
  overflow-wrap: break-word;
  opacity: 0;
  z-index: 1000;
}

/* Class to trigger the animation */
.top-popup.show {
  animation: slideInTop 3s ease forwards;
}

/* Animation: slide in, hold, then slide out */
@keyframes slideInTop {
  0% {
    top: -100px;
    opacity: 0;
  }
  20% {
    top: 20px; /* Slide down to 20px from top */
    opacity: 1;
  }
  80% {
    top: 20px; /* Stay at top for a while */
    opacity: 1;
  }
  100% {
    top: -100px; /* Slide back up */
    opacity: 0;
  }
}
