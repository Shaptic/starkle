var __defProp = Object.defineProperty;
var __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;
var __publicField = (obj, key, value) => __defNormalProp(obj, typeof key !== "symbol" ? key + "" : key, value);
(function() {
  const t = document.createElement("link").relList;
  if (t && t.supports && t.supports("modulepreload")) return;
  for (const a of document.querySelectorAll('link[rel="modulepreload"]')) o(a);
  new MutationObserver((a) => {
    for (const l of a) if (l.type === "childList") for (const s of l.addedNodes) s.tagName === "LINK" && s.rel === "modulepreload" && o(s);
  }).observe(document, { childList: true, subtree: true });
  function e(a) {
    const l = {};
    return a.integrity && (l.integrity = a.integrity), a.referrerPolicy && (l.referrerPolicy = a.referrerPolicy), a.crossOrigin === "use-credentials" ? l.credentials = "include" : a.crossOrigin === "anonymous" ? l.credentials = "omit" : l.credentials = "same-origin", l;
  }
  function o(a) {
    if (a.ep) return;
    a.ep = true;
    const l = e(a);
    fetch(a.href, l);
  }
})();
var zl = typeof globalThis < "u" ? globalThis : typeof window < "u" ? window : typeof global < "u" ? global : typeof self < "u" ? self : {};
function Ad(E) {
  return E && E.__esModule && Object.prototype.hasOwnProperty.call(E, "default") ? E.default : E;
}
var af = { exports: {} }, Rp;
function gm() {
  return Rp || (Rp = 1, function(E, t) {
    var e = {};
    /*! For license information please see stellar-sdk.min.js.LICENSE.txt */
    (function(o, a) {
      E.exports = a();
    })(self, () => (() => {
      var o = { 41: (s, i, u) => {
        var d = u(655), f = u(8068), p = u(9675), g = u(5795);
        s.exports = function(b, h, m) {
          if (!b || typeof b != "object" && typeof b != "function") throw new p("`obj` must be an object or a function`");
          if (typeof h != "string" && typeof h != "symbol") throw new p("`property` must be a string or a symbol`");
          if (arguments.length > 3 && typeof arguments[3] != "boolean" && arguments[3] !== null) throw new p("`nonEnumerable`, if provided, must be a boolean or null");
          if (arguments.length > 4 && typeof arguments[4] != "boolean" && arguments[4] !== null) throw new p("`nonWritable`, if provided, must be a boolean or null");
          if (arguments.length > 5 && typeof arguments[5] != "boolean" && arguments[5] !== null) throw new p("`nonConfigurable`, if provided, must be a boolean or null");
          if (arguments.length > 6 && typeof arguments[6] != "boolean") throw new p("`loose`, if provided, must be a boolean");
          var c = arguments.length > 3 ? arguments[3] : null, w = arguments.length > 4 ? arguments[4] : null, T = arguments.length > 5 ? arguments[5] : null, P = arguments.length > 6 && arguments[6], k = !!g && g(b, h);
          if (d) d(b, h, { configurable: T === null && k ? k.configurable : !T, enumerable: c === null && k ? k.enumerable : !c, value: m, writable: w === null && k ? k.writable : !w });
          else {
            if (!P && (c || w || T)) throw new f("This environment does not support defining a property as non-configurable, non-writable, or non-enumerable.");
            b[h] = m;
          }
        };
      }, 76: (s) => {
        s.exports = Function.prototype.call;
      }, 251: (s, i) => {
        i.read = function(u, d, f, p, g) {
          var b, h, m = 8 * g - p - 1, c = (1 << m) - 1, w = c >> 1, T = -7, P = f ? g - 1 : 0, k = f ? -1 : 1, R = u[d + P];
          for (P += k, b = R & (1 << -T) - 1, R >>= -T, T += m; T > 0; b = 256 * b + u[d + P], P += k, T -= 8) ;
          for (h = b & (1 << -T) - 1, b >>= -T, T += p; T > 0; h = 256 * h + u[d + P], P += k, T -= 8) ;
          if (b === 0) b = 1 - w;
          else {
            if (b === c) return h ? NaN : 1 / 0 * (R ? -1 : 1);
            h += Math.pow(2, p), b -= w;
          }
          return (R ? -1 : 1) * h * Math.pow(2, b - p);
        }, i.write = function(u, d, f, p, g, b) {
          var h, m, c, w = 8 * b - g - 1, T = (1 << w) - 1, P = T >> 1, k = g === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0, R = p ? 0 : b - 1, F = p ? 1 : -1, v = d < 0 || d === 0 && 1 / d < 0 ? 1 : 0;
          for (d = Math.abs(d), isNaN(d) || d === 1 / 0 ? (m = isNaN(d) ? 1 : 0, h = T) : (h = Math.floor(Math.log(d) / Math.LN2), d * (c = Math.pow(2, -h)) < 1 && (h--, c *= 2), (d += h + P >= 1 ? k / c : k * Math.pow(2, 1 - P)) * c >= 2 && (h++, c /= 2), h + P >= T ? (m = 0, h = T) : h + P >= 1 ? (m = (d * c - 1) * Math.pow(2, g), h += P) : (m = d * Math.pow(2, P - 1) * Math.pow(2, g), h = 0)); g >= 8; u[f + R] = 255 & m, R += F, m /= 256, g -= 8) ;
          for (h = h << g | m, w += g; w > 0; u[f + R] = 255 & h, R += F, h /= 256, w -= 8) ;
          u[f + R - F] |= 128 * v;
        };
      }, 345: (s, i, u) => {
        s.exports = u(7007).EventEmitter;
      }, 414: (s) => {
        s.exports = Math.round;
      }, 453: (s, i, u) => {
        var d, f = u(9612), p = u(9383), g = u(1237), b = u(9290), h = u(9538), m = u(8068), c = u(9675), w = u(5345), T = u(1514), P = u(8968), k = u(6188), R = u(8002), F = u(5880), v = u(414), U = u(3093), M = Function, Z = function(At) {
          try {
            return M('"use strict"; return (' + At + ").constructor;")();
          } catch {
          }
        }, D = u(5795), V = u(655), S = function() {
          throw new c();
        }, x = D ? function() {
          try {
            return S;
          } catch {
            try {
              return D(arguments, "callee").get;
            } catch {
              return S;
            }
          }
        }() : S, B = u(4039)(), W = u(3628), lt = u(1064), pt = u(8648), at = u(1002), rt = u(76), ot = {}, X = typeof Uint8Array < "u" && W ? W(Uint8Array) : d, I = { __proto__: null, "%AggregateError%": typeof AggregateError > "u" ? d : AggregateError, "%Array%": Array, "%ArrayBuffer%": typeof ArrayBuffer > "u" ? d : ArrayBuffer, "%ArrayIteratorPrototype%": B && W ? W([][Symbol.iterator]()) : d, "%AsyncFromSyncIteratorPrototype%": d, "%AsyncFunction%": ot, "%AsyncGenerator%": ot, "%AsyncGeneratorFunction%": ot, "%AsyncIteratorPrototype%": ot, "%Atomics%": typeof Atomics > "u" ? d : Atomics, "%BigInt%": typeof BigInt > "u" ? d : BigInt, "%BigInt64Array%": typeof BigInt64Array > "u" ? d : BigInt64Array, "%BigUint64Array%": typeof BigUint64Array > "u" ? d : BigUint64Array, "%Boolean%": Boolean, "%DataView%": typeof DataView > "u" ? d : DataView, "%Date%": Date, "%decodeURI%": decodeURI, "%decodeURIComponent%": decodeURIComponent, "%encodeURI%": encodeURI, "%encodeURIComponent%": encodeURIComponent, "%Error%": p, "%eval%": eval, "%EvalError%": g, "%Float16Array%": typeof Float16Array > "u" ? d : Float16Array, "%Float32Array%": typeof Float32Array > "u" ? d : Float32Array, "%Float64Array%": typeof Float64Array > "u" ? d : Float64Array, "%FinalizationRegistry%": typeof FinalizationRegistry > "u" ? d : FinalizationRegistry, "%Function%": M, "%GeneratorFunction%": ot, "%Int8Array%": typeof Int8Array > "u" ? d : Int8Array, "%Int16Array%": typeof Int16Array > "u" ? d : Int16Array, "%Int32Array%": typeof Int32Array > "u" ? d : Int32Array, "%isFinite%": isFinite, "%isNaN%": isNaN, "%IteratorPrototype%": B && W ? W(W([][Symbol.iterator]())) : d, "%JSON%": typeof JSON == "object" ? JSON : d, "%Map%": typeof Map > "u" ? d : Map, "%MapIteratorPrototype%": typeof Map < "u" && B && W ? W((/* @__PURE__ */ new Map())[Symbol.iterator]()) : d, "%Math%": Math, "%Number%": Number, "%Object%": f, "%Object.getOwnPropertyDescriptor%": D, "%parseFloat%": parseFloat, "%parseInt%": parseInt, "%Promise%": typeof Promise > "u" ? d : Promise, "%Proxy%": typeof Proxy > "u" ? d : Proxy, "%RangeError%": b, "%ReferenceError%": h, "%Reflect%": typeof Reflect > "u" ? d : Reflect, "%RegExp%": RegExp, "%Set%": typeof Set > "u" ? d : Set, "%SetIteratorPrototype%": typeof Set < "u" && B && W ? W((/* @__PURE__ */ new Set())[Symbol.iterator]()) : d, "%SharedArrayBuffer%": typeof SharedArrayBuffer > "u" ? d : SharedArrayBuffer, "%String%": String, "%StringIteratorPrototype%": B && W ? W(""[Symbol.iterator]()) : d, "%Symbol%": B ? Symbol : d, "%SyntaxError%": m, "%ThrowTypeError%": x, "%TypedArray%": X, "%TypeError%": c, "%Uint8Array%": typeof Uint8Array > "u" ? d : Uint8Array, "%Uint8ClampedArray%": typeof Uint8ClampedArray > "u" ? d : Uint8ClampedArray, "%Uint16Array%": typeof Uint16Array > "u" ? d : Uint16Array, "%Uint32Array%": typeof Uint32Array > "u" ? d : Uint32Array, "%URIError%": w, "%WeakMap%": typeof WeakMap > "u" ? d : WeakMap, "%WeakRef%": typeof WeakRef > "u" ? d : WeakRef, "%WeakSet%": typeof WeakSet > "u" ? d : WeakSet, "%Function.prototype.call%": rt, "%Function.prototype.apply%": at, "%Object.defineProperty%": V, "%Object.getPrototypeOf%": lt, "%Math.abs%": T, "%Math.floor%": P, "%Math.max%": k, "%Math.min%": R, "%Math.pow%": F, "%Math.round%": v, "%Math.sign%": U, "%Reflect.getPrototypeOf%": pt };
        if (W) try {
          null.error;
        } catch (At) {
          var nt = W(W(At));
          I["%Error.prototype%"] = nt;
        }
        var ft = function At(Ut) {
          var Vt;
          if (Ut === "%AsyncFunction%") Vt = Z("async function () {}");
          else if (Ut === "%GeneratorFunction%") Vt = Z("function* () {}");
          else if (Ut === "%AsyncGeneratorFunction%") Vt = Z("async function* () {}");
          else if (Ut === "%AsyncGenerator%") {
            var oe = At("%AsyncGeneratorFunction%");
            oe && (Vt = oe.prototype);
          } else if (Ut === "%AsyncIteratorPrototype%") {
            var te = At("%AsyncGenerator%");
            te && W && (Vt = W(te.prototype));
          }
          return I[Ut] = Vt, Vt;
        }, dt = { __proto__: null, "%ArrayBufferPrototype%": ["ArrayBuffer", "prototype"], "%ArrayPrototype%": ["Array", "prototype"], "%ArrayProto_entries%": ["Array", "prototype", "entries"], "%ArrayProto_forEach%": ["Array", "prototype", "forEach"], "%ArrayProto_keys%": ["Array", "prototype", "keys"], "%ArrayProto_values%": ["Array", "prototype", "values"], "%AsyncFunctionPrototype%": ["AsyncFunction", "prototype"], "%AsyncGenerator%": ["AsyncGeneratorFunction", "prototype"], "%AsyncGeneratorPrototype%": ["AsyncGeneratorFunction", "prototype", "prototype"], "%BooleanPrototype%": ["Boolean", "prototype"], "%DataViewPrototype%": ["DataView", "prototype"], "%DatePrototype%": ["Date", "prototype"], "%ErrorPrototype%": ["Error", "prototype"], "%EvalErrorPrototype%": ["EvalError", "prototype"], "%Float32ArrayPrototype%": ["Float32Array", "prototype"], "%Float64ArrayPrototype%": ["Float64Array", "prototype"], "%FunctionPrototype%": ["Function", "prototype"], "%Generator%": ["GeneratorFunction", "prototype"], "%GeneratorPrototype%": ["GeneratorFunction", "prototype", "prototype"], "%Int8ArrayPrototype%": ["Int8Array", "prototype"], "%Int16ArrayPrototype%": ["Int16Array", "prototype"], "%Int32ArrayPrototype%": ["Int32Array", "prototype"], "%JSONParse%": ["JSON", "parse"], "%JSONStringify%": ["JSON", "stringify"], "%MapPrototype%": ["Map", "prototype"], "%NumberPrototype%": ["Number", "prototype"], "%ObjectPrototype%": ["Object", "prototype"], "%ObjProto_toString%": ["Object", "prototype", "toString"], "%ObjProto_valueOf%": ["Object", "prototype", "valueOf"], "%PromisePrototype%": ["Promise", "prototype"], "%PromiseProto_then%": ["Promise", "prototype", "then"], "%Promise_all%": ["Promise", "all"], "%Promise_reject%": ["Promise", "reject"], "%Promise_resolve%": ["Promise", "resolve"], "%RangeErrorPrototype%": ["RangeError", "prototype"], "%ReferenceErrorPrototype%": ["ReferenceError", "prototype"], "%RegExpPrototype%": ["RegExp", "prototype"], "%SetPrototype%": ["Set", "prototype"], "%SharedArrayBufferPrototype%": ["SharedArrayBuffer", "prototype"], "%StringPrototype%": ["String", "prototype"], "%SymbolPrototype%": ["Symbol", "prototype"], "%SyntaxErrorPrototype%": ["SyntaxError", "prototype"], "%TypedArrayPrototype%": ["TypedArray", "prototype"], "%TypeErrorPrototype%": ["TypeError", "prototype"], "%Uint8ArrayPrototype%": ["Uint8Array", "prototype"], "%Uint8ClampedArrayPrototype%": ["Uint8ClampedArray", "prototype"], "%Uint16ArrayPrototype%": ["Uint16Array", "prototype"], "%Uint32ArrayPrototype%": ["Uint32Array", "prototype"], "%URIErrorPrototype%": ["URIError", "prototype"], "%WeakMapPrototype%": ["WeakMap", "prototype"], "%WeakSetPrototype%": ["WeakSet", "prototype"] }, Lt = u(6743), $ = u(9957), it = Lt.call(rt, Array.prototype.concat), mt = Lt.call(at, Array.prototype.splice), Ot = Lt.call(rt, String.prototype.replace), bt = Lt.call(rt, String.prototype.slice), xt = Lt.call(rt, RegExp.prototype.exec), Ct = /[^%.[\]]+|\[(?:(-?\d+(?:\.\d+)?)|(["'])((?:(?!\2)[^\\]|\\.)*?)\2)\]|(?=(?:\.|\[\])(?:\.|\[\]|%$))/g, Tt = /\\(\\)?/g, Bt = function(At, Ut) {
          var Vt, oe = At;
          if ($(dt, oe) && (oe = "%" + (Vt = dt[oe])[0] + "%"), $(I, oe)) {
            var te = I[oe];
            if (te === ot && (te = ft(oe)), te === void 0 && !Ut) throw new c("intrinsic " + At + " exists, but is not available. Please file an issue!");
            return { alias: Vt, name: oe, value: te };
          }
          throw new m("intrinsic " + At + " does not exist!");
        };
        s.exports = function(At, Ut) {
          if (typeof At != "string" || At.length === 0) throw new c("intrinsic name must be a non-empty string");
          if (arguments.length > 1 && typeof Ut != "boolean") throw new c('"allowMissing" argument must be a boolean');
          if (xt(/^%?[^%]*%?$/, At) === null) throw new m("`%` may not be present anywhere but at the beginning and end of the intrinsic name");
          var Vt = function(L) {
            var et = bt(L, 0, 1), St = bt(L, -1);
            if (et === "%" && St !== "%") throw new m("invalid intrinsic syntax, expected closing `%`");
            if (St === "%" && et !== "%") throw new m("invalid intrinsic syntax, expected opening `%`");
            var kt = [];
            return Ot(L, Ct, function(ct, j, ut, gt) {
              kt[kt.length] = ut ? Ot(gt, Tt, "$1") : j || ct;
            }), kt;
          }(At), oe = Vt.length > 0 ? Vt[0] : "", te = Bt("%" + oe + "%", Ut), yt = te.name, Mt = te.value, O = false, z = te.alias;
          z && (oe = z[0], mt(Vt, it([0, 1], z)));
          for (var J = 1, tt = true; J < Vt.length; J += 1) {
            var H = Vt[J], K = bt(H, 0, 1), q = bt(H, -1);
            if ((K === '"' || K === "'" || K === "`" || q === '"' || q === "'" || q === "`") && K !== q) throw new m("property names with quotes must have matching quotes");
            if (H !== "constructor" && tt || (O = true), $(I, yt = "%" + (oe += "." + H) + "%")) Mt = I[yt];
            else if (Mt != null) {
              if (!(H in Mt)) {
                if (!Ut) throw new c("base intrinsic for " + At + " exists, but the property is not available.");
                return;
              }
              if (D && J + 1 >= Vt.length) {
                var _ = D(Mt, H);
                Mt = (tt = !!_) && "get" in _ && !("originalValue" in _.get) ? _.get : Mt[H];
              } else tt = $(Mt, H), Mt = Mt[H];
              tt && !O && (I[yt] = Mt);
            }
          }
          return Mt;
        };
      }, 487: (s, i, u) => {
        var d = u(6897), f = u(655), p = u(3126), g = u(2205);
        s.exports = function(b) {
          var h = p(arguments), m = b.length - (arguments.length - 1);
          return d(h, 1 + (m > 0 ? m : 0), true);
        }, f ? f(s.exports, "apply", { value: g }) : s.exports.apply = g;
      }, 507: (s, i, u) => {
        var d = u(453), f = u(6556), p = u(8859), g = u(9675), b = d("%Map%", true), h = f("Map.prototype.get", true), m = f("Map.prototype.set", true), c = f("Map.prototype.has", true), w = f("Map.prototype.delete", true), T = f("Map.prototype.size", true);
        s.exports = !!b && function() {
          var P, k = { assert: function(R) {
            if (!k.has(R)) throw new g("Side channel does not contain " + p(R));
          }, delete: function(R) {
            if (P) {
              var F = w(P, R);
              return T(P) === 0 && (P = void 0), F;
            }
            return false;
          }, get: function(R) {
            if (P) return h(P, R);
          }, has: function(R) {
            return !!P && c(P, R);
          }, set: function(R, F) {
            P || (P = new b()), m(P, R, F);
          } };
          return k;
        };
      }, 537: (s, i, u) => {
        var d = Object.getOwnPropertyDescriptors || function(ot) {
          for (var X = Object.keys(ot), I = {}, nt = 0; nt < X.length; nt++) I[X[nt]] = Object.getOwnPropertyDescriptor(ot, X[nt]);
          return I;
        }, f = /%[sdj%]/g;
        i.format = function(ot) {
          if (!U(ot)) {
            for (var X = [], I = 0; I < arguments.length; I++) X.push(h(arguments[I]));
            return X.join(" ");
          }
          I = 1;
          for (var nt = arguments, ft = nt.length, dt = String(ot).replace(f, function($) {
            if ($ === "%%") return "%";
            if (I >= ft) return $;
            switch ($) {
              case "%s":
                return String(nt[I++]);
              case "%d":
                return Number(nt[I++]);
              case "%j":
                try {
                  return JSON.stringify(nt[I++]);
                } catch {
                  return "[Circular]";
                }
              default:
                return $;
            }
          }), Lt = nt[I]; I < ft; Lt = nt[++I]) F(Lt) || !D(Lt) ? dt += " " + Lt : dt += " " + h(Lt);
          return dt;
        }, i.deprecate = function(ot, X) {
          if (typeof process < "u" && process.noDeprecation === true) return ot;
          if (typeof process > "u") return function() {
            return i.deprecate(ot, X).apply(this, arguments);
          };
          var I = false;
          return function() {
            if (!I) {
              if (process.throwDeprecation) throw new Error(X);
              process.traceDeprecation ? console.trace(X) : console.error(X), I = true;
            }
            return ot.apply(this, arguments);
          };
        };
        var p = {}, g = /^$/;
        if (e.NODE_DEBUG) {
          var b = e.NODE_DEBUG;
          b = b.replace(/[|\\{}()[\]^$+?.]/g, "\\$&").replace(/\*/g, ".*").replace(/,/g, "$|^").toUpperCase(), g = new RegExp("^" + b + "$", "i");
        }
        function h(ot, X) {
          var I = { seen: [], stylize: c };
          return arguments.length >= 3 && (I.depth = arguments[2]), arguments.length >= 4 && (I.colors = arguments[3]), R(X) ? I.showHidden = X : X && i._extend(I, X), M(I.showHidden) && (I.showHidden = false), M(I.depth) && (I.depth = 2), M(I.colors) && (I.colors = false), M(I.customInspect) && (I.customInspect = true), I.colors && (I.stylize = m), w(I, ot, I.depth);
        }
        function m(ot, X) {
          var I = h.styles[X];
          return I ? "\x1B[" + h.colors[I][0] + "m" + ot + "\x1B[" + h.colors[I][1] + "m" : ot;
        }
        function c(ot, X) {
          return ot;
        }
        function w(ot, X, I) {
          if (ot.customInspect && X && x(X.inspect) && X.inspect !== i.inspect && (!X.constructor || X.constructor.prototype !== X)) {
            var nt = X.inspect(I, ot);
            return U(nt) || (nt = w(ot, nt, I)), nt;
          }
          var ft = function(xt, Ct) {
            if (M(Ct)) return xt.stylize("undefined", "undefined");
            if (U(Ct)) {
              var Tt = "'" + JSON.stringify(Ct).replace(/^"|"$/g, "").replace(/'/g, "\\'").replace(/\\"/g, '"') + "'";
              return xt.stylize(Tt, "string");
            }
            if (v(Ct)) return xt.stylize("" + Ct, "number");
            if (R(Ct)) return xt.stylize("" + Ct, "boolean");
            if (F(Ct)) return xt.stylize("null", "null");
          }(ot, X);
          if (ft) return ft;
          var dt = Object.keys(X), Lt = function(xt) {
            var Ct = {};
            return xt.forEach(function(Tt, Bt) {
              Ct[Tt] = true;
            }), Ct;
          }(dt);
          if (ot.showHidden && (dt = Object.getOwnPropertyNames(X)), S(X) && (dt.indexOf("message") >= 0 || dt.indexOf("description") >= 0)) return T(X);
          if (dt.length === 0) {
            if (x(X)) {
              var $ = X.name ? ": " + X.name : "";
              return ot.stylize("[Function" + $ + "]", "special");
            }
            if (Z(X)) return ot.stylize(RegExp.prototype.toString.call(X), "regexp");
            if (V(X)) return ot.stylize(Date.prototype.toString.call(X), "date");
            if (S(X)) return T(X);
          }
          var it, mt = "", Ot = false, bt = ["{", "}"];
          return k(X) && (Ot = true, bt = ["[", "]"]), x(X) && (mt = " [Function" + (X.name ? ": " + X.name : "") + "]"), Z(X) && (mt = " " + RegExp.prototype.toString.call(X)), V(X) && (mt = " " + Date.prototype.toUTCString.call(X)), S(X) && (mt = " " + T(X)), dt.length !== 0 || Ot && X.length != 0 ? I < 0 ? Z(X) ? ot.stylize(RegExp.prototype.toString.call(X), "regexp") : ot.stylize("[Object]", "special") : (ot.seen.push(X), it = Ot ? function(xt, Ct, Tt, Bt, At) {
            for (var Ut = [], Vt = 0, oe = Ct.length; Vt < oe; ++Vt) pt(Ct, String(Vt)) ? Ut.push(P(xt, Ct, Tt, Bt, String(Vt), true)) : Ut.push("");
            return At.forEach(function(te) {
              te.match(/^\d+$/) || Ut.push(P(xt, Ct, Tt, Bt, te, true));
            }), Ut;
          }(ot, X, I, Lt, dt) : dt.map(function(xt) {
            return P(ot, X, I, Lt, xt, Ot);
          }), ot.seen.pop(), function(xt, Ct, Tt) {
            var Bt = xt.reduce(function(At, Ut) {
              return Ut.indexOf(`
`) >= 0, At + Ut.replace(/\u001b\[\d\d?m/g, "").length + 1;
            }, 0);
            return Bt > 60 ? Tt[0] + (Ct === "" ? "" : Ct + `
 `) + " " + xt.join(`,
  `) + " " + Tt[1] : Tt[0] + Ct + " " + xt.join(", ") + " " + Tt[1];
          }(it, mt, bt)) : bt[0] + mt + bt[1];
        }
        function T(ot) {
          return "[" + Error.prototype.toString.call(ot) + "]";
        }
        function P(ot, X, I, nt, ft, dt) {
          var Lt, $, it;
          if ((it = Object.getOwnPropertyDescriptor(X, ft) || { value: X[ft] }).get ? $ = it.set ? ot.stylize("[Getter/Setter]", "special") : ot.stylize("[Getter]", "special") : it.set && ($ = ot.stylize("[Setter]", "special")), pt(nt, ft) || (Lt = "[" + ft + "]"), $ || (ot.seen.indexOf(it.value) < 0 ? ($ = F(I) ? w(ot, it.value, null) : w(ot, it.value, I - 1)).indexOf(`
`) > -1 && ($ = dt ? $.split(`
`).map(function(mt) {
            return "  " + mt;
          }).join(`
`).slice(2) : `
` + $.split(`
`).map(function(mt) {
            return "   " + mt;
          }).join(`
`)) : $ = ot.stylize("[Circular]", "special")), M(Lt)) {
            if (dt && ft.match(/^\d+$/)) return $;
            (Lt = JSON.stringify("" + ft)).match(/^"([a-zA-Z_][a-zA-Z_0-9]*)"$/) ? (Lt = Lt.slice(1, -1), Lt = ot.stylize(Lt, "name")) : (Lt = Lt.replace(/'/g, "\\'").replace(/\\"/g, '"').replace(/(^"|"$)/g, "'"), Lt = ot.stylize(Lt, "string"));
          }
          return Lt + ": " + $;
        }
        function k(ot) {
          return Array.isArray(ot);
        }
        function R(ot) {
          return typeof ot == "boolean";
        }
        function F(ot) {
          return ot === null;
        }
        function v(ot) {
          return typeof ot == "number";
        }
        function U(ot) {
          return typeof ot == "string";
        }
        function M(ot) {
          return ot === void 0;
        }
        function Z(ot) {
          return D(ot) && B(ot) === "[object RegExp]";
        }
        function D(ot) {
          return typeof ot == "object" && ot !== null;
        }
        function V(ot) {
          return D(ot) && B(ot) === "[object Date]";
        }
        function S(ot) {
          return D(ot) && (B(ot) === "[object Error]" || ot instanceof Error);
        }
        function x(ot) {
          return typeof ot == "function";
        }
        function B(ot) {
          return Object.prototype.toString.call(ot);
        }
        function W(ot) {
          return ot < 10 ? "0" + ot.toString(10) : ot.toString(10);
        }
        i.debuglog = function(ot) {
          if (ot = ot.toUpperCase(), !p[ot]) if (g.test(ot)) {
            var X = process.pid;
            p[ot] = function() {
              var I = i.format.apply(i, arguments);
              console.error("%s %d: %s", ot, X, I);
            };
          } else p[ot] = function() {
          };
          return p[ot];
        }, i.inspect = h, h.colors = { bold: [1, 22], italic: [3, 23], underline: [4, 24], inverse: [7, 27], white: [37, 39], grey: [90, 39], black: [30, 39], blue: [34, 39], cyan: [36, 39], green: [32, 39], magenta: [35, 39], red: [31, 39], yellow: [33, 39] }, h.styles = { special: "cyan", number: "yellow", boolean: "yellow", undefined: "grey", null: "bold", string: "green", date: "magenta", regexp: "red" }, i.types = u(9032), i.isArray = k, i.isBoolean = R, i.isNull = F, i.isNullOrUndefined = function(ot) {
          return ot == null;
        }, i.isNumber = v, i.isString = U, i.isSymbol = function(ot) {
          return typeof ot == "symbol";
        }, i.isUndefined = M, i.isRegExp = Z, i.types.isRegExp = Z, i.isObject = D, i.isDate = V, i.types.isDate = V, i.isError = S, i.types.isNativeError = S, i.isFunction = x, i.isPrimitive = function(ot) {
          return ot === null || typeof ot == "boolean" || typeof ot == "number" || typeof ot == "string" || typeof ot == "symbol" || ot === void 0;
        }, i.isBuffer = u(1135);
        var lt = ["Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec"];
        function pt(ot, X) {
          return Object.prototype.hasOwnProperty.call(ot, X);
        }
        i.log = function() {
          var ot, X;
          console.log("%s - %s", (ot = /* @__PURE__ */ new Date(), X = [W(ot.getHours()), W(ot.getMinutes()), W(ot.getSeconds())].join(":"), [ot.getDate(), lt[ot.getMonth()], X].join(" ")), i.format.apply(i, arguments));
        }, i.inherits = u(6698), i._extend = function(ot, X) {
          if (!X || !D(X)) return ot;
          for (var I = Object.keys(X), nt = I.length; nt--; ) ot[I[nt]] = X[I[nt]];
          return ot;
        };
        var at = typeof Symbol < "u" ? Symbol("util.promisify.custom") : void 0;
        function rt(ot, X) {
          if (!ot) {
            var I = new Error("Promise was rejected with a falsy value");
            I.reason = ot, ot = I;
          }
          return X(ot);
        }
        i.promisify = function(ot) {
          if (typeof ot != "function") throw new TypeError('The "original" argument must be of type Function');
          if (at && ot[at]) {
            var X;
            if (typeof (X = ot[at]) != "function") throw new TypeError('The "util.promisify.custom" argument must be of type Function');
            return Object.defineProperty(X, at, { value: X, enumerable: false, writable: false, configurable: true }), X;
          }
          function X() {
            for (var I, nt, ft = new Promise(function($, it) {
              I = $, nt = it;
            }), dt = [], Lt = 0; Lt < arguments.length; Lt++) dt.push(arguments[Lt]);
            dt.push(function($, it) {
              $ ? nt($) : I(it);
            });
            try {
              ot.apply(this, dt);
            } catch ($) {
              nt($);
            }
            return ft;
          }
          return Object.setPrototypeOf(X, Object.getPrototypeOf(ot)), at && Object.defineProperty(X, at, { value: X, enumerable: false, writable: false, configurable: true }), Object.defineProperties(X, d(ot));
        }, i.promisify.custom = at, i.callbackify = function(ot) {
          if (typeof ot != "function") throw new TypeError('The "original" argument must be of type Function');
          function X() {
            for (var I = [], nt = 0; nt < arguments.length; nt++) I.push(arguments[nt]);
            var ft = I.pop();
            if (typeof ft != "function") throw new TypeError("The last argument must be of type Function");
            var dt = this, Lt = function() {
              return ft.apply(dt, arguments);
            };
            ot.apply(this, I).then(function($) {
              process.nextTick(Lt.bind(null, null, $));
            }, function($) {
              process.nextTick(rt.bind(null, $, Lt));
            });
          }
          return Object.setPrototypeOf(X, Object.getPrototypeOf(ot)), Object.defineProperties(X, d(ot)), X;
        };
      }, 592: (s, i, u) => {
        var d = u(655), f = function() {
          return !!d;
        };
        f.hasArrayLengthDefineBug = function() {
          if (!d) return null;
          try {
            return d([], "length", { value: 1 }).length !== 1;
          } catch {
            return true;
          }
        }, s.exports = f;
      }, 655: (s) => {
        var i = Object.defineProperty || false;
        if (i) try {
          i({}, "a", { value: 1 });
        } catch {
          i = false;
        }
        s.exports = i;
      }, 784: (s, i, u) => {
        u.d(i, { $D: () => P, Af: () => m, WC: () => c, fG: () => T, jr: () => k, tR: () => w });
        var d = u(8950), f = u(4076);
        function p(R) {
          return p = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(F) {
            return typeof F;
          } : function(F) {
            return F && typeof Symbol == "function" && F.constructor === Symbol && F !== Symbol.prototype ? "symbol" : typeof F;
          }, p(R);
        }
        function g(R, F) {
          var v = Object.keys(R);
          if (Object.getOwnPropertySymbols) {
            var U = Object.getOwnPropertySymbols(R);
            F && (U = U.filter(function(M) {
              return Object.getOwnPropertyDescriptor(R, M).enumerable;
            })), v.push.apply(v, U);
          }
          return v;
        }
        function b(R) {
          for (var F = 1; F < arguments.length; F++) {
            var v = arguments[F] != null ? arguments[F] : {};
            F % 2 ? g(Object(v), true).forEach(function(U) {
              h(R, U, v[U]);
            }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(R, Object.getOwnPropertyDescriptors(v)) : g(Object(v)).forEach(function(U) {
              Object.defineProperty(R, U, Object.getOwnPropertyDescriptor(v, U));
            });
          }
          return R;
        }
        function h(R, F, v) {
          return (F = function(U) {
            var M = function(Z, D) {
              if (p(Z) != "object" || !Z) return Z;
              var V = Z[Symbol.toPrimitive];
              if (V !== void 0) {
                var S = V.call(Z, D);
                if (p(S) != "object") return S;
                throw new TypeError("@@toPrimitive must return a primitive value.");
              }
              return (D === "string" ? String : Number)(Z);
            }(U, "string");
            return p(M) == "symbol" ? M : M + "";
          }(F)) in R ? Object.defineProperty(R, F, { value: v, enumerable: true, configurable: true, writable: true }) : R[F] = v, R;
        }
        function m(R) {
          var F = R.errorResultXdr, v = R.diagnosticEventsXdr;
          return delete R.errorResultXdr, delete R.diagnosticEventsXdr, F ? b(b(b({}, R), v !== void 0 && v.length > 0 && { diagnosticEvents: v.map(function(U) {
            return d.xdr.DiagnosticEvent.fromXDR(U, "base64");
          }) }), {}, { errorResult: d.xdr.TransactionResult.fromXDR(F, "base64") }) : b({}, R);
        }
        function c(R) {
          var F, v, U, M, Z = d.xdr.TransactionMeta.fromXDR(R.resultMetaXdr, "base64"), D = { ledger: R.ledger, createdAt: R.createdAt, applicationOrder: R.applicationOrder, feeBump: R.feeBump, envelopeXdr: d.xdr.TransactionEnvelope.fromXDR(R.envelopeXdr, "base64"), resultXdr: d.xdr.TransactionResult.fromXDR(R.resultXdr, "base64"), resultMetaXdr: Z, events: { contractEventsXdr: ((F = (v = R.events) === null || v === void 0 ? void 0 : v.contractEventsXdr) !== null && F !== void 0 ? F : []).map(function(B) {
            return B.map(function(W) {
              return d.xdr.ContractEvent.fromXDR(W, "base64");
            });
          }), transactionEventsXdr: ((U = (M = R.events) === null || M === void 0 ? void 0 : M.transactionEventsXdr) !== null && U !== void 0 ? U : []).map(function(B) {
            return d.xdr.TransactionEvent.fromXDR(B, "base64");
          }) } };
          switch (Z.switch()) {
            case 3:
            case 4:
              var V, S, x = Z.value();
              x.sorobanMeta() !== null && (D.returnValue = (V = (S = x.sorobanMeta()) === null || S === void 0 ? void 0 : S.returnValue()) !== null && V !== void 0 ? V : void 0);
          }
          return R.diagnosticEventsXdr && (D.diagnosticEventsXdr = R.diagnosticEventsXdr.map(function(B) {
            return d.xdr.DiagnosticEvent.fromXDR(B, "base64");
          })), D;
        }
        function w(R) {
          return b({ status: R.status, txHash: R.txHash }, c(R));
        }
        function T(R) {
          var F;
          return { latestLedger: R.latestLedger, oldestLedger: R.oldestLedger, latestLedgerCloseTime: R.latestLedgerCloseTime, oldestLedgerCloseTime: R.oldestLedgerCloseTime, cursor: R.cursor, events: ((F = R.events) !== null && F !== void 0 ? F : []).map(function(v) {
            var U = b({}, v);
            return delete U.contractId, b(b(b({}, U), v.contractId !== "" && { contractId: new d.Contract(v.contractId) }), {}, { topic: v.topic.map(function(M) {
              return d.xdr.ScVal.fromXDR(M, "base64");
            }), value: d.xdr.ScVal.fromXDR(v.value, "base64") });
          }) };
        }
        function P(R) {
          var F;
          return { latestLedger: R.latestLedger, entries: ((F = R.entries) !== null && F !== void 0 ? F : []).map(function(v) {
            if (!v.key || !v.xdr) throw new TypeError("invalid ledger entry: ".concat(JSON.stringify(v)));
            return b({ lastModifiedLedgerSeq: v.lastModifiedLedgerSeq, key: d.xdr.LedgerKey.fromXDR(v.key, "base64"), val: d.xdr.LedgerEntryData.fromXDR(v.xdr, "base64") }, v.liveUntilLedgerSeq !== void 0 && { liveUntilLedgerSeq: v.liveUntilLedgerSeq });
          }) };
        }
        function k(R) {
          var F, v;
          if (!f.j.isSimulationRaw(R)) return R;
          var U = { _parsed: true, id: R.id, latestLedger: R.latestLedger, events: (F = (v = R.events) === null || v === void 0 ? void 0 : v.map(function(M) {
            return d.xdr.DiagnosticEvent.fromXDR(M, "base64");
          })) !== null && F !== void 0 ? F : [] };
          return typeof R.error == "string" ? b(b({}, U), {}, { error: R.error }) : function(M, Z) {
            var D, V, S, x, B, W = b(b(b({}, Z), {}, { transactionData: new d.SorobanDataBuilder(M.transactionData), minResourceFee: M.minResourceFee }, (D = (V = M.results) === null || V === void 0 ? void 0 : V.length) !== null && D !== void 0 && D && { result: M.results.map(function(lt) {
              var pt;
              return { auth: ((pt = lt.auth) !== null && pt !== void 0 ? pt : []).map(function(at) {
                return d.xdr.SorobanAuthorizationEntry.fromXDR(at, "base64");
              }), retval: lt.xdr ? d.xdr.ScVal.fromXDR(lt.xdr, "base64") : d.xdr.ScVal.scvVoid() };
            })[0] }), (S = (x = M.stateChanges) === null || x === void 0 ? void 0 : x.length) !== null && S !== void 0 && S && { stateChanges: (B = M.stateChanges) === null || B === void 0 ? void 0 : B.map(function(lt) {
              return { type: lt.type, key: d.xdr.LedgerKey.fromXDR(lt.key, "base64"), before: lt.before ? d.xdr.LedgerEntry.fromXDR(lt.before, "base64") : null, after: lt.after ? d.xdr.LedgerEntry.fromXDR(lt.after, "base64") : null };
            }) });
            return M.restorePreamble && M.restorePreamble.transactionData !== "" ? b(b({}, W), {}, { restorePreamble: { minResourceFee: M.restorePreamble.minResourceFee, transactionData: new d.SorobanDataBuilder(M.restorePreamble.transactionData) } }) : W;
          }(R, U);
        }
      }, 920: (s, i, u) => {
        var d = u(9675), f = u(8859), p = u(4803), g = u(507), b = u(2271) || g || p;
        s.exports = function() {
          var h, m = { assert: function(c) {
            if (!m.has(c)) throw new d("Side channel does not contain " + f(c));
          }, delete: function(c) {
            return !!h && h.delete(c);
          }, get: function(c) {
            return h && h.get(c);
          }, has: function(c) {
            return !!h && h.has(c);
          }, set: function(c, w) {
            h || (h = b()), h.set(c, w);
          } };
          return m;
        };
      }, 1002: (s) => {
        s.exports = Function.prototype.apply;
      }, 1064: (s, i, u) => {
        var d = u(9612);
        s.exports = d.getPrototypeOf || null;
      }, 1083: (s, i, u) => {
        var d = u(1568), f = u(8835), p = s.exports;
        for (var g in d) d.hasOwnProperty(g) && (p[g] = d[g]);
        function b(h) {
          if (typeof h == "string" && (h = f.parse(h)), h.protocol || (h.protocol = "https:"), h.protocol !== "https:") throw new Error('Protocol "' + h.protocol + '" not supported. Expected "https:"');
          return h;
        }
        p.request = function(h, m) {
          return h = b(h), d.request.call(this, h, m);
        }, p.get = function(h, m) {
          return h = b(h), d.get.call(this, h, m);
        };
      }, 1135: (s) => {
        s.exports = function(i) {
          return i && typeof i == "object" && typeof i.copy == "function" && typeof i.fill == "function" && typeof i.readUInt8 == "function";
        };
      }, 1237: (s) => {
        s.exports = EvalError;
      }, 1270: function(s, i, u) {
        var d;
        s = u.nmd(s), function() {
          i && i.nodeType, s && s.nodeType;
          var f = typeof u.g == "object" && u.g;
          f.global !== f && f.window !== f && f.self;
          var p, g = 2147483647, b = 36, h = /^xn--/, m = /[^\x20-\x7E]/, c = /[\x2E\u3002\uFF0E\uFF61]/g, w = { overflow: "Overflow: input needs wider integers to process", "not-basic": "Illegal input >= 0x80 (not a basic code point)", "invalid-input": "Invalid input" }, T = Math.floor, P = String.fromCharCode;
          function k(x) {
            throw new RangeError(w[x]);
          }
          function R(x, B) {
            for (var W = x.length, lt = []; W--; ) lt[W] = B(x[W]);
            return lt;
          }
          function F(x, B) {
            var W = x.split("@"), lt = "";
            return W.length > 1 && (lt = W[0] + "@", x = W[1]), lt + R((x = x.replace(c, ".")).split("."), B).join(".");
          }
          function v(x) {
            for (var B, W, lt = [], pt = 0, at = x.length; pt < at; ) (B = x.charCodeAt(pt++)) >= 55296 && B <= 56319 && pt < at ? (64512 & (W = x.charCodeAt(pt++))) == 56320 ? lt.push(((1023 & B) << 10) + (1023 & W) + 65536) : (lt.push(B), pt--) : lt.push(B);
            return lt;
          }
          function U(x) {
            return R(x, function(B) {
              var W = "";
              return B > 65535 && (W += P((B -= 65536) >>> 10 & 1023 | 55296), B = 56320 | 1023 & B), W += P(B);
            }).join("");
          }
          function M(x) {
            return x - 48 < 10 ? x - 22 : x - 65 < 26 ? x - 65 : x - 97 < 26 ? x - 97 : b;
          }
          function Z(x, B) {
            return x + 22 + 75 * (x < 26) - ((B != 0) << 5);
          }
          function D(x, B, W) {
            var lt = 0;
            for (x = W ? T(x / 700) : x >> 1, x += T(x / B); x > 455; lt += b) x = T(x / 35);
            return T(lt + 36 * x / (x + 38));
          }
          function V(x) {
            var B, W, lt, pt, at, rt, ot, X, I, nt, ft = [], dt = x.length, Lt = 0, $ = 128, it = 72;
            for ((W = x.lastIndexOf("-")) < 0 && (W = 0), lt = 0; lt < W; ++lt) x.charCodeAt(lt) >= 128 && k("not-basic"), ft.push(x.charCodeAt(lt));
            for (pt = W > 0 ? W + 1 : 0; pt < dt; ) {
              for (at = Lt, rt = 1, ot = b; pt >= dt && k("invalid-input"), ((X = M(x.charCodeAt(pt++))) >= b || X > T((g - Lt) / rt)) && k("overflow"), Lt += X * rt, !(X < (I = ot <= it ? 1 : ot >= it + 26 ? 26 : ot - it)); ot += b) rt > T(g / (nt = b - I)) && k("overflow"), rt *= nt;
              it = D(Lt - at, B = ft.length + 1, at == 0), T(Lt / B) > g - $ && k("overflow"), $ += T(Lt / B), Lt %= B, ft.splice(Lt++, 0, $);
            }
            return U(ft);
          }
          function S(x) {
            var B, W, lt, pt, at, rt, ot, X, I, nt, ft, dt, Lt, $, it, mt = [];
            for (dt = (x = v(x)).length, B = 128, W = 0, at = 72, rt = 0; rt < dt; ++rt) (ft = x[rt]) < 128 && mt.push(P(ft));
            for (lt = pt = mt.length, pt && mt.push("-"); lt < dt; ) {
              for (ot = g, rt = 0; rt < dt; ++rt) (ft = x[rt]) >= B && ft < ot && (ot = ft);
              for (ot - B > T((g - W) / (Lt = lt + 1)) && k("overflow"), W += (ot - B) * Lt, B = ot, rt = 0; rt < dt; ++rt) if ((ft = x[rt]) < B && ++W > g && k("overflow"), ft == B) {
                for (X = W, I = b; !(X < (nt = I <= at ? 1 : I >= at + 26 ? 26 : I - at)); I += b) it = X - nt, $ = b - nt, mt.push(P(Z(nt + it % $, 0))), X = T(it / $);
                mt.push(P(Z(X, 0))), at = D(W, Lt, lt == pt), W = 0, ++lt;
              }
              ++W, ++B;
            }
            return mt.join("");
          }
          p = { version: "1.4.1", ucs2: { decode: v, encode: U }, decode: V, encode: S, toASCII: function(x) {
            return F(x, function(B) {
              return m.test(B) ? "xn--" + S(B) : B;
            });
          }, toUnicode: function(x) {
            return F(x, function(B) {
              return h.test(B) ? V(B.slice(4).toLowerCase()) : B;
            });
          } }, (d = (function() {
            return p;
          }).call(i, u, i, s)) === void 0 || (s.exports = d);
        }();
      }, 1293: (s, i, u) => {
        var d = u(5546), f = u(2708);
        s.exports = { parse: function(p) {
          var g = d.parse(p.toString());
          return f.compile(g);
        } };
      }, 1333: (s) => {
        s.exports = function() {
          if (typeof Symbol != "function" || typeof Object.getOwnPropertySymbols != "function") return false;
          if (typeof Symbol.iterator == "symbol") return true;
          var i = {}, u = Symbol("test"), d = Object(u);
          if (typeof u == "string" || Object.prototype.toString.call(u) !== "[object Symbol]" || Object.prototype.toString.call(d) !== "[object Symbol]") return false;
          for (var f in i[u] = 42, i) return false;
          if (typeof Object.keys == "function" && Object.keys(i).length !== 0 || typeof Object.getOwnPropertyNames == "function" && Object.getOwnPropertyNames(i).length !== 0) return false;
          var p = Object.getOwnPropertySymbols(i);
          if (p.length !== 1 || p[0] !== u || !Object.prototype.propertyIsEnumerable.call(i, u)) return false;
          if (typeof Object.getOwnPropertyDescriptor == "function") {
            var g = Object.getOwnPropertyDescriptor(i, u);
            if (g.value !== 42 || g.enumerable !== true) return false;
          }
          return true;
        };
      }, 1430: function(s, i, u) {
        var d, f;
        (function(p, g) {
          s.exports ? s.exports = g() : (f = typeof (d = g) == "function" ? d.call(i, u, i, s) : d) === void 0 || (s.exports = f);
        })(0, function(p) {
          var g = p && p.IPv6;
          return { best: function(b) {
            var h, m, c = b.toLowerCase().split(":"), w = c.length, T = 8;
            for (c[0] === "" && c[1] === "" && c[2] === "" ? (c.shift(), c.shift()) : c[0] === "" && c[1] === "" ? c.shift() : c[w - 1] === "" && c[w - 2] === "" && c.pop(), c[(w = c.length) - 1].indexOf(".") !== -1 && (T = 7), h = 0; h < w && c[h] !== ""; h++) ;
            if (h < T) for (c.splice(h, 1, "0000"); c.length < T; ) c.splice(h, 0, "0000");
            for (var P = 0; P < T; P++) {
              m = c[P].split("");
              for (var k = 0; k < 3 && m[0] === "0" && m.length > 1; k++) m.splice(0, 1);
              c[P] = m.join("");
            }
            var R = -1, F = 0, v = 0, U = -1, M = false;
            for (P = 0; P < T; P++) M ? c[P] === "0" ? v += 1 : (M = false, v > F && (R = U, F = v)) : c[P] === "0" && (M = true, U = P, v = 1);
            v > F && (R = U, F = v), F > 1 && c.splice(R, F, ""), w = c.length;
            var Z = "";
            for (c[0] === "" && (Z = ":"), P = 0; P < w && (Z += c[P], P !== w - 1); P++) Z += ":";
            return c[w - 1] === "" && (Z += ":"), Z;
          }, noConflict: function() {
            return p.IPv6 === this && (p.IPv6 = g), this;
          } };
        });
      }, 1514: (s) => {
        s.exports = Math.abs;
      }, 1568: (s, i, u) => {
        var d = u(5537), f = u(6917), p = u(7510), g = u(6866), b = u(8835), h = i;
        h.request = function(m, c) {
          m = typeof m == "string" ? b.parse(m) : p(m);
          var w = u.g.location.protocol.search(/^https?:$/) === -1 ? "http:" : "", T = m.protocol || w, P = m.hostname || m.host, k = m.port, R = m.path || "/";
          P && P.indexOf(":") !== -1 && (P = "[" + P + "]"), m.url = (P ? T + "//" + P : "") + (k ? ":" + k : "") + R, m.method = (m.method || "GET").toUpperCase(), m.headers = m.headers || {};
          var F = new d(m);
          return c && F.on("response", c), F;
        }, h.get = function(m, c) {
          var w = h.request(m, c);
          return w.end(), w;
        }, h.ClientRequest = d, h.IncomingMessage = f.IncomingMessage, h.Agent = function() {
        }, h.Agent.defaultMaxSockets = 4, h.globalAgent = new h.Agent(), h.STATUS_CODES = g, h.METHODS = ["CHECKOUT", "CONNECT", "COPY", "DELETE", "GET", "HEAD", "LOCK", "M-SEARCH", "MERGE", "MKACTIVITY", "MKCOL", "MOVE", "NOTIFY", "OPTIONS", "PATCH", "POST", "PROPFIND", "PROPPATCH", "PURGE", "PUT", "REPORT", "SEARCH", "SUBSCRIBE", "TRACE", "UNLOCK", "UNSUBSCRIBE"];
      }, 1731: (s, i, u) => {
        var d = u(8287).Buffer, f = u(8835).parse, p = u(7007), g = u(1083), b = u(1568), h = u(537), m = ["pfx", "key", "passphrase", "cert", "ca", "ciphers", "rejectUnauthorized", "secureProtocol", "servername", "checkServerIdentity"], c = [239, 187, 191], w = 262144, T = /^(cookie|authorization)$/i;
        function P(F, v) {
          var U = P.CONNECTING, M = v && v.headers, Z = false;
          Object.defineProperty(this, "readyState", { get: function() {
            return U;
          } }), Object.defineProperty(this, "url", { get: function() {
            return F;
          } });
          var D, V = this;
          function S(X) {
            U !== P.CLOSED && (U = P.CONNECTING, rt("error", new k("error", { message: X })), pt && (F = pt, pt = null, Z = false), setTimeout(function() {
              U !== P.CONNECTING || V.connectionInProgress || (V.connectionInProgress = true, at());
            }, V.reconnectInterval));
          }
          V.reconnectInterval = 1e3, V.connectionInProgress = false;
          var x = "";
          M && M["Last-Event-ID"] && (x = M["Last-Event-ID"], delete M["Last-Event-ID"]);
          var B = false, W = "", lt = "", pt = null;
          function at() {
            var X = f(F), I = X.protocol === "https:";
            if (X.headers = { "Cache-Control": "no-cache", Accept: "text/event-stream" }, x && (X.headers["Last-Event-ID"] = x), M) {
              var nt = Z ? function(mt) {
                var Ot = {};
                for (var bt in mt) T.test(bt) || (Ot[bt] = mt[bt]);
                return Ot;
              }(M) : M;
              for (var ft in nt) {
                var dt = nt[ft];
                dt && (X.headers[ft] = dt);
              }
            }
            if (X.rejectUnauthorized = !(v && !v.rejectUnauthorized), v && v.createConnection !== void 0 && (X.createConnection = v.createConnection), v && v.proxy) {
              var Lt = f(v.proxy);
              I = Lt.protocol === "https:", X.protocol = I ? "https:" : "http:", X.path = F, X.headers.Host = X.host, X.hostname = Lt.hostname, X.host = Lt.host, X.port = Lt.port;
            }
            if (v && v.https) {
              for (var $ in v.https) if (m.indexOf($) !== -1) {
                var it = v.https[$];
                it !== void 0 && (X[$] = it);
              }
            }
            v && v.withCredentials !== void 0 && (X.withCredentials = v.withCredentials), D = (I ? g : b).request(X, function(mt) {
              if (V.connectionInProgress = false, mt.statusCode === 500 || mt.statusCode === 502 || mt.statusCode === 503 || mt.statusCode === 504) return rt("error", new k("error", { status: mt.statusCode, message: mt.statusMessage })), void S();
              if (mt.statusCode === 301 || mt.statusCode === 302 || mt.statusCode === 307) {
                var Ot = mt.headers.location;
                if (!Ot) return void rt("error", new k("error", { status: mt.statusCode, message: mt.statusMessage }));
                var bt = new URL(F).origin, xt = new URL(Ot).origin;
                return Z = bt !== xt, mt.statusCode === 307 && (pt = F), F = Ot, void process.nextTick(at);
              }
              if (mt.statusCode !== 200) return rt("error", new k("error", { status: mt.statusCode, message: mt.statusMessage })), V.close();
              var Ct, Tt;
              U = P.OPEN, mt.on("close", function() {
                mt.removeAllListeners("close"), mt.removeAllListeners("end"), S();
              }), mt.on("end", function() {
                mt.removeAllListeners("close"), mt.removeAllListeners("end"), S();
              }), rt("open", new k("open"));
              var Bt = 0, At = -1, Ut = 0, Vt = 0;
              mt.on("data", function(oe) {
                Ct ? (oe.length > Ct.length - Vt && ((Ut = 2 * Ct.length + oe.length) > w && (Ut = Ct.length + oe.length + w), Tt = d.alloc(Ut), Ct.copy(Tt, 0, 0, Vt), Ct = Tt), oe.copy(Ct, Vt), Vt += oe.length) : (function(tt) {
                  return c.every(function(H, K) {
                    return tt[K] === H;
                  });
                }(Ct = oe) && (Ct = Ct.slice(c.length)), Vt = Ct.length);
                for (var te = 0, yt = Vt; te < yt; ) {
                  B && (Ct[te] === 10 && ++te, B = false);
                  for (var Mt, O = -1, z = At, J = Bt; O < 0 && J < yt; ++J) (Mt = Ct[J]) === 58 ? z < 0 && (z = J - te) : Mt === 13 ? (B = true, O = J - te) : Mt === 10 && (O = J - te);
                  if (O < 0) {
                    Bt = yt - te, At = z;
                    break;
                  }
                  Bt = 0, At = -1, ot(Ct, te, z, O), te += O + 1;
                }
                te === yt ? (Ct = void 0, Vt = 0) : te > 0 && (Ct = Ct.slice(te, Vt), Vt = Ct.length);
              });
            }), D.on("error", function(mt) {
              V.connectionInProgress = false, S(mt.message);
            }), D.setNoDelay && D.setNoDelay(true), D.end();
          }
          function rt() {
            V.listeners(arguments[0]).length > 0 && V.emit.apply(V, arguments);
          }
          function ot(X, I, nt, ft) {
            if (ft === 0) {
              if (W.length > 0) {
                var dt = lt || "message";
                rt(dt, new R(dt, { data: W.slice(0, -1), lastEventId: x, origin: new URL(F).origin })), W = "";
              }
              lt = void 0;
            } else if (nt > 0) {
              var Lt = nt < 0, $ = 0, it = X.slice(I, I + (Lt ? ft : nt)).toString();
              I += $ = Lt ? ft : X[I + nt + 1] !== 32 ? nt + 1 : nt + 2;
              var mt = ft - $, Ot = X.slice(I, I + mt).toString();
              if (it === "data") W += Ot + `
`;
              else if (it === "event") lt = Ot;
              else if (it === "id") x = Ot;
              else if (it === "retry") {
                var bt = parseInt(Ot, 10);
                Number.isNaN(bt) || (V.reconnectInterval = bt);
              }
            }
          }
          at(), this._close = function() {
            U !== P.CLOSED && (U = P.CLOSED, D.abort && D.abort(), D.xhr && D.xhr.abort && D.xhr.abort());
          };
        }
        function k(F, v) {
          if (Object.defineProperty(this, "type", { writable: false, value: F, enumerable: true }), v) for (var U in v) v.hasOwnProperty(U) && Object.defineProperty(this, U, { writable: false, value: v[U], enumerable: true });
        }
        function R(F, v) {
          for (var U in Object.defineProperty(this, "type", { writable: false, value: F, enumerable: true }), v) v.hasOwnProperty(U) && Object.defineProperty(this, U, { writable: false, value: v[U], enumerable: true });
        }
        s.exports = P, h.inherits(P, p.EventEmitter), P.prototype.constructor = P, ["open", "error", "message"].forEach(function(F) {
          Object.defineProperty(P.prototype, "on" + F, { get: function() {
            var v = this.listeners(F)[0];
            return v ? v._listener ? v._listener : v : void 0;
          }, set: function(v) {
            this.removeAllListeners(F), this.addEventListener(F, v);
          } });
        }), Object.defineProperty(P, "CONNECTING", { enumerable: true, value: 0 }), Object.defineProperty(P, "OPEN", { enumerable: true, value: 1 }), Object.defineProperty(P, "CLOSED", { enumerable: true, value: 2 }), P.prototype.CONNECTING = 0, P.prototype.OPEN = 1, P.prototype.CLOSED = 2, P.prototype.close = function() {
          this._close();
        }, P.prototype.addEventListener = function(F, v) {
          typeof v == "function" && (v._listener = v, this.on(F, v));
        }, P.prototype.dispatchEvent = function(F) {
          if (!F.type) throw new Error("UNSPECIFIED_EVENT_TYPE_ERR");
          this.emit(F.type, F.detail);
        }, P.prototype.removeEventListener = function(F, v) {
          typeof v == "function" && (v._listener = void 0, this.removeListener(F, v));
        };
      }, 1924: (s, i, u) => {
        u.r(i), u.d(i, { StellarBase: () => g, default: () => b, httpClient: () => d.ok });
        var d = u(9983), f = u(4356), p = {};
        for (const h in f) ["default", "StellarBase", "httpClient"].indexOf(h) < 0 && (p[h] = () => f[h]);
        u.d(i, p);
        var g = u(8950);
        const b = (s = u.hmd(s)).exports;
      }, 2205: (s, i, u) => {
        var d = u(6743), f = u(1002), p = u(3144);
        s.exports = function() {
          return p(d, f, arguments);
        };
      }, 2271: (s, i, u) => {
        var d = u(453), f = u(6556), p = u(8859), g = u(507), b = u(9675), h = d("%WeakMap%", true), m = f("WeakMap.prototype.get", true), c = f("WeakMap.prototype.set", true), w = f("WeakMap.prototype.has", true), T = f("WeakMap.prototype.delete", true);
        s.exports = h ? function() {
          var P, k, R = { assert: function(F) {
            if (!R.has(F)) throw new b("Side channel does not contain " + p(F));
          }, delete: function(F) {
            if (h && F && (typeof F == "object" || typeof F == "function")) {
              if (P) return T(P, F);
            } else if (g && k) return k.delete(F);
            return false;
          }, get: function(F) {
            return h && F && (typeof F == "object" || typeof F == "function") && P ? m(P, F) : k && k.get(F);
          }, has: function(F) {
            return h && F && (typeof F == "object" || typeof F == "function") && P ? w(P, F) : !!k && k.has(F);
          }, set: function(F, v) {
            h && F && (typeof F == "object" || typeof F == "function") ? (P || (P = new h()), c(P, F, v)) : g && (k || (k = g()), k.set(F, v));
          } };
          return R;
        } : g;
      }, 2634: () => {
      }, 2642: (s, i, u) => {
        var d = u(7720), f = Object.prototype.hasOwnProperty, p = Array.isArray, g = { allowDots: false, allowEmptyArrays: false, allowPrototypes: false, allowSparse: false, arrayLimit: 20, charset: "utf-8", charsetSentinel: false, comma: false, decodeDotInKeys: false, decoder: d.decode, delimiter: "&", depth: 5, duplicates: "combine", ignoreQueryPrefix: false, interpretNumericEntities: false, parameterLimit: 1e3, parseArrays: true, plainObjects: false, strictDepth: false, strictNullHandling: false, throwOnLimitExceeded: false }, b = function(c) {
          return c.replace(/&#(\d+);/g, function(w, T) {
            return String.fromCharCode(parseInt(T, 10));
          });
        }, h = function(c, w, T) {
          if (c && typeof c == "string" && w.comma && c.indexOf(",") > -1) return c.split(",");
          if (w.throwOnLimitExceeded && T >= w.arrayLimit) throw new RangeError("Array limit exceeded. Only " + w.arrayLimit + " element" + (w.arrayLimit === 1 ? "" : "s") + " allowed in an array.");
          return c;
        }, m = function(c, w, T, P) {
          if (c) {
            var k = T.allowDots ? c.replace(/\.([^.[]+)/g, "[$1]") : c, R = /(\[[^[\]]*])/g, F = T.depth > 0 && /(\[[^[\]]*])/.exec(k), v = F ? k.slice(0, F.index) : k, U = [];
            if (v) {
              if (!T.plainObjects && f.call(Object.prototype, v) && !T.allowPrototypes) return;
              U.push(v);
            }
            for (var M = 0; T.depth > 0 && (F = R.exec(k)) !== null && M < T.depth; ) {
              if (M += 1, !T.plainObjects && f.call(Object.prototype, F[1].slice(1, -1)) && !T.allowPrototypes) return;
              U.push(F[1]);
            }
            if (F) {
              if (T.strictDepth === true) throw new RangeError("Input depth exceeded depth option of " + T.depth + " and strictDepth is true");
              U.push("[" + k.slice(F.index) + "]");
            }
            return function(Z, D, V, S) {
              var x = 0;
              if (Z.length > 0 && Z[Z.length - 1] === "[]") {
                var B = Z.slice(0, -1).join("");
                x = Array.isArray(D) && D[B] ? D[B].length : 0;
              }
              for (var W = S ? D : h(D, V, x), lt = Z.length - 1; lt >= 0; --lt) {
                var pt, at = Z[lt];
                if (at === "[]" && V.parseArrays) pt = V.allowEmptyArrays && (W === "" || V.strictNullHandling && W === null) ? [] : d.combine([], W);
                else {
                  pt = V.plainObjects ? { __proto__: null } : {};
                  var rt = at.charAt(0) === "[" && at.charAt(at.length - 1) === "]" ? at.slice(1, -1) : at, ot = V.decodeDotInKeys ? rt.replace(/%2E/g, ".") : rt, X = parseInt(ot, 10);
                  V.parseArrays || ot !== "" ? !isNaN(X) && at !== ot && String(X) === ot && X >= 0 && V.parseArrays && X <= V.arrayLimit ? (pt = [])[X] = W : ot !== "__proto__" && (pt[ot] = W) : pt = { 0: W };
                }
                W = pt;
              }
              return W;
            }(U, w, T, P);
          }
        };
        s.exports = function(c, w) {
          var T = function(M) {
            if (!M) return g;
            if (M.allowEmptyArrays !== void 0 && typeof M.allowEmptyArrays != "boolean") throw new TypeError("`allowEmptyArrays` option can only be `true` or `false`, when provided");
            if (M.decodeDotInKeys !== void 0 && typeof M.decodeDotInKeys != "boolean") throw new TypeError("`decodeDotInKeys` option can only be `true` or `false`, when provided");
            if (M.decoder !== null && M.decoder !== void 0 && typeof M.decoder != "function") throw new TypeError("Decoder has to be a function.");
            if (M.charset !== void 0 && M.charset !== "utf-8" && M.charset !== "iso-8859-1") throw new TypeError("The charset option must be either utf-8, iso-8859-1, or undefined");
            if (M.throwOnLimitExceeded !== void 0 && typeof M.throwOnLimitExceeded != "boolean") throw new TypeError("`throwOnLimitExceeded` option must be a boolean");
            var Z = M.charset === void 0 ? g.charset : M.charset, D = M.duplicates === void 0 ? g.duplicates : M.duplicates;
            if (D !== "combine" && D !== "first" && D !== "last") throw new TypeError("The duplicates option must be either combine, first, or last");
            return { allowDots: M.allowDots === void 0 ? M.decodeDotInKeys === true || g.allowDots : !!M.allowDots, allowEmptyArrays: typeof M.allowEmptyArrays == "boolean" ? !!M.allowEmptyArrays : g.allowEmptyArrays, allowPrototypes: typeof M.allowPrototypes == "boolean" ? M.allowPrototypes : g.allowPrototypes, allowSparse: typeof M.allowSparse == "boolean" ? M.allowSparse : g.allowSparse, arrayLimit: typeof M.arrayLimit == "number" ? M.arrayLimit : g.arrayLimit, charset: Z, charsetSentinel: typeof M.charsetSentinel == "boolean" ? M.charsetSentinel : g.charsetSentinel, comma: typeof M.comma == "boolean" ? M.comma : g.comma, decodeDotInKeys: typeof M.decodeDotInKeys == "boolean" ? M.decodeDotInKeys : g.decodeDotInKeys, decoder: typeof M.decoder == "function" ? M.decoder : g.decoder, delimiter: typeof M.delimiter == "string" || d.isRegExp(M.delimiter) ? M.delimiter : g.delimiter, depth: typeof M.depth == "number" || M.depth === false ? +M.depth : g.depth, duplicates: D, ignoreQueryPrefix: M.ignoreQueryPrefix === true, interpretNumericEntities: typeof M.interpretNumericEntities == "boolean" ? M.interpretNumericEntities : g.interpretNumericEntities, parameterLimit: typeof M.parameterLimit == "number" ? M.parameterLimit : g.parameterLimit, parseArrays: M.parseArrays !== false, plainObjects: typeof M.plainObjects == "boolean" ? M.plainObjects : g.plainObjects, strictDepth: typeof M.strictDepth == "boolean" ? !!M.strictDepth : g.strictDepth, strictNullHandling: typeof M.strictNullHandling == "boolean" ? M.strictNullHandling : g.strictNullHandling, throwOnLimitExceeded: typeof M.throwOnLimitExceeded == "boolean" && M.throwOnLimitExceeded };
          }(w);
          if (c === "" || c == null) return T.plainObjects ? { __proto__: null } : {};
          for (var P = typeof c == "string" ? function(M, Z) {
            var D = { __proto__: null }, V = Z.ignoreQueryPrefix ? M.replace(/^\?/, "") : M;
            V = V.replace(/%5B/gi, "[").replace(/%5D/gi, "]");
            var S = Z.parameterLimit === 1 / 0 ? void 0 : Z.parameterLimit, x = V.split(Z.delimiter, Z.throwOnLimitExceeded ? S + 1 : S);
            if (Z.throwOnLimitExceeded && x.length > S) throw new RangeError("Parameter limit exceeded. Only " + S + " parameter" + (S === 1 ? "" : "s") + " allowed.");
            var B, W = -1, lt = Z.charset;
            if (Z.charsetSentinel) for (B = 0; B < x.length; ++B) x[B].indexOf("utf8=") === 0 && (x[B] === "utf8=%E2%9C%93" ? lt = "utf-8" : x[B] === "utf8=%26%2310003%3B" && (lt = "iso-8859-1"), W = B, B = x.length);
            for (B = 0; B < x.length; ++B) if (B !== W) {
              var pt, at, rt = x[B], ot = rt.indexOf("]="), X = ot === -1 ? rt.indexOf("=") : ot + 1;
              X === -1 ? (pt = Z.decoder(rt, g.decoder, lt, "key"), at = Z.strictNullHandling ? null : "") : (pt = Z.decoder(rt.slice(0, X), g.decoder, lt, "key"), at = d.maybeMap(h(rt.slice(X + 1), Z, p(D[pt]) ? D[pt].length : 0), function(nt) {
                return Z.decoder(nt, g.decoder, lt, "value");
              })), at && Z.interpretNumericEntities && lt === "iso-8859-1" && (at = b(String(at))), rt.indexOf("[]=") > -1 && (at = p(at) ? [at] : at);
              var I = f.call(D, pt);
              I && Z.duplicates === "combine" ? D[pt] = d.combine(D[pt], at) : I && Z.duplicates !== "last" || (D[pt] = at);
            }
            return D;
          }(c, T) : c, k = T.plainObjects ? { __proto__: null } : {}, R = Object.keys(P), F = 0; F < R.length; ++F) {
            var v = R[F], U = m(v, P[v], T, typeof c == "string");
            k = d.merge(k, U, T);
          }
          return T.allowSparse === true ? k : d.compact(k);
        };
      }, 2682: (s, i, u) => {
        var d = u(9600), f = Object.prototype.toString, p = Object.prototype.hasOwnProperty;
        s.exports = function(g, b, h) {
          if (!d(b)) throw new TypeError("iterator must be a function");
          var m, c;
          arguments.length >= 3 && (m = h), c = g, f.call(c) === "[object Array]" ? function(w, T, P) {
            for (var k = 0, R = w.length; k < R; k++) p.call(w, k) && (P == null ? T(w[k], k, w) : T.call(P, w[k], k, w));
          }(g, b, m) : typeof g == "string" ? function(w, T, P) {
            for (var k = 0, R = w.length; k < R; k++) P == null ? T(w.charAt(k), k, w) : T.call(P, w.charAt(k), k, w);
          }(g, b, m) : function(w, T, P) {
            for (var k in w) p.call(w, k) && (P == null ? T(w[k], k, w) : T.call(P, w[k], k, w));
          }(g, b, m);
        };
      }, 2708: (s) => {
        s.exports = { compile: function(i) {
          var u = [], d = [], f = "", p = /* @__PURE__ */ Object.create(null), g = p;
          return function(F) {
            for (var v, U = 0; U < F.length; U++) switch ((v = F[U]).type) {
              case "Assign":
                h(v);
                break;
              case "ObjectPath":
                T(v);
                break;
              case "ArrayPath":
                P(v);
            }
            return p;
          }(i);
          function b(F, v, U) {
            var M = new Error(F);
            throw M.line = v, M.column = U, M;
          }
          function h(F) {
            var v, U = F.key, M = F.value, Z = F.line, D = F.column;
            v = f ? f + "." + U : U, g[U] !== void 0 && b("Cannot redefine existing key '" + v + "'.", Z, D), g[U] = c(M), m(v) || (u.push(v), d.push(v));
          }
          function m(F) {
            return u.indexOf(F) !== -1;
          }
          function c(F) {
            return F.type === "Array" ? function(v) {
              for (var U = null, M = 0; M < v.length; M++) {
                var Z = v[M];
                U === null ? U = Z.type : Z.type !== U && b("Cannot add value of type " + Z.type + " to array of type " + U + ".", Z.line, Z.column);
              }
              return v.map(c);
            }(F.value) : F.type === "InlineTable" ? w(F.value) : F.value;
          }
          function w(F) {
            for (var v = /* @__PURE__ */ Object.create(null), U = 0; U < F.length; U++) {
              var M = F[U];
              M.value.type === "InlineTable" ? v[M.key] = w(M.value.value) : M.type === "InlineTableValue" && (v[M.key] = c(M.value));
            }
            return v;
          }
          function T(F) {
            var v = F.value, U = v.map(R).join("."), M = F.line, Z = F.column;
            m(U) && b("Cannot redefine existing key '" + v + "'.", M, Z), u.push(U), g = k(p, v, /* @__PURE__ */ Object.create(null), M, Z), f = v;
          }
          function P(F) {
            var v = F.value, U = v.map(R).join("."), M = F.line, Z = F.column;
            if (m(U) || u.push(U), (u = u.filter(function(V) {
              return V.indexOf(U) !== 0;
            })).push(U), g = k(p, v, [], M, Z), f = U, g instanceof Array) {
              var D = /* @__PURE__ */ Object.create(null);
              g.push(D), g = D;
            } else b("Cannot redefine existing key '" + v + "'.", M, Z);
          }
          function k(F, v, U, M, Z) {
            for (var D = [], V = "", S = (v.join("."), F), x = 0; x < v.length; x++) {
              var B = v[x];
              D.push(B), V = D.join("."), S[B] === void 0 ? x === v.length - 1 ? S[B] = U : S[B] = /* @__PURE__ */ Object.create(null) : x !== v.length - 1 && d.indexOf(V) > -1 && b("Cannot redefine existing key '" + V + "'.", M, Z), (S = S[B]) instanceof Array && S.length && x < v.length - 1 && (S = S[S.length - 1]);
            }
            return S;
          }
          function R(F) {
            return F.indexOf(".") > -1 ? '"' + F + '"' : F;
          }
        } };
      }, 2726: (s, i, u) => {
        function d(T, P) {
          var k = Object.keys(T);
          if (Object.getOwnPropertySymbols) {
            var R = Object.getOwnPropertySymbols(T);
            P && (R = R.filter(function(F) {
              return Object.getOwnPropertyDescriptor(T, F).enumerable;
            })), k.push.apply(k, R);
          }
          return k;
        }
        function f(T) {
          for (var P = 1; P < arguments.length; P++) {
            var k = arguments[P] != null ? arguments[P] : {};
            P % 2 ? d(Object(k), true).forEach(function(R) {
              p(T, R, k[R]);
            }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(T, Object.getOwnPropertyDescriptors(k)) : d(Object(k)).forEach(function(R) {
              Object.defineProperty(T, R, Object.getOwnPropertyDescriptor(k, R));
            });
          }
          return T;
        }
        function p(T, P, k) {
          return (P = b(P)) in T ? Object.defineProperty(T, P, { value: k, enumerable: true, configurable: true, writable: true }) : T[P] = k, T;
        }
        function g(T, P) {
          for (var k = 0; k < P.length; k++) {
            var R = P[k];
            R.enumerable = R.enumerable || false, R.configurable = true, "value" in R && (R.writable = true), Object.defineProperty(T, b(R.key), R);
          }
        }
        function b(T) {
          var P = function(k, R) {
            if (typeof k != "object" || k === null) return k;
            var F = k[Symbol.toPrimitive];
            if (F !== void 0) {
              var v = F.call(k, R);
              if (typeof v != "object") return v;
              throw new TypeError("@@toPrimitive must return a primitive value.");
            }
            return (R === "string" ? String : Number)(k);
          }(T, "string");
          return typeof P == "symbol" ? P : String(P);
        }
        var h = u(8287).Buffer, m = u(5340).inspect, c = m && m.custom || "inspect";
        function w(T, P, k) {
          h.prototype.copy.call(T, P, k);
        }
        s.exports = function() {
          function T() {
            (function(R, F) {
              if (!(R instanceof F)) throw new TypeError("Cannot call a class as a function");
            })(this, T), this.head = null, this.tail = null, this.length = 0;
          }
          var P, k;
          return P = T, (k = [{ key: "push", value: function(R) {
            var F = { data: R, next: null };
            this.length > 0 ? this.tail.next = F : this.head = F, this.tail = F, ++this.length;
          } }, { key: "unshift", value: function(R) {
            var F = { data: R, next: this.head };
            this.length === 0 && (this.tail = F), this.head = F, ++this.length;
          } }, { key: "shift", value: function() {
            if (this.length !== 0) {
              var R = this.head.data;
              return this.length === 1 ? this.head = this.tail = null : this.head = this.head.next, --this.length, R;
            }
          } }, { key: "clear", value: function() {
            this.head = this.tail = null, this.length = 0;
          } }, { key: "join", value: function(R) {
            if (this.length === 0) return "";
            for (var F = this.head, v = "" + F.data; F = F.next; ) v += R + F.data;
            return v;
          } }, { key: "concat", value: function(R) {
            if (this.length === 0) return h.alloc(0);
            for (var F = h.allocUnsafe(R >>> 0), v = this.head, U = 0; v; ) w(v.data, F, U), U += v.data.length, v = v.next;
            return F;
          } }, { key: "consume", value: function(R, F) {
            var v;
            return R < this.head.data.length ? (v = this.head.data.slice(0, R), this.head.data = this.head.data.slice(R)) : v = R === this.head.data.length ? this.shift() : F ? this._getString(R) : this._getBuffer(R), v;
          } }, { key: "first", value: function() {
            return this.head.data;
          } }, { key: "_getString", value: function(R) {
            var F = this.head, v = 1, U = F.data;
            for (R -= U.length; F = F.next; ) {
              var M = F.data, Z = R > M.length ? M.length : R;
              if (Z === M.length ? U += M : U += M.slice(0, R), (R -= Z) === 0) {
                Z === M.length ? (++v, F.next ? this.head = F.next : this.head = this.tail = null) : (this.head = F, F.data = M.slice(Z));
                break;
              }
              ++v;
            }
            return this.length -= v, U;
          } }, { key: "_getBuffer", value: function(R) {
            var F = h.allocUnsafe(R), v = this.head, U = 1;
            for (v.data.copy(F), R -= v.data.length; v = v.next; ) {
              var M = v.data, Z = R > M.length ? M.length : R;
              if (M.copy(F, F.length - R, 0, Z), (R -= Z) === 0) {
                Z === M.length ? (++U, v.next ? this.head = v.next : this.head = this.tail = null) : (this.head = v, v.data = M.slice(Z));
                break;
              }
              ++U;
            }
            return this.length -= U, F;
          } }, { key: c, value: function(R, F) {
            return m(this, f(f({}, F), {}, { depth: 0, customInspect: false }));
          } }]) && g(P.prototype, k), Object.defineProperty(P, "prototype", { writable: false }), T;
        }();
      }, 2861: (s, i, u) => {
        var d = u(8287), f = d.Buffer;
        function p(b, h) {
          for (var m in b) h[m] = b[m];
        }
        function g(b, h, m) {
          return f(b, h, m);
        }
        f.from && f.alloc && f.allocUnsafe && f.allocUnsafeSlow ? s.exports = d : (p(d, i), i.Buffer = g), g.prototype = Object.create(f.prototype), p(f, g), g.from = function(b, h, m) {
          if (typeof b == "number") throw new TypeError("Argument must not be a number");
          return f(b, h, m);
        }, g.alloc = function(b, h, m) {
          if (typeof b != "number") throw new TypeError("Argument must be a number");
          var c = f(b);
          return h !== void 0 ? typeof m == "string" ? c.fill(h, m) : c.fill(h) : c.fill(0), c;
        }, g.allocUnsafe = function(b) {
          if (typeof b != "number") throw new TypeError("Argument must be a number");
          return f(b);
        }, g.allocUnsafeSlow = function(b) {
          if (typeof b != "number") throw new TypeError("Argument must be a number");
          return d.SlowBuffer(b);
        };
      }, 2955: (s, i, u) => {
        var d;
        function f(U, M, Z) {
          return (M = function(D) {
            var V = function(S, x) {
              if (typeof S != "object" || S === null) return S;
              var B = S[Symbol.toPrimitive];
              if (B !== void 0) {
                var W = B.call(S, x);
                if (typeof W != "object") return W;
                throw new TypeError("@@toPrimitive must return a primitive value.");
              }
              return (x === "string" ? String : Number)(S);
            }(D, "string");
            return typeof V == "symbol" ? V : String(V);
          }(M)) in U ? Object.defineProperty(U, M, { value: Z, enumerable: true, configurable: true, writable: true }) : U[M] = Z, U;
        }
        var p = u(6238), g = Symbol("lastResolve"), b = Symbol("lastReject"), h = Symbol("error"), m = Symbol("ended"), c = Symbol("lastPromise"), w = Symbol("handlePromise"), T = Symbol("stream");
        function P(U, M) {
          return { value: U, done: M };
        }
        function k(U) {
          var M = U[g];
          if (M !== null) {
            var Z = U[T].read();
            Z !== null && (U[c] = null, U[g] = null, U[b] = null, M(P(Z, false)));
          }
        }
        function R(U) {
          process.nextTick(k, U);
        }
        var F = Object.getPrototypeOf(function() {
        }), v = Object.setPrototypeOf((f(d = { get stream() {
          return this[T];
        }, next: function() {
          var U = this, M = this[h];
          if (M !== null) return Promise.reject(M);
          if (this[m]) return Promise.resolve(P(void 0, true));
          if (this[T].destroyed) return new Promise(function(S, x) {
            process.nextTick(function() {
              U[h] ? x(U[h]) : S(P(void 0, true));
            });
          });
          var Z, D = this[c];
          if (D) Z = new Promise(/* @__PURE__ */ function(S, x) {
            return function(B, W) {
              S.then(function() {
                x[m] ? B(P(void 0, true)) : x[w](B, W);
              }, W);
            };
          }(D, this));
          else {
            var V = this[T].read();
            if (V !== null) return Promise.resolve(P(V, false));
            Z = new Promise(this[w]);
          }
          return this[c] = Z, Z;
        } }, Symbol.asyncIterator, function() {
          return this;
        }), f(d, "return", function() {
          var U = this;
          return new Promise(function(M, Z) {
            U[T].destroy(null, function(D) {
              D ? Z(D) : M(P(void 0, true));
            });
          });
        }), d), F);
        s.exports = function(U) {
          var M, Z = Object.create(v, (f(M = {}, T, { value: U, writable: true }), f(M, g, { value: null, writable: true }), f(M, b, { value: null, writable: true }), f(M, h, { value: null, writable: true }), f(M, m, { value: U._readableState.endEmitted, writable: true }), f(M, w, { value: function(D, V) {
            var S = Z[T].read();
            S ? (Z[c] = null, Z[g] = null, Z[b] = null, D(P(S, false))) : (Z[g] = D, Z[b] = V);
          }, writable: true }), M));
          return Z[c] = null, p(U, function(D) {
            if (D && D.code !== "ERR_STREAM_PREMATURE_CLOSE") {
              var V = Z[b];
              return V !== null && (Z[c] = null, Z[g] = null, Z[b] = null, V(D)), void (Z[h] = D);
            }
            var S = Z[g];
            S !== null && (Z[c] = null, Z[g] = null, Z[b] = null, S(P(void 0, true))), Z[m] = true;
          }), U.on("readable", R.bind(null, Z)), Z;
        };
      }, 3093: (s, i, u) => {
        var d = u(4459);
        s.exports = function(f) {
          return d(f) || f === 0 ? f : f < 0 ? -1 : 1;
        };
      }, 3121: (s, i, u) => {
        function d(c) {
          return d = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(w) {
            return typeof w;
          } : function(w) {
            return w && typeof Symbol == "function" && w.constructor === Symbol && w !== Symbol.prototype ? "symbol" : typeof w;
          }, d(c);
        }
        function f(c, w) {
          for (var T = 0; T < w.length; T++) {
            var P = w[T];
            P.enumerable = P.enumerable || false, P.configurable = true, "value" in P && (P.writable = true), Object.defineProperty(c, p(P.key), P);
          }
        }
        function p(c) {
          var w = function(T, P) {
            if (d(T) != "object" || !T) return T;
            var k = T[Symbol.toPrimitive];
            if (k !== void 0) {
              var R = k.call(T, P);
              if (d(R) != "object") return R;
              throw new TypeError("@@toPrimitive must return a primitive value.");
            }
            return String(T);
          }(c, "string");
          return d(w) == "symbol" ? w : w + "";
        }
        u.d(i, { A: () => m });
        var g, b, h, m = (g = function c() {
          (function(w, T) {
            if (!(w instanceof T)) throw new TypeError("Cannot call a class as a function");
          })(this, c);
        }, h = [{ key: "validateTimebounds", value: function(c) {
          var w = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : 0;
          if (!c.timeBounds) return false;
          var T = Math.floor(Date.now() / 1e3), P = c.timeBounds, k = P.minTime, R = P.maxTime;
          return T >= Number.parseInt(k, 10) - w && T <= Number.parseInt(R, 10) + w;
        } }, { key: "sleep", value: function(c) {
          return new Promise(function(w) {
            return setTimeout(w, c);
          });
        } }], (b = null) && f(g.prototype, b), h && f(g, h), Object.defineProperty(g, "prototype", { writable: false }), g);
      }, 3126: (s, i, u) => {
        var d = u(6743), f = u(9675), p = u(76), g = u(3144);
        s.exports = function(b) {
          if (b.length < 1 || typeof b[0] != "function") throw new f("a function is required");
          return g(d, p, b);
        };
      }, 3141: (s, i, u) => {
        var d = u(2861).Buffer, f = d.isEncoding || function(k) {
          switch ((k = "" + k) && k.toLowerCase()) {
            case "hex":
            case "utf8":
            case "utf-8":
            case "ascii":
            case "binary":
            case "base64":
            case "ucs2":
            case "ucs-2":
            case "utf16le":
            case "utf-16le":
            case "raw":
              return true;
            default:
              return false;
          }
        };
        function p(k) {
          var R;
          switch (this.encoding = function(F) {
            var v = function(U) {
              if (!U) return "utf8";
              for (var M; ; ) switch (U) {
                case "utf8":
                case "utf-8":
                  return "utf8";
                case "ucs2":
                case "ucs-2":
                case "utf16le":
                case "utf-16le":
                  return "utf16le";
                case "latin1":
                case "binary":
                  return "latin1";
                case "base64":
                case "ascii":
                case "hex":
                  return U;
                default:
                  if (M) return;
                  U = ("" + U).toLowerCase(), M = true;
              }
            }(F);
            if (typeof v != "string" && (d.isEncoding === f || !f(F))) throw new Error("Unknown encoding: " + F);
            return v || F;
          }(k), this.encoding) {
            case "utf16le":
              this.text = h, this.end = m, R = 4;
              break;
            case "utf8":
              this.fillLast = b, R = 4;
              break;
            case "base64":
              this.text = c, this.end = w, R = 3;
              break;
            default:
              return this.write = T, void (this.end = P);
          }
          this.lastNeed = 0, this.lastTotal = 0, this.lastChar = d.allocUnsafe(R);
        }
        function g(k) {
          return k <= 127 ? 0 : k >> 5 == 6 ? 2 : k >> 4 == 14 ? 3 : k >> 3 == 30 ? 4 : k >> 6 == 2 ? -1 : -2;
        }
        function b(k) {
          var R = this.lastTotal - this.lastNeed, F = function(v, U) {
            if ((192 & U[0]) != 128) return v.lastNeed = 0, "\uFFFD";
            if (v.lastNeed > 1 && U.length > 1) {
              if ((192 & U[1]) != 128) return v.lastNeed = 1, "\uFFFD";
              if (v.lastNeed > 2 && U.length > 2 && (192 & U[2]) != 128) return v.lastNeed = 2, "\uFFFD";
            }
          }(this, k);
          return F !== void 0 ? F : this.lastNeed <= k.length ? (k.copy(this.lastChar, R, 0, this.lastNeed), this.lastChar.toString(this.encoding, 0, this.lastTotal)) : (k.copy(this.lastChar, R, 0, k.length), void (this.lastNeed -= k.length));
        }
        function h(k, R) {
          if ((k.length - R) % 2 == 0) {
            var F = k.toString("utf16le", R);
            if (F) {
              var v = F.charCodeAt(F.length - 1);
              if (v >= 55296 && v <= 56319) return this.lastNeed = 2, this.lastTotal = 4, this.lastChar[0] = k[k.length - 2], this.lastChar[1] = k[k.length - 1], F.slice(0, -1);
            }
            return F;
          }
          return this.lastNeed = 1, this.lastTotal = 2, this.lastChar[0] = k[k.length - 1], k.toString("utf16le", R, k.length - 1);
        }
        function m(k) {
          var R = k && k.length ? this.write(k) : "";
          if (this.lastNeed) {
            var F = this.lastTotal - this.lastNeed;
            return R + this.lastChar.toString("utf16le", 0, F);
          }
          return R;
        }
        function c(k, R) {
          var F = (k.length - R) % 3;
          return F === 0 ? k.toString("base64", R) : (this.lastNeed = 3 - F, this.lastTotal = 3, F === 1 ? this.lastChar[0] = k[k.length - 1] : (this.lastChar[0] = k[k.length - 2], this.lastChar[1] = k[k.length - 1]), k.toString("base64", R, k.length - F));
        }
        function w(k) {
          var R = k && k.length ? this.write(k) : "";
          return this.lastNeed ? R + this.lastChar.toString("base64", 0, 3 - this.lastNeed) : R;
        }
        function T(k) {
          return k.toString(this.encoding);
        }
        function P(k) {
          return k && k.length ? this.write(k) : "";
        }
        i.I = p, p.prototype.write = function(k) {
          if (k.length === 0) return "";
          var R, F;
          if (this.lastNeed) {
            if ((R = this.fillLast(k)) === void 0) return "";
            F = this.lastNeed, this.lastNeed = 0;
          } else F = 0;
          return F < k.length ? R ? R + this.text(k, F) : this.text(k, F) : R || "";
        }, p.prototype.end = function(k) {
          var R = k && k.length ? this.write(k) : "";
          return this.lastNeed ? R + "\uFFFD" : R;
        }, p.prototype.text = function(k, R) {
          var F = function(U, M, Z) {
            var D = M.length - 1;
            if (D < Z) return 0;
            var V = g(M[D]);
            return V >= 0 ? (V > 0 && (U.lastNeed = V - 1), V) : --D < Z || V === -2 ? 0 : (V = g(M[D]), V >= 0 ? (V > 0 && (U.lastNeed = V - 2), V) : --D < Z || V === -2 ? 0 : (V = g(M[D]), V >= 0 ? (V > 0 && (V === 2 ? V = 0 : U.lastNeed = V - 3), V) : 0));
          }(this, k, R);
          if (!this.lastNeed) return k.toString("utf8", R);
          this.lastTotal = F;
          var v = k.length - (F - this.lastNeed);
          return k.copy(this.lastChar, 0, v), k.toString("utf8", R, v);
        }, p.prototype.fillLast = function(k) {
          if (this.lastNeed <= k.length) return k.copy(this.lastChar, this.lastTotal - this.lastNeed, 0, this.lastNeed), this.lastChar.toString(this.encoding, 0, this.lastTotal);
          k.copy(this.lastChar, this.lastTotal - this.lastNeed, 0, k.length), this.lastNeed -= k.length;
        };
      }, 3144: (s, i, u) => {
        var d = u(6743), f = u(1002), p = u(76), g = u(7119);
        s.exports = g || d.call(p, f);
      }, 3209: (s, i, u) => {
        var d = 65536, f = 4294967295, p = u(2861).Buffer, g = u.g.crypto || u.g.msCrypto;
        g && g.getRandomValues ? s.exports = function(b, h) {
          if (b > f) throw new RangeError("requested too many random bytes");
          var m = p.allocUnsafe(b);
          if (b > 0) if (b > d) for (var c = 0; c < b; c += d) g.getRandomValues(m.slice(c, c + d));
          else g.getRandomValues(m);
          return typeof h == "function" ? process.nextTick(function() {
            h(null, m);
          }) : m;
        } : s.exports = function() {
          throw new Error(`Secure random number generation is not supported by this browser.
Use Chrome, Firefox or Internet Explorer 11`);
        };
      }, 3496: (s, i, u) => {
        u.r(i), u.d(i, { Api: () => d.j, AxiosClient: () => b, BasicSleepStrategy: () => at, Durability: () => pt, LinearSleepStrategy: () => rt, Server: () => K, assembleTransaction: () => k.X, default: () => q, parseRawEvents: () => R.fG, parseRawSimulation: () => R.jr });
        var d = u(4076), f = u(4193), p = u.n(f), g = u(8950);
        const b = (0, u(9983).vt)({ headers: { "X-Client-Name": "js-soroban-client", "X-Client-Version": "14.0.0-rc.3" } });
        function h() {
          var _, L, et = typeof Symbol == "function" ? Symbol : {}, St = et.iterator || "@@iterator", kt = et.toStringTag || "@@toStringTag";
          function ct(Ee, cr, Lr, on) {
            var Zr = cr && cr.prototype instanceof ut ? cr : ut, to = Object.create(Zr.prototype);
            return m(to, "_invoke", function(qn, jn, eo) {
              var no, Dn, se, rr = 0, Tr = eo || [], mr = false, Ir = { p: 0, n: 0, v: _, a: En, f: En.bind(_, 4), d: function(An, _n) {
                return no = An, Dn = 0, se = _, Ir.n = _n, j;
              } };
              function En(An, _n) {
                for (Dn = An, se = _n, L = 0; !mr && rr && !Nn && L < Tr.length; L++) {
                  var Nn, Zn = Tr[L], Jn = Ir.p, Hn = Zn[2];
                  An > 3 ? (Nn = Hn === _n) && (se = Zn[(Dn = Zn[4]) ? 5 : (Dn = 3, 3)], Zn[4] = Zn[5] = _) : Zn[0] <= Jn && ((Nn = An < 2 && Jn < Zn[1]) ? (Dn = 0, Ir.v = _n, Ir.n = Zn[1]) : Jn < Hn && (Nn = An < 3 || Zn[0] > _n || _n > Hn) && (Zn[4] = An, Zn[5] = _n, Ir.n = Hn, Dn = 0));
                }
                if (Nn || An > 1) return j;
                throw mr = true, _n;
              }
              return function(An, _n, Nn) {
                if (rr > 1) throw TypeError("Generator is already running");
                for (mr && _n === 1 && En(_n, Nn), Dn = _n, se = Nn; (L = Dn < 2 ? _ : se) || !mr; ) {
                  no || (Dn ? Dn < 3 ? (Dn > 1 && (Ir.n = -1), En(Dn, se)) : Ir.n = se : Ir.v = se);
                  try {
                    if (rr = 2, no) {
                      if (Dn || (An = "next"), L = no[An]) {
                        if (!(L = L.call(no, se))) throw TypeError("iterator result is not an object");
                        if (!L.done) return L;
                        se = L.value, Dn < 2 && (Dn = 0);
                      } else Dn === 1 && (L = no.return) && L.call(no), Dn < 2 && (se = TypeError("The iterator does not provide a '" + An + "' method"), Dn = 1);
                      no = _;
                    } else if ((L = (mr = Ir.n < 0) ? se : qn.call(jn, Ir)) !== j) break;
                  } catch (Zn) {
                    no = _, Dn = 1, se = Zn;
                  } finally {
                    rr = 1;
                  }
                }
                return { value: L, done: mr };
              };
            }(Ee, Lr, on), true), to;
          }
          var j = {};
          function ut() {
          }
          function gt() {
          }
          function $t() {
          }
          L = Object.getPrototypeOf;
          var Ht = [][St] ? L(L([][St]())) : (m(L = {}, St, function() {
            return this;
          }), L), wt = $t.prototype = ut.prototype = Object.create(Ht);
          function Jt(Ee) {
            return Object.setPrototypeOf ? Object.setPrototypeOf(Ee, $t) : (Ee.__proto__ = $t, m(Ee, kt, "GeneratorFunction")), Ee.prototype = Object.create(wt), Ee;
          }
          return gt.prototype = $t, m(wt, "constructor", $t), m($t, "constructor", gt), gt.displayName = "GeneratorFunction", m($t, kt, "GeneratorFunction"), m(wt), m(wt, kt, "Generator"), m(wt, St, function() {
            return this;
          }), m(wt, "toString", function() {
            return "[object Generator]";
          }), (h = function() {
            return { w: ct, m: Jt };
          })();
        }
        function m(_, L, et, St) {
          var kt = Object.defineProperty;
          try {
            kt({}, "", {});
          } catch {
            kt = 0;
          }
          m = function(ct, j, ut, gt) {
            if (j) kt ? kt(ct, j, { value: ut, enumerable: !gt, configurable: !gt, writable: !gt }) : ct[j] = ut;
            else {
              let $t = function(Ht, wt) {
                m(ct, Ht, function(Jt) {
                  return this._invoke(Ht, wt, Jt);
                });
              };
              $t("next", 0), $t("throw", 1), $t("return", 2);
            }
          }, m(_, L, et, St);
        }
        function c(_, L, et, St, kt, ct, j) {
          try {
            var ut = _[ct](j), gt = ut.value;
          } catch ($t) {
            return void et($t);
          }
          ut.done ? L(gt) : Promise.resolve(gt).then(St, kt);
        }
        function w(_, L) {
          return _.hasOwnProperty(L);
        }
        function T(_, L) {
          return P.apply(this, arguments);
        }
        function P() {
          var _;
          return _ = h().m(function L(et, St) {
            var kt, ct, j, ut = arguments;
            return h().w(function(gt) {
              for (; ; ) switch (gt.n) {
                case 0:
                  return kt = ut.length > 2 && ut[2] !== void 0 ? ut[2] : null, gt.n = 1, b.post(et, { jsonrpc: "2.0", id: 1, method: St, params: kt });
                case 1:
                  if (!w((ct = gt.v).data, "error")) {
                    gt.n = 2;
                    break;
                  }
                  throw ct.data.error;
                case 2:
                  return gt.a(2, (j = ct.data) === null || j === void 0 ? void 0 : j.result);
                case 3:
                  return gt.a(2);
              }
            }, L);
          }), P = function() {
            var L = this, et = arguments;
            return new Promise(function(St, kt) {
              var ct = _.apply(L, et);
              function j(gt) {
                c(ct, St, kt, j, ut, "next", gt);
              }
              function ut(gt) {
                c(ct, St, kt, j, ut, "throw", gt);
              }
              j(void 0);
            });
          }, P.apply(this, arguments);
        }
        var k = u(8680), R = u(784), F = u(3121), v = u(8287).Buffer;
        function U(_) {
          return U = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(L) {
            return typeof L;
          } : function(L) {
            return L && typeof Symbol == "function" && L.constructor === Symbol && L !== Symbol.prototype ? "symbol" : typeof L;
          }, U(_);
        }
        function M(_, L) {
          var et = Object.keys(_);
          if (Object.getOwnPropertySymbols) {
            var St = Object.getOwnPropertySymbols(_);
            L && (St = St.filter(function(kt) {
              return Object.getOwnPropertyDescriptor(_, kt).enumerable;
            })), et.push.apply(et, St);
          }
          return et;
        }
        function Z(_) {
          for (var L = 1; L < arguments.length; L++) {
            var et = arguments[L] != null ? arguments[L] : {};
            L % 2 ? M(Object(et), true).forEach(function(St) {
              D(_, St, et[St]);
            }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(_, Object.getOwnPropertyDescriptors(et)) : M(Object(et)).forEach(function(St) {
              Object.defineProperty(_, St, Object.getOwnPropertyDescriptor(et, St));
            });
          }
          return _;
        }
        function D(_, L, et) {
          return (L = lt(L)) in _ ? Object.defineProperty(_, L, { value: et, enumerable: true, configurable: true, writable: true }) : _[L] = et, _;
        }
        function V() {
          var _, L, et = typeof Symbol == "function" ? Symbol : {}, St = et.iterator || "@@iterator", kt = et.toStringTag || "@@toStringTag";
          function ct(Ee, cr, Lr, on) {
            var Zr = cr && cr.prototype instanceof ut ? cr : ut, to = Object.create(Zr.prototype);
            return S(to, "_invoke", function(qn, jn, eo) {
              var no, Dn, se, rr = 0, Tr = eo || [], mr = false, Ir = { p: 0, n: 0, v: _, a: En, f: En.bind(_, 4), d: function(An, _n) {
                return no = An, Dn = 0, se = _, Ir.n = _n, j;
              } };
              function En(An, _n) {
                for (Dn = An, se = _n, L = 0; !mr && rr && !Nn && L < Tr.length; L++) {
                  var Nn, Zn = Tr[L], Jn = Ir.p, Hn = Zn[2];
                  An > 3 ? (Nn = Hn === _n) && (se = Zn[(Dn = Zn[4]) ? 5 : (Dn = 3, 3)], Zn[4] = Zn[5] = _) : Zn[0] <= Jn && ((Nn = An < 2 && Jn < Zn[1]) ? (Dn = 0, Ir.v = _n, Ir.n = Zn[1]) : Jn < Hn && (Nn = An < 3 || Zn[0] > _n || _n > Hn) && (Zn[4] = An, Zn[5] = _n, Ir.n = Hn, Dn = 0));
                }
                if (Nn || An > 1) return j;
                throw mr = true, _n;
              }
              return function(An, _n, Nn) {
                if (rr > 1) throw TypeError("Generator is already running");
                for (mr && _n === 1 && En(_n, Nn), Dn = _n, se = Nn; (L = Dn < 2 ? _ : se) || !mr; ) {
                  no || (Dn ? Dn < 3 ? (Dn > 1 && (Ir.n = -1), En(Dn, se)) : Ir.n = se : Ir.v = se);
                  try {
                    if (rr = 2, no) {
                      if (Dn || (An = "next"), L = no[An]) {
                        if (!(L = L.call(no, se))) throw TypeError("iterator result is not an object");
                        if (!L.done) return L;
                        se = L.value, Dn < 2 && (Dn = 0);
                      } else Dn === 1 && (L = no.return) && L.call(no), Dn < 2 && (se = TypeError("The iterator does not provide a '" + An + "' method"), Dn = 1);
                      no = _;
                    } else if ((L = (mr = Ir.n < 0) ? se : qn.call(jn, Ir)) !== j) break;
                  } catch (Zn) {
                    no = _, Dn = 1, se = Zn;
                  } finally {
                    rr = 1;
                  }
                }
                return { value: L, done: mr };
              };
            }(Ee, Lr, on), true), to;
          }
          var j = {};
          function ut() {
          }
          function gt() {
          }
          function $t() {
          }
          L = Object.getPrototypeOf;
          var Ht = [][St] ? L(L([][St]())) : (S(L = {}, St, function() {
            return this;
          }), L), wt = $t.prototype = ut.prototype = Object.create(Ht);
          function Jt(Ee) {
            return Object.setPrototypeOf ? Object.setPrototypeOf(Ee, $t) : (Ee.__proto__ = $t, S(Ee, kt, "GeneratorFunction")), Ee.prototype = Object.create(wt), Ee;
          }
          return gt.prototype = $t, S(wt, "constructor", $t), S($t, "constructor", gt), gt.displayName = "GeneratorFunction", S($t, kt, "GeneratorFunction"), S(wt), S(wt, kt, "Generator"), S(wt, St, function() {
            return this;
          }), S(wt, "toString", function() {
            return "[object Generator]";
          }), (V = function() {
            return { w: ct, m: Jt };
          })();
        }
        function S(_, L, et, St) {
          var kt = Object.defineProperty;
          try {
            kt({}, "", {});
          } catch {
            kt = 0;
          }
          S = function(ct, j, ut, gt) {
            if (j) kt ? kt(ct, j, { value: ut, enumerable: !gt, configurable: !gt, writable: !gt }) : ct[j] = ut;
            else {
              let $t = function(Ht, wt) {
                S(ct, Ht, function(Jt) {
                  return this._invoke(Ht, wt, Jt);
                });
              };
              $t("next", 0), $t("throw", 1), $t("return", 2);
            }
          }, S(_, L, et, St);
        }
        function x(_, L, et, St, kt, ct, j) {
          try {
            var ut = _[ct](j), gt = ut.value;
          } catch ($t) {
            return void et($t);
          }
          ut.done ? L(gt) : Promise.resolve(gt).then(St, kt);
        }
        function B(_) {
          return function() {
            var L = this, et = arguments;
            return new Promise(function(St, kt) {
              var ct = _.apply(L, et);
              function j(gt) {
                x(ct, St, kt, j, ut, "next", gt);
              }
              function ut(gt) {
                x(ct, St, kt, j, ut, "throw", gt);
              }
              j(void 0);
            });
          };
        }
        function W(_, L) {
          for (var et = 0; et < L.length; et++) {
            var St = L[et];
            St.enumerable = St.enumerable || false, St.configurable = true, "value" in St && (St.writable = true), Object.defineProperty(_, lt(St.key), St);
          }
        }
        function lt(_) {
          var L = function(et, St) {
            if (U(et) != "object" || !et) return et;
            var kt = et[Symbol.toPrimitive];
            if (kt !== void 0) {
              var ct = kt.call(et, St);
              if (U(ct) != "object") return ct;
              throw new TypeError("@@toPrimitive must return a primitive value.");
            }
            return (St === "string" ? String : Number)(et);
          }(_, "string");
          return U(L) == "symbol" ? L : L + "";
        }
        var pt = function(_) {
          return _.Temporary = "temporary", _.Persistent = "persistent", _;
        }({}), at = function(_) {
          return 1e3;
        }, rt = function(_) {
          return 1e3 * _;
        };
        function ot(_) {
          var L, et = [];
          switch (_.switch()) {
            case 0:
              et = _.operations();
              break;
            case 1:
            case 2:
            case 3:
            case 4:
              et = _.value().operations();
              break;
            default:
              throw new Error("Unexpected transaction meta switch value");
          }
          var St = (L = et.flatMap(function(kt) {
            return kt.changes();
          }).find(function(kt) {
            return kt.switch() === g.xdr.LedgerEntryChangeType.ledgerEntryCreated() && kt.created().data().switch() === g.xdr.LedgerEntryType.account();
          })) === null || L === void 0 || (L = L.created()) === null || L === void 0 || (L = L.data()) === null || L === void 0 || (L = L.account()) === null || L === void 0 || (L = L.seqNum()) === null || L === void 0 ? void 0 : L.toString();
          if (St) return St;
          throw new Error("No account created in transaction");
        }
        var X, I, nt, ft, dt, Lt, $, it, mt, Ot, bt, xt, Ct, Tt, Bt, At, Ut, Vt, oe, te, yt, Mt, O, z, J, tt, H, K = (X = function _(L) {
          var et = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};
          if (function(St, kt) {
            if (!(St instanceof kt)) throw new TypeError("Cannot call a class as a function");
          }(this, _), this.serverURL = p()(L), et.headers && Object.keys(et.headers).length !== 0 && b.interceptors.request.use(function(St) {
            return St.headers = Object.assign(St.headers, et.headers), St;
          }), this.serverURL.protocol() !== "https" && !et.allowHttp) throw new Error("Cannot connect to insecure Soroban RPC server if `allowHttp` isn't set");
        }, I = [{ key: "getAccount", value: (H = B(V().m(function _(L) {
          var et, St, kt;
          return V().w(function(ct) {
            for (; ; ) switch (ct.n) {
              case 0:
                return et = g.xdr.LedgerKey.account(new g.xdr.LedgerKeyAccount({ accountId: g.Keypair.fromPublicKey(L).xdrPublicKey() })), ct.n = 1, this.getLedgerEntries(et);
              case 1:
                if ((St = ct.v).entries.length !== 0) {
                  ct.n = 2;
                  break;
                }
                return ct.a(2, Promise.reject({ code: 404, message: "Account not found: ".concat(L) }));
              case 2:
                return kt = St.entries[0].val.account(), ct.a(2, new g.Account(L, kt.seqNum().toString()));
            }
          }, _, this);
        })), function(_) {
          return H.apply(this, arguments);
        }) }, { key: "getHealth", value: (tt = B(V().m(function _() {
          return V().w(function(L) {
            for (; ; ) if (L.n === 0) return L.a(2, T(this.serverURL.toString(), "getHealth"));
          }, _, this);
        })), function() {
          return tt.apply(this, arguments);
        }) }, { key: "getContractData", value: (J = B(V().m(function _(L, et) {
          var St, kt, ct, j, ut, gt = arguments;
          return V().w(function($t) {
            for (; ; ) switch ($t.n) {
              case 0:
                if (St = gt.length > 2 && gt[2] !== void 0 ? gt[2] : pt.Persistent, typeof L != "string") {
                  $t.n = 1;
                  break;
                }
                kt = new g.Contract(L).address().toScAddress(), $t.n = 4;
                break;
              case 1:
                if (!(L instanceof g.Address)) {
                  $t.n = 2;
                  break;
                }
                kt = L.toScAddress(), $t.n = 4;
                break;
              case 2:
                if (!(L instanceof g.Contract)) {
                  $t.n = 3;
                  break;
                }
                kt = L.address().toScAddress(), $t.n = 4;
                break;
              case 3:
                throw new TypeError("unknown contract type: ".concat(L));
              case 4:
                ut = St, $t.n = ut === pt.Temporary ? 5 : ut === pt.Persistent ? 6 : 7;
                break;
              case 5:
                return ct = g.xdr.ContractDataDurability.temporary(), $t.a(3, 8);
              case 6:
                return ct = g.xdr.ContractDataDurability.persistent(), $t.a(3, 8);
              case 7:
                throw new TypeError("invalid durability: ".concat(St));
              case 8:
                return j = g.xdr.LedgerKey.contractData(new g.xdr.LedgerKeyContractData({ key: et, contract: kt, durability: ct })), $t.a(2, this.getLedgerEntries(j).then(function(Ht) {
                  return Ht.entries.length === 0 ? Promise.reject({ code: 404, message: "Contract data not found. Contract: ".concat(g.Address.fromScAddress(kt).toString(), ", Key: ").concat(et.toXDR("base64"), ", Durability: ").concat(St) }) : Ht.entries[0];
                }));
            }
          }, _, this);
        })), function(_, L) {
          return J.apply(this, arguments);
        }) }, { key: "getContractWasmByContractId", value: (z = B(V().m(function _(L) {
          var et, St, kt, ct;
          return V().w(function(j) {
            for (; ; ) switch (j.n) {
              case 0:
                return St = new g.Contract(L).getFootprint(), j.n = 1, this.getLedgerEntries(St);
              case 1:
                if ((kt = j.v).entries.length && (et = kt.entries[0]) !== null && et !== void 0 && et.val) {
                  j.n = 2;
                  break;
                }
                return j.a(2, Promise.reject({ code: 404, message: "Could not obtain contract hash from server" }));
              case 2:
                return ct = kt.entries[0].val.contractData().val().instance().executable().wasmHash(), j.a(2, this.getContractWasmByHash(ct));
            }
          }, _, this);
        })), function(_) {
          return z.apply(this, arguments);
        }) }, { key: "getContractWasmByHash", value: (O = B(V().m(function _(L) {
          var et, St, kt, ct, j, ut, gt = arguments;
          return V().w(function($t) {
            for (; ; ) switch ($t.n) {
              case 0:
                return St = gt.length > 1 && gt[1] !== void 0 ? gt[1] : void 0, kt = typeof L == "string" ? v.from(L, St) : L, ct = g.xdr.LedgerKey.contractCode(new g.xdr.LedgerKeyContractCode({ hash: kt })), $t.n = 1, this.getLedgerEntries(ct);
              case 1:
                if ((j = $t.v).entries.length && (et = j.entries[0]) !== null && et !== void 0 && et.val) {
                  $t.n = 2;
                  break;
                }
                return $t.a(2, Promise.reject({ code: 404, message: "Could not obtain contract wasm from server" }));
              case 2:
                return ut = j.entries[0].val.contractCode().code(), $t.a(2, ut);
            }
          }, _, this);
        })), function(_) {
          return O.apply(this, arguments);
        }) }, { key: "getLedgerEntries", value: (Mt = B(V().m(function _() {
          var L = arguments;
          return V().w(function(et) {
            for (; ; ) if (et.n === 0) return et.a(2, this._getLedgerEntries.apply(this, L).then(R.$D));
          }, _, this);
        })), function() {
          return Mt.apply(this, arguments);
        }) }, { key: "_getLedgerEntries", value: (yt = B(V().m(function _() {
          var L, et, St, kt = arguments;
          return V().w(function(ct) {
            for (; ; ) if (ct.n === 0) {
              for (L = kt.length, et = new Array(L), St = 0; St < L; St++) et[St] = kt[St];
              return ct.a(2, T(this.serverURL.toString(), "getLedgerEntries", { keys: et.map(function(j) {
                return j.toXDR("base64");
              }) }));
            }
          }, _, this);
        })), function() {
          return yt.apply(this, arguments);
        }) }, { key: "pollTransaction", value: (te = B(V().m(function _(L, et) {
          var St, kt, ct, j, ut, gt;
          return V().w(function($t) {
            for (; ; ) switch ($t.n) {
              case 0:
                ct = ((St = et == null ? void 0 : et.attempts) !== null && St !== void 0 ? St : 0) < 1 ? 30 : (kt = et == null ? void 0 : et.attempts) !== null && kt !== void 0 ? kt : 30, ut = 1;
              case 1:
                if (!(ut < ct)) {
                  $t.n = 5;
                  break;
                }
                return $t.n = 2, this.getTransaction(L);
              case 2:
                if ((j = $t.v).status === d.j.GetTransactionStatus.NOT_FOUND) {
                  $t.n = 3;
                  break;
                }
                return $t.a(2, j);
              case 3:
                return $t.n = 4, F.A.sleep(((gt = et == null ? void 0 : et.sleepStrategy) !== null && gt !== void 0 ? gt : at)(ut));
              case 4:
                ut++, $t.n = 1;
                break;
              case 5:
                return $t.a(2, j);
            }
          }, _, this);
        })), function(_, L) {
          return te.apply(this, arguments);
        }) }, { key: "getTransaction", value: (oe = B(V().m(function _(L) {
          return V().w(function(et) {
            for (; ; ) if (et.n === 0) return et.a(2, this._getTransaction(L).then(function(St) {
              var kt = {};
              return St.status !== d.j.GetTransactionStatus.NOT_FOUND && Object.assign(kt, (0, R.WC)(St)), Z({ status: St.status, txHash: L, latestLedger: St.latestLedger, latestLedgerCloseTime: St.latestLedgerCloseTime, oldestLedger: St.oldestLedger, oldestLedgerCloseTime: St.oldestLedgerCloseTime }, kt);
            }));
          }, _, this);
        })), function(_) {
          return oe.apply(this, arguments);
        }) }, { key: "_getTransaction", value: (Vt = B(V().m(function _(L) {
          return V().w(function(et) {
            for (; ; ) if (et.n === 0) return et.a(2, T(this.serverURL.toString(), "getTransaction", { hash: L }));
          }, _, this);
        })), function(_) {
          return Vt.apply(this, arguments);
        }) }, { key: "getTransactions", value: (Ut = B(V().m(function _(L) {
          return V().w(function(et) {
            for (; ; ) if (et.n === 0) return et.a(2, this._getTransactions(L).then(function(St) {
              return { transactions: St.transactions.map(R.tR), latestLedger: St.latestLedger, latestLedgerCloseTimestamp: St.latestLedgerCloseTimestamp, oldestLedger: St.oldestLedger, oldestLedgerCloseTimestamp: St.oldestLedgerCloseTimestamp, cursor: St.cursor };
            }));
          }, _, this);
        })), function(_) {
          return Ut.apply(this, arguments);
        }) }, { key: "_getTransactions", value: (At = B(V().m(function _(L) {
          return V().w(function(et) {
            for (; ; ) if (et.n === 0) return et.a(2, T(this.serverURL.toString(), "getTransactions", L));
          }, _, this);
        })), function(_) {
          return At.apply(this, arguments);
        }) }, { key: "getEvents", value: (Bt = B(V().m(function _(L) {
          return V().w(function(et) {
            for (; ; ) if (et.n === 0) return et.a(2, this._getEvents(L).then(R.fG));
          }, _, this);
        })), function(_) {
          return Bt.apply(this, arguments);
        }) }, { key: "_getEvents", value: (Tt = B(V().m(function _(L) {
          var et;
          return V().w(function(St) {
            for (; ; ) if (St.n === 0) return St.a(2, T(this.serverURL.toString(), "getEvents", Z(Z({ filters: (et = L.filters) !== null && et !== void 0 ? et : [], pagination: Z(Z({}, L.cursor && { cursor: L.cursor }), L.limit && { limit: L.limit }) }, L.startLedger && { startLedger: L.startLedger }), L.endLedger && { endLedger: L.endLedger })));
          }, _, this);
        })), function(_) {
          return Tt.apply(this, arguments);
        }) }, { key: "getNetwork", value: (Ct = B(V().m(function _() {
          return V().w(function(L) {
            for (; ; ) if (L.n === 0) return L.a(2, T(this.serverURL.toString(), "getNetwork"));
          }, _, this);
        })), function() {
          return Ct.apply(this, arguments);
        }) }, { key: "getLatestLedger", value: (xt = B(V().m(function _() {
          return V().w(function(L) {
            for (; ; ) if (L.n === 0) return L.a(2, T(this.serverURL.toString(), "getLatestLedger"));
          }, _, this);
        })), function() {
          return xt.apply(this, arguments);
        }) }, { key: "simulateTransaction", value: (bt = B(V().m(function _(L, et, St) {
          return V().w(function(kt) {
            for (; ; ) if (kt.n === 0) return kt.a(2, this._simulateTransaction(L, et, St).then(R.jr));
          }, _, this);
        })), function(_, L, et) {
          return bt.apply(this, arguments);
        }) }, { key: "_simulateTransaction", value: (Ot = B(V().m(function _(L, et, St) {
          return V().w(function(kt) {
            for (; ; ) if (kt.n === 0) return kt.a(2, T(this.serverURL.toString(), "simulateTransaction", Z({ transaction: L.toXDR(), authMode: St }, et !== void 0 && { resourceConfig: { instructionLeeway: et.cpuInstructions } })));
          }, _, this);
        })), function(_, L, et) {
          return Ot.apply(this, arguments);
        }) }, { key: "prepareTransaction", value: (mt = B(V().m(function _(L) {
          var et;
          return V().w(function(St) {
            for (; ; ) switch (St.n) {
              case 0:
                return St.n = 1, this.simulateTransaction(L);
              case 1:
                if (et = St.v, !d.j.isSimulationError(et)) {
                  St.n = 2;
                  break;
                }
                throw new Error(et.error);
              case 2:
                return St.a(2, (0, k.X)(L, et).build());
            }
          }, _, this);
        })), function(_) {
          return mt.apply(this, arguments);
        }) }, { key: "sendTransaction", value: (it = B(V().m(function _(L) {
          return V().w(function(et) {
            for (; ; ) if (et.n === 0) return et.a(2, this._sendTransaction(L).then(R.Af));
          }, _, this);
        })), function(_) {
          return it.apply(this, arguments);
        }) }, { key: "_sendTransaction", value: ($ = B(V().m(function _(L) {
          return V().w(function(et) {
            for (; ; ) if (et.n === 0) return et.a(2, T(this.serverURL.toString(), "sendTransaction", { transaction: L.toXDR() }));
          }, _, this);
        })), function(_) {
          return $.apply(this, arguments);
        }) }, { key: "requestAirdrop", value: (Lt = B(V().m(function _(L, et) {
          var St, kt, ct, j, ut, gt, $t, Ht, wt;
          return V().w(function(Jt) {
            for (; ; ) switch (Jt.p = Jt.n) {
              case 0:
                if (St = typeof L == "string" ? L : L.accountId(), Ht = et) {
                  Jt.n = 2;
                  break;
                }
                return Jt.n = 1, this.getNetwork();
              case 1:
                Ht = Jt.v.friendbotUrl;
              case 2:
                if (et = Ht) {
                  Jt.n = 3;
                  break;
                }
                throw new Error("No friendbot URL configured for current network");
              case 3:
                return Jt.p = 3, Jt.n = 4, b.post("".concat(et, "?addr=").concat(encodeURIComponent(St)));
              case 4:
                if ((kt = Jt.v).data.result_meta_xdr) {
                  Jt.n = 7;
                  break;
                }
                return Jt.n = 5, this.getTransaction(kt.data.hash);
              case 5:
                if ((j = Jt.v).status === d.j.GetTransactionStatus.SUCCESS) {
                  Jt.n = 6;
                  break;
                }
                throw new Error("Funding account ".concat(L, " failed"));
              case 6:
                ct = j.resultMetaXdr, Jt.n = 8;
                break;
              case 7:
                ct = g.xdr.TransactionMeta.fromXDR(kt.data.result_meta_xdr, "base64");
              case 8:
                return ut = ot(ct), Jt.a(2, new g.Account(St, ut));
              case 9:
                if (Jt.p = 9, wt = Jt.v, ((gt = wt.response) === null || gt === void 0 ? void 0 : gt.status) !== 400) {
                  Jt.n = 10;
                  break;
                }
                if (($t = wt.response.detail) === null || $t === void 0 || !$t.includes("createAccountAlreadyExist")) {
                  Jt.n = 10;
                  break;
                }
                return Jt.a(2, this.getAccount(St));
              case 10:
                throw wt;
              case 11:
                return Jt.a(2);
            }
          }, _, this, [[3, 9]]);
        })), function(_, L) {
          return Lt.apply(this, arguments);
        }) }, { key: "getFeeStats", value: (dt = B(V().m(function _() {
          return V().w(function(L) {
            for (; ; ) if (L.n === 0) return L.a(2, T(this.serverURL.toString(), "getFeeStats"));
          }, _, this);
        })), function() {
          return dt.apply(this, arguments);
        }) }, { key: "getVersionInfo", value: (ft = B(V().m(function _() {
          return V().w(function(L) {
            for (; ; ) if (L.n === 0) return L.a(2, T(this.serverURL.toString(), "getVersionInfo"));
          }, _, this);
        })), function() {
          return ft.apply(this, arguments);
        }) }, { key: "getSACBalance", value: (nt = B(V().m(function _(L, et, St) {
          var kt, ct, j, ut, gt, $t, Ht, wt, Jt, Ee, cr;
          return V().w(function(Lr) {
            for (; ; ) switch (Lr.n) {
              case 0:
                if (g.StrKey.isValidContract(L)) {
                  Lr.n = 1;
                  break;
                }
                throw new TypeError("expected contract ID, got ".concat(L));
              case 1:
                if (St == null) {
                  Lr.n = 2;
                  break;
                }
                cr = St, Lr.n = 4;
                break;
              case 2:
                return Lr.n = 3, this.getNetwork().then(function(on) {
                  return on.passphrase;
                });
              case 3:
                cr = Lr.v;
              case 4:
                return kt = cr, ct = et.contractId(kt), j = (0, g.nativeToScVal)(["Balance", L], { type: ["symbol", "address"] }), ut = g.xdr.LedgerKey.contractData(new g.xdr.LedgerKeyContractData({ contract: new g.Address(ct).toScAddress(), durability: g.xdr.ContractDataDurability.persistent(), key: j })), Lr.n = 5, this.getLedgerEntries(ut);
              case 5:
                if ((gt = Lr.v).entries.length !== 0) {
                  Lr.n = 6;
                  break;
                }
                return Lr.a(2, { latestLedger: gt.latestLedger });
              case 6:
                if ($t = gt.entries[0], Ht = $t.lastModifiedLedgerSeq, wt = $t.liveUntilLedgerSeq, (Jt = $t.val).switch().value === g.xdr.LedgerEntryType.contractData().value) {
                  Lr.n = 7;
                  break;
                }
                return Lr.a(2, { latestLedger: gt.latestLedger });
              case 7:
                return Ee = (0, g.scValToNative)(Jt.contractData().val()), Lr.a(2, { latestLedger: gt.latestLedger, balanceEntry: { liveUntilLedgerSeq: wt, lastModifiedLedgerSeq: Ht, amount: Ee.amount.toString(), authorized: Ee.authorized, clawback: Ee.clawback } });
            }
          }, _, this);
        })), function(_, L, et) {
          return nt.apply(this, arguments);
        }) }], I && W(X.prototype, I), Object.defineProperty(X, "prototype", { writable: false }), X);
        const q = (s = u.hmd(s)).exports;
      }, 3600: (s, i, u) => {
        s.exports = f;
        var d = u(4610);
        function f(p) {
          if (!(this instanceof f)) return new f(p);
          d.call(this, p);
        }
        u(6698)(f, d), f.prototype._transform = function(p, g, b) {
          b(null, p);
        };
      }, 3628: (s, i, u) => {
        var d = u(8648), f = u(1064), p = u(7176);
        s.exports = d ? function(g) {
          return d(g);
        } : f ? function(g) {
          if (!g || typeof g != "object" && typeof g != "function") throw new TypeError("getProto: not an object");
          return f(g);
        } : p ? function(g) {
          return p(g);
        } : null;
      }, 3898: (s, i, u) => {
        u.r(i), u.d(i, { Api: () => {
        }, Resolver: () => Z, STELLAR_TOML_MAX_SIZE: () => U });
        var d = u(1293), f = u.n(d), p = u(9983), g = u(8732);
        function b(D) {
          return b = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(V) {
            return typeof V;
          } : function(V) {
            return V && typeof Symbol == "function" && V.constructor === Symbol && V !== Symbol.prototype ? "symbol" : typeof V;
          }, b(D);
        }
        function h() {
          var D, V, S = typeof Symbol == "function" ? Symbol : {}, x = S.iterator || "@@iterator", B = S.toStringTag || "@@toStringTag";
          function W(nt, ft, dt, Lt) {
            var $ = ft && ft.prototype instanceof pt ? ft : pt, it = Object.create($.prototype);
            return m(it, "_invoke", function(mt, Ot, bt) {
              var xt, Ct, Tt, Bt = 0, At = bt || [], Ut = false, Vt = { p: 0, n: 0, v: D, a: oe, f: oe.bind(D, 4), d: function(te, yt) {
                return xt = te, Ct = 0, Tt = D, Vt.n = yt, lt;
              } };
              function oe(te, yt) {
                for (Ct = te, Tt = yt, V = 0; !Ut && Bt && !Mt && V < At.length; V++) {
                  var Mt, O = At[V], z = Vt.p, J = O[2];
                  te > 3 ? (Mt = J === yt) && (Tt = O[(Ct = O[4]) ? 5 : (Ct = 3, 3)], O[4] = O[5] = D) : O[0] <= z && ((Mt = te < 2 && z < O[1]) ? (Ct = 0, Vt.v = yt, Vt.n = O[1]) : z < J && (Mt = te < 3 || O[0] > yt || yt > J) && (O[4] = te, O[5] = yt, Vt.n = J, Ct = 0));
                }
                if (Mt || te > 1) return lt;
                throw Ut = true, yt;
              }
              return function(te, yt, Mt) {
                if (Bt > 1) throw TypeError("Generator is already running");
                for (Ut && yt === 1 && oe(yt, Mt), Ct = yt, Tt = Mt; (V = Ct < 2 ? D : Tt) || !Ut; ) {
                  xt || (Ct ? Ct < 3 ? (Ct > 1 && (Vt.n = -1), oe(Ct, Tt)) : Vt.n = Tt : Vt.v = Tt);
                  try {
                    if (Bt = 2, xt) {
                      if (Ct || (te = "next"), V = xt[te]) {
                        if (!(V = V.call(xt, Tt))) throw TypeError("iterator result is not an object");
                        if (!V.done) return V;
                        Tt = V.value, Ct < 2 && (Ct = 0);
                      } else Ct === 1 && (V = xt.return) && V.call(xt), Ct < 2 && (Tt = TypeError("The iterator does not provide a '" + te + "' method"), Ct = 1);
                      xt = D;
                    } else if ((V = (Ut = Vt.n < 0) ? Tt : mt.call(Ot, Vt)) !== lt) break;
                  } catch (O) {
                    xt = D, Ct = 1, Tt = O;
                  } finally {
                    Bt = 1;
                  }
                }
                return { value: V, done: Ut };
              };
            }(nt, dt, Lt), true), it;
          }
          var lt = {};
          function pt() {
          }
          function at() {
          }
          function rt() {
          }
          V = Object.getPrototypeOf;
          var ot = [][x] ? V(V([][x]())) : (m(V = {}, x, function() {
            return this;
          }), V), X = rt.prototype = pt.prototype = Object.create(ot);
          function I(nt) {
            return Object.setPrototypeOf ? Object.setPrototypeOf(nt, rt) : (nt.__proto__ = rt, m(nt, B, "GeneratorFunction")), nt.prototype = Object.create(X), nt;
          }
          return at.prototype = rt, m(X, "constructor", rt), m(rt, "constructor", at), at.displayName = "GeneratorFunction", m(rt, B, "GeneratorFunction"), m(X), m(X, B, "Generator"), m(X, x, function() {
            return this;
          }), m(X, "toString", function() {
            return "[object Generator]";
          }), (h = function() {
            return { w: W, m: I };
          })();
        }
        function m(D, V, S, x) {
          var B = Object.defineProperty;
          try {
            B({}, "", {});
          } catch {
            B = 0;
          }
          m = function(W, lt, pt, at) {
            if (lt) B ? B(W, lt, { value: pt, enumerable: !at, configurable: !at, writable: !at }) : W[lt] = pt;
            else {
              let rt = function(ot, X) {
                m(W, ot, function(I) {
                  return this._invoke(ot, X, I);
                });
              };
              rt("next", 0), rt("throw", 1), rt("return", 2);
            }
          }, m(D, V, S, x);
        }
        function c(D, V, S, x, B, W, lt) {
          try {
            var pt = D[W](lt), at = pt.value;
          } catch (rt) {
            return void S(rt);
          }
          pt.done ? V(at) : Promise.resolve(at).then(x, B);
        }
        function w(D, V) {
          for (var S = 0; S < V.length; S++) {
            var x = V[S];
            x.enumerable = x.enumerable || false, x.configurable = true, "value" in x && (x.writable = true), Object.defineProperty(D, T(x.key), x);
          }
        }
        function T(D) {
          var V = function(S, x) {
            if (b(S) != "object" || !S) return S;
            var B = S[Symbol.toPrimitive];
            if (B !== void 0) {
              var W = B.call(S, x);
              if (b(W) != "object") return W;
              throw new TypeError("@@toPrimitive must return a primitive value.");
            }
            return String(S);
          }(D, "string");
          return b(V) == "symbol" ? V : V + "";
        }
        var P, k, R, F, v, U = 102400, M = p.ok.CancelToken, Z = (P = function D() {
          (function(V, S) {
            if (!(V instanceof S)) throw new TypeError("Cannot call a class as a function");
          })(this, D);
        }, k = null, R = [{ key: "resolve", value: (F = h().m(function D(V) {
          var S, x, B, W, lt, pt = arguments;
          return h().w(function(at) {
            for (; ; ) if (at.n === 0) return B = (x = pt.length > 1 && pt[1] !== void 0 ? pt[1] : {}).allowHttp === void 0 ? g.T.isAllowHttp() : x.allowHttp, W = x.timeout === void 0 ? g.T.getTimeout() : x.timeout, lt = B ? "http" : "https", at.a(2, p.ok.get("".concat(lt, "://").concat(V, "/.well-known/stellar.toml"), { maxRedirects: (S = x.allowedRedirects) !== null && S !== void 0 ? S : 0, maxContentLength: U, cancelToken: W ? new M(function(rt) {
              return setTimeout(function() {
                return rt("timeout of ".concat(W, "ms exceeded"));
              }, W);
            }) : void 0, timeout: W }).then(function(rt) {
              try {
                var ot = f().parse(rt.data);
                return Promise.resolve(ot);
              } catch (X) {
                return Promise.reject(new Error("stellar.toml is invalid - Parsing error on line ".concat(X.line, ", column ").concat(X.column, ": ").concat(X.message)));
              }
            }).catch(function(rt) {
              throw rt.message.match(/^maxContentLength size/) ? new Error("stellar.toml file exceeds allowed size of ".concat(U)) : rt;
            }));
          }, D);
        }), v = function() {
          var D = this, V = arguments;
          return new Promise(function(S, x) {
            var B = F.apply(D, V);
            function W(pt) {
              c(B, S, x, W, lt, "next", pt);
            }
            function lt(pt) {
              c(B, S, x, W, lt, "throw", pt);
            }
            W(void 0);
          });
        }, function(D) {
          return v.apply(this, arguments);
        }) }], k && w(P.prototype, k), R && w(P, R), Object.defineProperty(P, "prototype", { writable: false }), P);
      }, 4035: (s, i, u) => {
        var d, f = u(6556), p = u(9092)(), g = u(9957), b = u(5795);
        if (p) {
          var h = f("RegExp.prototype.exec"), m = {}, c = function() {
            throw m;
          }, w = { toString: c, valueOf: c };
          typeof Symbol.toPrimitive == "symbol" && (w[Symbol.toPrimitive] = c), d = function(P) {
            if (!P || typeof P != "object") return false;
            var k = b(P, "lastIndex");
            if (!(k && g(k, "value"))) return false;
            try {
              h(P, w);
            } catch (R) {
              return R === m;
            }
          };
        } else {
          var T = f("Object.prototype.toString");
          d = function(P) {
            return !(!P || typeof P != "object" && typeof P != "function") && T(P) === "[object RegExp]";
          };
        }
        s.exports = d;
      }, 4039: (s, i, u) => {
        var d = typeof Symbol < "u" && Symbol, f = u(1333);
        s.exports = function() {
          return typeof d == "function" && typeof Symbol == "function" && typeof d("foo") == "symbol" && typeof Symbol("bar") == "symbol" && f();
        };
      }, 4076: (s, i, u) => {
        var d;
        u.d(i, { j: () => d }), function(f) {
          var p = function(b) {
            return b.SUCCESS = "SUCCESS", b.NOT_FOUND = "NOT_FOUND", b.FAILED = "FAILED", b;
          }({});
          function g(b) {
            return "transactionData" in b;
          }
          f.GetTransactionStatus = p, f.isSimulationError = function(b) {
            return "error" in b;
          }, f.isSimulationSuccess = g, f.isSimulationRestore = function(b) {
            return g(b) && "restorePreamble" in b && !!b.restorePreamble.transactionData;
          }, f.isSimulationRaw = function(b) {
            return !b._parsed;
          };
        }(d || (d = {}));
      }, 4193: function(s, i, u) {
        var d, f, p;
        (function(g, b) {
          s.exports ? s.exports = b(u(9340), u(1430), u(4704)) : (f = [u(9340), u(1430), u(4704)], (p = typeof (d = b) == "function" ? d.apply(i, f) : d) === void 0 || (s.exports = p));
        })(0, function(g, b, h, m) {
          var c = m && m.URI;
          function w(I, nt) {
            var ft = arguments.length >= 1;
            if (!(this instanceof w)) return ft ? arguments.length >= 2 ? new w(I, nt) : new w(I) : new w();
            if (I === void 0) {
              if (ft) throw new TypeError("undefined is not a valid argument for URI");
              I = typeof location < "u" ? location.href + "" : "";
            }
            if (I === null && ft) throw new TypeError("null is not a valid argument for URI");
            return this.href(I), nt !== void 0 ? this.absoluteTo(nt) : this;
          }
          w.version = "1.19.11";
          var T = w.prototype, P = Object.prototype.hasOwnProperty;
          function k(I) {
            return I.replace(/([.*+?^=!:${}()|[\]\/\\])/g, "\\$1");
          }
          function R(I) {
            return I === void 0 ? "Undefined" : String(Object.prototype.toString.call(I)).slice(8, -1);
          }
          function F(I) {
            return R(I) === "Array";
          }
          function v(I, nt) {
            var ft, dt, Lt = {};
            if (R(nt) === "RegExp") Lt = null;
            else if (F(nt)) for (ft = 0, dt = nt.length; ft < dt; ft++) Lt[nt[ft]] = true;
            else Lt[nt] = true;
            for (ft = 0, dt = I.length; ft < dt; ft++) (Lt && Lt[I[ft]] !== void 0 || !Lt && nt.test(I[ft])) && (I.splice(ft, 1), dt--, ft--);
            return I;
          }
          function U(I, nt) {
            var ft, dt;
            if (F(nt)) {
              for (ft = 0, dt = nt.length; ft < dt; ft++) if (!U(I, nt[ft])) return false;
              return true;
            }
            var Lt = R(nt);
            for (ft = 0, dt = I.length; ft < dt; ft++) if (Lt === "RegExp") {
              if (typeof I[ft] == "string" && I[ft].match(nt)) return true;
            } else if (I[ft] === nt) return true;
            return false;
          }
          function M(I, nt) {
            if (!F(I) || !F(nt) || I.length !== nt.length) return false;
            I.sort(), nt.sort();
            for (var ft = 0, dt = I.length; ft < dt; ft++) if (I[ft] !== nt[ft]) return false;
            return true;
          }
          function Z(I) {
            return I.replace(/^\/+|\/+$/g, "");
          }
          function D(I) {
            return escape(I);
          }
          function V(I) {
            return encodeURIComponent(I).replace(/[!'()*]/g, D).replace(/\*/g, "%2A");
          }
          w._parts = function() {
            return { protocol: null, username: null, password: null, hostname: null, urn: null, port: null, path: null, query: null, fragment: null, preventInvalidHostname: w.preventInvalidHostname, duplicateQueryParameters: w.duplicateQueryParameters, escapeQuerySpace: w.escapeQuerySpace };
          }, w.preventInvalidHostname = false, w.duplicateQueryParameters = false, w.escapeQuerySpace = true, w.protocol_expression = /^[a-z][a-z0-9.+-]*$/i, w.idn_expression = /[^a-z0-9\._-]/i, w.punycode_expression = /(xn--)/i, w.ip4_expression = /^\d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3}$/, w.ip6_expression = /^\s*((([0-9A-Fa-f]{1,4}:){7}([0-9A-Fa-f]{1,4}|:))|(([0-9A-Fa-f]{1,4}:){6}(:[0-9A-Fa-f]{1,4}|((25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)(\.(25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)){3})|:))|(([0-9A-Fa-f]{1,4}:){5}(((:[0-9A-Fa-f]{1,4}){1,2})|:((25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)(\.(25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)){3})|:))|(([0-9A-Fa-f]{1,4}:){4}(((:[0-9A-Fa-f]{1,4}){1,3})|((:[0-9A-Fa-f]{1,4})?:((25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)(\.(25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)){3}))|:))|(([0-9A-Fa-f]{1,4}:){3}(((:[0-9A-Fa-f]{1,4}){1,4})|((:[0-9A-Fa-f]{1,4}){0,2}:((25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)(\.(25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)){3}))|:))|(([0-9A-Fa-f]{1,4}:){2}(((:[0-9A-Fa-f]{1,4}){1,5})|((:[0-9A-Fa-f]{1,4}){0,3}:((25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)(\.(25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)){3}))|:))|(([0-9A-Fa-f]{1,4}:){1}(((:[0-9A-Fa-f]{1,4}){1,6})|((:[0-9A-Fa-f]{1,4}){0,4}:((25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)(\.(25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)){3}))|:))|(:(((:[0-9A-Fa-f]{1,4}){1,7})|((:[0-9A-Fa-f]{1,4}){0,5}:((25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)(\.(25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)){3}))|:)))(%.+)?\s*$/, w.find_uri_expression = /\b((?:[a-z][\w-]+:(?:\/{1,3}|[a-z0-9%])|www\d{0,3}[.]|[a-z0-9.\-]+[.][a-z]{2,4}\/)(?:[^\s()<>]+|\(([^\s()<>]+|(\([^\s()<>]+\)))*\))+(?:\(([^\s()<>]+|(\([^\s()<>]+\)))*\)|[^\s`!()\[\]{};:'".,<>?\xab\xbb\u201c\u201d\u2018\u2019]))/gi, w.findUri = { start: /\b(?:([a-z][a-z0-9.+-]*:\/\/)|www\.)/gi, end: /[\s\r\n]|$/, trim: /[`!()\[\]{};:'".,<>?\xab\xbb\u201c\u201d\u201e\u2018\u2019]+$/, parens: /(\([^\)]*\)|\[[^\]]*\]|\{[^}]*\}|<[^>]*>)/g }, w.leading_whitespace_expression = /^[\x00-\x20\u00a0\u1680\u2000-\u200a\u2028\u2029\u202f\u205f\u3000\ufeff]+/, w.ascii_tab_whitespace = /[\u0009\u000A\u000D]+/g, w.defaultPorts = { http: "80", https: "443", ftp: "21", gopher: "70", ws: "80", wss: "443" }, w.hostProtocols = ["http", "https"], w.invalid_hostname_characters = /[^a-zA-Z0-9\.\-:_]/, w.domAttributes = { a: "href", blockquote: "cite", link: "href", base: "href", script: "src", form: "action", img: "src", area: "href", iframe: "src", embed: "src", source: "src", track: "src", input: "src", audio: "src", video: "src" }, w.getDomAttribute = function(I) {
            if (I && I.nodeName) {
              var nt = I.nodeName.toLowerCase();
              if (nt !== "input" || I.type === "image") return w.domAttributes[nt];
            }
          }, w.encode = V, w.decode = decodeURIComponent, w.iso8859 = function() {
            w.encode = escape, w.decode = unescape;
          }, w.unicode = function() {
            w.encode = V, w.decode = decodeURIComponent;
          }, w.characters = { pathname: { encode: { expression: /%(24|26|2B|2C|3B|3D|3A|40)/gi, map: { "%24": "$", "%26": "&", "%2B": "+", "%2C": ",", "%3B": ";", "%3D": "=", "%3A": ":", "%40": "@" } }, decode: { expression: /[\/\?#]/g, map: { "/": "%2F", "?": "%3F", "#": "%23" } } }, reserved: { encode: { expression: /%(21|23|24|26|27|28|29|2A|2B|2C|2F|3A|3B|3D|3F|40|5B|5D)/gi, map: { "%3A": ":", "%2F": "/", "%3F": "?", "%23": "#", "%5B": "[", "%5D": "]", "%40": "@", "%21": "!", "%24": "$", "%26": "&", "%27": "'", "%28": "(", "%29": ")", "%2A": "*", "%2B": "+", "%2C": ",", "%3B": ";", "%3D": "=" } } }, urnpath: { encode: { expression: /%(21|24|27|28|29|2A|2B|2C|3B|3D|40)/gi, map: { "%21": "!", "%24": "$", "%27": "'", "%28": "(", "%29": ")", "%2A": "*", "%2B": "+", "%2C": ",", "%3B": ";", "%3D": "=", "%40": "@" } }, decode: { expression: /[\/\?#:]/g, map: { "/": "%2F", "?": "%3F", "#": "%23", ":": "%3A" } } } }, w.encodeQuery = function(I, nt) {
            var ft = w.encode(I + "");
            return nt === void 0 && (nt = w.escapeQuerySpace), nt ? ft.replace(/%20/g, "+") : ft;
          }, w.decodeQuery = function(I, nt) {
            I += "", nt === void 0 && (nt = w.escapeQuerySpace);
            try {
              return w.decode(nt ? I.replace(/\+/g, "%20") : I);
            } catch {
              return I;
            }
          };
          var S, x = { encode: "encode", decode: "decode" }, B = function(I, nt) {
            return function(ft) {
              try {
                return w[nt](ft + "").replace(w.characters[I][nt].expression, function(dt) {
                  return w.characters[I][nt].map[dt];
                });
              } catch {
                return ft;
              }
            };
          };
          for (S in x) w[S + "PathSegment"] = B("pathname", x[S]), w[S + "UrnPathSegment"] = B("urnpath", x[S]);
          var W = function(I, nt, ft) {
            return function(dt) {
              var Lt;
              Lt = ft ? function(Ot) {
                return w[nt](w[ft](Ot));
              } : w[nt];
              for (var $ = (dt + "").split(I), it = 0, mt = $.length; it < mt; it++) $[it] = Lt($[it]);
              return $.join(I);
            };
          };
          function lt(I) {
            return function(nt, ft) {
              return nt === void 0 ? this._parts[I] || "" : (this._parts[I] = nt || null, this.build(!ft), this);
            };
          }
          function pt(I, nt) {
            return function(ft, dt) {
              return ft === void 0 ? this._parts[I] || "" : (ft !== null && (ft += "").charAt(0) === nt && (ft = ft.substring(1)), this._parts[I] = ft, this.build(!dt), this);
            };
          }
          w.decodePath = W("/", "decodePathSegment"), w.decodeUrnPath = W(":", "decodeUrnPathSegment"), w.recodePath = W("/", "encodePathSegment", "decode"), w.recodeUrnPath = W(":", "encodeUrnPathSegment", "decode"), w.encodeReserved = B("reserved", "encode"), w.parse = function(I, nt) {
            var ft;
            return nt || (nt = { preventInvalidHostname: w.preventInvalidHostname }), (ft = (I = (I = I.replace(w.leading_whitespace_expression, "")).replace(w.ascii_tab_whitespace, "")).indexOf("#")) > -1 && (nt.fragment = I.substring(ft + 1) || null, I = I.substring(0, ft)), (ft = I.indexOf("?")) > -1 && (nt.query = I.substring(ft + 1) || null, I = I.substring(0, ft)), (I = (I = I.replace(/^(https?|ftp|wss?)?:+[/\\]*/i, "$1://")).replace(/^[/\\]{2,}/i, "//")).substring(0, 2) === "//" ? (nt.protocol = null, I = I.substring(2), I = w.parseAuthority(I, nt)) : (ft = I.indexOf(":")) > -1 && (nt.protocol = I.substring(0, ft) || null, nt.protocol && !nt.protocol.match(w.protocol_expression) ? nt.protocol = void 0 : I.substring(ft + 1, ft + 3).replace(/\\/g, "/") === "//" ? (I = I.substring(ft + 3), I = w.parseAuthority(I, nt)) : (I = I.substring(ft + 1), nt.urn = true)), nt.path = I, nt;
          }, w.parseHost = function(I, nt) {
            I || (I = "");
            var ft, dt, Lt = (I = I.replace(/\\/g, "/")).indexOf("/");
            if (Lt === -1 && (Lt = I.length), I.charAt(0) === "[") ft = I.indexOf("]"), nt.hostname = I.substring(1, ft) || null, nt.port = I.substring(ft + 2, Lt) || null, nt.port === "/" && (nt.port = null);
            else {
              var $ = I.indexOf(":"), it = I.indexOf("/"), mt = I.indexOf(":", $ + 1);
              mt !== -1 && (it === -1 || mt < it) ? (nt.hostname = I.substring(0, Lt) || null, nt.port = null) : (dt = I.substring(0, Lt).split(":"), nt.hostname = dt[0] || null, nt.port = dt[1] || null);
            }
            return nt.hostname && I.substring(Lt).charAt(0) !== "/" && (Lt++, I = "/" + I), nt.preventInvalidHostname && w.ensureValidHostname(nt.hostname, nt.protocol), nt.port && w.ensureValidPort(nt.port), I.substring(Lt) || "/";
          }, w.parseAuthority = function(I, nt) {
            return I = w.parseUserinfo(I, nt), w.parseHost(I, nt);
          }, w.parseUserinfo = function(I, nt) {
            var ft = I;
            I.indexOf("\\") !== -1 && (I = I.replace(/\\/g, "/"));
            var dt, Lt = I.indexOf("/"), $ = I.lastIndexOf("@", Lt > -1 ? Lt : I.length - 1);
            return $ > -1 && (Lt === -1 || $ < Lt) ? (dt = I.substring(0, $).split(":"), nt.username = dt[0] ? w.decode(dt[0]) : null, dt.shift(), nt.password = dt[0] ? w.decode(dt.join(":")) : null, I = ft.substring($ + 1)) : (nt.username = null, nt.password = null), I;
          }, w.parseQuery = function(I, nt) {
            if (!I) return {};
            if (!(I = I.replace(/&+/g, "&").replace(/^\?*&*|&+$/g, ""))) return {};
            for (var ft, dt, Lt, $ = {}, it = I.split("&"), mt = it.length, Ot = 0; Ot < mt; Ot++) ft = it[Ot].split("="), dt = w.decodeQuery(ft.shift(), nt), Lt = ft.length ? w.decodeQuery(ft.join("="), nt) : null, dt !== "__proto__" && (P.call($, dt) ? (typeof $[dt] != "string" && $[dt] !== null || ($[dt] = [$[dt]]), $[dt].push(Lt)) : $[dt] = Lt);
            return $;
          }, w.build = function(I) {
            var nt = "", ft = false;
            return I.protocol && (nt += I.protocol + ":"), I.urn || !nt && !I.hostname || (nt += "//", ft = true), nt += w.buildAuthority(I) || "", typeof I.path == "string" && (I.path.charAt(0) !== "/" && ft && (nt += "/"), nt += I.path), typeof I.query == "string" && I.query && (nt += "?" + I.query), typeof I.fragment == "string" && I.fragment && (nt += "#" + I.fragment), nt;
          }, w.buildHost = function(I) {
            var nt = "";
            return I.hostname ? (w.ip6_expression.test(I.hostname) ? nt += "[" + I.hostname + "]" : nt += I.hostname, I.port && (nt += ":" + I.port), nt) : "";
          }, w.buildAuthority = function(I) {
            return w.buildUserinfo(I) + w.buildHost(I);
          }, w.buildUserinfo = function(I) {
            var nt = "";
            return I.username && (nt += w.encode(I.username)), I.password && (nt += ":" + w.encode(I.password)), nt && (nt += "@"), nt;
          }, w.buildQuery = function(I, nt, ft) {
            var dt, Lt, $, it, mt = "";
            for (Lt in I) if (Lt !== "__proto__" && P.call(I, Lt)) if (F(I[Lt])) for (dt = {}, $ = 0, it = I[Lt].length; $ < it; $++) I[Lt][$] !== void 0 && dt[I[Lt][$] + ""] === void 0 && (mt += "&" + w.buildQueryParameter(Lt, I[Lt][$], ft), nt !== true && (dt[I[Lt][$] + ""] = true));
            else I[Lt] !== void 0 && (mt += "&" + w.buildQueryParameter(Lt, I[Lt], ft));
            return mt.substring(1);
          }, w.buildQueryParameter = function(I, nt, ft) {
            return w.encodeQuery(I, ft) + (nt !== null ? "=" + w.encodeQuery(nt, ft) : "");
          }, w.addQuery = function(I, nt, ft) {
            if (typeof nt == "object") for (var dt in nt) P.call(nt, dt) && w.addQuery(I, dt, nt[dt]);
            else {
              if (typeof nt != "string") throw new TypeError("URI.addQuery() accepts an object, string as the name parameter");
              if (I[nt] === void 0) return void (I[nt] = ft);
              typeof I[nt] == "string" && (I[nt] = [I[nt]]), F(ft) || (ft = [ft]), I[nt] = (I[nt] || []).concat(ft);
            }
          }, w.setQuery = function(I, nt, ft) {
            if (typeof nt == "object") for (var dt in nt) P.call(nt, dt) && w.setQuery(I, dt, nt[dt]);
            else {
              if (typeof nt != "string") throw new TypeError("URI.setQuery() accepts an object, string as the name parameter");
              I[nt] = ft === void 0 ? null : ft;
            }
          }, w.removeQuery = function(I, nt, ft) {
            var dt, Lt, $;
            if (F(nt)) for (dt = 0, Lt = nt.length; dt < Lt; dt++) I[nt[dt]] = void 0;
            else if (R(nt) === "RegExp") for ($ in I) nt.test($) && (I[$] = void 0);
            else if (typeof nt == "object") for ($ in nt) P.call(nt, $) && w.removeQuery(I, $, nt[$]);
            else {
              if (typeof nt != "string") throw new TypeError("URI.removeQuery() accepts an object, string, RegExp as the first parameter");
              ft !== void 0 ? R(ft) === "RegExp" ? !F(I[nt]) && ft.test(I[nt]) ? I[nt] = void 0 : I[nt] = v(I[nt], ft) : I[nt] !== String(ft) || F(ft) && ft.length !== 1 ? F(I[nt]) && (I[nt] = v(I[nt], ft)) : I[nt] = void 0 : I[nt] = void 0;
            }
          }, w.hasQuery = function(I, nt, ft, dt) {
            switch (R(nt)) {
              case "String":
                break;
              case "RegExp":
                for (var Lt in I) if (P.call(I, Lt) && nt.test(Lt) && (ft === void 0 || w.hasQuery(I, Lt, ft))) return true;
                return false;
              case "Object":
                for (var $ in nt) if (P.call(nt, $) && !w.hasQuery(I, $, nt[$])) return false;
                return true;
              default:
                throw new TypeError("URI.hasQuery() accepts a string, regular expression or object as the name parameter");
            }
            switch (R(ft)) {
              case "Undefined":
                return nt in I;
              case "Boolean":
                return ft === !!(F(I[nt]) ? I[nt].length : I[nt]);
              case "Function":
                return !!ft(I[nt], nt, I);
              case "Array":
                return !!F(I[nt]) && (dt ? U : M)(I[nt], ft);
              case "RegExp":
                return F(I[nt]) ? !!dt && U(I[nt], ft) : !!(I[nt] && I[nt].match(ft));
              case "Number":
                ft = String(ft);
              case "String":
                return F(I[nt]) ? !!dt && U(I[nt], ft) : I[nt] === ft;
              default:
                throw new TypeError("URI.hasQuery() accepts undefined, boolean, string, number, RegExp, Function as the value parameter");
            }
          }, w.joinPaths = function() {
            for (var I = [], nt = [], ft = 0, dt = 0; dt < arguments.length; dt++) {
              var Lt = new w(arguments[dt]);
              I.push(Lt);
              for (var $ = Lt.segment(), it = 0; it < $.length; it++) typeof $[it] == "string" && nt.push($[it]), $[it] && ft++;
            }
            if (!nt.length || !ft) return new w("");
            var mt = new w("").segment(nt);
            return I[0].path() !== "" && I[0].path().slice(0, 1) !== "/" || mt.path("/" + mt.path()), mt.normalize();
          }, w.commonPath = function(I, nt) {
            var ft, dt = Math.min(I.length, nt.length);
            for (ft = 0; ft < dt; ft++) if (I.charAt(ft) !== nt.charAt(ft)) {
              ft--;
              break;
            }
            return ft < 1 ? I.charAt(0) === nt.charAt(0) && I.charAt(0) === "/" ? "/" : "" : (I.charAt(ft) === "/" && nt.charAt(ft) === "/" || (ft = I.substring(0, ft).lastIndexOf("/")), I.substring(0, ft + 1));
          }, w.withinString = function(I, nt, ft) {
            ft || (ft = {});
            var dt = ft.start || w.findUri.start, Lt = ft.end || w.findUri.end, $ = ft.trim || w.findUri.trim, it = ft.parens || w.findUri.parens, mt = /[a-z0-9-]=["']?$/i;
            for (dt.lastIndex = 0; ; ) {
              var Ot = dt.exec(I);
              if (!Ot) break;
              var bt = Ot.index;
              if (ft.ignoreHtml) {
                var xt = I.slice(Math.max(bt - 3, 0), bt);
                if (xt && mt.test(xt)) continue;
              }
              for (var Ct = bt + I.slice(bt).search(Lt), Tt = I.slice(bt, Ct), Bt = -1; ; ) {
                var At = it.exec(Tt);
                if (!At) break;
                var Ut = At.index + At[0].length;
                Bt = Math.max(Bt, Ut);
              }
              if (!((Tt = Bt > -1 ? Tt.slice(0, Bt) + Tt.slice(Bt).replace($, "") : Tt.replace($, "")).length <= Ot[0].length || ft.ignore && ft.ignore.test(Tt))) {
                var Vt = nt(Tt, bt, Ct = bt + Tt.length, I);
                Vt !== void 0 ? (Vt = String(Vt), I = I.slice(0, bt) + Vt + I.slice(Ct), dt.lastIndex = bt + Vt.length) : dt.lastIndex = Ct;
              }
            }
            return dt.lastIndex = 0, I;
          }, w.ensureValidHostname = function(I, nt) {
            var ft = !!I, dt = false;
            if (nt && (dt = U(w.hostProtocols, nt)), dt && !ft) throw new TypeError("Hostname cannot be empty, if protocol is " + nt);
            if (I && I.match(w.invalid_hostname_characters)) {
              if (!g) throw new TypeError('Hostname "' + I + '" contains characters other than [A-Z0-9.-:_] and Punycode.js is not available');
              if (g.toASCII(I).match(w.invalid_hostname_characters)) throw new TypeError('Hostname "' + I + '" contains characters other than [A-Z0-9.-:_]');
            }
          }, w.ensureValidPort = function(I) {
            if (I) {
              var nt = Number(I);
              if (!(/^[0-9]+$/.test(nt) && nt > 0 && nt < 65536)) throw new TypeError('Port "' + I + '" is not a valid port');
            }
          }, w.noConflict = function(I) {
            if (I) {
              var nt = { URI: this.noConflict() };
              return m.URITemplate && typeof m.URITemplate.noConflict == "function" && (nt.URITemplate = m.URITemplate.noConflict()), m.IPv6 && typeof m.IPv6.noConflict == "function" && (nt.IPv6 = m.IPv6.noConflict()), m.SecondLevelDomains && typeof m.SecondLevelDomains.noConflict == "function" && (nt.SecondLevelDomains = m.SecondLevelDomains.noConflict()), nt;
            }
            return m.URI === this && (m.URI = c), this;
          }, T.build = function(I) {
            return I === true ? this._deferred_build = true : (I === void 0 || this._deferred_build) && (this._string = w.build(this._parts), this._deferred_build = false), this;
          }, T.clone = function() {
            return new w(this);
          }, T.valueOf = T.toString = function() {
            return this.build(false)._string;
          }, T.protocol = lt("protocol"), T.username = lt("username"), T.password = lt("password"), T.hostname = lt("hostname"), T.port = lt("port"), T.query = pt("query", "?"), T.fragment = pt("fragment", "#"), T.search = function(I, nt) {
            var ft = this.query(I, nt);
            return typeof ft == "string" && ft.length ? "?" + ft : ft;
          }, T.hash = function(I, nt) {
            var ft = this.fragment(I, nt);
            return typeof ft == "string" && ft.length ? "#" + ft : ft;
          }, T.pathname = function(I, nt) {
            if (I === void 0 || I === true) {
              var ft = this._parts.path || (this._parts.hostname ? "/" : "");
              return I ? (this._parts.urn ? w.decodeUrnPath : w.decodePath)(ft) : ft;
            }
            return this._parts.urn ? this._parts.path = I ? w.recodeUrnPath(I) : "" : this._parts.path = I ? w.recodePath(I) : "/", this.build(!nt), this;
          }, T.path = T.pathname, T.href = function(I, nt) {
            var ft;
            if (I === void 0) return this.toString();
            this._string = "", this._parts = w._parts();
            var dt = I instanceof w, Lt = typeof I == "object" && (I.hostname || I.path || I.pathname);
            if (I.nodeName && (I = I[w.getDomAttribute(I)] || "", Lt = false), !dt && Lt && I.pathname !== void 0 && (I = I.toString()), typeof I == "string" || I instanceof String) this._parts = w.parse(String(I), this._parts);
            else {
              if (!dt && !Lt) throw new TypeError("invalid input");
              var $ = dt ? I._parts : I;
              for (ft in $) ft !== "query" && P.call(this._parts, ft) && (this._parts[ft] = $[ft]);
              $.query && this.query($.query, false);
            }
            return this.build(!nt), this;
          }, T.is = function(I) {
            var nt = false, ft = false, dt = false, Lt = false, $ = false, it = false, mt = false, Ot = !this._parts.urn;
            switch (this._parts.hostname && (Ot = false, ft = w.ip4_expression.test(this._parts.hostname), dt = w.ip6_expression.test(this._parts.hostname), $ = (Lt = !(nt = ft || dt)) && h && h.has(this._parts.hostname), it = Lt && w.idn_expression.test(this._parts.hostname), mt = Lt && w.punycode_expression.test(this._parts.hostname)), I.toLowerCase()) {
              case "relative":
                return Ot;
              case "absolute":
                return !Ot;
              case "domain":
              case "name":
                return Lt;
              case "sld":
                return $;
              case "ip":
                return nt;
              case "ip4":
              case "ipv4":
              case "inet4":
                return ft;
              case "ip6":
              case "ipv6":
              case "inet6":
                return dt;
              case "idn":
                return it;
              case "url":
                return !this._parts.urn;
              case "urn":
                return !!this._parts.urn;
              case "punycode":
                return mt;
            }
            return null;
          };
          var at = T.protocol, rt = T.port, ot = T.hostname;
          T.protocol = function(I, nt) {
            if (I && !(I = I.replace(/:(\/\/)?$/, "")).match(w.protocol_expression)) throw new TypeError('Protocol "' + I + `" contains characters other than [A-Z0-9.+-] or doesn't start with [A-Z]`);
            return at.call(this, I, nt);
          }, T.scheme = T.protocol, T.port = function(I, nt) {
            return this._parts.urn ? I === void 0 ? "" : this : (I !== void 0 && (I === 0 && (I = null), I && ((I += "").charAt(0) === ":" && (I = I.substring(1)), w.ensureValidPort(I))), rt.call(this, I, nt));
          }, T.hostname = function(I, nt) {
            if (this._parts.urn) return I === void 0 ? "" : this;
            if (I !== void 0) {
              var ft = { preventInvalidHostname: this._parts.preventInvalidHostname };
              if (w.parseHost(I, ft) !== "/") throw new TypeError('Hostname "' + I + '" contains characters other than [A-Z0-9.-]');
              I = ft.hostname, this._parts.preventInvalidHostname && w.ensureValidHostname(I, this._parts.protocol);
            }
            return ot.call(this, I, nt);
          }, T.origin = function(I, nt) {
            if (this._parts.urn) return I === void 0 ? "" : this;
            if (I === void 0) {
              var ft = this.protocol();
              return this.authority() ? (ft ? ft + "://" : "") + this.authority() : "";
            }
            var dt = w(I);
            return this.protocol(dt.protocol()).authority(dt.authority()).build(!nt), this;
          }, T.host = function(I, nt) {
            if (this._parts.urn) return I === void 0 ? "" : this;
            if (I === void 0) return this._parts.hostname ? w.buildHost(this._parts) : "";
            if (w.parseHost(I, this._parts) !== "/") throw new TypeError('Hostname "' + I + '" contains characters other than [A-Z0-9.-]');
            return this.build(!nt), this;
          }, T.authority = function(I, nt) {
            if (this._parts.urn) return I === void 0 ? "" : this;
            if (I === void 0) return this._parts.hostname ? w.buildAuthority(this._parts) : "";
            if (w.parseAuthority(I, this._parts) !== "/") throw new TypeError('Hostname "' + I + '" contains characters other than [A-Z0-9.-]');
            return this.build(!nt), this;
          }, T.userinfo = function(I, nt) {
            if (this._parts.urn) return I === void 0 ? "" : this;
            if (I === void 0) {
              var ft = w.buildUserinfo(this._parts);
              return ft && ft.substring(0, ft.length - 1);
            }
            return I[I.length - 1] !== "@" && (I += "@"), w.parseUserinfo(I, this._parts), this.build(!nt), this;
          }, T.resource = function(I, nt) {
            var ft;
            return I === void 0 ? this.path() + this.search() + this.hash() : (ft = w.parse(I), this._parts.path = ft.path, this._parts.query = ft.query, this._parts.fragment = ft.fragment, this.build(!nt), this);
          }, T.subdomain = function(I, nt) {
            if (this._parts.urn) return I === void 0 ? "" : this;
            if (I === void 0) {
              if (!this._parts.hostname || this.is("IP")) return "";
              var ft = this._parts.hostname.length - this.domain().length - 1;
              return this._parts.hostname.substring(0, ft) || "";
            }
            var dt = this._parts.hostname.length - this.domain().length, Lt = this._parts.hostname.substring(0, dt), $ = new RegExp("^" + k(Lt));
            if (I && I.charAt(I.length - 1) !== "." && (I += "."), I.indexOf(":") !== -1) throw new TypeError("Domains cannot contain colons");
            return I && w.ensureValidHostname(I, this._parts.protocol), this._parts.hostname = this._parts.hostname.replace($, I), this.build(!nt), this;
          }, T.domain = function(I, nt) {
            if (this._parts.urn) return I === void 0 ? "" : this;
            if (typeof I == "boolean" && (nt = I, I = void 0), I === void 0) {
              if (!this._parts.hostname || this.is("IP")) return "";
              var ft = this._parts.hostname.match(/\./g);
              if (ft && ft.length < 2) return this._parts.hostname;
              var dt = this._parts.hostname.length - this.tld(nt).length - 1;
              return dt = this._parts.hostname.lastIndexOf(".", dt - 1) + 1, this._parts.hostname.substring(dt) || "";
            }
            if (!I) throw new TypeError("cannot set domain empty");
            if (I.indexOf(":") !== -1) throw new TypeError("Domains cannot contain colons");
            if (w.ensureValidHostname(I, this._parts.protocol), !this._parts.hostname || this.is("IP")) this._parts.hostname = I;
            else {
              var Lt = new RegExp(k(this.domain()) + "$");
              this._parts.hostname = this._parts.hostname.replace(Lt, I);
            }
            return this.build(!nt), this;
          }, T.tld = function(I, nt) {
            if (this._parts.urn) return I === void 0 ? "" : this;
            if (typeof I == "boolean" && (nt = I, I = void 0), I === void 0) {
              if (!this._parts.hostname || this.is("IP")) return "";
              var ft = this._parts.hostname.lastIndexOf("."), dt = this._parts.hostname.substring(ft + 1);
              return nt !== true && h && h.list[dt.toLowerCase()] && h.get(this._parts.hostname) || dt;
            }
            var Lt;
            if (!I) throw new TypeError("cannot set TLD empty");
            if (I.match(/[^a-zA-Z0-9-]/)) {
              if (!h || !h.is(I)) throw new TypeError('TLD "' + I + '" contains characters other than [A-Z0-9]');
              Lt = new RegExp(k(this.tld()) + "$"), this._parts.hostname = this._parts.hostname.replace(Lt, I);
            } else {
              if (!this._parts.hostname || this.is("IP")) throw new ReferenceError("cannot set TLD on non-domain host");
              Lt = new RegExp(k(this.tld()) + "$"), this._parts.hostname = this._parts.hostname.replace(Lt, I);
            }
            return this.build(!nt), this;
          }, T.directory = function(I, nt) {
            if (this._parts.urn) return I === void 0 ? "" : this;
            if (I === void 0 || I === true) {
              if (!this._parts.path && !this._parts.hostname) return "";
              if (this._parts.path === "/") return "/";
              var ft = this._parts.path.length - this.filename().length - 1, dt = this._parts.path.substring(0, ft) || (this._parts.hostname ? "/" : "");
              return I ? w.decodePath(dt) : dt;
            }
            var Lt = this._parts.path.length - this.filename().length, $ = this._parts.path.substring(0, Lt), it = new RegExp("^" + k($));
            return this.is("relative") || (I || (I = "/"), I.charAt(0) !== "/" && (I = "/" + I)), I && I.charAt(I.length - 1) !== "/" && (I += "/"), I = w.recodePath(I), this._parts.path = this._parts.path.replace(it, I), this.build(!nt), this;
          }, T.filename = function(I, nt) {
            if (this._parts.urn) return I === void 0 ? "" : this;
            if (typeof I != "string") {
              if (!this._parts.path || this._parts.path === "/") return "";
              var ft = this._parts.path.lastIndexOf("/"), dt = this._parts.path.substring(ft + 1);
              return I ? w.decodePathSegment(dt) : dt;
            }
            var Lt = false;
            I.charAt(0) === "/" && (I = I.substring(1)), I.match(/\.?\//) && (Lt = true);
            var $ = new RegExp(k(this.filename()) + "$");
            return I = w.recodePath(I), this._parts.path = this._parts.path.replace($, I), Lt ? this.normalizePath(nt) : this.build(!nt), this;
          }, T.suffix = function(I, nt) {
            if (this._parts.urn) return I === void 0 ? "" : this;
            if (I === void 0 || I === true) {
              if (!this._parts.path || this._parts.path === "/") return "";
              var ft, dt, Lt = this.filename(), $ = Lt.lastIndexOf(".");
              return $ === -1 ? "" : (ft = Lt.substring($ + 1), dt = /^[a-z0-9%]+$/i.test(ft) ? ft : "", I ? w.decodePathSegment(dt) : dt);
            }
            I.charAt(0) === "." && (I = I.substring(1));
            var it, mt = this.suffix();
            if (mt) it = I ? new RegExp(k(mt) + "$") : new RegExp(k("." + mt) + "$");
            else {
              if (!I) return this;
              this._parts.path += "." + w.recodePath(I);
            }
            return it && (I = w.recodePath(I), this._parts.path = this._parts.path.replace(it, I)), this.build(!nt), this;
          }, T.segment = function(I, nt, ft) {
            var dt = this._parts.urn ? ":" : "/", Lt = this.path(), $ = Lt.substring(0, 1) === "/", it = Lt.split(dt);
            if (I !== void 0 && typeof I != "number" && (ft = nt, nt = I, I = void 0), I !== void 0 && typeof I != "number") throw new Error('Bad segment "' + I + '", must be 0-based integer');
            if ($ && it.shift(), I < 0 && (I = Math.max(it.length + I, 0)), nt === void 0) return I === void 0 ? it : it[I];
            if (I === null || it[I] === void 0) if (F(nt)) {
              it = [];
              for (var mt = 0, Ot = nt.length; mt < Ot; mt++) (nt[mt].length || it.length && it[it.length - 1].length) && (it.length && !it[it.length - 1].length && it.pop(), it.push(Z(nt[mt])));
            } else (nt || typeof nt == "string") && (nt = Z(nt), it[it.length - 1] === "" ? it[it.length - 1] = nt : it.push(nt));
            else nt ? it[I] = Z(nt) : it.splice(I, 1);
            return $ && it.unshift(""), this.path(it.join(dt), ft);
          }, T.segmentCoded = function(I, nt, ft) {
            var dt, Lt, $;
            if (typeof I != "number" && (ft = nt, nt = I, I = void 0), nt === void 0) {
              if (F(dt = this.segment(I, nt, ft))) for (Lt = 0, $ = dt.length; Lt < $; Lt++) dt[Lt] = w.decode(dt[Lt]);
              else dt = dt !== void 0 ? w.decode(dt) : void 0;
              return dt;
            }
            if (F(nt)) for (Lt = 0, $ = nt.length; Lt < $; Lt++) nt[Lt] = w.encode(nt[Lt]);
            else nt = typeof nt == "string" || nt instanceof String ? w.encode(nt) : nt;
            return this.segment(I, nt, ft);
          };
          var X = T.query;
          return T.query = function(I, nt) {
            if (I === true) return w.parseQuery(this._parts.query, this._parts.escapeQuerySpace);
            if (typeof I == "function") {
              var ft = w.parseQuery(this._parts.query, this._parts.escapeQuerySpace), dt = I.call(this, ft);
              return this._parts.query = w.buildQuery(dt || ft, this._parts.duplicateQueryParameters, this._parts.escapeQuerySpace), this.build(!nt), this;
            }
            return I !== void 0 && typeof I != "string" ? (this._parts.query = w.buildQuery(I, this._parts.duplicateQueryParameters, this._parts.escapeQuerySpace), this.build(!nt), this) : X.call(this, I, nt);
          }, T.setQuery = function(I, nt, ft) {
            var dt = w.parseQuery(this._parts.query, this._parts.escapeQuerySpace);
            if (typeof I == "string" || I instanceof String) dt[I] = nt !== void 0 ? nt : null;
            else {
              if (typeof I != "object") throw new TypeError("URI.addQuery() accepts an object, string as the name parameter");
              for (var Lt in I) P.call(I, Lt) && (dt[Lt] = I[Lt]);
            }
            return this._parts.query = w.buildQuery(dt, this._parts.duplicateQueryParameters, this._parts.escapeQuerySpace), typeof I != "string" && (ft = nt), this.build(!ft), this;
          }, T.addQuery = function(I, nt, ft) {
            var dt = w.parseQuery(this._parts.query, this._parts.escapeQuerySpace);
            return w.addQuery(dt, I, nt === void 0 ? null : nt), this._parts.query = w.buildQuery(dt, this._parts.duplicateQueryParameters, this._parts.escapeQuerySpace), typeof I != "string" && (ft = nt), this.build(!ft), this;
          }, T.removeQuery = function(I, nt, ft) {
            var dt = w.parseQuery(this._parts.query, this._parts.escapeQuerySpace);
            return w.removeQuery(dt, I, nt), this._parts.query = w.buildQuery(dt, this._parts.duplicateQueryParameters, this._parts.escapeQuerySpace), typeof I != "string" && (ft = nt), this.build(!ft), this;
          }, T.hasQuery = function(I, nt, ft) {
            var dt = w.parseQuery(this._parts.query, this._parts.escapeQuerySpace);
            return w.hasQuery(dt, I, nt, ft);
          }, T.setSearch = T.setQuery, T.addSearch = T.addQuery, T.removeSearch = T.removeQuery, T.hasSearch = T.hasQuery, T.normalize = function() {
            return this._parts.urn ? this.normalizeProtocol(false).normalizePath(false).normalizeQuery(false).normalizeFragment(false).build() : this.normalizeProtocol(false).normalizeHostname(false).normalizePort(false).normalizePath(false).normalizeQuery(false).normalizeFragment(false).build();
          }, T.normalizeProtocol = function(I) {
            return typeof this._parts.protocol == "string" && (this._parts.protocol = this._parts.protocol.toLowerCase(), this.build(!I)), this;
          }, T.normalizeHostname = function(I) {
            return this._parts.hostname && (this.is("IDN") && g ? this._parts.hostname = g.toASCII(this._parts.hostname) : this.is("IPv6") && b && (this._parts.hostname = b.best(this._parts.hostname)), this._parts.hostname = this._parts.hostname.toLowerCase(), this.build(!I)), this;
          }, T.normalizePort = function(I) {
            return typeof this._parts.protocol == "string" && this._parts.port === w.defaultPorts[this._parts.protocol] && (this._parts.port = null, this.build(!I)), this;
          }, T.normalizePath = function(I) {
            var nt, ft = this._parts.path;
            if (!ft) return this;
            if (this._parts.urn) return this._parts.path = w.recodeUrnPath(this._parts.path), this.build(!I), this;
            if (this._parts.path === "/") return this;
            var dt, Lt, $ = "";
            for ((ft = w.recodePath(ft)).charAt(0) !== "/" && (nt = true, ft = "/" + ft), ft.slice(-3) !== "/.." && ft.slice(-2) !== "/." || (ft += "/"), ft = ft.replace(/(\/(\.\/)+)|(\/\.$)/g, "/").replace(/\/{2,}/g, "/"), nt && ($ = ft.substring(1).match(/^(\.\.\/)+/) || "") && ($ = $[0]); (dt = ft.search(/\/\.\.(\/|$)/)) !== -1; ) dt !== 0 ? ((Lt = ft.substring(0, dt).lastIndexOf("/")) === -1 && (Lt = dt), ft = ft.substring(0, Lt) + ft.substring(dt + 3)) : ft = ft.substring(3);
            return nt && this.is("relative") && (ft = $ + ft.substring(1)), this._parts.path = ft, this.build(!I), this;
          }, T.normalizePathname = T.normalizePath, T.normalizeQuery = function(I) {
            return typeof this._parts.query == "string" && (this._parts.query.length ? this.query(w.parseQuery(this._parts.query, this._parts.escapeQuerySpace)) : this._parts.query = null, this.build(!I)), this;
          }, T.normalizeFragment = function(I) {
            return this._parts.fragment || (this._parts.fragment = null, this.build(!I)), this;
          }, T.normalizeSearch = T.normalizeQuery, T.normalizeHash = T.normalizeFragment, T.iso8859 = function() {
            var I = w.encode, nt = w.decode;
            w.encode = escape, w.decode = decodeURIComponent;
            try {
              this.normalize();
            } finally {
              w.encode = I, w.decode = nt;
            }
            return this;
          }, T.unicode = function() {
            var I = w.encode, nt = w.decode;
            w.encode = V, w.decode = unescape;
            try {
              this.normalize();
            } finally {
              w.encode = I, w.decode = nt;
            }
            return this;
          }, T.readable = function() {
            var I = this.clone();
            I.username("").password("").normalize();
            var nt = "";
            if (I._parts.protocol && (nt += I._parts.protocol + "://"), I._parts.hostname && (I.is("punycode") && g ? (nt += g.toUnicode(I._parts.hostname), I._parts.port && (nt += ":" + I._parts.port)) : nt += I.host()), I._parts.hostname && I._parts.path && I._parts.path.charAt(0) !== "/" && (nt += "/"), nt += I.path(true), I._parts.query) {
              for (var ft = "", dt = 0, Lt = I._parts.query.split("&"), $ = Lt.length; dt < $; dt++) {
                var it = (Lt[dt] || "").split("=");
                ft += "&" + w.decodeQuery(it[0], this._parts.escapeQuerySpace).replace(/&/g, "%26"), it[1] !== void 0 && (ft += "=" + w.decodeQuery(it[1], this._parts.escapeQuerySpace).replace(/&/g, "%26"));
              }
              nt += "?" + ft.substring(1);
            }
            return nt += w.decodeQuery(I.hash(), true);
          }, T.absoluteTo = function(I) {
            var nt, ft, dt, Lt = this.clone(), $ = ["protocol", "username", "password", "hostname", "port"];
            if (this._parts.urn) throw new Error("URNs do not have any generally defined hierarchical components");
            if (I instanceof w || (I = new w(I)), Lt._parts.protocol || (Lt._parts.protocol = I._parts.protocol, this._parts.hostname)) return Lt;
            for (ft = 0; dt = $[ft]; ft++) Lt._parts[dt] = I._parts[dt];
            return Lt._parts.path ? (Lt._parts.path.substring(-2) === ".." && (Lt._parts.path += "/"), Lt.path().charAt(0) !== "/" && (nt = (nt = I.directory()) || (I.path().indexOf("/") === 0 ? "/" : ""), Lt._parts.path = (nt ? nt + "/" : "") + Lt._parts.path, Lt.normalizePath())) : (Lt._parts.path = I._parts.path, Lt._parts.query || (Lt._parts.query = I._parts.query)), Lt.build(), Lt;
          }, T.relativeTo = function(I) {
            var nt, ft, dt, Lt, $, it = this.clone().normalize();
            if (it._parts.urn) throw new Error("URNs do not have any generally defined hierarchical components");
            if (I = new w(I).normalize(), nt = it._parts, ft = I._parts, Lt = it.path(), $ = I.path(), Lt.charAt(0) !== "/") throw new Error("URI is already relative");
            if ($.charAt(0) !== "/") throw new Error("Cannot calculate a URI relative to another relative URI");
            if (nt.protocol === ft.protocol && (nt.protocol = null), nt.username !== ft.username || nt.password !== ft.password || nt.protocol !== null || nt.username !== null || nt.password !== null || nt.hostname !== ft.hostname || nt.port !== ft.port) return it.build();
            if (nt.hostname = null, nt.port = null, Lt === $) return nt.path = "", it.build();
            if (!(dt = w.commonPath(Lt, $))) return it.build();
            var mt = ft.path.substring(dt.length).replace(/[^\/]*$/, "").replace(/.*?\//g, "../");
            return nt.path = mt + nt.path.substring(dt.length) || "./", it.build();
          }, T.equals = function(I) {
            var nt, ft, dt, Lt, $, it = this.clone(), mt = new w(I), Ot = {};
            if (it.normalize(), mt.normalize(), it.toString() === mt.toString()) return true;
            if (dt = it.query(), Lt = mt.query(), it.query(""), mt.query(""), it.toString() !== mt.toString() || dt.length !== Lt.length) return false;
            for ($ in nt = w.parseQuery(dt, this._parts.escapeQuerySpace), ft = w.parseQuery(Lt, this._parts.escapeQuerySpace), nt) if (P.call(nt, $)) {
              if (F(nt[$])) {
                if (!M(nt[$], ft[$])) return false;
              } else if (nt[$] !== ft[$]) return false;
              Ot[$] = true;
            }
            for ($ in ft) if (P.call(ft, $) && !Ot[$]) return false;
            return true;
          }, T.preventInvalidHostname = function(I) {
            return this._parts.preventInvalidHostname = !!I, this;
          }, T.duplicateQueryParameters = function(I) {
            return this._parts.duplicateQueryParameters = !!I, this;
          }, T.escapeQuerySpace = function(I) {
            return this._parts.escapeQuerySpace = !!I, this;
          }, w;
        });
      }, 4356: (s, i, u) => {
        u.r(i), u.d(i, { AccountRequiresMemoError: () => d.Cu, BadRequestError: () => d.v7, BadResponseError: () => d.nS, Config: () => f.T, Federation: () => b, Friendbot: () => m, Horizon: () => c, NetworkError: () => d.Dr, NotFoundError: () => d.m_, StellarToml: () => g, Utils: () => p.A, WebAuth: () => h, contract: () => T, default: () => R, rpc: () => w });
        var d = u(5976), f = u(8732), p = u(3121), g = u(3898), b = u(7600), h = u(5479), m = u(8242), c = u(8733), w = u(3496), T = u(6299), P = u(8950), k = {};
        for (const F in P) ["default", "Config", "Utils", "StellarToml", "Federation", "WebAuth", "Friendbot", "Horizon", "rpc", "contract", "AccountRequiresMemoError", "BadRequestError", "BadResponseError", "NetworkError", "NotFoundError"].indexOf(F) < 0 && (k[F] = () => P[F]);
        u.d(i, k);
        const R = (s = u.hmd(s)).exports;
        u.g.__USE_AXIOS__ === void 0 && (u.g.__USE_AXIOS__ = true), u.g.__USE_EVENTSOURCE__ === void 0 && (u.g.__USE_EVENTSOURCE__ = false);
      }, 4459: (s) => {
        s.exports = Number.isNaN || function(i) {
          return i != i;
        };
      }, 4610: (s, i, u) => {
        s.exports = c;
        var d = u(6048).F, f = d.ERR_METHOD_NOT_IMPLEMENTED, p = d.ERR_MULTIPLE_CALLBACK, g = d.ERR_TRANSFORM_ALREADY_TRANSFORMING, b = d.ERR_TRANSFORM_WITH_LENGTH_0, h = u(5382);
        function m(P, k) {
          var R = this._transformState;
          R.transforming = false;
          var F = R.writecb;
          if (F === null) return this.emit("error", new p());
          R.writechunk = null, R.writecb = null, k != null && this.push(k), F(P);
          var v = this._readableState;
          v.reading = false, (v.needReadable || v.length < v.highWaterMark) && this._read(v.highWaterMark);
        }
        function c(P) {
          if (!(this instanceof c)) return new c(P);
          h.call(this, P), this._transformState = { afterTransform: m.bind(this), needTransform: false, transforming: false, writecb: null, writechunk: null, writeencoding: null }, this._readableState.needReadable = true, this._readableState.sync = false, P && (typeof P.transform == "function" && (this._transform = P.transform), typeof P.flush == "function" && (this._flush = P.flush)), this.on("prefinish", w);
        }
        function w() {
          var P = this;
          typeof this._flush != "function" || this._readableState.destroyed ? T(this, null, null) : this._flush(function(k, R) {
            T(P, k, R);
          });
        }
        function T(P, k, R) {
          if (k) return P.emit("error", k);
          if (R != null && P.push(R), P._writableState.length) throw new b();
          if (P._transformState.transforming) throw new g();
          return P.push(null);
        }
        u(6698)(c, h), c.prototype.push = function(P, k) {
          return this._transformState.needTransform = false, h.prototype.push.call(this, P, k);
        }, c.prototype._transform = function(P, k, R) {
          R(new f("_transform()"));
        }, c.prototype._write = function(P, k, R) {
          var F = this._transformState;
          if (F.writecb = R, F.writechunk = P, F.writeencoding = k, !F.transforming) {
            var v = this._readableState;
            (F.needTransform || v.needReadable || v.length < v.highWaterMark) && this._read(v.highWaterMark);
          }
        }, c.prototype._read = function(P) {
          var k = this._transformState;
          k.writechunk === null || k.transforming ? k.needTransform = true : (k.transforming = true, this._transform(k.writechunk, k.writeencoding, k.afterTransform));
        }, c.prototype._destroy = function(P, k) {
          h.prototype._destroy.call(this, P, function(R) {
            k(R);
          });
        };
      }, 4643: (s, i, u) => {
        function d(f) {
          try {
            if (!u.g.localStorage) return false;
          } catch {
            return false;
          }
          var p = u.g.localStorage[f];
          return p != null && String(p).toLowerCase() === "true";
        }
        s.exports = function(f, p) {
          if (d("noDeprecation")) return f;
          var g = false;
          return function() {
            if (!g) {
              if (d("throwDeprecation")) throw new Error(p);
              d("traceDeprecation") ? console.trace(p) : console.warn(p), g = true;
            }
            return f.apply(this, arguments);
          };
        };
      }, 4704: function(s, i, u) {
        var d, f;
        (function(p, g) {
          s.exports ? s.exports = g() : (f = typeof (d = g) == "function" ? d.call(i, u, i, s) : d) === void 0 || (s.exports = f);
        })(0, function(p) {
          var g = p && p.SecondLevelDomains, b = { list: { ac: " com gov mil net org ", ae: " ac co gov mil name net org pro sch ", af: " com edu gov net org ", al: " com edu gov mil net org ", ao: " co ed gv it og pb ", ar: " com edu gob gov int mil net org tur ", at: " ac co gv or ", au: " asn com csiro edu gov id net org ", ba: " co com edu gov mil net org rs unbi unmo unsa untz unze ", bb: " biz co com edu gov info net org store tv ", bh: " biz cc com edu gov info net org ", bn: " com edu gov net org ", bo: " com edu gob gov int mil net org tv ", br: " adm adv agr am arq art ato b bio blog bmd cim cng cnt com coop ecn edu eng esp etc eti far flog fm fnd fot fst g12 ggf gov imb ind inf jor jus lel mat med mil mus net nom not ntr odo org ppg pro psc psi qsl rec slg srv tmp trd tur tv vet vlog wiki zlg ", bs: " com edu gov net org ", bz: " du et om ov rg ", ca: " ab bc mb nb nf nl ns nt nu on pe qc sk yk ", ck: " biz co edu gen gov info net org ", cn: " ac ah bj com cq edu fj gd gov gs gx gz ha hb he hi hl hn jl js jx ln mil net nm nx org qh sc sd sh sn sx tj tw xj xz yn zj ", co: " com edu gov mil net nom org ", cr: " ac c co ed fi go or sa ", cy: " ac biz com ekloges gov ltd name net org parliament press pro tm ", do: " art com edu gob gov mil net org sld web ", dz: " art asso com edu gov net org pol ", ec: " com edu fin gov info med mil net org pro ", eg: " com edu eun gov mil name net org sci ", er: " com edu gov ind mil net org rochest w ", es: " com edu gob nom org ", et: " biz com edu gov info name net org ", fj: " ac biz com info mil name net org pro ", fk: " ac co gov net nom org ", fr: " asso com f gouv nom prd presse tm ", gg: " co net org ", gh: " com edu gov mil org ", gn: " ac com gov net org ", gr: " com edu gov mil net org ", gt: " com edu gob ind mil net org ", gu: " com edu gov net org ", hk: " com edu gov idv net org ", hu: " 2000 agrar bolt casino city co erotica erotika film forum games hotel info ingatlan jogasz konyvelo lakas media news org priv reklam sex shop sport suli szex tm tozsde utazas video ", id: " ac co go mil net or sch web ", il: " ac co gov idf k12 muni net org ", in: " ac co edu ernet firm gen gov i ind mil net nic org res ", iq: " com edu gov i mil net org ", ir: " ac co dnssec gov i id net org sch ", it: " edu gov ", je: " co net org ", jo: " com edu gov mil name net org sch ", jp: " ac ad co ed go gr lg ne or ", ke: " ac co go info me mobi ne or sc ", kh: " com edu gov mil net org per ", ki: " biz com de edu gov info mob net org tel ", km: " asso com coop edu gouv k medecin mil nom notaires pharmaciens presse tm veterinaire ", kn: " edu gov net org ", kr: " ac busan chungbuk chungnam co daegu daejeon es gangwon go gwangju gyeongbuk gyeonggi gyeongnam hs incheon jeju jeonbuk jeonnam k kg mil ms ne or pe re sc seoul ulsan ", kw: " com edu gov net org ", ky: " com edu gov net org ", kz: " com edu gov mil net org ", lb: " com edu gov net org ", lk: " assn com edu gov grp hotel int ltd net ngo org sch soc web ", lr: " com edu gov net org ", lv: " asn com conf edu gov id mil net org ", ly: " com edu gov id med net org plc sch ", ma: " ac co gov m net org press ", mc: " asso tm ", me: " ac co edu gov its net org priv ", mg: " com edu gov mil nom org prd tm ", mk: " com edu gov inf name net org pro ", ml: " com edu gov net org presse ", mn: " edu gov org ", mo: " com edu gov net org ", mt: " com edu gov net org ", mv: " aero biz com coop edu gov info int mil museum name net org pro ", mw: " ac co com coop edu gov int museum net org ", mx: " com edu gob net org ", my: " com edu gov mil name net org sch ", nf: " arts com firm info net other per rec store web ", ng: " biz com edu gov mil mobi name net org sch ", ni: " ac co com edu gob mil net nom org ", np: " com edu gov mil net org ", nr: " biz com edu gov info net org ", om: " ac biz co com edu gov med mil museum net org pro sch ", pe: " com edu gob mil net nom org sld ", ph: " com edu gov i mil net ngo org ", pk: " biz com edu fam gob gok gon gop gos gov net org web ", pl: " art bialystok biz com edu gda gdansk gorzow gov info katowice krakow lodz lublin mil net ngo olsztyn org poznan pwr radom slupsk szczecin torun warszawa waw wroc wroclaw zgora ", pr: " ac biz com edu est gov info isla name net org pro prof ", ps: " com edu gov net org plo sec ", pw: " belau co ed go ne or ", ro: " arts com firm info nom nt org rec store tm www ", rs: " ac co edu gov in org ", sb: " com edu gov net org ", sc: " com edu gov net org ", sh: " co com edu gov net nom org ", sl: " com edu gov net org ", st: " co com consulado edu embaixada gov mil net org principe saotome store ", sv: " com edu gob org red ", sz: " ac co org ", tr: " av bbs bel biz com dr edu gen gov info k12 name net org pol tel tsk tv web ", tt: " aero biz cat co com coop edu gov info int jobs mil mobi museum name net org pro tel travel ", tw: " club com ebiz edu game gov idv mil net org ", mu: " ac co com gov net or org ", mz: " ac co edu gov org ", na: " co com ", nz: " ac co cri geek gen govt health iwi maori mil net org parliament school ", pa: " abo ac com edu gob ing med net nom org sld ", pt: " com edu gov int net nome org publ ", py: " com edu gov mil net org ", qa: " com edu gov mil net org ", re: " asso com nom ", ru: " ac adygeya altai amur arkhangelsk astrakhan bashkiria belgorod bir bryansk buryatia cbg chel chelyabinsk chita chukotka chuvashia com dagestan e-burg edu gov grozny int irkutsk ivanovo izhevsk jar joshkar-ola kalmykia kaluga kamchatka karelia kazan kchr kemerovo khabarovsk khakassia khv kirov koenig komi kostroma kranoyarsk kuban kurgan kursk lipetsk magadan mari mari-el marine mil mordovia mosreg msk murmansk nalchik net nnov nov novosibirsk nsk omsk orenburg org oryol penza perm pp pskov ptz rnd ryazan sakhalin samara saratov simbirsk smolensk spb stavropol stv surgut tambov tatarstan tom tomsk tsaritsyn tsk tula tuva tver tyumen udm udmurtia ulan-ude vladikavkaz vladimir vladivostok volgograd vologda voronezh vrn vyatka yakutia yamal yekaterinburg yuzhno-sakhalinsk ", rw: " ac co com edu gouv gov int mil net ", sa: " com edu gov med net org pub sch ", sd: " com edu gov info med net org tv ", se: " a ac b bd c d e f g h i k l m n o org p parti pp press r s t tm u w x y z ", sg: " com edu gov idn net org per ", sn: " art com edu gouv org perso univ ", sy: " com edu gov mil net news org ", th: " ac co go in mi net or ", tj: " ac biz co com edu go gov info int mil name net nic org test web ", tn: " agrinet com defense edunet ens fin gov ind info intl mincom nat net org perso rnrt rns rnu tourism ", tz: " ac co go ne or ", ua: " biz cherkassy chernigov chernovtsy ck cn co com crimea cv dn dnepropetrovsk donetsk dp edu gov if in ivano-frankivsk kh kharkov kherson khmelnitskiy kiev kirovograd km kr ks kv lg lugansk lutsk lviv me mk net nikolaev od odessa org pl poltava pp rovno rv sebastopol sumy te ternopil uzhgorod vinnica vn zaporizhzhe zhitomir zp zt ", ug: " ac co go ne or org sc ", uk: " ac bl british-library co cym gov govt icnet jet lea ltd me mil mod national-library-scotland nel net nhs nic nls org orgn parliament plc police sch scot soc ", us: " dni fed isa kids nsn ", uy: " com edu gub mil net org ", ve: " co com edu gob info mil net org web ", vi: " co com k12 net org ", vn: " ac biz com edu gov health info int name net org pro ", ye: " co com gov ltd me net org plc ", yu: " ac co edu gov org ", za: " ac agric alt bourse city co cybernet db edu gov grondar iaccess imt inca landesign law mil net ngo nis nom olivetti org pix school tm web ", zm: " ac co com edu gov net org sch ", com: "ar br cn de eu gb gr hu jpn kr no qc ru sa se uk us uy za ", net: "gb jp se uk ", org: "ae", de: "com " }, has: function(h) {
            var m = h.lastIndexOf(".");
            if (m <= 0 || m >= h.length - 1) return false;
            var c = h.lastIndexOf(".", m - 1);
            if (c <= 0 || c >= m - 1) return false;
            var w = b.list[h.slice(m + 1)];
            return !!w && w.indexOf(" " + h.slice(c + 1, m) + " ") >= 0;
          }, is: function(h) {
            var m = h.lastIndexOf(".");
            if (m <= 0 || m >= h.length - 1 || h.lastIndexOf(".", m - 1) >= 0) return false;
            var c = b.list[h.slice(m + 1)];
            return !!c && c.indexOf(" " + h.slice(0, m) + " ") >= 0;
          }, get: function(h) {
            var m = h.lastIndexOf(".");
            if (m <= 0 || m >= h.length - 1) return null;
            var c = h.lastIndexOf(".", m - 1);
            if (c <= 0 || c >= m - 1) return null;
            var w = b.list[h.slice(m + 1)];
            return w ? w.indexOf(" " + h.slice(c + 1, m) + " ") < 0 ? null : h.slice(c + 1) : null;
          }, noConflict: function() {
            return p.SecondLevelDomains === this && (p.SecondLevelDomains = g), this;
          } };
          return b;
        });
      }, 4765: (s) => {
        var i = String.prototype.replace, u = /%20/g, d = "RFC1738", f = "RFC3986";
        s.exports = { default: f, formatters: { RFC1738: function(p) {
          return i.call(p, u, "+");
        }, RFC3986: function(p) {
          return String(p);
        } }, RFC1738: d, RFC3986: f };
      }, 4803: (s, i, u) => {
        var d = u(8859), f = u(9675), p = function(g, b, h) {
          for (var m, c = g; (m = c.next) != null; c = m) if (m.key === b) return c.next = m.next, h || (m.next = g.next, g.next = m), m;
        };
        s.exports = function() {
          var g, b = { assert: function(h) {
            if (!b.has(h)) throw new f("Side channel does not contain " + d(h));
          }, delete: function(h) {
            var m = g && g.next, c = function(w, T) {
              if (w) return p(w, T, true);
            }(g, h);
            return c && m && m === c && (g = void 0), !!c;
          }, get: function(h) {
            return function(m, c) {
              if (m) {
                var w = p(m, c);
                return w && w.value;
              }
            }(g, h);
          }, has: function(h) {
            return function(m, c) {
              return !!m && !!p(m, c);
            }(g, h);
          }, set: function(h, m) {
            g || (g = { next: void 0 }), function(c, w, T) {
              var P = p(c, w);
              P ? P.value = T : c.next = { key: w, next: c.next, value: T };
            }(g, h, m);
          } };
          return b;
        };
      }, 5157: (s) => {
        s.exports = function() {
          throw new Error("Readable.from is not available in the browser");
        };
      }, 5291: (s, i, u) => {
        var d = u(6048).F.ERR_INVALID_OPT_VALUE;
        s.exports = { getHighWaterMark: function(f, p, g, b) {
          var h = function(m, c, w) {
            return m.highWaterMark != null ? m.highWaterMark : c ? m[w] : null;
          }(p, b, g);
          if (h != null) {
            if (!isFinite(h) || Math.floor(h) !== h || h < 0) throw new d(b ? g : "highWaterMark", h);
            return Math.floor(h);
          }
          return f.objectMode ? 16 : 16384;
        } };
      }, 5340: () => {
      }, 5345: (s) => {
        s.exports = URIError;
      }, 5373: (s, i, u) => {
        var d = u(8636), f = u(2642), p = u(4765);
        s.exports = { formats: p, parse: f, stringify: d };
      }, 5382: (s, i, u) => {
        var d = Object.keys || function(T) {
          var P = [];
          for (var k in T) P.push(k);
          return P;
        };
        s.exports = m;
        var f = u(5412), p = u(6708);
        u(6698)(m, f);
        for (var g = d(p.prototype), b = 0; b < g.length; b++) {
          var h = g[b];
          m.prototype[h] || (m.prototype[h] = p.prototype[h]);
        }
        function m(T) {
          if (!(this instanceof m)) return new m(T);
          f.call(this, T), p.call(this, T), this.allowHalfOpen = true, T && (T.readable === false && (this.readable = false), T.writable === false && (this.writable = false), T.allowHalfOpen === false && (this.allowHalfOpen = false, this.once("end", c)));
        }
        function c() {
          this._writableState.ended || process.nextTick(w, this);
        }
        function w(T) {
          T.end();
        }
        Object.defineProperty(m.prototype, "writableHighWaterMark", { enumerable: false, get: function() {
          return this._writableState.highWaterMark;
        } }), Object.defineProperty(m.prototype, "writableBuffer", { enumerable: false, get: function() {
          return this._writableState && this._writableState.getBuffer();
        } }), Object.defineProperty(m.prototype, "writableLength", { enumerable: false, get: function() {
          return this._writableState.length;
        } }), Object.defineProperty(m.prototype, "destroyed", { enumerable: false, get: function() {
          return this._readableState !== void 0 && this._writableState !== void 0 && this._readableState.destroyed && this._writableState.destroyed;
        }, set: function(T) {
          this._readableState !== void 0 && this._writableState !== void 0 && (this._readableState.destroyed = T, this._writableState.destroyed = T);
        } });
      }, 5412: (s, i, u) => {
        var d;
        s.exports = x, x.ReadableState = S, u(7007).EventEmitter;
        var f = function(Ot, bt) {
          return Ot.listeners(bt).length;
        }, p = u(345), g = u(8287).Buffer, b = (u.g !== void 0 ? u.g : typeof window < "u" ? window : typeof self < "u" ? self : {}).Uint8Array || function() {
        }, h, m = u(9838);
        h = m && m.debuglog ? m.debuglog("stream") : function() {
        };
        var c, w, T, P = u(2726), k = u(5896), R = u(5291).getHighWaterMark, F = u(6048).F, v = F.ERR_INVALID_ARG_TYPE, U = F.ERR_STREAM_PUSH_AFTER_EOF, M = F.ERR_METHOD_NOT_IMPLEMENTED, Z = F.ERR_STREAM_UNSHIFT_AFTER_END_EVENT;
        u(6698)(x, p);
        var D = k.errorOrDestroy, V = ["error", "close", "destroy", "pause", "resume"];
        function S(Ot, bt, xt) {
          d = d || u(5382), Ot = Ot || {}, typeof xt != "boolean" && (xt = bt instanceof d), this.objectMode = !!Ot.objectMode, xt && (this.objectMode = this.objectMode || !!Ot.readableObjectMode), this.highWaterMark = R(this, Ot, "readableHighWaterMark", xt), this.buffer = new P(), this.length = 0, this.pipes = null, this.pipesCount = 0, this.flowing = null, this.ended = false, this.endEmitted = false, this.reading = false, this.sync = true, this.needReadable = false, this.emittedReadable = false, this.readableListening = false, this.resumeScheduled = false, this.paused = true, this.emitClose = Ot.emitClose !== false, this.autoDestroy = !!Ot.autoDestroy, this.destroyed = false, this.defaultEncoding = Ot.defaultEncoding || "utf8", this.awaitDrain = 0, this.readingMore = false, this.decoder = null, this.encoding = null, Ot.encoding && (c || (c = u(3141).I), this.decoder = new c(Ot.encoding), this.encoding = Ot.encoding);
        }
        function x(Ot) {
          if (d = d || u(5382), !(this instanceof x)) return new x(Ot);
          var bt = this instanceof d;
          this._readableState = new S(Ot, this, bt), this.readable = true, Ot && (typeof Ot.read == "function" && (this._read = Ot.read), typeof Ot.destroy == "function" && (this._destroy = Ot.destroy)), p.call(this);
        }
        function B(Ot, bt, xt, Ct, Tt) {
          h("readableAddChunk", bt);
          var Bt, At = Ot._readableState;
          if (bt === null) At.reading = false, function(Ut, Vt) {
            if (h("onEofChunk"), !Vt.ended) {
              if (Vt.decoder) {
                var oe = Vt.decoder.end();
                oe && oe.length && (Vt.buffer.push(oe), Vt.length += Vt.objectMode ? 1 : oe.length);
              }
              Vt.ended = true, Vt.sync ? at(Ut) : (Vt.needReadable = false, Vt.emittedReadable || (Vt.emittedReadable = true, rt(Ut)));
            }
          }(Ot, At);
          else if (Tt || (Bt = function(Ut, Vt) {
            var oe;
            te = Vt, g.isBuffer(te) || te instanceof b || typeof Vt == "string" || Vt === void 0 || Ut.objectMode || (oe = new v("chunk", ["string", "Buffer", "Uint8Array"], Vt));
            var te;
            return oe;
          }(At, bt)), Bt) D(Ot, Bt);
          else if (At.objectMode || bt && bt.length > 0) if (typeof bt == "string" || At.objectMode || Object.getPrototypeOf(bt) === g.prototype || (bt = function(Ut) {
            return g.from(Ut);
          }(bt)), Ct) At.endEmitted ? D(Ot, new Z()) : W(Ot, At, bt, true);
          else if (At.ended) D(Ot, new U());
          else {
            if (At.destroyed) return false;
            At.reading = false, At.decoder && !xt ? (bt = At.decoder.write(bt), At.objectMode || bt.length !== 0 ? W(Ot, At, bt, false) : ot(Ot, At)) : W(Ot, At, bt, false);
          }
          else Ct || (At.reading = false, ot(Ot, At));
          return !At.ended && (At.length < At.highWaterMark || At.length === 0);
        }
        function W(Ot, bt, xt, Ct) {
          bt.flowing && bt.length === 0 && !bt.sync ? (bt.awaitDrain = 0, Ot.emit("data", xt)) : (bt.length += bt.objectMode ? 1 : xt.length, Ct ? bt.buffer.unshift(xt) : bt.buffer.push(xt), bt.needReadable && at(Ot)), ot(Ot, bt);
        }
        Object.defineProperty(x.prototype, "destroyed", { enumerable: false, get: function() {
          return this._readableState !== void 0 && this._readableState.destroyed;
        }, set: function(Ot) {
          this._readableState && (this._readableState.destroyed = Ot);
        } }), x.prototype.destroy = k.destroy, x.prototype._undestroy = k.undestroy, x.prototype._destroy = function(Ot, bt) {
          bt(Ot);
        }, x.prototype.push = function(Ot, bt) {
          var xt, Ct = this._readableState;
          return Ct.objectMode ? xt = true : typeof Ot == "string" && ((bt = bt || Ct.defaultEncoding) !== Ct.encoding && (Ot = g.from(Ot, bt), bt = ""), xt = true), B(this, Ot, bt, false, xt);
        }, x.prototype.unshift = function(Ot) {
          return B(this, Ot, null, true, false);
        }, x.prototype.isPaused = function() {
          return this._readableState.flowing === false;
        }, x.prototype.setEncoding = function(Ot) {
          c || (c = u(3141).I);
          var bt = new c(Ot);
          this._readableState.decoder = bt, this._readableState.encoding = this._readableState.decoder.encoding;
          for (var xt = this._readableState.buffer.head, Ct = ""; xt !== null; ) Ct += bt.write(xt.data), xt = xt.next;
          return this._readableState.buffer.clear(), Ct !== "" && this._readableState.buffer.push(Ct), this._readableState.length = Ct.length, this;
        };
        var lt = 1073741824;
        function pt(Ot, bt) {
          return Ot <= 0 || bt.length === 0 && bt.ended ? 0 : bt.objectMode ? 1 : Ot != Ot ? bt.flowing && bt.length ? bt.buffer.head.data.length : bt.length : (Ot > bt.highWaterMark && (bt.highWaterMark = function(xt) {
            return xt >= lt ? xt = lt : (xt--, xt |= xt >>> 1, xt |= xt >>> 2, xt |= xt >>> 4, xt |= xt >>> 8, xt |= xt >>> 16, xt++), xt;
          }(Ot)), Ot <= bt.length ? Ot : bt.ended ? bt.length : (bt.needReadable = true, 0));
        }
        function at(Ot) {
          var bt = Ot._readableState;
          h("emitReadable", bt.needReadable, bt.emittedReadable), bt.needReadable = false, bt.emittedReadable || (h("emitReadable", bt.flowing), bt.emittedReadable = true, process.nextTick(rt, Ot));
        }
        function rt(Ot) {
          var bt = Ot._readableState;
          h("emitReadable_", bt.destroyed, bt.length, bt.ended), bt.destroyed || !bt.length && !bt.ended || (Ot.emit("readable"), bt.emittedReadable = false), bt.needReadable = !bt.flowing && !bt.ended && bt.length <= bt.highWaterMark, dt(Ot);
        }
        function ot(Ot, bt) {
          bt.readingMore || (bt.readingMore = true, process.nextTick(X, Ot, bt));
        }
        function X(Ot, bt) {
          for (; !bt.reading && !bt.ended && (bt.length < bt.highWaterMark || bt.flowing && bt.length === 0); ) {
            var xt = bt.length;
            if (h("maybeReadMore read 0"), Ot.read(0), xt === bt.length) break;
          }
          bt.readingMore = false;
        }
        function I(Ot) {
          var bt = Ot._readableState;
          bt.readableListening = Ot.listenerCount("readable") > 0, bt.resumeScheduled && !bt.paused ? bt.flowing = true : Ot.listenerCount("data") > 0 && Ot.resume();
        }
        function nt(Ot) {
          h("readable nexttick read 0"), Ot.read(0);
        }
        function ft(Ot, bt) {
          h("resume", bt.reading), bt.reading || Ot.read(0), bt.resumeScheduled = false, Ot.emit("resume"), dt(Ot), bt.flowing && !bt.reading && Ot.read(0);
        }
        function dt(Ot) {
          var bt = Ot._readableState;
          for (h("flow", bt.flowing); bt.flowing && Ot.read() !== null; ) ;
        }
        function Lt(Ot, bt) {
          return bt.length === 0 ? null : (bt.objectMode ? xt = bt.buffer.shift() : !Ot || Ot >= bt.length ? (xt = bt.decoder ? bt.buffer.join("") : bt.buffer.length === 1 ? bt.buffer.first() : bt.buffer.concat(bt.length), bt.buffer.clear()) : xt = bt.buffer.consume(Ot, bt.decoder), xt);
          var xt;
        }
        function $(Ot) {
          var bt = Ot._readableState;
          h("endReadable", bt.endEmitted), bt.endEmitted || (bt.ended = true, process.nextTick(it, bt, Ot));
        }
        function it(Ot, bt) {
          if (h("endReadableNT", Ot.endEmitted, Ot.length), !Ot.endEmitted && Ot.length === 0 && (Ot.endEmitted = true, bt.readable = false, bt.emit("end"), Ot.autoDestroy)) {
            var xt = bt._writableState;
            (!xt || xt.autoDestroy && xt.finished) && bt.destroy();
          }
        }
        function mt(Ot, bt) {
          for (var xt = 0, Ct = Ot.length; xt < Ct; xt++) if (Ot[xt] === bt) return xt;
          return -1;
        }
        x.prototype.read = function(Ot) {
          h("read", Ot), Ot = parseInt(Ot, 10);
          var bt = this._readableState, xt = Ot;
          if (Ot !== 0 && (bt.emittedReadable = false), Ot === 0 && bt.needReadable && ((bt.highWaterMark !== 0 ? bt.length >= bt.highWaterMark : bt.length > 0) || bt.ended)) return h("read: emitReadable", bt.length, bt.ended), bt.length === 0 && bt.ended ? $(this) : at(this), null;
          if ((Ot = pt(Ot, bt)) === 0 && bt.ended) return bt.length === 0 && $(this), null;
          var Ct, Tt = bt.needReadable;
          return h("need readable", Tt), (bt.length === 0 || bt.length - Ot < bt.highWaterMark) && h("length less than watermark", Tt = true), bt.ended || bt.reading ? h("reading or ended", Tt = false) : Tt && (h("do read"), bt.reading = true, bt.sync = true, bt.length === 0 && (bt.needReadable = true), this._read(bt.highWaterMark), bt.sync = false, bt.reading || (Ot = pt(xt, bt))), (Ct = Ot > 0 ? Lt(Ot, bt) : null) === null ? (bt.needReadable = bt.length <= bt.highWaterMark, Ot = 0) : (bt.length -= Ot, bt.awaitDrain = 0), bt.length === 0 && (bt.ended || (bt.needReadable = true), xt !== Ot && bt.ended && $(this)), Ct !== null && this.emit("data", Ct), Ct;
        }, x.prototype._read = function(Ot) {
          D(this, new M("_read()"));
        }, x.prototype.pipe = function(Ot, bt) {
          var xt = this, Ct = this._readableState;
          switch (Ct.pipesCount) {
            case 0:
              Ct.pipes = Ot;
              break;
            case 1:
              Ct.pipes = [Ct.pipes, Ot];
              break;
            default:
              Ct.pipes.push(Ot);
          }
          Ct.pipesCount += 1, h("pipe count=%d opts=%j", Ct.pipesCount, bt);
          var Tt = (!bt || bt.end !== false) && Ot !== process.stdout && Ot !== process.stderr ? At : O;
          function Bt(z, J) {
            h("onunpipe"), z === xt && J && J.hasUnpiped === false && (J.hasUnpiped = true, h("cleanup"), Ot.removeListener("close", yt), Ot.removeListener("finish", Mt), Ot.removeListener("drain", Ut), Ot.removeListener("error", te), Ot.removeListener("unpipe", Bt), xt.removeListener("end", At), xt.removeListener("end", O), xt.removeListener("data", oe), Vt = true, !Ct.awaitDrain || Ot._writableState && !Ot._writableState.needDrain || Ut());
          }
          function At() {
            h("onend"), Ot.end();
          }
          Ct.endEmitted ? process.nextTick(Tt) : xt.once("end", Tt), Ot.on("unpipe", Bt);
          var Ut = /* @__PURE__ */ function(z) {
            return function() {
              var J = z._readableState;
              h("pipeOnDrain", J.awaitDrain), J.awaitDrain && J.awaitDrain--, J.awaitDrain === 0 && f(z, "data") && (J.flowing = true, dt(z));
            };
          }(xt);
          Ot.on("drain", Ut);
          var Vt = false;
          function oe(z) {
            h("ondata");
            var J = Ot.write(z);
            h("dest.write", J), J === false && ((Ct.pipesCount === 1 && Ct.pipes === Ot || Ct.pipesCount > 1 && mt(Ct.pipes, Ot) !== -1) && !Vt && (h("false write response, pause", Ct.awaitDrain), Ct.awaitDrain++), xt.pause());
          }
          function te(z) {
            h("onerror", z), O(), Ot.removeListener("error", te), f(Ot, "error") === 0 && D(Ot, z);
          }
          function yt() {
            Ot.removeListener("finish", Mt), O();
          }
          function Mt() {
            h("onfinish"), Ot.removeListener("close", yt), O();
          }
          function O() {
            h("unpipe"), xt.unpipe(Ot);
          }
          return xt.on("data", oe), function(z, J, tt) {
            if (typeof z.prependListener == "function") return z.prependListener(J, tt);
            z._events && z._events[J] ? Array.isArray(z._events[J]) ? z._events[J].unshift(tt) : z._events[J] = [tt, z._events[J]] : z.on(J, tt);
          }(Ot, "error", te), Ot.once("close", yt), Ot.once("finish", Mt), Ot.emit("pipe", xt), Ct.flowing || (h("pipe resume"), xt.resume()), Ot;
        }, x.prototype.unpipe = function(Ot) {
          var bt = this._readableState, xt = { hasUnpiped: false };
          if (bt.pipesCount === 0) return this;
          if (bt.pipesCount === 1) return Ot && Ot !== bt.pipes || (Ot || (Ot = bt.pipes), bt.pipes = null, bt.pipesCount = 0, bt.flowing = false, Ot && Ot.emit("unpipe", this, xt)), this;
          if (!Ot) {
            var Ct = bt.pipes, Tt = bt.pipesCount;
            bt.pipes = null, bt.pipesCount = 0, bt.flowing = false;
            for (var Bt = 0; Bt < Tt; Bt++) Ct[Bt].emit("unpipe", this, { hasUnpiped: false });
            return this;
          }
          var At = mt(bt.pipes, Ot);
          return At === -1 || (bt.pipes.splice(At, 1), bt.pipesCount -= 1, bt.pipesCount === 1 && (bt.pipes = bt.pipes[0]), Ot.emit("unpipe", this, xt)), this;
        }, x.prototype.on = function(Ot, bt) {
          var xt = p.prototype.on.call(this, Ot, bt), Ct = this._readableState;
          return Ot === "data" ? (Ct.readableListening = this.listenerCount("readable") > 0, Ct.flowing !== false && this.resume()) : Ot === "readable" && (Ct.endEmitted || Ct.readableListening || (Ct.readableListening = Ct.needReadable = true, Ct.flowing = false, Ct.emittedReadable = false, h("on readable", Ct.length, Ct.reading), Ct.length ? at(this) : Ct.reading || process.nextTick(nt, this))), xt;
        }, x.prototype.addListener = x.prototype.on, x.prototype.removeListener = function(Ot, bt) {
          var xt = p.prototype.removeListener.call(this, Ot, bt);
          return Ot === "readable" && process.nextTick(I, this), xt;
        }, x.prototype.removeAllListeners = function(Ot) {
          var bt = p.prototype.removeAllListeners.apply(this, arguments);
          return Ot !== "readable" && Ot !== void 0 || process.nextTick(I, this), bt;
        }, x.prototype.resume = function() {
          var Ot = this._readableState;
          return Ot.flowing || (h("resume"), Ot.flowing = !Ot.readableListening, function(bt, xt) {
            xt.resumeScheduled || (xt.resumeScheduled = true, process.nextTick(ft, bt, xt));
          }(this, Ot)), Ot.paused = false, this;
        }, x.prototype.pause = function() {
          return h("call pause flowing=%j", this._readableState.flowing), this._readableState.flowing !== false && (h("pause"), this._readableState.flowing = false, this.emit("pause")), this._readableState.paused = true, this;
        }, x.prototype.wrap = function(Ot) {
          var bt = this, xt = this._readableState, Ct = false;
          for (var Tt in Ot.on("end", function() {
            if (h("wrapped end"), xt.decoder && !xt.ended) {
              var At = xt.decoder.end();
              At && At.length && bt.push(At);
            }
            bt.push(null);
          }), Ot.on("data", function(At) {
            h("wrapped data"), xt.decoder && (At = xt.decoder.write(At)), xt.objectMode && At == null || (xt.objectMode || At && At.length) && (bt.push(At) || (Ct = true, Ot.pause()));
          }), Ot) this[Tt] === void 0 && typeof Ot[Tt] == "function" && (this[Tt] = /* @__PURE__ */ function(At) {
            return function() {
              return Ot[At].apply(Ot, arguments);
            };
          }(Tt));
          for (var Bt = 0; Bt < V.length; Bt++) Ot.on(V[Bt], this.emit.bind(this, V[Bt]));
          return this._read = function(At) {
            h("wrapped _read", At), Ct && (Ct = false, Ot.resume());
          }, this;
        }, typeof Symbol == "function" && (x.prototype[Symbol.asyncIterator] = function() {
          return w === void 0 && (w = u(2955)), w(this);
        }), Object.defineProperty(x.prototype, "readableHighWaterMark", { enumerable: false, get: function() {
          return this._readableState.highWaterMark;
        } }), Object.defineProperty(x.prototype, "readableBuffer", { enumerable: false, get: function() {
          return this._readableState && this._readableState.buffer;
        } }), Object.defineProperty(x.prototype, "readableFlowing", { enumerable: false, get: function() {
          return this._readableState.flowing;
        }, set: function(Ot) {
          this._readableState && (this._readableState.flowing = Ot);
        } }), x._fromList = Lt, Object.defineProperty(x.prototype, "readableLength", { enumerable: false, get: function() {
          return this._readableState.length;
        } }), typeof Symbol == "function" && (x.from = function(Ot, bt) {
          return T === void 0 && (T = u(5157)), T(x, Ot, bt);
        });
      }, 5479: (s, i, u) => {
        u.r(i), u.d(i, { InvalidChallengeError: () => R, buildChallengeTx: () => x, gatherTxSigners: () => at, readChallengeTx: () => B, verifyChallengeTxSigners: () => lt, verifyChallengeTxThreshold: () => W, verifyTxSignedBy: () => pt });
        var d = u(3209), f = u.n(d), p = u(8950), g = u(3121);
        function b(rt) {
          return b = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(ot) {
            return typeof ot;
          } : function(ot) {
            return ot && typeof Symbol == "function" && ot.constructor === Symbol && ot !== Symbol.prototype ? "symbol" : typeof ot;
          }, b(rt);
        }
        function h(rt, ot) {
          for (var X = 0; X < ot.length; X++) {
            var I = ot[X];
            I.enumerable = I.enumerable || false, I.configurable = true, "value" in I && (I.writable = true), Object.defineProperty(rt, m(I.key), I);
          }
        }
        function m(rt) {
          var ot = function(X, I) {
            if (b(X) != "object" || !X) return X;
            var nt = X[Symbol.toPrimitive];
            if (nt !== void 0) {
              var ft = nt.call(X, I);
              if (b(ft) != "object") return ft;
              throw new TypeError("@@toPrimitive must return a primitive value.");
            }
            return String(X);
          }(rt, "string");
          return b(ot) == "symbol" ? ot : ot + "";
        }
        function c(rt, ot, X) {
          return ot = k(ot), function(I, nt) {
            if (nt && (b(nt) == "object" || typeof nt == "function")) return nt;
            if (nt !== void 0) throw new TypeError("Derived constructors may only return object or undefined");
            return function(ft) {
              if (ft === void 0) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
              return ft;
            }(I);
          }(rt, T() ? Reflect.construct(ot, X || [], k(rt).constructor) : ot.apply(rt, X));
        }
        function w(rt) {
          var ot = typeof Map == "function" ? /* @__PURE__ */ new Map() : void 0;
          return w = function(X) {
            if (X === null || !function(nt) {
              try {
                return Function.toString.call(nt).indexOf("[native code]") !== -1;
              } catch {
                return typeof nt == "function";
              }
            }(X)) return X;
            if (typeof X != "function") throw new TypeError("Super expression must either be null or a function");
            if (ot !== void 0) {
              if (ot.has(X)) return ot.get(X);
              ot.set(X, I);
            }
            function I() {
              return function(nt, ft, dt) {
                if (T()) return Reflect.construct.apply(null, arguments);
                var Lt = [null];
                Lt.push.apply(Lt, ft);
                var $ = new (nt.bind.apply(nt, Lt))();
                return dt && P($, dt.prototype), $;
              }(X, arguments, k(this).constructor);
            }
            return I.prototype = Object.create(X.prototype, { constructor: { value: I, enumerable: false, writable: true, configurable: true } }), P(I, X);
          }, w(rt);
        }
        function T() {
          try {
            var rt = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
            }));
          } catch {
          }
          return (T = function() {
            return !!rt;
          })();
        }
        function P(rt, ot) {
          return P = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function(X, I) {
            return X.__proto__ = I, X;
          }, P(rt, ot);
        }
        function k(rt) {
          return k = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function(ot) {
            return ot.__proto__ || Object.getPrototypeOf(ot);
          }, k(rt);
        }
        var R = function(rt) {
          function ot(ft) {
            var dt;
            (function($, it) {
              if (!($ instanceof it)) throw new TypeError("Cannot call a class as a function");
            })(this, ot);
            var Lt = (this instanceof ot ? this.constructor : void 0).prototype;
            return (dt = c(this, ot, [ft])).__proto__ = Lt, dt.constructor = ot, dt.name = "InvalidChallengeError", dt;
          }
          return function(ft, dt) {
            if (typeof dt != "function" && dt !== null) throw new TypeError("Super expression must either be null or a function");
            ft.prototype = Object.create(dt && dt.prototype, { constructor: { value: ft, writable: true, configurable: true } }), Object.defineProperty(ft, "prototype", { writable: false }), dt && P(ft, dt);
          }(ot, rt), X = ot, I && h(X.prototype, I), nt && h(X, nt), Object.defineProperty(X, "prototype", { writable: false }), X;
          var X, I, nt;
        }(w(Error)), F = u(8287).Buffer;
        function v(rt) {
          return function(ot) {
            if (Array.isArray(ot)) return V(ot);
          }(rt) || S(rt) || D(rt) || function() {
            throw new TypeError(`Invalid attempt to spread non-iterable instance.
In order to be iterable, non-array objects must have a [Symbol.iterator]() method.`);
          }();
        }
        function U(rt, ot) {
          var X = typeof Symbol < "u" && rt[Symbol.iterator] || rt["@@iterator"];
          if (!X) {
            if (Array.isArray(rt) || (X = D(rt)) || ot) {
              X && (rt = X);
              var I = 0, nt = function() {
              };
              return { s: nt, n: function() {
                return I >= rt.length ? { done: true } : { done: false, value: rt[I++] };
              }, e: function($) {
                throw $;
              }, f: nt };
            }
            throw new TypeError(`Invalid attempt to iterate non-iterable instance.
In order to be iterable, non-array objects must have a [Symbol.iterator]() method.`);
          }
          var ft, dt = true, Lt = false;
          return { s: function() {
            X = X.call(rt);
          }, n: function() {
            var $ = X.next();
            return dt = $.done, $;
          }, e: function($) {
            Lt = true, ft = $;
          }, f: function() {
            try {
              dt || X.return == null || X.return();
            } finally {
              if (Lt) throw ft;
            }
          } };
        }
        function M(rt) {
          return M = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(ot) {
            return typeof ot;
          } : function(ot) {
            return ot && typeof Symbol == "function" && ot.constructor === Symbol && ot !== Symbol.prototype ? "symbol" : typeof ot;
          }, M(rt);
        }
        function Z(rt) {
          return function(ot) {
            if (Array.isArray(ot)) return ot;
          }(rt) || S(rt) || D(rt) || function() {
            throw new TypeError(`Invalid attempt to destructure non-iterable instance.
In order to be iterable, non-array objects must have a [Symbol.iterator]() method.`);
          }();
        }
        function D(rt, ot) {
          if (rt) {
            if (typeof rt == "string") return V(rt, ot);
            var X = {}.toString.call(rt).slice(8, -1);
            return X === "Object" && rt.constructor && (X = rt.constructor.name), X === "Map" || X === "Set" ? Array.from(rt) : X === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(X) ? V(rt, ot) : void 0;
          }
        }
        function V(rt, ot) {
          (ot == null || ot > rt.length) && (ot = rt.length);
          for (var X = 0, I = Array(ot); X < ot; X++) I[X] = rt[X];
          return I;
        }
        function S(rt) {
          if (typeof Symbol < "u" && rt[Symbol.iterator] != null || rt["@@iterator"] != null) return Array.from(rt);
        }
        function x(rt, ot, X) {
          var I = arguments.length > 3 && arguments[3] !== void 0 ? arguments[3] : 300, nt = arguments.length > 4 ? arguments[4] : void 0, ft = arguments.length > 5 ? arguments[5] : void 0, dt = arguments.length > 6 && arguments[6] !== void 0 ? arguments[6] : null, Lt = arguments.length > 7 && arguments[7] !== void 0 ? arguments[7] : null, $ = arguments.length > 8 && arguments[8] !== void 0 ? arguments[8] : null;
          if (ot.startsWith("M") && dt) throw Error("memo cannot be used if clientAccountID is a muxed account");
          var it = new p.Account(rt.publicKey(), "-1"), mt = Math.floor(Date.now() / 1e3), Ot = f()(48).toString("base64"), bt = new p.TransactionBuilder(it, { fee: p.BASE_FEE, networkPassphrase: nt, timebounds: { minTime: mt, maxTime: mt + I } }).addOperation(p.Operation.manageData({ name: "".concat(X, " auth"), value: Ot, source: ot })).addOperation(p.Operation.manageData({ name: "web_auth_domain", value: ft, source: it.accountId() }));
          if (Lt) {
            if (!$) throw Error("clientSigningKey is required if clientDomain is provided");
            bt.addOperation(p.Operation.manageData({ name: "client_domain", value: Lt, source: $ }));
          }
          dt && bt.addMemo(p.Memo.id(dt));
          var xt = bt.build();
          return xt.sign(rt), xt.toEnvelope().toXDR("base64").toString();
        }
        function B(rt, ot, X, I, nt) {
          var ft, dt;
          if (ot.startsWith("M")) throw Error("Invalid serverAccountID: multiplexed accounts are not supported.");
          try {
            dt = new p.Transaction(rt, X);
          } catch {
            try {
              dt = new p.FeeBumpTransaction(rt, X);
            } catch {
              throw new R("Invalid challenge: unable to deserialize challengeTx transaction string");
            }
            throw new R("Invalid challenge: expected a Transaction but received a FeeBumpTransaction");
          }
          if (Number.parseInt(dt.sequence, 10) !== 0) throw new R("The transaction sequence number should be zero");
          if (dt.source !== ot) throw new R("The transaction source account is not equal to the server's account");
          if (dt.operations.length < 1) throw new R("The transaction should contain at least one operation");
          var Lt = Z(dt.operations), $ = Lt[0], it = Lt.slice(1);
          if (!$.source) throw new R("The transaction's operation should contain a source account");
          var mt, Ot = $.source, bt = null;
          if (dt.memo.type !== p.MemoNone) {
            if (Ot.startsWith("M")) throw new R("The transaction has a memo but the client account ID is a muxed account");
            if (dt.memo.type !== p.MemoID) throw new R("The transaction's memo must be of type `id`");
            bt = dt.memo.value;
          }
          if ($.type !== "manageData") throw new R("The transaction's operation type should be 'manageData'");
          if (dt.timeBounds && Number.parseInt((ft = dt.timeBounds) === null || ft === void 0 ? void 0 : ft.maxTime, 10) === p.TimeoutInfinite) throw new R("The transaction requires non-infinite timebounds");
          if (!g.A.validateTimebounds(dt, 300)) throw new R("The transaction has expired");
          if ($.value === void 0) throw new R("The transaction's operation values should not be null");
          if (!$.value) throw new R("The transaction's operation value should not be null");
          if (F.from($.value.toString(), "base64").length !== 48) throw new R("The transaction's operation value should be a 64 bytes base64 random string");
          if (!I) throw new R("Invalid homeDomains: a home domain must be provided for verification");
          if (typeof I == "string") "".concat(I, " auth") === $.name && (mt = I);
          else {
            if (!Array.isArray(I)) throw new R("Invalid homeDomains: homeDomains type is ".concat(M(I), " but should be a string or an array"));
            mt = I.find(function(Bt) {
              return "".concat(Bt, " auth") === $.name;
            });
          }
          if (!mt) throw new R("Invalid homeDomains: the transaction's operation key name does not match the expected home domain");
          var xt, Ct = U(it);
          try {
            for (Ct.s(); !(xt = Ct.n()).done; ) {
              var Tt = xt.value;
              if (Tt.type !== "manageData") throw new R("The transaction has operations that are not of type 'manageData'");
              if (Tt.source !== ot && Tt.name !== "client_domain") throw new R("The transaction has operations that are unrecognized");
              if (Tt.name === "web_auth_domain") {
                if (Tt.value === void 0) throw new R("'web_auth_domain' operation value should not be null");
                if (Tt.value.compare(F.from(nt))) throw new R("'web_auth_domain' operation value does not match ".concat(nt));
              }
            }
          } catch (Bt) {
            Ct.e(Bt);
          } finally {
            Ct.f();
          }
          if (!pt(dt, ot)) throw new R("Transaction not signed by server: '".concat(ot, "'"));
          return { tx: dt, clientAccountID: Ot, matchedHomeDomain: mt, memo: bt };
        }
        function W(rt, ot, X, I, nt, ft, dt) {
          for (var Lt = lt(rt, ot, X, nt.map(function(bt) {
            return bt.key;
          }), ft, dt), $ = 0, it = function() {
            var bt, xt = Ot[mt], Ct = ((bt = nt.find(function(Tt) {
              return Tt.key === xt;
            })) === null || bt === void 0 ? void 0 : bt.weight) || 0;
            $ += Ct;
          }, mt = 0, Ot = Lt; mt < Ot.length; mt++) it();
          if ($ < I) throw new R("signers with weight ".concat($, " do not meet threshold ").concat(I, '"'));
          return Lt;
        }
        function lt(rt, ot, X, I, nt, ft) {
          var dt, Lt = B(rt, ot, X, nt, ft).tx;
          try {
            dt = p.Keypair.fromPublicKey(ot);
          } catch (Mt) {
            throw new Error("Couldn't infer keypair from the provided 'serverAccountID': ".concat(Mt.message));
          }
          var $, it, mt = /* @__PURE__ */ new Set(), Ot = U(I);
          try {
            for (Ot.s(); !($ = Ot.n()).done; ) {
              var bt = $.value;
              bt !== dt.publicKey() && bt.charAt(0) === "G" && mt.add(bt);
            }
          } catch (Mt) {
            Ot.e(Mt);
          } finally {
            Ot.f();
          }
          if (mt.size === 0) throw new R("No verifiable client signers provided, at least one G... address must be provided");
          var xt, Ct = U(Lt.operations);
          try {
            for (Ct.s(); !(xt = Ct.n()).done; ) {
              var Tt = xt.value;
              if (Tt.type === "manageData" && Tt.name === "client_domain") {
                if (it) throw new R("Found more than one client_domain operation");
                it = Tt.source;
              }
            }
          } catch (Mt) {
            Ct.e(Mt);
          } finally {
            Ct.f();
          }
          var Bt = [dt.publicKey()].concat(v(Array.from(mt)));
          it && Bt.push(it);
          for (var At = at(Lt, Bt), Ut = false, Vt = false, oe = 0, te = At; oe < te.length; oe++) {
            var yt = te[oe];
            yt === dt.publicKey() && (Ut = true), yt === it && (Vt = true);
          }
          if (!Ut) throw new R("Transaction not signed by server: '".concat(dt.publicKey(), "'"));
          if (it && !Vt) throw new R("Transaction not signed by the source account of the 'client_domain' ManageData operation");
          if (At.length === 1) throw new R("None of the given signers match the transaction signatures");
          if (At.length !== Lt.signatures.length) throw new R("Transaction has unrecognized signatures");
          return At.splice(At.indexOf(dt.publicKey()), 1), it && At.splice(At.indexOf(it), 1), At;
        }
        function pt(rt, ot) {
          return at(rt, [ot]).length !== 0;
        }
        function at(rt, ot) {
          var X, I = rt.hash(), nt = v(rt.signatures), ft = /* @__PURE__ */ new Set(), dt = U(ot);
          try {
            for (dt.s(); !(X = dt.n()).done; ) {
              var Lt = X.value;
              if (nt.length === 0) break;
              var $ = void 0;
              try {
                $ = p.Keypair.fromPublicKey(Lt);
              } catch (Ot) {
                throw new R("Signer is not a valid address: ".concat(Ot.message));
              }
              for (var it = 0; it < nt.length; it++) {
                var mt = nt[it];
                if (mt.hint().equals($.signatureHint()) && $.verify(I, mt.signature())) {
                  ft.add(Lt), nt.splice(it, 1);
                  break;
                }
              }
            }
          } catch (Ot) {
            dt.e(Ot);
          } finally {
            dt.f();
          }
          return Array.from(ft);
        }
      }, 5537: (s, i, u) => {
        var d = u(8287).Buffer, f = u(6688), p = u(6698), g = u(6917), b = u(8399), h = g.IncomingMessage, m = g.readyStates, c = s.exports = function(T) {
          var P, k = this;
          b.Writable.call(k), k._opts = T, k._body = [], k._headers = {}, T.auth && k.setHeader("Authorization", "Basic " + d.from(T.auth).toString("base64")), Object.keys(T.headers).forEach(function(F) {
            k.setHeader(F, T.headers[F]);
          });
          var R = true;
          if (T.mode === "disable-fetch" || "requestTimeout" in T && !f.abortController) R = false, P = true;
          else if (T.mode === "prefer-streaming") P = false;
          else if (T.mode === "allow-wrong-content-type") P = !f.overrideMimeType;
          else {
            if (T.mode && T.mode !== "default" && T.mode !== "prefer-fast") throw new Error("Invalid value for opts.mode");
            P = true;
          }
          k._mode = function(F, v) {
            return f.fetch && v ? "fetch" : f.mozchunkedarraybuffer ? "moz-chunked-arraybuffer" : f.msstream ? "ms-stream" : f.arraybuffer && F ? "arraybuffer" : "text";
          }(P, R), k._fetchTimer = null, k._socketTimeout = null, k._socketTimer = null, k.on("finish", function() {
            k._onFinish();
          });
        };
        p(c, b.Writable), c.prototype.setHeader = function(T, P) {
          var k = T.toLowerCase();
          w.indexOf(k) === -1 && (this._headers[k] = { name: T, value: P });
        }, c.prototype.getHeader = function(T) {
          var P = this._headers[T.toLowerCase()];
          return P ? P.value : null;
        }, c.prototype.removeHeader = function(T) {
          delete this._headers[T.toLowerCase()];
        }, c.prototype._onFinish = function() {
          var T = this;
          if (!T._destroyed) {
            var P = T._opts;
            "timeout" in P && P.timeout !== 0 && T.setTimeout(P.timeout);
            var k = T._headers, R = null;
            P.method !== "GET" && P.method !== "HEAD" && (R = new Blob(T._body, { type: (k["content-type"] || {}).value || "" }));
            var F = [];
            if (Object.keys(k).forEach(function(Z) {
              var D = k[Z].name, V = k[Z].value;
              Array.isArray(V) ? V.forEach(function(S) {
                F.push([D, S]);
              }) : F.push([D, V]);
            }), T._mode === "fetch") {
              var v = null;
              if (f.abortController) {
                var U = new AbortController();
                v = U.signal, T._fetchAbortController = U, "requestTimeout" in P && P.requestTimeout !== 0 && (T._fetchTimer = u.g.setTimeout(function() {
                  T.emit("requestTimeout"), T._fetchAbortController && T._fetchAbortController.abort();
                }, P.requestTimeout));
              }
              u.g.fetch(T._opts.url, { method: T._opts.method, headers: F, body: R || void 0, mode: "cors", credentials: P.withCredentials ? "include" : "same-origin", signal: v }).then(function(Z) {
                T._fetchResponse = Z, T._resetTimers(false), T._connect();
              }, function(Z) {
                T._resetTimers(true), T._destroyed || T.emit("error", Z);
              });
            } else {
              var M = T._xhr = new u.g.XMLHttpRequest();
              try {
                M.open(T._opts.method, T._opts.url, true);
              } catch (Z) {
                return void process.nextTick(function() {
                  T.emit("error", Z);
                });
              }
              "responseType" in M && (M.responseType = T._mode), "withCredentials" in M && (M.withCredentials = !!P.withCredentials), T._mode === "text" && "overrideMimeType" in M && M.overrideMimeType("text/plain; charset=x-user-defined"), "requestTimeout" in P && (M.timeout = P.requestTimeout, M.ontimeout = function() {
                T.emit("requestTimeout");
              }), F.forEach(function(Z) {
                M.setRequestHeader(Z[0], Z[1]);
              }), T._response = null, M.onreadystatechange = function() {
                switch (M.readyState) {
                  case m.LOADING:
                  case m.DONE:
                    T._onXHRProgress();
                }
              }, T._mode === "moz-chunked-arraybuffer" && (M.onprogress = function() {
                T._onXHRProgress();
              }), M.onerror = function() {
                T._destroyed || (T._resetTimers(true), T.emit("error", new Error("XHR error")));
              };
              try {
                M.send(R);
              } catch (Z) {
                return void process.nextTick(function() {
                  T.emit("error", Z);
                });
              }
            }
          }
        }, c.prototype._onXHRProgress = function() {
          var T = this;
          T._resetTimers(false), function(P) {
            try {
              var k = P.status;
              return k !== null && k !== 0;
            } catch {
              return false;
            }
          }(T._xhr) && !T._destroyed && (T._response || T._connect(), T._response._onXHRProgress(T._resetTimers.bind(T)));
        }, c.prototype._connect = function() {
          var T = this;
          T._destroyed || (T._response = new h(T._xhr, T._fetchResponse, T._mode, T._resetTimers.bind(T)), T._response.on("error", function(P) {
            T.emit("error", P);
          }), T.emit("response", T._response));
        }, c.prototype._write = function(T, P, k) {
          this._body.push(T), k();
        }, c.prototype._resetTimers = function(T) {
          var P = this;
          u.g.clearTimeout(P._socketTimer), P._socketTimer = null, T ? (u.g.clearTimeout(P._fetchTimer), P._fetchTimer = null) : P._socketTimeout && (P._socketTimer = u.g.setTimeout(function() {
            P.emit("timeout");
          }, P._socketTimeout));
        }, c.prototype.abort = c.prototype.destroy = function(T) {
          var P = this;
          P._destroyed = true, P._resetTimers(true), P._response && (P._response._destroyed = true), P._xhr ? P._xhr.abort() : P._fetchAbortController && P._fetchAbortController.abort(), T && P.emit("error", T);
        }, c.prototype.end = function(T, P, k) {
          typeof T == "function" && (k = T, T = void 0), b.Writable.prototype.end.call(this, T, P, k);
        }, c.prototype.setTimeout = function(T, P) {
          var k = this;
          P && k.once("timeout", P), k._socketTimeout = T, k._resetTimers(false);
        }, c.prototype.flushHeaders = function() {
        }, c.prototype.setNoDelay = function() {
        }, c.prototype.setSocketKeepAlive = function() {
        };
        var w = ["accept-charset", "accept-encoding", "access-control-request-headers", "access-control-request-method", "connection", "content-length", "cookie", "cookie2", "date", "dnt", "expect", "host", "keep-alive", "origin", "referer", "te", "trailer", "transfer-encoding", "upgrade", "via"];
      }, 5546: (s) => {
        s.exports = function() {
          function i(u, d, f, p, g, b) {
            this.message = u, this.expected = d, this.found = f, this.offset = p, this.line = g, this.column = b, this.name = "SyntaxError";
          }
          return function(u, d) {
            function f() {
              this.constructor = u;
            }
            f.prototype = d.prototype, u.prototype = new f();
          }(i, Error), { SyntaxError: i, parse: function(u) {
            var d, f = arguments.length > 1 ? arguments[1] : {}, p = {}, g = { start: Nr }, b = Nr, h = function() {
              return ze;
            }, m = p, c = "#", w = { type: "literal", value: "#", description: '"#"' }, T = void 0, P = { type: "any", description: "any character" }, k = "[", R = { type: "literal", value: "[", description: '"["' }, F = "]", v = { type: "literal", value: "]", description: '"]"' }, U = function(It) {
              Ze(Ar("ObjectPath", It, pe, $e));
            }, M = function(It) {
              Ze(Ar("ArrayPath", It, pe, $e));
            }, Z = function(It, ie) {
              return It.concat(ie);
            }, D = function(It) {
              return [It];
            }, V = function(It) {
              return It;
            }, S = ".", x = { type: "literal", value: ".", description: '"."' }, B = "=", W = { type: "literal", value: "=", description: '"="' }, lt = function(It, ie) {
              Ze(Ar("Assign", ie, pe, $e, It));
            }, pt = function(It) {
              return It.join("");
            }, at = function(It) {
              return It.value;
            }, rt = '"""', ot = { type: "literal", value: '"""', description: '"\\"\\"\\""' }, X = null, I = function(It) {
              return Ar("String", It.join(""), pe, $e);
            }, nt = '"', ft = { type: "literal", value: '"', description: '"\\""' }, dt = "'''", Lt = { type: "literal", value: "'''", description: `"'''"` }, $ = "'", it = { type: "literal", value: "'", description: `"'"` }, mt = function(It) {
              return It;
            }, Ot = function(It) {
              return It;
            }, bt = "\\", xt = { type: "literal", value: "\\", description: '"\\\\"' }, Ct = function() {
              return "";
            }, Tt = "e", Bt = { type: "literal", value: "e", description: '"e"' }, At = "E", Ut = { type: "literal", value: "E", description: '"E"' }, Vt = function(It, ie) {
              return Ar("Float", parseFloat(It + "e" + ie), pe, $e);
            }, oe = function(It) {
              return Ar("Float", parseFloat(It), pe, $e);
            }, te = "+", yt = { type: "literal", value: "+", description: '"+"' }, Mt = function(It) {
              return It.join("");
            }, O = "-", z = { type: "literal", value: "-", description: '"-"' }, J = function(It) {
              return "-" + It.join("");
            }, tt = function(It) {
              return Ar("Integer", parseInt(It, 10), pe, $e);
            }, H = "true", K = { type: "literal", value: "true", description: '"true"' }, q = function() {
              return Ar("Boolean", true, pe, $e);
            }, _ = "false", L = { type: "literal", value: "false", description: '"false"' }, et = function() {
              return Ar("Boolean", false, pe, $e);
            }, St = function() {
              return Ar("Array", [], pe, $e);
            }, kt = function(It) {
              return Ar("Array", It ? [It] : [], pe, $e);
            }, ct = function(It) {
              return Ar("Array", It, pe, $e);
            }, j = function(It, ie) {
              return Ar("Array", It.concat(ie), pe, $e);
            }, ut = function(It) {
              return It;
            }, gt = ",", $t = { type: "literal", value: ",", description: '","' }, Ht = "{", wt = { type: "literal", value: "{", description: '"{"' }, Jt = "}", Ee = { type: "literal", value: "}", description: '"}"' }, cr = function(It) {
              return Ar("InlineTable", It, pe, $e);
            }, Lr = function(It, ie) {
              return Ar("InlineTableValue", ie, pe, $e, It);
            }, on = function(It) {
              return "." + It;
            }, Zr = function(It) {
              return It.join("");
            }, to = ":", qn = { type: "literal", value: ":", description: '":"' }, jn = function(It) {
              return It.join("");
            }, eo = "T", no = { type: "literal", value: "T", description: '"T"' }, Dn = "Z", se = { type: "literal", value: "Z", description: '"Z"' }, rr = function(It, ie) {
              return Ar("Date", /* @__PURE__ */ new Date(It + "T" + ie + "Z"), pe, $e);
            }, Tr = function(It, ie) {
              return Ar("Date", /* @__PURE__ */ new Date(It + "T" + ie), pe, $e);
            }, mr = /^[ \t]/, Ir = { type: "class", value: "[ \\t]", description: "[ \\t]" }, En = `
`, An = { type: "literal", value: `
`, description: '"\\n"' }, _n = "\r", Nn = { type: "literal", value: "\r", description: '"\\r"' }, Zn = /^[0-9a-f]/i, Jn = { type: "class", value: "[0-9a-f]i", description: "[0-9a-f]i" }, Hn = /^[0-9]/, uo = { type: "class", value: "[0-9]", description: "[0-9]" }, Oo = "_", jo = { type: "literal", value: "_", description: '"_"' }, Bo = function() {
              return "";
            }, Po = /^[A-Za-z0-9_\-]/, yo = { type: "class", value: "[A-Za-z0-9_\\-]", description: "[A-Za-z0-9_\\-]" }, ri = function(It) {
              return It.join("");
            }, Eo = '\\"', Ao = { type: "literal", value: '\\"', description: '"\\\\\\""' }, ti = function() {
              return '"';
            }, li = "\\\\", pi = { type: "literal", value: "\\\\", description: '"\\\\\\\\"' }, Ho = function() {
              return "\\";
            }, ai = "\\b", hi = { type: "literal", value: "\\b", description: '"\\\\b"' }, Co = function() {
              return "\b";
            }, Wo = "\\t", qt = { type: "literal", value: "\\t", description: '"\\\\t"' }, Nt = function() {
              return "	";
            }, he = "\\n", _e = { type: "literal", value: "\\n", description: '"\\\\n"' }, Ve = function() {
              return `
`;
            }, qe = "\\f", Ge = { type: "literal", value: "\\f", description: '"\\\\f"' }, Je = function() {
              return "\f";
            }, Oe = "\\r", lr = { type: "literal", value: "\\r", description: '"\\\\r"' }, Fr = function() {
              return "\r";
            }, Dr = "\\U", gr = { type: "literal", value: "\\U", description: '"\\\\U"' }, an = function(It) {
              return function(ie, Ae, ge) {
                var we = parseInt("0x" + ie);
                if (!(!isFinite(we) || Math.floor(we) != we || we < 0 || we > 1114111 || we > 55295 && we < 57344)) return function() {
                  var sr, nr, gn = 16384, wn = [], dn = -1, Vn = arguments.length;
                  if (!Vn) return "";
                  for (var ln = ""; ++dn < Vn; ) {
                    var Yr = Number(arguments[dn]);
                    Yr <= 65535 ? wn.push(Yr) : (sr = 55296 + ((Yr -= 65536) >> 10), nr = Yr % 1024 + 56320, wn.push(sr, nr)), (dn + 1 == Vn || wn.length > gn) && (ln += String.fromCharCode.apply(null, wn), wn.length = 0);
                  }
                  return ln;
                }(we);
                (function(sr, nr, gn) {
                  var wn = new Error(sr);
                  throw wn.line = nr, wn.column = gn, wn;
                })("Invalid Unicode escape code: " + ie, Ae, ge);
              }(It.join(""));
            }, pn = "\\u", yn = { type: "literal", value: "\\u", description: '"\\\\u"' }, Rt = 0, jr = 0, Ln = 0, fo = { line: 1, column: 1, seenCR: false }, Wt = 0, ue = [], Zt = 0, Xt = {};
            if ("startRule" in f) {
              if (!(f.startRule in g)) throw new Error(`Can't start parsing from rule "` + f.startRule + '".');
              b = g[f.startRule];
            }
            function pe() {
              return je(jr).line;
            }
            function $e() {
              return je(jr).column;
            }
            function je(It) {
              return Ln !== It && (Ln > It && (Ln = 0, fo = { line: 1, column: 1, seenCR: false }), function(ie, Ae, ge) {
                var we, sr;
                for (we = Ae; we < ge; we++) (sr = u.charAt(we)) === `
` ? (ie.seenCR || ie.line++, ie.column = 1, ie.seenCR = false) : sr === "\r" || sr === "\u2028" || sr === "\u2029" ? (ie.line++, ie.column = 1, ie.seenCR = true) : (ie.column++, ie.seenCR = false);
              }(fo, Ln, It), Ln = It), fo;
            }
            function Me(It) {
              Rt < Wt || (Rt > Wt && (Wt = Rt, ue = []), ue.push(It));
            }
            function fr(It, ie, Ae) {
              var ge = je(Ae), we = Ae < u.length ? u.charAt(Ae) : null;
              return ie !== null && function(sr) {
                var nr = 1;
                for (sr.sort(function(gn, wn) {
                  return gn.description < wn.description ? -1 : gn.description > wn.description ? 1 : 0;
                }); nr < sr.length; ) sr[nr - 1] === sr[nr] ? sr.splice(nr, 1) : nr++;
              }(ie), new i(function(sr, nr) {
                var gn, wn = new Array(sr.length);
                for (gn = 0; gn < sr.length; gn++) wn[gn] = sr[gn].description;
                return "Expected " + (sr.length > 1 ? wn.slice(0, -1).join(", ") + " or " + wn[sr.length - 1] : wn[0]) + " but " + (nr ? '"' + function(dn) {
                  function Vn(ln) {
                    return ln.charCodeAt(0).toString(16).toUpperCase();
                  }
                  return dn.replace(/\\/g, "\\\\").replace(/"/g, '\\"').replace(/\x08/g, "\\b").replace(/\t/g, "\\t").replace(/\n/g, "\\n").replace(/\f/g, "\\f").replace(/\r/g, "\\r").replace(/[\x00-\x07\x0B\x0E\x0F]/g, function(ln) {
                    return "\\x0" + Vn(ln);
                  }).replace(/[\x10-\x1F\x80-\xFF]/g, function(ln) {
                    return "\\x" + Vn(ln);
                  }).replace(/[\u0180-\u0FFF]/g, function(ln) {
                    return "\\u0" + Vn(ln);
                  }).replace(/[\u1080-\uFFFF]/g, function(ln) {
                    return "\\u" + Vn(ln);
                  });
                }(nr) + '"' : "end of input") + " found.";
              }(ie, we), ie, we, Ae, ge.line, ge.column);
            }
            function Nr() {
              var It, ie, Ae, ge = 49 * Rt + 0, we = Xt[ge];
              if (we) return Rt = we.nextPos, we.result;
              for (It = Rt, ie = [], Ae = wr(); Ae !== p; ) ie.push(Ae), Ae = wr();
              return ie !== p && (jr = It, ie = h()), It = ie, Xt[ge] = { nextPos: Rt, result: It }, It;
            }
            function wr() {
              var It, ie, Ae, ge, we, sr, nr, gn = 49 * Rt + 1, wn = Xt[gn];
              if (wn) return Rt = wn.nextPos, wn.result;
              for (It = Rt, ie = [], Ae = C(); Ae !== p; ) ie.push(Ae), Ae = C();
              if (ie !== p) if (Ae = function() {
                var dn, Vn = 49 * Rt + 2, ln = Xt[Vn];
                return ln ? (Rt = ln.nextPos, ln.result) : (dn = Vr(), dn === p && (dn = function() {
                  var Yr, ao, mo, co, So, ho, Lo = 49 * Rt + 4, Io = Xt[Lo];
                  if (Io) return Rt = Io.nextPos, Io.result;
                  if (Yr = Rt, u.charCodeAt(Rt) === 91 ? (ao = k, Rt++) : (ao = p, Zt === 0 && Me(R)), ao !== p) {
                    for (mo = [], co = C(); co !== p; ) mo.push(co), co = C();
                    if (mo !== p) if ((co = $r()) !== p) {
                      for (So = [], ho = C(); ho !== p; ) So.push(ho), ho = C();
                      So !== p ? (u.charCodeAt(Rt) === 93 ? (ho = F, Rt++) : (ho = p, Zt === 0 && Me(v)), ho !== p ? (jr = Yr, Yr = ao = U(co)) : (Rt = Yr, Yr = m)) : (Rt = Yr, Yr = m);
                    } else Rt = Yr, Yr = m;
                    else Rt = Yr, Yr = m;
                  } else Rt = Yr, Yr = m;
                  return Xt[Lo] = { nextPos: Rt, result: Yr }, Yr;
                }(), dn === p && (dn = function() {
                  var Yr, ao, mo, co, So, ho, Lo, Io, Ko = 49 * Rt + 5, ui = Xt[Ko];
                  if (ui) return Rt = ui.nextPos, ui.result;
                  if (Yr = Rt, u.charCodeAt(Rt) === 91 ? (ao = k, Rt++) : (ao = p, Zt === 0 && Me(R)), ao !== p) if (u.charCodeAt(Rt) === 91 ? (mo = k, Rt++) : (mo = p, Zt === 0 && Me(R)), mo !== p) {
                    for (co = [], So = C(); So !== p; ) co.push(So), So = C();
                    if (co !== p) if ((So = $r()) !== p) {
                      for (ho = [], Lo = C(); Lo !== p; ) ho.push(Lo), Lo = C();
                      ho !== p ? (u.charCodeAt(Rt) === 93 ? (Lo = F, Rt++) : (Lo = p, Zt === 0 && Me(v)), Lo !== p ? (u.charCodeAt(Rt) === 93 ? (Io = F, Rt++) : (Io = p, Zt === 0 && Me(v)), Io !== p ? (jr = Yr, Yr = ao = M(So)) : (Rt = Yr, Yr = m)) : (Rt = Yr, Yr = m)) : (Rt = Yr, Yr = m);
                    } else Rt = Yr, Yr = m;
                    else Rt = Yr, Yr = m;
                  } else Rt = Yr, Yr = m;
                  else Rt = Yr, Yr = m;
                  return Xt[Ko] = { nextPos: Rt, result: Yr }, Yr;
                }(), dn === p && (dn = function() {
                  var Yr, ao, mo, co, So, ho, Lo = 49 * Rt + 9, Io = Xt[Lo];
                  if (Io) return Rt = Io.nextPos, Io.result;
                  if (Yr = Rt, ao = sn(), ao !== p) {
                    for (mo = [], co = C(); co !== p; ) mo.push(co), co = C();
                    if (mo !== p) if (u.charCodeAt(Rt) === 61 ? (co = B, Rt++) : (co = p, Zt === 0 && Me(W)), co !== p) {
                      for (So = [], ho = C(); ho !== p; ) So.push(ho), ho = C();
                      So !== p && (ho = Ro()) !== p ? (jr = Yr, Yr = ao = lt(ao, ho)) : (Rt = Yr, Yr = m);
                    } else Rt = Yr, Yr = m;
                    else Rt = Yr, Yr = m;
                  } else Rt = Yr, Yr = m;
                  if (Yr === p) if (Yr = Rt, (ao = To()) !== p) {
                    for (mo = [], co = C(); co !== p; ) mo.push(co), co = C();
                    if (mo !== p) if (u.charCodeAt(Rt) === 61 ? (co = B, Rt++) : (co = p, Zt === 0 && Me(W)), co !== p) {
                      for (So = [], ho = C(); ho !== p; ) So.push(ho), ho = C();
                      So !== p && (ho = Ro()) !== p ? (jr = Yr, Yr = ao = lt(ao, ho)) : (Rt = Yr, Yr = m);
                    } else Rt = Yr, Yr = m;
                    else Rt = Yr, Yr = m;
                  } else Rt = Yr, Yr = m;
                  return Xt[Lo] = { nextPos: Rt, result: Yr }, Yr;
                }()))), Xt[Vn] = { nextPos: Rt, result: dn }, dn);
              }(), Ae !== p) {
                for (ge = [], we = C(); we !== p; ) ge.push(we), we = C();
                if (ge !== p) {
                  for (we = [], sr = Vr(); sr !== p; ) we.push(sr), sr = Vr();
                  if (we !== p) {
                    if (sr = [], (nr = Y()) !== p) for (; nr !== p; ) sr.push(nr), nr = Y();
                    else sr = m;
                    sr === p && (sr = Pt()), sr !== p ? It = ie = [ie, Ae, ge, we, sr] : (Rt = It, It = m);
                  } else Rt = It, It = m;
                } else Rt = It, It = m;
              } else Rt = It, It = m;
              else Rt = It, It = m;
              if (It === p) {
                if (It = Rt, ie = [], (Ae = C()) !== p) for (; Ae !== p; ) ie.push(Ae), Ae = C();
                else ie = m;
                if (ie !== p) {
                  if (Ae = [], (ge = Y()) !== p) for (; ge !== p; ) Ae.push(ge), ge = Y();
                  else Ae = m;
                  Ae === p && (Ae = Pt()), Ae !== p ? It = ie = [ie, Ae] : (Rt = It, It = m);
                } else Rt = It, It = m;
                It === p && (It = Y());
              }
              return Xt[gn] = { nextPos: Rt, result: It }, It;
            }
            function Vr() {
              var It, ie, Ae, ge, we, sr, nr = 49 * Rt + 3, gn = Xt[nr];
              if (gn) return Rt = gn.nextPos, gn.result;
              if (It = Rt, u.charCodeAt(Rt) === 35 ? (ie = c, Rt++) : (ie = p, Zt === 0 && Me(w)), ie !== p) {
                for (Ae = [], ge = Rt, we = Rt, Zt++, (sr = Y()) === p && (sr = Pt()), Zt--, sr === p ? we = T : (Rt = we, we = m), we !== p ? (u.length > Rt ? (sr = u.charAt(Rt), Rt++) : (sr = p, Zt === 0 && Me(P)), sr !== p ? ge = we = [we, sr] : (Rt = ge, ge = m)) : (Rt = ge, ge = m); ge !== p; ) Ae.push(ge), ge = Rt, we = Rt, Zt++, (sr = Y()) === p && (sr = Pt()), Zt--, sr === p ? we = T : (Rt = we, we = m), we !== p ? (u.length > Rt ? (sr = u.charAt(Rt), Rt++) : (sr = p, Zt === 0 && Me(P)), sr !== p ? ge = we = [we, sr] : (Rt = ge, ge = m)) : (Rt = ge, ge = m);
                Ae !== p ? It = ie = [ie, Ae] : (Rt = It, It = m);
              } else Rt = It, It = m;
              return Xt[nr] = { nextPos: Rt, result: It }, It;
            }
            function $r() {
              var It, ie, Ae, ge = 49 * Rt + 6, we = Xt[ge];
              if (we) return Rt = we.nextPos, we.result;
              if (It = Rt, ie = [], (Ae = Cn()) !== p) for (; Ae !== p; ) ie.push(Ae), Ae = Cn();
              else ie = m;
              return ie !== p && (Ae = Xr()) !== p ? (jr = It, It = ie = Z(ie, Ae)) : (Rt = It, It = m), It === p && (It = Rt, (ie = Xr()) !== p && (jr = It, ie = D(ie)), It = ie), Xt[ge] = { nextPos: Rt, result: It }, It;
            }
            function Xr() {
              var It, ie, Ae, ge, we, sr = 49 * Rt + 7, nr = Xt[sr];
              if (nr) return Rt = nr.nextPos, nr.result;
              for (It = Rt, ie = [], Ae = C(); Ae !== p; ) ie.push(Ae), Ae = C();
              if (ie !== p) if ((Ae = sn()) !== p) {
                for (ge = [], we = C(); we !== p; ) ge.push(we), we = C();
                ge !== p ? (jr = It, It = ie = V(Ae)) : (Rt = It, It = m);
              } else Rt = It, It = m;
              else Rt = It, It = m;
              if (It === p) {
                for (It = Rt, ie = [], Ae = C(); Ae !== p; ) ie.push(Ae), Ae = C();
                if (ie !== p) if ((Ae = To()) !== p) {
                  for (ge = [], we = C(); we !== p; ) ge.push(we), we = C();
                  ge !== p ? (jr = It, It = ie = V(Ae)) : (Rt = It, It = m);
                } else Rt = It, It = m;
                else Rt = It, It = m;
              }
              return Xt[sr] = { nextPos: Rt, result: It }, It;
            }
            function Cn() {
              var It, ie, Ae, ge, we, sr, nr, gn = 49 * Rt + 8, wn = Xt[gn];
              if (wn) return Rt = wn.nextPos, wn.result;
              for (It = Rt, ie = [], Ae = C(); Ae !== p; ) ie.push(Ae), Ae = C();
              if (ie !== p) if ((Ae = sn()) !== p) {
                for (ge = [], we = C(); we !== p; ) ge.push(we), we = C();
                if (ge !== p) if (u.charCodeAt(Rt) === 46 ? (we = S, Rt++) : (we = p, Zt === 0 && Me(x)), we !== p) {
                  for (sr = [], nr = C(); nr !== p; ) sr.push(nr), nr = C();
                  sr !== p ? (jr = It, It = ie = V(Ae)) : (Rt = It, It = m);
                } else Rt = It, It = m;
                else Rt = It, It = m;
              } else Rt = It, It = m;
              else Rt = It, It = m;
              if (It === p) {
                for (It = Rt, ie = [], Ae = C(); Ae !== p; ) ie.push(Ae), Ae = C();
                if (ie !== p) if ((Ae = To()) !== p) {
                  for (ge = [], we = C(); we !== p; ) ge.push(we), we = C();
                  if (ge !== p) if (u.charCodeAt(Rt) === 46 ? (we = S, Rt++) : (we = p, Zt === 0 && Me(x)), we !== p) {
                    for (sr = [], nr = C(); nr !== p; ) sr.push(nr), nr = C();
                    sr !== p ? (jr = It, It = ie = V(Ae)) : (Rt = It, It = m);
                  } else Rt = It, It = m;
                  else Rt = It, It = m;
                } else Rt = It, It = m;
                else Rt = It, It = m;
              }
              return Xt[gn] = { nextPos: Rt, result: It }, It;
            }
            function sn() {
              var It, ie, Ae, ge = 49 * Rt + 10, we = Xt[ge];
              if (we) return Rt = we.nextPos, we.result;
              if (It = Rt, ie = [], (Ae = ne()) !== p) for (; Ae !== p; ) ie.push(Ae), Ae = ne();
              else ie = m;
              return ie !== p && (jr = It, ie = pt(ie)), It = ie, Xt[ge] = { nextPos: Rt, result: It }, It;
            }
            function To() {
              var It, ie, Ae = 49 * Rt + 11, ge = Xt[Ae];
              return ge ? (Rt = ge.nextPos, ge.result) : (It = Rt, (ie = Rn()) !== p && (jr = It, ie = at(ie)), (It = ie) === p && (It = Rt, (ie = bo()) !== p && (jr = It, ie = at(ie)), It = ie), Xt[Ae] = { nextPos: Rt, result: It }, It);
            }
            function Ro() {
              var It, ie = 49 * Rt + 12, Ae = Xt[ie];
              return Ae ? (Rt = Ae.nextPos, Ae.result) : (It = function() {
                var ge, we = 49 * Rt + 13, sr = Xt[we];
                return sr ? (Rt = sr.nextPos, sr.result) : (ge = function() {
                  var nr, gn, wn, dn, Vn, ln = 49 * Rt + 14, Yr = Xt[ln];
                  if (Yr) return Rt = Yr.nextPos, Yr.result;
                  if (nr = Rt, u.substr(Rt, 3) === rt ? (gn = rt, Rt += 3) : (gn = p, Zt === 0 && Me(ot)), gn !== p) if ((wn = Y()) === p && (wn = X), wn !== p) {
                    for (dn = [], Vn = Xn(); Vn !== p; ) dn.push(Vn), Vn = Xn();
                    dn !== p ? (u.substr(Rt, 3) === rt ? (Vn = rt, Rt += 3) : (Vn = p, Zt === 0 && Me(ot)), Vn !== p ? (jr = nr, nr = gn = I(dn)) : (Rt = nr, nr = m)) : (Rt = nr, nr = m);
                  } else Rt = nr, nr = m;
                  else Rt = nr, nr = m;
                  return Xt[ln] = { nextPos: Rt, result: nr }, nr;
                }(), ge === p && (ge = Rn()) === p && (ge = function() {
                  var nr, gn, wn, dn, Vn, ln = 49 * Rt + 16, Yr = Xt[ln];
                  if (Yr) return Rt = Yr.nextPos, Yr.result;
                  if (nr = Rt, u.substr(Rt, 3) === dt ? (gn = dt, Rt += 3) : (gn = p, Zt === 0 && Me(Lt)), gn !== p) if ((wn = Y()) === p && (wn = X), wn !== p) {
                    for (dn = [], Vn = ki(); Vn !== p; ) dn.push(Vn), Vn = ki();
                    dn !== p ? (u.substr(Rt, 3) === dt ? (Vn = dt, Rt += 3) : (Vn = p, Zt === 0 && Me(Lt)), Vn !== p ? (jr = nr, nr = gn = I(dn)) : (Rt = nr, nr = m)) : (Rt = nr, nr = m);
                  } else Rt = nr, nr = m;
                  else Rt = nr, nr = m;
                  return Xt[ln] = { nextPos: Rt, result: nr }, nr;
                }(), ge === p && (ge = bo())), Xt[we] = { nextPos: Rt, result: ge }, ge);
              }(), It === p && (It = function() {
                var ge, we, sr, nr, gn, wn = 49 * Rt + 38, dn = Xt[wn];
                return dn ? (Rt = dn.nextPos, dn.result) : (ge = Rt, (we = ar()) !== p ? (u.charCodeAt(Rt) === 84 ? (sr = eo, Rt++) : (sr = p, Zt === 0 && Me(no)), sr !== p ? (nr = function() {
                  var Vn, ln, Yr, ao, mo, co, So, ho, Lo, Io, Ko, ui = 49 * Rt + 36, yi = Xt[ui];
                  return yi ? (Rt = yi.nextPos, yi.result) : (Vn = Rt, ln = Rt, Yr = jt(), Yr !== p && (ao = jt()) !== p ? (u.charCodeAt(Rt) === 58 ? (mo = to, Rt++) : (mo = p, Zt === 0 && Me(qn)), mo !== p && (co = jt()) !== p && (So = jt()) !== p ? (u.charCodeAt(Rt) === 58 ? (ho = to, Rt++) : (ho = p, Zt === 0 && Me(qn)), ho !== p && (Lo = jt()) !== p && (Io = jt()) !== p ? ((Ko = De()) === p && (Ko = X), Ko !== p ? ln = Yr = [Yr, ao, mo, co, So, ho, Lo, Io, Ko] : (Rt = ln, ln = m)) : (Rt = ln, ln = m)) : (Rt = ln, ln = m)) : (Rt = ln, ln = m), ln !== p && (jr = Vn, ln = jn(ln)), Vn = ln, Xt[ui] = { nextPos: Rt, result: Vn }, Vn);
                }(), nr !== p ? (u.charCodeAt(Rt) === 90 ? (gn = Dn, Rt++) : (gn = p, Zt === 0 && Me(se)), gn !== p ? (jr = ge, ge = we = rr(we, nr)) : (Rt = ge, ge = m)) : (Rt = ge, ge = m)) : (Rt = ge, ge = m)) : (Rt = ge, ge = m), ge === p && (ge = Rt, (we = ar()) !== p ? (u.charCodeAt(Rt) === 84 ? (sr = eo, Rt++) : (sr = p, Zt === 0 && Me(no)), sr !== p ? (nr = function() {
                  var Vn, ln, Yr, ao, mo, co, So, ho, Lo, Io, Ko, ui, yi, Mi, Qo, Si, ea, _o = 49 * Rt + 37, Wi = Xt[_o];
                  return Wi ? (Rt = Wi.nextPos, Wi.result) : (Vn = Rt, ln = Rt, Yr = jt(), Yr !== p && (ao = jt()) !== p ? (u.charCodeAt(Rt) === 58 ? (mo = to, Rt++) : (mo = p, Zt === 0 && Me(qn)), mo !== p && (co = jt()) !== p && (So = jt()) !== p ? (u.charCodeAt(Rt) === 58 ? (ho = to, Rt++) : (ho = p, Zt === 0 && Me(qn)), ho !== p && (Lo = jt()) !== p && (Io = jt()) !== p ? ((Ko = De()) === p && (Ko = X), Ko !== p ? (u.charCodeAt(Rt) === 45 ? (ui = O, Rt++) : (ui = p, Zt === 0 && Me(z)), ui === p && (u.charCodeAt(Rt) === 43 ? (ui = te, Rt++) : (ui = p, Zt === 0 && Me(yt))), ui !== p && (yi = jt()) !== p && (Mi = jt()) !== p ? (u.charCodeAt(Rt) === 58 ? (Qo = to, Rt++) : (Qo = p, Zt === 0 && Me(qn)), Qo !== p && (Si = jt()) !== p && (ea = jt()) !== p ? ln = Yr = [Yr, ao, mo, co, So, ho, Lo, Io, Ko, ui, yi, Mi, Qo, Si, ea] : (Rt = ln, ln = m)) : (Rt = ln, ln = m)) : (Rt = ln, ln = m)) : (Rt = ln, ln = m)) : (Rt = ln, ln = m)) : (Rt = ln, ln = m), ln !== p && (jr = Vn, ln = jn(ln)), Vn = ln, Xt[_o] = { nextPos: Rt, result: Vn }, Vn);
                }(), nr !== p ? (jr = ge, ge = we = Tr(we, nr)) : (Rt = ge, ge = m)) : (Rt = ge, ge = m)) : (Rt = ge, ge = m)), Xt[wn] = { nextPos: Rt, result: ge }, ge);
              }(), It === p && (It = function() {
                var ge, we, sr, nr, gn = 49 * Rt + 23, wn = Xt[gn];
                return wn ? (Rt = wn.nextPos, wn.result) : (ge = Rt, (we = ii()) === p && (we = wo()), we !== p ? (u.charCodeAt(Rt) === 101 ? (sr = Tt, Rt++) : (sr = p, Zt === 0 && Me(Bt)), sr === p && (u.charCodeAt(Rt) === 69 ? (sr = At, Rt++) : (sr = p, Zt === 0 && Me(Ut))), sr !== p && (nr = wo()) !== p ? (jr = ge, ge = we = Vt(we, nr)) : (Rt = ge, ge = m)) : (Rt = ge, ge = m), ge === p && (ge = Rt, (we = ii()) !== p && (jr = ge, we = oe(we)), ge = we), Xt[gn] = { nextPos: Rt, result: ge }, ge);
              }(), It === p && (It = function() {
                var ge, we, sr = 49 * Rt + 25, nr = Xt[sr];
                return nr ? (Rt = nr.nextPos, nr.result) : (ge = Rt, (we = wo()) !== p && (jr = ge, we = tt(we)), ge = we, Xt[sr] = { nextPos: Rt, result: ge }, ge);
              }(), It === p && (It = function() {
                var ge, we, sr = 49 * Rt + 27, nr = Xt[sr];
                return nr ? (Rt = nr.nextPos, nr.result) : (ge = Rt, u.substr(Rt, 4) === H ? (we = H, Rt += 4) : (we = p, Zt === 0 && Me(K)), we !== p && (jr = ge, we = q()), ge = we, ge === p && (ge = Rt, u.substr(Rt, 5) === _ ? (we = _, Rt += 5) : (we = p, Zt === 0 && Me(L)), we !== p && (jr = ge, we = et()), ge = we), Xt[sr] = { nextPos: Rt, result: ge }, ge);
              }(), It === p && (It = function() {
                var ge, we, sr, nr, gn, wn = 49 * Rt + 28, dn = Xt[wn];
                if (dn) return Rt = dn.nextPos, dn.result;
                if (ge = Rt, u.charCodeAt(Rt) === 91 ? (we = k, Rt++) : (we = p, Zt === 0 && Me(R)), we !== p) {
                  for (sr = [], nr = ye(); nr !== p; ) sr.push(nr), nr = ye();
                  sr !== p ? (u.charCodeAt(Rt) === 93 ? (nr = F, Rt++) : (nr = p, Zt === 0 && Me(v)), nr !== p ? (jr = ge, ge = we = St()) : (Rt = ge, ge = m)) : (Rt = ge, ge = m);
                } else Rt = ge, ge = m;
                if (ge === p && (ge = Rt, u.charCodeAt(Rt) === 91 ? (we = k, Rt++) : (we = p, Zt === 0 && Me(R)), we !== p ? ((sr = Yt()) === p && (sr = X), sr !== p ? (u.charCodeAt(Rt) === 93 ? (nr = F, Rt++) : (nr = p, Zt === 0 && Me(v)), nr !== p ? (jr = ge, ge = we = kt(sr)) : (Rt = ge, ge = m)) : (Rt = ge, ge = m)) : (Rt = ge, ge = m), ge === p)) {
                  if (ge = Rt, u.charCodeAt(Rt) === 91 ? (we = k, Rt++) : (we = p, Zt === 0 && Me(R)), we !== p) {
                    if (sr = [], (nr = ee()) !== p) for (; nr !== p; ) sr.push(nr), nr = ee();
                    else sr = m;
                    sr !== p ? (u.charCodeAt(Rt) === 93 ? (nr = F, Rt++) : (nr = p, Zt === 0 && Me(v)), nr !== p ? (jr = ge, ge = we = ct(sr)) : (Rt = ge, ge = m)) : (Rt = ge, ge = m);
                  } else Rt = ge, ge = m;
                  if (ge === p) if (ge = Rt, u.charCodeAt(Rt) === 91 ? (we = k, Rt++) : (we = p, Zt === 0 && Me(R)), we !== p) {
                    if (sr = [], (nr = ee()) !== p) for (; nr !== p; ) sr.push(nr), nr = ee();
                    else sr = m;
                    sr !== p && (nr = Yt()) !== p ? (u.charCodeAt(Rt) === 93 ? (gn = F, Rt++) : (gn = p, Zt === 0 && Me(v)), gn !== p ? (jr = ge, ge = we = j(sr, nr)) : (Rt = ge, ge = m)) : (Rt = ge, ge = m);
                  } else Rt = ge, ge = m;
                }
                return Xt[wn] = { nextPos: Rt, result: ge }, ge;
              }(), It === p && (It = function() {
                var ge, we, sr, nr, gn, wn, dn = 49 * Rt + 32, Vn = Xt[dn];
                if (Vn) return Rt = Vn.nextPos, Vn.result;
                if (ge = Rt, u.charCodeAt(Rt) === 123 ? (we = Ht, Rt++) : (we = p, Zt === 0 && Me(wt)), we !== p) {
                  for (sr = [], nr = C(); nr !== p; ) sr.push(nr), nr = C();
                  if (sr !== p) {
                    for (nr = [], gn = Se(); gn !== p; ) nr.push(gn), gn = Se();
                    if (nr !== p) {
                      for (gn = [], wn = C(); wn !== p; ) gn.push(wn), wn = C();
                      gn !== p ? (u.charCodeAt(Rt) === 125 ? (wn = Jt, Rt++) : (wn = p, Zt === 0 && Me(Ee)), wn !== p ? (jr = ge, ge = we = cr(nr)) : (Rt = ge, ge = m)) : (Rt = ge, ge = m);
                    } else Rt = ge, ge = m;
                  } else Rt = ge, ge = m;
                } else Rt = ge, ge = m;
                return Xt[dn] = { nextPos: Rt, result: ge }, ge;
              }())))))), Xt[ie] = { nextPos: Rt, result: It }, It);
            }
            function Rn() {
              var It, ie, Ae, ge, we = 49 * Rt + 15, sr = Xt[we];
              if (sr) return Rt = sr.nextPos, sr.result;
              if (It = Rt, u.charCodeAt(Rt) === 34 ? (ie = nt, Rt++) : (ie = p, Zt === 0 && Me(ft)), ie !== p) {
                for (Ae = [], ge = si(); ge !== p; ) Ae.push(ge), ge = si();
                Ae !== p ? (u.charCodeAt(Rt) === 34 ? (ge = nt, Rt++) : (ge = p, Zt === 0 && Me(ft)), ge !== p ? (jr = It, It = ie = I(Ae)) : (Rt = It, It = m)) : (Rt = It, It = m);
              } else Rt = It, It = m;
              return Xt[we] = { nextPos: Rt, result: It }, It;
            }
            function bo() {
              var It, ie, Ae, ge, we = 49 * Rt + 17, sr = Xt[we];
              if (sr) return Rt = sr.nextPos, sr.result;
              if (It = Rt, u.charCodeAt(Rt) === 39 ? (ie = $, Rt++) : (ie = p, Zt === 0 && Me(it)), ie !== p) {
                for (Ae = [], ge = Xo(); ge !== p; ) Ae.push(ge), ge = Xo();
                Ae !== p ? (u.charCodeAt(Rt) === 39 ? (ge = $, Rt++) : (ge = p, Zt === 0 && Me(it)), ge !== p ? (jr = It, It = ie = I(Ae)) : (Rt = It, It = m)) : (Rt = It, It = m);
              } else Rt = It, It = m;
              return Xt[we] = { nextPos: Rt, result: It }, It;
            }
            function si() {
              var It, ie, Ae, ge = 49 * Rt + 18, we = Xt[ge];
              return we ? (Rt = we.nextPos, we.result) : ((It = ve()) === p && (It = Rt, ie = Rt, Zt++, u.charCodeAt(Rt) === 34 ? (Ae = nt, Rt++) : (Ae = p, Zt === 0 && Me(ft)), Zt--, Ae === p ? ie = T : (Rt = ie, ie = m), ie !== p ? (u.length > Rt ? (Ae = u.charAt(Rt), Rt++) : (Ae = p, Zt === 0 && Me(P)), Ae !== p ? (jr = It, It = ie = mt(Ae)) : (Rt = It, It = m)) : (Rt = It, It = m)), Xt[ge] = { nextPos: Rt, result: It }, It);
            }
            function Xo() {
              var It, ie, Ae, ge = 49 * Rt + 19, we = Xt[ge];
              return we ? (Rt = we.nextPos, we.result) : (It = Rt, ie = Rt, Zt++, u.charCodeAt(Rt) === 39 ? (Ae = $, Rt++) : (Ae = p, Zt === 0 && Me(it)), Zt--, Ae === p ? ie = T : (Rt = ie, ie = m), ie !== p ? (u.length > Rt ? (Ae = u.charAt(Rt), Rt++) : (Ae = p, Zt === 0 && Me(P)), Ae !== p ? (jr = It, It = ie = mt(Ae)) : (Rt = It, It = m)) : (Rt = It, It = m), Xt[ge] = { nextPos: Rt, result: It }, It);
            }
            function Xn() {
              var It, ie, Ae, ge = 49 * Rt + 20, we = Xt[ge];
              return we ? (Rt = we.nextPos, we.result) : ((It = ve()) === p && (It = function() {
                var sr, nr, gn, wn, dn = 49 * Rt + 21, Vn = Xt[dn];
                if (Vn) return Rt = Vn.nextPos, Vn.result;
                if (sr = Rt, u.charCodeAt(Rt) === 92 ? (nr = bt, Rt++) : (nr = p, Zt === 0 && Me(xt)), nr !== p) if (Y() !== p) {
                  for (gn = [], wn = ht(); wn !== p; ) gn.push(wn), wn = ht();
                  gn !== p ? (jr = sr, sr = nr = Ct()) : (Rt = sr, sr = m);
                } else Rt = sr, sr = m;
                else Rt = sr, sr = m;
                return Xt[dn] = { nextPos: Rt, result: sr }, sr;
              }(), It === p && (It = Rt, ie = Rt, Zt++, u.substr(Rt, 3) === rt ? (Ae = rt, Rt += 3) : (Ae = p, Zt === 0 && Me(ot)), Zt--, Ae === p ? ie = T : (Rt = ie, ie = m), ie !== p ? (u.length > Rt ? (Ae = u.charAt(Rt), Rt++) : (Ae = p, Zt === 0 && Me(P)), Ae !== p ? (jr = It, It = ie = Ot(Ae)) : (Rt = It, It = m)) : (Rt = It, It = m))), Xt[ge] = { nextPos: Rt, result: It }, It);
            }
            function ki() {
              var It, ie, Ae, ge = 49 * Rt + 22, we = Xt[ge];
              return we ? (Rt = we.nextPos, we.result) : (It = Rt, ie = Rt, Zt++, u.substr(Rt, 3) === dt ? (Ae = dt, Rt += 3) : (Ae = p, Zt === 0 && Me(Lt)), Zt--, Ae === p ? ie = T : (Rt = ie, ie = m), ie !== p ? (u.length > Rt ? (Ae = u.charAt(Rt), Rt++) : (Ae = p, Zt === 0 && Me(P)), Ae !== p ? (jr = It, It = ie = mt(Ae)) : (Rt = It, It = m)) : (Rt = It, It = m), Xt[ge] = { nextPos: Rt, result: It }, It);
            }
            function ii() {
              var It, ie, Ae, ge, we, sr, nr = 49 * Rt + 24, gn = Xt[nr];
              return gn ? (Rt = gn.nextPos, gn.result) : (It = Rt, u.charCodeAt(Rt) === 43 ? (ie = te, Rt++) : (ie = p, Zt === 0 && Me(yt)), ie === p && (ie = X), ie !== p ? (Ae = Rt, (ge = Ie()) !== p ? (u.charCodeAt(Rt) === 46 ? (we = S, Rt++) : (we = p, Zt === 0 && Me(x)), we !== p && (sr = Ie()) !== p ? Ae = ge = [ge, we, sr] : (Rt = Ae, Ae = m)) : (Rt = Ae, Ae = m), Ae !== p ? (jr = It, It = ie = Mt(Ae)) : (Rt = It, It = m)) : (Rt = It, It = m), It === p && (It = Rt, u.charCodeAt(Rt) === 45 ? (ie = O, Rt++) : (ie = p, Zt === 0 && Me(z)), ie !== p ? (Ae = Rt, (ge = Ie()) !== p ? (u.charCodeAt(Rt) === 46 ? (we = S, Rt++) : (we = p, Zt === 0 && Me(x)), we !== p && (sr = Ie()) !== p ? Ae = ge = [ge, we, sr] : (Rt = Ae, Ae = m)) : (Rt = Ae, Ae = m), Ae !== p ? (jr = It, It = ie = J(Ae)) : (Rt = It, It = m)) : (Rt = It, It = m)), Xt[nr] = { nextPos: Rt, result: It }, It);
            }
            function wo() {
              var It, ie, Ae, ge, we, sr = 49 * Rt + 26, nr = Xt[sr];
              if (nr) return Rt = nr.nextPos, nr.result;
              if (It = Rt, u.charCodeAt(Rt) === 43 ? (ie = te, Rt++) : (ie = p, Zt === 0 && Me(yt)), ie === p && (ie = X), ie !== p) {
                if (Ae = [], (ge = jt()) !== p) for (; ge !== p; ) Ae.push(ge), ge = jt();
                else Ae = m;
                Ae !== p ? (ge = Rt, Zt++, u.charCodeAt(Rt) === 46 ? (we = S, Rt++) : (we = p, Zt === 0 && Me(x)), Zt--, we === p ? ge = T : (Rt = ge, ge = m), ge !== p ? (jr = It, It = ie = Mt(Ae)) : (Rt = It, It = m)) : (Rt = It, It = m);
              } else Rt = It, It = m;
              if (It === p) if (It = Rt, u.charCodeAt(Rt) === 45 ? (ie = O, Rt++) : (ie = p, Zt === 0 && Me(z)), ie !== p) {
                if (Ae = [], (ge = jt()) !== p) for (; ge !== p; ) Ae.push(ge), ge = jt();
                else Ae = m;
                Ae !== p ? (ge = Rt, Zt++, u.charCodeAt(Rt) === 46 ? (we = S, Rt++) : (we = p, Zt === 0 && Me(x)), Zt--, we === p ? ge = T : (Rt = ge, ge = m), ge !== p ? (jr = It, It = ie = J(Ae)) : (Rt = It, It = m)) : (Rt = It, It = m);
              } else Rt = It, It = m;
              return Xt[sr] = { nextPos: Rt, result: It }, It;
            }
            function Yt() {
              var It, ie, Ae, ge, we, sr = 49 * Rt + 29, nr = Xt[sr];
              if (nr) return Rt = nr.nextPos, nr.result;
              for (It = Rt, ie = [], Ae = ye(); Ae !== p; ) ie.push(Ae), Ae = ye();
              if (ie !== p) if ((Ae = Ro()) !== p) {
                for (ge = [], we = ye(); we !== p; ) ge.push(we), we = ye();
                ge !== p ? (jr = It, It = ie = ut(Ae)) : (Rt = It, It = m);
              } else Rt = It, It = m;
              else Rt = It, It = m;
              return Xt[sr] = { nextPos: Rt, result: It }, It;
            }
            function ee() {
              var It, ie, Ae, ge, we, sr, nr, gn = 49 * Rt + 30, wn = Xt[gn];
              if (wn) return Rt = wn.nextPos, wn.result;
              for (It = Rt, ie = [], Ae = ye(); Ae !== p; ) ie.push(Ae), Ae = ye();
              if (ie !== p) if ((Ae = Ro()) !== p) {
                for (ge = [], we = ye(); we !== p; ) ge.push(we), we = ye();
                if (ge !== p) if (u.charCodeAt(Rt) === 44 ? (we = gt, Rt++) : (we = p, Zt === 0 && Me($t)), we !== p) {
                  for (sr = [], nr = ye(); nr !== p; ) sr.push(nr), nr = ye();
                  sr !== p ? (jr = It, It = ie = ut(Ae)) : (Rt = It, It = m);
                } else Rt = It, It = m;
                else Rt = It, It = m;
              } else Rt = It, It = m;
              else Rt = It, It = m;
              return Xt[gn] = { nextPos: Rt, result: It }, It;
            }
            function ye() {
              var It, ie = 49 * Rt + 31, Ae = Xt[ie];
              return Ae ? (Rt = Ae.nextPos, Ae.result) : ((It = C()) === p && (It = Y()) === p && (It = Vr()), Xt[ie] = { nextPos: Rt, result: It }, It);
            }
            function Se() {
              var It, ie, Ae, ge, we, sr, nr, gn, wn, dn, Vn, ln = 49 * Rt + 33, Yr = Xt[ln];
              if (Yr) return Rt = Yr.nextPos, Yr.result;
              for (It = Rt, ie = [], Ae = C(); Ae !== p; ) ie.push(Ae), Ae = C();
              if (ie !== p) if ((Ae = sn()) !== p) {
                for (ge = [], we = C(); we !== p; ) ge.push(we), we = C();
                if (ge !== p) if (u.charCodeAt(Rt) === 61 ? (we = B, Rt++) : (we = p, Zt === 0 && Me(W)), we !== p) {
                  for (sr = [], nr = C(); nr !== p; ) sr.push(nr), nr = C();
                  if (sr !== p) if ((nr = Ro()) !== p) {
                    for (gn = [], wn = C(); wn !== p; ) gn.push(wn), wn = C();
                    if (gn !== p) if (u.charCodeAt(Rt) === 44 ? (wn = gt, Rt++) : (wn = p, Zt === 0 && Me($t)), wn !== p) {
                      for (dn = [], Vn = C(); Vn !== p; ) dn.push(Vn), Vn = C();
                      dn !== p ? (jr = It, It = ie = Lr(Ae, nr)) : (Rt = It, It = m);
                    } else Rt = It, It = m;
                    else Rt = It, It = m;
                  } else Rt = It, It = m;
                  else Rt = It, It = m;
                } else Rt = It, It = m;
                else Rt = It, It = m;
              } else Rt = It, It = m;
              else Rt = It, It = m;
              if (It === p) {
                for (It = Rt, ie = [], Ae = C(); Ae !== p; ) ie.push(Ae), Ae = C();
                if (ie !== p) if ((Ae = sn()) !== p) {
                  for (ge = [], we = C(); we !== p; ) ge.push(we), we = C();
                  if (ge !== p) if (u.charCodeAt(Rt) === 61 ? (we = B, Rt++) : (we = p, Zt === 0 && Me(W)), we !== p) {
                    for (sr = [], nr = C(); nr !== p; ) sr.push(nr), nr = C();
                    sr !== p && (nr = Ro()) !== p ? (jr = It, It = ie = Lr(Ae, nr)) : (Rt = It, It = m);
                  } else Rt = It, It = m;
                  else Rt = It, It = m;
                } else Rt = It, It = m;
                else Rt = It, It = m;
              }
              return Xt[ln] = { nextPos: Rt, result: It }, It;
            }
            function De() {
              var It, ie, Ae, ge = 49 * Rt + 34, we = Xt[ge];
              return we ? (Rt = we.nextPos, we.result) : (It = Rt, u.charCodeAt(Rt) === 46 ? (ie = S, Rt++) : (ie = p, Zt === 0 && Me(x)), ie !== p && (Ae = Ie()) !== p ? (jr = It, It = ie = on(Ae)) : (Rt = It, It = m), Xt[ge] = { nextPos: Rt, result: It }, It);
            }
            function ar() {
              var It, ie, Ae, ge, we, sr, nr, gn, wn, dn, Vn, ln, Yr = 49 * Rt + 35, ao = Xt[Yr];
              return ao ? (Rt = ao.nextPos, ao.result) : (It = Rt, ie = Rt, (Ae = jt()) !== p && (ge = jt()) !== p && (we = jt()) !== p && (sr = jt()) !== p ? (u.charCodeAt(Rt) === 45 ? (nr = O, Rt++) : (nr = p, Zt === 0 && Me(z)), nr !== p && (gn = jt()) !== p && (wn = jt()) !== p ? (u.charCodeAt(Rt) === 45 ? (dn = O, Rt++) : (dn = p, Zt === 0 && Me(z)), dn !== p && (Vn = jt()) !== p && (ln = jt()) !== p ? ie = Ae = [Ae, ge, we, sr, nr, gn, wn, dn, Vn, ln] : (Rt = ie, ie = m)) : (Rt = ie, ie = m)) : (Rt = ie, ie = m), ie !== p && (jr = It, ie = Zr(ie)), It = ie, Xt[Yr] = { nextPos: Rt, result: It }, It);
            }
            function C() {
              var It, ie = 49 * Rt + 39, Ae = Xt[ie];
              return Ae ? (Rt = Ae.nextPos, Ae.result) : (mr.test(u.charAt(Rt)) ? (It = u.charAt(Rt), Rt++) : (It = p, Zt === 0 && Me(Ir)), Xt[ie] = { nextPos: Rt, result: It }, It);
            }
            function Y() {
              var It, ie, Ae, ge = 49 * Rt + 40, we = Xt[ge];
              return we ? (Rt = we.nextPos, we.result) : (u.charCodeAt(Rt) === 10 ? (It = En, Rt++) : (It = p, Zt === 0 && Me(An)), It === p && (It = Rt, u.charCodeAt(Rt) === 13 ? (ie = _n, Rt++) : (ie = p, Zt === 0 && Me(Nn)), ie !== p ? (u.charCodeAt(Rt) === 10 ? (Ae = En, Rt++) : (Ae = p, Zt === 0 && Me(An)), Ae !== p ? It = ie = [ie, Ae] : (Rt = It, It = m)) : (Rt = It, It = m)), Xt[ge] = { nextPos: Rt, result: It }, It);
            }
            function ht() {
              var It, ie = 49 * Rt + 41, Ae = Xt[ie];
              return Ae ? (Rt = Ae.nextPos, Ae.result) : ((It = Y()) === p && (It = C()), Xt[ie] = { nextPos: Rt, result: It }, It);
            }
            function Pt() {
              var It, ie, Ae = 49 * Rt + 42, ge = Xt[Ae];
              return ge ? (Rt = ge.nextPos, ge.result) : (It = Rt, Zt++, u.length > Rt ? (ie = u.charAt(Rt), Rt++) : (ie = p, Zt === 0 && Me(P)), Zt--, ie === p ? It = T : (Rt = It, It = m), Xt[Ae] = { nextPos: Rt, result: It }, It);
            }
            function Ft() {
              var It, ie = 49 * Rt + 43, Ae = Xt[ie];
              return Ae ? (Rt = Ae.nextPos, Ae.result) : (Zn.test(u.charAt(Rt)) ? (It = u.charAt(Rt), Rt++) : (It = p, Zt === 0 && Me(Jn)), Xt[ie] = { nextPos: Rt, result: It }, It);
            }
            function jt() {
              var It, ie, Ae = 49 * Rt + 44, ge = Xt[Ae];
              return ge ? (Rt = ge.nextPos, ge.result) : (Hn.test(u.charAt(Rt)) ? (It = u.charAt(Rt), Rt++) : (It = p, Zt === 0 && Me(uo)), It === p && (It = Rt, u.charCodeAt(Rt) === 95 ? (ie = Oo, Rt++) : (ie = p, Zt === 0 && Me(jo)), ie !== p && (jr = It, ie = Bo()), It = ie), Xt[Ae] = { nextPos: Rt, result: It }, It);
            }
            function ne() {
              var It, ie = 49 * Rt + 45, Ae = Xt[ie];
              return Ae ? (Rt = Ae.nextPos, Ae.result) : (Po.test(u.charAt(Rt)) ? (It = u.charAt(Rt), Rt++) : (It = p, Zt === 0 && Me(yo)), Xt[ie] = { nextPos: Rt, result: It }, It);
            }
            function Ie() {
              var It, ie, Ae, ge = 49 * Rt + 46, we = Xt[ge];
              if (we) return Rt = we.nextPos, we.result;
              if (It = Rt, ie = [], (Ae = jt()) !== p) for (; Ae !== p; ) ie.push(Ae), Ae = jt();
              else ie = m;
              return ie !== p && (jr = It, ie = ri(ie)), It = ie, Xt[ge] = { nextPos: Rt, result: It }, It;
            }
            function ve() {
              var It, ie, Ae = 49 * Rt + 47, ge = Xt[Ae];
              return ge ? (Rt = ge.nextPos, ge.result) : (It = Rt, u.substr(Rt, 2) === Eo ? (ie = Eo, Rt += 2) : (ie = p, Zt === 0 && Me(Ao)), ie !== p && (jr = It, ie = ti()), (It = ie) === p && (It = Rt, u.substr(Rt, 2) === li ? (ie = li, Rt += 2) : (ie = p, Zt === 0 && Me(pi)), ie !== p && (jr = It, ie = Ho()), (It = ie) === p && (It = Rt, u.substr(Rt, 2) === ai ? (ie = ai, Rt += 2) : (ie = p, Zt === 0 && Me(hi)), ie !== p && (jr = It, ie = Co()), (It = ie) === p && (It = Rt, u.substr(Rt, 2) === Wo ? (ie = Wo, Rt += 2) : (ie = p, Zt === 0 && Me(qt)), ie !== p && (jr = It, ie = Nt()), (It = ie) === p && (It = Rt, u.substr(Rt, 2) === he ? (ie = he, Rt += 2) : (ie = p, Zt === 0 && Me(_e)), ie !== p && (jr = It, ie = Ve()), (It = ie) === p && (It = Rt, u.substr(Rt, 2) === qe ? (ie = qe, Rt += 2) : (ie = p, Zt === 0 && Me(Ge)), ie !== p && (jr = It, ie = Je()), (It = ie) === p && (It = Rt, u.substr(Rt, 2) === Oe ? (ie = Oe, Rt += 2) : (ie = p, Zt === 0 && Me(lr)), ie !== p && (jr = It, ie = Fr()), (It = ie) === p && (It = function() {
                var we, sr, nr, gn, wn, dn, Vn, ln, Yr, ao, mo, co = 49 * Rt + 48, So = Xt[co];
                return So ? (Rt = So.nextPos, So.result) : (we = Rt, u.substr(Rt, 2) === Dr ? (sr = Dr, Rt += 2) : (sr = p, Zt === 0 && Me(gr)), sr !== p ? (nr = Rt, (gn = Ft()) !== p && (wn = Ft()) !== p && (dn = Ft()) !== p && (Vn = Ft()) !== p && (ln = Ft()) !== p && (Yr = Ft()) !== p && (ao = Ft()) !== p && (mo = Ft()) !== p ? nr = gn = [gn, wn, dn, Vn, ln, Yr, ao, mo] : (Rt = nr, nr = m), nr !== p ? (jr = we, we = sr = an(nr)) : (Rt = we, we = m)) : (Rt = we, we = m), we === p && (we = Rt, u.substr(Rt, 2) === pn ? (sr = pn, Rt += 2) : (sr = p, Zt === 0 && Me(yn)), sr !== p ? (nr = Rt, (gn = Ft()) !== p && (wn = Ft()) !== p && (dn = Ft()) !== p && (Vn = Ft()) !== p ? nr = gn = [gn, wn, dn, Vn] : (Rt = nr, nr = m), nr !== p ? (jr = we, we = sr = an(nr)) : (Rt = we, we = m)) : (Rt = we, we = m)), Xt[co] = { nextPos: Rt, result: we }, we);
              }()))))))), Xt[Ae] = { nextPos: Rt, result: It }, It);
            }
            var ze = [];
            function Ze(It) {
              ze.push(It);
            }
            function Ar(It, ie, Ae, ge, we) {
              var sr = { type: It, value: ie, line: Ae(), column: ge() };
              return we && (sr.key = we), sr;
            }
            if ((d = b()) !== p && Rt === u.length) return d;
            throw d !== p && Rt < u.length && Me({ type: "end", description: "end of input" }), fr(null, ue, Wt);
          } };
        }();
      }, 5680: (s, i, u) => {
        var d = u(5767);
        s.exports = function(f) {
          return !!d(f);
        };
      }, 5767: (s, i, u) => {
        var d = u(2682), f = u(9209), p = u(487), g = u(6556), b = u(5795), h = u(3628), m = g("Object.prototype.toString"), c = u(9092)(), w = typeof globalThis > "u" ? u.g : globalThis, T = f(), P = g("String.prototype.slice"), k = g("Array.prototype.indexOf", true) || function(F, v) {
          for (var U = 0; U < F.length; U += 1) if (F[U] === v) return U;
          return -1;
        }, R = { __proto__: null };
        d(T, c && b && h ? function(F) {
          var v = new w[F]();
          if (Symbol.toStringTag in v && h) {
            var U = h(v), M = b(U, Symbol.toStringTag);
            if (!M && U) {
              var Z = h(U);
              M = b(Z, Symbol.toStringTag);
            }
            R["$" + F] = p(M.get);
          }
        } : function(F) {
          var v = new w[F](), U = v.slice || v.set;
          U && (R["$" + F] = p(U));
        }), s.exports = function(F) {
          if (!F || typeof F != "object") return false;
          if (!c) {
            var v = P(m(F), 8, -1);
            return k(T, v) > -1 ? v : v === "Object" && function(U) {
              var M = false;
              return d(R, function(Z, D) {
                if (!M) try {
                  Z(U), M = P(D, 1);
                } catch {
                }
              }), M;
            }(F);
          }
          return b ? function(U) {
            var M = false;
            return d(R, function(Z, D) {
              if (!M) try {
                "$" + Z(U) === D && (M = P(D, 1));
              } catch {
              }
            }), M;
          }(F) : null;
        };
      }, 5795: (s, i, u) => {
        var d = u(6549);
        if (d) try {
          d([], "length");
        } catch {
          d = null;
        }
        s.exports = d;
      }, 5880: (s) => {
        s.exports = Math.pow;
      }, 5896: (s) => {
        function i(f, p) {
          d(f, p), u(f);
        }
        function u(f) {
          f._writableState && !f._writableState.emitClose || f._readableState && !f._readableState.emitClose || f.emit("close");
        }
        function d(f, p) {
          f.emit("error", p);
        }
        s.exports = { destroy: function(f, p) {
          var g = this, b = this._readableState && this._readableState.destroyed, h = this._writableState && this._writableState.destroyed;
          return b || h ? (p ? p(f) : f && (this._writableState ? this._writableState.errorEmitted || (this._writableState.errorEmitted = true, process.nextTick(d, this, f)) : process.nextTick(d, this, f)), this) : (this._readableState && (this._readableState.destroyed = true), this._writableState && (this._writableState.destroyed = true), this._destroy(f || null, function(m) {
            !p && m ? g._writableState ? g._writableState.errorEmitted ? process.nextTick(u, g) : (g._writableState.errorEmitted = true, process.nextTick(i, g, m)) : process.nextTick(i, g, m) : p ? (process.nextTick(u, g), p(m)) : process.nextTick(u, g);
          }), this);
        }, undestroy: function() {
          this._readableState && (this._readableState.destroyed = false, this._readableState.reading = false, this._readableState.ended = false, this._readableState.endEmitted = false), this._writableState && (this._writableState.destroyed = false, this._writableState.ended = false, this._writableState.ending = false, this._writableState.finalCalled = false, this._writableState.prefinished = false, this._writableState.finished = false, this._writableState.errorEmitted = false);
        }, errorOrDestroy: function(f, p) {
          var g = f._readableState, b = f._writableState;
          g && g.autoDestroy || b && b.autoDestroy ? f.destroy(p) : f.emit("error", p);
        } };
      }, 5976: (s, i, u) => {
        function d(Tt) {
          return d = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(Bt) {
            return typeof Bt;
          } : function(Bt) {
            return Bt && typeof Symbol == "function" && Bt.constructor === Symbol && Bt !== Symbol.prototype ? "symbol" : typeof Bt;
          }, d(Tt);
        }
        function f(Tt, Bt) {
          for (var At = 0; At < Bt.length; At++) {
            var Ut = Bt[At];
            Ut.enumerable = Ut.enumerable || false, Ut.configurable = true, "value" in Ut && (Ut.writable = true), Object.defineProperty(Tt, p(Ut.key), Ut);
          }
        }
        function p(Tt) {
          var Bt = function(At, Ut) {
            if (d(At) != "object" || !At) return At;
            var Vt = At[Symbol.toPrimitive];
            if (Vt !== void 0) {
              var oe = Vt.call(At, Ut);
              if (d(oe) != "object") return oe;
              throw new TypeError("@@toPrimitive must return a primitive value.");
            }
            return String(At);
          }(Tt, "string");
          return d(Bt) == "symbol" ? Bt : Bt + "";
        }
        function g(Tt, Bt, At) {
          return Bt = c(Bt), function(Ut, Vt) {
            if (Vt && (d(Vt) == "object" || typeof Vt == "function")) return Vt;
            if (Vt !== void 0) throw new TypeError("Derived constructors may only return object or undefined");
            return function(oe) {
              if (oe === void 0) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
              return oe;
            }(Ut);
          }(Tt, h() ? Reflect.construct(Bt, At || [], c(Tt).constructor) : Bt.apply(Tt, At));
        }
        function b(Tt) {
          var Bt = typeof Map == "function" ? /* @__PURE__ */ new Map() : void 0;
          return b = function(At) {
            if (At === null || !function(Vt) {
              try {
                return Function.toString.call(Vt).indexOf("[native code]") !== -1;
              } catch {
                return typeof Vt == "function";
              }
            }(At)) return At;
            if (typeof At != "function") throw new TypeError("Super expression must either be null or a function");
            if (Bt !== void 0) {
              if (Bt.has(At)) return Bt.get(At);
              Bt.set(At, Ut);
            }
            function Ut() {
              return function(Vt, oe, te) {
                if (h()) return Reflect.construct.apply(null, arguments);
                var yt = [null];
                yt.push.apply(yt, oe);
                var Mt = new (Vt.bind.apply(Vt, yt))();
                return te && m(Mt, te.prototype), Mt;
              }(At, arguments, c(this).constructor);
            }
            return Ut.prototype = Object.create(At.prototype, { constructor: { value: Ut, enumerable: false, writable: true, configurable: true } }), m(Ut, At);
          }, b(Tt);
        }
        function h() {
          try {
            var Tt = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
            }));
          } catch {
          }
          return (h = function() {
            return !!Tt;
          })();
        }
        function m(Tt, Bt) {
          return m = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function(At, Ut) {
            return At.__proto__ = Ut, At;
          }, m(Tt, Bt);
        }
        function c(Tt) {
          return c = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function(Bt) {
            return Bt.__proto__ || Object.getPrototypeOf(Bt);
          }, c(Tt);
        }
        u.d(i, { Cu: () => Ct, v7: () => lt, nS: () => ft, Dr: () => w, m_: () => M });
        var w = function(Tt) {
          function Bt(oe, te) {
            var yt;
            (function(O, z) {
              if (!(O instanceof z)) throw new TypeError("Cannot call a class as a function");
            })(this, Bt);
            var Mt = (this instanceof Bt ? this.constructor : void 0).prototype;
            return (yt = g(this, Bt, [oe])).__proto__ = Mt, yt.constructor = Bt, yt.response = te, yt;
          }
          return function(oe, te) {
            if (typeof te != "function" && te !== null) throw new TypeError("Super expression must either be null or a function");
            oe.prototype = Object.create(te && te.prototype, { constructor: { value: oe, writable: true, configurable: true } }), Object.defineProperty(oe, "prototype", { writable: false }), te && m(oe, te);
          }(Bt, Tt), At = Bt, (Ut = [{ key: "getResponse", value: function() {
            return this.response;
          } }]) && f(At.prototype, Ut), Vt && f(At, Vt), Object.defineProperty(At, "prototype", { writable: false }), At;
          var At, Ut, Vt;
        }(b(Error));
        function T(Tt) {
          return T = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(Bt) {
            return typeof Bt;
          } : function(Bt) {
            return Bt && typeof Symbol == "function" && Bt.constructor === Symbol && Bt !== Symbol.prototype ? "symbol" : typeof Bt;
          }, T(Tt);
        }
        function P(Tt, Bt) {
          for (var At = 0; At < Bt.length; At++) {
            var Ut = Bt[At];
            Ut.enumerable = Ut.enumerable || false, Ut.configurable = true, "value" in Ut && (Ut.writable = true), Object.defineProperty(Tt, k(Ut.key), Ut);
          }
        }
        function k(Tt) {
          var Bt = function(At, Ut) {
            if (T(At) != "object" || !At) return At;
            var Vt = At[Symbol.toPrimitive];
            if (Vt !== void 0) {
              var oe = Vt.call(At, Ut);
              if (T(oe) != "object") return oe;
              throw new TypeError("@@toPrimitive must return a primitive value.");
            }
            return String(At);
          }(Tt, "string");
          return T(Bt) == "symbol" ? Bt : Bt + "";
        }
        function R(Tt, Bt, At) {
          return Bt = v(Bt), function(Ut, Vt) {
            if (Vt && (T(Vt) == "object" || typeof Vt == "function")) return Vt;
            if (Vt !== void 0) throw new TypeError("Derived constructors may only return object or undefined");
            return function(oe) {
              if (oe === void 0) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
              return oe;
            }(Ut);
          }(Tt, F() ? Reflect.construct(Bt, At || [], v(Tt).constructor) : Bt.apply(Tt, At));
        }
        function F() {
          try {
            var Tt = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
            }));
          } catch {
          }
          return (F = function() {
            return !!Tt;
          })();
        }
        function v(Tt) {
          return v = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function(Bt) {
            return Bt.__proto__ || Object.getPrototypeOf(Bt);
          }, v(Tt);
        }
        function U(Tt, Bt) {
          return U = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function(At, Ut) {
            return At.__proto__ = Ut, At;
          }, U(Tt, Bt);
        }
        var M = function(Tt) {
          function Bt(oe, te) {
            var yt;
            (function(O, z) {
              if (!(O instanceof z)) throw new TypeError("Cannot call a class as a function");
            })(this, Bt);
            var Mt = (this instanceof Bt ? this.constructor : void 0).prototype;
            return (yt = R(this, Bt, [oe, te])).__proto__ = Mt, yt.constructor = Bt, yt.name = "NotFoundError", yt;
          }
          return function(oe, te) {
            if (typeof te != "function" && te !== null) throw new TypeError("Super expression must either be null or a function");
            oe.prototype = Object.create(te && te.prototype, { constructor: { value: oe, writable: true, configurable: true } }), Object.defineProperty(oe, "prototype", { writable: false }), te && U(oe, te);
          }(Bt, Tt), At = Bt, Ut && P(At.prototype, Ut), Vt && P(At, Vt), Object.defineProperty(At, "prototype", { writable: false }), At;
          var At, Ut, Vt;
        }(w);
        function Z(Tt) {
          return Z = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(Bt) {
            return typeof Bt;
          } : function(Bt) {
            return Bt && typeof Symbol == "function" && Bt.constructor === Symbol && Bt !== Symbol.prototype ? "symbol" : typeof Bt;
          }, Z(Tt);
        }
        function D(Tt, Bt) {
          for (var At = 0; At < Bt.length; At++) {
            var Ut = Bt[At];
            Ut.enumerable = Ut.enumerable || false, Ut.configurable = true, "value" in Ut && (Ut.writable = true), Object.defineProperty(Tt, V(Ut.key), Ut);
          }
        }
        function V(Tt) {
          var Bt = function(At, Ut) {
            if (Z(At) != "object" || !At) return At;
            var Vt = At[Symbol.toPrimitive];
            if (Vt !== void 0) {
              var oe = Vt.call(At, Ut);
              if (Z(oe) != "object") return oe;
              throw new TypeError("@@toPrimitive must return a primitive value.");
            }
            return String(At);
          }(Tt, "string");
          return Z(Bt) == "symbol" ? Bt : Bt + "";
        }
        function S(Tt, Bt, At) {
          return Bt = B(Bt), function(Ut, Vt) {
            if (Vt && (Z(Vt) == "object" || typeof Vt == "function")) return Vt;
            if (Vt !== void 0) throw new TypeError("Derived constructors may only return object or undefined");
            return function(oe) {
              if (oe === void 0) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
              return oe;
            }(Ut);
          }(Tt, x() ? Reflect.construct(Bt, At || [], B(Tt).constructor) : Bt.apply(Tt, At));
        }
        function x() {
          try {
            var Tt = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
            }));
          } catch {
          }
          return (x = function() {
            return !!Tt;
          })();
        }
        function B(Tt) {
          return B = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function(Bt) {
            return Bt.__proto__ || Object.getPrototypeOf(Bt);
          }, B(Tt);
        }
        function W(Tt, Bt) {
          return W = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function(At, Ut) {
            return At.__proto__ = Ut, At;
          }, W(Tt, Bt);
        }
        var lt = function(Tt) {
          function Bt(oe, te) {
            var yt;
            (function(O, z) {
              if (!(O instanceof z)) throw new TypeError("Cannot call a class as a function");
            })(this, Bt);
            var Mt = (this instanceof Bt ? this.constructor : void 0).prototype;
            return (yt = S(this, Bt, [oe, te])).__proto__ = Mt, yt.constructor = Bt, yt.name = "BadRequestError", yt;
          }
          return function(oe, te) {
            if (typeof te != "function" && te !== null) throw new TypeError("Super expression must either be null or a function");
            oe.prototype = Object.create(te && te.prototype, { constructor: { value: oe, writable: true, configurable: true } }), Object.defineProperty(oe, "prototype", { writable: false }), te && W(oe, te);
          }(Bt, Tt), At = Bt, Ut && D(At.prototype, Ut), Vt && D(At, Vt), Object.defineProperty(At, "prototype", { writable: false }), At;
          var At, Ut, Vt;
        }(w);
        function pt(Tt) {
          return pt = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(Bt) {
            return typeof Bt;
          } : function(Bt) {
            return Bt && typeof Symbol == "function" && Bt.constructor === Symbol && Bt !== Symbol.prototype ? "symbol" : typeof Bt;
          }, pt(Tt);
        }
        function at(Tt, Bt) {
          for (var At = 0; At < Bt.length; At++) {
            var Ut = Bt[At];
            Ut.enumerable = Ut.enumerable || false, Ut.configurable = true, "value" in Ut && (Ut.writable = true), Object.defineProperty(Tt, rt(Ut.key), Ut);
          }
        }
        function rt(Tt) {
          var Bt = function(At, Ut) {
            if (pt(At) != "object" || !At) return At;
            var Vt = At[Symbol.toPrimitive];
            if (Vt !== void 0) {
              var oe = Vt.call(At, Ut);
              if (pt(oe) != "object") return oe;
              throw new TypeError("@@toPrimitive must return a primitive value.");
            }
            return String(At);
          }(Tt, "string");
          return pt(Bt) == "symbol" ? Bt : Bt + "";
        }
        function ot(Tt, Bt, At) {
          return Bt = I(Bt), function(Ut, Vt) {
            if (Vt && (pt(Vt) == "object" || typeof Vt == "function")) return Vt;
            if (Vt !== void 0) throw new TypeError("Derived constructors may only return object or undefined");
            return function(oe) {
              if (oe === void 0) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
              return oe;
            }(Ut);
          }(Tt, X() ? Reflect.construct(Bt, At || [], I(Tt).constructor) : Bt.apply(Tt, At));
        }
        function X() {
          try {
            var Tt = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
            }));
          } catch {
          }
          return (X = function() {
            return !!Tt;
          })();
        }
        function I(Tt) {
          return I = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function(Bt) {
            return Bt.__proto__ || Object.getPrototypeOf(Bt);
          }, I(Tt);
        }
        function nt(Tt, Bt) {
          return nt = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function(At, Ut) {
            return At.__proto__ = Ut, At;
          }, nt(Tt, Bt);
        }
        var ft = function(Tt) {
          function Bt(oe, te) {
            var yt;
            (function(O, z) {
              if (!(O instanceof z)) throw new TypeError("Cannot call a class as a function");
            })(this, Bt);
            var Mt = (this instanceof Bt ? this.constructor : void 0).prototype;
            return (yt = ot(this, Bt, [oe, te])).__proto__ = Mt, yt.constructor = Bt, yt.name = "BadResponseError", yt;
          }
          return function(oe, te) {
            if (typeof te != "function" && te !== null) throw new TypeError("Super expression must either be null or a function");
            oe.prototype = Object.create(te && te.prototype, { constructor: { value: oe, writable: true, configurable: true } }), Object.defineProperty(oe, "prototype", { writable: false }), te && nt(oe, te);
          }(Bt, Tt), At = Bt, Ut && at(At.prototype, Ut), Vt && at(At, Vt), Object.defineProperty(At, "prototype", { writable: false }), At;
          var At, Ut, Vt;
        }(w);
        function dt(Tt) {
          return dt = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(Bt) {
            return typeof Bt;
          } : function(Bt) {
            return Bt && typeof Symbol == "function" && Bt.constructor === Symbol && Bt !== Symbol.prototype ? "symbol" : typeof Bt;
          }, dt(Tt);
        }
        function Lt(Tt, Bt) {
          for (var At = 0; At < Bt.length; At++) {
            var Ut = Bt[At];
            Ut.enumerable = Ut.enumerable || false, Ut.configurable = true, "value" in Ut && (Ut.writable = true), Object.defineProperty(Tt, $(Ut.key), Ut);
          }
        }
        function $(Tt) {
          var Bt = function(At, Ut) {
            if (dt(At) != "object" || !At) return At;
            var Vt = At[Symbol.toPrimitive];
            if (Vt !== void 0) {
              var oe = Vt.call(At, Ut);
              if (dt(oe) != "object") return oe;
              throw new TypeError("@@toPrimitive must return a primitive value.");
            }
            return String(At);
          }(Tt, "string");
          return dt(Bt) == "symbol" ? Bt : Bt + "";
        }
        function it(Tt, Bt, At) {
          return Bt = xt(Bt), function(Ut, Vt) {
            if (Vt && (dt(Vt) == "object" || typeof Vt == "function")) return Vt;
            if (Vt !== void 0) throw new TypeError("Derived constructors may only return object or undefined");
            return function(oe) {
              if (oe === void 0) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
              return oe;
            }(Ut);
          }(Tt, Ot() ? Reflect.construct(Bt, At || [], xt(Tt).constructor) : Bt.apply(Tt, At));
        }
        function mt(Tt) {
          var Bt = typeof Map == "function" ? /* @__PURE__ */ new Map() : void 0;
          return mt = function(At) {
            if (At === null || !function(Vt) {
              try {
                return Function.toString.call(Vt).indexOf("[native code]") !== -1;
              } catch {
                return typeof Vt == "function";
              }
            }(At)) return At;
            if (typeof At != "function") throw new TypeError("Super expression must either be null or a function");
            if (Bt !== void 0) {
              if (Bt.has(At)) return Bt.get(At);
              Bt.set(At, Ut);
            }
            function Ut() {
              return function(Vt, oe, te) {
                if (Ot()) return Reflect.construct.apply(null, arguments);
                var yt = [null];
                yt.push.apply(yt, oe);
                var Mt = new (Vt.bind.apply(Vt, yt))();
                return te && bt(Mt, te.prototype), Mt;
              }(At, arguments, xt(this).constructor);
            }
            return Ut.prototype = Object.create(At.prototype, { constructor: { value: Ut, enumerable: false, writable: true, configurable: true } }), bt(Ut, At);
          }, mt(Tt);
        }
        function Ot() {
          try {
            var Tt = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
            }));
          } catch {
          }
          return (Ot = function() {
            return !!Tt;
          })();
        }
        function bt(Tt, Bt) {
          return bt = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function(At, Ut) {
            return At.__proto__ = Ut, At;
          }, bt(Tt, Bt);
        }
        function xt(Tt) {
          return xt = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function(Bt) {
            return Bt.__proto__ || Object.getPrototypeOf(Bt);
          }, xt(Tt);
        }
        var Ct = function(Tt) {
          function Bt(oe, te, yt) {
            var Mt;
            (function(z, J) {
              if (!(z instanceof J)) throw new TypeError("Cannot call a class as a function");
            })(this, Bt);
            var O = (this instanceof Bt ? this.constructor : void 0).prototype;
            return (Mt = it(this, Bt, [oe])).__proto__ = O, Mt.constructor = Bt, Mt.name = "AccountRequiresMemoError", Mt.accountId = te, Mt.operationIndex = yt, Mt;
          }
          return function(oe, te) {
            if (typeof te != "function" && te !== null) throw new TypeError("Super expression must either be null or a function");
            oe.prototype = Object.create(te && te.prototype, { constructor: { value: oe, writable: true, configurable: true } }), Object.defineProperty(oe, "prototype", { writable: false }), te && bt(oe, te);
          }(Bt, Tt), At = Bt, Ut && Lt(At.prototype, Ut), Vt && Lt(At, Vt), Object.defineProperty(At, "prototype", { writable: false }), At;
          var At, Ut, Vt;
        }(mt(Error));
      }, 6048: (s) => {
        var i = {};
        function u(f, p, g) {
          g || (g = Error);
          var b = function(h) {
            var m, c;
            function w(T, P, k) {
              return h.call(this, function(R, F, v) {
                return typeof p == "string" ? p : p(R, F, v);
              }(T, P, k)) || this;
            }
            return c = h, (m = w).prototype = Object.create(c.prototype), m.prototype.constructor = m, m.__proto__ = c, w;
          }(g);
          b.prototype.name = g.name, b.prototype.code = f, i[f] = b;
        }
        function d(f, p) {
          if (Array.isArray(f)) {
            var g = f.length;
            return f = f.map(function(b) {
              return String(b);
            }), g > 2 ? "one of ".concat(p, " ").concat(f.slice(0, g - 1).join(", "), ", or ") + f[g - 1] : g === 2 ? "one of ".concat(p, " ").concat(f[0], " or ").concat(f[1]) : "of ".concat(p, " ").concat(f[0]);
          }
          return "of ".concat(p, " ").concat(String(f));
        }
        u("ERR_INVALID_OPT_VALUE", function(f, p) {
          return 'The value "' + p + '" is invalid for option "' + f + '"';
        }, TypeError), u("ERR_INVALID_ARG_TYPE", function(f, p, g) {
          var b, h, m;
          if (typeof p == "string" && (h = "not ", p.substr(0, h.length) === h) ? (b = "must not be", p = p.replace(/^not /, "")) : b = "must be", function(w, T, P) {
            return (P === void 0 || P > w.length) && (P = w.length), w.substring(P - T.length, P) === T;
          }(f, " argument")) m = "The ".concat(f, " ").concat(b, " ").concat(d(p, "type"));
          else {
            var c = function(w, T, P) {
              return typeof P != "number" && (P = 0), !(P + T.length > w.length) && w.indexOf(T, P) !== -1;
            }(f, ".") ? "property" : "argument";
            m = 'The "'.concat(f, '" ').concat(c, " ").concat(b, " ").concat(d(p, "type"));
          }
          return m += ". Received type ".concat(typeof g);
        }, TypeError), u("ERR_STREAM_PUSH_AFTER_EOF", "stream.push() after EOF"), u("ERR_METHOD_NOT_IMPLEMENTED", function(f) {
          return "The " + f + " method is not implemented";
        }), u("ERR_STREAM_PREMATURE_CLOSE", "Premature close"), u("ERR_STREAM_DESTROYED", function(f) {
          return "Cannot call " + f + " after a stream was destroyed";
        }), u("ERR_MULTIPLE_CALLBACK", "Callback called multiple times"), u("ERR_STREAM_CANNOT_PIPE", "Cannot pipe, not readable"), u("ERR_STREAM_WRITE_AFTER_END", "write after end"), u("ERR_STREAM_NULL_VALUES", "May not write null values to stream", TypeError), u("ERR_UNKNOWN_ENCODING", function(f) {
          return "Unknown encoding: " + f;
        }, TypeError), u("ERR_STREAM_UNSHIFT_AFTER_END_EVENT", "stream.unshift() after end event"), s.exports.F = i;
      }, 6121: (s, i, u) => {
        u.r(i), u.d(i, { axiosClient: () => Ln, create: () => fo });
        var d = {};
        function f(Wt, ue) {
          return function() {
            return Wt.apply(ue, arguments);
          };
        }
        u.r(d), u.d(d, { hasBrowserEnv: () => j, hasStandardBrowserEnv: () => gt, hasStandardBrowserWebWorkerEnv: () => $t, navigator: () => ut, origin: () => Ht });
        const { toString: p } = Object.prototype, { getPrototypeOf: g } = Object, { iterator: b, toStringTag: h } = Symbol, m = (c = /* @__PURE__ */ Object.create(null), (Wt) => {
          const ue = p.call(Wt);
          return c[ue] || (c[ue] = ue.slice(8, -1).toLowerCase());
        });
        var c;
        const w = (Wt) => (Wt = Wt.toLowerCase(), (ue) => m(ue) === Wt), T = (Wt) => (ue) => typeof ue === Wt, { isArray: P } = Array, k = T("undefined"), R = w("ArrayBuffer"), F = T("string"), v = T("function"), U = T("number"), M = (Wt) => Wt !== null && typeof Wt == "object", Z = (Wt) => {
          if (m(Wt) !== "object") return false;
          const ue = g(Wt);
          return !(ue !== null && ue !== Object.prototype && Object.getPrototypeOf(ue) !== null || h in Wt || b in Wt);
        }, D = w("Date"), V = w("File"), S = w("Blob"), x = w("FileList"), B = w("URLSearchParams"), [W, lt, pt, at] = ["ReadableStream", "Request", "Response", "Headers"].map(w);
        function rt(Wt, ue, { allOwnKeys: Zt = false } = {}) {
          if (Wt == null) return;
          let Xt, pe;
          if (typeof Wt != "object" && (Wt = [Wt]), P(Wt)) for (Xt = 0, pe = Wt.length; Xt < pe; Xt++) ue.call(null, Wt[Xt], Xt, Wt);
          else {
            const $e = Zt ? Object.getOwnPropertyNames(Wt) : Object.keys(Wt), je = $e.length;
            let Me;
            for (Xt = 0; Xt < je; Xt++) Me = $e[Xt], ue.call(null, Wt[Me], Me, Wt);
          }
        }
        function ot(Wt, ue) {
          ue = ue.toLowerCase();
          const Zt = Object.keys(Wt);
          let Xt, pe = Zt.length;
          for (; pe-- > 0; ) if (Xt = Zt[pe], ue === Xt.toLowerCase()) return Xt;
          return null;
        }
        const X = typeof globalThis < "u" ? globalThis : typeof self < "u" ? self : typeof window < "u" ? window : zl, I = (Wt) => !k(Wt) && Wt !== X, nt = (ft = typeof Uint8Array < "u" && g(Uint8Array), (Wt) => ft && Wt instanceof ft);
        var ft;
        const dt = w("HTMLFormElement"), Lt = (({ hasOwnProperty: Wt }) => (ue, Zt) => Wt.call(ue, Zt))(Object.prototype), $ = w("RegExp"), it = (Wt, ue) => {
          const Zt = Object.getOwnPropertyDescriptors(Wt), Xt = {};
          rt(Zt, (pe, $e) => {
            let je;
            (je = ue(pe, $e, Wt)) !== false && (Xt[$e] = je || pe);
          }), Object.defineProperties(Wt, Xt);
        }, mt = w("AsyncFunction"), Ot = (bt = typeof setImmediate == "function", xt = v(X.postMessage), bt ? setImmediate : xt ? (Ct = `axios@${Math.random()}`, Tt = [], X.addEventListener("message", ({ source: Wt, data: ue }) => {
          Wt === X && ue === Ct && Tt.length && Tt.shift()();
        }, false), (Wt) => {
          Tt.push(Wt), X.postMessage(Ct, "*");
        }) : (Wt) => setTimeout(Wt));
        var bt, xt, Ct, Tt;
        const Bt = typeof queueMicrotask < "u" ? queueMicrotask.bind(X) : typeof process < "u" && process.nextTick || Ot, At = { isArray: P, isArrayBuffer: R, isBuffer: function(Wt) {
          return Wt !== null && !k(Wt) && Wt.constructor !== null && !k(Wt.constructor) && v(Wt.constructor.isBuffer) && Wt.constructor.isBuffer(Wt);
        }, isFormData: (Wt) => {
          let ue;
          return Wt && (typeof FormData == "function" && Wt instanceof FormData || v(Wt.append) && ((ue = m(Wt)) === "formdata" || ue === "object" && v(Wt.toString) && Wt.toString() === "[object FormData]"));
        }, isArrayBufferView: function(Wt) {
          let ue;
          return ue = typeof ArrayBuffer < "u" && ArrayBuffer.isView ? ArrayBuffer.isView(Wt) : Wt && Wt.buffer && R(Wt.buffer), ue;
        }, isString: F, isNumber: U, isBoolean: (Wt) => Wt === true || Wt === false, isObject: M, isPlainObject: Z, isReadableStream: W, isRequest: lt, isResponse: pt, isHeaders: at, isUndefined: k, isDate: D, isFile: V, isBlob: S, isRegExp: $, isFunction: v, isStream: (Wt) => M(Wt) && v(Wt.pipe), isURLSearchParams: B, isTypedArray: nt, isFileList: x, forEach: rt, merge: function Wt() {
          const { caseless: ue } = I(this) && this || {}, Zt = {}, Xt = (pe, $e) => {
            const je = ue && ot(Zt, $e) || $e;
            Z(Zt[je]) && Z(pe) ? Zt[je] = Wt(Zt[je], pe) : Z(pe) ? Zt[je] = Wt({}, pe) : P(pe) ? Zt[je] = pe.slice() : Zt[je] = pe;
          };
          for (let pe = 0, $e = arguments.length; pe < $e; pe++) arguments[pe] && rt(arguments[pe], Xt);
          return Zt;
        }, extend: (Wt, ue, Zt, { allOwnKeys: Xt } = {}) => (rt(ue, (pe, $e) => {
          Zt && v(pe) ? Wt[$e] = f(pe, Zt) : Wt[$e] = pe;
        }, { allOwnKeys: Xt }), Wt), trim: (Wt) => Wt.trim ? Wt.trim() : Wt.replace(/^[\s\uFEFF\xA0]+|[\s\uFEFF\xA0]+$/g, ""), stripBOM: (Wt) => (Wt.charCodeAt(0) === 65279 && (Wt = Wt.slice(1)), Wt), inherits: (Wt, ue, Zt, Xt) => {
          Wt.prototype = Object.create(ue.prototype, Xt), Wt.prototype.constructor = Wt, Object.defineProperty(Wt, "super", { value: ue.prototype }), Zt && Object.assign(Wt.prototype, Zt);
        }, toFlatObject: (Wt, ue, Zt, Xt) => {
          let pe, $e, je;
          const Me = {};
          if (ue = ue || {}, Wt == null) return ue;
          do {
            for (pe = Object.getOwnPropertyNames(Wt), $e = pe.length; $e-- > 0; ) je = pe[$e], Xt && !Xt(je, Wt, ue) || Me[je] || (ue[je] = Wt[je], Me[je] = true);
            Wt = Zt !== false && g(Wt);
          } while (Wt && (!Zt || Zt(Wt, ue)) && Wt !== Object.prototype);
          return ue;
        }, kindOf: m, kindOfTest: w, endsWith: (Wt, ue, Zt) => {
          Wt = String(Wt), (Zt === void 0 || Zt > Wt.length) && (Zt = Wt.length), Zt -= ue.length;
          const Xt = Wt.indexOf(ue, Zt);
          return Xt !== -1 && Xt === Zt;
        }, toArray: (Wt) => {
          if (!Wt) return null;
          if (P(Wt)) return Wt;
          let ue = Wt.length;
          if (!U(ue)) return null;
          const Zt = new Array(ue);
          for (; ue-- > 0; ) Zt[ue] = Wt[ue];
          return Zt;
        }, forEachEntry: (Wt, ue) => {
          const Zt = (Wt && Wt[b]).call(Wt);
          let Xt;
          for (; (Xt = Zt.next()) && !Xt.done; ) {
            const pe = Xt.value;
            ue.call(Wt, pe[0], pe[1]);
          }
        }, matchAll: (Wt, ue) => {
          let Zt;
          const Xt = [];
          for (; (Zt = Wt.exec(ue)) !== null; ) Xt.push(Zt);
          return Xt;
        }, isHTMLForm: dt, hasOwnProperty: Lt, hasOwnProp: Lt, reduceDescriptors: it, freezeMethods: (Wt) => {
          it(Wt, (ue, Zt) => {
            if (v(Wt) && ["arguments", "caller", "callee"].indexOf(Zt) !== -1) return false;
            const Xt = Wt[Zt];
            v(Xt) && (ue.enumerable = false, "writable" in ue ? ue.writable = false : ue.set || (ue.set = () => {
              throw Error("Can not rewrite read-only method '" + Zt + "'");
            }));
          });
        }, toObjectSet: (Wt, ue) => {
          const Zt = {}, Xt = (pe) => {
            pe.forEach(($e) => {
              Zt[$e] = true;
            });
          };
          return P(Wt) ? Xt(Wt) : Xt(String(Wt).split(ue)), Zt;
        }, toCamelCase: (Wt) => Wt.toLowerCase().replace(/[-_\s]([a-z\d])(\w*)/g, function(ue, Zt, Xt) {
          return Zt.toUpperCase() + Xt;
        }), noop: () => {
        }, toFiniteNumber: (Wt, ue) => Wt != null && Number.isFinite(Wt = +Wt) ? Wt : ue, findKey: ot, global: X, isContextDefined: I, isSpecCompliantForm: function(Wt) {
          return !!(Wt && v(Wt.append) && Wt[h] === "FormData" && Wt[b]);
        }, toJSONObject: (Wt) => {
          const ue = new Array(10), Zt = (Xt, pe) => {
            if (M(Xt)) {
              if (ue.indexOf(Xt) >= 0) return;
              if (!("toJSON" in Xt)) {
                ue[pe] = Xt;
                const $e = P(Xt) ? [] : {};
                return rt(Xt, (je, Me) => {
                  const fr = Zt(je, pe + 1);
                  !k(fr) && ($e[Me] = fr);
                }), ue[pe] = void 0, $e;
              }
            }
            return Xt;
          };
          return Zt(Wt, 0);
        }, isAsyncFn: mt, isThenable: (Wt) => Wt && (M(Wt) || v(Wt)) && v(Wt.then) && v(Wt.catch), setImmediate: Ot, asap: Bt, isIterable: (Wt) => Wt != null && v(Wt[b]) };
        function Ut(Wt, ue, Zt, Xt, pe) {
          Error.call(this), Error.captureStackTrace ? Error.captureStackTrace(this, this.constructor) : this.stack = new Error().stack, this.message = Wt, this.name = "AxiosError", ue && (this.code = ue), Zt && (this.config = Zt), Xt && (this.request = Xt), pe && (this.response = pe, this.status = pe.status ? pe.status : null);
        }
        At.inherits(Ut, Error, { toJSON: function() {
          return { message: this.message, name: this.name, description: this.description, number: this.number, fileName: this.fileName, lineNumber: this.lineNumber, columnNumber: this.columnNumber, stack: this.stack, config: At.toJSONObject(this.config), code: this.code, status: this.status };
        } });
        const Vt = Ut.prototype, oe = {};
        ["ERR_BAD_OPTION_VALUE", "ERR_BAD_OPTION", "ECONNABORTED", "ETIMEDOUT", "ERR_NETWORK", "ERR_FR_TOO_MANY_REDIRECTS", "ERR_DEPRECATED", "ERR_BAD_RESPONSE", "ERR_BAD_REQUEST", "ERR_CANCELED", "ERR_NOT_SUPPORT", "ERR_INVALID_URL"].forEach((Wt) => {
          oe[Wt] = { value: Wt };
        }), Object.defineProperties(Ut, oe), Object.defineProperty(Vt, "isAxiosError", { value: true }), Ut.from = (Wt, ue, Zt, Xt, pe, $e) => {
          const je = Object.create(Vt);
          return At.toFlatObject(Wt, je, function(Me) {
            return Me !== Error.prototype;
          }, (Me) => Me !== "isAxiosError"), Ut.call(je, Wt.message, ue, Zt, Xt, pe), je.cause = Wt, je.name = Wt.name, $e && Object.assign(je, $e), je;
        };
        const te = Ut;
        var yt = u(8287).Buffer;
        function Mt(Wt) {
          return At.isPlainObject(Wt) || At.isArray(Wt);
        }
        function O(Wt) {
          return At.endsWith(Wt, "[]") ? Wt.slice(0, -2) : Wt;
        }
        function z(Wt, ue, Zt) {
          return Wt ? Wt.concat(ue).map(function(Xt, pe) {
            return Xt = O(Xt), !Zt && pe ? "[" + Xt + "]" : Xt;
          }).join(Zt ? "." : "") : ue;
        }
        const J = At.toFlatObject(At, {}, null, function(Wt) {
          return /^is[A-Z]/.test(Wt);
        }), tt = function(Wt, ue, Zt) {
          if (!At.isObject(Wt)) throw new TypeError("target must be an object");
          ue = ue || new FormData();
          const Xt = (Zt = At.toFlatObject(Zt, { metaTokens: true, dots: false, indexes: false }, false, function($r, Xr) {
            return !At.isUndefined(Xr[$r]);
          })).metaTokens, pe = Zt.visitor || Nr, $e = Zt.dots, je = Zt.indexes, Me = (Zt.Blob || typeof Blob < "u" && Blob) && At.isSpecCompliantForm(ue);
          if (!At.isFunction(pe)) throw new TypeError("visitor must be a function");
          function fr($r) {
            if ($r === null) return "";
            if (At.isDate($r)) return $r.toISOString();
            if (At.isBoolean($r)) return $r.toString();
            if (!Me && At.isBlob($r)) throw new te("Blob is not supported. Use a Buffer instead.");
            return At.isArrayBuffer($r) || At.isTypedArray($r) ? Me && typeof Blob == "function" ? new Blob([$r]) : yt.from($r) : $r;
          }
          function Nr($r, Xr, Cn) {
            let sn = $r;
            if ($r && !Cn && typeof $r == "object") {
              if (At.endsWith(Xr, "{}")) Xr = Xt ? Xr : Xr.slice(0, -2), $r = JSON.stringify($r);
              else if (At.isArray($r) && function(To) {
                return At.isArray(To) && !To.some(Mt);
              }($r) || (At.isFileList($r) || At.endsWith(Xr, "[]")) && (sn = At.toArray($r))) return Xr = O(Xr), sn.forEach(function(To, Ro) {
                !At.isUndefined(To) && To !== null && ue.append(je === true ? z([Xr], Ro, $e) : je === null ? Xr : Xr + "[]", fr(To));
              }), false;
            }
            return !!Mt($r) || (ue.append(z(Cn, Xr, $e), fr($r)), false);
          }
          const wr = [], Vr = Object.assign(J, { defaultVisitor: Nr, convertValue: fr, isVisitable: Mt });
          if (!At.isObject(Wt)) throw new TypeError("data must be an object");
          return function $r(Xr, Cn) {
            if (!At.isUndefined(Xr)) {
              if (wr.indexOf(Xr) !== -1) throw Error("Circular reference detected in " + Cn.join("."));
              wr.push(Xr), At.forEach(Xr, function(sn, To) {
                (!(At.isUndefined(sn) || sn === null) && pe.call(ue, sn, At.isString(To) ? To.trim() : To, Cn, Vr)) === true && $r(sn, Cn ? Cn.concat(To) : [To]);
              }), wr.pop();
            }
          }(Wt), ue;
        };
        function H(Wt) {
          const ue = { "!": "%21", "'": "%27", "(": "%28", ")": "%29", "~": "%7E", "%20": "+", "%00": "\0" };
          return encodeURIComponent(Wt).replace(/[!'()~]|%20|%00/g, function(Zt) {
            return ue[Zt];
          });
        }
        function K(Wt, ue) {
          this._pairs = [], Wt && tt(Wt, this, ue);
        }
        const q = K.prototype;
        q.append = function(Wt, ue) {
          this._pairs.push([Wt, ue]);
        }, q.toString = function(Wt) {
          const ue = Wt ? function(Zt) {
            return Wt.call(this, Zt, H);
          } : H;
          return this._pairs.map(function(Zt) {
            return ue(Zt[0]) + "=" + ue(Zt[1]);
          }, "").join("&");
        };
        const _ = K;
        function L(Wt) {
          return encodeURIComponent(Wt).replace(/%3A/gi, ":").replace(/%24/g, "$").replace(/%2C/gi, ",").replace(/%20/g, "+").replace(/%5B/gi, "[").replace(/%5D/gi, "]");
        }
        function et(Wt, ue, Zt) {
          if (!ue) return Wt;
          const Xt = Zt && Zt.encode || L;
          At.isFunction(Zt) && (Zt = { serialize: Zt });
          const pe = Zt && Zt.serialize;
          let $e;
          if ($e = pe ? pe(ue, Zt) : At.isURLSearchParams(ue) ? ue.toString() : new _(ue, Zt).toString(Xt), $e) {
            const je = Wt.indexOf("#");
            je !== -1 && (Wt = Wt.slice(0, je)), Wt += (Wt.indexOf("?") === -1 ? "?" : "&") + $e;
          }
          return Wt;
        }
        const St = class {
          constructor() {
            this.handlers = [];
          }
          use(Wt, ue, Zt) {
            return this.handlers.push({ fulfilled: Wt, rejected: ue, synchronous: !!Zt && Zt.synchronous, runWhen: Zt ? Zt.runWhen : null }), this.handlers.length - 1;
          }
          eject(Wt) {
            this.handlers[Wt] && (this.handlers[Wt] = null);
          }
          clear() {
            this.handlers && (this.handlers = []);
          }
          forEach(Wt) {
            At.forEach(this.handlers, function(ue) {
              ue !== null && Wt(ue);
            });
          }
        }, kt = { silentJSONParsing: true, forcedJSONParsing: true, clarifyTimeoutError: false }, ct = { isBrowser: true, classes: { URLSearchParams: typeof URLSearchParams < "u" ? URLSearchParams : _, FormData: typeof FormData < "u" ? FormData : null, Blob: typeof Blob < "u" ? Blob : null }, protocols: ["http", "https", "file", "blob", "url", "data"] }, j = typeof window < "u" && typeof document < "u", ut = typeof navigator == "object" && navigator || void 0, gt = j && (!ut || ["ReactNative", "NativeScript", "NS"].indexOf(ut.product) < 0), $t = typeof WorkerGlobalScope < "u" && self instanceof WorkerGlobalScope && typeof self.importScripts == "function", Ht = j && window.location.href || "http://localhost", wt = { ...d, ...ct }, Jt = function(Wt) {
          function ue(Zt, Xt, pe, $e) {
            let je = Zt[$e++];
            if (je === "__proto__") return true;
            const Me = Number.isFinite(+je), fr = $e >= Zt.length;
            return je = !je && At.isArray(pe) ? pe.length : je, fr ? (At.hasOwnProp(pe, je) ? pe[je] = [pe[je], Xt] : pe[je] = Xt, !Me) : (pe[je] && At.isObject(pe[je]) || (pe[je] = []), ue(Zt, Xt, pe[je], $e) && At.isArray(pe[je]) && (pe[je] = function(Nr) {
              const wr = {}, Vr = Object.keys(Nr);
              let $r;
              const Xr = Vr.length;
              let Cn;
              for ($r = 0; $r < Xr; $r++) Cn = Vr[$r], wr[Cn] = Nr[Cn];
              return wr;
            }(pe[je])), !Me);
          }
          if (At.isFormData(Wt) && At.isFunction(Wt.entries)) {
            const Zt = {};
            return At.forEachEntry(Wt, (Xt, pe) => {
              ue(function($e) {
                return At.matchAll(/\w+|\[(\w*)]/g, $e).map((je) => je[0] === "[]" ? "" : je[1] || je[0]);
              }(Xt), pe, Zt, 0);
            }), Zt;
          }
          return null;
        }, Ee = { transitional: kt, adapter: ["xhr", "http", "fetch"], transformRequest: [function(Wt, ue) {
          const Zt = ue.getContentType() || "", Xt = Zt.indexOf("application/json") > -1, pe = At.isObject(Wt);
          if (pe && At.isHTMLForm(Wt) && (Wt = new FormData(Wt)), At.isFormData(Wt)) return Xt ? JSON.stringify(Jt(Wt)) : Wt;
          if (At.isArrayBuffer(Wt) || At.isBuffer(Wt) || At.isStream(Wt) || At.isFile(Wt) || At.isBlob(Wt) || At.isReadableStream(Wt)) return Wt;
          if (At.isArrayBufferView(Wt)) return Wt.buffer;
          if (At.isURLSearchParams(Wt)) return ue.setContentType("application/x-www-form-urlencoded;charset=utf-8", false), Wt.toString();
          let $e;
          if (pe) {
            if (Zt.indexOf("application/x-www-form-urlencoded") > -1) return function(je, Me) {
              return tt(je, new wt.classes.URLSearchParams(), Object.assign({ visitor: function(fr, Nr, wr, Vr) {
                return wt.isNode && At.isBuffer(fr) ? (this.append(Nr, fr.toString("base64")), false) : Vr.defaultVisitor.apply(this, arguments);
              } }, Me));
            }(Wt, this.formSerializer).toString();
            if (($e = At.isFileList(Wt)) || Zt.indexOf("multipart/form-data") > -1) {
              const je = this.env && this.env.FormData;
              return tt($e ? { "files[]": Wt } : Wt, je && new je(), this.formSerializer);
            }
          }
          return pe || Xt ? (ue.setContentType("application/json", false), function(je, Me, fr) {
            if (At.isString(je)) try {
              return (Me || JSON.parse)(je), At.trim(je);
            } catch (Nr) {
              if (Nr.name !== "SyntaxError") throw Nr;
            }
            return (fr || JSON.stringify)(je);
          }(Wt)) : Wt;
        }], transformResponse: [function(Wt) {
          const ue = this.transitional || Ee.transitional, Zt = ue && ue.forcedJSONParsing, Xt = this.responseType === "json";
          if (At.isResponse(Wt) || At.isReadableStream(Wt)) return Wt;
          if (Wt && At.isString(Wt) && (Zt && !this.responseType || Xt)) {
            const pe = !(ue && ue.silentJSONParsing) && Xt;
            try {
              return JSON.parse(Wt);
            } catch ($e) {
              if (pe) throw $e.name === "SyntaxError" ? te.from($e, te.ERR_BAD_RESPONSE, this, null, this.response) : $e;
            }
          }
          return Wt;
        }], timeout: 0, xsrfCookieName: "XSRF-TOKEN", xsrfHeaderName: "X-XSRF-TOKEN", maxContentLength: -1, maxBodyLength: -1, env: { FormData: wt.classes.FormData, Blob: wt.classes.Blob }, validateStatus: function(Wt) {
          return Wt >= 200 && Wt < 300;
        }, headers: { common: { Accept: "application/json, text/plain, */*", "Content-Type": void 0 } } };
        At.forEach(["delete", "get", "head", "post", "put", "patch"], (Wt) => {
          Ee.headers[Wt] = {};
        });
        const cr = Ee, Lr = At.toObjectSet(["age", "authorization", "content-length", "content-type", "etag", "expires", "from", "host", "if-modified-since", "if-unmodified-since", "last-modified", "location", "max-forwards", "proxy-authorization", "referer", "retry-after", "user-agent"]), on = Symbol("internals");
        function Zr(Wt) {
          return Wt && String(Wt).trim().toLowerCase();
        }
        function to(Wt) {
          return Wt === false || Wt == null ? Wt : At.isArray(Wt) ? Wt.map(to) : String(Wt);
        }
        function qn(Wt, ue, Zt, Xt, pe) {
          return At.isFunction(Xt) ? Xt.call(this, ue, Zt) : (pe && (ue = Zt), At.isString(ue) ? At.isString(Xt) ? ue.indexOf(Xt) !== -1 : At.isRegExp(Xt) ? Xt.test(ue) : void 0 : void 0);
        }
        class jn {
          constructor(ue) {
            ue && this.set(ue);
          }
          set(ue, Zt, Xt) {
            const pe = this;
            function $e(Me, fr, Nr) {
              const wr = Zr(fr);
              if (!wr) throw new Error("header name must be a non-empty string");
              const Vr = At.findKey(pe, wr);
              (!Vr || pe[Vr] === void 0 || Nr === true || Nr === void 0 && pe[Vr] !== false) && (pe[Vr || fr] = to(Me));
            }
            const je = (Me, fr) => At.forEach(Me, (Nr, wr) => $e(Nr, wr, fr));
            if (At.isPlainObject(ue) || ue instanceof this.constructor) je(ue, Zt);
            else if (At.isString(ue) && (ue = ue.trim()) && !/^[-_a-zA-Z0-9^`|~,!#$%&'*+.]+$/.test(ue.trim())) je(((Me) => {
              const fr = {};
              let Nr, wr, Vr;
              return Me && Me.split(`
`).forEach(function($r) {
                Vr = $r.indexOf(":"), Nr = $r.substring(0, Vr).trim().toLowerCase(), wr = $r.substring(Vr + 1).trim(), !Nr || fr[Nr] && Lr[Nr] || (Nr === "set-cookie" ? fr[Nr] ? fr[Nr].push(wr) : fr[Nr] = [wr] : fr[Nr] = fr[Nr] ? fr[Nr] + ", " + wr : wr);
              }), fr;
            })(ue), Zt);
            else if (At.isObject(ue) && At.isIterable(ue)) {
              let Me, fr, Nr = {};
              for (const wr of ue) {
                if (!At.isArray(wr)) throw TypeError("Object iterator must return a key-value pair");
                Nr[fr = wr[0]] = (Me = Nr[fr]) ? At.isArray(Me) ? [...Me, wr[1]] : [Me, wr[1]] : wr[1];
              }
              je(Nr, Zt);
            } else ue != null && $e(Zt, ue, Xt);
            return this;
          }
          get(ue, Zt) {
            if (ue = Zr(ue)) {
              const Xt = At.findKey(this, ue);
              if (Xt) {
                const pe = this[Xt];
                if (!Zt) return pe;
                if (Zt === true) return function($e) {
                  const je = /* @__PURE__ */ Object.create(null), Me = /([^\s,;=]+)\s*(?:=\s*([^,;]+))?/g;
                  let fr;
                  for (; fr = Me.exec($e); ) je[fr[1]] = fr[2];
                  return je;
                }(pe);
                if (At.isFunction(Zt)) return Zt.call(this, pe, Xt);
                if (At.isRegExp(Zt)) return Zt.exec(pe);
                throw new TypeError("parser must be boolean|regexp|function");
              }
            }
          }
          has(ue, Zt) {
            if (ue = Zr(ue)) {
              const Xt = At.findKey(this, ue);
              return !(!Xt || this[Xt] === void 0 || Zt && !qn(0, this[Xt], Xt, Zt));
            }
            return false;
          }
          delete(ue, Zt) {
            const Xt = this;
            let pe = false;
            function $e(je) {
              if (je = Zr(je)) {
                const Me = At.findKey(Xt, je);
                !Me || Zt && !qn(0, Xt[Me], Me, Zt) || (delete Xt[Me], pe = true);
              }
            }
            return At.isArray(ue) ? ue.forEach($e) : $e(ue), pe;
          }
          clear(ue) {
            const Zt = Object.keys(this);
            let Xt = Zt.length, pe = false;
            for (; Xt--; ) {
              const $e = Zt[Xt];
              ue && !qn(0, this[$e], $e, ue, true) || (delete this[$e], pe = true);
            }
            return pe;
          }
          normalize(ue) {
            const Zt = this, Xt = {};
            return At.forEach(this, (pe, $e) => {
              const je = At.findKey(Xt, $e);
              if (je) return Zt[je] = to(pe), void delete Zt[$e];
              const Me = ue ? function(fr) {
                return fr.trim().toLowerCase().replace(/([a-z\d])(\w*)/g, (Nr, wr, Vr) => wr.toUpperCase() + Vr);
              }($e) : String($e).trim();
              Me !== $e && delete Zt[$e], Zt[Me] = to(pe), Xt[Me] = true;
            }), this;
          }
          concat(...ue) {
            return this.constructor.concat(this, ...ue);
          }
          toJSON(ue) {
            const Zt = /* @__PURE__ */ Object.create(null);
            return At.forEach(this, (Xt, pe) => {
              Xt != null && Xt !== false && (Zt[pe] = ue && At.isArray(Xt) ? Xt.join(", ") : Xt);
            }), Zt;
          }
          [Symbol.iterator]() {
            return Object.entries(this.toJSON())[Symbol.iterator]();
          }
          toString() {
            return Object.entries(this.toJSON()).map(([ue, Zt]) => ue + ": " + Zt).join(`
`);
          }
          getSetCookie() {
            return this.get("set-cookie") || [];
          }
          get [Symbol.toStringTag]() {
            return "AxiosHeaders";
          }
          static from(ue) {
            return ue instanceof this ? ue : new this(ue);
          }
          static concat(ue, ...Zt) {
            const Xt = new this(ue);
            return Zt.forEach((pe) => Xt.set(pe)), Xt;
          }
          static accessor(ue) {
            const Zt = (this[on] = this[on] = { accessors: {} }).accessors, Xt = this.prototype;
            function pe($e) {
              const je = Zr($e);
              Zt[je] || (function(Me, fr) {
                const Nr = At.toCamelCase(" " + fr);
                ["get", "set", "has"].forEach((wr) => {
                  Object.defineProperty(Me, wr + Nr, { value: function(Vr, $r, Xr) {
                    return this[wr].call(this, fr, Vr, $r, Xr);
                  }, configurable: true });
                });
              }(Xt, $e), Zt[je] = true);
            }
            return At.isArray(ue) ? ue.forEach(pe) : pe(ue), this;
          }
        }
        jn.accessor(["Content-Type", "Content-Length", "Accept", "Accept-Encoding", "User-Agent", "Authorization"]), At.reduceDescriptors(jn.prototype, ({ value: Wt }, ue) => {
          let Zt = ue[0].toUpperCase() + ue.slice(1);
          return { get: () => Wt, set(Xt) {
            this[Zt] = Xt;
          } };
        }), At.freezeMethods(jn);
        const eo = jn;
        function no(Wt, ue) {
          const Zt = this || cr, Xt = ue || Zt, pe = eo.from(Xt.headers);
          let $e = Xt.data;
          return At.forEach(Wt, function(je) {
            $e = je.call(Zt, $e, pe.normalize(), ue ? ue.status : void 0);
          }), pe.normalize(), $e;
        }
        function Dn(Wt) {
          return !(!Wt || !Wt.__CANCEL__);
        }
        function se(Wt, ue, Zt) {
          te.call(this, Wt ?? "canceled", te.ERR_CANCELED, ue, Zt), this.name = "CanceledError";
        }
        At.inherits(se, te, { __CANCEL__: true });
        const rr = se;
        function Tr(Wt, ue, Zt) {
          const Xt = Zt.config.validateStatus;
          Zt.status && Xt && !Xt(Zt.status) ? ue(new te("Request failed with status code " + Zt.status, [te.ERR_BAD_REQUEST, te.ERR_BAD_RESPONSE][Math.floor(Zt.status / 100) - 4], Zt.config, Zt.request, Zt)) : Wt(Zt);
        }
        const mr = function(Wt, ue) {
          Wt = Wt || 10;
          const Zt = new Array(Wt), Xt = new Array(Wt);
          let pe, $e = 0, je = 0;
          return ue = ue !== void 0 ? ue : 1e3, function(Me) {
            const fr = Date.now(), Nr = Xt[je];
            pe || (pe = fr), Zt[$e] = Me, Xt[$e] = fr;
            let wr = je, Vr = 0;
            for (; wr !== $e; ) Vr += Zt[wr++], wr %= Wt;
            if ($e = ($e + 1) % Wt, $e === je && (je = (je + 1) % Wt), fr - pe < ue) return;
            const $r = Nr && fr - Nr;
            return $r ? Math.round(1e3 * Vr / $r) : void 0;
          };
        }, Ir = function(Wt, ue) {
          let Zt, Xt, pe = 0, $e = 1e3 / ue;
          const je = (Me, fr = Date.now()) => {
            pe = fr, Zt = null, Xt && (clearTimeout(Xt), Xt = null), Wt.apply(null, Me);
          };
          return [(...Me) => {
            const fr = Date.now(), Nr = fr - pe;
            Nr >= $e ? je(Me, fr) : (Zt = Me, Xt || (Xt = setTimeout(() => {
              Xt = null, je(Zt);
            }, $e - Nr)));
          }, () => Zt && je(Zt)];
        }, En = (Wt, ue, Zt = 3) => {
          let Xt = 0;
          const pe = mr(50, 250);
          return Ir(($e) => {
            const je = $e.loaded, Me = $e.lengthComputable ? $e.total : void 0, fr = je - Xt, Nr = pe(fr);
            Xt = je, Wt({ loaded: je, total: Me, progress: Me ? je / Me : void 0, bytes: fr, rate: Nr || void 0, estimated: Nr && Me && je <= Me ? (Me - je) / Nr : void 0, event: $e, lengthComputable: Me != null, [ue ? "download" : "upload"]: true });
          }, Zt);
        }, An = (Wt, ue) => {
          const Zt = Wt != null;
          return [(Xt) => ue[0]({ lengthComputable: Zt, total: Wt, loaded: Xt }), ue[1]];
        }, _n = (Wt) => (...ue) => At.asap(() => Wt(...ue)), Nn = wt.hasStandardBrowserEnv ? /* @__PURE__ */ ((Wt, ue) => (Zt) => (Zt = new URL(Zt, wt.origin), Wt.protocol === Zt.protocol && Wt.host === Zt.host && (ue || Wt.port === Zt.port)))(new URL(wt.origin), wt.navigator && /(msie|trident)/i.test(wt.navigator.userAgent)) : () => true, Zn = wt.hasStandardBrowserEnv ? { write(Wt, ue, Zt, Xt, pe, $e) {
          const je = [Wt + "=" + encodeURIComponent(ue)];
          At.isNumber(Zt) && je.push("expires=" + new Date(Zt).toGMTString()), At.isString(Xt) && je.push("path=" + Xt), At.isString(pe) && je.push("domain=" + pe), $e === true && je.push("secure"), document.cookie = je.join("; ");
        }, read(Wt) {
          const ue = document.cookie.match(new RegExp("(^|;\\s*)(" + Wt + ")=([^;]*)"));
          return ue ? decodeURIComponent(ue[3]) : null;
        }, remove(Wt) {
          this.write(Wt, "", Date.now() - 864e5);
        } } : { write() {
        }, read: () => null, remove() {
        } };
        function Jn(Wt, ue, Zt) {
          let Xt = !/^([a-z][a-z\d+\-.]*:)?\/\//i.test(ue);
          return Wt && (Xt || Zt == 0) ? function(pe, $e) {
            return $e ? pe.replace(/\/?\/$/, "") + "/" + $e.replace(/^\/+/, "") : pe;
          }(Wt, ue) : ue;
        }
        const Hn = (Wt) => Wt instanceof eo ? { ...Wt } : Wt;
        function uo(Wt, ue) {
          ue = ue || {};
          const Zt = {};
          function Xt(Nr, wr, Vr, $r) {
            return At.isPlainObject(Nr) && At.isPlainObject(wr) ? At.merge.call({ caseless: $r }, Nr, wr) : At.isPlainObject(wr) ? At.merge({}, wr) : At.isArray(wr) ? wr.slice() : wr;
          }
          function pe(Nr, wr, Vr, $r) {
            return At.isUndefined(wr) ? At.isUndefined(Nr) ? void 0 : Xt(void 0, Nr, 0, $r) : Xt(Nr, wr, 0, $r);
          }
          function $e(Nr, wr) {
            if (!At.isUndefined(wr)) return Xt(void 0, wr);
          }
          function je(Nr, wr) {
            return At.isUndefined(wr) ? At.isUndefined(Nr) ? void 0 : Xt(void 0, Nr) : Xt(void 0, wr);
          }
          function Me(Nr, wr, Vr) {
            return Vr in ue ? Xt(Nr, wr) : Vr in Wt ? Xt(void 0, Nr) : void 0;
          }
          const fr = { url: $e, method: $e, data: $e, baseURL: je, transformRequest: je, transformResponse: je, paramsSerializer: je, timeout: je, timeoutMessage: je, withCredentials: je, withXSRFToken: je, adapter: je, responseType: je, xsrfCookieName: je, xsrfHeaderName: je, onUploadProgress: je, onDownloadProgress: je, decompress: je, maxContentLength: je, maxBodyLength: je, beforeRedirect: je, transport: je, httpAgent: je, httpsAgent: je, cancelToken: je, socketPath: je, responseEncoding: je, validateStatus: Me, headers: (Nr, wr, Vr) => pe(Hn(Nr), Hn(wr), 0, true) };
          return At.forEach(Object.keys(Object.assign({}, Wt, ue)), function(Nr) {
            const wr = fr[Nr] || pe, Vr = wr(Wt[Nr], ue[Nr], Nr);
            At.isUndefined(Vr) && wr !== Me || (Zt[Nr] = Vr);
          }), Zt;
        }
        const Oo = (Wt) => {
          const ue = uo({}, Wt);
          let Zt, { data: Xt, withXSRFToken: pe, xsrfHeaderName: $e, xsrfCookieName: je, headers: Me, auth: fr } = ue;
          if (ue.headers = Me = eo.from(Me), ue.url = et(Jn(ue.baseURL, ue.url, ue.allowAbsoluteUrls), Wt.params, Wt.paramsSerializer), fr && Me.set("Authorization", "Basic " + btoa((fr.username || "") + ":" + (fr.password ? unescape(encodeURIComponent(fr.password)) : ""))), At.isFormData(Xt)) {
            if (wt.hasStandardBrowserEnv || wt.hasStandardBrowserWebWorkerEnv) Me.setContentType(void 0);
            else if ((Zt = Me.getContentType()) !== false) {
              const [Nr, ...wr] = Zt ? Zt.split(";").map((Vr) => Vr.trim()).filter(Boolean) : [];
              Me.setContentType([Nr || "multipart/form-data", ...wr].join("; "));
            }
          }
          if (wt.hasStandardBrowserEnv && (pe && At.isFunction(pe) && (pe = pe(ue)), pe || pe !== false && Nn(ue.url))) {
            const Nr = $e && je && Zn.read(je);
            Nr && Me.set($e, Nr);
          }
          return ue;
        }, jo = typeof XMLHttpRequest < "u" && function(Wt) {
          return new Promise(function(ue, Zt) {
            const Xt = Oo(Wt);
            let pe = Xt.data;
            const $e = eo.from(Xt.headers).normalize();
            let je, Me, fr, Nr, wr, { responseType: Vr, onUploadProgress: $r, onDownloadProgress: Xr } = Xt;
            function Cn() {
              Nr && Nr(), wr && wr(), Xt.cancelToken && Xt.cancelToken.unsubscribe(je), Xt.signal && Xt.signal.removeEventListener("abort", je);
            }
            let sn = new XMLHttpRequest();
            function To() {
              if (!sn) return;
              const Rn = eo.from("getAllResponseHeaders" in sn && sn.getAllResponseHeaders());
              Tr(function(bo) {
                ue(bo), Cn();
              }, function(bo) {
                Zt(bo), Cn();
              }, { data: Vr && Vr !== "text" && Vr !== "json" ? sn.response : sn.responseText, status: sn.status, statusText: sn.statusText, headers: Rn, config: Wt, request: sn }), sn = null;
            }
            sn.open(Xt.method.toUpperCase(), Xt.url, true), sn.timeout = Xt.timeout, "onloadend" in sn ? sn.onloadend = To : sn.onreadystatechange = function() {
              sn && sn.readyState === 4 && (sn.status !== 0 || sn.responseURL && sn.responseURL.indexOf("file:") === 0) && setTimeout(To);
            }, sn.onabort = function() {
              sn && (Zt(new te("Request aborted", te.ECONNABORTED, Wt, sn)), sn = null);
            }, sn.onerror = function() {
              Zt(new te("Network Error", te.ERR_NETWORK, Wt, sn)), sn = null;
            }, sn.ontimeout = function() {
              let Rn = Xt.timeout ? "timeout of " + Xt.timeout + "ms exceeded" : "timeout exceeded";
              const bo = Xt.transitional || kt;
              Xt.timeoutErrorMessage && (Rn = Xt.timeoutErrorMessage), Zt(new te(Rn, bo.clarifyTimeoutError ? te.ETIMEDOUT : te.ECONNABORTED, Wt, sn)), sn = null;
            }, pe === void 0 && $e.setContentType(null), "setRequestHeader" in sn && At.forEach($e.toJSON(), function(Rn, bo) {
              sn.setRequestHeader(bo, Rn);
            }), At.isUndefined(Xt.withCredentials) || (sn.withCredentials = !!Xt.withCredentials), Vr && Vr !== "json" && (sn.responseType = Xt.responseType), Xr && ([fr, wr] = En(Xr, true), sn.addEventListener("progress", fr)), $r && sn.upload && ([Me, Nr] = En($r), sn.upload.addEventListener("progress", Me), sn.upload.addEventListener("loadend", Nr)), (Xt.cancelToken || Xt.signal) && (je = (Rn) => {
              sn && (Zt(!Rn || Rn.type ? new rr(null, Wt, sn) : Rn), sn.abort(), sn = null);
            }, Xt.cancelToken && Xt.cancelToken.subscribe(je), Xt.signal && (Xt.signal.aborted ? je() : Xt.signal.addEventListener("abort", je)));
            const Ro = function(Rn) {
              const bo = /^([-+\w]{1,25})(:?\/\/|:)/.exec(Rn);
              return bo && bo[1] || "";
            }(Xt.url);
            Ro && wt.protocols.indexOf(Ro) === -1 ? Zt(new te("Unsupported protocol " + Ro + ":", te.ERR_BAD_REQUEST, Wt)) : sn.send(pe || null);
          });
        }, Bo = (Wt, ue) => {
          const { length: Zt } = Wt = Wt ? Wt.filter(Boolean) : [];
          if (ue || Zt) {
            let Xt, pe = new AbortController();
            const $e = function(Nr) {
              if (!Xt) {
                Xt = true, Me();
                const wr = Nr instanceof Error ? Nr : this.reason;
                pe.abort(wr instanceof te ? wr : new rr(wr instanceof Error ? wr.message : wr));
              }
            };
            let je = ue && setTimeout(() => {
              je = null, $e(new te(`timeout ${ue} of ms exceeded`, te.ETIMEDOUT));
            }, ue);
            const Me = () => {
              Wt && (je && clearTimeout(je), je = null, Wt.forEach((Nr) => {
                Nr.unsubscribe ? Nr.unsubscribe($e) : Nr.removeEventListener("abort", $e);
              }), Wt = null);
            };
            Wt.forEach((Nr) => Nr.addEventListener("abort", $e));
            const { signal: fr } = pe;
            return fr.unsubscribe = () => At.asap(Me), fr;
          }
        }, Po = function* (Wt, ue) {
          let Zt = Wt.byteLength;
          if (Zt < ue) return void (yield Wt);
          let Xt, pe = 0;
          for (; pe < Zt; ) Xt = pe + ue, yield Wt.slice(pe, Xt), pe = Xt;
        }, yo = async function* (Wt) {
          if (Wt[Symbol.asyncIterator]) return void (yield* Wt);
          const ue = Wt.getReader();
          try {
            for (; ; ) {
              const { done: Zt, value: Xt } = await ue.read();
              if (Zt) break;
              yield Xt;
            }
          } finally {
            await ue.cancel();
          }
        }, ri = (Wt, ue, Zt, Xt) => {
          const pe = async function* (fr, Nr) {
            for await (const wr of yo(fr)) yield* Po(wr, Nr);
          }(Wt, ue);
          let $e, je = 0, Me = (fr) => {
            $e || ($e = true, Xt && Xt(fr));
          };
          return new ReadableStream({ async pull(fr) {
            try {
              const { done: Nr, value: wr } = await pe.next();
              if (Nr) return Me(), void fr.close();
              let Vr = wr.byteLength;
              if (Zt) {
                let $r = je += Vr;
                Zt($r);
              }
              fr.enqueue(new Uint8Array(wr));
            } catch (Nr) {
              throw Me(Nr), Nr;
            }
          }, cancel: (fr) => (Me(fr), pe.return()) }, { highWaterMark: 2 });
        }, Eo = typeof fetch == "function" && typeof Request == "function" && typeof Response == "function", Ao = Eo && typeof ReadableStream == "function", ti = Eo && (typeof TextEncoder == "function" ? (li = new TextEncoder(), (Wt) => li.encode(Wt)) : async (Wt) => new Uint8Array(await new Response(Wt).arrayBuffer()));
        var li;
        const pi = (Wt, ...ue) => {
          try {
            return !!Wt(...ue);
          } catch {
            return false;
          }
        }, Ho = Ao && pi(() => {
          let Wt = false;
          const ue = new Request(wt.origin, { body: new ReadableStream(), method: "POST", get duplex() {
            return Wt = true, "half";
          } }).headers.has("Content-Type");
          return Wt && !ue;
        }), ai = Ao && pi(() => At.isReadableStream(new Response("").body)), hi = { stream: ai && ((Wt) => Wt.body) };
        var Co;
        Eo && (Co = new Response(), ["text", "arrayBuffer", "blob", "formData", "stream"].forEach((Wt) => {
          !hi[Wt] && (hi[Wt] = At.isFunction(Co[Wt]) ? (ue) => ue[Wt]() : (ue, Zt) => {
            throw new te(`Response type '${Wt}' is not supported`, te.ERR_NOT_SUPPORT, Zt);
          });
        }));
        const Wo = async (Wt, ue) => {
          const Zt = At.toFiniteNumber(Wt.getContentLength());
          return Zt ?? (async (Xt) => Xt == null ? 0 : At.isBlob(Xt) ? Xt.size : At.isSpecCompliantForm(Xt) ? (await new Request(wt.origin, { method: "POST", body: Xt }).arrayBuffer()).byteLength : At.isArrayBufferView(Xt) || At.isArrayBuffer(Xt) ? Xt.byteLength : (At.isURLSearchParams(Xt) && (Xt += ""), At.isString(Xt) ? (await ti(Xt)).byteLength : void 0))(ue);
        }, qt = { http: null, xhr: jo, fetch: Eo && (async (Wt) => {
          let { url: ue, method: Zt, data: Xt, signal: pe, cancelToken: $e, timeout: je, onDownloadProgress: Me, onUploadProgress: fr, responseType: Nr, headers: wr, withCredentials: Vr = "same-origin", fetchOptions: $r } = Oo(Wt);
          Nr = Nr ? (Nr + "").toLowerCase() : "text";
          let Xr, Cn = Bo([pe, $e && $e.toAbortSignal()], je);
          const sn = Cn && Cn.unsubscribe && (() => {
            Cn.unsubscribe();
          });
          let To;
          try {
            if (fr && Ho && Zt !== "get" && Zt !== "head" && (To = await Wo(wr, Xt)) !== 0) {
              let Xo, Xn = new Request(ue, { method: "POST", body: Xt, duplex: "half" });
              if (At.isFormData(Xt) && (Xo = Xn.headers.get("content-type")) && wr.setContentType(Xo), Xn.body) {
                const [ki, ii] = An(To, En(_n(fr)));
                Xt = ri(Xn.body, 65536, ki, ii);
              }
            }
            At.isString(Vr) || (Vr = Vr ? "include" : "omit");
            const Ro = "credentials" in Request.prototype;
            Xr = new Request(ue, { ...$r, signal: Cn, method: Zt.toUpperCase(), headers: wr.normalize().toJSON(), body: Xt, duplex: "half", credentials: Ro ? Vr : void 0 });
            let Rn = await fetch(Xr, $r);
            const bo = ai && (Nr === "stream" || Nr === "response");
            if (ai && (Me || bo && sn)) {
              const Xo = {};
              ["status", "statusText", "headers"].forEach((wo) => {
                Xo[wo] = Rn[wo];
              });
              const Xn = At.toFiniteNumber(Rn.headers.get("content-length")), [ki, ii] = Me && An(Xn, En(_n(Me), true)) || [];
              Rn = new Response(ri(Rn.body, 65536, ki, () => {
                ii && ii(), sn && sn();
              }), Xo);
            }
            Nr = Nr || "text";
            let si = await hi[At.findKey(hi, Nr) || "text"](Rn, Wt);
            return !bo && sn && sn(), await new Promise((Xo, Xn) => {
              Tr(Xo, Xn, { data: si, headers: eo.from(Rn.headers), status: Rn.status, statusText: Rn.statusText, config: Wt, request: Xr });
            });
          } catch (Ro) {
            throw sn && sn(), Ro && Ro.name === "TypeError" && /Load failed|fetch/i.test(Ro.message) ? Object.assign(new te("Network Error", te.ERR_NETWORK, Wt, Xr), { cause: Ro.cause || Ro }) : te.from(Ro, Ro && Ro.code, Wt, Xr);
          }
        }) };
        At.forEach(qt, (Wt, ue) => {
          if (Wt) {
            try {
              Object.defineProperty(Wt, "name", { value: ue });
            } catch {
            }
            Object.defineProperty(Wt, "adapterName", { value: ue });
          }
        });
        const Nt = (Wt) => `- ${Wt}`, he = (Wt) => At.isFunction(Wt) || Wt === null || Wt === false, _e = (Wt) => {
          Wt = At.isArray(Wt) ? Wt : [Wt];
          const { length: ue } = Wt;
          let Zt, Xt;
          const pe = {};
          for (let $e = 0; $e < ue; $e++) {
            let je;
            if (Zt = Wt[$e], Xt = Zt, !he(Zt) && (Xt = qt[(je = String(Zt)).toLowerCase()], Xt === void 0)) throw new te(`Unknown adapter '${je}'`);
            if (Xt) break;
            pe[je || "#" + $e] = Xt;
          }
          if (!Xt) {
            const $e = Object.entries(pe).map(([Me, fr]) => `adapter ${Me} ` + (fr === false ? "is not supported by the environment" : "is not available in the build"));
            let je = ue ? $e.length > 1 ? `since :
` + $e.map(Nt).join(`
`) : " " + Nt($e[0]) : "as no adapter specified";
            throw new te("There is no suitable adapter to dispatch the request " + je, "ERR_NOT_SUPPORT");
          }
          return Xt;
        };
        function Ve(Wt) {
          if (Wt.cancelToken && Wt.cancelToken.throwIfRequested(), Wt.signal && Wt.signal.aborted) throw new rr(null, Wt);
        }
        function qe(Wt) {
          return Ve(Wt), Wt.headers = eo.from(Wt.headers), Wt.data = no.call(Wt, Wt.transformRequest), ["post", "put", "patch"].indexOf(Wt.method) !== -1 && Wt.headers.setContentType("application/x-www-form-urlencoded", false), _e(Wt.adapter || cr.adapter)(Wt).then(function(ue) {
            return Ve(Wt), ue.data = no.call(Wt, Wt.transformResponse, ue), ue.headers = eo.from(ue.headers), ue;
          }, function(ue) {
            return Dn(ue) || (Ve(Wt), ue && ue.response && (ue.response.data = no.call(Wt, Wt.transformResponse, ue.response), ue.response.headers = eo.from(ue.response.headers))), Promise.reject(ue);
          });
        }
        const Ge = "1.10.0", Je = {};
        ["object", "boolean", "number", "function", "string", "symbol"].forEach((Wt, ue) => {
          Je[Wt] = function(Zt) {
            return typeof Zt === Wt || "a" + (ue < 1 ? "n " : " ") + Wt;
          };
        });
        const Oe = {};
        Je.transitional = function(Wt, ue, Zt) {
          function Xt(pe, $e) {
            return "[Axios v" + Ge + "] Transitional option '" + pe + "'" + $e + (Zt ? ". " + Zt : "");
          }
          return (pe, $e, je) => {
            if (Wt === false) throw new te(Xt($e, " has been removed" + (ue ? " in " + ue : "")), te.ERR_DEPRECATED);
            return ue && !Oe[$e] && (Oe[$e] = true, console.warn(Xt($e, " has been deprecated since v" + ue + " and will be removed in the near future"))), !Wt || Wt(pe, $e, je);
          };
        }, Je.spelling = function(Wt) {
          return (ue, Zt) => (console.warn(`${Zt} is likely a misspelling of ${Wt}`), true);
        };
        const lr = { assertOptions: function(Wt, ue, Zt) {
          if (typeof Wt != "object") throw new te("options must be an object", te.ERR_BAD_OPTION_VALUE);
          const Xt = Object.keys(Wt);
          let pe = Xt.length;
          for (; pe-- > 0; ) {
            const $e = Xt[pe], je = ue[$e];
            if (je) {
              const Me = Wt[$e], fr = Me === void 0 || je(Me, $e, Wt);
              if (fr !== true) throw new te("option " + $e + " must be " + fr, te.ERR_BAD_OPTION_VALUE);
              continue;
            }
            if (Zt !== true) throw new te("Unknown option " + $e, te.ERR_BAD_OPTION);
          }
        }, validators: Je }, Fr = lr.validators;
        class Dr {
          constructor(ue) {
            this.defaults = ue || {}, this.interceptors = { request: new St(), response: new St() };
          }
          async request(ue, Zt) {
            try {
              return await this._request(ue, Zt);
            } catch (Xt) {
              if (Xt instanceof Error) {
                let pe = {};
                Error.captureStackTrace ? Error.captureStackTrace(pe) : pe = new Error();
                const $e = pe.stack ? pe.stack.replace(/^.+\n/, "") : "";
                try {
                  Xt.stack ? $e && !String(Xt.stack).endsWith($e.replace(/^.+\n.+\n/, "")) && (Xt.stack += `
` + $e) : Xt.stack = $e;
                } catch {
                }
              }
              throw Xt;
            }
          }
          _request(ue, Zt) {
            typeof ue == "string" ? (Zt = Zt || {}).url = ue : Zt = ue || {}, Zt = uo(this.defaults, Zt);
            const { transitional: Xt, paramsSerializer: pe, headers: $e } = Zt;
            Xt !== void 0 && lr.assertOptions(Xt, { silentJSONParsing: Fr.transitional(Fr.boolean), forcedJSONParsing: Fr.transitional(Fr.boolean), clarifyTimeoutError: Fr.transitional(Fr.boolean) }, false), pe != null && (At.isFunction(pe) ? Zt.paramsSerializer = { serialize: pe } : lr.assertOptions(pe, { encode: Fr.function, serialize: Fr.function }, true)), Zt.allowAbsoluteUrls !== void 0 || (this.defaults.allowAbsoluteUrls !== void 0 ? Zt.allowAbsoluteUrls = this.defaults.allowAbsoluteUrls : Zt.allowAbsoluteUrls = true), lr.assertOptions(Zt, { baseUrl: Fr.spelling("baseURL"), withXsrfToken: Fr.spelling("withXSRFToken") }, true), Zt.method = (Zt.method || this.defaults.method || "get").toLowerCase();
            let je = $e && At.merge($e.common, $e[Zt.method]);
            $e && At.forEach(["delete", "get", "head", "post", "put", "patch", "common"], (Cn) => {
              delete $e[Cn];
            }), Zt.headers = eo.concat(je, $e);
            const Me = [];
            let fr = true;
            this.interceptors.request.forEach(function(Cn) {
              typeof Cn.runWhen == "function" && Cn.runWhen(Zt) === false || (fr = fr && Cn.synchronous, Me.unshift(Cn.fulfilled, Cn.rejected));
            });
            const Nr = [];
            let wr;
            this.interceptors.response.forEach(function(Cn) {
              Nr.push(Cn.fulfilled, Cn.rejected);
            });
            let Vr, $r = 0;
            if (!fr) {
              const Cn = [qe.bind(this), void 0];
              for (Cn.unshift.apply(Cn, Me), Cn.push.apply(Cn, Nr), Vr = Cn.length, wr = Promise.resolve(Zt); $r < Vr; ) wr = wr.then(Cn[$r++], Cn[$r++]);
              return wr;
            }
            Vr = Me.length;
            let Xr = Zt;
            for ($r = 0; $r < Vr; ) {
              const Cn = Me[$r++], sn = Me[$r++];
              try {
                Xr = Cn(Xr);
              } catch (To) {
                sn.call(this, To);
                break;
              }
            }
            try {
              wr = qe.call(this, Xr);
            } catch (Cn) {
              return Promise.reject(Cn);
            }
            for ($r = 0, Vr = Nr.length; $r < Vr; ) wr = wr.then(Nr[$r++], Nr[$r++]);
            return wr;
          }
          getUri(ue) {
            return et(Jn((ue = uo(this.defaults, ue)).baseURL, ue.url, ue.allowAbsoluteUrls), ue.params, ue.paramsSerializer);
          }
        }
        At.forEach(["delete", "get", "head", "options"], function(Wt) {
          Dr.prototype[Wt] = function(ue, Zt) {
            return this.request(uo(Zt || {}, { method: Wt, url: ue, data: (Zt || {}).data }));
          };
        }), At.forEach(["post", "put", "patch"], function(Wt) {
          function ue(Zt) {
            return function(Xt, pe, $e) {
              return this.request(uo($e || {}, { method: Wt, headers: Zt ? { "Content-Type": "multipart/form-data" } : {}, url: Xt, data: pe }));
            };
          }
          Dr.prototype[Wt] = ue(), Dr.prototype[Wt + "Form"] = ue(true);
        });
        const gr = Dr;
        class an {
          constructor(ue) {
            if (typeof ue != "function") throw new TypeError("executor must be a function.");
            let Zt;
            this.promise = new Promise(function(pe) {
              Zt = pe;
            });
            const Xt = this;
            this.promise.then((pe) => {
              if (!Xt._listeners) return;
              let $e = Xt._listeners.length;
              for (; $e-- > 0; ) Xt._listeners[$e](pe);
              Xt._listeners = null;
            }), this.promise.then = (pe) => {
              let $e;
              const je = new Promise((Me) => {
                Xt.subscribe(Me), $e = Me;
              }).then(pe);
              return je.cancel = function() {
                Xt.unsubscribe($e);
              }, je;
            }, ue(function(pe, $e, je) {
              Xt.reason || (Xt.reason = new rr(pe, $e, je), Zt(Xt.reason));
            });
          }
          throwIfRequested() {
            if (this.reason) throw this.reason;
          }
          subscribe(ue) {
            this.reason ? ue(this.reason) : this._listeners ? this._listeners.push(ue) : this._listeners = [ue];
          }
          unsubscribe(ue) {
            if (!this._listeners) return;
            const Zt = this._listeners.indexOf(ue);
            Zt !== -1 && this._listeners.splice(Zt, 1);
          }
          toAbortSignal() {
            const ue = new AbortController(), Zt = (Xt) => {
              ue.abort(Xt);
            };
            return this.subscribe(Zt), ue.signal.unsubscribe = () => this.unsubscribe(Zt), ue.signal;
          }
          static source() {
            let ue;
            return { token: new an(function(Zt) {
              ue = Zt;
            }), cancel: ue };
          }
        }
        const pn = an, yn = { Continue: 100, SwitchingProtocols: 101, Processing: 102, EarlyHints: 103, Ok: 200, Created: 201, Accepted: 202, NonAuthoritativeInformation: 203, NoContent: 204, ResetContent: 205, PartialContent: 206, MultiStatus: 207, AlreadyReported: 208, ImUsed: 226, MultipleChoices: 300, MovedPermanently: 301, Found: 302, SeeOther: 303, NotModified: 304, UseProxy: 305, Unused: 306, TemporaryRedirect: 307, PermanentRedirect: 308, BadRequest: 400, Unauthorized: 401, PaymentRequired: 402, Forbidden: 403, NotFound: 404, MethodNotAllowed: 405, NotAcceptable: 406, ProxyAuthenticationRequired: 407, RequestTimeout: 408, Conflict: 409, Gone: 410, LengthRequired: 411, PreconditionFailed: 412, PayloadTooLarge: 413, UriTooLong: 414, UnsupportedMediaType: 415, RangeNotSatisfiable: 416, ExpectationFailed: 417, ImATeapot: 418, MisdirectedRequest: 421, UnprocessableEntity: 422, Locked: 423, FailedDependency: 424, TooEarly: 425, UpgradeRequired: 426, PreconditionRequired: 428, TooManyRequests: 429, RequestHeaderFieldsTooLarge: 431, UnavailableForLegalReasons: 451, InternalServerError: 500, NotImplemented: 501, BadGateway: 502, ServiceUnavailable: 503, GatewayTimeout: 504, HttpVersionNotSupported: 505, VariantAlsoNegotiates: 506, InsufficientStorage: 507, LoopDetected: 508, NotExtended: 510, NetworkAuthenticationRequired: 511 };
        Object.entries(yn).forEach(([Wt, ue]) => {
          yn[ue] = Wt;
        });
        const Rt = yn, jr = function Wt(ue) {
          const Zt = new gr(ue), Xt = f(gr.prototype.request, Zt);
          return At.extend(Xt, gr.prototype, Zt, { allOwnKeys: true }), At.extend(Xt, Zt, null, { allOwnKeys: true }), Xt.create = function(pe) {
            return Wt(uo(ue, pe));
          }, Xt;
        }(cr);
        jr.Axios = gr, jr.CanceledError = rr, jr.CancelToken = pn, jr.isCancel = Dn, jr.VERSION = Ge, jr.toFormData = tt, jr.AxiosError = te, jr.Cancel = jr.CanceledError, jr.all = function(Wt) {
          return Promise.all(Wt);
        }, jr.spread = function(Wt) {
          return function(ue) {
            return Wt.apply(null, ue);
          };
        }, jr.isAxiosError = function(Wt) {
          return At.isObject(Wt) && Wt.isAxiosError === true;
        }, jr.mergeConfig = uo, jr.AxiosHeaders = eo, jr.formToJSON = (Wt) => Jt(At.isHTMLForm(Wt) ? new FormData(Wt) : Wt), jr.getAdapter = _e, jr.HttpStatusCode = Rt, jr.default = jr;
        var Ln = jr, fo = jr.create;
      }, 6188: (s) => {
        s.exports = Math.max;
      }, 6238: (s, i, u) => {
        var d = u(6048).F.ERR_STREAM_PREMATURE_CLOSE;
        function f() {
        }
        s.exports = function p(g, b, h) {
          if (typeof b == "function") return p(g, null, b);
          b || (b = {}), h = /* @__PURE__ */ function(M) {
            var Z = false;
            return function() {
              if (!Z) {
                Z = true;
                for (var D = arguments.length, V = new Array(D), S = 0; S < D; S++) V[S] = arguments[S];
                M.apply(this, V);
              }
            };
          }(h || f);
          var m = b.readable || b.readable !== false && g.readable, c = b.writable || b.writable !== false && g.writable, w = function() {
            g.writable || P();
          }, T = g._writableState && g._writableState.finished, P = function() {
            c = false, T = true, m || h.call(g);
          }, k = g._readableState && g._readableState.endEmitted, R = function() {
            m = false, k = true, c || h.call(g);
          }, F = function(M) {
            h.call(g, M);
          }, v = function() {
            var M;
            return m && !k ? (g._readableState && g._readableState.ended || (M = new d()), h.call(g, M)) : c && !T ? (g._writableState && g._writableState.ended || (M = new d()), h.call(g, M)) : void 0;
          }, U = function() {
            g.req.on("finish", P);
          };
          return function(M) {
            return M.setHeader && typeof M.abort == "function";
          }(g) ? (g.on("complete", P), g.on("abort", v), g.req ? U() : g.on("request", U)) : c && !g._writableState && (g.on("end", w), g.on("close", w)), g.on("end", R), g.on("finish", P), b.error !== false && g.on("error", F), g.on("close", v), function() {
            g.removeListener("complete", P), g.removeListener("abort", v), g.removeListener("request", U), g.req && g.req.removeListener("finish", P), g.removeListener("end", w), g.removeListener("close", w), g.removeListener("finish", P), g.removeListener("end", R), g.removeListener("error", F), g.removeListener("close", v);
          };
        };
      }, 6299: (s, i, u) => {
        u.r(i), u.d(i, { AssembledTransaction: () => Ht, Client: () => Wo, DEFAULT_TIMEOUT: () => k, Err: () => P, NULL_ACCOUNT: () => R, Ok: () => T, SentTransaction: () => Tt, Spec: () => Nn, basicNodeSigner: () => on });
        var d = u(8950), f = u(3496), p = u(4076), g = u(8680);
        function b(qt) {
          return b = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(Nt) {
            return typeof Nt;
          } : function(Nt) {
            return Nt && typeof Symbol == "function" && Nt.constructor === Symbol && Nt !== Symbol.prototype ? "symbol" : typeof Nt;
          }, b(qt);
        }
        function h(qt, Nt) {
          if (!(qt instanceof Nt)) throw new TypeError("Cannot call a class as a function");
        }
        function m(qt, Nt) {
          for (var he = 0; he < Nt.length; he++) {
            var _e = Nt[he];
            _e.enumerable = _e.enumerable || false, _e.configurable = true, "value" in _e && (_e.writable = true), Object.defineProperty(qt, w(_e.key), _e);
          }
        }
        function c(qt, Nt, he) {
          return Nt && m(qt.prototype, Nt), Object.defineProperty(qt, "prototype", { writable: false }), qt;
        }
        function w(qt) {
          var Nt = function(he, _e) {
            if (b(he) != "object" || !he) return he;
            var Ve = he[Symbol.toPrimitive];
            if (Ve !== void 0) {
              var qe = Ve.call(he, _e);
              if (b(qe) != "object") return qe;
              throw new TypeError("@@toPrimitive must return a primitive value.");
            }
            return String(he);
          }(qt, "string");
          return b(Nt) == "symbol" ? Nt : Nt + "";
        }
        var T = c(function qt(Nt) {
          h(this, qt), this.value = Nt;
        }, [{ key: "unwrapErr", value: function() {
          throw new Error("No error");
        } }, { key: "unwrap", value: function() {
          return this.value;
        } }, { key: "isOk", value: function() {
          return true;
        } }, { key: "isErr", value: function() {
          return false;
        } }]), P = c(function qt(Nt) {
          h(this, qt), this.error = Nt;
        }, [{ key: "unwrapErr", value: function() {
          return this.error;
        } }, { key: "unwrap", value: function() {
          throw new Error(this.error.message);
        } }, { key: "isOk", value: function() {
          return false;
        } }, { key: "isErr", value: function() {
          return true;
        } }]), k = 300, R = "GAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAWHF";
        function F() {
          var qt, Nt, he = typeof Symbol == "function" ? Symbol : {}, _e = he.iterator || "@@iterator", Ve = he.toStringTag || "@@toStringTag";
          function qe(an, pn, yn, Rt) {
            var jr = pn && pn.prototype instanceof Je ? pn : Je, Ln = Object.create(jr.prototype);
            return v(Ln, "_invoke", function(fo, Wt, ue) {
              var Zt, Xt, pe, $e = 0, je = ue || [], Me = false, fr = { p: 0, n: 0, v: qt, a: Nr, f: Nr.bind(qt, 4), d: function(wr, Vr) {
                return Zt = wr, Xt = 0, pe = qt, fr.n = Vr, Ge;
              } };
              function Nr(wr, Vr) {
                for (Xt = wr, pe = Vr, Nt = 0; !Me && $e && !$r && Nt < je.length; Nt++) {
                  var $r, Xr = je[Nt], Cn = fr.p, sn = Xr[2];
                  wr > 3 ? ($r = sn === Vr) && (pe = Xr[(Xt = Xr[4]) ? 5 : (Xt = 3, 3)], Xr[4] = Xr[5] = qt) : Xr[0] <= Cn && (($r = wr < 2 && Cn < Xr[1]) ? (Xt = 0, fr.v = Vr, fr.n = Xr[1]) : Cn < sn && ($r = wr < 3 || Xr[0] > Vr || Vr > sn) && (Xr[4] = wr, Xr[5] = Vr, fr.n = sn, Xt = 0));
                }
                if ($r || wr > 1) return Ge;
                throw Me = true, Vr;
              }
              return function(wr, Vr, $r) {
                if ($e > 1) throw TypeError("Generator is already running");
                for (Me && Vr === 1 && Nr(Vr, $r), Xt = Vr, pe = $r; (Nt = Xt < 2 ? qt : pe) || !Me; ) {
                  Zt || (Xt ? Xt < 3 ? (Xt > 1 && (fr.n = -1), Nr(Xt, pe)) : fr.n = pe : fr.v = pe);
                  try {
                    if ($e = 2, Zt) {
                      if (Xt || (wr = "next"), Nt = Zt[wr]) {
                        if (!(Nt = Nt.call(Zt, pe))) throw TypeError("iterator result is not an object");
                        if (!Nt.done) return Nt;
                        pe = Nt.value, Xt < 2 && (Xt = 0);
                      } else Xt === 1 && (Nt = Zt.return) && Nt.call(Zt), Xt < 2 && (pe = TypeError("The iterator does not provide a '" + wr + "' method"), Xt = 1);
                      Zt = qt;
                    } else if ((Nt = (Me = fr.n < 0) ? pe : fo.call(Wt, fr)) !== Ge) break;
                  } catch (Xr) {
                    Zt = qt, Xt = 1, pe = Xr;
                  } finally {
                    $e = 1;
                  }
                }
                return { value: Nt, done: Me };
              };
            }(an, yn, Rt), true), Ln;
          }
          var Ge = {};
          function Je() {
          }
          function Oe() {
          }
          function lr() {
          }
          Nt = Object.getPrototypeOf;
          var Fr = [][_e] ? Nt(Nt([][_e]())) : (v(Nt = {}, _e, function() {
            return this;
          }), Nt), Dr = lr.prototype = Je.prototype = Object.create(Fr);
          function gr(an) {
            return Object.setPrototypeOf ? Object.setPrototypeOf(an, lr) : (an.__proto__ = lr, v(an, Ve, "GeneratorFunction")), an.prototype = Object.create(Dr), an;
          }
          return Oe.prototype = lr, v(Dr, "constructor", lr), v(lr, "constructor", Oe), Oe.displayName = "GeneratorFunction", v(lr, Ve, "GeneratorFunction"), v(Dr), v(Dr, Ve, "Generator"), v(Dr, _e, function() {
            return this;
          }), v(Dr, "toString", function() {
            return "[object Generator]";
          }), (F = function() {
            return { w: qe, m: gr };
          })();
        }
        function v(qt, Nt, he, _e) {
          var Ve = Object.defineProperty;
          try {
            Ve({}, "", {});
          } catch {
            Ve = 0;
          }
          v = function(qe, Ge, Je, Oe) {
            if (Ge) Ve ? Ve(qe, Ge, { value: Je, enumerable: !Oe, configurable: !Oe, writable: !Oe }) : qe[Ge] = Je;
            else {
              let lr = function(Fr, Dr) {
                v(qe, Fr, function(gr) {
                  return this._invoke(Fr, Dr, gr);
                });
              };
              lr("next", 0), lr("throw", 1), lr("return", 2);
            }
          }, v(qt, Nt, he, _e);
        }
        function U(qt) {
          return U = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(Nt) {
            return typeof Nt;
          } : function(Nt) {
            return Nt && typeof Symbol == "function" && Nt.constructor === Symbol && Nt !== Symbol.prototype ? "symbol" : typeof Nt;
          }, U(qt);
        }
        function M(qt, Nt, he, _e, Ve, qe, Ge) {
          try {
            var Je = qt[qe](Ge), Oe = Je.value;
          } catch (lr) {
            return void he(lr);
          }
          Je.done ? Nt(Oe) : Promise.resolve(Oe).then(_e, Ve);
        }
        function Z(qt) {
          return function() {
            var Nt = this, he = arguments;
            return new Promise(function(_e, Ve) {
              var qe = qt.apply(Nt, he);
              function Ge(Oe) {
                M(qe, _e, Ve, Ge, Je, "next", Oe);
              }
              function Je(Oe) {
                M(qe, _e, Ve, Ge, Je, "throw", Oe);
              }
              Ge(void 0);
            });
          };
        }
        function D(qt, Nt, he) {
          return V.apply(this, arguments);
        }
        function V() {
          return V = Z(F().m(function qt(Nt, he, _e) {
            var Ve, qe, Ge, Je, Oe, lr, Fr, Dr, gr, an, pn, yn = arguments;
            return F().w(function(Rt) {
              for (; ; ) switch (Rt.n) {
                case 0:
                  return Ve = yn.length > 3 && yn[3] !== void 0 ? yn[3] : 1.5, qe = yn.length > 4 && yn[4] !== void 0 && yn[4], Je = 0, Dr = Ge = [], Rt.n = 1, Nt();
                case 1:
                  if (gr = Rt.v, Dr.push.call(Dr, gr), he(Ge[Ge.length - 1])) {
                    Rt.n = 2;
                    break;
                  }
                  return Rt.a(2, Ge);
                case 2:
                  Oe = new Date(Date.now() + 1e3 * _e).valueOf(), Fr = lr = 1e3;
                case 3:
                  if (!(Date.now() < Oe && he(Ge[Ge.length - 1]))) {
                    Rt.n = 6;
                    break;
                  }
                  return Je += 1, qe && console.info("Waiting ".concat(lr, "ms before trying again (bringing the total wait time to ").concat(Fr, "ms so far, of total ").concat(1e3 * _e, "ms)")), Rt.n = 4, new Promise(function(jr) {
                    return setTimeout(jr, lr);
                  });
                case 4:
                  return lr *= Ve, new Date(Date.now() + lr).valueOf() > Oe && (lr = Oe - Date.now(), qe && console.info("was gonna wait too long; new waitTime: ".concat(lr, "ms"))), Fr = lr + Fr, an = Ge, Rt.n = 5, Nt(Ge[Ge.length - 1]);
                case 5:
                  pn = Rt.v, an.push.call(an, pn), qe && he(Ge[Ge.length - 1]) && console.info("".concat(Je, ". Called ").concat(Nt, "; ").concat(Ge.length, " prev attempts. Most recent: ").concat(JSON.stringify(Ge[Ge.length - 1], null, 2))), Rt.n = 3;
                  break;
                case 6:
                  return Rt.a(2, Ge);
              }
            }, qt);
          })), V.apply(this, arguments);
        }
        var S, x = /Error\(Contract, #(\d+)\)/;
        function B(qt) {
          for (var Nt = new d.cereal.XdrReader(qt), he = []; !Nt.eof; ) he.push(d.xdr.ScSpecEntry.read(Nt));
          return he;
        }
        function W(qt, Nt) {
          return lt.apply(this, arguments);
        }
        function lt() {
          return (lt = Z(F().m(function qt(Nt, he) {
            return F().w(function(_e) {
              for (; ; ) if (_e.n === 0) return _e.a(2, Nt.publicKey ? he.getAccount(Nt.publicKey) : new d.Account(R, "0"));
            }, qt);
          }))).apply(this, arguments);
        }
        function pt(qt, Nt, he) {
          return Nt = I(Nt), function(_e, Ve) {
            if (Ve && (nt(Ve) == "object" || typeof Ve == "function")) return Ve;
            if (Ve !== void 0) throw new TypeError("Derived constructors may only return object or undefined");
            return function(qe) {
              if (qe === void 0) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
              return qe;
            }(_e);
          }(qt, ot() ? Reflect.construct(Nt, he || [], I(qt).constructor) : Nt.apply(qt, he));
        }
        function at(qt, Nt) {
          if (typeof Nt != "function" && Nt !== null) throw new TypeError("Super expression must either be null or a function");
          qt.prototype = Object.create(Nt && Nt.prototype, { constructor: { value: qt, writable: true, configurable: true } }), Object.defineProperty(qt, "prototype", { writable: false }), Nt && X(qt, Nt);
        }
        function rt(qt) {
          var Nt = typeof Map == "function" ? /* @__PURE__ */ new Map() : void 0;
          return rt = function(he) {
            if (he === null || !function(Ve) {
              try {
                return Function.toString.call(Ve).indexOf("[native code]") !== -1;
              } catch {
                return typeof Ve == "function";
              }
            }(he)) return he;
            if (typeof he != "function") throw new TypeError("Super expression must either be null or a function");
            if (Nt !== void 0) {
              if (Nt.has(he)) return Nt.get(he);
              Nt.set(he, _e);
            }
            function _e() {
              return function(Ve, qe, Ge) {
                if (ot()) return Reflect.construct.apply(null, arguments);
                var Je = [null];
                Je.push.apply(Je, qe);
                var Oe = new (Ve.bind.apply(Ve, Je))();
                return Ge && X(Oe, Ge.prototype), Oe;
              }(he, arguments, I(this).constructor);
            }
            return _e.prototype = Object.create(he.prototype, { constructor: { value: _e, enumerable: false, writable: true, configurable: true } }), X(_e, he);
          }, rt(qt);
        }
        function ot() {
          try {
            var qt = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
            }));
          } catch {
          }
          return (ot = function() {
            return !!qt;
          })();
        }
        function X(qt, Nt) {
          return X = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function(he, _e) {
            return he.__proto__ = _e, he;
          }, X(qt, Nt);
        }
        function I(qt) {
          return I = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function(Nt) {
            return Nt.__proto__ || Object.getPrototypeOf(Nt);
          }, I(qt);
        }
        function nt(qt) {
          return nt = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(Nt) {
            return typeof Nt;
          } : function(Nt) {
            return Nt && typeof Symbol == "function" && Nt.constructor === Symbol && Nt !== Symbol.prototype ? "symbol" : typeof Nt;
          }, nt(qt);
        }
        function ft() {
          var qt, Nt, he = typeof Symbol == "function" ? Symbol : {}, _e = he.iterator || "@@iterator", Ve = he.toStringTag || "@@toStringTag";
          function qe(an, pn, yn, Rt) {
            var jr = pn && pn.prototype instanceof Je ? pn : Je, Ln = Object.create(jr.prototype);
            return dt(Ln, "_invoke", function(fo, Wt, ue) {
              var Zt, Xt, pe, $e = 0, je = ue || [], Me = false, fr = { p: 0, n: 0, v: qt, a: Nr, f: Nr.bind(qt, 4), d: function(wr, Vr) {
                return Zt = wr, Xt = 0, pe = qt, fr.n = Vr, Ge;
              } };
              function Nr(wr, Vr) {
                for (Xt = wr, pe = Vr, Nt = 0; !Me && $e && !$r && Nt < je.length; Nt++) {
                  var $r, Xr = je[Nt], Cn = fr.p, sn = Xr[2];
                  wr > 3 ? ($r = sn === Vr) && (pe = Xr[(Xt = Xr[4]) ? 5 : (Xt = 3, 3)], Xr[4] = Xr[5] = qt) : Xr[0] <= Cn && (($r = wr < 2 && Cn < Xr[1]) ? (Xt = 0, fr.v = Vr, fr.n = Xr[1]) : Cn < sn && ($r = wr < 3 || Xr[0] > Vr || Vr > sn) && (Xr[4] = wr, Xr[5] = Vr, fr.n = sn, Xt = 0));
                }
                if ($r || wr > 1) return Ge;
                throw Me = true, Vr;
              }
              return function(wr, Vr, $r) {
                if ($e > 1) throw TypeError("Generator is already running");
                for (Me && Vr === 1 && Nr(Vr, $r), Xt = Vr, pe = $r; (Nt = Xt < 2 ? qt : pe) || !Me; ) {
                  Zt || (Xt ? Xt < 3 ? (Xt > 1 && (fr.n = -1), Nr(Xt, pe)) : fr.n = pe : fr.v = pe);
                  try {
                    if ($e = 2, Zt) {
                      if (Xt || (wr = "next"), Nt = Zt[wr]) {
                        if (!(Nt = Nt.call(Zt, pe))) throw TypeError("iterator result is not an object");
                        if (!Nt.done) return Nt;
                        pe = Nt.value, Xt < 2 && (Xt = 0);
                      } else Xt === 1 && (Nt = Zt.return) && Nt.call(Zt), Xt < 2 && (pe = TypeError("The iterator does not provide a '" + wr + "' method"), Xt = 1);
                      Zt = qt;
                    } else if ((Nt = (Me = fr.n < 0) ? pe : fo.call(Wt, fr)) !== Ge) break;
                  } catch (Xr) {
                    Zt = qt, Xt = 1, pe = Xr;
                  } finally {
                    $e = 1;
                  }
                }
                return { value: Nt, done: Me };
              };
            }(an, yn, Rt), true), Ln;
          }
          var Ge = {};
          function Je() {
          }
          function Oe() {
          }
          function lr() {
          }
          Nt = Object.getPrototypeOf;
          var Fr = [][_e] ? Nt(Nt([][_e]())) : (dt(Nt = {}, _e, function() {
            return this;
          }), Nt), Dr = lr.prototype = Je.prototype = Object.create(Fr);
          function gr(an) {
            return Object.setPrototypeOf ? Object.setPrototypeOf(an, lr) : (an.__proto__ = lr, dt(an, Ve, "GeneratorFunction")), an.prototype = Object.create(Dr), an;
          }
          return Oe.prototype = lr, dt(Dr, "constructor", lr), dt(lr, "constructor", Oe), Oe.displayName = "GeneratorFunction", dt(lr, Ve, "GeneratorFunction"), dt(Dr), dt(Dr, Ve, "Generator"), dt(Dr, _e, function() {
            return this;
          }), dt(Dr, "toString", function() {
            return "[object Generator]";
          }), (ft = function() {
            return { w: qe, m: gr };
          })();
        }
        function dt(qt, Nt, he, _e) {
          var Ve = Object.defineProperty;
          try {
            Ve({}, "", {});
          } catch {
            Ve = 0;
          }
          dt = function(qe, Ge, Je, Oe) {
            if (Ge) Ve ? Ve(qe, Ge, { value: Je, enumerable: !Oe, configurable: !Oe, writable: !Oe }) : qe[Ge] = Je;
            else {
              let lr = function(Fr, Dr) {
                dt(qe, Fr, function(gr) {
                  return this._invoke(Fr, Dr, gr);
                });
              };
              lr("next", 0), lr("throw", 1), lr("return", 2);
            }
          }, dt(qt, Nt, he, _e);
        }
        function Lt(qt, Nt, he, _e, Ve, qe, Ge) {
          try {
            var Je = qt[qe](Ge), Oe = Je.value;
          } catch (lr) {
            return void he(lr);
          }
          Je.done ? Nt(Oe) : Promise.resolve(Oe).then(_e, Ve);
        }
        function $(qt) {
          return function() {
            var Nt = this, he = arguments;
            return new Promise(function(_e, Ve) {
              var qe = qt.apply(Nt, he);
              function Ge(Oe) {
                Lt(qe, _e, Ve, Ge, Je, "next", Oe);
              }
              function Je(Oe) {
                Lt(qe, _e, Ve, Ge, Je, "throw", Oe);
              }
              Ge(void 0);
            });
          };
        }
        function it(qt, Nt) {
          if (!(qt instanceof Nt)) throw new TypeError("Cannot call a class as a function");
        }
        function mt(qt, Nt) {
          for (var he = 0; he < Nt.length; he++) {
            var _e = Nt[he];
            _e.enumerable = _e.enumerable || false, _e.configurable = true, "value" in _e && (_e.writable = true), Object.defineProperty(qt, xt(_e.key), _e);
          }
        }
        function Ot(qt, Nt, he) {
          return Nt && mt(qt.prototype, Nt), Object.defineProperty(qt, "prototype", { writable: false }), qt;
        }
        function bt(qt, Nt, he) {
          return (Nt = xt(Nt)) in qt ? Object.defineProperty(qt, Nt, { value: he, enumerable: true, configurable: true, writable: true }) : qt[Nt] = he, qt;
        }
        function xt(qt) {
          var Nt = function(he, _e) {
            if (nt(he) != "object" || !he) return he;
            var Ve = he[Symbol.toPrimitive];
            if (Ve !== void 0) {
              var qe = Ve.call(he, _e);
              if (nt(qe) != "object") return qe;
              throw new TypeError("@@toPrimitive must return a primitive value.");
            }
            return (_e === "string" ? String : Number)(he);
          }(qt, "string");
          return nt(Nt) == "symbol" ? Nt : Nt + "";
        }
        var Ct, Tt = function() {
          function qt(Nt) {
            var he, _e = this;
            it(this, qt), bt(this, "send", $(ft().m(function Ve() {
              var qe, Ge, Je;
              return ft().w(function(Oe) {
                for (; ; ) switch (Oe.n) {
                  case 0:
                    return Oe.n = 1, _e.server.sendTransaction(_e.assembled.signed);
                  case 1:
                    if (_e.sendTransactionResponse = Oe.v, _e.sendTransactionResponse.status === "PENDING") {
                      Oe.n = 2;
                      break;
                    }
                    throw new qt.Errors.SendFailed(`Sending the transaction to the network failed!
`.concat(JSON.stringify(_e.sendTransactionResponse, null, 2)));
                  case 2:
                    return Ge = _e.sendTransactionResponse.hash, Je = (qe = _e.assembled.options.timeoutInSeconds) !== null && qe !== void 0 ? qe : k, Oe.n = 3, D(function() {
                      return _e.server.getTransaction(Ge);
                    }, function(lr) {
                      return lr.status === p.j.GetTransactionStatus.NOT_FOUND;
                    }, Je);
                  case 3:
                    if (_e.getTransactionResponseAll = Oe.v, _e.getTransactionResponse = _e.getTransactionResponseAll[_e.getTransactionResponseAll.length - 1], _e.getTransactionResponse.status !== p.j.GetTransactionStatus.NOT_FOUND) {
                      Oe.n = 4;
                      break;
                    }
                    throw new qt.Errors.TransactionStillPending("Waited ".concat(Je, " seconds for transaction to complete, but it did not. ") + "Returning anyway. Check the transaction status manually. " + "Sent transaction: ".concat(JSON.stringify(_e.sendTransactionResponse, null, 2), `
`) + "All attempts to get the result: ".concat(JSON.stringify(_e.getTransactionResponseAll, null, 2)));
                  case 4:
                    return Oe.a(2, _e);
                }
              }, Ve);
            }))), this.assembled = Nt, this.server = new f.Server(this.assembled.options.rpcUrl, { allowHttp: (he = this.assembled.options.allowHttp) !== null && he !== void 0 && he });
          }
          return Ot(qt, [{ key: "result", get: function() {
            if ("getTransactionResponse" in this && this.getTransactionResponse) {
              if ("returnValue" in this.getTransactionResponse) return this.assembled.options.parseResultXdr(this.getTransactionResponse.returnValue);
              throw new Error("Transaction failed! Cannot parse result.");
            }
            if (this.sendTransactionResponse) {
              var Nt, he = (Nt = this.sendTransactionResponse.errorResult) === null || Nt === void 0 ? void 0 : Nt.result();
              throw he ? new qt.Errors.SendFailed("Transaction simulation looked correct, but attempting to send the transaction failed. Check `simulation` and `sendTransactionResponseAll` to troubleshoot. Decoded `sendTransactionResponse.errorResultXdr`: ".concat(he)) : new qt.Errors.SendResultOnly("Transaction was sent to the network, but not yet awaited. No result to show. Await transaction completion with `getTransaction(sendTransactionResponse.hash)`");
            }
            throw new Error("Sending transaction failed: ".concat(JSON.stringify(this.assembled.signed)));
          } }]);
        }();
        S = Tt, bt(Tt, "Errors", { SendFailed: function(qt) {
          function Nt() {
            return it(this, Nt), pt(this, Nt, arguments);
          }
          return at(Nt, qt), Ot(Nt);
        }(rt(Error)), SendResultOnly: function(qt) {
          function Nt() {
            return it(this, Nt), pt(this, Nt, arguments);
          }
          return at(Nt, qt), Ot(Nt);
        }(rt(Error)), TransactionStillPending: function(qt) {
          function Nt() {
            return it(this, Nt), pt(this, Nt, arguments);
          }
          return at(Nt, qt), Ot(Nt);
        }(rt(Error)) }), bt(Tt, "init", (Ct = $(ft().m(function qt(Nt) {
          var he, _e;
          return ft().w(function(Ve) {
            for (; ; ) switch (Ve.n) {
              case 0:
                return he = new S(Nt), Ve.n = 1, he.send();
              case 1:
                return _e = Ve.v, Ve.a(2, _e);
            }
          }, qt);
        })), function(qt) {
          return Ct.apply(this, arguments);
        }));
        var Bt = u(8287).Buffer;
        function At(qt, Nt, he) {
          return Nt = yt(Nt), function(_e, Ve) {
            if (Ve && (Mt(Ve) == "object" || typeof Ve == "function")) return Ve;
            if (Ve !== void 0) throw new TypeError("Derived constructors may only return object or undefined");
            return function(qe) {
              if (qe === void 0) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
              return qe;
            }(_e);
          }(qt, oe() ? Reflect.construct(Nt, he || [], yt(qt).constructor) : Nt.apply(qt, he));
        }
        function Ut(qt, Nt) {
          if (typeof Nt != "function" && Nt !== null) throw new TypeError("Super expression must either be null or a function");
          qt.prototype = Object.create(Nt && Nt.prototype, { constructor: { value: qt, writable: true, configurable: true } }), Object.defineProperty(qt, "prototype", { writable: false }), Nt && te(qt, Nt);
        }
        function Vt(qt) {
          var Nt = typeof Map == "function" ? /* @__PURE__ */ new Map() : void 0;
          return Vt = function(he) {
            if (he === null || !function(Ve) {
              try {
                return Function.toString.call(Ve).indexOf("[native code]") !== -1;
              } catch {
                return typeof Ve == "function";
              }
            }(he)) return he;
            if (typeof he != "function") throw new TypeError("Super expression must either be null or a function");
            if (Nt !== void 0) {
              if (Nt.has(he)) return Nt.get(he);
              Nt.set(he, _e);
            }
            function _e() {
              return function(Ve, qe, Ge) {
                if (oe()) return Reflect.construct.apply(null, arguments);
                var Je = [null];
                Je.push.apply(Je, qe);
                var Oe = new (Ve.bind.apply(Ve, Je))();
                return Ge && te(Oe, Ge.prototype), Oe;
              }(he, arguments, yt(this).constructor);
            }
            return _e.prototype = Object.create(he.prototype, { constructor: { value: _e, enumerable: false, writable: true, configurable: true } }), te(_e, he);
          }, Vt(qt);
        }
        function oe() {
          try {
            var qt = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
            }));
          } catch {
          }
          return (oe = function() {
            return !!qt;
          })();
        }
        function te(qt, Nt) {
          return te = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function(he, _e) {
            return he.__proto__ = _e, he;
          }, te(qt, Nt);
        }
        function yt(qt) {
          return yt = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function(Nt) {
            return Nt.__proto__ || Object.getPrototypeOf(Nt);
          }, yt(qt);
        }
        function Mt(qt) {
          return Mt = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(Nt) {
            return typeof Nt;
          } : function(Nt) {
            return Nt && typeof Symbol == "function" && Nt.constructor === Symbol && Nt !== Symbol.prototype ? "symbol" : typeof Nt;
          }, Mt(qt);
        }
        function O(qt, Nt) {
          var he = Object.keys(qt);
          if (Object.getOwnPropertySymbols) {
            var _e = Object.getOwnPropertySymbols(qt);
            Nt && (_e = _e.filter(function(Ve) {
              return Object.getOwnPropertyDescriptor(qt, Ve).enumerable;
            })), he.push.apply(he, _e);
          }
          return he;
        }
        function z(qt) {
          for (var Nt = 1; Nt < arguments.length; Nt++) {
            var he = arguments[Nt] != null ? arguments[Nt] : {};
            Nt % 2 ? O(Object(he), true).forEach(function(_e) {
              gt(qt, _e, he[_e]);
            }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(qt, Object.getOwnPropertyDescriptors(he)) : O(Object(he)).forEach(function(_e) {
              Object.defineProperty(qt, _e, Object.getOwnPropertyDescriptor(he, _e));
            });
          }
          return qt;
        }
        function J(qt) {
          if (qt != null) {
            var Nt = qt[typeof Symbol == "function" && Symbol.iterator || "@@iterator"], he = 0;
            if (Nt) return Nt.call(qt);
            if (typeof qt.next == "function") return qt;
            if (!isNaN(qt.length)) return { next: function() {
              return qt && he >= qt.length && (qt = void 0), { value: qt && qt[he++], done: !qt };
            } };
          }
          throw new TypeError(Mt(qt) + " is not iterable");
        }
        function tt(qt, Nt) {
          return function(he) {
            if (Array.isArray(he)) return he;
          }(qt) || function(he, _e) {
            var Ve = he == null ? null : typeof Symbol < "u" && he[Symbol.iterator] || he["@@iterator"];
            if (Ve != null) {
              var qe, Ge, Je, Oe, lr = [], Fr = true, Dr = false;
              try {
                if (Je = (Ve = Ve.call(he)).next, _e !== 0) for (; !(Fr = (qe = Je.call(Ve)).done) && (lr.push(qe.value), lr.length !== _e); Fr = true) ;
              } catch (gr) {
                Dr = true, Ge = gr;
              } finally {
                try {
                  if (!Fr && Ve.return != null && (Oe = Ve.return(), Object(Oe) !== Oe)) return;
                } finally {
                  if (Dr) throw Ge;
                }
              }
              return lr;
            }
          }(qt, Nt) || L(qt, Nt) || function() {
            throw new TypeError(`Invalid attempt to destructure non-iterable instance.
In order to be iterable, non-array objects must have a [Symbol.iterator]() method.`);
          }();
        }
        function H(qt, Nt) {
          var he = typeof Symbol < "u" && qt[Symbol.iterator] || qt["@@iterator"];
          if (!he) {
            if (Array.isArray(qt) || (he = L(qt)) || Nt) {
              he && (qt = he);
              var _e = 0, Ve = function() {
              };
              return { s: Ve, n: function() {
                return _e >= qt.length ? { done: true } : { done: false, value: qt[_e++] };
              }, e: function(Oe) {
                throw Oe;
              }, f: Ve };
            }
            throw new TypeError(`Invalid attempt to iterate non-iterable instance.
In order to be iterable, non-array objects must have a [Symbol.iterator]() method.`);
          }
          var qe, Ge = true, Je = false;
          return { s: function() {
            he = he.call(qt);
          }, n: function() {
            var Oe = he.next();
            return Ge = Oe.done, Oe;
          }, e: function(Oe) {
            Je = true, qe = Oe;
          }, f: function() {
            try {
              Ge || he.return == null || he.return();
            } finally {
              if (Je) throw qe;
            }
          } };
        }
        function K() {
          var qt, Nt, he = typeof Symbol == "function" ? Symbol : {}, _e = he.iterator || "@@iterator", Ve = he.toStringTag || "@@toStringTag";
          function qe(an, pn, yn, Rt) {
            var jr = pn && pn.prototype instanceof Je ? pn : Je, Ln = Object.create(jr.prototype);
            return q(Ln, "_invoke", function(fo, Wt, ue) {
              var Zt, Xt, pe, $e = 0, je = ue || [], Me = false, fr = { p: 0, n: 0, v: qt, a: Nr, f: Nr.bind(qt, 4), d: function(wr, Vr) {
                return Zt = wr, Xt = 0, pe = qt, fr.n = Vr, Ge;
              } };
              function Nr(wr, Vr) {
                for (Xt = wr, pe = Vr, Nt = 0; !Me && $e && !$r && Nt < je.length; Nt++) {
                  var $r, Xr = je[Nt], Cn = fr.p, sn = Xr[2];
                  wr > 3 ? ($r = sn === Vr) && (pe = Xr[(Xt = Xr[4]) ? 5 : (Xt = 3, 3)], Xr[4] = Xr[5] = qt) : Xr[0] <= Cn && (($r = wr < 2 && Cn < Xr[1]) ? (Xt = 0, fr.v = Vr, fr.n = Xr[1]) : Cn < sn && ($r = wr < 3 || Xr[0] > Vr || Vr > sn) && (Xr[4] = wr, Xr[5] = Vr, fr.n = sn, Xt = 0));
                }
                if ($r || wr > 1) return Ge;
                throw Me = true, Vr;
              }
              return function(wr, Vr, $r) {
                if ($e > 1) throw TypeError("Generator is already running");
                for (Me && Vr === 1 && Nr(Vr, $r), Xt = Vr, pe = $r; (Nt = Xt < 2 ? qt : pe) || !Me; ) {
                  Zt || (Xt ? Xt < 3 ? (Xt > 1 && (fr.n = -1), Nr(Xt, pe)) : fr.n = pe : fr.v = pe);
                  try {
                    if ($e = 2, Zt) {
                      if (Xt || (wr = "next"), Nt = Zt[wr]) {
                        if (!(Nt = Nt.call(Zt, pe))) throw TypeError("iterator result is not an object");
                        if (!Nt.done) return Nt;
                        pe = Nt.value, Xt < 2 && (Xt = 0);
                      } else Xt === 1 && (Nt = Zt.return) && Nt.call(Zt), Xt < 2 && (pe = TypeError("The iterator does not provide a '" + wr + "' method"), Xt = 1);
                      Zt = qt;
                    } else if ((Nt = (Me = fr.n < 0) ? pe : fo.call(Wt, fr)) !== Ge) break;
                  } catch (Xr) {
                    Zt = qt, Xt = 1, pe = Xr;
                  } finally {
                    $e = 1;
                  }
                }
                return { value: Nt, done: Me };
              };
            }(an, yn, Rt), true), Ln;
          }
          var Ge = {};
          function Je() {
          }
          function Oe() {
          }
          function lr() {
          }
          Nt = Object.getPrototypeOf;
          var Fr = [][_e] ? Nt(Nt([][_e]())) : (q(Nt = {}, _e, function() {
            return this;
          }), Nt), Dr = lr.prototype = Je.prototype = Object.create(Fr);
          function gr(an) {
            return Object.setPrototypeOf ? Object.setPrototypeOf(an, lr) : (an.__proto__ = lr, q(an, Ve, "GeneratorFunction")), an.prototype = Object.create(Dr), an;
          }
          return Oe.prototype = lr, q(Dr, "constructor", lr), q(lr, "constructor", Oe), Oe.displayName = "GeneratorFunction", q(lr, Ve, "GeneratorFunction"), q(Dr), q(Dr, Ve, "Generator"), q(Dr, _e, function() {
            return this;
          }), q(Dr, "toString", function() {
            return "[object Generator]";
          }), (K = function() {
            return { w: qe, m: gr };
          })();
        }
        function q(qt, Nt, he, _e) {
          var Ve = Object.defineProperty;
          try {
            Ve({}, "", {});
          } catch {
            Ve = 0;
          }
          q = function(qe, Ge, Je, Oe) {
            if (Ge) Ve ? Ve(qe, Ge, { value: Je, enumerable: !Oe, configurable: !Oe, writable: !Oe }) : qe[Ge] = Je;
            else {
              let lr = function(Fr, Dr) {
                q(qe, Fr, function(gr) {
                  return this._invoke(Fr, Dr, gr);
                });
              };
              lr("next", 0), lr("throw", 1), lr("return", 2);
            }
          }, q(qt, Nt, he, _e);
        }
        function _(qt) {
          return function(Nt) {
            if (Array.isArray(Nt)) return et(Nt);
          }(qt) || function(Nt) {
            if (typeof Symbol < "u" && Nt[Symbol.iterator] != null || Nt["@@iterator"] != null) return Array.from(Nt);
          }(qt) || L(qt) || function() {
            throw new TypeError(`Invalid attempt to spread non-iterable instance.
In order to be iterable, non-array objects must have a [Symbol.iterator]() method.`);
          }();
        }
        function L(qt, Nt) {
          if (qt) {
            if (typeof qt == "string") return et(qt, Nt);
            var he = {}.toString.call(qt).slice(8, -1);
            return he === "Object" && qt.constructor && (he = qt.constructor.name), he === "Map" || he === "Set" ? Array.from(qt) : he === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(he) ? et(qt, Nt) : void 0;
          }
        }
        function et(qt, Nt) {
          (Nt == null || Nt > qt.length) && (Nt = qt.length);
          for (var he = 0, _e = Array(Nt); he < Nt; he++) _e[he] = qt[he];
          return _e;
        }
        function St(qt, Nt, he, _e, Ve, qe, Ge) {
          try {
            var Je = qt[qe](Ge), Oe = Je.value;
          } catch (lr) {
            return void he(lr);
          }
          Je.done ? Nt(Oe) : Promise.resolve(Oe).then(_e, Ve);
        }
        function kt(qt) {
          return function() {
            var Nt = this, he = arguments;
            return new Promise(function(_e, Ve) {
              var qe = qt.apply(Nt, he);
              function Ge(Oe) {
                St(qe, _e, Ve, Ge, Je, "next", Oe);
              }
              function Je(Oe) {
                St(qe, _e, Ve, Ge, Je, "throw", Oe);
              }
              Ge(void 0);
            });
          };
        }
        function ct(qt, Nt) {
          if (!(qt instanceof Nt)) throw new TypeError("Cannot call a class as a function");
        }
        function j(qt, Nt) {
          for (var he = 0; he < Nt.length; he++) {
            var _e = Nt[he];
            _e.enumerable = _e.enumerable || false, _e.configurable = true, "value" in _e && (_e.writable = true), Object.defineProperty(qt, $t(_e.key), _e);
          }
        }
        function ut(qt, Nt, he) {
          return Nt && j(qt.prototype, Nt), he && j(qt, he), Object.defineProperty(qt, "prototype", { writable: false }), qt;
        }
        function gt(qt, Nt, he) {
          return (Nt = $t(Nt)) in qt ? Object.defineProperty(qt, Nt, { value: he, enumerable: true, configurable: true, writable: true }) : qt[Nt] = he, qt;
        }
        function $t(qt) {
          var Nt = function(he, _e) {
            if (Mt(he) != "object" || !he) return he;
            var Ve = he[Symbol.toPrimitive];
            if (Ve !== void 0) {
              var qe = Ve.call(he, _e);
              if (Mt(qe) != "object") return qe;
              throw new TypeError("@@toPrimitive must return a primitive value.");
            }
            return (_e === "string" ? String : Number)(he);
          }(qt, "string");
          return Mt(Nt) == "symbol" ? Nt : Nt + "";
        }
        var Ht = function() {
          function qt(qe) {
            var Ge, Je, Oe = this;
            ct(this, qt), gt(this, "simulate", kt(K().m(function lr() {
              var Fr, Dr, gr, an, pn, yn, Rt, jr = arguments;
              return K().w(function(Ln) {
                for (; ; ) switch (Ln.n) {
                  case 0:
                    if (Fr = (jr.length > 0 && jr[0] !== void 0 ? jr[0] : {}).restore, Oe.built) {
                      Ln.n = 2;
                      break;
                    }
                    if (Oe.raw) {
                      Ln.n = 1;
                      break;
                    }
                    throw new Error("Transaction has not yet been assembled; call `AssembledTransaction.build` first.");
                  case 1:
                    Oe.built = Oe.raw.build();
                  case 2:
                    return Fr = Fr ?? Oe.options.restore, delete Oe.simulationResult, delete Oe.simulationTransactionData, Ln.n = 3, Oe.server.simulateTransaction(Oe.built);
                  case 3:
                    if (Oe.simulation = Ln.v, !Fr || !p.j.isSimulationRestore(Oe.simulation)) {
                      Ln.n = 8;
                      break;
                    }
                    return Ln.n = 4, W(Oe.options, Oe.server);
                  case 4:
                    return Dr = Ln.v, Ln.n = 5, Oe.restoreFootprint(Oe.simulation.restorePreamble, Dr);
                  case 5:
                    if ((gr = Ln.v).status !== p.j.GetTransactionStatus.SUCCESS) {
                      Ln.n = 7;
                      break;
                    }
                    return Rt = new d.Contract(Oe.options.contractId), Oe.raw = new d.TransactionBuilder(Dr, { fee: (an = Oe.options.fee) !== null && an !== void 0 ? an : d.BASE_FEE, networkPassphrase: Oe.options.networkPassphrase }).addOperation(Rt.call.apply(Rt, [Oe.options.method].concat(_((pn = Oe.options.args) !== null && pn !== void 0 ? pn : [])))).setTimeout((yn = Oe.options.timeoutInSeconds) !== null && yn !== void 0 ? yn : k), Ln.n = 6, Oe.simulate();
                  case 6:
                    return Ln.a(2, Oe);
                  case 7:
                    throw new qt.Errors.RestorationFailure(`Automatic restore failed! You set 'restore: true' but the attempted restore did not work. Result:
`.concat(JSON.stringify(gr)));
                  case 8:
                    return p.j.isSimulationSuccess(Oe.simulation) && (Oe.built = (0, g.X)(Oe.built, Oe.simulation).build()), Ln.a(2, Oe);
                }
              }, lr);
            }))), gt(this, "sign", kt(K().m(function lr() {
              var Fr, Dr, gr, an, pn, yn, Rt, jr, Ln, fo, Wt, ue, Zt = arguments;
              return K().w(function(Xt) {
                for (; ; ) switch (Xt.n) {
                  case 0:
                    if (gr = (Dr = Zt.length > 0 && Zt[0] !== void 0 ? Zt[0] : {}).force, an = gr !== void 0 && gr, pn = Dr.signTransaction, yn = pn === void 0 ? Oe.options.signTransaction : pn, Oe.built) {
                      Xt.n = 1;
                      break;
                    }
                    throw new Error("Transaction has not yet been simulated");
                  case 1:
                    if (an || !Oe.isReadCall) {
                      Xt.n = 2;
                      break;
                    }
                    throw new qt.Errors.NoSignatureNeeded("This is a read call. It requires no signature or sending. Use `force: true` to sign and send anyway.");
                  case 2:
                    if (yn) {
                      Xt.n = 3;
                      break;
                    }
                    throw new qt.Errors.NoSigner("You must provide a signTransaction function, either when calling `signAndSend` or when initializing your Client");
                  case 3:
                    if (!(Rt = Oe.needsNonInvokerSigningBy().filter(function(pe) {
                      return !pe.startsWith("C");
                    })).length) {
                      Xt.n = 4;
                      break;
                    }
                    throw new qt.Errors.NeedsMoreSignatures("Transaction requires signatures from ".concat(Rt, ". ") + "See `needsNonInvokerSigningBy` for details.");
                  case 4:
                    return jr = (Fr = Oe.options.timeoutInSeconds) !== null && Fr !== void 0 ? Fr : k, Oe.built = d.TransactionBuilder.cloneFrom(Oe.built, { fee: Oe.built.fee, timebounds: void 0, sorobanData: Oe.simulationData.transactionData }).setTimeout(jr).build(), Ln = { networkPassphrase: Oe.options.networkPassphrase }, Oe.options.address && (Ln.address = Oe.options.address), Oe.options.submit !== void 0 && (Ln.submit = Oe.options.submit), Oe.options.submitUrl && (Ln.submitUrl = Oe.options.submitUrl), Xt.n = 5, yn(Oe.built.toXDR(), Ln);
                  case 5:
                    fo = Xt.v, Wt = fo.signedTxXdr, ue = fo.error, Oe.handleWalletError(ue), Oe.signed = d.TransactionBuilder.fromXDR(Wt, Oe.options.networkPassphrase);
                  case 6:
                    return Xt.a(2);
                }
              }, lr);
            }))), gt(this, "signAndSend", kt(K().m(function lr() {
              var Fr, Dr, gr, an, pn, yn, Rt = arguments;
              return K().w(function(jr) {
                for (; ; ) switch (jr.p = jr.n) {
                  case 0:
                    if (Dr = (Fr = Rt.length > 0 && Rt[0] !== void 0 ? Rt[0] : {}).force, gr = Dr !== void 0 && Dr, an = Fr.signTransaction, pn = an === void 0 ? Oe.options.signTransaction : an, Oe.signed) {
                      jr.n = 3;
                      break;
                    }
                    return yn = Oe.options.submit, Oe.options.submit && (Oe.options.submit = false), jr.p = 1, jr.n = 2, Oe.sign({ force: gr, signTransaction: pn });
                  case 2:
                    return jr.p = 2, Oe.options.submit = yn, jr.f(2);
                  case 3:
                    return jr.a(2, Oe.send());
                }
              }, lr, null, [[1, , 2, 3]]);
            }))), gt(this, "needsNonInvokerSigningBy", function() {
              var lr, Fr = (arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {}).includeAlreadySigned, Dr = Fr !== void 0 && Fr;
              if (!Oe.built) throw new Error("Transaction has not yet been simulated");
              if (!("operations" in Oe.built)) throw new Error("Unexpected Transaction type; no operations: ".concat(JSON.stringify(Oe.built)));
              var gr = Oe.built.operations[0];
              return _(new Set(((lr = gr.auth) !== null && lr !== void 0 ? lr : []).filter(function(an) {
                return an.credentials().switch() === d.xdr.SorobanCredentialsType.sorobanCredentialsAddress() && (Dr || an.credentials().address().signature().switch().name === "scvVoid");
              }).map(function(an) {
                return d.Address.fromScAddress(an.credentials().address().address()).toString();
              })));
            }), gt(this, "signAuthEntries", kt(K().m(function lr() {
              var Fr, Dr, gr, an, pn, yn, Rt, jr, Ln, fo, Wt, ue, Zt, Xt, pe, $e, je, Me = arguments;
              return K().w(function(fr) {
                for (; ; ) switch (fr.p = fr.n) {
                  case 0:
                    if (gr = (Dr = Me.length > 0 && Me[0] !== void 0 ? Me[0] : {}).expiration, an = gr === void 0 ? kt(K().m(function Nr() {
                      var wr;
                      return K().w(function(Vr) {
                        for (; ; ) switch (Vr.n) {
                          case 0:
                            return Vr.n = 1, Oe.server.getLatestLedger();
                          case 1:
                            return wr = Vr.v.sequence, Vr.a(2, wr + 100);
                        }
                      }, Nr);
                    }))() : gr, pn = Dr.signAuthEntry, yn = pn === void 0 ? Oe.options.signAuthEntry : pn, Rt = Dr.address, jr = Rt === void 0 ? Oe.options.publicKey : Rt, Ln = Dr.authorizeEntry, fo = Ln === void 0 ? d.authorizeEntry : Ln, Oe.built) {
                      fr.n = 1;
                      break;
                    }
                    throw new Error("Transaction has not yet been assembled or simulated");
                  case 1:
                    if (fo !== d.authorizeEntry) {
                      fr.n = 4;
                      break;
                    }
                    if ((Wt = Oe.needsNonInvokerSigningBy()).length !== 0) {
                      fr.n = 2;
                      break;
                    }
                    throw new qt.Errors.NoUnsignedNonInvokerAuthEntries("No unsigned non-invoker auth entries; maybe you already signed?");
                  case 2:
                    if (Wt.indexOf(jr ?? "") !== -1) {
                      fr.n = 3;
                      break;
                    }
                    throw new qt.Errors.NoSignatureNeeded('No auth entries for public key "'.concat(jr, '"'));
                  case 3:
                    if (yn) {
                      fr.n = 4;
                      break;
                    }
                    throw new qt.Errors.NoSigner("You must provide `signAuthEntry` or a custom `authorizeEntry`");
                  case 4:
                    ue = Oe.built.operations[0], Zt = (Fr = ue.auth) !== null && Fr !== void 0 ? Fr : [], Xt = H(Zt.entries()), fr.p = 5, $e = K().m(function Nr() {
                      var wr, Vr, $r, Xr, Cn, sn, To, Ro, Rn, bo;
                      return K().w(function(si) {
                        for (; ; ) switch (si.n) {
                          case 0:
                            if (wr = tt(pe.value, 2), Vr = wr[0], $r = wr[1], (Xr = d.xdr.SorobanCredentials.fromXDR($r.credentials().toXDR())).switch() === d.xdr.SorobanCredentialsType.sorobanCredentialsAddress()) {
                              si.n = 1;
                              break;
                            }
                            return si.a(2, 0);
                          case 1:
                            if (d.Address.fromScAddress(Xr.address().address()).toString() === jr) {
                              si.n = 2;
                              break;
                            }
                            return si.a(2, 0);
                          case 2:
                            return Cn = yn ?? Promise.resolve, sn = fo, To = $r, Ro = function() {
                              var Xo = kt(K().m(function Xn(ki) {
                                var ii, wo, Yt;
                                return K().w(function(ee) {
                                  for (; ; ) switch (ee.n) {
                                    case 0:
                                      return ee.n = 1, Cn(ki.toXDR("base64"), { address: jr });
                                    case 1:
                                      return ii = ee.v, wo = ii.signedAuthEntry, Yt = ii.error, Oe.handleWalletError(Yt), ee.a(2, Bt.from(wo, "base64"));
                                  }
                                }, Xn);
                              }));
                              return function(Xn) {
                                return Xo.apply(this, arguments);
                              };
                            }(), si.n = 3, an;
                          case 3:
                            return Rn = si.v, bo = Oe.options.networkPassphrase, si.n = 4, sn(To, Ro, Rn, bo);
                          case 4:
                            Zt[Vr] = si.v;
                          case 5:
                            return si.a(2);
                        }
                      }, Nr);
                    }), Xt.s();
                  case 6:
                    if ((pe = Xt.n()).done) {
                      fr.n = 9;
                      break;
                    }
                    return fr.d(J($e()), 7);
                  case 7:
                    if (fr.v !== 0) {
                      fr.n = 8;
                      break;
                    }
                    return fr.a(3, 8);
                  case 8:
                    fr.n = 6;
                    break;
                  case 9:
                    fr.n = 11;
                    break;
                  case 10:
                    fr.p = 10, je = fr.v, Xt.e(je);
                  case 11:
                    return fr.p = 11, Xt.f(), fr.f(11);
                  case 12:
                    return fr.a(2);
                }
              }, lr, null, [[5, 10, 11, 12]]);
            }))), this.options = qe, this.options.simulate = (Ge = this.options.simulate) === null || Ge === void 0 || Ge, this.server = new f.Server(this.options.rpcUrl, { allowHttp: (Je = this.options.allowHttp) !== null && Je !== void 0 && Je });
          }
          return ut(qt, [{ key: "toJSON", value: function() {
            var qe;
            return JSON.stringify({ method: this.options.method, tx: (qe = this.built) === null || qe === void 0 ? void 0 : qe.toXDR(), simulationResult: { auth: this.simulationData.result.auth.map(function(Ge) {
              return Ge.toXDR("base64");
            }), retval: this.simulationData.result.retval.toXDR("base64") }, simulationTransactionData: this.simulationData.transactionData.toXDR("base64") });
          } }, { key: "toXDR", value: function() {
            var qe;
            if (!this.built) throw new Error("Transaction has not yet been simulated; call `AssembledTransaction.simulate` first.");
            return (qe = this.built) === null || qe === void 0 ? void 0 : qe.toEnvelope().toXDR("base64");
          } }, { key: "handleWalletError", value: function(qe) {
            if (qe) {
              var Ge = qe.message, Je = qe.code, Oe = "".concat(Ge).concat(qe.ext ? " (".concat(qe.ext.join(", "), ")") : "");
              switch (Je) {
                case -1:
                  throw new qt.Errors.InternalWalletError(Oe);
                case -2:
                  throw new qt.Errors.ExternalServiceError(Oe);
                case -3:
                  throw new qt.Errors.InvalidClientRequest(Oe);
                case -4:
                  throw new qt.Errors.UserRejected(Oe);
                default:
                  throw new Error("Unhandled error: ".concat(Oe));
              }
            }
          } }, { key: "simulationData", get: function() {
            var qe;
            if (this.simulationResult && this.simulationTransactionData) return { result: this.simulationResult, transactionData: this.simulationTransactionData };
            var Ge = this.simulation;
            if (!Ge) throw new qt.Errors.NotYetSimulated("Transaction has not yet been simulated");
            if (p.j.isSimulationError(Ge)) throw new qt.Errors.SimulationFailed('Transaction simulation failed: "'.concat(Ge.error, '"'));
            if (p.j.isSimulationRestore(Ge)) throw new qt.Errors.ExpiredState("You need to restore some contract state before you can invoke this method.\nYou can set `restore` to true in the method options in order to automatically restore the contract state when needed.");
            return this.simulationResult = (qe = Ge.result) !== null && qe !== void 0 ? qe : { auth: [], retval: d.xdr.ScVal.scvVoid() }, this.simulationTransactionData = Ge.transactionData.build(), { result: this.simulationResult, transactionData: this.simulationTransactionData };
          } }, { key: "result", get: function() {
            try {
              if (!this.simulationData.result) throw new Error("No simulation result!");
              return this.options.parseResultXdr(this.simulationData.result.retval);
            } catch (Je) {
              if (U(Ge = Je) !== "object" || Ge === null || !("toString" in Ge)) throw Je;
              var qe = this.parseError(Je.toString());
              if (qe) return qe;
              throw Je;
            }
            var Ge;
          } }, { key: "parseError", value: function(qe) {
            if (this.options.errorTypes) {
              var Ge = qe.match(x);
              if (Ge) {
                var Je = parseInt(Ge[1], 10), Oe = this.options.errorTypes[Je];
                if (Oe) return new P(Oe);
              }
            }
          } }, { key: "send", value: (Ve = kt(K().m(function qe() {
            var Ge;
            return K().w(function(Je) {
              for (; ; ) switch (Je.n) {
                case 0:
                  if (this.signed) {
                    Je.n = 1;
                    break;
                  }
                  throw new Error("The transaction has not yet been signed. Run `sign` first, or use `signAndSend` instead.");
                case 1:
                  return Je.n = 2, Tt.init(this);
                case 2:
                  return Ge = Je.v, Je.a(2, Ge);
              }
            }, qe, this);
          })), function() {
            return Ve.apply(this, arguments);
          }) }, { key: "isReadCall", get: function() {
            var qe = this.simulationData.result.auth.length, Ge = this.simulationData.transactionData.resources().footprint().readWrite().length;
            return qe === 0 && Ge === 0;
          } }, { key: "restoreFootprint", value: (_e = kt(K().m(function qe(Ge, Je) {
            var Oe, lr, Fr;
            return K().w(function(Dr) {
              for (; ; ) switch (Dr.n) {
                case 0:
                  if (this.options.signTransaction) {
                    Dr.n = 1;
                    break;
                  }
                  throw new Error("For automatic restore to work you must provide a signTransaction function when initializing your Client");
                case 1:
                  if (Je == null) {
                    Dr.n = 2;
                    break;
                  }
                  Fr = Je, Dr.n = 4;
                  break;
                case 2:
                  return Dr.n = 3, W(this.options, this.server);
                case 3:
                  Fr = Dr.v;
                case 4:
                  return Je = Fr, Dr.n = 5, qt.buildFootprintRestoreTransaction(z({}, this.options), Ge.transactionData, Je, Ge.minResourceFee);
                case 5:
                  return Oe = Dr.v, Dr.n = 6, Oe.signAndSend();
                case 6:
                  if ((lr = Dr.v).getTransactionResponse) {
                    Dr.n = 7;
                    break;
                  }
                  throw new qt.Errors.RestorationFailure(`The attempt at automatic restore failed. 
`.concat(JSON.stringify(lr)));
                case 7:
                  return Dr.a(2, lr.getTransactionResponse);
              }
            }, qe, this);
          })), function(qe, Ge) {
            return _e.apply(this, arguments);
          }) }], [{ key: "fromJSON", value: function(qe, Ge) {
            var Je = Ge.tx, Oe = Ge.simulationResult, lr = Ge.simulationTransactionData, Fr = new qt(qe);
            return Fr.built = d.TransactionBuilder.fromXDR(Je, qe.networkPassphrase), Fr.simulationResult = { auth: Oe.auth.map(function(Dr) {
              return d.xdr.SorobanAuthorizationEntry.fromXDR(Dr, "base64");
            }), retval: d.xdr.ScVal.fromXDR(Oe.retval, "base64") }, Fr.simulationTransactionData = d.xdr.SorobanTransactionData.fromXDR(lr, "base64"), Fr;
          } }, { key: "fromXDR", value: function(qe, Ge, Je) {
            var Oe, lr = d.xdr.TransactionEnvelope.fromXDR(Ge, "base64"), Fr = d.TransactionBuilder.fromXDR(lr, qe.networkPassphrase), Dr = Fr.operations[0];
            if (Dr == null || (Oe = Dr.func) === null || Oe === void 0 || !Oe.value || typeof Dr.func.value != "function") throw new Error("Could not extract the method from the transaction envelope.");
            var gr = Dr.func.value();
            if (gr == null || !gr.functionName) throw new Error("Could not extract the method name from the transaction envelope.");
            var an = gr.functionName().toString("utf-8"), pn = new qt(z(z({}, qe), {}, { method: an, parseResultXdr: function(yn) {
              return Je.funcResToNative(an, yn);
            } }));
            return pn.built = Fr, pn;
          } }, { key: "build", value: function(qe) {
            var Ge, Je = new d.Contract(qe.contractId);
            return qt.buildWithOp(Je.call.apply(Je, [qe.method].concat(_((Ge = qe.args) !== null && Ge !== void 0 ? Ge : []))), qe);
          } }, { key: "buildWithOp", value: (he = kt(K().m(function qe(Ge, Je) {
            var Oe, lr, Fr, Dr;
            return K().w(function(gr) {
              for (; ; ) switch (gr.n) {
                case 0:
                  return Fr = new qt(Je), gr.n = 1, W(Je, Fr.server);
                case 1:
                  if (Dr = gr.v, Fr.raw = new d.TransactionBuilder(Dr, { fee: (Oe = Je.fee) !== null && Oe !== void 0 ? Oe : d.BASE_FEE, networkPassphrase: Je.networkPassphrase }).setTimeout((lr = Je.timeoutInSeconds) !== null && lr !== void 0 ? lr : k).addOperation(Ge), !Je.simulate) {
                    gr.n = 2;
                    break;
                  }
                  return gr.n = 2, Fr.simulate();
                case 2:
                  return gr.a(2, Fr);
              }
            }, qe);
          })), function(qe, Ge) {
            return he.apply(this, arguments);
          }) }, { key: "buildFootprintRestoreTransaction", value: (Nt = kt(K().m(function qe(Ge, Je, Oe, lr) {
            var Fr, Dr;
            return K().w(function(gr) {
              for (; ; ) switch (gr.n) {
                case 0:
                  return (Dr = new qt(Ge)).raw = new d.TransactionBuilder(Oe, { fee: lr, networkPassphrase: Ge.networkPassphrase }).setSorobanData(Je instanceof d.SorobanDataBuilder ? Je.build() : Je).addOperation(d.Operation.restoreFootprint({})).setTimeout((Fr = Ge.timeoutInSeconds) !== null && Fr !== void 0 ? Fr : k), gr.n = 1, Dr.simulate({ restore: false });
                case 1:
                  return gr.a(2, Dr);
              }
            }, qe);
          })), function(qe, Ge, Je, Oe) {
            return Nt.apply(this, arguments);
          }) }]);
          var Nt, he, _e, Ve;
        }();
        gt(Ht, "Errors", { ExpiredState: function(qt) {
          function Nt() {
            return ct(this, Nt), At(this, Nt, arguments);
          }
          return Ut(Nt, qt), ut(Nt);
        }(Vt(Error)), RestorationFailure: function(qt) {
          function Nt() {
            return ct(this, Nt), At(this, Nt, arguments);
          }
          return Ut(Nt, qt), ut(Nt);
        }(Vt(Error)), NeedsMoreSignatures: function(qt) {
          function Nt() {
            return ct(this, Nt), At(this, Nt, arguments);
          }
          return Ut(Nt, qt), ut(Nt);
        }(Vt(Error)), NoSignatureNeeded: function(qt) {
          function Nt() {
            return ct(this, Nt), At(this, Nt, arguments);
          }
          return Ut(Nt, qt), ut(Nt);
        }(Vt(Error)), NoUnsignedNonInvokerAuthEntries: function(qt) {
          function Nt() {
            return ct(this, Nt), At(this, Nt, arguments);
          }
          return Ut(Nt, qt), ut(Nt);
        }(Vt(Error)), NoSigner: function(qt) {
          function Nt() {
            return ct(this, Nt), At(this, Nt, arguments);
          }
          return Ut(Nt, qt), ut(Nt);
        }(Vt(Error)), NotYetSimulated: function(qt) {
          function Nt() {
            return ct(this, Nt), At(this, Nt, arguments);
          }
          return Ut(Nt, qt), ut(Nt);
        }(Vt(Error)), FakeAccount: function(qt) {
          function Nt() {
            return ct(this, Nt), At(this, Nt, arguments);
          }
          return Ut(Nt, qt), ut(Nt);
        }(Vt(Error)), SimulationFailed: function(qt) {
          function Nt() {
            return ct(this, Nt), At(this, Nt, arguments);
          }
          return Ut(Nt, qt), ut(Nt);
        }(Vt(Error)), InternalWalletError: function(qt) {
          function Nt() {
            return ct(this, Nt), At(this, Nt, arguments);
          }
          return Ut(Nt, qt), ut(Nt);
        }(Vt(Error)), ExternalServiceError: function(qt) {
          function Nt() {
            return ct(this, Nt), At(this, Nt, arguments);
          }
          return Ut(Nt, qt), ut(Nt);
        }(Vt(Error)), InvalidClientRequest: function(qt) {
          function Nt() {
            return ct(this, Nt), At(this, Nt, arguments);
          }
          return Ut(Nt, qt), ut(Nt);
        }(Vt(Error)), UserRejected: function(qt) {
          function Nt() {
            return ct(this, Nt), At(this, Nt, arguments);
          }
          return Ut(Nt, qt), ut(Nt);
        }(Vt(Error)) });
        var wt = u(8287).Buffer;
        function Jt() {
          var qt, Nt, he = typeof Symbol == "function" ? Symbol : {}, _e = he.iterator || "@@iterator", Ve = he.toStringTag || "@@toStringTag";
          function qe(an, pn, yn, Rt) {
            var jr = pn && pn.prototype instanceof Je ? pn : Je, Ln = Object.create(jr.prototype);
            return Ee(Ln, "_invoke", function(fo, Wt, ue) {
              var Zt, Xt, pe, $e = 0, je = ue || [], Me = false, fr = { p: 0, n: 0, v: qt, a: Nr, f: Nr.bind(qt, 4), d: function(wr, Vr) {
                return Zt = wr, Xt = 0, pe = qt, fr.n = Vr, Ge;
              } };
              function Nr(wr, Vr) {
                for (Xt = wr, pe = Vr, Nt = 0; !Me && $e && !$r && Nt < je.length; Nt++) {
                  var $r, Xr = je[Nt], Cn = fr.p, sn = Xr[2];
                  wr > 3 ? ($r = sn === Vr) && (pe = Xr[(Xt = Xr[4]) ? 5 : (Xt = 3, 3)], Xr[4] = Xr[5] = qt) : Xr[0] <= Cn && (($r = wr < 2 && Cn < Xr[1]) ? (Xt = 0, fr.v = Vr, fr.n = Xr[1]) : Cn < sn && ($r = wr < 3 || Xr[0] > Vr || Vr > sn) && (Xr[4] = wr, Xr[5] = Vr, fr.n = sn, Xt = 0));
                }
                if ($r || wr > 1) return Ge;
                throw Me = true, Vr;
              }
              return function(wr, Vr, $r) {
                if ($e > 1) throw TypeError("Generator is already running");
                for (Me && Vr === 1 && Nr(Vr, $r), Xt = Vr, pe = $r; (Nt = Xt < 2 ? qt : pe) || !Me; ) {
                  Zt || (Xt ? Xt < 3 ? (Xt > 1 && (fr.n = -1), Nr(Xt, pe)) : fr.n = pe : fr.v = pe);
                  try {
                    if ($e = 2, Zt) {
                      if (Xt || (wr = "next"), Nt = Zt[wr]) {
                        if (!(Nt = Nt.call(Zt, pe))) throw TypeError("iterator result is not an object");
                        if (!Nt.done) return Nt;
                        pe = Nt.value, Xt < 2 && (Xt = 0);
                      } else Xt === 1 && (Nt = Zt.return) && Nt.call(Zt), Xt < 2 && (pe = TypeError("The iterator does not provide a '" + wr + "' method"), Xt = 1);
                      Zt = qt;
                    } else if ((Nt = (Me = fr.n < 0) ? pe : fo.call(Wt, fr)) !== Ge) break;
                  } catch (Xr) {
                    Zt = qt, Xt = 1, pe = Xr;
                  } finally {
                    $e = 1;
                  }
                }
                return { value: Nt, done: Me };
              };
            }(an, yn, Rt), true), Ln;
          }
          var Ge = {};
          function Je() {
          }
          function Oe() {
          }
          function lr() {
          }
          Nt = Object.getPrototypeOf;
          var Fr = [][_e] ? Nt(Nt([][_e]())) : (Ee(Nt = {}, _e, function() {
            return this;
          }), Nt), Dr = lr.prototype = Je.prototype = Object.create(Fr);
          function gr(an) {
            return Object.setPrototypeOf ? Object.setPrototypeOf(an, lr) : (an.__proto__ = lr, Ee(an, Ve, "GeneratorFunction")), an.prototype = Object.create(Dr), an;
          }
          return Oe.prototype = lr, Ee(Dr, "constructor", lr), Ee(lr, "constructor", Oe), Oe.displayName = "GeneratorFunction", Ee(lr, Ve, "GeneratorFunction"), Ee(Dr), Ee(Dr, Ve, "Generator"), Ee(Dr, _e, function() {
            return this;
          }), Ee(Dr, "toString", function() {
            return "[object Generator]";
          }), (Jt = function() {
            return { w: qe, m: gr };
          })();
        }
        function Ee(qt, Nt, he, _e) {
          var Ve = Object.defineProperty;
          try {
            Ve({}, "", {});
          } catch {
            Ve = 0;
          }
          Ee = function(qe, Ge, Je, Oe) {
            if (Ge) Ve ? Ve(qe, Ge, { value: Je, enumerable: !Oe, configurable: !Oe, writable: !Oe }) : qe[Ge] = Je;
            else {
              let lr = function(Fr, Dr) {
                Ee(qe, Fr, function(gr) {
                  return this._invoke(Fr, Dr, gr);
                });
              };
              lr("next", 0), lr("throw", 1), lr("return", 2);
            }
          }, Ee(qt, Nt, he, _e);
        }
        function cr(qt, Nt, he, _e, Ve, qe, Ge) {
          try {
            var Je = qt[qe](Ge), Oe = Je.value;
          } catch (lr) {
            return void he(lr);
          }
          Je.done ? Nt(Oe) : Promise.resolve(Oe).then(_e, Ve);
        }
        function Lr(qt) {
          return function() {
            var Nt = this, he = arguments;
            return new Promise(function(_e, Ve) {
              var qe = qt.apply(Nt, he);
              function Ge(Oe) {
                cr(qe, _e, Ve, Ge, Je, "next", Oe);
              }
              function Je(Oe) {
                cr(qe, _e, Ve, Ge, Je, "throw", Oe);
              }
              Ge(void 0);
            });
          };
        }
        var on = function(qt, Nt) {
          return { signTransaction: (_e = Lr(Jt().m(function Ve(qe, Ge) {
            var Je;
            return Jt().w(function(Oe) {
              for (; ; ) if (Oe.n === 0) return (Je = d.TransactionBuilder.fromXDR(qe, (Ge == null ? void 0 : Ge.networkPassphrase) || Nt)).sign(qt), Oe.a(2, { signedTxXdr: Je.toXDR(), signerAddress: qt.publicKey() });
            }, Ve);
          })), function(Ve, qe) {
            return _e.apply(this, arguments);
          }), signAuthEntry: (he = Lr(Jt().m(function Ve(qe) {
            var Ge;
            return Jt().w(function(Je) {
              for (; ; ) if (Je.n === 0) return Ge = qt.sign((0, d.hash)(wt.from(qe, "base64"))).toString("base64"), Je.a(2, { signedAuthEntry: Ge, signerAddress: qt.publicKey() });
            }, Ve);
          })), function(Ve) {
            return he.apply(this, arguments);
          }) };
          var he, _e;
        }, Zr = u(8287).Buffer;
        function to(qt, Nt) {
          var he = Object.keys(qt);
          if (Object.getOwnPropertySymbols) {
            var _e = Object.getOwnPropertySymbols(qt);
            Nt && (_e = _e.filter(function(Ve) {
              return Object.getOwnPropertyDescriptor(qt, Ve).enumerable;
            })), he.push.apply(he, _e);
          }
          return he;
        }
        function qn(qt) {
          for (var Nt = 1; Nt < arguments.length; Nt++) {
            var he = arguments[Nt] != null ? arguments[Nt] : {};
            Nt % 2 ? to(Object(he), true).forEach(function(_e) {
              no(qt, _e, he[_e]);
            }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(qt, Object.getOwnPropertyDescriptors(he)) : to(Object(he)).forEach(function(_e) {
              Object.defineProperty(qt, _e, Object.getOwnPropertyDescriptor(he, _e));
            });
          }
          return qt;
        }
        function jn(qt) {
          return jn = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(Nt) {
            return typeof Nt;
          } : function(Nt) {
            return Nt && typeof Symbol == "function" && Nt.constructor === Symbol && Nt !== Symbol.prototype ? "symbol" : typeof Nt;
          }, jn(qt);
        }
        function eo(qt, Nt) {
          for (var he = 0; he < Nt.length; he++) {
            var _e = Nt[he];
            _e.enumerable = _e.enumerable || false, _e.configurable = true, "value" in _e && (_e.writable = true), Object.defineProperty(qt, Dn(_e.key), _e);
          }
        }
        function no(qt, Nt, he) {
          return (Nt = Dn(Nt)) in qt ? Object.defineProperty(qt, Nt, { value: he, enumerable: true, configurable: true, writable: true }) : qt[Nt] = he, qt;
        }
        function Dn(qt) {
          var Nt = function(he, _e) {
            if (jn(he) != "object" || !he) return he;
            var Ve = he[Symbol.toPrimitive];
            if (Ve !== void 0) {
              var qe = Ve.call(he, _e);
              if (jn(qe) != "object") return qe;
              throw new TypeError("@@toPrimitive must return a primitive value.");
            }
            return (_e === "string" ? String : Number)(he);
          }(qt, "string");
          return jn(Nt) == "symbol" ? Nt : Nt + "";
        }
        function se(qt, Nt) {
          return function(he) {
            if (Array.isArray(he)) return he;
          }(qt) || function(he, _e) {
            var Ve = he == null ? null : typeof Symbol < "u" && he[Symbol.iterator] || he["@@iterator"];
            if (Ve != null) {
              var qe, Ge, Je, Oe, lr = [], Fr = true, Dr = false;
              try {
                if (Je = (Ve = Ve.call(he)).next, _e === 0) {
                  if (Object(Ve) !== Ve) return;
                  Fr = false;
                } else for (; !(Fr = (qe = Je.call(Ve)).done) && (lr.push(qe.value), lr.length !== _e); Fr = true) ;
              } catch (gr) {
                Dr = true, Ge = gr;
              } finally {
                try {
                  if (!Fr && Ve.return != null && (Oe = Ve.return(), Object(Oe) !== Oe)) return;
                } finally {
                  if (Dr) throw Ge;
                }
              }
              return lr;
            }
          }(qt, Nt) || function(he, _e) {
            if (he) {
              if (typeof he == "string") return rr(he, _e);
              var Ve = {}.toString.call(he).slice(8, -1);
              return Ve === "Object" && he.constructor && (Ve = he.constructor.name), Ve === "Map" || Ve === "Set" ? Array.from(he) : Ve === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(Ve) ? rr(he, _e) : void 0;
            }
          }(qt, Nt) || function() {
            throw new TypeError(`Invalid attempt to destructure non-iterable instance.
In order to be iterable, non-array objects must have a [Symbol.iterator]() method.`);
          }();
        }
        function rr(qt, Nt) {
          (Nt == null || Nt > qt.length) && (Nt = qt.length);
          for (var he = 0, _e = Array(Nt); he < Nt; he++) _e[he] = qt[he];
          return _e;
        }
        function Tr(qt) {
          return /^\d+$/.test(qt.name().toString());
        }
        var mr = { U32: { type: "integer", minimum: 0, maximum: 4294967295 }, I32: { type: "integer", minimum: -2147483648, maximum: 2147483647 }, U64: { type: "string", pattern: "^([1-9][0-9]*|0)$", minLength: 1, maxLength: 20 }, I64: { type: "string", pattern: "^(-?[1-9][0-9]*|0)$", minLength: 1, maxLength: 21 }, U128: { type: "string", pattern: "^([1-9][0-9]*|0)$", minLength: 1, maxLength: 39 }, I128: { type: "string", pattern: "^(-?[1-9][0-9]*|0)$", minLength: 1, maxLength: 40 }, U256: { type: "string", pattern: "^([1-9][0-9]*|0)$", minLength: 1, maxLength: 78 }, I256: { type: "string", pattern: "^(-?[1-9][0-9]*|0)$", minLength: 1, maxLength: 79 }, Address: { type: "string", format: "address", description: "Address can be a public key or contract id" }, ScString: { type: "string", description: "ScString is a string" }, ScSymbol: { type: "string", description: "ScSymbol is a string" }, DataUrl: { type: "string", pattern: "^(?:[A-Za-z0-9+\\/]{4})*(?:[A-Za-z0-9+\\/]{2}==|[A-Za-z0-9+\\/]{3}=)?$" } };
        function Ir(qt) {
          var Nt;
          switch (qt.switch().value) {
            case d.xdr.ScSpecType.scSpecTypeVal().value:
              Nt = "Val";
              break;
            case d.xdr.ScSpecType.scSpecTypeBool().value:
              return { type: "boolean" };
            case d.xdr.ScSpecType.scSpecTypeVoid().value:
              return { type: "null" };
            case d.xdr.ScSpecType.scSpecTypeError().value:
              Nt = "Error";
              break;
            case d.xdr.ScSpecType.scSpecTypeU32().value:
              Nt = "U32";
              break;
            case d.xdr.ScSpecType.scSpecTypeI32().value:
              Nt = "I32";
              break;
            case d.xdr.ScSpecType.scSpecTypeU64().value:
              Nt = "U64";
              break;
            case d.xdr.ScSpecType.scSpecTypeI64().value:
              Nt = "I64";
              break;
            case d.xdr.ScSpecType.scSpecTypeTimepoint().value:
              throw new Error("Timepoint type not supported");
            case d.xdr.ScSpecType.scSpecTypeDuration().value:
              throw new Error("Duration not supported");
            case d.xdr.ScSpecType.scSpecTypeU128().value:
              Nt = "U128";
              break;
            case d.xdr.ScSpecType.scSpecTypeI128().value:
              Nt = "I128";
              break;
            case d.xdr.ScSpecType.scSpecTypeU256().value:
              Nt = "U256";
              break;
            case d.xdr.ScSpecType.scSpecTypeI256().value:
              Nt = "I256";
              break;
            case d.xdr.ScSpecType.scSpecTypeBytes().value:
              Nt = "DataUrl";
              break;
            case d.xdr.ScSpecType.scSpecTypeString().value:
              Nt = "ScString";
              break;
            case d.xdr.ScSpecType.scSpecTypeSymbol().value:
              Nt = "ScSymbol";
              break;
            case d.xdr.ScSpecType.scSpecTypeAddress().value:
              Nt = "Address";
              break;
            case d.xdr.ScSpecType.scSpecTypeOption().value:
              return Ir(qt.option().valueType());
            case d.xdr.ScSpecType.scSpecTypeResult().value:
              break;
            case d.xdr.ScSpecType.scSpecTypeVec().value:
              return { type: "array", items: Ir(qt.vec().elementType()) };
            case d.xdr.ScSpecType.scSpecTypeMap().value:
              var he = qt.map();
              return { type: "array", items: { type: "array", items: [Ir(he.keyType()), Ir(he.valueType())], minItems: 2, maxItems: 2 } };
            case d.xdr.ScSpecType.scSpecTypeTuple().value:
              var _e = qt.tuple(), Ve = _e.valueTypes().length, qe = Ve;
              return { type: "array", items: _e.valueTypes().map(Ir), minItems: Ve, maxItems: qe };
            case d.xdr.ScSpecType.scSpecTypeBytesN().value:
              return { $ref: "#/definitions/DataUrl", maxLength: qt.bytesN().n() };
            case d.xdr.ScSpecType.scSpecTypeUdt().value:
              Nt = qt.udt().name().toString();
          }
          return { $ref: "#/definitions/".concat(Nt) };
        }
        function En(qt) {
          var Nt = {}, he = [];
          qt.forEach(function(Ve) {
            var qe = Ve.type(), Ge = Ve.name().toString();
            Nt[Ge] = Ir(qe), qe.switch().value !== d.xdr.ScSpecType.scSpecTypeOption().value && he.push(Ge);
          });
          var _e = { properties: Nt };
          return he.length > 0 && (_e.required = he), _e;
        }
        var An, _n, Nn = (An = function qt(Nt) {
          if (function(_e, Ve) {
            if (!(_e instanceof Ve)) throw new TypeError("Cannot call a class as a function");
          }(this, qt), no(this, "entries", []), Nt.length === 0) throw new Error("Contract spec must have at least one entry");
          var he = Nt[0];
          this.entries = typeof he == "string" ? Nt.map(function(_e) {
            return d.xdr.ScSpecEntry.fromXDR(_e, "base64");
          }) : Nt;
        }, _n = [{ key: "funcs", value: function() {
          return this.entries.filter(function(qt) {
            return qt.switch().value === d.xdr.ScSpecEntryKind.scSpecEntryFunctionV0().value;
          }).map(function(qt) {
            return qt.functionV0();
          });
        } }, { key: "getFunc", value: function(qt) {
          var Nt = this.findEntry(qt);
          if (Nt.switch().value !== d.xdr.ScSpecEntryKind.scSpecEntryFunctionV0().value) throw new Error("".concat(qt, " is not a function"));
          return Nt.functionV0();
        } }, { key: "funcArgsToScVals", value: function(qt, Nt) {
          var he = this;
          return this.getFunc(qt).inputs().map(function(_e) {
            return he.nativeToScVal(function(Ve, qe) {
              var Ge = qe.name().toString(), Je = Object.entries(Ve).find(function(Oe) {
                return se(Oe, 1)[0] === Ge;
              });
              if (!Je) throw new Error("Missing field ".concat(Ge));
              return Je[1];
            }(Nt, _e), _e.type());
          });
        } }, { key: "funcResToNative", value: function(qt, Nt) {
          var he = typeof Nt == "string" ? d.xdr.ScVal.fromXDR(Nt, "base64") : Nt, _e = this.getFunc(qt).outputs();
          if (_e.length === 0) {
            var Ve = he.switch();
            if (Ve.value !== d.xdr.ScValType.scvVoid().value) throw new Error("Expected void, got ".concat(Ve.name));
            return null;
          }
          if (_e.length > 1) throw new Error("Multiple outputs not supported");
          var qe = _e[0];
          return qe.switch().value === d.xdr.ScSpecType.scSpecTypeResult().value ? new T(this.scValToNative(he, qe.result().okType())) : this.scValToNative(he, qe);
        } }, { key: "findEntry", value: function(qt) {
          var Nt = this.entries.find(function(he) {
            return he.value().name().toString() === qt;
          });
          if (!Nt) throw new Error("no such entry: ".concat(qt));
          return Nt;
        } }, { key: "nativeToScVal", value: function(qt, Nt) {
          var he = this, _e = Nt.switch(), Ve = _e.value;
          if (_e.value === d.xdr.ScSpecType.scSpecTypeUdt().value) {
            var qe = Nt.udt();
            return this.nativeToUdt(qt, qe.name().toString());
          }
          if (Ve === d.xdr.ScSpecType.scSpecTypeOption().value) {
            var Ge = Nt.option();
            return qt === void 0 ? d.xdr.ScVal.scvVoid() : this.nativeToScVal(qt, Ge.valueType());
          }
          switch (jn(qt)) {
            case "object":
              var Je, Oe, lr;
              if (qt === null) {
                if (Ve === d.xdr.ScSpecType.scSpecTypeVoid().value) return d.xdr.ScVal.scvVoid();
                throw new TypeError("Type ".concat(Nt, " was not void, but value was null"));
              }
              if (qt instanceof d.xdr.ScVal) return qt;
              if (qt instanceof d.Address) {
                if (Nt.switch().value !== d.xdr.ScSpecType.scSpecTypeAddress().value) throw new TypeError("Type ".concat(Nt, " was not address, but value was Address"));
                return qt.toScVal();
              }
              if (qt instanceof d.Contract) {
                if (Nt.switch().value !== d.xdr.ScSpecType.scSpecTypeAddress().value) throw new TypeError("Type ".concat(Nt, " was not address, but value was Address"));
                return qt.address().toScVal();
              }
              if (qt instanceof Uint8Array || Zr.isBuffer(qt)) {
                var Fr = Uint8Array.from(qt);
                switch (Ve) {
                  case d.xdr.ScSpecType.scSpecTypeBytesN().value:
                    var Dr = Nt.bytesN();
                    if (Fr.length !== Dr.n()) throw new TypeError("expected ".concat(Dr.n(), " bytes, but got ").concat(Fr.length));
                    return d.xdr.ScVal.scvBytes(Fr);
                  case d.xdr.ScSpecType.scSpecTypeBytes().value:
                    return d.xdr.ScVal.scvBytes(Fr);
                  default:
                    throw new TypeError("invalid type (".concat(Nt, ") specified for Bytes and BytesN"));
                }
              }
              if (Array.isArray(qt)) switch (Ve) {
                case d.xdr.ScSpecType.scSpecTypeVec().value:
                  var gr = Nt.vec().elementType();
                  return d.xdr.ScVal.scvVec(qt.map(function(Me) {
                    return he.nativeToScVal(Me, gr);
                  }));
                case d.xdr.ScSpecType.scSpecTypeTuple().value:
                  var an = Nt.tuple().valueTypes();
                  if (qt.length !== an.length) throw new TypeError("Tuple expects ".concat(an.length, " values, but ").concat(qt.length, " were provided"));
                  return d.xdr.ScVal.scvVec(qt.map(function(Me, fr) {
                    return he.nativeToScVal(Me, an[fr]);
                  }));
                case d.xdr.ScSpecType.scSpecTypeMap().value:
                  var pn = Nt.map(), yn = pn.keyType(), Rt = pn.valueType();
                  return d.xdr.ScVal.scvMap(qt.map(function(Me) {
                    var fr = he.nativeToScVal(Me[0], yn), Nr = he.nativeToScVal(Me[1], Rt);
                    return new d.xdr.ScMapEntry({ key: fr, val: Nr });
                  }));
                default:
                  throw new TypeError("Type ".concat(Nt, " was not vec, but value was Array"));
              }
              if (qt.constructor === Map) {
                if (Ve !== d.xdr.ScSpecType.scSpecTypeMap().value) throw new TypeError("Type ".concat(Nt, " was not map, but value was Map"));
                for (var jr = Nt.map(), Ln = [], fo = qt.entries(), Wt = fo.next(); !Wt.done; ) {
                  var ue = se(Wt.value, 2), Zt = ue[0], Xt = ue[1], pe = this.nativeToScVal(Zt, jr.keyType()), $e = this.nativeToScVal(Xt, jr.valueType());
                  Ln.push(new d.xdr.ScMapEntry({ key: pe, val: $e })), Wt = fo.next();
                }
                return d.xdr.ScVal.scvMap(Ln);
              }
              throw ((Je = (Oe = qt.constructor) === null || Oe === void 0 ? void 0 : Oe.name) !== null && Je !== void 0 ? Je : "") !== "Object" ? new TypeError("cannot interpret ".concat((lr = qt.constructor) === null || lr === void 0 ? void 0 : lr.name, " value as ScVal (").concat(JSON.stringify(qt), ")")) : new TypeError("Received object ".concat(qt, "  did not match the provided type ").concat(Nt));
            case "number":
            case "bigint":
              switch (Ve) {
                case d.xdr.ScSpecType.scSpecTypeU32().value:
                  return d.xdr.ScVal.scvU32(qt);
                case d.xdr.ScSpecType.scSpecTypeI32().value:
                  return d.xdr.ScVal.scvI32(qt);
                case d.xdr.ScSpecType.scSpecTypeU64().value:
                case d.xdr.ScSpecType.scSpecTypeI64().value:
                case d.xdr.ScSpecType.scSpecTypeU128().value:
                case d.xdr.ScSpecType.scSpecTypeI128().value:
                case d.xdr.ScSpecType.scSpecTypeU256().value:
                case d.xdr.ScSpecType.scSpecTypeI256().value:
                  var je = _e.name.substring(10).toLowerCase();
                  return new d.XdrLargeInt(je, qt).toScVal();
                default:
                  throw new TypeError("invalid type (".concat(Nt, ") specified for integer"));
              }
            case "string":
              return function(Me, fr) {
                switch (fr.value) {
                  case d.xdr.ScSpecType.scSpecTypeString().value:
                    return d.xdr.ScVal.scvString(Me);
                  case d.xdr.ScSpecType.scSpecTypeSymbol().value:
                    return d.xdr.ScVal.scvSymbol(Me);
                  case d.xdr.ScSpecType.scSpecTypeAddress().value:
                    var Nr = d.Address.fromString(Me);
                    return d.xdr.ScVal.scvAddress(Nr.toScAddress());
                  case d.xdr.ScSpecType.scSpecTypeU64().value:
                    return new d.XdrLargeInt("u64", Me).toScVal();
                  case d.xdr.ScSpecType.scSpecTypeI64().value:
                    return new d.XdrLargeInt("i64", Me).toScVal();
                  case d.xdr.ScSpecType.scSpecTypeU128().value:
                    return new d.XdrLargeInt("u128", Me).toScVal();
                  case d.xdr.ScSpecType.scSpecTypeI128().value:
                    return new d.XdrLargeInt("i128", Me).toScVal();
                  case d.xdr.ScSpecType.scSpecTypeU256().value:
                    return new d.XdrLargeInt("u256", Me).toScVal();
                  case d.xdr.ScSpecType.scSpecTypeI256().value:
                    return new d.XdrLargeInt("i256", Me).toScVal();
                  case d.xdr.ScSpecType.scSpecTypeBytes().value:
                  case d.xdr.ScSpecType.scSpecTypeBytesN().value:
                    return d.xdr.ScVal.scvBytes(Zr.from(Me, "base64"));
                  default:
                    throw new TypeError("invalid type ".concat(fr.name, " specified for string value"));
                }
              }(qt, _e);
            case "boolean":
              if (Ve !== d.xdr.ScSpecType.scSpecTypeBool().value) throw TypeError("Type ".concat(Nt, " was not bool, but value was bool"));
              return d.xdr.ScVal.scvBool(qt);
            case "undefined":
              if (!Nt) return d.xdr.ScVal.scvVoid();
              switch (Ve) {
                case d.xdr.ScSpecType.scSpecTypeVoid().value:
                case d.xdr.ScSpecType.scSpecTypeOption().value:
                  return d.xdr.ScVal.scvVoid();
                default:
                  throw new TypeError("Type ".concat(Nt, " was not void, but value was undefined"));
              }
            case "function":
              return this.nativeToScVal(qt(), Nt);
            default:
              throw new TypeError("failed to convert typeof ".concat(jn(qt), " (").concat(qt, ")"));
          }
        } }, { key: "nativeToUdt", value: function(qt, Nt) {
          var he = this.findEntry(Nt);
          switch (he.switch()) {
            case d.xdr.ScSpecEntryKind.scSpecEntryUdtEnumV0():
              if (typeof qt != "number") throw new TypeError("expected number for enum ".concat(Nt, ", but got ").concat(jn(qt)));
              return this.nativeToEnum(qt, he.udtEnumV0());
            case d.xdr.ScSpecEntryKind.scSpecEntryUdtStructV0():
              return this.nativeToStruct(qt, he.udtStructV0());
            case d.xdr.ScSpecEntryKind.scSpecEntryUdtUnionV0():
              return this.nativeToUnion(qt, he.udtUnionV0());
            default:
              throw new Error("failed to parse udt ".concat(Nt));
          }
        } }, { key: "nativeToUnion", value: function(qt, Nt) {
          var he = this, _e = qt.tag, Ve = Nt.cases().find(function(Oe) {
            return Oe.value().name().toString() === _e;
          });
          if (!Ve) throw new TypeError("no such enum entry: ".concat(_e, " in ").concat(Nt));
          var qe = d.xdr.ScVal.scvSymbol(_e);
          switch (Ve.switch()) {
            case d.xdr.ScSpecUdtUnionCaseV0Kind.scSpecUdtUnionCaseVoidV0():
              return d.xdr.ScVal.scvVec([qe]);
            case d.xdr.ScSpecUdtUnionCaseV0Kind.scSpecUdtUnionCaseTupleV0():
              var Ge = Ve.tupleCase().type();
              if (Array.isArray(qt.values)) {
                if (qt.values.length !== Ge.length) throw new TypeError("union ".concat(Nt, " expects ").concat(Ge.length, " values, but got ").concat(qt.values.length));
                var Je = qt.values.map(function(Oe, lr) {
                  return he.nativeToScVal(Oe, Ge[lr]);
                });
                return Je.unshift(qe), d.xdr.ScVal.scvVec(Je);
              }
              throw new Error("failed to parse union case ".concat(Ve, " with ").concat(qt));
            default:
              throw new Error("failed to parse union ".concat(Nt, " with ").concat(qt));
          }
        } }, { key: "nativeToStruct", value: function(qt, Nt) {
          var he = this, _e = Nt.fields();
          if (_e.some(Tr)) {
            if (!_e.every(Tr)) throw new Error("mixed numeric and non-numeric field names are not allowed");
            return d.xdr.ScVal.scvVec(_e.map(function(Ve, qe) {
              return he.nativeToScVal(qt[qe], _e[qe].type());
            }));
          }
          return d.xdr.ScVal.scvMap(_e.map(function(Ve) {
            var qe = Ve.name().toString();
            return new d.xdr.ScMapEntry({ key: he.nativeToScVal(qe, d.xdr.ScSpecTypeDef.scSpecTypeSymbol()), val: he.nativeToScVal(qt[qe], Ve.type()) });
          }));
        } }, { key: "nativeToEnum", value: function(qt, Nt) {
          if (Nt.cases().some(function(he) {
            return he.value() === qt;
          })) return d.xdr.ScVal.scvU32(qt);
          throw new TypeError("no such enum entry: ".concat(qt, " in ").concat(Nt));
        } }, { key: "scValStrToNative", value: function(qt, Nt) {
          return this.scValToNative(d.xdr.ScVal.fromXDR(qt, "base64"), Nt);
        } }, { key: "scValToNative", value: function(qt, Nt) {
          var he = this, _e = Nt.switch(), Ve = _e.value;
          if (Ve === d.xdr.ScSpecType.scSpecTypeUdt().value) return this.scValUdtToNative(qt, Nt.udt());
          switch (qt.switch().value) {
            case d.xdr.ScValType.scvVoid().value:
              return;
            case d.xdr.ScValType.scvU64().value:
            case d.xdr.ScValType.scvI64().value:
            case d.xdr.ScValType.scvU128().value:
            case d.xdr.ScValType.scvI128().value:
            case d.xdr.ScValType.scvU256().value:
            case d.xdr.ScValType.scvI256().value:
              return (0, d.scValToBigInt)(qt);
            case d.xdr.ScValType.scvVec().value:
              if (Ve === d.xdr.ScSpecType.scSpecTypeVec().value) {
                var qe, Ge = Nt.vec();
                return ((qe = qt.vec()) !== null && qe !== void 0 ? qe : []).map(function(yn) {
                  return he.scValToNative(yn, Ge.elementType());
                });
              }
              if (Ve === d.xdr.ScSpecType.scSpecTypeTuple().value) {
                var Je, Oe = Nt.tuple().valueTypes();
                return ((Je = qt.vec()) !== null && Je !== void 0 ? Je : []).map(function(yn, Rt) {
                  return he.scValToNative(yn, Oe[Rt]);
                });
              }
              throw new TypeError("Type ".concat(Nt, " was not vec, but ").concat(qt, " is"));
            case d.xdr.ScValType.scvAddress().value:
              return d.Address.fromScVal(qt).toString();
            case d.xdr.ScValType.scvMap().value:
              var lr, Fr = (lr = qt.map()) !== null && lr !== void 0 ? lr : [];
              if (Ve === d.xdr.ScSpecType.scSpecTypeMap().value) {
                var Dr = Nt.map(), gr = Dr.keyType(), an = Dr.valueType();
                return Fr.map(function(yn) {
                  return [he.scValToNative(yn.key(), gr), he.scValToNative(yn.val(), an)];
                });
              }
              throw new TypeError("ScSpecType ".concat(_e.name, " was not map, but ").concat(JSON.stringify(qt, null, 2), " is"));
            case d.xdr.ScValType.scvBool().value:
            case d.xdr.ScValType.scvU32().value:
            case d.xdr.ScValType.scvI32().value:
            case d.xdr.ScValType.scvBytes().value:
              return qt.value();
            case d.xdr.ScValType.scvString().value:
            case d.xdr.ScValType.scvSymbol().value:
              var pn;
              if (Ve !== d.xdr.ScSpecType.scSpecTypeString().value && Ve !== d.xdr.ScSpecType.scSpecTypeSymbol().value) throw new Error("ScSpecType ".concat(_e.name, " was not string or symbol, but ").concat(JSON.stringify(qt, null, 2), " is"));
              return (pn = qt.value()) === null || pn === void 0 ? void 0 : pn.toString();
            case d.xdr.ScValType.scvTimepoint().value:
            case d.xdr.ScValType.scvDuration().value:
              return (0, d.scValToBigInt)(d.xdr.ScVal.scvU64(qt.u64()));
            default:
              throw new TypeError("failed to convert ".concat(JSON.stringify(qt, null, 2), " to native type from type ").concat(_e.name));
          }
        } }, { key: "scValUdtToNative", value: function(qt, Nt) {
          var he = this.findEntry(Nt.name().toString());
          switch (he.switch()) {
            case d.xdr.ScSpecEntryKind.scSpecEntryUdtEnumV0():
              return this.enumToNative(qt);
            case d.xdr.ScSpecEntryKind.scSpecEntryUdtStructV0():
              return this.structToNative(qt, he.udtStructV0());
            case d.xdr.ScSpecEntryKind.scSpecEntryUdtUnionV0():
              return this.unionToNative(qt, he.udtUnionV0());
            default:
              throw new Error("failed to parse udt ".concat(Nt.name().toString(), ": ").concat(he));
          }
        } }, { key: "unionToNative", value: function(qt, Nt) {
          var he = this, _e = qt.vec();
          if (!_e) throw new Error("".concat(JSON.stringify(qt, null, 2), " is not a vec"));
          if (_e.length === 0 && Nt.cases.length !== 0) throw new Error("".concat(qt, " has length 0, but the there are at least one case in the union"));
          var Ve = _e[0].sym().toString();
          if (_e[0].switch().value !== d.xdr.ScValType.scvSymbol().value) throw new Error("{vec[0]} is not a symbol");
          var qe = Nt.cases().find(/* @__PURE__ */ function(Oe) {
            return function(lr) {
              switch (lr.switch().value) {
                case d.xdr.ScSpecUdtUnionCaseV0Kind.scSpecUdtUnionCaseTupleV0().value:
                  return lr.tupleCase().name().toString() === Oe;
                case d.xdr.ScSpecUdtUnionCaseV0Kind.scSpecUdtUnionCaseVoidV0().value:
                  return lr.voidCase().name().toString() === Oe;
                default:
                  return false;
              }
            };
          }(Ve));
          if (!qe) throw new Error("failed to find entry ".concat(Ve, " in union {udt.name().toString()}"));
          var Ge = { tag: Ve };
          if (qe.switch().value === d.xdr.ScSpecUdtUnionCaseV0Kind.scSpecUdtUnionCaseTupleV0().value) {
            var Je = qe.tupleCase().type().map(function(Oe, lr) {
              return he.scValToNative(_e[lr + 1], Oe);
            });
            Ge.values = Je;
          }
          return Ge;
        } }, { key: "structToNative", value: function(qt, Nt) {
          var he, _e, Ve = this, qe = {}, Ge = Nt.fields();
          return Ge.some(Tr) ? (_e = qt.vec()) === null || _e === void 0 ? void 0 : _e.map(function(Je, Oe) {
            return Ve.scValToNative(Je, Ge[Oe].type());
          }) : ((he = qt.map()) === null || he === void 0 || he.forEach(function(Je, Oe) {
            var lr = Ge[Oe];
            qe[lr.name().toString()] = Ve.scValToNative(Je.val(), lr.type());
          }), qe);
        } }, { key: "enumToNative", value: function(qt) {
          if (qt.switch().value !== d.xdr.ScValType.scvU32().value) throw new Error("Enum must have a u32 value");
          return qt.u32();
        } }, { key: "errorCases", value: function() {
          return this.entries.filter(function(qt) {
            return qt.switch().value === d.xdr.ScSpecEntryKind.scSpecEntryUdtErrorEnumV0().value;
          }).flatMap(function(qt) {
            return qt.value().cases();
          });
        } }, { key: "jsonSchema", value: function(qt) {
          var Nt = {};
          this.entries.forEach(function(_e) {
            switch (_e.switch().value) {
              case d.xdr.ScSpecEntryKind.scSpecEntryUdtEnumV0().value:
                var Ve = _e.udtEnumV0();
                Nt[Ve.name().toString()] = function(Dr) {
                  var gr = Dr.doc().toString(), an = Dr.cases(), pn = [];
                  an.forEach(function(Rt) {
                    var jr = Rt.name().toString(), Ln = Rt.doc().toString();
                    pn.push({ description: Ln, title: jr, enum: [Rt.value()], type: "number" });
                  });
                  var yn = { oneOf: pn };
                  return gr.length > 0 && (yn.description = gr), yn;
                }(Ve);
                break;
              case d.xdr.ScSpecEntryKind.scSpecEntryUdtStructV0().value:
                var qe = _e.udtStructV0();
                Nt[qe.name().toString()] = function(Dr) {
                  var gr = Dr.fields();
                  if (gr.some(Tr)) {
                    if (!gr.every(Tr)) throw new Error("mixed numeric and non-numeric field names are not allowed");
                    return { type: "array", items: gr.map(function(jr, Ln) {
                      return Ir(gr[Ln].type());
                    }), minItems: gr.length, maxItems: gr.length };
                  }
                  var an = Dr.doc().toString(), pn = En(gr), yn = pn.properties, Rt = pn.required;
                  return yn.additionalProperties = false, { description: an, properties: yn, required: Rt, type: "object" };
                }(qe);
                break;
              case d.xdr.ScSpecEntryKind.scSpecEntryUdtUnionV0().value:
                var Ge = _e.udtUnionV0();
                Nt[Ge.name().toString()] = function(Dr) {
                  var gr = Dr.doc().toString(), an = Dr.cases(), pn = [];
                  an.forEach(function(Rt) {
                    switch (Rt.switch().value) {
                      case d.xdr.ScSpecUdtUnionCaseV0Kind.scSpecUdtUnionCaseVoidV0().value:
                        var jr = Rt.voidCase().name().toString();
                        pn.push({ type: "object", title: jr, properties: { tag: jr }, additionalProperties: false, required: ["tag"] });
                        break;
                      case d.xdr.ScSpecUdtUnionCaseV0Kind.scSpecUdtUnionCaseTupleV0().value:
                        var Ln = Rt.tupleCase(), fo = Ln.name().toString();
                        pn.push({ type: "object", title: fo, properties: { tag: fo, values: { type: "array", items: Ln.type().map(Ir) } }, required: ["tag", "values"], additionalProperties: false });
                    }
                  });
                  var yn = { oneOf: pn };
                  return gr.length > 0 && (yn.description = gr), yn;
                }(Ge);
                break;
              case d.xdr.ScSpecEntryKind.scSpecEntryFunctionV0().value:
                var Je = _e.functionV0(), Oe = Je.name().toString(), lr = function(Dr) {
                  var gr = En(Dr.inputs()), an = gr.properties, pn = gr.required, yn = { additionalProperties: false, properties: an, type: "object" };
                  (pn == null ? void 0 : pn.length) > 0 && (yn.required = pn);
                  var Rt = { properties: { args: yn } }, jr = Dr.outputs(), Ln = jr.length > 0 ? Ir(jr[0]) : Ir(d.xdr.ScSpecTypeDef.scSpecTypeVoid()), fo = Dr.doc().toString();
                  return fo.length > 0 && (Rt.description = fo), Rt.additionalProperties = false, Ln.additionalProperties = false, { input: Rt, output: Ln };
                }(Je), Fr = lr.input;
                Nt[Oe] = Fr;
              case d.xdr.ScSpecEntryKind.scSpecEntryUdtErrorEnumV0().value:
            }
          });
          var he = { $schema: "http://json-schema.org/draft-07/schema#", definitions: qn(qn({}, mr), Nt) };
          return qt && (he.$ref = "#/definitions/".concat(qt)), he;
        } }], _n && eo(An.prototype, _n), Object.defineProperty(An, "prototype", { writable: false }), An), Zn = u(8287).Buffer;
        function Jn(qt) {
          return Jn = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(Nt) {
            return typeof Nt;
          } : function(Nt) {
            return Nt && typeof Symbol == "function" && Nt.constructor === Symbol && Nt !== Symbol.prototype ? "symbol" : typeof Nt;
          }, Jn(qt);
        }
        var Hn = ["method"], uo = ["wasmHash", "salt", "format", "fee", "timeoutInSeconds", "simulate"];
        function Oo() {
          var qt, Nt, he = typeof Symbol == "function" ? Symbol : {}, _e = he.iterator || "@@iterator", Ve = he.toStringTag || "@@toStringTag";
          function qe(an, pn, yn, Rt) {
            var jr = pn && pn.prototype instanceof Je ? pn : Je, Ln = Object.create(jr.prototype);
            return jo(Ln, "_invoke", function(fo, Wt, ue) {
              var Zt, Xt, pe, $e = 0, je = ue || [], Me = false, fr = { p: 0, n: 0, v: qt, a: Nr, f: Nr.bind(qt, 4), d: function(wr, Vr) {
                return Zt = wr, Xt = 0, pe = qt, fr.n = Vr, Ge;
              } };
              function Nr(wr, Vr) {
                for (Xt = wr, pe = Vr, Nt = 0; !Me && $e && !$r && Nt < je.length; Nt++) {
                  var $r, Xr = je[Nt], Cn = fr.p, sn = Xr[2];
                  wr > 3 ? ($r = sn === Vr) && (pe = Xr[(Xt = Xr[4]) ? 5 : (Xt = 3, 3)], Xr[4] = Xr[5] = qt) : Xr[0] <= Cn && (($r = wr < 2 && Cn < Xr[1]) ? (Xt = 0, fr.v = Vr, fr.n = Xr[1]) : Cn < sn && ($r = wr < 3 || Xr[0] > Vr || Vr > sn) && (Xr[4] = wr, Xr[5] = Vr, fr.n = sn, Xt = 0));
                }
                if ($r || wr > 1) return Ge;
                throw Me = true, Vr;
              }
              return function(wr, Vr, $r) {
                if ($e > 1) throw TypeError("Generator is already running");
                for (Me && Vr === 1 && Nr(Vr, $r), Xt = Vr, pe = $r; (Nt = Xt < 2 ? qt : pe) || !Me; ) {
                  Zt || (Xt ? Xt < 3 ? (Xt > 1 && (fr.n = -1), Nr(Xt, pe)) : fr.n = pe : fr.v = pe);
                  try {
                    if ($e = 2, Zt) {
                      if (Xt || (wr = "next"), Nt = Zt[wr]) {
                        if (!(Nt = Nt.call(Zt, pe))) throw TypeError("iterator result is not an object");
                        if (!Nt.done) return Nt;
                        pe = Nt.value, Xt < 2 && (Xt = 0);
                      } else Xt === 1 && (Nt = Zt.return) && Nt.call(Zt), Xt < 2 && (pe = TypeError("The iterator does not provide a '" + wr + "' method"), Xt = 1);
                      Zt = qt;
                    } else if ((Nt = (Me = fr.n < 0) ? pe : fo.call(Wt, fr)) !== Ge) break;
                  } catch (Xr) {
                    Zt = qt, Xt = 1, pe = Xr;
                  } finally {
                    $e = 1;
                  }
                }
                return { value: Nt, done: Me };
              };
            }(an, yn, Rt), true), Ln;
          }
          var Ge = {};
          function Je() {
          }
          function Oe() {
          }
          function lr() {
          }
          Nt = Object.getPrototypeOf;
          var Fr = [][_e] ? Nt(Nt([][_e]())) : (jo(Nt = {}, _e, function() {
            return this;
          }), Nt), Dr = lr.prototype = Je.prototype = Object.create(Fr);
          function gr(an) {
            return Object.setPrototypeOf ? Object.setPrototypeOf(an, lr) : (an.__proto__ = lr, jo(an, Ve, "GeneratorFunction")), an.prototype = Object.create(Dr), an;
          }
          return Oe.prototype = lr, jo(Dr, "constructor", lr), jo(lr, "constructor", Oe), Oe.displayName = "GeneratorFunction", jo(lr, Ve, "GeneratorFunction"), jo(Dr), jo(Dr, Ve, "Generator"), jo(Dr, _e, function() {
            return this;
          }), jo(Dr, "toString", function() {
            return "[object Generator]";
          }), (Oo = function() {
            return { w: qe, m: gr };
          })();
        }
        function jo(qt, Nt, he, _e) {
          var Ve = Object.defineProperty;
          try {
            Ve({}, "", {});
          } catch {
            Ve = 0;
          }
          jo = function(qe, Ge, Je, Oe) {
            if (Ge) Ve ? Ve(qe, Ge, { value: Je, enumerable: !Oe, configurable: !Oe, writable: !Oe }) : qe[Ge] = Je;
            else {
              let lr = function(Fr, Dr) {
                jo(qe, Fr, function(gr) {
                  return this._invoke(Fr, Dr, gr);
                });
              };
              lr("next", 0), lr("throw", 1), lr("return", 2);
            }
          }, jo(qt, Nt, he, _e);
        }
        function Bo(qt, Nt) {
          var he = Object.keys(qt);
          if (Object.getOwnPropertySymbols) {
            var _e = Object.getOwnPropertySymbols(qt);
            Nt && (_e = _e.filter(function(Ve) {
              return Object.getOwnPropertyDescriptor(qt, Ve).enumerable;
            })), he.push.apply(he, _e);
          }
          return he;
        }
        function Po(qt) {
          for (var Nt = 1; Nt < arguments.length; Nt++) {
            var he = arguments[Nt] != null ? arguments[Nt] : {};
            Nt % 2 ? Bo(Object(he), true).forEach(function(_e) {
              Eo(qt, _e, he[_e]);
            }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(qt, Object.getOwnPropertyDescriptors(he)) : Bo(Object(he)).forEach(function(_e) {
              Object.defineProperty(qt, _e, Object.getOwnPropertyDescriptor(he, _e));
            });
          }
          return qt;
        }
        function yo(qt, Nt) {
          if (qt == null) return {};
          var he, _e, Ve = function(Ge, Je) {
            if (Ge == null) return {};
            var Oe = {};
            for (var lr in Ge) if ({}.hasOwnProperty.call(Ge, lr)) {
              if (Je.indexOf(lr) !== -1) continue;
              Oe[lr] = Ge[lr];
            }
            return Oe;
          }(qt, Nt);
          if (Object.getOwnPropertySymbols) {
            var qe = Object.getOwnPropertySymbols(qt);
            for (_e = 0; _e < qe.length; _e++) he = qe[_e], Nt.indexOf(he) === -1 && {}.propertyIsEnumerable.call(qt, he) && (Ve[he] = qt[he]);
          }
          return Ve;
        }
        function ri(qt, Nt) {
          for (var he = 0; he < Nt.length; he++) {
            var _e = Nt[he];
            _e.enumerable = _e.enumerable || false, _e.configurable = true, "value" in _e && (_e.writable = true), Object.defineProperty(qt, Ao(_e.key), _e);
          }
        }
        function Eo(qt, Nt, he) {
          return (Nt = Ao(Nt)) in qt ? Object.defineProperty(qt, Nt, { value: he, enumerable: true, configurable: true, writable: true }) : qt[Nt] = he, qt;
        }
        function Ao(qt) {
          var Nt = function(he, _e) {
            if (Jn(he) != "object" || !he) return he;
            var Ve = he[Symbol.toPrimitive];
            if (Ve !== void 0) {
              var qe = Ve.call(he, _e);
              if (Jn(qe) != "object") return qe;
              throw new TypeError("@@toPrimitive must return a primitive value.");
            }
            return (_e === "string" ? String : Number)(he);
          }(qt, "string");
          return Jn(Nt) == "symbol" ? Nt : Nt + "";
        }
        function ti(qt, Nt, he, _e, Ve, qe, Ge) {
          try {
            var Je = qt[qe](Ge), Oe = Je.value;
          } catch (lr) {
            return void he(lr);
          }
          Je.done ? Nt(Oe) : Promise.resolve(Oe).then(_e, Ve);
        }
        function li(qt) {
          return function() {
            var Nt = this, he = arguments;
            return new Promise(function(_e, Ve) {
              var qe = qt.apply(Nt, he);
              function Ge(Oe) {
                ti(qe, _e, Ve, Ge, Je, "next", Oe);
              }
              function Je(Oe) {
                ti(qe, _e, Ve, Ge, Je, "throw", Oe);
              }
              Ge(void 0);
            });
          };
        }
        var pi = "__constructor";
        function Ho(qt) {
          return ai.apply(this, arguments);
        }
        function ai() {
          return (ai = li(Oo().m(function qt(Nt) {
            var he, _e, Ve, qe, Ge;
            return Oo().w(function(Je) {
              for (; ; ) switch (Je.n) {
                case 0:
                  return Je.n = 1, WebAssembly.compile(Nt);
                case 1:
                  if (he = Je.v, (_e = WebAssembly.Module.customSections(he, "contractspecv0")).length !== 0) {
                    Je.n = 2;
                    break;
                  }
                  throw new Error("Could not obtain contract spec from wasm");
                case 2:
                  return Ve = Zn.from(_e[0]), qe = B(Ve), Ge = new Nn(qe), Je.a(2, Ge);
              }
            }, qt);
          }))).apply(this, arguments);
        }
        function hi(qt, Nt) {
          return Co.apply(this, arguments);
        }
        function Co() {
          return Co = li(Oo().m(function qt(Nt, he) {
            var _e, Ve, qe, Ge, Je, Oe, lr = arguments;
            return Oo().w(function(Fr) {
              for (; ; ) switch (Fr.n) {
                case 0:
                  if (_e = lr.length > 2 && lr[2] !== void 0 ? lr[2] : "hex", he && he.rpcUrl) {
                    Fr.n = 1;
                    break;
                  }
                  throw new TypeError("options must contain rpcUrl");
                case 1:
                  return Ve = he.rpcUrl, qe = he.allowHttp, Ge = { allowHttp: qe }, Je = new f.Server(Ve, Ge), Fr.n = 2, Je.getContractWasmByHash(Nt, _e);
                case 2:
                  return Oe = Fr.v, Fr.a(2, Ho(Oe));
              }
            }, qt);
          })), Co.apply(this, arguments);
        }
        var Wo = function() {
          function qt(qe, Ge) {
            var Je = this;
            (function(Oe, lr) {
              if (!(Oe instanceof lr)) throw new TypeError("Cannot call a class as a function");
            })(this, qt), Eo(this, "txFromJSON", function(Oe) {
              var lr = JSON.parse(Oe), Fr = lr.method, Dr = yo(lr, Hn);
              return Ht.fromJSON(Po(Po({}, Je.options), {}, { method: Fr, parseResultXdr: function(gr) {
                return Je.spec.funcResToNative(Fr, gr);
              } }), Dr);
            }), Eo(this, "txFromXDR", function(Oe) {
              return Ht.fromXDR(Je.options, Oe, Je.spec);
            }), this.spec = qe, this.options = Ge, this.spec.funcs().forEach(function(Oe) {
              var lr = Oe.name().toString();
              if (lr !== pi) {
                var Fr = function(Dr, gr) {
                  return Ht.build(Po(Po(Po({ method: lr, args: Dr && qe.funcArgsToScVals(lr, Dr) }, Ge), gr), {}, { errorTypes: qe.errorCases().reduce(function(an, pn) {
                    return Po(Po({}, an), {}, Eo({}, pn.value(), { message: pn.doc().toString() }));
                  }, {}), parseResultXdr: function(an) {
                    return qe.funcResToNative(lr, an);
                  } }));
                };
                Je[lr] = qe.getFunc(lr).inputs().length === 0 ? function(Dr) {
                  return Fr(void 0, Dr);
                } : Fr;
              }
            });
          }
          return function(qe, Ge, Je) {
            return Je && ri(qe, Je), Object.defineProperty(qe, "prototype", { writable: false }), qe;
          }(qt, null, [{ key: "deploy", value: (Ve = li(Oo().m(function qe(Ge, Je) {
            var Oe, lr, Fr, Dr, gr, an, pn, yn, Rt;
            return Oo().w(function(jr) {
              for (; ; ) switch (jr.n) {
                case 0:
                  return Oe = Je.wasmHash, lr = Je.salt, Fr = Je.format, Dr = Je.fee, gr = Je.timeoutInSeconds, an = Je.simulate, pn = yo(Je, uo), jr.n = 1, hi(Oe, pn, Fr);
                case 1:
                  return yn = jr.v, Rt = d.Operation.createCustomContract({ address: new d.Address(Je.publicKey), wasmHash: typeof Oe == "string" ? Zn.from(Oe, Fr ?? "hex") : Oe, salt: lr, constructorArgs: Ge ? yn.funcArgsToScVals(pi, Ge) : [] }), jr.a(2, Ht.buildWithOp(Rt, Po(Po({ fee: Dr, timeoutInSeconds: gr, simulate: an }, pn), {}, { contractId: "ignored", method: pi, parseResultXdr: function(Ln) {
                    return new qt(yn, Po(Po({}, pn), {}, { contractId: d.Address.fromScVal(Ln).toString() }));
                  } })));
              }
            }, qe);
          })), function(qe, Ge) {
            return Ve.apply(this, arguments);
          }) }, { key: "fromWasmHash", value: (_e = li(Oo().m(function qe(Ge, Je) {
            var Oe, lr, Fr, Dr, gr, an, pn = arguments;
            return Oo().w(function(yn) {
              for (; ; ) switch (yn.n) {
                case 0:
                  if (Oe = pn.length > 2 && pn[2] !== void 0 ? pn[2] : "hex", Je && Je.rpcUrl) {
                    yn.n = 1;
                    break;
                  }
                  throw new TypeError("options must contain rpcUrl");
                case 1:
                  return lr = Je.rpcUrl, Fr = Je.allowHttp, Dr = { allowHttp: Fr }, gr = new f.Server(lr, Dr), yn.n = 2, gr.getContractWasmByHash(Ge, Oe);
                case 2:
                  return an = yn.v, yn.a(2, qt.fromWasm(an, Je));
              }
            }, qe);
          })), function(qe, Ge) {
            return _e.apply(this, arguments);
          }) }, { key: "fromWasm", value: (he = li(Oo().m(function qe(Ge, Je) {
            var Oe;
            return Oo().w(function(lr) {
              for (; ; ) switch (lr.n) {
                case 0:
                  return lr.n = 1, Ho(Ge);
                case 1:
                  return Oe = lr.v, lr.a(2, new qt(Oe, Je));
              }
            }, qe);
          })), function(qe, Ge) {
            return he.apply(this, arguments);
          }) }, { key: "from", value: (Nt = li(Oo().m(function qe(Ge) {
            var Je, Oe, lr, Fr, Dr, gr;
            return Oo().w(function(an) {
              for (; ; ) switch (an.n) {
                case 0:
                  if (Ge && Ge.rpcUrl && Ge.contractId) {
                    an.n = 1;
                    break;
                  }
                  throw new TypeError("options must contain rpcUrl and contractId");
                case 1:
                  return Je = Ge.rpcUrl, Oe = Ge.contractId, lr = Ge.allowHttp, Fr = { allowHttp: lr }, Dr = new f.Server(Je, Fr), an.n = 2, Dr.getContractWasmByContractId(Oe);
                case 2:
                  return gr = an.v, an.a(2, qt.fromWasm(gr, Ge));
              }
            }, qe);
          })), function(qe) {
            return Nt.apply(this, arguments);
          }) }]);
          var Nt, he, _e, Ve;
        }();
      }, 6549: (s) => {
        s.exports = Object.getOwnPropertyDescriptor;
      }, 6556: (s, i, u) => {
        var d = u(453), f = u(3126), p = f([d("%String.prototype.indexOf%")]);
        s.exports = function(g, b) {
          var h = d(g, !!b);
          return typeof h == "function" && p(g, ".prototype.") > -1 ? f([h]) : h;
        };
      }, 6578: (s) => {
        s.exports = ["Float16Array", "Float32Array", "Float64Array", "Int8Array", "Int16Array", "Int32Array", "Uint8Array", "Uint8ClampedArray", "Uint16Array", "Uint32Array", "BigInt64Array", "BigUint64Array"];
      }, 6688: (s, i, u) => {
        var d;
        function f() {
          if (d !== void 0) return d;
          if (u.g.XMLHttpRequest) {
            d = new u.g.XMLHttpRequest();
            try {
              d.open("GET", u.g.XDomainRequest ? "/" : "https://example.com");
            } catch {
              d = null;
            }
          } else d = null;
          return d;
        }
        function p(b) {
          var h = f();
          if (!h) return false;
          try {
            return h.responseType = b, h.responseType === b;
          } catch {
          }
          return false;
        }
        function g(b) {
          return typeof b == "function";
        }
        i.fetch = g(u.g.fetch) && g(u.g.ReadableStream), i.writableStream = g(u.g.WritableStream), i.abortController = g(u.g.AbortController), i.arraybuffer = i.fetch || p("arraybuffer"), i.msstream = !i.fetch && p("ms-stream"), i.mozchunkedarraybuffer = !i.fetch && p("moz-chunked-arraybuffer"), i.overrideMimeType = i.fetch || !!f() && g(f().overrideMimeType), d = null;
      }, 6698: (s) => {
        typeof Object.create == "function" ? s.exports = function(i, u) {
          u && (i.super_ = u, i.prototype = Object.create(u.prototype, { constructor: { value: i, enumerable: false, writable: true, configurable: true } }));
        } : s.exports = function(i, u) {
          if (u) {
            i.super_ = u;
            var d = function() {
            };
            d.prototype = u.prototype, i.prototype = new d(), i.prototype.constructor = i;
          }
        };
      }, 6708: (s, i, u) => {
        function d(ot) {
          var X = this;
          this.next = null, this.entry = null, this.finish = function() {
            (function(I, nt, ft) {
              var dt = I.entry;
              for (I.entry = null; dt; ) {
                var Lt = dt.callback;
                nt.pendingcb--, Lt(ft), dt = dt.next;
              }
              nt.corkedRequestsFree.next = I;
            })(X, ot);
          };
        }
        var f;
        s.exports = x, x.WritableState = S;
        var p = { deprecate: u(4643) }, g = u(345), b = u(8287).Buffer, h = (u.g !== void 0 ? u.g : typeof window < "u" ? window : typeof self < "u" ? self : {}).Uint8Array || function() {
        }, m, c = u(5896), w = u(5291).getHighWaterMark, T = u(6048).F, P = T.ERR_INVALID_ARG_TYPE, k = T.ERR_METHOD_NOT_IMPLEMENTED, R = T.ERR_MULTIPLE_CALLBACK, F = T.ERR_STREAM_CANNOT_PIPE, v = T.ERR_STREAM_DESTROYED, U = T.ERR_STREAM_NULL_VALUES, M = T.ERR_STREAM_WRITE_AFTER_END, Z = T.ERR_UNKNOWN_ENCODING, D = c.errorOrDestroy;
        function V() {
        }
        function S(ot, X, I) {
          f = f || u(5382), ot = ot || {}, typeof I != "boolean" && (I = X instanceof f), this.objectMode = !!ot.objectMode, I && (this.objectMode = this.objectMode || !!ot.writableObjectMode), this.highWaterMark = w(this, ot, "writableHighWaterMark", I), this.finalCalled = false, this.needDrain = false, this.ending = false, this.ended = false, this.finished = false, this.destroyed = false;
          var nt = ot.decodeStrings === false;
          this.decodeStrings = !nt, this.defaultEncoding = ot.defaultEncoding || "utf8", this.length = 0, this.writing = false, this.corked = 0, this.sync = true, this.bufferProcessing = false, this.onwrite = function(ft) {
            (function(dt, Lt) {
              var $ = dt._writableState, it = $.sync, mt = $.writecb;
              if (typeof mt != "function") throw new R();
              if (function(bt) {
                bt.writing = false, bt.writecb = null, bt.length -= bt.writelen, bt.writelen = 0;
              }($), Lt) (function(bt, xt, Ct, Tt, Bt) {
                --xt.pendingcb, Ct ? (process.nextTick(Bt, Tt), process.nextTick(rt, bt, xt), bt._writableState.errorEmitted = true, D(bt, Tt)) : (Bt(Tt), bt._writableState.errorEmitted = true, D(bt, Tt), rt(bt, xt));
              })(dt, $, it, Lt, mt);
              else {
                var Ot = pt($) || dt.destroyed;
                Ot || $.corked || $.bufferProcessing || !$.bufferedRequest || lt(dt, $), it ? process.nextTick(W, dt, $, Ot, mt) : W(dt, $, Ot, mt);
              }
            })(X, ft);
          }, this.writecb = null, this.writelen = 0, this.bufferedRequest = null, this.lastBufferedRequest = null, this.pendingcb = 0, this.prefinished = false, this.errorEmitted = false, this.emitClose = ot.emitClose !== false, this.autoDestroy = !!ot.autoDestroy, this.bufferedRequestCount = 0, this.corkedRequestsFree = new d(this);
        }
        function x(ot) {
          var X = this instanceof (f = f || u(5382));
          if (!X && !m.call(x, this)) return new x(ot);
          this._writableState = new S(ot, this, X), this.writable = true, ot && (typeof ot.write == "function" && (this._write = ot.write), typeof ot.writev == "function" && (this._writev = ot.writev), typeof ot.destroy == "function" && (this._destroy = ot.destroy), typeof ot.final == "function" && (this._final = ot.final)), g.call(this);
        }
        function B(ot, X, I, nt, ft, dt, Lt) {
          X.writelen = nt, X.writecb = Lt, X.writing = true, X.sync = true, X.destroyed ? X.onwrite(new v("write")) : I ? ot._writev(ft, X.onwrite) : ot._write(ft, dt, X.onwrite), X.sync = false;
        }
        function W(ot, X, I, nt) {
          I || function(ft, dt) {
            dt.length === 0 && dt.needDrain && (dt.needDrain = false, ft.emit("drain"));
          }(ot, X), X.pendingcb--, nt(), rt(ot, X);
        }
        function lt(ot, X) {
          X.bufferProcessing = true;
          var I = X.bufferedRequest;
          if (ot._writev && I && I.next) {
            var nt = X.bufferedRequestCount, ft = new Array(nt), dt = X.corkedRequestsFree;
            dt.entry = I;
            for (var Lt = 0, $ = true; I; ) ft[Lt] = I, I.isBuf || ($ = false), I = I.next, Lt += 1;
            ft.allBuffers = $, B(ot, X, true, X.length, ft, "", dt.finish), X.pendingcb++, X.lastBufferedRequest = null, dt.next ? (X.corkedRequestsFree = dt.next, dt.next = null) : X.corkedRequestsFree = new d(X), X.bufferedRequestCount = 0;
          } else {
            for (; I; ) {
              var it = I.chunk, mt = I.encoding, Ot = I.callback;
              if (B(ot, X, false, X.objectMode ? 1 : it.length, it, mt, Ot), I = I.next, X.bufferedRequestCount--, X.writing) break;
            }
            I === null && (X.lastBufferedRequest = null);
          }
          X.bufferedRequest = I, X.bufferProcessing = false;
        }
        function pt(ot) {
          return ot.ending && ot.length === 0 && ot.bufferedRequest === null && !ot.finished && !ot.writing;
        }
        function at(ot, X) {
          ot._final(function(I) {
            X.pendingcb--, I && D(ot, I), X.prefinished = true, ot.emit("prefinish"), rt(ot, X);
          });
        }
        function rt(ot, X) {
          var I = pt(X);
          if (I && (function(ft, dt) {
            dt.prefinished || dt.finalCalled || (typeof ft._final != "function" || dt.destroyed ? (dt.prefinished = true, ft.emit("prefinish")) : (dt.pendingcb++, dt.finalCalled = true, process.nextTick(at, ft, dt)));
          }(ot, X), X.pendingcb === 0 && (X.finished = true, ot.emit("finish"), X.autoDestroy))) {
            var nt = ot._readableState;
            (!nt || nt.autoDestroy && nt.endEmitted) && ot.destroy();
          }
          return I;
        }
        u(6698)(x, g), S.prototype.getBuffer = function() {
          for (var ot = this.bufferedRequest, X = []; ot; ) X.push(ot), ot = ot.next;
          return X;
        }, function() {
          try {
            Object.defineProperty(S.prototype, "buffer", { get: p.deprecate(function() {
              return this.getBuffer();
            }, "_writableState.buffer is deprecated. Use _writableState.getBuffer instead.", "DEP0003") });
          } catch {
          }
        }(), typeof Symbol == "function" && Symbol.hasInstance && typeof Function.prototype[Symbol.hasInstance] == "function" ? (m = Function.prototype[Symbol.hasInstance], Object.defineProperty(x, Symbol.hasInstance, { value: function(ot) {
          return !!m.call(this, ot) || this === x && ot && ot._writableState instanceof S;
        } })) : m = function(ot) {
          return ot instanceof this;
        }, x.prototype.pipe = function() {
          D(this, new F());
        }, x.prototype.write = function(ot, X, I) {
          var nt, ft = this._writableState, dt = false, Lt = !ft.objectMode && (nt = ot, b.isBuffer(nt) || nt instanceof h);
          return Lt && !b.isBuffer(ot) && (ot = function($) {
            return b.from($);
          }(ot)), typeof X == "function" && (I = X, X = null), Lt ? X = "buffer" : X || (X = ft.defaultEncoding), typeof I != "function" && (I = V), ft.ending ? function($, it) {
            var mt = new M();
            D($, mt), process.nextTick(it, mt);
          }(this, I) : (Lt || function($, it, mt, Ot) {
            var bt;
            return mt === null ? bt = new U() : typeof mt == "string" || it.objectMode || (bt = new P("chunk", ["string", "Buffer"], mt)), !bt || (D($, bt), process.nextTick(Ot, bt), false);
          }(this, ft, ot, I)) && (ft.pendingcb++, dt = function($, it, mt, Ot, bt, xt) {
            if (!mt) {
              var Ct = function(Ut, Vt, oe) {
                return Ut.objectMode || Ut.decodeStrings === false || typeof Vt != "string" || (Vt = b.from(Vt, oe)), Vt;
              }(it, Ot, bt);
              Ot !== Ct && (mt = true, bt = "buffer", Ot = Ct);
            }
            var Tt = it.objectMode ? 1 : Ot.length;
            it.length += Tt;
            var Bt = it.length < it.highWaterMark;
            if (Bt || (it.needDrain = true), it.writing || it.corked) {
              var At = it.lastBufferedRequest;
              it.lastBufferedRequest = { chunk: Ot, encoding: bt, isBuf: mt, callback: xt, next: null }, At ? At.next = it.lastBufferedRequest : it.bufferedRequest = it.lastBufferedRequest, it.bufferedRequestCount += 1;
            } else B($, it, false, Tt, Ot, bt, xt);
            return Bt;
          }(this, ft, Lt, ot, X, I)), dt;
        }, x.prototype.cork = function() {
          this._writableState.corked++;
        }, x.prototype.uncork = function() {
          var ot = this._writableState;
          ot.corked && (ot.corked--, ot.writing || ot.corked || ot.bufferProcessing || !ot.bufferedRequest || lt(this, ot));
        }, x.prototype.setDefaultEncoding = function(ot) {
          if (typeof ot == "string" && (ot = ot.toLowerCase()), !(["hex", "utf8", "utf-8", "ascii", "binary", "base64", "ucs2", "ucs-2", "utf16le", "utf-16le", "raw"].indexOf((ot + "").toLowerCase()) > -1)) throw new Z(ot);
          return this._writableState.defaultEncoding = ot, this;
        }, Object.defineProperty(x.prototype, "writableBuffer", { enumerable: false, get: function() {
          return this._writableState && this._writableState.getBuffer();
        } }), Object.defineProperty(x.prototype, "writableHighWaterMark", { enumerable: false, get: function() {
          return this._writableState.highWaterMark;
        } }), x.prototype._write = function(ot, X, I) {
          I(new k("_write()"));
        }, x.prototype._writev = null, x.prototype.end = function(ot, X, I) {
          var nt = this._writableState;
          return typeof ot == "function" ? (I = ot, ot = null, X = null) : typeof X == "function" && (I = X, X = null), ot != null && this.write(ot, X), nt.corked && (nt.corked = 1, this.uncork()), nt.ending || function(ft, dt, Lt) {
            dt.ending = true, rt(ft, dt), Lt && (dt.finished ? process.nextTick(Lt) : ft.once("finish", Lt)), dt.ended = true, ft.writable = false;
          }(this, nt, I), this;
        }, Object.defineProperty(x.prototype, "writableLength", { enumerable: false, get: function() {
          return this._writableState.length;
        } }), Object.defineProperty(x.prototype, "destroyed", { enumerable: false, get: function() {
          return this._writableState !== void 0 && this._writableState.destroyed;
        }, set: function(ot) {
          this._writableState && (this._writableState.destroyed = ot);
        } }), x.prototype.destroy = c.destroy, x.prototype._undestroy = c.undestroy, x.prototype._destroy = function(ot, X) {
          X(ot);
        };
      }, 6743: (s, i, u) => {
        var d = u(9353);
        s.exports = Function.prototype.bind || d;
      }, 6866: (s) => {
        s.exports = { 100: "Continue", 101: "Switching Protocols", 102: "Processing", 200: "OK", 201: "Created", 202: "Accepted", 203: "Non-Authoritative Information", 204: "No Content", 205: "Reset Content", 206: "Partial Content", 207: "Multi-Status", 208: "Already Reported", 226: "IM Used", 300: "Multiple Choices", 301: "Moved Permanently", 302: "Found", 303: "See Other", 304: "Not Modified", 305: "Use Proxy", 307: "Temporary Redirect", 308: "Permanent Redirect", 400: "Bad Request", 401: "Unauthorized", 402: "Payment Required", 403: "Forbidden", 404: "Not Found", 405: "Method Not Allowed", 406: "Not Acceptable", 407: "Proxy Authentication Required", 408: "Request Timeout", 409: "Conflict", 410: "Gone", 411: "Length Required", 412: "Precondition Failed", 413: "Payload Too Large", 414: "URI Too Long", 415: "Unsupported Media Type", 416: "Range Not Satisfiable", 417: "Expectation Failed", 418: "I'm a teapot", 421: "Misdirected Request", 422: "Unprocessable Entity", 423: "Locked", 424: "Failed Dependency", 425: "Unordered Collection", 426: "Upgrade Required", 428: "Precondition Required", 429: "Too Many Requests", 431: "Request Header Fields Too Large", 451: "Unavailable For Legal Reasons", 500: "Internal Server Error", 501: "Not Implemented", 502: "Bad Gateway", 503: "Service Unavailable", 504: "Gateway Timeout", 505: "HTTP Version Not Supported", 506: "Variant Also Negotiates", 507: "Insufficient Storage", 508: "Loop Detected", 509: "Bandwidth Limit Exceeded", 510: "Not Extended", 511: "Network Authentication Required" };
      }, 6897: (s, i, u) => {
        var d = u(453), f = u(41), p = u(592)(), g = u(5795), b = u(9675), h = d("%Math.floor%");
        s.exports = function(m, c) {
          if (typeof m != "function") throw new b("`fn` is not a function");
          if (typeof c != "number" || c < 0 || c > 4294967295 || h(c) !== c) throw new b("`length` must be a positive 32-bit integer");
          var w = arguments.length > 2 && !!arguments[2], T = true, P = true;
          if ("length" in m && g) {
            var k = g(m, "length");
            k && !k.configurable && (T = false), k && !k.writable && (P = false);
          }
          return (T || P || !w) && (p ? f(m, "length", c, true, true) : f(m, "length", c)), m;
        };
      }, 6917: (s, i, u) => {
        var d = u(8287).Buffer, f = u(6688), p = u(6698), g = u(8399), b = i.readyStates = { UNSENT: 0, OPENED: 1, HEADERS_RECEIVED: 2, LOADING: 3, DONE: 4 }, h = i.IncomingMessage = function(m, c, w, T) {
          var P = this;
          if (g.Readable.call(P), P._mode = w, P.headers = {}, P.rawHeaders = [], P.trailers = {}, P.rawTrailers = [], P.on("end", function() {
            process.nextTick(function() {
              P.emit("close");
            });
          }), w === "fetch") {
            if (P._fetchResponse = c, P.url = c.url, P.statusCode = c.status, P.statusMessage = c.statusText, c.headers.forEach(function(U, M) {
              P.headers[M.toLowerCase()] = U, P.rawHeaders.push(M, U);
            }), f.writableStream) {
              var k = new WritableStream({ write: function(U) {
                return T(false), new Promise(function(M, Z) {
                  P._destroyed ? Z() : P.push(d.from(U)) ? M() : P._resumeFetch = M;
                });
              }, close: function() {
                T(true), P._destroyed || P.push(null);
              }, abort: function(U) {
                T(true), P._destroyed || P.emit("error", U);
              } });
              try {
                return void c.body.pipeTo(k).catch(function(U) {
                  T(true), P._destroyed || P.emit("error", U);
                });
              } catch {
              }
            }
            var R = c.body.getReader();
            (function U() {
              R.read().then(function(M) {
                P._destroyed || (T(M.done), M.done ? P.push(null) : (P.push(d.from(M.value)), U()));
              }).catch(function(M) {
                T(true), P._destroyed || P.emit("error", M);
              });
            })();
          } else if (P._xhr = m, P._pos = 0, P.url = m.responseURL, P.statusCode = m.status, P.statusMessage = m.statusText, m.getAllResponseHeaders().split(/\r?\n/).forEach(function(U) {
            var M = U.match(/^([^:]+):\s*(.*)/);
            if (M) {
              var Z = M[1].toLowerCase();
              Z === "set-cookie" ? (P.headers[Z] === void 0 && (P.headers[Z] = []), P.headers[Z].push(M[2])) : P.headers[Z] !== void 0 ? P.headers[Z] += ", " + M[2] : P.headers[Z] = M[2], P.rawHeaders.push(M[1], M[2]);
            }
          }), P._charset = "x-user-defined", !f.overrideMimeType) {
            var F = P.rawHeaders["mime-type"];
            if (F) {
              var v = F.match(/;\s*charset=([^;])(;|$)/);
              v && (P._charset = v[1].toLowerCase());
            }
            P._charset || (P._charset = "utf-8");
          }
        };
        p(h, g.Readable), h.prototype._read = function() {
          var m = this._resumeFetch;
          m && (this._resumeFetch = null, m());
        }, h.prototype._onXHRProgress = function(m) {
          var c = this, w = c._xhr, T = null;
          switch (c._mode) {
            case "text":
              if ((T = w.responseText).length > c._pos) {
                var P = T.substr(c._pos);
                if (c._charset === "x-user-defined") {
                  for (var k = d.alloc(P.length), R = 0; R < P.length; R++) k[R] = 255 & P.charCodeAt(R);
                  c.push(k);
                } else c.push(P, c._charset);
                c._pos = T.length;
              }
              break;
            case "arraybuffer":
              if (w.readyState !== b.DONE || !w.response) break;
              T = w.response, c.push(d.from(new Uint8Array(T)));
              break;
            case "moz-chunked-arraybuffer":
              if (T = w.response, w.readyState !== b.LOADING || !T) break;
              c.push(d.from(new Uint8Array(T)));
              break;
            case "ms-stream":
              if (T = w.response, w.readyState !== b.LOADING) break;
              var F = new u.g.MSStreamReader();
              F.onprogress = function() {
                F.result.byteLength > c._pos && (c.push(d.from(new Uint8Array(F.result.slice(c._pos)))), c._pos = F.result.byteLength);
              }, F.onload = function() {
                m(true), c.push(null);
              }, F.readAsArrayBuffer(T);
          }
          c._xhr.readyState === b.DONE && c._mode !== "ms-stream" && (m(true), c.push(null));
        };
      }, 7007: (s) => {
        var i, u = typeof Reflect == "object" ? Reflect : null, d = u && typeof u.apply == "function" ? u.apply : function(F, v, U) {
          return Function.prototype.apply.call(F, v, U);
        };
        i = u && typeof u.ownKeys == "function" ? u.ownKeys : Object.getOwnPropertySymbols ? function(F) {
          return Object.getOwnPropertyNames(F).concat(Object.getOwnPropertySymbols(F));
        } : function(F) {
          return Object.getOwnPropertyNames(F);
        };
        var f = Number.isNaN || function(F) {
          return F != F;
        };
        function p() {
          p.init.call(this);
        }
        s.exports = p, s.exports.once = function(F, v) {
          return new Promise(function(U, M) {
            function Z(V) {
              F.removeListener(v, D), M(V);
            }
            function D() {
              typeof F.removeListener == "function" && F.removeListener("error", Z), U([].slice.call(arguments));
            }
            R(F, v, D, { once: true }), v !== "error" && function(V, S, x) {
              typeof V.on == "function" && R(V, "error", S, x);
            }(F, Z, { once: true });
          });
        }, p.EventEmitter = p, p.prototype._events = void 0, p.prototype._eventsCount = 0, p.prototype._maxListeners = void 0;
        var g = 10;
        function b(F) {
          if (typeof F != "function") throw new TypeError('The "listener" argument must be of type Function. Received type ' + typeof F);
        }
        function h(F) {
          return F._maxListeners === void 0 ? p.defaultMaxListeners : F._maxListeners;
        }
        function m(F, v, U, M) {
          var Z, D, V, S;
          if (b(U), (D = F._events) === void 0 ? (D = F._events = /* @__PURE__ */ Object.create(null), F._eventsCount = 0) : (D.newListener !== void 0 && (F.emit("newListener", v, U.listener ? U.listener : U), D = F._events), V = D[v]), V === void 0) V = D[v] = U, ++F._eventsCount;
          else if (typeof V == "function" ? V = D[v] = M ? [U, V] : [V, U] : M ? V.unshift(U) : V.push(U), (Z = h(F)) > 0 && V.length > Z && !V.warned) {
            V.warned = true;
            var x = new Error("Possible EventEmitter memory leak detected. " + V.length + " " + String(v) + " listeners added. Use emitter.setMaxListeners() to increase limit");
            x.name = "MaxListenersExceededWarning", x.emitter = F, x.type = v, x.count = V.length, S = x, console && console.warn && console.warn(S);
          }
          return F;
        }
        function c() {
          if (!this.fired) return this.target.removeListener(this.type, this.wrapFn), this.fired = true, arguments.length === 0 ? this.listener.call(this.target) : this.listener.apply(this.target, arguments);
        }
        function w(F, v, U) {
          var M = { fired: false, wrapFn: void 0, target: F, type: v, listener: U }, Z = c.bind(M);
          return Z.listener = U, M.wrapFn = Z, Z;
        }
        function T(F, v, U) {
          var M = F._events;
          if (M === void 0) return [];
          var Z = M[v];
          return Z === void 0 ? [] : typeof Z == "function" ? U ? [Z.listener || Z] : [Z] : U ? function(D) {
            for (var V = new Array(D.length), S = 0; S < V.length; ++S) V[S] = D[S].listener || D[S];
            return V;
          }(Z) : k(Z, Z.length);
        }
        function P(F) {
          var v = this._events;
          if (v !== void 0) {
            var U = v[F];
            if (typeof U == "function") return 1;
            if (U !== void 0) return U.length;
          }
          return 0;
        }
        function k(F, v) {
          for (var U = new Array(v), M = 0; M < v; ++M) U[M] = F[M];
          return U;
        }
        function R(F, v, U, M) {
          if (typeof F.on == "function") M.once ? F.once(v, U) : F.on(v, U);
          else {
            if (typeof F.addEventListener != "function") throw new TypeError('The "emitter" argument must be of type EventEmitter. Received type ' + typeof F);
            F.addEventListener(v, function Z(D) {
              M.once && F.removeEventListener(v, Z), U(D);
            });
          }
        }
        Object.defineProperty(p, "defaultMaxListeners", { enumerable: true, get: function() {
          return g;
        }, set: function(F) {
          if (typeof F != "number" || F < 0 || f(F)) throw new RangeError('The value of "defaultMaxListeners" is out of range. It must be a non-negative number. Received ' + F + ".");
          g = F;
        } }), p.init = function() {
          this._events !== void 0 && this._events !== Object.getPrototypeOf(this)._events || (this._events = /* @__PURE__ */ Object.create(null), this._eventsCount = 0), this._maxListeners = this._maxListeners || void 0;
        }, p.prototype.setMaxListeners = function(F) {
          if (typeof F != "number" || F < 0 || f(F)) throw new RangeError('The value of "n" is out of range. It must be a non-negative number. Received ' + F + ".");
          return this._maxListeners = F, this;
        }, p.prototype.getMaxListeners = function() {
          return h(this);
        }, p.prototype.emit = function(F) {
          for (var v = [], U = 1; U < arguments.length; U++) v.push(arguments[U]);
          var M = F === "error", Z = this._events;
          if (Z !== void 0) M = M && Z.error === void 0;
          else if (!M) return false;
          if (M) {
            var D;
            if (v.length > 0 && (D = v[0]), D instanceof Error) throw D;
            var V = new Error("Unhandled error." + (D ? " (" + D.message + ")" : ""));
            throw V.context = D, V;
          }
          var S = Z[F];
          if (S === void 0) return false;
          if (typeof S == "function") d(S, this, v);
          else {
            var x = S.length, B = k(S, x);
            for (U = 0; U < x; ++U) d(B[U], this, v);
          }
          return true;
        }, p.prototype.addListener = function(F, v) {
          return m(this, F, v, false);
        }, p.prototype.on = p.prototype.addListener, p.prototype.prependListener = function(F, v) {
          return m(this, F, v, true);
        }, p.prototype.once = function(F, v) {
          return b(v), this.on(F, w(this, F, v)), this;
        }, p.prototype.prependOnceListener = function(F, v) {
          return b(v), this.prependListener(F, w(this, F, v)), this;
        }, p.prototype.removeListener = function(F, v) {
          var U, M, Z, D, V;
          if (b(v), (M = this._events) === void 0) return this;
          if ((U = M[F]) === void 0) return this;
          if (U === v || U.listener === v) --this._eventsCount === 0 ? this._events = /* @__PURE__ */ Object.create(null) : (delete M[F], M.removeListener && this.emit("removeListener", F, U.listener || v));
          else if (typeof U != "function") {
            for (Z = -1, D = U.length - 1; D >= 0; D--) if (U[D] === v || U[D].listener === v) {
              V = U[D].listener, Z = D;
              break;
            }
            if (Z < 0) return this;
            Z === 0 ? U.shift() : function(S, x) {
              for (; x + 1 < S.length; x++) S[x] = S[x + 1];
              S.pop();
            }(U, Z), U.length === 1 && (M[F] = U[0]), M.removeListener !== void 0 && this.emit("removeListener", F, V || v);
          }
          return this;
        }, p.prototype.off = p.prototype.removeListener, p.prototype.removeAllListeners = function(F) {
          var v, U, M;
          if ((U = this._events) === void 0) return this;
          if (U.removeListener === void 0) return arguments.length === 0 ? (this._events = /* @__PURE__ */ Object.create(null), this._eventsCount = 0) : U[F] !== void 0 && (--this._eventsCount === 0 ? this._events = /* @__PURE__ */ Object.create(null) : delete U[F]), this;
          if (arguments.length === 0) {
            var Z, D = Object.keys(U);
            for (M = 0; M < D.length; ++M) (Z = D[M]) !== "removeListener" && this.removeAllListeners(Z);
            return this.removeAllListeners("removeListener"), this._events = /* @__PURE__ */ Object.create(null), this._eventsCount = 0, this;
          }
          if (typeof (v = U[F]) == "function") this.removeListener(F, v);
          else if (v !== void 0) for (M = v.length - 1; M >= 0; M--) this.removeListener(F, v[M]);
          return this;
        }, p.prototype.listeners = function(F) {
          return T(this, F, true);
        }, p.prototype.rawListeners = function(F) {
          return T(this, F, false);
        }, p.listenerCount = function(F, v) {
          return typeof F.listenerCount == "function" ? F.listenerCount(v) : P.call(F, v);
        }, p.prototype.listenerCount = P, p.prototype.eventNames = function() {
          return this._eventsCount > 0 ? i(this._events) : [];
        };
      }, 7119: (s) => {
        s.exports = typeof Reflect < "u" && Reflect && Reflect.apply;
      }, 7176: (s, i, u) => {
        var d, f = u(3126), p = u(5795);
        try {
          d = [].__proto__ === Array.prototype;
        } catch (m) {
          if (!m || typeof m != "object" || !("code" in m) || m.code !== "ERR_PROTO_ACCESS") throw m;
        }
        var g = !!d && p && p(Object.prototype, "__proto__"), b = Object, h = b.getPrototypeOf;
        s.exports = g && typeof g.get == "function" ? f([g.get]) : typeof h == "function" && function(m) {
          return h(m == null ? m : b(m));
        };
      }, 7244: (s, i, u) => {
        var d = u(9092)(), f = u(6556)("Object.prototype.toString"), p = function(h) {
          return !(d && h && typeof h == "object" && Symbol.toStringTag in h) && f(h) === "[object Arguments]";
        }, g = function(h) {
          return !!p(h) || h !== null && typeof h == "object" && "length" in h && typeof h.length == "number" && h.length >= 0 && f(h) !== "[object Array]" && "callee" in h && f(h.callee) === "[object Function]";
        }, b = function() {
          return p(arguments);
        }();
        p.isLegacyArguments = g, s.exports = b ? p : g;
      }, 7510: (s) => {
        s.exports = function() {
          for (var u = {}, d = 0; d < arguments.length; d++) {
            var f = arguments[d];
            for (var p in f) i.call(f, p) && (u[p] = f[p]);
          }
          return u;
        };
        var i = Object.prototype.hasOwnProperty;
      }, 7526: (s, i) => {
        i.byteLength = function(c) {
          var w = b(c), T = w[0], P = w[1];
          return 3 * (T + P) / 4 - P;
        }, i.toByteArray = function(c) {
          var w, T, P = b(c), k = P[0], R = P[1], F = new f(function(M, Z, D) {
            return 3 * (Z + D) / 4 - D;
          }(0, k, R)), v = 0, U = R > 0 ? k - 4 : k;
          for (T = 0; T < U; T += 4) w = d[c.charCodeAt(T)] << 18 | d[c.charCodeAt(T + 1)] << 12 | d[c.charCodeAt(T + 2)] << 6 | d[c.charCodeAt(T + 3)], F[v++] = w >> 16 & 255, F[v++] = w >> 8 & 255, F[v++] = 255 & w;
          return R === 2 && (w = d[c.charCodeAt(T)] << 2 | d[c.charCodeAt(T + 1)] >> 4, F[v++] = 255 & w), R === 1 && (w = d[c.charCodeAt(T)] << 10 | d[c.charCodeAt(T + 1)] << 4 | d[c.charCodeAt(T + 2)] >> 2, F[v++] = w >> 8 & 255, F[v++] = 255 & w), F;
        }, i.fromByteArray = function(c) {
          for (var w, T = c.length, P = T % 3, k = [], R = 16383, F = 0, v = T - P; F < v; F += R) k.push(m(c, F, F + R > v ? v : F + R));
          return P === 1 ? (w = c[T - 1], k.push(u[w >> 2] + u[w << 4 & 63] + "==")) : P === 2 && (w = (c[T - 2] << 8) + c[T - 1], k.push(u[w >> 10] + u[w >> 4 & 63] + u[w << 2 & 63] + "=")), k.join("");
        };
        for (var u = [], d = [], f = typeof Uint8Array < "u" ? Uint8Array : Array, p = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/", g = 0; g < 64; ++g) u[g] = p[g], d[p.charCodeAt(g)] = g;
        function b(c) {
          var w = c.length;
          if (w % 4 > 0) throw new Error("Invalid string. Length must be a multiple of 4");
          var T = c.indexOf("=");
          return T === -1 && (T = w), [T, T === w ? 0 : 4 - T % 4];
        }
        function h(c) {
          return u[c >> 18 & 63] + u[c >> 12 & 63] + u[c >> 6 & 63] + u[63 & c];
        }
        function m(c, w, T) {
          for (var P, k = [], R = w; R < T; R += 3) P = (c[R] << 16 & 16711680) + (c[R + 1] << 8 & 65280) + (255 & c[R + 2]), k.push(h(P));
          return k.join("");
        }
        d[45] = 62, d[95] = 63;
      }, 7600: (s, i, u) => {
        u.r(i), u.d(i, { Api: () => {
        }, FEDERATION_RESPONSE_MAX_SIZE: () => M, Server: () => Z });
        var d = u(8950), f = u(4193), p = u.n(f), g = u(8732), b = u(5976), h = u(3898), m = u(9983);
        function c(D) {
          return c = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(V) {
            return typeof V;
          } : function(V) {
            return V && typeof Symbol == "function" && V.constructor === Symbol && V !== Symbol.prototype ? "symbol" : typeof V;
          }, c(D);
        }
        function w(D, V) {
          return function(S) {
            if (Array.isArray(S)) return S;
          }(D) || function(S, x) {
            var B = S == null ? null : typeof Symbol < "u" && S[Symbol.iterator] || S["@@iterator"];
            if (B != null) {
              var W, lt, pt, at, rt = [], ot = true, X = false;
              try {
                if (pt = (B = B.call(S)).next, x !== 0) for (; !(ot = (W = pt.call(B)).done) && (rt.push(W.value), rt.length !== x); ot = true) ;
              } catch (I) {
                X = true, lt = I;
              } finally {
                try {
                  if (!ot && B.return != null && (at = B.return(), Object(at) !== at)) return;
                } finally {
                  if (X) throw lt;
                }
              }
              return rt;
            }
          }(D, V) || function(S, x) {
            if (S) {
              if (typeof S == "string") return T(S, x);
              var B = {}.toString.call(S).slice(8, -1);
              return B === "Object" && S.constructor && (B = S.constructor.name), B === "Map" || B === "Set" ? Array.from(S) : B === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(B) ? T(S, x) : void 0;
            }
          }(D, V) || function() {
            throw new TypeError(`Invalid attempt to destructure non-iterable instance.
In order to be iterable, non-array objects must have a [Symbol.iterator]() method.`);
          }();
        }
        function T(D, V) {
          (V == null || V > D.length) && (V = D.length);
          for (var S = 0, x = Array(V); S < V; S++) x[S] = D[S];
          return x;
        }
        function P() {
          var D, V, S = typeof Symbol == "function" ? Symbol : {}, x = S.iterator || "@@iterator", B = S.toStringTag || "@@toStringTag";
          function W(nt, ft, dt, Lt) {
            var $ = ft && ft.prototype instanceof pt ? ft : pt, it = Object.create($.prototype);
            return k(it, "_invoke", function(mt, Ot, bt) {
              var xt, Ct, Tt, Bt = 0, At = bt || [], Ut = false, Vt = { p: 0, n: 0, v: D, a: oe, f: oe.bind(D, 4), d: function(te, yt) {
                return xt = te, Ct = 0, Tt = D, Vt.n = yt, lt;
              } };
              function oe(te, yt) {
                for (Ct = te, Tt = yt, V = 0; !Ut && Bt && !Mt && V < At.length; V++) {
                  var Mt, O = At[V], z = Vt.p, J = O[2];
                  te > 3 ? (Mt = J === yt) && (Tt = O[(Ct = O[4]) ? 5 : (Ct = 3, 3)], O[4] = O[5] = D) : O[0] <= z && ((Mt = te < 2 && z < O[1]) ? (Ct = 0, Vt.v = yt, Vt.n = O[1]) : z < J && (Mt = te < 3 || O[0] > yt || yt > J) && (O[4] = te, O[5] = yt, Vt.n = J, Ct = 0));
                }
                if (Mt || te > 1) return lt;
                throw Ut = true, yt;
              }
              return function(te, yt, Mt) {
                if (Bt > 1) throw TypeError("Generator is already running");
                for (Ut && yt === 1 && oe(yt, Mt), Ct = yt, Tt = Mt; (V = Ct < 2 ? D : Tt) || !Ut; ) {
                  xt || (Ct ? Ct < 3 ? (Ct > 1 && (Vt.n = -1), oe(Ct, Tt)) : Vt.n = Tt : Vt.v = Tt);
                  try {
                    if (Bt = 2, xt) {
                      if (Ct || (te = "next"), V = xt[te]) {
                        if (!(V = V.call(xt, Tt))) throw TypeError("iterator result is not an object");
                        if (!V.done) return V;
                        Tt = V.value, Ct < 2 && (Ct = 0);
                      } else Ct === 1 && (V = xt.return) && V.call(xt), Ct < 2 && (Tt = TypeError("The iterator does not provide a '" + te + "' method"), Ct = 1);
                      xt = D;
                    } else if ((V = (Ut = Vt.n < 0) ? Tt : mt.call(Ot, Vt)) !== lt) break;
                  } catch (O) {
                    xt = D, Ct = 1, Tt = O;
                  } finally {
                    Bt = 1;
                  }
                }
                return { value: V, done: Ut };
              };
            }(nt, dt, Lt), true), it;
          }
          var lt = {};
          function pt() {
          }
          function at() {
          }
          function rt() {
          }
          V = Object.getPrototypeOf;
          var ot = [][x] ? V(V([][x]())) : (k(V = {}, x, function() {
            return this;
          }), V), X = rt.prototype = pt.prototype = Object.create(ot);
          function I(nt) {
            return Object.setPrototypeOf ? Object.setPrototypeOf(nt, rt) : (nt.__proto__ = rt, k(nt, B, "GeneratorFunction")), nt.prototype = Object.create(X), nt;
          }
          return at.prototype = rt, k(X, "constructor", rt), k(rt, "constructor", at), at.displayName = "GeneratorFunction", k(rt, B, "GeneratorFunction"), k(X), k(X, B, "Generator"), k(X, x, function() {
            return this;
          }), k(X, "toString", function() {
            return "[object Generator]";
          }), (P = function() {
            return { w: W, m: I };
          })();
        }
        function k(D, V, S, x) {
          var B = Object.defineProperty;
          try {
            B({}, "", {});
          } catch {
            B = 0;
          }
          k = function(W, lt, pt, at) {
            if (lt) B ? B(W, lt, { value: pt, enumerable: !at, configurable: !at, writable: !at }) : W[lt] = pt;
            else {
              let rt = function(ot, X) {
                k(W, ot, function(I) {
                  return this._invoke(ot, X, I);
                });
              };
              rt("next", 0), rt("throw", 1), rt("return", 2);
            }
          }, k(D, V, S, x);
        }
        function R(D, V, S, x, B, W, lt) {
          try {
            var pt = D[W](lt), at = pt.value;
          } catch (rt) {
            return void S(rt);
          }
          pt.done ? V(at) : Promise.resolve(at).then(x, B);
        }
        function F(D) {
          return function() {
            var V = this, S = arguments;
            return new Promise(function(x, B) {
              var W = D.apply(V, S);
              function lt(at) {
                R(W, x, B, lt, pt, "next", at);
              }
              function pt(at) {
                R(W, x, B, lt, pt, "throw", at);
              }
              lt(void 0);
            });
          };
        }
        function v(D, V) {
          for (var S = 0; S < V.length; S++) {
            var x = V[S];
            x.enumerable = x.enumerable || false, x.configurable = true, "value" in x && (x.writable = true), Object.defineProperty(D, U(x.key), x);
          }
        }
        function U(D) {
          var V = function(S, x) {
            if (c(S) != "object" || !S) return S;
            var B = S[Symbol.toPrimitive];
            if (B !== void 0) {
              var W = B.call(S, x);
              if (c(W) != "object") return W;
              throw new TypeError("@@toPrimitive must return a primitive value.");
            }
            return String(S);
          }(D, "string");
          return c(V) == "symbol" ? V : V + "";
        }
        var M = 102400, Z = function() {
          function D(ot, X) {
            var I = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : {};
            (function(ft, dt) {
              if (!(ft instanceof dt)) throw new TypeError("Cannot call a class as a function");
            })(this, D), this.serverURL = p()(ot), this.domain = X;
            var nt = I.allowHttp === void 0 ? g.T.isAllowHttp() : I.allowHttp;
            if (this.timeout = I.timeout === void 0 ? g.T.getTimeout() : I.timeout, this.serverURL.protocol() !== "https" && !nt) throw new Error("Cannot connect to insecure federation server");
          }
          return V = D, S = [{ key: "resolveAddress", value: (rt = F(P().m(function ot(X) {
            var I, nt;
            return P().w(function(ft) {
              for (; ; ) switch (ft.n) {
                case 0:
                  if (I = X, !(X.indexOf("*") < 0)) {
                    ft.n = 2;
                    break;
                  }
                  if (this.domain) {
                    ft.n = 1;
                    break;
                  }
                  return ft.a(2, Promise.reject(new Error("Unknown domain. Make sure `address` contains a domain (ex. `bob*stellar.org`) or pass `domain` parameter when instantiating the server object.")));
                case 1:
                  I = "".concat(X, "*").concat(this.domain);
                case 2:
                  return nt = this.serverURL.query({ type: "name", q: I }), ft.a(2, this._sendRequest(nt));
              }
            }, ot, this);
          })), function(ot) {
            return rt.apply(this, arguments);
          }) }, { key: "resolveAccountId", value: (at = F(P().m(function ot(X) {
            var I;
            return P().w(function(nt) {
              for (; ; ) if (nt.n === 0) return I = this.serverURL.query({ type: "id", q: X }), nt.a(2, this._sendRequest(I));
            }, ot, this);
          })), function(ot) {
            return at.apply(this, arguments);
          }) }, { key: "resolveTransactionId", value: (pt = F(P().m(function ot(X) {
            var I;
            return P().w(function(nt) {
              for (; ; ) if (nt.n === 0) return I = this.serverURL.query({ type: "txid", q: X }), nt.a(2, this._sendRequest(I));
            }, ot, this);
          })), function(ot) {
            return pt.apply(this, arguments);
          }) }, { key: "_sendRequest", value: (lt = F(P().m(function ot(X) {
            var I;
            return P().w(function(nt) {
              for (; ; ) if (nt.n === 0) return I = this.timeout, nt.a(2, m.ok.get(X.toString(), { maxContentLength: M, timeout: I }).then(function(ft) {
                if (ft.data.memo !== void 0 && typeof ft.data.memo != "string") throw new Error("memo value should be of type string");
                return ft.data;
              }).catch(function(ft) {
                if (ft instanceof Error) {
                  if (ft.message.match(/^maxContentLength size/)) throw new Error("federation response exceeds allowed size of ".concat(M));
                  return Promise.reject(ft);
                }
                return Promise.reject(new b.nS("Server query failed. Server responded: ".concat(ft.status, " ").concat(ft.statusText), ft.data));
              }));
            }, ot, this);
          })), function(ot) {
            return lt.apply(this, arguments);
          }) }], x = [{ key: "resolve", value: (W = F(P().m(function ot(X) {
            var I, nt, ft, dt, Lt, $ = arguments;
            return P().w(function(it) {
              for (; ; ) switch (it.n) {
                case 0:
                  if (I = $.length > 1 && $[1] !== void 0 ? $[1] : {}, !(X.indexOf("*") < 0)) {
                    it.n = 2;
                    break;
                  }
                  if (d.StrKey.isValidEd25519PublicKey(X)) {
                    it.n = 1;
                    break;
                  }
                  return it.a(2, Promise.reject(new Error("Invalid Account ID")));
                case 1:
                  return it.a(2, Promise.resolve({ account_id: X }));
                case 2:
                  if (nt = X.split("*"), ft = w(nt, 2), dt = ft[1], nt.length === 2 && dt) {
                    it.n = 3;
                    break;
                  }
                  return it.a(2, Promise.reject(new Error("Invalid Stellar address")));
                case 3:
                  return it.n = 4, D.createForDomain(dt, I);
                case 4:
                  return Lt = it.v, it.a(2, Lt.resolveAddress(X));
              }
            }, ot);
          })), function(ot) {
            return W.apply(this, arguments);
          }) }, { key: "createForDomain", value: (B = F(P().m(function ot(X) {
            var I, nt, ft = arguments;
            return P().w(function(dt) {
              for (; ; ) switch (dt.n) {
                case 0:
                  return I = ft.length > 1 && ft[1] !== void 0 ? ft[1] : {}, dt.n = 1, h.Resolver.resolve(X, I);
                case 1:
                  if ((nt = dt.v).FEDERATION_SERVER) {
                    dt.n = 2;
                    break;
                  }
                  return dt.a(2, Promise.reject(new Error("stellar.toml does not contain FEDERATION_SERVER field")));
                case 2:
                  return dt.a(2, new D(nt.FEDERATION_SERVER, X, I));
              }
            }, ot);
          })), function(ot) {
            return B.apply(this, arguments);
          }) }], S && v(V.prototype, S), x && v(V, x), Object.defineProperty(V, "prototype", { writable: false }), V;
          var V, S, x, B, W, lt, pt, at, rt;
        }();
      }, 7720: (s, i, u) => {
        var d = u(4765), f = Object.prototype.hasOwnProperty, p = Array.isArray, g = function() {
          for (var m = [], c = 0; c < 256; ++c) m.push("%" + ((c < 16 ? "0" : "") + c.toString(16)).toUpperCase());
          return m;
        }(), b = function(m, c) {
          for (var w = c && c.plainObjects ? { __proto__: null } : {}, T = 0; T < m.length; ++T) m[T] !== void 0 && (w[T] = m[T]);
          return w;
        }, h = 1024;
        s.exports = { arrayToObject: b, assign: function(m, c) {
          return Object.keys(c).reduce(function(w, T) {
            return w[T] = c[T], w;
          }, m);
        }, combine: function(m, c) {
          return [].concat(m, c);
        }, compact: function(m) {
          for (var c = [{ obj: { o: m }, prop: "o" }], w = [], T = 0; T < c.length; ++T) for (var P = c[T], k = P.obj[P.prop], R = Object.keys(k), F = 0; F < R.length; ++F) {
            var v = R[F], U = k[v];
            typeof U == "object" && U !== null && w.indexOf(U) === -1 && (c.push({ obj: k, prop: v }), w.push(U));
          }
          return function(M) {
            for (; M.length > 1; ) {
              var Z = M.pop(), D = Z.obj[Z.prop];
              if (p(D)) {
                for (var V = [], S = 0; S < D.length; ++S) D[S] !== void 0 && V.push(D[S]);
                Z.obj[Z.prop] = V;
              }
            }
          }(c), m;
        }, decode: function(m, c, w) {
          var T = m.replace(/\+/g, " ");
          if (w === "iso-8859-1") return T.replace(/%[0-9a-f]{2}/gi, unescape);
          try {
            return decodeURIComponent(T);
          } catch {
            return T;
          }
        }, encode: function(m, c, w, T, P) {
          if (m.length === 0) return m;
          var k = m;
          if (typeof m == "symbol" ? k = Symbol.prototype.toString.call(m) : typeof m != "string" && (k = String(m)), w === "iso-8859-1") return escape(k).replace(/%u[0-9a-f]{4}/gi, function(D) {
            return "%26%23" + parseInt(D.slice(2), 16) + "%3B";
          });
          for (var R = "", F = 0; F < k.length; F += h) {
            for (var v = k.length >= h ? k.slice(F, F + h) : k, U = [], M = 0; M < v.length; ++M) {
              var Z = v.charCodeAt(M);
              Z === 45 || Z === 46 || Z === 95 || Z === 126 || Z >= 48 && Z <= 57 || Z >= 65 && Z <= 90 || Z >= 97 && Z <= 122 || P === d.RFC1738 && (Z === 40 || Z === 41) ? U[U.length] = v.charAt(M) : Z < 128 ? U[U.length] = g[Z] : Z < 2048 ? U[U.length] = g[192 | Z >> 6] + g[128 | 63 & Z] : Z < 55296 || Z >= 57344 ? U[U.length] = g[224 | Z >> 12] + g[128 | Z >> 6 & 63] + g[128 | 63 & Z] : (M += 1, Z = 65536 + ((1023 & Z) << 10 | 1023 & v.charCodeAt(M)), U[U.length] = g[240 | Z >> 18] + g[128 | Z >> 12 & 63] + g[128 | Z >> 6 & 63] + g[128 | 63 & Z]);
            }
            R += U.join("");
          }
          return R;
        }, isBuffer: function(m) {
          return !(!m || typeof m != "object") && !!(m.constructor && m.constructor.isBuffer && m.constructor.isBuffer(m));
        }, isRegExp: function(m) {
          return Object.prototype.toString.call(m) === "[object RegExp]";
        }, maybeMap: function(m, c) {
          if (p(m)) {
            for (var w = [], T = 0; T < m.length; T += 1) w.push(c(m[T]));
            return w;
          }
          return c(m);
        }, merge: function m(c, w, T) {
          if (!w) return c;
          if (typeof w != "object" && typeof w != "function") {
            if (p(c)) c.push(w);
            else {
              if (!c || typeof c != "object") return [c, w];
              (T && (T.plainObjects || T.allowPrototypes) || !f.call(Object.prototype, w)) && (c[w] = true);
            }
            return c;
          }
          if (!c || typeof c != "object") return [c].concat(w);
          var P = c;
          return p(c) && !p(w) && (P = b(c, T)), p(c) && p(w) ? (w.forEach(function(k, R) {
            if (f.call(c, R)) {
              var F = c[R];
              F && typeof F == "object" && k && typeof k == "object" ? c[R] = m(F, k, T) : c.push(k);
            } else c[R] = k;
          }), c) : Object.keys(w).reduce(function(k, R) {
            var F = w[R];
            return f.call(k, R) ? k[R] = m(k[R], F, T) : k[R] = F, k;
          }, P);
        } };
      }, 7758: (s, i, u) => {
        var d, f = u(6048).F, p = f.ERR_MISSING_ARGS, g = f.ERR_STREAM_DESTROYED;
        function b(c) {
          if (c) throw c;
        }
        function h(c) {
          c();
        }
        function m(c, w) {
          return c.pipe(w);
        }
        s.exports = function() {
          for (var c = arguments.length, w = new Array(c), T = 0; T < c; T++) w[T] = arguments[T];
          var P, k = function(F) {
            return F.length ? typeof F[F.length - 1] != "function" ? b : F.pop() : b;
          }(w);
          if (Array.isArray(w[0]) && (w = w[0]), w.length < 2) throw new p("streams");
          var R = w.map(function(F, v) {
            var U = v < w.length - 1;
            return function(M, Z, D, V) {
              V = /* @__PURE__ */ function(B) {
                var W = false;
                return function() {
                  W || (W = true, B.apply(void 0, arguments));
                };
              }(V);
              var S = false;
              M.on("close", function() {
                S = true;
              }), d === void 0 && (d = u(6238)), d(M, { readable: Z, writable: D }, function(B) {
                if (B) return V(B);
                S = true, V();
              });
              var x = false;
              return function(B) {
                if (!S && !x) return x = true, function(W) {
                  return W.setHeader && typeof W.abort == "function";
                }(M) ? M.abort() : typeof M.destroy == "function" ? M.destroy() : void V(B || new g("pipe"));
              };
            }(F, U, v > 0, function(M) {
              P || (P = M), M && R.forEach(h), U || (R.forEach(h), k(P));
            });
          });
          return w.reduce(m);
        };
      }, 8002: (s) => {
        s.exports = Math.min;
      }, 8068: (s) => {
        s.exports = SyntaxError;
      }, 8184: (s, i, u) => {
        var d, f = u(6556), p = u(9721)(/^\s*(?:function)?\*/), g = u(9092)(), b = u(3628), h = f("Object.prototype.toString"), m = f("Function.prototype.toString");
        s.exports = function(c) {
          if (typeof c != "function") return false;
          if (p(m(c))) return true;
          if (!g) return h(c) === "[object GeneratorFunction]";
          if (!b) return false;
          if (d === void 0) {
            var w = function() {
              if (!g) return false;
              try {
                return Function("return function*() {}")();
              } catch {
              }
            }();
            d = !!w && b(w);
          }
          return b(c) === d;
        };
      }, 8242: (s, i, u) => {
        u.r(i), u.d(i, { Api: () => {
        } });
      }, 8287: (s, i, u) => {
        const d = u(7526), f = u(251), p = typeof Symbol == "function" && typeof Symbol.for == "function" ? Symbol.for("nodejs.util.inspect.custom") : null;
        i.Buffer = h, i.SlowBuffer = function(O) {
          return +O != O && (O = 0), h.alloc(+O);
        }, i.INSPECT_MAX_BYTES = 50;
        const g = 2147483647;
        function b(O) {
          if (O > g) throw new RangeError('The value "' + O + '" is invalid for option "size"');
          const z = new Uint8Array(O);
          return Object.setPrototypeOf(z, h.prototype), z;
        }
        function h(O, z, J) {
          if (typeof O == "number") {
            if (typeof z == "string") throw new TypeError('The "string" argument must be of type string. Received type number');
            return w(O);
          }
          return m(O, z, J);
        }
        function m(O, z, J) {
          if (typeof O == "string") return function(K, q) {
            if (typeof q == "string" && q !== "" || (q = "utf8"), !h.isEncoding(q)) throw new TypeError("Unknown encoding: " + q);
            const _ = 0 | R(K, q);
            let L = b(_);
            const et = L.write(K, q);
            return et !== _ && (L = L.slice(0, et)), L;
          }(O, z);
          if (ArrayBuffer.isView(O)) return function(K) {
            if (Vt(K, Uint8Array)) {
              const q = new Uint8Array(K);
              return P(q.buffer, q.byteOffset, q.byteLength);
            }
            return T(K);
          }(O);
          if (O == null) throw new TypeError("The first argument must be one of type string, Buffer, ArrayBuffer, Array, or Array-like Object. Received type " + typeof O);
          if (Vt(O, ArrayBuffer) || O && Vt(O.buffer, ArrayBuffer) || typeof SharedArrayBuffer < "u" && (Vt(O, SharedArrayBuffer) || O && Vt(O.buffer, SharedArrayBuffer))) return P(O, z, J);
          if (typeof O == "number") throw new TypeError('The "value" argument must not be of type number. Received type number');
          const tt = O.valueOf && O.valueOf();
          if (tt != null && tt !== O) return h.from(tt, z, J);
          const H = function(K) {
            if (h.isBuffer(K)) {
              const q = 0 | k(K.length), _ = b(q);
              return _.length === 0 || K.copy(_, 0, 0, q), _;
            }
            if (K.length !== void 0) return typeof K.length != "number" || oe(K.length) ? b(0) : T(K);
            if (K.type === "Buffer" && Array.isArray(K.data)) return T(K.data);
          }(O);
          if (H) return H;
          if (typeof Symbol < "u" && Symbol.toPrimitive != null && typeof O[Symbol.toPrimitive] == "function") return h.from(O[Symbol.toPrimitive]("string"), z, J);
          throw new TypeError("The first argument must be one of type string, Buffer, ArrayBuffer, Array, or Array-like Object. Received type " + typeof O);
        }
        function c(O) {
          if (typeof O != "number") throw new TypeError('"size" argument must be of type number');
          if (O < 0) throw new RangeError('The value "' + O + '" is invalid for option "size"');
        }
        function w(O) {
          return c(O), b(O < 0 ? 0 : 0 | k(O));
        }
        function T(O) {
          const z = O.length < 0 ? 0 : 0 | k(O.length), J = b(z);
          for (let tt = 0; tt < z; tt += 1) J[tt] = 255 & O[tt];
          return J;
        }
        function P(O, z, J) {
          if (z < 0 || O.byteLength < z) throw new RangeError('"offset" is outside of buffer bounds');
          if (O.byteLength < z + (J || 0)) throw new RangeError('"length" is outside of buffer bounds');
          let tt;
          return tt = z === void 0 && J === void 0 ? new Uint8Array(O) : J === void 0 ? new Uint8Array(O, z) : new Uint8Array(O, z, J), Object.setPrototypeOf(tt, h.prototype), tt;
        }
        function k(O) {
          if (O >= g) throw new RangeError("Attempt to allocate Buffer larger than maximum size: 0x" + g.toString(16) + " bytes");
          return 0 | O;
        }
        function R(O, z) {
          if (h.isBuffer(O)) return O.length;
          if (ArrayBuffer.isView(O) || Vt(O, ArrayBuffer)) return O.byteLength;
          if (typeof O != "string") throw new TypeError('The "string" argument must be one of type string, Buffer, or ArrayBuffer. Received type ' + typeof O);
          const J = O.length, tt = arguments.length > 2 && arguments[2] === true;
          if (!tt && J === 0) return 0;
          let H = false;
          for (; ; ) switch (z) {
            case "ascii":
            case "latin1":
            case "binary":
              return J;
            case "utf8":
            case "utf-8":
              return Bt(O).length;
            case "ucs2":
            case "ucs-2":
            case "utf16le":
            case "utf-16le":
              return 2 * J;
            case "hex":
              return J >>> 1;
            case "base64":
              return At(O).length;
            default:
              if (H) return tt ? -1 : Bt(O).length;
              z = ("" + z).toLowerCase(), H = true;
          }
        }
        function F(O, z, J) {
          let tt = false;
          if ((z === void 0 || z < 0) && (z = 0), z > this.length || ((J === void 0 || J > this.length) && (J = this.length), J <= 0) || (J >>>= 0) <= (z >>>= 0)) return "";
          for (O || (O = "utf8"); ; ) switch (O) {
            case "hex":
              return rt(this, z, J);
            case "utf8":
            case "utf-8":
              return W(this, z, J);
            case "ascii":
              return pt(this, z, J);
            case "latin1":
            case "binary":
              return at(this, z, J);
            case "base64":
              return B(this, z, J);
            case "ucs2":
            case "ucs-2":
            case "utf16le":
            case "utf-16le":
              return ot(this, z, J);
            default:
              if (tt) throw new TypeError("Unknown encoding: " + O);
              O = (O + "").toLowerCase(), tt = true;
          }
        }
        function v(O, z, J) {
          const tt = O[z];
          O[z] = O[J], O[J] = tt;
        }
        function U(O, z, J, tt, H) {
          if (O.length === 0) return -1;
          if (typeof J == "string" ? (tt = J, J = 0) : J > 2147483647 ? J = 2147483647 : J < -2147483648 && (J = -2147483648), oe(J = +J) && (J = H ? 0 : O.length - 1), J < 0 && (J = O.length + J), J >= O.length) {
            if (H) return -1;
            J = O.length - 1;
          } else if (J < 0) {
            if (!H) return -1;
            J = 0;
          }
          if (typeof z == "string" && (z = h.from(z, tt)), h.isBuffer(z)) return z.length === 0 ? -1 : M(O, z, J, tt, H);
          if (typeof z == "number") return z &= 255, typeof Uint8Array.prototype.indexOf == "function" ? H ? Uint8Array.prototype.indexOf.call(O, z, J) : Uint8Array.prototype.lastIndexOf.call(O, z, J) : M(O, [z], J, tt, H);
          throw new TypeError("val must be string, number or Buffer");
        }
        function M(O, z, J, tt, H) {
          let K, q = 1, _ = O.length, L = z.length;
          if (tt !== void 0 && ((tt = String(tt).toLowerCase()) === "ucs2" || tt === "ucs-2" || tt === "utf16le" || tt === "utf-16le")) {
            if (O.length < 2 || z.length < 2) return -1;
            q = 2, _ /= 2, L /= 2, J /= 2;
          }
          function et(St, kt) {
            return q === 1 ? St[kt] : St.readUInt16BE(kt * q);
          }
          if (H) {
            let St = -1;
            for (K = J; K < _; K++) if (et(O, K) === et(z, St === -1 ? 0 : K - St)) {
              if (St === -1 && (St = K), K - St + 1 === L) return St * q;
            } else St !== -1 && (K -= K - St), St = -1;
          } else for (J + L > _ && (J = _ - L), K = J; K >= 0; K--) {
            let St = true;
            for (let kt = 0; kt < L; kt++) if (et(O, K + kt) !== et(z, kt)) {
              St = false;
              break;
            }
            if (St) return K;
          }
          return -1;
        }
        function Z(O, z, J, tt) {
          J = Number(J) || 0;
          const H = O.length - J;
          tt ? (tt = Number(tt)) > H && (tt = H) : tt = H;
          const K = z.length;
          let q;
          for (tt > K / 2 && (tt = K / 2), q = 0; q < tt; ++q) {
            const _ = parseInt(z.substr(2 * q, 2), 16);
            if (oe(_)) return q;
            O[J + q] = _;
          }
          return q;
        }
        function D(O, z, J, tt) {
          return Ut(Bt(z, O.length - J), O, J, tt);
        }
        function V(O, z, J, tt) {
          return Ut(function(H) {
            const K = [];
            for (let q = 0; q < H.length; ++q) K.push(255 & H.charCodeAt(q));
            return K;
          }(z), O, J, tt);
        }
        function S(O, z, J, tt) {
          return Ut(At(z), O, J, tt);
        }
        function x(O, z, J, tt) {
          return Ut(function(H, K) {
            let q, _, L;
            const et = [];
            for (let St = 0; St < H.length && !((K -= 2) < 0); ++St) q = H.charCodeAt(St), _ = q >> 8, L = q % 256, et.push(L), et.push(_);
            return et;
          }(z, O.length - J), O, J, tt);
        }
        function B(O, z, J) {
          return z === 0 && J === O.length ? d.fromByteArray(O) : d.fromByteArray(O.slice(z, J));
        }
        function W(O, z, J) {
          J = Math.min(O.length, J);
          const tt = [];
          let H = z;
          for (; H < J; ) {
            const K = O[H];
            let q = null, _ = K > 239 ? 4 : K > 223 ? 3 : K > 191 ? 2 : 1;
            if (H + _ <= J) {
              let L, et, St, kt;
              switch (_) {
                case 1:
                  K < 128 && (q = K);
                  break;
                case 2:
                  L = O[H + 1], (192 & L) == 128 && (kt = (31 & K) << 6 | 63 & L, kt > 127 && (q = kt));
                  break;
                case 3:
                  L = O[H + 1], et = O[H + 2], (192 & L) == 128 && (192 & et) == 128 && (kt = (15 & K) << 12 | (63 & L) << 6 | 63 & et, kt > 2047 && (kt < 55296 || kt > 57343) && (q = kt));
                  break;
                case 4:
                  L = O[H + 1], et = O[H + 2], St = O[H + 3], (192 & L) == 128 && (192 & et) == 128 && (192 & St) == 128 && (kt = (15 & K) << 18 | (63 & L) << 12 | (63 & et) << 6 | 63 & St, kt > 65535 && kt < 1114112 && (q = kt));
              }
            }
            q === null ? (q = 65533, _ = 1) : q > 65535 && (q -= 65536, tt.push(q >>> 10 & 1023 | 55296), q = 56320 | 1023 & q), tt.push(q), H += _;
          }
          return function(K) {
            const q = K.length;
            if (q <= lt) return String.fromCharCode.apply(String, K);
            let _ = "", L = 0;
            for (; L < q; ) _ += String.fromCharCode.apply(String, K.slice(L, L += lt));
            return _;
          }(tt);
        }
        i.kMaxLength = g, h.TYPED_ARRAY_SUPPORT = function() {
          try {
            const O = new Uint8Array(1), z = { foo: function() {
              return 42;
            } };
            return Object.setPrototypeOf(z, Uint8Array.prototype), Object.setPrototypeOf(O, z), O.foo() === 42;
          } catch {
            return false;
          }
        }(), h.TYPED_ARRAY_SUPPORT || typeof console > "u" || typeof console.error != "function" || console.error("This browser lacks typed array (Uint8Array) support which is required by `buffer` v5.x. Use `buffer` v4.x if you require old browser support."), Object.defineProperty(h.prototype, "parent", { enumerable: true, get: function() {
          if (h.isBuffer(this)) return this.buffer;
        } }), Object.defineProperty(h.prototype, "offset", { enumerable: true, get: function() {
          if (h.isBuffer(this)) return this.byteOffset;
        } }), h.poolSize = 8192, h.from = function(O, z, J) {
          return m(O, z, J);
        }, Object.setPrototypeOf(h.prototype, Uint8Array.prototype), Object.setPrototypeOf(h, Uint8Array), h.alloc = function(O, z, J) {
          return function(tt, H, K) {
            return c(tt), tt <= 0 ? b(tt) : H !== void 0 ? typeof K == "string" ? b(tt).fill(H, K) : b(tt).fill(H) : b(tt);
          }(O, z, J);
        }, h.allocUnsafe = function(O) {
          return w(O);
        }, h.allocUnsafeSlow = function(O) {
          return w(O);
        }, h.isBuffer = function(O) {
          return O != null && O._isBuffer === true && O !== h.prototype;
        }, h.compare = function(O, z) {
          if (Vt(O, Uint8Array) && (O = h.from(O, O.offset, O.byteLength)), Vt(z, Uint8Array) && (z = h.from(z, z.offset, z.byteLength)), !h.isBuffer(O) || !h.isBuffer(z)) throw new TypeError('The "buf1", "buf2" arguments must be one of type Buffer or Uint8Array');
          if (O === z) return 0;
          let J = O.length, tt = z.length;
          for (let H = 0, K = Math.min(J, tt); H < K; ++H) if (O[H] !== z[H]) {
            J = O[H], tt = z[H];
            break;
          }
          return J < tt ? -1 : tt < J ? 1 : 0;
        }, h.isEncoding = function(O) {
          switch (String(O).toLowerCase()) {
            case "hex":
            case "utf8":
            case "utf-8":
            case "ascii":
            case "latin1":
            case "binary":
            case "base64":
            case "ucs2":
            case "ucs-2":
            case "utf16le":
            case "utf-16le":
              return true;
            default:
              return false;
          }
        }, h.concat = function(O, z) {
          if (!Array.isArray(O)) throw new TypeError('"list" argument must be an Array of Buffers');
          if (O.length === 0) return h.alloc(0);
          let J;
          if (z === void 0) for (z = 0, J = 0; J < O.length; ++J) z += O[J].length;
          const tt = h.allocUnsafe(z);
          let H = 0;
          for (J = 0; J < O.length; ++J) {
            let K = O[J];
            if (Vt(K, Uint8Array)) H + K.length > tt.length ? (h.isBuffer(K) || (K = h.from(K)), K.copy(tt, H)) : Uint8Array.prototype.set.call(tt, K, H);
            else {
              if (!h.isBuffer(K)) throw new TypeError('"list" argument must be an Array of Buffers');
              K.copy(tt, H);
            }
            H += K.length;
          }
          return tt;
        }, h.byteLength = R, h.prototype._isBuffer = true, h.prototype.swap16 = function() {
          const O = this.length;
          if (O % 2 != 0) throw new RangeError("Buffer size must be a multiple of 16-bits");
          for (let z = 0; z < O; z += 2) v(this, z, z + 1);
          return this;
        }, h.prototype.swap32 = function() {
          const O = this.length;
          if (O % 4 != 0) throw new RangeError("Buffer size must be a multiple of 32-bits");
          for (let z = 0; z < O; z += 4) v(this, z, z + 3), v(this, z + 1, z + 2);
          return this;
        }, h.prototype.swap64 = function() {
          const O = this.length;
          if (O % 8 != 0) throw new RangeError("Buffer size must be a multiple of 64-bits");
          for (let z = 0; z < O; z += 8) v(this, z, z + 7), v(this, z + 1, z + 6), v(this, z + 2, z + 5), v(this, z + 3, z + 4);
          return this;
        }, h.prototype.toString = function() {
          const O = this.length;
          return O === 0 ? "" : arguments.length === 0 ? W(this, 0, O) : F.apply(this, arguments);
        }, h.prototype.toLocaleString = h.prototype.toString, h.prototype.equals = function(O) {
          if (!h.isBuffer(O)) throw new TypeError("Argument must be a Buffer");
          return this === O || h.compare(this, O) === 0;
        }, h.prototype.inspect = function() {
          let O = "";
          const z = i.INSPECT_MAX_BYTES;
          return O = this.toString("hex", 0, z).replace(/(.{2})/g, "$1 ").trim(), this.length > z && (O += " ... "), "<Buffer " + O + ">";
        }, p && (h.prototype[p] = h.prototype.inspect), h.prototype.compare = function(O, z, J, tt, H) {
          if (Vt(O, Uint8Array) && (O = h.from(O, O.offset, O.byteLength)), !h.isBuffer(O)) throw new TypeError('The "target" argument must be one of type Buffer or Uint8Array. Received type ' + typeof O);
          if (z === void 0 && (z = 0), J === void 0 && (J = O ? O.length : 0), tt === void 0 && (tt = 0), H === void 0 && (H = this.length), z < 0 || J > O.length || tt < 0 || H > this.length) throw new RangeError("out of range index");
          if (tt >= H && z >= J) return 0;
          if (tt >= H) return -1;
          if (z >= J) return 1;
          if (this === O) return 0;
          let K = (H >>>= 0) - (tt >>>= 0), q = (J >>>= 0) - (z >>>= 0);
          const _ = Math.min(K, q), L = this.slice(tt, H), et = O.slice(z, J);
          for (let St = 0; St < _; ++St) if (L[St] !== et[St]) {
            K = L[St], q = et[St];
            break;
          }
          return K < q ? -1 : q < K ? 1 : 0;
        }, h.prototype.includes = function(O, z, J) {
          return this.indexOf(O, z, J) !== -1;
        }, h.prototype.indexOf = function(O, z, J) {
          return U(this, O, z, J, true);
        }, h.prototype.lastIndexOf = function(O, z, J) {
          return U(this, O, z, J, false);
        }, h.prototype.write = function(O, z, J, tt) {
          if (z === void 0) tt = "utf8", J = this.length, z = 0;
          else if (J === void 0 && typeof z == "string") tt = z, J = this.length, z = 0;
          else {
            if (!isFinite(z)) throw new Error("Buffer.write(string, encoding, offset[, length]) is no longer supported");
            z >>>= 0, isFinite(J) ? (J >>>= 0, tt === void 0 && (tt = "utf8")) : (tt = J, J = void 0);
          }
          const H = this.length - z;
          if ((J === void 0 || J > H) && (J = H), O.length > 0 && (J < 0 || z < 0) || z > this.length) throw new RangeError("Attempt to write outside buffer bounds");
          tt || (tt = "utf8");
          let K = false;
          for (; ; ) switch (tt) {
            case "hex":
              return Z(this, O, z, J);
            case "utf8":
            case "utf-8":
              return D(this, O, z, J);
            case "ascii":
            case "latin1":
            case "binary":
              return V(this, O, z, J);
            case "base64":
              return S(this, O, z, J);
            case "ucs2":
            case "ucs-2":
            case "utf16le":
            case "utf-16le":
              return x(this, O, z, J);
            default:
              if (K) throw new TypeError("Unknown encoding: " + tt);
              tt = ("" + tt).toLowerCase(), K = true;
          }
        }, h.prototype.toJSON = function() {
          return { type: "Buffer", data: Array.prototype.slice.call(this._arr || this, 0) };
        };
        const lt = 4096;
        function pt(O, z, J) {
          let tt = "";
          J = Math.min(O.length, J);
          for (let H = z; H < J; ++H) tt += String.fromCharCode(127 & O[H]);
          return tt;
        }
        function at(O, z, J) {
          let tt = "";
          J = Math.min(O.length, J);
          for (let H = z; H < J; ++H) tt += String.fromCharCode(O[H]);
          return tt;
        }
        function rt(O, z, J) {
          const tt = O.length;
          (!z || z < 0) && (z = 0), (!J || J < 0 || J > tt) && (J = tt);
          let H = "";
          for (let K = z; K < J; ++K) H += te[O[K]];
          return H;
        }
        function ot(O, z, J) {
          const tt = O.slice(z, J);
          let H = "";
          for (let K = 0; K < tt.length - 1; K += 2) H += String.fromCharCode(tt[K] + 256 * tt[K + 1]);
          return H;
        }
        function X(O, z, J) {
          if (O % 1 != 0 || O < 0) throw new RangeError("offset is not uint");
          if (O + z > J) throw new RangeError("Trying to access beyond buffer length");
        }
        function I(O, z, J, tt, H, K) {
          if (!h.isBuffer(O)) throw new TypeError('"buffer" argument must be a Buffer instance');
          if (z > H || z < K) throw new RangeError('"value" argument is out of bounds');
          if (J + tt > O.length) throw new RangeError("Index out of range");
        }
        function nt(O, z, J, tt, H) {
          bt(z, tt, H, O, J, 7);
          let K = Number(z & BigInt(4294967295));
          O[J++] = K, K >>= 8, O[J++] = K, K >>= 8, O[J++] = K, K >>= 8, O[J++] = K;
          let q = Number(z >> BigInt(32) & BigInt(4294967295));
          return O[J++] = q, q >>= 8, O[J++] = q, q >>= 8, O[J++] = q, q >>= 8, O[J++] = q, J;
        }
        function ft(O, z, J, tt, H) {
          bt(z, tt, H, O, J, 7);
          let K = Number(z & BigInt(4294967295));
          O[J + 7] = K, K >>= 8, O[J + 6] = K, K >>= 8, O[J + 5] = K, K >>= 8, O[J + 4] = K;
          let q = Number(z >> BigInt(32) & BigInt(4294967295));
          return O[J + 3] = q, q >>= 8, O[J + 2] = q, q >>= 8, O[J + 1] = q, q >>= 8, O[J] = q, J + 8;
        }
        function dt(O, z, J, tt, H, K) {
          if (J + tt > O.length) throw new RangeError("Index out of range");
          if (J < 0) throw new RangeError("Index out of range");
        }
        function Lt(O, z, J, tt, H) {
          return z = +z, J >>>= 0, H || dt(O, 0, J, 4), f.write(O, z, J, tt, 23, 4), J + 4;
        }
        function $(O, z, J, tt, H) {
          return z = +z, J >>>= 0, H || dt(O, 0, J, 8), f.write(O, z, J, tt, 52, 8), J + 8;
        }
        h.prototype.slice = function(O, z) {
          const J = this.length;
          (O = ~~O) < 0 ? (O += J) < 0 && (O = 0) : O > J && (O = J), (z = z === void 0 ? J : ~~z) < 0 ? (z += J) < 0 && (z = 0) : z > J && (z = J), z < O && (z = O);
          const tt = this.subarray(O, z);
          return Object.setPrototypeOf(tt, h.prototype), tt;
        }, h.prototype.readUintLE = h.prototype.readUIntLE = function(O, z, J) {
          O >>>= 0, z >>>= 0, J || X(O, z, this.length);
          let tt = this[O], H = 1, K = 0;
          for (; ++K < z && (H *= 256); ) tt += this[O + K] * H;
          return tt;
        }, h.prototype.readUintBE = h.prototype.readUIntBE = function(O, z, J) {
          O >>>= 0, z >>>= 0, J || X(O, z, this.length);
          let tt = this[O + --z], H = 1;
          for (; z > 0 && (H *= 256); ) tt += this[O + --z] * H;
          return tt;
        }, h.prototype.readUint8 = h.prototype.readUInt8 = function(O, z) {
          return O >>>= 0, z || X(O, 1, this.length), this[O];
        }, h.prototype.readUint16LE = h.prototype.readUInt16LE = function(O, z) {
          return O >>>= 0, z || X(O, 2, this.length), this[O] | this[O + 1] << 8;
        }, h.prototype.readUint16BE = h.prototype.readUInt16BE = function(O, z) {
          return O >>>= 0, z || X(O, 2, this.length), this[O] << 8 | this[O + 1];
        }, h.prototype.readUint32LE = h.prototype.readUInt32LE = function(O, z) {
          return O >>>= 0, z || X(O, 4, this.length), (this[O] | this[O + 1] << 8 | this[O + 2] << 16) + 16777216 * this[O + 3];
        }, h.prototype.readUint32BE = h.prototype.readUInt32BE = function(O, z) {
          return O >>>= 0, z || X(O, 4, this.length), 16777216 * this[O] + (this[O + 1] << 16 | this[O + 2] << 8 | this[O + 3]);
        }, h.prototype.readBigUInt64LE = yt(function(O) {
          xt(O >>>= 0, "offset");
          const z = this[O], J = this[O + 7];
          z !== void 0 && J !== void 0 || Ct(O, this.length - 8);
          const tt = z + 256 * this[++O] + 65536 * this[++O] + this[++O] * 2 ** 24, H = this[++O] + 256 * this[++O] + 65536 * this[++O] + J * 2 ** 24;
          return BigInt(tt) + (BigInt(H) << BigInt(32));
        }), h.prototype.readBigUInt64BE = yt(function(O) {
          xt(O >>>= 0, "offset");
          const z = this[O], J = this[O + 7];
          z !== void 0 && J !== void 0 || Ct(O, this.length - 8);
          const tt = z * 2 ** 24 + 65536 * this[++O] + 256 * this[++O] + this[++O], H = this[++O] * 2 ** 24 + 65536 * this[++O] + 256 * this[++O] + J;
          return (BigInt(tt) << BigInt(32)) + BigInt(H);
        }), h.prototype.readIntLE = function(O, z, J) {
          O >>>= 0, z >>>= 0, J || X(O, z, this.length);
          let tt = this[O], H = 1, K = 0;
          for (; ++K < z && (H *= 256); ) tt += this[O + K] * H;
          return H *= 128, tt >= H && (tt -= Math.pow(2, 8 * z)), tt;
        }, h.prototype.readIntBE = function(O, z, J) {
          O >>>= 0, z >>>= 0, J || X(O, z, this.length);
          let tt = z, H = 1, K = this[O + --tt];
          for (; tt > 0 && (H *= 256); ) K += this[O + --tt] * H;
          return H *= 128, K >= H && (K -= Math.pow(2, 8 * z)), K;
        }, h.prototype.readInt8 = function(O, z) {
          return O >>>= 0, z || X(O, 1, this.length), 128 & this[O] ? -1 * (255 - this[O] + 1) : this[O];
        }, h.prototype.readInt16LE = function(O, z) {
          O >>>= 0, z || X(O, 2, this.length);
          const J = this[O] | this[O + 1] << 8;
          return 32768 & J ? 4294901760 | J : J;
        }, h.prototype.readInt16BE = function(O, z) {
          O >>>= 0, z || X(O, 2, this.length);
          const J = this[O + 1] | this[O] << 8;
          return 32768 & J ? 4294901760 | J : J;
        }, h.prototype.readInt32LE = function(O, z) {
          return O >>>= 0, z || X(O, 4, this.length), this[O] | this[O + 1] << 8 | this[O + 2] << 16 | this[O + 3] << 24;
        }, h.prototype.readInt32BE = function(O, z) {
          return O >>>= 0, z || X(O, 4, this.length), this[O] << 24 | this[O + 1] << 16 | this[O + 2] << 8 | this[O + 3];
        }, h.prototype.readBigInt64LE = yt(function(O) {
          xt(O >>>= 0, "offset");
          const z = this[O], J = this[O + 7];
          z !== void 0 && J !== void 0 || Ct(O, this.length - 8);
          const tt = this[O + 4] + 256 * this[O + 5] + 65536 * this[O + 6] + (J << 24);
          return (BigInt(tt) << BigInt(32)) + BigInt(z + 256 * this[++O] + 65536 * this[++O] + this[++O] * 16777216);
        }), h.prototype.readBigInt64BE = yt(function(O) {
          xt(O >>>= 0, "offset");
          const z = this[O], J = this[O + 7];
          z !== void 0 && J !== void 0 || Ct(O, this.length - 8);
          const tt = (z << 24) + 65536 * this[++O] + 256 * this[++O] + this[++O];
          return (BigInt(tt) << BigInt(32)) + BigInt(this[++O] * 16777216 + 65536 * this[++O] + 256 * this[++O] + J);
        }), h.prototype.readFloatLE = function(O, z) {
          return O >>>= 0, z || X(O, 4, this.length), f.read(this, O, true, 23, 4);
        }, h.prototype.readFloatBE = function(O, z) {
          return O >>>= 0, z || X(O, 4, this.length), f.read(this, O, false, 23, 4);
        }, h.prototype.readDoubleLE = function(O, z) {
          return O >>>= 0, z || X(O, 8, this.length), f.read(this, O, true, 52, 8);
        }, h.prototype.readDoubleBE = function(O, z) {
          return O >>>= 0, z || X(O, 8, this.length), f.read(this, O, false, 52, 8);
        }, h.prototype.writeUintLE = h.prototype.writeUIntLE = function(O, z, J, tt) {
          O = +O, z >>>= 0, J >>>= 0, !tt && I(this, O, z, J, Math.pow(2, 8 * J) - 1, 0);
          let H = 1, K = 0;
          for (this[z] = 255 & O; ++K < J && (H *= 256); ) this[z + K] = O / H & 255;
          return z + J;
        }, h.prototype.writeUintBE = h.prototype.writeUIntBE = function(O, z, J, tt) {
          O = +O, z >>>= 0, J >>>= 0, !tt && I(this, O, z, J, Math.pow(2, 8 * J) - 1, 0);
          let H = J - 1, K = 1;
          for (this[z + H] = 255 & O; --H >= 0 && (K *= 256); ) this[z + H] = O / K & 255;
          return z + J;
        }, h.prototype.writeUint8 = h.prototype.writeUInt8 = function(O, z, J) {
          return O = +O, z >>>= 0, J || I(this, O, z, 1, 255, 0), this[z] = 255 & O, z + 1;
        }, h.prototype.writeUint16LE = h.prototype.writeUInt16LE = function(O, z, J) {
          return O = +O, z >>>= 0, J || I(this, O, z, 2, 65535, 0), this[z] = 255 & O, this[z + 1] = O >>> 8, z + 2;
        }, h.prototype.writeUint16BE = h.prototype.writeUInt16BE = function(O, z, J) {
          return O = +O, z >>>= 0, J || I(this, O, z, 2, 65535, 0), this[z] = O >>> 8, this[z + 1] = 255 & O, z + 2;
        }, h.prototype.writeUint32LE = h.prototype.writeUInt32LE = function(O, z, J) {
          return O = +O, z >>>= 0, J || I(this, O, z, 4, 4294967295, 0), this[z + 3] = O >>> 24, this[z + 2] = O >>> 16, this[z + 1] = O >>> 8, this[z] = 255 & O, z + 4;
        }, h.prototype.writeUint32BE = h.prototype.writeUInt32BE = function(O, z, J) {
          return O = +O, z >>>= 0, J || I(this, O, z, 4, 4294967295, 0), this[z] = O >>> 24, this[z + 1] = O >>> 16, this[z + 2] = O >>> 8, this[z + 3] = 255 & O, z + 4;
        }, h.prototype.writeBigUInt64LE = yt(function(O, z = 0) {
          return nt(this, O, z, BigInt(0), BigInt("0xffffffffffffffff"));
        }), h.prototype.writeBigUInt64BE = yt(function(O, z = 0) {
          return ft(this, O, z, BigInt(0), BigInt("0xffffffffffffffff"));
        }), h.prototype.writeIntLE = function(O, z, J, tt) {
          if (O = +O, z >>>= 0, !tt) {
            const _ = Math.pow(2, 8 * J - 1);
            I(this, O, z, J, _ - 1, -_);
          }
          let H = 0, K = 1, q = 0;
          for (this[z] = 255 & O; ++H < J && (K *= 256); ) O < 0 && q === 0 && this[z + H - 1] !== 0 && (q = 1), this[z + H] = (O / K | 0) - q & 255;
          return z + J;
        }, h.prototype.writeIntBE = function(O, z, J, tt) {
          if (O = +O, z >>>= 0, !tt) {
            const _ = Math.pow(2, 8 * J - 1);
            I(this, O, z, J, _ - 1, -_);
          }
          let H = J - 1, K = 1, q = 0;
          for (this[z + H] = 255 & O; --H >= 0 && (K *= 256); ) O < 0 && q === 0 && this[z + H + 1] !== 0 && (q = 1), this[z + H] = (O / K | 0) - q & 255;
          return z + J;
        }, h.prototype.writeInt8 = function(O, z, J) {
          return O = +O, z >>>= 0, J || I(this, O, z, 1, 127, -128), O < 0 && (O = 255 + O + 1), this[z] = 255 & O, z + 1;
        }, h.prototype.writeInt16LE = function(O, z, J) {
          return O = +O, z >>>= 0, J || I(this, O, z, 2, 32767, -32768), this[z] = 255 & O, this[z + 1] = O >>> 8, z + 2;
        }, h.prototype.writeInt16BE = function(O, z, J) {
          return O = +O, z >>>= 0, J || I(this, O, z, 2, 32767, -32768), this[z] = O >>> 8, this[z + 1] = 255 & O, z + 2;
        }, h.prototype.writeInt32LE = function(O, z, J) {
          return O = +O, z >>>= 0, J || I(this, O, z, 4, 2147483647, -2147483648), this[z] = 255 & O, this[z + 1] = O >>> 8, this[z + 2] = O >>> 16, this[z + 3] = O >>> 24, z + 4;
        }, h.prototype.writeInt32BE = function(O, z, J) {
          return O = +O, z >>>= 0, J || I(this, O, z, 4, 2147483647, -2147483648), O < 0 && (O = 4294967295 + O + 1), this[z] = O >>> 24, this[z + 1] = O >>> 16, this[z + 2] = O >>> 8, this[z + 3] = 255 & O, z + 4;
        }, h.prototype.writeBigInt64LE = yt(function(O, z = 0) {
          return nt(this, O, z, -BigInt("0x8000000000000000"), BigInt("0x7fffffffffffffff"));
        }), h.prototype.writeBigInt64BE = yt(function(O, z = 0) {
          return ft(this, O, z, -BigInt("0x8000000000000000"), BigInt("0x7fffffffffffffff"));
        }), h.prototype.writeFloatLE = function(O, z, J) {
          return Lt(this, O, z, true, J);
        }, h.prototype.writeFloatBE = function(O, z, J) {
          return Lt(this, O, z, false, J);
        }, h.prototype.writeDoubleLE = function(O, z, J) {
          return $(this, O, z, true, J);
        }, h.prototype.writeDoubleBE = function(O, z, J) {
          return $(this, O, z, false, J);
        }, h.prototype.copy = function(O, z, J, tt) {
          if (!h.isBuffer(O)) throw new TypeError("argument should be a Buffer");
          if (J || (J = 0), tt || tt === 0 || (tt = this.length), z >= O.length && (z = O.length), z || (z = 0), tt > 0 && tt < J && (tt = J), tt === J || O.length === 0 || this.length === 0) return 0;
          if (z < 0) throw new RangeError("targetStart out of bounds");
          if (J < 0 || J >= this.length) throw new RangeError("Index out of range");
          if (tt < 0) throw new RangeError("sourceEnd out of bounds");
          tt > this.length && (tt = this.length), O.length - z < tt - J && (tt = O.length - z + J);
          const H = tt - J;
          return this === O && typeof Uint8Array.prototype.copyWithin == "function" ? this.copyWithin(z, J, tt) : Uint8Array.prototype.set.call(O, this.subarray(J, tt), z), H;
        }, h.prototype.fill = function(O, z, J, tt) {
          if (typeof O == "string") {
            if (typeof z == "string" ? (tt = z, z = 0, J = this.length) : typeof J == "string" && (tt = J, J = this.length), tt !== void 0 && typeof tt != "string") throw new TypeError("encoding must be a string");
            if (typeof tt == "string" && !h.isEncoding(tt)) throw new TypeError("Unknown encoding: " + tt);
            if (O.length === 1) {
              const K = O.charCodeAt(0);
              (tt === "utf8" && K < 128 || tt === "latin1") && (O = K);
            }
          } else typeof O == "number" ? O &= 255 : typeof O == "boolean" && (O = Number(O));
          if (z < 0 || this.length < z || this.length < J) throw new RangeError("Out of range index");
          if (J <= z) return this;
          let H;
          if (z >>>= 0, J = J === void 0 ? this.length : J >>> 0, O || (O = 0), typeof O == "number") for (H = z; H < J; ++H) this[H] = O;
          else {
            const K = h.isBuffer(O) ? O : h.from(O, tt), q = K.length;
            if (q === 0) throw new TypeError('The value "' + O + '" is invalid for argument "value"');
            for (H = 0; H < J - z; ++H) this[H + z] = K[H % q];
          }
          return this;
        };
        const it = {};
        function mt(O, z, J) {
          it[O] = class extends J {
            constructor() {
              super(), Object.defineProperty(this, "message", { value: z.apply(this, arguments), writable: true, configurable: true }), this.name = `${this.name} [${O}]`, this.stack, delete this.name;
            }
            get code() {
              return O;
            }
            set code(tt) {
              Object.defineProperty(this, "code", { configurable: true, enumerable: true, value: tt, writable: true });
            }
            toString() {
              return `${this.name} [${O}]: ${this.message}`;
            }
          };
        }
        function Ot(O) {
          let z = "", J = O.length;
          const tt = O[0] === "-" ? 1 : 0;
          for (; J >= tt + 4; J -= 3) z = `_${O.slice(J - 3, J)}${z}`;
          return `${O.slice(0, J)}${z}`;
        }
        function bt(O, z, J, tt, H, K) {
          if (O > J || O < z) {
            const q = typeof z == "bigint" ? "n" : "";
            let _;
            throw _ = z === 0 || z === BigInt(0) ? `>= 0${q} and < 2${q} ** ${8 * (K + 1)}${q}` : `>= -(2${q} ** ${8 * (K + 1) - 1}${q}) and < 2 ** ${8 * (K + 1) - 1}${q}`, new it.ERR_OUT_OF_RANGE("value", _, O);
          }
          (function(q, _, L) {
            xt(_, "offset"), q[_] !== void 0 && q[_ + L] !== void 0 || Ct(_, q.length - (L + 1));
          })(tt, H, K);
        }
        function xt(O, z) {
          if (typeof O != "number") throw new it.ERR_INVALID_ARG_TYPE(z, "number", O);
        }
        function Ct(O, z, J) {
          throw Math.floor(O) !== O ? (xt(O, J), new it.ERR_OUT_OF_RANGE("offset", "an integer", O)) : z < 0 ? new it.ERR_BUFFER_OUT_OF_BOUNDS() : new it.ERR_OUT_OF_RANGE("offset", `>= 0 and <= ${z}`, O);
        }
        mt("ERR_BUFFER_OUT_OF_BOUNDS", function(O) {
          return O ? `${O} is outside of buffer bounds` : "Attempt to access memory outside buffer bounds";
        }, RangeError), mt("ERR_INVALID_ARG_TYPE", function(O, z) {
          return `The "${O}" argument must be of type number. Received type ${typeof z}`;
        }, TypeError), mt("ERR_OUT_OF_RANGE", function(O, z, J) {
          let tt = `The value of "${O}" is out of range.`, H = J;
          return Number.isInteger(J) && Math.abs(J) > 4294967296 ? H = Ot(String(J)) : typeof J == "bigint" && (H = String(J), (J > BigInt(2) ** BigInt(32) || J < -(BigInt(2) ** BigInt(32))) && (H = Ot(H)), H += "n"), tt += ` It must be ${z}. Received ${H}`, tt;
        }, RangeError);
        const Tt = /[^+/0-9A-Za-z-_]/g;
        function Bt(O, z) {
          let J;
          z = z || 1 / 0;
          const tt = O.length;
          let H = null;
          const K = [];
          for (let q = 0; q < tt; ++q) {
            if (J = O.charCodeAt(q), J > 55295 && J < 57344) {
              if (!H) {
                if (J > 56319) {
                  (z -= 3) > -1 && K.push(239, 191, 189);
                  continue;
                }
                if (q + 1 === tt) {
                  (z -= 3) > -1 && K.push(239, 191, 189);
                  continue;
                }
                H = J;
                continue;
              }
              if (J < 56320) {
                (z -= 3) > -1 && K.push(239, 191, 189), H = J;
                continue;
              }
              J = 65536 + (H - 55296 << 10 | J - 56320);
            } else H && (z -= 3) > -1 && K.push(239, 191, 189);
            if (H = null, J < 128) {
              if ((z -= 1) < 0) break;
              K.push(J);
            } else if (J < 2048) {
              if ((z -= 2) < 0) break;
              K.push(J >> 6 | 192, 63 & J | 128);
            } else if (J < 65536) {
              if ((z -= 3) < 0) break;
              K.push(J >> 12 | 224, J >> 6 & 63 | 128, 63 & J | 128);
            } else {
              if (!(J < 1114112)) throw new Error("Invalid code point");
              if ((z -= 4) < 0) break;
              K.push(J >> 18 | 240, J >> 12 & 63 | 128, J >> 6 & 63 | 128, 63 & J | 128);
            }
          }
          return K;
        }
        function At(O) {
          return d.toByteArray(function(z) {
            if ((z = (z = z.split("=")[0]).trim().replace(Tt, "")).length < 2) return "";
            for (; z.length % 4 != 0; ) z += "=";
            return z;
          }(O));
        }
        function Ut(O, z, J, tt) {
          let H;
          for (H = 0; H < tt && !(H + J >= z.length || H >= O.length); ++H) z[H + J] = O[H];
          return H;
        }
        function Vt(O, z) {
          return O instanceof z || O != null && O.constructor != null && O.constructor.name != null && O.constructor.name === z.name;
        }
        function oe(O) {
          return O != O;
        }
        const te = function() {
          const O = "0123456789abcdef", z = new Array(256);
          for (let J = 0; J < 16; ++J) {
            const tt = 16 * J;
            for (let H = 0; H < 16; ++H) z[tt + H] = O[J] + O[H];
          }
          return z;
        }();
        function yt(O) {
          return typeof BigInt > "u" ? Mt : O;
        }
        function Mt() {
          throw new Error("BigInt not supported");
        }
      }, 8399: (s, i, u) => {
        (i = s.exports = u(5412)).Stream = i, i.Readable = i, i.Writable = u(6708), i.Duplex = u(5382), i.Transform = u(4610), i.PassThrough = u(3600), i.finished = u(6238), i.pipeline = u(7758);
      }, 8636: (s, i, u) => {
        var d = u(920), f = u(7720), p = u(4765), g = Object.prototype.hasOwnProperty, b = { brackets: function(F) {
          return F + "[]";
        }, comma: "comma", indices: function(F, v) {
          return F + "[" + v + "]";
        }, repeat: function(F) {
          return F;
        } }, h = Array.isArray, m = Array.prototype.push, c = function(F, v) {
          m.apply(F, h(v) ? v : [v]);
        }, w = Date.prototype.toISOString, T = p.default, P = { addQueryPrefix: false, allowDots: false, allowEmptyArrays: false, arrayFormat: "indices", charset: "utf-8", charsetSentinel: false, commaRoundTrip: false, delimiter: "&", encode: true, encodeDotInKeys: false, encoder: f.encode, encodeValuesOnly: false, filter: void 0, format: T, formatter: p.formatters[T], indices: false, serializeDate: function(F) {
          return w.call(F);
        }, skipNulls: false, strictNullHandling: false }, k = {}, R = function F(v, U, M, Z, D, V, S, x, B, W, lt, pt, at, rt, ot, X, I, nt) {
          for (var ft, dt = v, Lt = nt, $ = 0, it = false; (Lt = Lt.get(k)) !== void 0 && !it; ) {
            var mt = Lt.get(v);
            if ($ += 1, mt !== void 0) {
              if (mt === $) throw new RangeError("Cyclic object value");
              it = true;
            }
            Lt.get(k) === void 0 && ($ = 0);
          }
          if (typeof W == "function" ? dt = W(U, dt) : dt instanceof Date ? dt = at(dt) : M === "comma" && h(dt) && (dt = f.maybeMap(dt, function(yt) {
            return yt instanceof Date ? at(yt) : yt;
          })), dt === null) {
            if (V) return B && !X ? B(U, P.encoder, I, "key", rt) : U;
            dt = "";
          }
          if (typeof (ft = dt) == "string" || typeof ft == "number" || typeof ft == "boolean" || typeof ft == "symbol" || typeof ft == "bigint" || f.isBuffer(dt)) return B ? [ot(X ? U : B(U, P.encoder, I, "key", rt)) + "=" + ot(B(dt, P.encoder, I, "value", rt))] : [ot(U) + "=" + ot(String(dt))];
          var Ot, bt = [];
          if (dt === void 0) return bt;
          if (M === "comma" && h(dt)) X && B && (dt = f.maybeMap(dt, B)), Ot = [{ value: dt.length > 0 ? dt.join(",") || null : void 0 }];
          else if (h(W)) Ot = W;
          else {
            var xt = Object.keys(dt);
            Ot = lt ? xt.sort(lt) : xt;
          }
          var Ct = x ? String(U).replace(/\./g, "%2E") : String(U), Tt = Z && h(dt) && dt.length === 1 ? Ct + "[]" : Ct;
          if (D && h(dt) && dt.length === 0) return Tt + "[]";
          for (var Bt = 0; Bt < Ot.length; ++Bt) {
            var At = Ot[Bt], Ut = typeof At == "object" && At && At.value !== void 0 ? At.value : dt[At];
            if (!S || Ut !== null) {
              var Vt = pt && x ? String(At).replace(/\./g, "%2E") : String(At), oe = h(dt) ? typeof M == "function" ? M(Tt, Vt) : Tt : Tt + (pt ? "." + Vt : "[" + Vt + "]");
              nt.set(v, $);
              var te = d();
              te.set(k, nt), c(bt, F(Ut, oe, M, Z, D, V, S, x, M === "comma" && X && h(dt) ? null : B, W, lt, pt, at, rt, ot, X, I, te));
            }
          }
          return bt;
        };
        s.exports = function(F, v) {
          var U, M = F, Z = function(rt) {
            if (!rt) return P;
            if (rt.allowEmptyArrays !== void 0 && typeof rt.allowEmptyArrays != "boolean") throw new TypeError("`allowEmptyArrays` option can only be `true` or `false`, when provided");
            if (rt.encodeDotInKeys !== void 0 && typeof rt.encodeDotInKeys != "boolean") throw new TypeError("`encodeDotInKeys` option can only be `true` or `false`, when provided");
            if (rt.encoder !== null && rt.encoder !== void 0 && typeof rt.encoder != "function") throw new TypeError("Encoder has to be a function.");
            var ot = rt.charset || P.charset;
            if (rt.charset !== void 0 && rt.charset !== "utf-8" && rt.charset !== "iso-8859-1") throw new TypeError("The charset option must be either utf-8, iso-8859-1, or undefined");
            var X = p.default;
            if (rt.format !== void 0) {
              if (!g.call(p.formatters, rt.format)) throw new TypeError("Unknown format option provided.");
              X = rt.format;
            }
            var I, nt = p.formatters[X], ft = P.filter;
            if ((typeof rt.filter == "function" || h(rt.filter)) && (ft = rt.filter), I = rt.arrayFormat in b ? rt.arrayFormat : "indices" in rt ? rt.indices ? "indices" : "repeat" : P.arrayFormat, "commaRoundTrip" in rt && typeof rt.commaRoundTrip != "boolean") throw new TypeError("`commaRoundTrip` must be a boolean, or absent");
            var dt = rt.allowDots === void 0 ? rt.encodeDotInKeys === true || P.allowDots : !!rt.allowDots;
            return { addQueryPrefix: typeof rt.addQueryPrefix == "boolean" ? rt.addQueryPrefix : P.addQueryPrefix, allowDots: dt, allowEmptyArrays: typeof rt.allowEmptyArrays == "boolean" ? !!rt.allowEmptyArrays : P.allowEmptyArrays, arrayFormat: I, charset: ot, charsetSentinel: typeof rt.charsetSentinel == "boolean" ? rt.charsetSentinel : P.charsetSentinel, commaRoundTrip: !!rt.commaRoundTrip, delimiter: rt.delimiter === void 0 ? P.delimiter : rt.delimiter, encode: typeof rt.encode == "boolean" ? rt.encode : P.encode, encodeDotInKeys: typeof rt.encodeDotInKeys == "boolean" ? rt.encodeDotInKeys : P.encodeDotInKeys, encoder: typeof rt.encoder == "function" ? rt.encoder : P.encoder, encodeValuesOnly: typeof rt.encodeValuesOnly == "boolean" ? rt.encodeValuesOnly : P.encodeValuesOnly, filter: ft, format: X, formatter: nt, serializeDate: typeof rt.serializeDate == "function" ? rt.serializeDate : P.serializeDate, skipNulls: typeof rt.skipNulls == "boolean" ? rt.skipNulls : P.skipNulls, sort: typeof rt.sort == "function" ? rt.sort : null, strictNullHandling: typeof rt.strictNullHandling == "boolean" ? rt.strictNullHandling : P.strictNullHandling };
          }(v);
          typeof Z.filter == "function" ? M = (0, Z.filter)("", M) : h(Z.filter) && (U = Z.filter);
          var D = [];
          if (typeof M != "object" || M === null) return "";
          var V = b[Z.arrayFormat], S = V === "comma" && Z.commaRoundTrip;
          U || (U = Object.keys(M)), Z.sort && U.sort(Z.sort);
          for (var x = d(), B = 0; B < U.length; ++B) {
            var W = U[B], lt = M[W];
            Z.skipNulls && lt === null || c(D, R(lt, W, V, S, Z.allowEmptyArrays, Z.strictNullHandling, Z.skipNulls, Z.encodeDotInKeys, Z.encode ? Z.encoder : null, Z.filter, Z.sort, Z.allowDots, Z.serializeDate, Z.format, Z.formatter, Z.encodeValuesOnly, Z.charset, x));
          }
          var pt = D.join(Z.delimiter), at = Z.addQueryPrefix === true ? "?" : "";
          return Z.charsetSentinel && (Z.charset === "iso-8859-1" ? at += "utf8=%26%2310003%3B&" : at += "utf8=%E2%9C%93&"), pt.length > 0 ? at + pt : "";
        };
      }, 8648: (s) => {
        s.exports = typeof Reflect < "u" && Reflect.getPrototypeOf || null;
      }, 8680: (s, i, u) => {
        u.d(i, { X: () => g });
        var d = u(8950), f = u(4076), p = u(784);
        function g(b, h) {
          if ("innerTransaction" in b) return g(b.innerTransaction, h);
          if (!function(F) {
            if (F.operations.length !== 1) return false;
            switch (F.operations[0].type) {
              case "invokeHostFunction":
              case "extendFootprintTtl":
              case "restoreFootprint":
                return true;
              default:
                return false;
            }
          }(b)) throw new TypeError("unsupported transaction: must contain exactly one invokeHostFunction, extendFootprintTtl, or restoreFootprint operation");
          var m = (0, p.jr)(h);
          if (!f.j.isSimulationSuccess(m)) throw new Error("simulation incorrect: ".concat(JSON.stringify(m)));
          var c = parseInt(b.fee) || 0, w = parseInt(m.minResourceFee) || 0, T = d.TransactionBuilder.cloneFrom(b, { fee: (c + w).toString(), sorobanData: m.transactionData.build(), networkPassphrase: b.networkPassphrase });
          if (b.operations[0].type === "invokeHostFunction") {
            var P;
            T.clearOperations();
            var k = b.operations[0], R = (P = k.auth) !== null && P !== void 0 ? P : [];
            T.addOperation(d.Operation.invokeHostFunction({ source: k.source, func: k.func, auth: R.length > 0 ? R : m.result.auth }));
          }
          return T;
        }
      }, 8732: (s, i, u) => {
        function d(R) {
          return d = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(F) {
            return typeof F;
          } : function(F) {
            return F && typeof Symbol == "function" && F.constructor === Symbol && F !== Symbol.prototype ? "symbol" : typeof F;
          }, d(R);
        }
        function f(R, F) {
          for (var v = 0; v < F.length; v++) {
            var U = F[v];
            U.enumerable = U.enumerable || false, U.configurable = true, "value" in U && (U.writable = true), Object.defineProperty(R, h(U.key), U);
          }
        }
        function p(R, F) {
          var v = Object.keys(R);
          if (Object.getOwnPropertySymbols) {
            var U = Object.getOwnPropertySymbols(R);
            F && (U = U.filter(function(M) {
              return Object.getOwnPropertyDescriptor(R, M).enumerable;
            })), v.push.apply(v, U);
          }
          return v;
        }
        function g(R) {
          for (var F = 1; F < arguments.length; F++) {
            var v = arguments[F] != null ? arguments[F] : {};
            F % 2 ? p(Object(v), true).forEach(function(U) {
              b(R, U, v[U]);
            }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(R, Object.getOwnPropertyDescriptors(v)) : p(Object(v)).forEach(function(U) {
              Object.defineProperty(R, U, Object.getOwnPropertyDescriptor(v, U));
            });
          }
          return R;
        }
        function b(R, F, v) {
          return (F = h(F)) in R ? Object.defineProperty(R, F, { value: v, enumerable: true, configurable: true, writable: true }) : R[F] = v, R;
        }
        function h(R) {
          var F = function(v, U) {
            if (d(v) != "object" || !v) return v;
            var M = v[Symbol.toPrimitive];
            if (M !== void 0) {
              var Z = M.call(v, U);
              if (d(Z) != "object") return Z;
              throw new TypeError("@@toPrimitive must return a primitive value.");
            }
            return (U === "string" ? String : Number)(v);
          }(R, "string");
          return d(F) == "symbol" ? F : F + "";
        }
        u.d(i, { T: () => k });
        var m, c, w, T = { allowHttp: false, timeout: 0 }, P = g({}, T), k = (m = function R() {
          (function(F, v) {
            if (!(F instanceof v)) throw new TypeError("Cannot call a class as a function");
          })(this, R);
        }, w = [{ key: "setAllowHttp", value: function(R) {
          P.allowHttp = R;
        } }, { key: "setTimeout", value: function(R) {
          P.timeout = R;
        } }, { key: "isAllowHttp", value: function() {
          return P.allowHttp;
        } }, { key: "getTimeout", value: function() {
          return P.timeout;
        } }, { key: "setDefault", value: function() {
          P = g({}, T);
        } }], (c = null) && f(m.prototype, c), w && f(m, w), Object.defineProperty(m, "prototype", { writable: false }), m);
      }, 8733: (s, i, u) => {
        var d;
        u.r(i), u.d(i, { AccountResponse: () => R, AxiosClient: () => At, HorizonApi: () => d, SERVER_TIME_MAP: () => Ct, Server: () => Wi, ServerApi: () => p, default: () => Ui, getCurrentServerTime: () => Ut }), function(zt) {
          var Et = function(ae) {
            return ae.constantProduct = "constant_product", ae;
          }({});
          zt.LiquidityPoolType = Et;
          var vt = function(ae) {
            return ae.createAccount = "create_account", ae.payment = "payment", ae.pathPayment = "path_payment_strict_receive", ae.createPassiveOffer = "create_passive_sell_offer", ae.manageOffer = "manage_sell_offer", ae.setOptions = "set_options", ae.changeTrust = "change_trust", ae.allowTrust = "allow_trust", ae.accountMerge = "account_merge", ae.inflation = "inflation", ae.manageData = "manage_data", ae.bumpSequence = "bump_sequence", ae.manageBuyOffer = "manage_buy_offer", ae.pathPaymentStrictSend = "path_payment_strict_send", ae.createClaimableBalance = "create_claimable_balance", ae.claimClaimableBalance = "claim_claimable_balance", ae.beginSponsoringFutureReserves = "begin_sponsoring_future_reserves", ae.endSponsoringFutureReserves = "end_sponsoring_future_reserves", ae.revokeSponsorship = "revoke_sponsorship", ae.clawback = "clawback", ae.clawbackClaimableBalance = "clawback_claimable_balance", ae.setTrustLineFlags = "set_trust_line_flags", ae.liquidityPoolDeposit = "liquidity_pool_deposit", ae.liquidityPoolWithdraw = "liquidity_pool_withdraw", ae.invokeHostFunction = "invoke_host_function", ae.bumpFootprintExpiration = "bump_footprint_expiration", ae.restoreFootprint = "restore_footprint", ae;
          }({});
          zt.OperationResponseType = vt;
          var Dt = function(ae) {
            return ae[ae.createAccount = 0] = "createAccount", ae[ae.payment = 1] = "payment", ae[ae.pathPayment = 2] = "pathPayment", ae[ae.createPassiveOffer = 3] = "createPassiveOffer", ae[ae.manageOffer = 4] = "manageOffer", ae[ae.setOptions = 5] = "setOptions", ae[ae.changeTrust = 6] = "changeTrust", ae[ae.allowTrust = 7] = "allowTrust", ae[ae.accountMerge = 8] = "accountMerge", ae[ae.inflation = 9] = "inflation", ae[ae.manageData = 10] = "manageData", ae[ae.bumpSequence = 11] = "bumpSequence", ae[ae.manageBuyOffer = 12] = "manageBuyOffer", ae[ae.pathPaymentStrictSend = 13] = "pathPaymentStrictSend", ae[ae.createClaimableBalance = 14] = "createClaimableBalance", ae[ae.claimClaimableBalance = 15] = "claimClaimableBalance", ae[ae.beginSponsoringFutureReserves = 16] = "beginSponsoringFutureReserves", ae[ae.endSponsoringFutureReserves = 17] = "endSponsoringFutureReserves", ae[ae.revokeSponsorship = 18] = "revokeSponsorship", ae[ae.clawback = 19] = "clawback", ae[ae.clawbackClaimableBalance = 20] = "clawbackClaimableBalance", ae[ae.setTrustLineFlags = 21] = "setTrustLineFlags", ae[ae.liquidityPoolDeposit = 22] = "liquidityPoolDeposit", ae[ae.liquidityPoolWithdraw = 23] = "liquidityPoolWithdraw", ae[ae.invokeHostFunction = 24] = "invokeHostFunction", ae[ae.bumpFootprintExpiration = 25] = "bumpFootprintExpiration", ae[ae.restoreFootprint = 26] = "restoreFootprint", ae;
          }({});
          zt.OperationResponseTypeI = Dt;
          var de = function(ae) {
            return ae.TX_FAILED = "tx_failed", ae.TX_BAD_SEQ = "tx_bad_seq", ae.TX_BAD_AUTH = "tx_bad_auth", ae.TX_BAD_AUTH_EXTRA = "tx_bad_auth_extra", ae.TX_FEE_BUMP_INNER_SUCCESS = "tx_fee_bump_inner_success", ae.TX_FEE_BUMP_INNER_FAILED = "tx_fee_bump_inner_failed", ae.TX_NOT_SUPPORTED = "tx_not_supported", ae.TX_SUCCESS = "tx_success", ae.TX_TOO_EARLY = "tx_too_early", ae.TX_TOO_LATE = "tx_too_late", ae.TX_MISSING_OPERATION = "tx_missing_operation", ae.TX_INSUFFICIENT_BALANCE = "tx_insufficient_balance", ae.TX_NO_SOURCE_ACCOUNT = "tx_no_source_account", ae.TX_INSUFFICIENT_FEE = "tx_insufficient_fee", ae.TX_INTERNAL_ERROR = "tx_internal_error", ae;
          }({});
          zt.TransactionFailedResultCodes = de;
        }(d || (d = {}));
        var f, p, g = ((f = {})[f.account_created = 0] = "account_created", f[f.account_removed = 1] = "account_removed", f[f.account_credited = 2] = "account_credited", f[f.account_debited = 3] = "account_debited", f[f.account_thresholds_updated = 4] = "account_thresholds_updated", f[f.account_home_domain_updated = 5] = "account_home_domain_updated", f[f.account_flags_updated = 6] = "account_flags_updated", f[f.account_inflation_destination_updated = 7] = "account_inflation_destination_updated", f[f.signer_created = 10] = "signer_created", f[f.signer_removed = 11] = "signer_removed", f[f.signer_updated = 12] = "signer_updated", f[f.trustline_created = 20] = "trustline_created", f[f.trustline_removed = 21] = "trustline_removed", f[f.trustline_updated = 22] = "trustline_updated", f[f.trustline_authorized = 23] = "trustline_authorized", f[f.trustline_deauthorized = 24] = "trustline_deauthorized", f[f.trustline_authorized_to_maintain_liabilities = 25] = "trustline_authorized_to_maintain_liabilities", f[f.trustline_flags_updated = 26] = "trustline_flags_updated", f[f.offer_created = 30] = "offer_created", f[f.offer_removed = 31] = "offer_removed", f[f.offer_updated = 32] = "offer_updated", f[f.trade = 33] = "trade", f[f.data_created = 40] = "data_created", f[f.data_removed = 41] = "data_removed", f[f.data_updated = 42] = "data_updated", f[f.sequence_bumped = 43] = "sequence_bumped", f[f.claimable_balance_created = 50] = "claimable_balance_created", f[f.claimable_balance_claimant_created = 51] = "claimable_balance_claimant_created", f[f.claimable_balance_claimed = 52] = "claimable_balance_claimed", f[f.account_sponsorship_created = 60] = "account_sponsorship_created", f[f.account_sponsorship_updated = 61] = "account_sponsorship_updated", f[f.account_sponsorship_removed = 62] = "account_sponsorship_removed", f[f.trustline_sponsorship_created = 63] = "trustline_sponsorship_created", f[f.trustline_sponsorship_updated = 64] = "trustline_sponsorship_updated", f[f.trustline_sponsorship_removed = 65] = "trustline_sponsorship_removed", f[f.data_sponsorship_created = 66] = "data_sponsorship_created", f[f.data_sponsorship_updated = 67] = "data_sponsorship_updated", f[f.data_sponsorship_removed = 68] = "data_sponsorship_removed", f[f.claimable_balance_sponsorship_created = 69] = "claimable_balance_sponsorship_created", f[f.claimable_balance_sponsorship_updated = 70] = "claimable_balance_sponsorship_updated", f[f.claimable_balance_sponsorship_removed = 71] = "claimable_balance_sponsorship_removed", f[f.signer_sponsorship_created = 72] = "signer_sponsorship_created", f[f.signer_sponsorship_updated = 73] = "signer_sponsorship_updated", f[f.signer_sponsorship_removed = 74] = "signer_sponsorship_removed", f[f.claimable_balance_clawed_back = 80] = "claimable_balance_clawed_back", f[f.liquidity_pool_deposited = 90] = "liquidity_pool_deposited", f[f.liquidity_pool_withdrew = 91] = "liquidity_pool_withdrew", f[f.liquidity_pool_trade = 92] = "liquidity_pool_trade", f[f.liquidity_pool_created = 93] = "liquidity_pool_created", f[f.liquidity_pool_removed = 94] = "liquidity_pool_removed", f[f.liquidity_pool_revoked = 95] = "liquidity_pool_revoked", f[f.contract_credited = 96] = "contract_credited", f[f.contract_debited = 97] = "contract_debited", f);
        (function(zt) {
          zt.EffectType = g;
          var Et = function(vt) {
            return vt.all = "all", vt.liquidityPools = "liquidity_pool", vt.orderbook = "orderbook", vt;
          }({});
          zt.TradeType = Et, d.OperationResponseType, d.OperationResponseTypeI;
        })(p || (p = {}));
        var b = u(8950);
        function h(zt) {
          return h = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(Et) {
            return typeof Et;
          } : function(Et) {
            return Et && typeof Symbol == "function" && Et.constructor === Symbol && Et !== Symbol.prototype ? "symbol" : typeof Et;
          }, h(zt);
        }
        function m(zt, Et) {
          return function(vt) {
            if (Array.isArray(vt)) return vt;
          }(zt) || function(vt, Dt) {
            var de = vt == null ? null : typeof Symbol < "u" && vt[Symbol.iterator] || vt["@@iterator"];
            if (de != null) {
              var ae, Qr, Sn, fn, Bn = [], Do = true, go = false;
              try {
                if (Sn = (de = de.call(vt)).next, Dt !== 0) for (; !(Do = (ae = Sn.call(de)).done) && (Bn.push(ae.value), Bn.length !== Dt); Do = true) ;
              } catch (Fn) {
                go = true, Qr = Fn;
              } finally {
                try {
                  if (!Do && de.return != null && (fn = de.return(), Object(fn) !== fn)) return;
                } finally {
                  if (go) throw Qr;
                }
              }
              return Bn;
            }
          }(zt, Et) || function(vt, Dt) {
            if (vt) {
              if (typeof vt == "string") return c(vt, Dt);
              var de = {}.toString.call(vt).slice(8, -1);
              return de === "Object" && vt.constructor && (de = vt.constructor.name), de === "Map" || de === "Set" ? Array.from(vt) : de === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(de) ? c(vt, Dt) : void 0;
            }
          }(zt, Et) || function() {
            throw new TypeError(`Invalid attempt to destructure non-iterable instance.
In order to be iterable, non-array objects must have a [Symbol.iterator]() method.`);
          }();
        }
        function c(zt, Et) {
          (Et == null || Et > zt.length) && (Et = zt.length);
          for (var vt = 0, Dt = Array(Et); vt < Et; vt++) Dt[vt] = zt[vt];
          return Dt;
        }
        function w(zt, Et) {
          for (var vt = 0; vt < Et.length; vt++) {
            var Dt = Et[vt];
            Dt.enumerable = Dt.enumerable || false, Dt.configurable = true, "value" in Dt && (Dt.writable = true), Object.defineProperty(zt, T(Dt.key), Dt);
          }
        }
        function T(zt) {
          var Et = function(vt, Dt) {
            if (h(vt) != "object" || !vt) return vt;
            var de = vt[Symbol.toPrimitive];
            if (de !== void 0) {
              var ae = de.call(vt, Dt);
              if (h(ae) != "object") return ae;
              throw new TypeError("@@toPrimitive must return a primitive value.");
            }
            return String(vt);
          }(zt, "string");
          return h(Et) == "symbol" ? Et : Et + "";
        }
        var P, k, R = (P = function zt(Et) {
          var vt = this;
          (function(Dt, de) {
            if (!(Dt instanceof de)) throw new TypeError("Cannot call a class as a function");
          })(this, zt), this._baseAccount = new b.Account(Et.account_id, Et.sequence), Object.entries(Et).forEach(function(Dt) {
            var de = m(Dt, 2), ae = de[0], Qr = de[1];
            vt[ae] = Qr;
          });
        }, (k = [{ key: "accountId", value: function() {
          return this._baseAccount.accountId();
        } }, { key: "sequenceNumber", value: function() {
          return this._baseAccount.sequenceNumber();
        } }, { key: "incrementSequenceNumber", value: function() {
          this._baseAccount.incrementSequenceNumber(), this.sequence = this._baseAccount.sequenceNumber();
        } }]) && w(P.prototype, k), Object.defineProperty(P, "prototype", { writable: false }), P), F = /^-?(?:\d+(?:\.\d*)?|\.\d+)(?:e[+-]?\d+)?$/i, v = Math.ceil, U = Math.floor, M = "[BigNumber Error] ", Z = M + "Number primitive has more than 15 significant digits: ", D = 1e14, V = 14, S = 9007199254740991, x = [1, 10, 100, 1e3, 1e4, 1e5, 1e6, 1e7, 1e8, 1e9, 1e10, 1e11, 1e12, 1e13], B = 1e7, W = 1e9;
        function lt(zt) {
          var Et = 0 | zt;
          return zt > 0 || zt === Et ? Et : Et - 1;
        }
        function pt(zt) {
          for (var Et, vt, Dt = 1, de = zt.length, ae = zt[0] + ""; Dt < de; ) {
            for (Et = zt[Dt++] + "", vt = V - Et.length; vt--; Et = "0" + Et) ;
            ae += Et;
          }
          for (de = ae.length; ae.charCodeAt(--de) === 48; ) ;
          return ae.slice(0, de + 1 || 1);
        }
        function at(zt, Et) {
          var vt, Dt, de = zt.c, ae = Et.c, Qr = zt.s, Sn = Et.s, fn = zt.e, Bn = Et.e;
          if (!Qr || !Sn) return null;
          if (vt = de && !de[0], Dt = ae && !ae[0], vt || Dt) return vt ? Dt ? 0 : -Sn : Qr;
          if (Qr != Sn) return Qr;
          if (vt = Qr < 0, Dt = fn == Bn, !de || !ae) return Dt ? 0 : !de ^ vt ? 1 : -1;
          if (!Dt) return fn > Bn ^ vt ? 1 : -1;
          for (Sn = (fn = de.length) < (Bn = ae.length) ? fn : Bn, Qr = 0; Qr < Sn; Qr++) if (de[Qr] != ae[Qr]) return de[Qr] > ae[Qr] ^ vt ? 1 : -1;
          return fn == Bn ? 0 : fn > Bn ^ vt ? 1 : -1;
        }
        function rt(zt, Et, vt, Dt) {
          if (zt < Et || zt > vt || zt !== U(zt)) throw Error(M + (Dt || "Argument") + (typeof zt == "number" ? zt < Et || zt > vt ? " out of range: " : " not an integer: " : " not a primitive number: ") + String(zt));
        }
        function ot(zt) {
          var Et = zt.c.length - 1;
          return lt(zt.e / V) == Et && zt.c[Et] % 2 != 0;
        }
        function X(zt, Et) {
          return (zt.length > 1 ? zt.charAt(0) + "." + zt.slice(1) : zt) + (Et < 0 ? "e" : "e+") + Et;
        }
        function I(zt, Et, vt) {
          var Dt, de;
          if (Et < 0) {
            for (de = vt + "."; ++Et; de += vt) ;
            zt = de + zt;
          } else if (++Et > (Dt = zt.length)) {
            for (de = vt, Et -= Dt; --Et; de += vt) ;
            zt += de;
          } else Et < Dt && (zt = zt.slice(0, Et) + "." + zt.slice(Et));
          return zt;
        }
        var nt = function zt(Et) {
          var vt, Dt, de, ae, Qr, Sn, fn, Bn, Do, go, Fn = Or.prototype = { constructor: Or, toString: null, valueOf: null }, No = new Or(1), Fo = 20, Vo = 4, bi = -7, gi = 21, ci = -1e7, me = 1e7, Ke = false, br = 1, yr = 0, xr = { prefix: "", groupSize: 3, secondaryGroupSize: 0, groupSeparator: ",", decimalSeparator: ".", fractionGroupSize: 0, fractionGroupSeparator: "\xA0", suffix: "" }, tn = "0123456789abcdefghijklmnopqrstuvwxyz", xn = true;
          function Or(ce, be) {
            var Ye, _r, or, dr, Cr, hr, Gr, Wr, zr = this;
            if (!(zr instanceof Or)) return new Or(ce, be);
            if (be == null) {
              if (ce && ce._isBigNumber === true) return zr.s = ce.s, void (!ce.c || ce.e > me ? zr.c = zr.e = null : ce.e < ci ? zr.c = [zr.e = 0] : (zr.e = ce.e, zr.c = ce.c.slice()));
              if ((hr = typeof ce == "number") && 0 * ce == 0) {
                if (zr.s = 1 / ce < 0 ? (ce = -ce, -1) : 1, ce === ~~ce) {
                  for (dr = 0, Cr = ce; Cr >= 10; Cr /= 10, dr++) ;
                  return void (dr > me ? zr.c = zr.e = null : (zr.e = dr, zr.c = [ce]));
                }
                Wr = String(ce);
              } else {
                if (!F.test(Wr = String(ce))) return de(zr, Wr, hr);
                zr.s = Wr.charCodeAt(0) == 45 ? (Wr = Wr.slice(1), -1) : 1;
              }
              (dr = Wr.indexOf(".")) > -1 && (Wr = Wr.replace(".", "")), (Cr = Wr.search(/e/i)) > 0 ? (dr < 0 && (dr = Cr), dr += +Wr.slice(Cr + 1), Wr = Wr.substring(0, Cr)) : dr < 0 && (dr = Wr.length);
            } else {
              if (rt(be, 2, tn.length, "Base"), be == 10 && xn) return Tn(zr = new Or(ce), Fo + zr.e + 1, Vo);
              if (Wr = String(ce), hr = typeof ce == "number") {
                if (0 * ce != 0) return de(zr, Wr, hr, be);
                if (zr.s = 1 / ce < 0 ? (Wr = Wr.slice(1), -1) : 1, Or.DEBUG && Wr.replace(/^0\.0*|\./, "").length > 15) throw Error(Z + ce);
              } else zr.s = Wr.charCodeAt(0) === 45 ? (Wr = Wr.slice(1), -1) : 1;
              for (Ye = tn.slice(0, be), dr = Cr = 0, Gr = Wr.length; Cr < Gr; Cr++) if (Ye.indexOf(_r = Wr.charAt(Cr)) < 0) {
                if (_r == ".") {
                  if (Cr > dr) {
                    dr = Gr;
                    continue;
                  }
                } else if (!or && (Wr == Wr.toUpperCase() && (Wr = Wr.toLowerCase()) || Wr == Wr.toLowerCase() && (Wr = Wr.toUpperCase()))) {
                  or = true, Cr = -1, dr = 0;
                  continue;
                }
                return de(zr, String(ce), hr, be);
              }
              hr = false, (dr = (Wr = Dt(Wr, be, 10, zr.s)).indexOf(".")) > -1 ? Wr = Wr.replace(".", "") : dr = Wr.length;
            }
            for (Cr = 0; Wr.charCodeAt(Cr) === 48; Cr++) ;
            for (Gr = Wr.length; Wr.charCodeAt(--Gr) === 48; ) ;
            if (Wr = Wr.slice(Cr, ++Gr)) {
              if (Gr -= Cr, hr && Or.DEBUG && Gr > 15 && (ce > S || ce !== U(ce))) throw Error(Z + zr.s * ce);
              if ((dr = dr - Cr - 1) > me) zr.c = zr.e = null;
              else if (dr < ci) zr.c = [zr.e = 0];
              else {
                if (zr.e = dr, zr.c = [], Cr = (dr + 1) % V, dr < 0 && (Cr += V), Cr < Gr) {
                  for (Cr && zr.c.push(+Wr.slice(0, Cr)), Gr -= V; Cr < Gr; ) zr.c.push(+Wr.slice(Cr, Cr += V));
                  Cr = V - (Wr = Wr.slice(Cr)).length;
                } else Cr -= Gr;
                for (; Cr--; Wr += "0") ;
                zr.c.push(+Wr);
              }
            } else zr.c = [zr.e = 0];
          }
          function vn(ce, be, Ye, _r) {
            var or, dr, Cr, hr, Gr;
            if (Ye == null ? Ye = Vo : rt(Ye, 0, 8), !ce.c) return ce.toString();
            if (or = ce.c[0], Cr = ce.e, be == null) Gr = pt(ce.c), Gr = _r == 1 || _r == 2 && (Cr <= bi || Cr >= gi) ? X(Gr, Cr) : I(Gr, Cr, "0");
            else if (dr = (ce = Tn(new Or(ce), be, Ye)).e, hr = (Gr = pt(ce.c)).length, _r == 1 || _r == 2 && (be <= dr || dr <= bi)) {
              for (; hr < be; Gr += "0", hr++) ;
              Gr = X(Gr, dr);
            } else if (be -= Cr + (_r === 2 && dr > Cr), Gr = I(Gr, dr, "0"), dr + 1 > hr) {
              if (--be > 0) for (Gr += "."; be--; Gr += "0") ;
            } else if ((be += dr - hr) > 0) for (dr + 1 == hr && (Gr += "."); be--; Gr += "0") ;
            return ce.s < 0 && or ? "-" + Gr : Gr;
          }
          function Kn(ce, be) {
            for (var Ye, _r, or = 1, dr = new Or(ce[0]); or < ce.length; or++) (!(_r = new Or(ce[or])).s || (Ye = at(dr, _r)) === be || Ye === 0 && dr.s === be) && (dr = _r);
            return dr;
          }
          function Qn(ce, be, Ye) {
            for (var _r = 1, or = be.length; !be[--or]; be.pop()) ;
            for (or = be[0]; or >= 10; or /= 10, _r++) ;
            return (Ye = _r + Ye * V - 1) > me ? ce.c = ce.e = null : Ye < ci ? ce.c = [ce.e = 0] : (ce.e = Ye, ce.c = be), ce;
          }
          function Tn(ce, be, Ye, _r) {
            var or, dr, Cr, hr, Gr, Wr, zr, Un = ce.c, lo = x;
            if (Un) {
              t: {
                for (or = 1, hr = Un[0]; hr >= 10; hr /= 10, or++) ;
                if ((dr = be - or) < 0) dr += V, Cr = be, Gr = Un[Wr = 0], zr = U(Gr / lo[or - Cr - 1] % 10);
                else if ((Wr = v((dr + 1) / V)) >= Un.length) {
                  if (!_r) break t;
                  for (; Un.length <= Wr; Un.push(0)) ;
                  Gr = zr = 0, or = 1, Cr = (dr %= V) - V + 1;
                } else {
                  for (Gr = hr = Un[Wr], or = 1; hr >= 10; hr /= 10, or++) ;
                  zr = (Cr = (dr %= V) - V + or) < 0 ? 0 : U(Gr / lo[or - Cr - 1] % 10);
                }
                if (_r = _r || be < 0 || Un[Wr + 1] != null || (Cr < 0 ? Gr : Gr % lo[or - Cr - 1]), _r = Ye < 4 ? (zr || _r) && (Ye == 0 || Ye == (ce.s < 0 ? 3 : 2)) : zr > 5 || zr == 5 && (Ye == 4 || _r || Ye == 6 && (dr > 0 ? Cr > 0 ? Gr / lo[or - Cr] : 0 : Un[Wr - 1]) % 10 & 1 || Ye == (ce.s < 0 ? 8 : 7)), be < 1 || !Un[0]) return Un.length = 0, _r ? (be -= ce.e + 1, Un[0] = lo[(V - be % V) % V], ce.e = -be || 0) : Un[0] = ce.e = 0, ce;
                if (dr == 0 ? (Un.length = Wr, hr = 1, Wr--) : (Un.length = Wr + 1, hr = lo[V - dr], Un[Wr] = Cr > 0 ? U(Gr / lo[or - Cr] % lo[Cr]) * hr : 0), _r) for (; ; ) {
                  if (Wr == 0) {
                    for (dr = 1, Cr = Un[0]; Cr >= 10; Cr /= 10, dr++) ;
                    for (Cr = Un[0] += hr, hr = 1; Cr >= 10; Cr /= 10, hr++) ;
                    dr != hr && (ce.e++, Un[0] == D && (Un[0] = 1));
                    break;
                  }
                  if (Un[Wr] += hr, Un[Wr] != D) break;
                  Un[Wr--] = 0, hr = 1;
                }
                for (dr = Un.length; Un[--dr] === 0; Un.pop()) ;
              }
              ce.e > me ? ce.c = ce.e = null : ce.e < ci && (ce.c = [ce.e = 0]);
            }
            return ce;
          }
          function In(ce) {
            var be, Ye = ce.e;
            return Ye === null ? ce.toString() : (be = pt(ce.c), be = Ye <= bi || Ye >= gi ? X(be, Ye) : I(be, Ye, "0"), ce.s < 0 ? "-" + be : be);
          }
          return Or.clone = zt, Or.ROUND_UP = 0, Or.ROUND_DOWN = 1, Or.ROUND_CEIL = 2, Or.ROUND_FLOOR = 3, Or.ROUND_HALF_UP = 4, Or.ROUND_HALF_DOWN = 5, Or.ROUND_HALF_EVEN = 6, Or.ROUND_HALF_CEIL = 7, Or.ROUND_HALF_FLOOR = 8, Or.EUCLID = 9, Or.config = Or.set = function(ce) {
            var be, Ye;
            if (ce != null) {
              if (typeof ce != "object") throw Error(M + "Object expected: " + ce);
              if (ce.hasOwnProperty(be = "DECIMAL_PLACES") && (rt(Ye = ce[be], 0, W, be), Fo = Ye), ce.hasOwnProperty(be = "ROUNDING_MODE") && (rt(Ye = ce[be], 0, 8, be), Vo = Ye), ce.hasOwnProperty(be = "EXPONENTIAL_AT") && ((Ye = ce[be]) && Ye.pop ? (rt(Ye[0], -1e9, 0, be), rt(Ye[1], 0, W, be), bi = Ye[0], gi = Ye[1]) : (rt(Ye, -1e9, W, be), bi = -(gi = Ye < 0 ? -Ye : Ye))), ce.hasOwnProperty(be = "RANGE")) if ((Ye = ce[be]) && Ye.pop) rt(Ye[0], -1e9, -1, be), rt(Ye[1], 1, W, be), ci = Ye[0], me = Ye[1];
              else {
                if (rt(Ye, -1e9, W, be), !Ye) throw Error(M + be + " cannot be zero: " + Ye);
                ci = -(me = Ye < 0 ? -Ye : Ye);
              }
              if (ce.hasOwnProperty(be = "CRYPTO")) {
                if ((Ye = ce[be]) !== !!Ye) throw Error(M + be + " not true or false: " + Ye);
                if (Ye) {
                  if (typeof crypto > "u" || !crypto || !crypto.getRandomValues && !crypto.randomBytes) throw Ke = !Ye, Error(M + "crypto unavailable");
                  Ke = Ye;
                } else Ke = Ye;
              }
              if (ce.hasOwnProperty(be = "MODULO_MODE") && (rt(Ye = ce[be], 0, 9, be), br = Ye), ce.hasOwnProperty(be = "POW_PRECISION") && (rt(Ye = ce[be], 0, W, be), yr = Ye), ce.hasOwnProperty(be = "FORMAT")) {
                if (typeof (Ye = ce[be]) != "object") throw Error(M + be + " not an object: " + Ye);
                xr = Ye;
              }
              if (ce.hasOwnProperty(be = "ALPHABET")) {
                if (typeof (Ye = ce[be]) != "string" || /^.?$|[+\-.\s]|(.).*\1/.test(Ye)) throw Error(M + be + " invalid: " + Ye);
                xn = Ye.slice(0, 10) == "0123456789", tn = Ye;
              }
            }
            return { DECIMAL_PLACES: Fo, ROUNDING_MODE: Vo, EXPONENTIAL_AT: [bi, gi], RANGE: [ci, me], CRYPTO: Ke, MODULO_MODE: br, POW_PRECISION: yr, FORMAT: xr, ALPHABET: tn };
          }, Or.isBigNumber = function(ce) {
            if (!ce || ce._isBigNumber !== true) return false;
            if (!Or.DEBUG) return true;
            var be, Ye, _r = ce.c, or = ce.e, dr = ce.s;
            t: if ({}.toString.call(_r) == "[object Array]") {
              if ((dr === 1 || dr === -1) && or >= -1e9 && or <= W && or === U(or)) {
                if (_r[0] === 0) {
                  if (or === 0 && _r.length === 1) return true;
                  break t;
                }
                if ((be = (or + 1) % V) < 1 && (be += V), String(_r[0]).length == be) {
                  for (be = 0; be < _r.length; be++) if ((Ye = _r[be]) < 0 || Ye >= D || Ye !== U(Ye)) break t;
                  if (Ye !== 0) return true;
                }
              }
            } else if (_r === null && or === null && (dr === null || dr === 1 || dr === -1)) return true;
            throw Error(M + "Invalid BigNumber: " + ce);
          }, Or.maximum = Or.max = function() {
            return Kn(arguments, -1);
          }, Or.minimum = Or.min = function() {
            return Kn(arguments, 1);
          }, Or.random = (ae = 9007199254740992, Qr = Math.random() * ae & 2097151 ? function() {
            return U(Math.random() * ae);
          } : function() {
            return 8388608 * (1073741824 * Math.random() | 0) + (8388608 * Math.random() | 0);
          }, function(ce) {
            var be, Ye, _r, or, dr, Cr = 0, hr = [], Gr = new Or(No);
            if (ce == null ? ce = Fo : rt(ce, 0, W), or = v(ce / V), Ke) if (crypto.getRandomValues) {
              for (be = crypto.getRandomValues(new Uint32Array(or *= 2)); Cr < or; ) (dr = 131072 * be[Cr] + (be[Cr + 1] >>> 11)) >= 9e15 ? (Ye = crypto.getRandomValues(new Uint32Array(2)), be[Cr] = Ye[0], be[Cr + 1] = Ye[1]) : (hr.push(dr % 1e14), Cr += 2);
              Cr = or / 2;
            } else {
              if (!crypto.randomBytes) throw Ke = false, Error(M + "crypto unavailable");
              for (be = crypto.randomBytes(or *= 7); Cr < or; ) (dr = 281474976710656 * (31 & be[Cr]) + 1099511627776 * be[Cr + 1] + 4294967296 * be[Cr + 2] + 16777216 * be[Cr + 3] + (be[Cr + 4] << 16) + (be[Cr + 5] << 8) + be[Cr + 6]) >= 9e15 ? crypto.randomBytes(7).copy(be, Cr) : (hr.push(dr % 1e14), Cr += 7);
              Cr = or / 7;
            }
            if (!Ke) for (; Cr < or; ) (dr = Qr()) < 9e15 && (hr[Cr++] = dr % 1e14);
            for (or = hr[--Cr], ce %= V, or && ce && (dr = x[V - ce], hr[Cr] = U(or / dr) * dr); hr[Cr] === 0; hr.pop(), Cr--) ;
            if (Cr < 0) hr = [_r = 0];
            else {
              for (_r = -1; hr[0] === 0; hr.splice(0, 1), _r -= V) ;
              for (Cr = 1, dr = hr[0]; dr >= 10; dr /= 10, Cr++) ;
              Cr < V && (_r -= V - Cr);
            }
            return Gr.e = _r, Gr.c = hr, Gr;
          }), Or.sum = function() {
            for (var ce = 1, be = arguments, Ye = new Or(be[0]); ce < be.length; ) Ye = Ye.plus(be[ce++]);
            return Ye;
          }, Dt = /* @__PURE__ */ function() {
            var ce = "0123456789";
            function be(Ye, _r, or, dr) {
              for (var Cr, hr, Gr = [0], Wr = 0, zr = Ye.length; Wr < zr; ) {
                for (hr = Gr.length; hr--; Gr[hr] *= _r) ;
                for (Gr[0] += dr.indexOf(Ye.charAt(Wr++)), Cr = 0; Cr < Gr.length; Cr++) Gr[Cr] > or - 1 && (Gr[Cr + 1] == null && (Gr[Cr + 1] = 0), Gr[Cr + 1] += Gr[Cr] / or | 0, Gr[Cr] %= or);
              }
              return Gr.reverse();
            }
            return function(Ye, _r, or, dr, Cr) {
              var hr, Gr, Wr, zr, Un, lo, po, zo, di = Ye.indexOf("."), vi = Fo, ko = Vo;
              for (di >= 0 && (zr = yr, yr = 0, Ye = Ye.replace(".", ""), lo = (zo = new Or(_r)).pow(Ye.length - di), yr = zr, zo.c = be(I(pt(lo.c), lo.e, "0"), 10, or, ce), zo.e = zo.c.length), Wr = zr = (po = be(Ye, _r, or, Cr ? (hr = tn, ce) : (hr = ce, tn))).length; po[--zr] == 0; po.pop()) ;
              if (!po[0]) return hr.charAt(0);
              if (di < 0 ? --Wr : (lo.c = po, lo.e = Wr, lo.s = dr, po = (lo = vt(lo, zo, vi, ko, or)).c, Un = lo.r, Wr = lo.e), di = po[Gr = Wr + vi + 1], zr = or / 2, Un = Un || Gr < 0 || po[Gr + 1] != null, Un = ko < 4 ? (di != null || Un) && (ko == 0 || ko == (lo.s < 0 ? 3 : 2)) : di > zr || di == zr && (ko == 4 || Un || ko == 6 && 1 & po[Gr - 1] || ko == (lo.s < 0 ? 8 : 7)), Gr < 1 || !po[0]) Ye = Un ? I(hr.charAt(1), -vi, hr.charAt(0)) : hr.charAt(0);
              else {
                if (po.length = Gr, Un) for (--or; ++po[--Gr] > or; ) po[Gr] = 0, Gr || (++Wr, po = [1].concat(po));
                for (zr = po.length; !po[--zr]; ) ;
                for (di = 0, Ye = ""; di <= zr; Ye += hr.charAt(po[di++])) ;
                Ye = I(Ye, Wr, hr.charAt(0));
              }
              return Ye;
            };
          }(), vt = /* @__PURE__ */ function() {
            function ce(_r, or, dr) {
              var Cr, hr, Gr, Wr, zr = 0, Un = _r.length, lo = or % B, po = or / B | 0;
              for (_r = _r.slice(); Un--; ) zr = ((hr = lo * (Gr = _r[Un] % B) + (Cr = po * Gr + (Wr = _r[Un] / B | 0) * lo) % B * B + zr) / dr | 0) + (Cr / B | 0) + po * Wr, _r[Un] = hr % dr;
              return zr && (_r = [zr].concat(_r)), _r;
            }
            function be(_r, or, dr, Cr) {
              var hr, Gr;
              if (dr != Cr) Gr = dr > Cr ? 1 : -1;
              else for (hr = Gr = 0; hr < dr; hr++) if (_r[hr] != or[hr]) {
                Gr = _r[hr] > or[hr] ? 1 : -1;
                break;
              }
              return Gr;
            }
            function Ye(_r, or, dr, Cr) {
              for (var hr = 0; dr--; ) _r[dr] -= hr, hr = _r[dr] < or[dr] ? 1 : 0, _r[dr] = hr * Cr + _r[dr] - or[dr];
              for (; !_r[0] && _r.length > 1; _r.splice(0, 1)) ;
            }
            return function(_r, or, dr, Cr, hr) {
              var Gr, Wr, zr, Un, lo, po, zo, di, vi, ko, Jo, xi, va, ra, hs, Xi, ba, _i = _r.s == or.s ? 1 : -1, Oi = _r.c, mi = or.c;
              if (!(Oi && Oi[0] && mi && mi[0])) return new Or(_r.s && or.s && (Oi ? !mi || Oi[0] != mi[0] : mi) ? Oi && Oi[0] == 0 || !mi ? 0 * _i : _i / 0 : NaN);
              for (vi = (di = new Or(_i)).c = [], _i = dr + (Wr = _r.e - or.e) + 1, hr || (hr = D, Wr = lt(_r.e / V) - lt(or.e / V), _i = _i / V | 0), zr = 0; mi[zr] == (Oi[zr] || 0); zr++) ;
              if (mi[zr] > (Oi[zr] || 0) && Wr--, _i < 0) vi.push(1), Un = true;
              else {
                for (ra = Oi.length, Xi = mi.length, zr = 0, _i += 2, (lo = U(hr / (mi[0] + 1))) > 1 && (mi = ce(mi, lo, hr), Oi = ce(Oi, lo, hr), Xi = mi.length, ra = Oi.length), va = Xi, Jo = (ko = Oi.slice(0, Xi)).length; Jo < Xi; ko[Jo++] = 0) ;
                ba = mi.slice(), ba = [0].concat(ba), hs = mi[0], mi[1] >= hr / 2 && hs++;
                do {
                  if (lo = 0, (Gr = be(mi, ko, Xi, Jo)) < 0) {
                    if (xi = ko[0], Xi != Jo && (xi = xi * hr + (ko[1] || 0)), (lo = U(xi / hs)) > 1) for (lo >= hr && (lo = hr - 1), zo = (po = ce(mi, lo, hr)).length, Jo = ko.length; be(po, ko, zo, Jo) == 1; ) lo--, Ye(po, Xi < zo ? ba : mi, zo, hr), zo = po.length, Gr = 1;
                    else lo == 0 && (Gr = lo = 1), zo = (po = mi.slice()).length;
                    if (zo < Jo && (po = [0].concat(po)), Ye(ko, po, Jo, hr), Jo = ko.length, Gr == -1) for (; be(mi, ko, Xi, Jo) < 1; ) lo++, Ye(ko, Xi < Jo ? ba : mi, Jo, hr), Jo = ko.length;
                  } else Gr === 0 && (lo++, ko = [0]);
                  vi[zr++] = lo, ko[0] ? ko[Jo++] = Oi[va] || 0 : (ko = [Oi[va]], Jo = 1);
                } while ((va++ < ra || ko[0] != null) && _i--);
                Un = ko[0] != null, vi[0] || vi.splice(0, 1);
              }
              if (hr == D) {
                for (zr = 1, _i = vi[0]; _i >= 10; _i /= 10, zr++) ;
                Tn(di, dr + (di.e = zr + Wr * V - 1) + 1, Cr, Un);
              } else di.e = Wr, di.r = +Un;
              return di;
            };
          }(), Sn = /^(-?)0([xbo])(?=\w[\w.]*$)/i, fn = /^([^.]+)\.$/, Bn = /^\.([^.]+)$/, Do = /^-?(Infinity|NaN)$/, go = /^\s*\+(?=[\w.])|^\s+|\s+$/g, de = function(ce, be, Ye, _r) {
            var or, dr = Ye ? be : be.replace(go, "");
            if (Do.test(dr)) ce.s = isNaN(dr) ? null : dr < 0 ? -1 : 1;
            else {
              if (!Ye && (dr = dr.replace(Sn, function(Cr, hr, Gr) {
                return or = (Gr = Gr.toLowerCase()) == "x" ? 16 : Gr == "b" ? 2 : 8, _r && _r != or ? Cr : hr;
              }), _r && (or = _r, dr = dr.replace(fn, "$1").replace(Bn, "0.$1")), be != dr)) return new Or(dr, or);
              if (Or.DEBUG) throw Error(M + "Not a" + (_r ? " base " + _r : "") + " number: " + be);
              ce.s = null;
            }
            ce.c = ce.e = null;
          }, Fn.absoluteValue = Fn.abs = function() {
            var ce = new Or(this);
            return ce.s < 0 && (ce.s = 1), ce;
          }, Fn.comparedTo = function(ce, be) {
            return at(this, new Or(ce, be));
          }, Fn.decimalPlaces = Fn.dp = function(ce, be) {
            var Ye, _r, or, dr = this;
            if (ce != null) return rt(ce, 0, W), be == null ? be = Vo : rt(be, 0, 8), Tn(new Or(dr), ce + dr.e + 1, be);
            if (!(Ye = dr.c)) return null;
            if (_r = ((or = Ye.length - 1) - lt(this.e / V)) * V, or = Ye[or]) for (; or % 10 == 0; or /= 10, _r--) ;
            return _r < 0 && (_r = 0), _r;
          }, Fn.dividedBy = Fn.div = function(ce, be) {
            return vt(this, new Or(ce, be), Fo, Vo);
          }, Fn.dividedToIntegerBy = Fn.idiv = function(ce, be) {
            return vt(this, new Or(ce, be), 0, 1);
          }, Fn.exponentiatedBy = Fn.pow = function(ce, be) {
            var Ye, _r, or, dr, Cr, hr, Gr, Wr, zr = this;
            if ((ce = new Or(ce)).c && !ce.isInteger()) throw Error(M + "Exponent not an integer: " + In(ce));
            if (be != null && (be = new Or(be)), Cr = ce.e > 14, !zr.c || !zr.c[0] || zr.c[0] == 1 && !zr.e && zr.c.length == 1 || !ce.c || !ce.c[0]) return Wr = new Or(Math.pow(+In(zr), Cr ? ce.s * (2 - ot(ce)) : +In(ce))), be ? Wr.mod(be) : Wr;
            if (hr = ce.s < 0, be) {
              if (be.c ? !be.c[0] : !be.s) return new Or(NaN);
              (_r = !hr && zr.isInteger() && be.isInteger()) && (zr = zr.mod(be));
            } else {
              if (ce.e > 9 && (zr.e > 0 || zr.e < -1 || (zr.e == 0 ? zr.c[0] > 1 || Cr && zr.c[1] >= 24e7 : zr.c[0] < 8e13 || Cr && zr.c[0] <= 9999975e7))) return dr = zr.s < 0 && ot(ce) ? -0 : 0, zr.e > -1 && (dr = 1 / dr), new Or(hr ? 1 / dr : dr);
              yr && (dr = v(yr / V + 2));
            }
            for (Cr ? (Ye = new Or(0.5), hr && (ce.s = 1), Gr = ot(ce)) : Gr = (or = Math.abs(+In(ce))) % 2, Wr = new Or(No); ; ) {
              if (Gr) {
                if (!(Wr = Wr.times(zr)).c) break;
                dr ? Wr.c.length > dr && (Wr.c.length = dr) : _r && (Wr = Wr.mod(be));
              }
              if (or) {
                if ((or = U(or / 2)) === 0) break;
                Gr = or % 2;
              } else if (Tn(ce = ce.times(Ye), ce.e + 1, 1), ce.e > 14) Gr = ot(ce);
              else {
                if ((or = +In(ce)) == 0) break;
                Gr = or % 2;
              }
              zr = zr.times(zr), dr ? zr.c && zr.c.length > dr && (zr.c.length = dr) : _r && (zr = zr.mod(be));
            }
            return _r ? Wr : (hr && (Wr = No.div(Wr)), be ? Wr.mod(be) : dr ? Tn(Wr, yr, Vo, void 0) : Wr);
          }, Fn.integerValue = function(ce) {
            var be = new Or(this);
            return ce == null ? ce = Vo : rt(ce, 0, 8), Tn(be, be.e + 1, ce);
          }, Fn.isEqualTo = Fn.eq = function(ce, be) {
            return at(this, new Or(ce, be)) === 0;
          }, Fn.isFinite = function() {
            return !!this.c;
          }, Fn.isGreaterThan = Fn.gt = function(ce, be) {
            return at(this, new Or(ce, be)) > 0;
          }, Fn.isGreaterThanOrEqualTo = Fn.gte = function(ce, be) {
            return (be = at(this, new Or(ce, be))) === 1 || be === 0;
          }, Fn.isInteger = function() {
            return !!this.c && lt(this.e / V) > this.c.length - 2;
          }, Fn.isLessThan = Fn.lt = function(ce, be) {
            return at(this, new Or(ce, be)) < 0;
          }, Fn.isLessThanOrEqualTo = Fn.lte = function(ce, be) {
            return (be = at(this, new Or(ce, be))) === -1 || be === 0;
          }, Fn.isNaN = function() {
            return !this.s;
          }, Fn.isNegative = function() {
            return this.s < 0;
          }, Fn.isPositive = function() {
            return this.s > 0;
          }, Fn.isZero = function() {
            return !!this.c && this.c[0] == 0;
          }, Fn.minus = function(ce, be) {
            var Ye, _r, or, dr, Cr = this, hr = Cr.s;
            if (be = (ce = new Or(ce, be)).s, !hr || !be) return new Or(NaN);
            if (hr != be) return ce.s = -be, Cr.plus(ce);
            var Gr = Cr.e / V, Wr = ce.e / V, zr = Cr.c, Un = ce.c;
            if (!Gr || !Wr) {
              if (!zr || !Un) return zr ? (ce.s = -be, ce) : new Or(Un ? Cr : NaN);
              if (!zr[0] || !Un[0]) return Un[0] ? (ce.s = -be, ce) : new Or(zr[0] ? Cr : Vo == 3 ? -0 : 0);
            }
            if (Gr = lt(Gr), Wr = lt(Wr), zr = zr.slice(), hr = Gr - Wr) {
              for ((dr = hr < 0) ? (hr = -hr, or = zr) : (Wr = Gr, or = Un), or.reverse(), be = hr; be--; or.push(0)) ;
              or.reverse();
            } else for (_r = (dr = (hr = zr.length) < (be = Un.length)) ? hr : be, hr = be = 0; be < _r; be++) if (zr[be] != Un[be]) {
              dr = zr[be] < Un[be];
              break;
            }
            if (dr && (or = zr, zr = Un, Un = or, ce.s = -ce.s), (be = (_r = Un.length) - (Ye = zr.length)) > 0) for (; be--; zr[Ye++] = 0) ;
            for (be = D - 1; _r > hr; ) {
              if (zr[--_r] < Un[_r]) {
                for (Ye = _r; Ye && !zr[--Ye]; zr[Ye] = be) ;
                --zr[Ye], zr[_r] += D;
              }
              zr[_r] -= Un[_r];
            }
            for (; zr[0] == 0; zr.splice(0, 1), --Wr) ;
            return zr[0] ? Qn(ce, zr, Wr) : (ce.s = Vo == 3 ? -1 : 1, ce.c = [ce.e = 0], ce);
          }, Fn.modulo = Fn.mod = function(ce, be) {
            var Ye, _r, or = this;
            return ce = new Or(ce, be), !or.c || !ce.s || ce.c && !ce.c[0] ? new Or(NaN) : !ce.c || or.c && !or.c[0] ? new Or(or) : (br == 9 ? (_r = ce.s, ce.s = 1, Ye = vt(or, ce, 0, 3), ce.s = _r, Ye.s *= _r) : Ye = vt(or, ce, 0, br), (ce = or.minus(Ye.times(ce))).c[0] || br != 1 || (ce.s = or.s), ce);
          }, Fn.multipliedBy = Fn.times = function(ce, be) {
            var Ye, _r, or, dr, Cr, hr, Gr, Wr, zr, Un, lo, po, zo, di, vi, ko = this, Jo = ko.c, xi = (ce = new Or(ce, be)).c;
            if (!(Jo && xi && Jo[0] && xi[0])) return !ko.s || !ce.s || Jo && !Jo[0] && !xi || xi && !xi[0] && !Jo ? ce.c = ce.e = ce.s = null : (ce.s *= ko.s, Jo && xi ? (ce.c = [0], ce.e = 0) : ce.c = ce.e = null), ce;
            for (_r = lt(ko.e / V) + lt(ce.e / V), ce.s *= ko.s, (Gr = Jo.length) < (Un = xi.length) && (zo = Jo, Jo = xi, xi = zo, or = Gr, Gr = Un, Un = or), or = Gr + Un, zo = []; or--; zo.push(0)) ;
            for (di = D, vi = B, or = Un; --or >= 0; ) {
              for (Ye = 0, lo = xi[or] % vi, po = xi[or] / vi | 0, dr = or + (Cr = Gr); dr > or; ) Ye = ((Wr = lo * (Wr = Jo[--Cr] % vi) + (hr = po * Wr + (zr = Jo[Cr] / vi | 0) * lo) % vi * vi + zo[dr] + Ye) / di | 0) + (hr / vi | 0) + po * zr, zo[dr--] = Wr % di;
              zo[dr] = Ye;
            }
            return Ye ? ++_r : zo.splice(0, 1), Qn(ce, zo, _r);
          }, Fn.negated = function() {
            var ce = new Or(this);
            return ce.s = -ce.s || null, ce;
          }, Fn.plus = function(ce, be) {
            var Ye, _r = this, or = _r.s;
            if (be = (ce = new Or(ce, be)).s, !or || !be) return new Or(NaN);
            if (or != be) return ce.s = -be, _r.minus(ce);
            var dr = _r.e / V, Cr = ce.e / V, hr = _r.c, Gr = ce.c;
            if (!dr || !Cr) {
              if (!hr || !Gr) return new Or(or / 0);
              if (!hr[0] || !Gr[0]) return Gr[0] ? ce : new Or(hr[0] ? _r : 0 * or);
            }
            if (dr = lt(dr), Cr = lt(Cr), hr = hr.slice(), or = dr - Cr) {
              for (or > 0 ? (Cr = dr, Ye = Gr) : (or = -or, Ye = hr), Ye.reverse(); or--; Ye.push(0)) ;
              Ye.reverse();
            }
            for ((or = hr.length) - (be = Gr.length) < 0 && (Ye = Gr, Gr = hr, hr = Ye, be = or), or = 0; be; ) or = (hr[--be] = hr[be] + Gr[be] + or) / D | 0, hr[be] = D === hr[be] ? 0 : hr[be] % D;
            return or && (hr = [or].concat(hr), ++Cr), Qn(ce, hr, Cr);
          }, Fn.precision = Fn.sd = function(ce, be) {
            var Ye, _r, or, dr = this;
            if (ce != null && ce !== !!ce) return rt(ce, 1, W), be == null ? be = Vo : rt(be, 0, 8), Tn(new Or(dr), ce, be);
            if (!(Ye = dr.c)) return null;
            if (_r = (or = Ye.length - 1) * V + 1, or = Ye[or]) {
              for (; or % 10 == 0; or /= 10, _r--) ;
              for (or = Ye[0]; or >= 10; or /= 10, _r++) ;
            }
            return ce && dr.e + 1 > _r && (_r = dr.e + 1), _r;
          }, Fn.shiftedBy = function(ce) {
            return rt(ce, -9007199254740991, S), this.times("1e" + ce);
          }, Fn.squareRoot = Fn.sqrt = function() {
            var ce, be, Ye, _r, or, dr = this, Cr = dr.c, hr = dr.s, Gr = dr.e, Wr = Fo + 4, zr = new Or("0.5");
            if (hr !== 1 || !Cr || !Cr[0]) return new Or(!hr || hr < 0 && (!Cr || Cr[0]) ? NaN : Cr ? dr : 1 / 0);
            if ((hr = Math.sqrt(+In(dr))) == 0 || hr == 1 / 0 ? (((be = pt(Cr)).length + Gr) % 2 == 0 && (be += "0"), hr = Math.sqrt(+be), Gr = lt((Gr + 1) / 2) - (Gr < 0 || Gr % 2), Ye = new Or(be = hr == 1 / 0 ? "5e" + Gr : (be = hr.toExponential()).slice(0, be.indexOf("e") + 1) + Gr)) : Ye = new Or(hr + ""), Ye.c[0]) {
              for ((hr = (Gr = Ye.e) + Wr) < 3 && (hr = 0); ; ) if (or = Ye, Ye = zr.times(or.plus(vt(dr, or, Wr, 1))), pt(or.c).slice(0, hr) === (be = pt(Ye.c)).slice(0, hr)) {
                if (Ye.e < Gr && --hr, (be = be.slice(hr - 3, hr + 1)) != "9999" && (_r || be != "4999")) {
                  +be && (+be.slice(1) || be.charAt(0) != "5") || (Tn(Ye, Ye.e + Fo + 2, 1), ce = !Ye.times(Ye).eq(dr));
                  break;
                }
                if (!_r && (Tn(or, or.e + Fo + 2, 0), or.times(or).eq(dr))) {
                  Ye = or;
                  break;
                }
                Wr += 4, hr += 4, _r = 1;
              }
            }
            return Tn(Ye, Ye.e + Fo + 1, Vo, ce);
          }, Fn.toExponential = function(ce, be) {
            return ce != null && (rt(ce, 0, W), ce++), vn(this, ce, be, 1);
          }, Fn.toFixed = function(ce, be) {
            return ce != null && (rt(ce, 0, W), ce = ce + this.e + 1), vn(this, ce, be);
          }, Fn.toFormat = function(ce, be, Ye) {
            var _r, or = this;
            if (Ye == null) ce != null && be && typeof be == "object" ? (Ye = be, be = null) : ce && typeof ce == "object" ? (Ye = ce, ce = be = null) : Ye = xr;
            else if (typeof Ye != "object") throw Error(M + "Argument not an object: " + Ye);
            if (_r = or.toFixed(ce, be), or.c) {
              var dr, Cr = _r.split("."), hr = +Ye.groupSize, Gr = +Ye.secondaryGroupSize, Wr = Ye.groupSeparator || "", zr = Cr[0], Un = Cr[1], lo = or.s < 0, po = lo ? zr.slice(1) : zr, zo = po.length;
              if (Gr && (dr = hr, hr = Gr, Gr = dr, zo -= dr), hr > 0 && zo > 0) {
                for (dr = zo % hr || hr, zr = po.substr(0, dr); dr < zo; dr += hr) zr += Wr + po.substr(dr, hr);
                Gr > 0 && (zr += Wr + po.slice(dr)), lo && (zr = "-" + zr);
              }
              _r = Un ? zr + (Ye.decimalSeparator || "") + ((Gr = +Ye.fractionGroupSize) ? Un.replace(new RegExp("\\d{" + Gr + "}\\B", "g"), "$&" + (Ye.fractionGroupSeparator || "")) : Un) : zr;
            }
            return (Ye.prefix || "") + _r + (Ye.suffix || "");
          }, Fn.toFraction = function(ce) {
            var be, Ye, _r, or, dr, Cr, hr, Gr, Wr, zr, Un, lo, po = this, zo = po.c;
            if (ce != null && (!(hr = new Or(ce)).isInteger() && (hr.c || hr.s !== 1) || hr.lt(No))) throw Error(M + "Argument " + (hr.isInteger() ? "out of range: " : "not an integer: ") + In(hr));
            if (!zo) return new Or(po);
            for (be = new Or(No), Wr = Ye = new Or(No), _r = Gr = new Or(No), lo = pt(zo), dr = be.e = lo.length - po.e - 1, be.c[0] = x[(Cr = dr % V) < 0 ? V + Cr : Cr], ce = !ce || hr.comparedTo(be) > 0 ? dr > 0 ? be : Wr : hr, Cr = me, me = 1 / 0, hr = new Or(lo), Gr.c[0] = 0; zr = vt(hr, be, 0, 1), (or = Ye.plus(zr.times(_r))).comparedTo(ce) != 1; ) Ye = _r, _r = or, Wr = Gr.plus(zr.times(or = Wr)), Gr = or, be = hr.minus(zr.times(or = be)), hr = or;
            return or = vt(ce.minus(Ye), _r, 0, 1), Gr = Gr.plus(or.times(Wr)), Ye = Ye.plus(or.times(_r)), Gr.s = Wr.s = po.s, Un = vt(Wr, _r, dr *= 2, Vo).minus(po).abs().comparedTo(vt(Gr, Ye, dr, Vo).minus(po).abs()) < 1 ? [Wr, _r] : [Gr, Ye], me = Cr, Un;
          }, Fn.toNumber = function() {
            return +In(this);
          }, Fn.toPrecision = function(ce, be) {
            return ce != null && rt(ce, 1, W), vn(this, ce, be, 2);
          }, Fn.toString = function(ce) {
            var be, Ye = this, _r = Ye.s, or = Ye.e;
            return or === null ? _r ? (be = "Infinity", _r < 0 && (be = "-" + be)) : be = "NaN" : (ce == null ? be = or <= bi || or >= gi ? X(pt(Ye.c), or) : I(pt(Ye.c), or, "0") : ce === 10 && xn ? be = I(pt((Ye = Tn(new Or(Ye), Fo + or + 1, Vo)).c), Ye.e, "0") : (rt(ce, 2, tn.length, "Base"), be = Dt(I(pt(Ye.c), or, "0"), 10, ce, _r, true)), _r < 0 && Ye.c[0] && (be = "-" + be)), be;
          }, Fn.valueOf = Fn.toJSON = function() {
            return In(this);
          }, Fn._isBigNumber = true, Fn[Symbol.toStringTag] = "BigNumber", Fn[Symbol.for("nodejs.util.inspect.custom")] = Fn.valueOf, Et != null && Or.set(Et), Or;
        }();
        const ft = nt;
        var dt = u(4193), Lt = u.n(dt), $ = u(9127), it = u.n($), mt = u(5976), Ot = u(9983);
        function bt(zt) {
          return bt = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(Et) {
            return typeof Et;
          } : function(Et) {
            return Et && typeof Symbol == "function" && Et.constructor === Symbol && Et !== Symbol.prototype ? "symbol" : typeof Et;
          }, bt(zt);
        }
        var xt = "14.0.0-rc.3", Ct = {}, Tt = (0, Ot.vt)({ headers: { "X-Client-Name": "js-stellar-sdk", "X-Client-Version": xt } });
        function Bt(zt) {
          return Math.floor(zt / 1e3);
        }
        Tt.interceptors.response.use(function(zt) {
          var Et = Lt()(zt.config.url).hostname(), vt = 0;
          if (zt.headers instanceof Headers) {
            var Dt = zt.headers.get("date");
            Dt && (vt = Bt(Date.parse(Dt)));
          } else if (bt(zt.headers) === "object" && "date" in zt.headers) {
            var de = zt.headers;
            typeof de.date == "string" && (vt = Bt(Date.parse(de.date)));
          }
          var ae = Bt((/* @__PURE__ */ new Date()).getTime());
          return Number.isNaN(vt) || (Ct[Et] = { serverTime: vt, localTimeRecorded: ae }), zt;
        });
        const At = Tt;
        function Ut(zt) {
          var Et = Ct[zt];
          if (!Et || !Et.localTimeRecorded || !Et.serverTime) return null;
          var vt = Et.serverTime, Dt = Et.localTimeRecorded, de = Bt((/* @__PURE__ */ new Date()).getTime());
          return de - Dt > 300 ? null : de - Dt + vt;
        }
        function Vt(zt) {
          return Vt = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(Et) {
            return typeof Et;
          } : function(Et) {
            return Et && typeof Symbol == "function" && Et.constructor === Symbol && Et !== Symbol.prototype ? "symbol" : typeof Et;
          }, Vt(zt);
        }
        function oe() {
          var zt, Et, vt = typeof Symbol == "function" ? Symbol : {}, Dt = vt.iterator || "@@iterator", de = vt.toStringTag || "@@toStringTag";
          function ae(No, Fo, Vo, bi) {
            var gi = Fo && Fo.prototype instanceof Sn ? Fo : Sn, ci = Object.create(gi.prototype);
            return te(ci, "_invoke", function(me, Ke, br) {
              var yr, xr, tn, xn = 0, Or = br || [], vn = false, Kn = { p: 0, n: 0, v: zt, a: Qn, f: Qn.bind(zt, 4), d: function(Tn, In) {
                return yr = Tn, xr = 0, tn = zt, Kn.n = In, Qr;
              } };
              function Qn(Tn, In) {
                for (xr = Tn, tn = In, Et = 0; !vn && xn && !ce && Et < Or.length; Et++) {
                  var ce, be = Or[Et], Ye = Kn.p, _r = be[2];
                  Tn > 3 ? (ce = _r === In) && (tn = be[(xr = be[4]) ? 5 : (xr = 3, 3)], be[4] = be[5] = zt) : be[0] <= Ye && ((ce = Tn < 2 && Ye < be[1]) ? (xr = 0, Kn.v = In, Kn.n = be[1]) : Ye < _r && (ce = Tn < 3 || be[0] > In || In > _r) && (be[4] = Tn, be[5] = In, Kn.n = _r, xr = 0));
                }
                if (ce || Tn > 1) return Qr;
                throw vn = true, In;
              }
              return function(Tn, In, ce) {
                if (xn > 1) throw TypeError("Generator is already running");
                for (vn && In === 1 && Qn(In, ce), xr = In, tn = ce; (Et = xr < 2 ? zt : tn) || !vn; ) {
                  yr || (xr ? xr < 3 ? (xr > 1 && (Kn.n = -1), Qn(xr, tn)) : Kn.n = tn : Kn.v = tn);
                  try {
                    if (xn = 2, yr) {
                      if (xr || (Tn = "next"), Et = yr[Tn]) {
                        if (!(Et = Et.call(yr, tn))) throw TypeError("iterator result is not an object");
                        if (!Et.done) return Et;
                        tn = Et.value, xr < 2 && (xr = 0);
                      } else xr === 1 && (Et = yr.return) && Et.call(yr), xr < 2 && (tn = TypeError("The iterator does not provide a '" + Tn + "' method"), xr = 1);
                      yr = zt;
                    } else if ((Et = (vn = Kn.n < 0) ? tn : me.call(Ke, Kn)) !== Qr) break;
                  } catch (be) {
                    yr = zt, xr = 1, tn = be;
                  } finally {
                    xn = 1;
                  }
                }
                return { value: Et, done: vn };
              };
            }(No, Vo, bi), true), ci;
          }
          var Qr = {};
          function Sn() {
          }
          function fn() {
          }
          function Bn() {
          }
          Et = Object.getPrototypeOf;
          var Do = [][Dt] ? Et(Et([][Dt]())) : (te(Et = {}, Dt, function() {
            return this;
          }), Et), go = Bn.prototype = Sn.prototype = Object.create(Do);
          function Fn(No) {
            return Object.setPrototypeOf ? Object.setPrototypeOf(No, Bn) : (No.__proto__ = Bn, te(No, de, "GeneratorFunction")), No.prototype = Object.create(go), No;
          }
          return fn.prototype = Bn, te(go, "constructor", Bn), te(Bn, "constructor", fn), fn.displayName = "GeneratorFunction", te(Bn, de, "GeneratorFunction"), te(go), te(go, de, "Generator"), te(go, Dt, function() {
            return this;
          }), te(go, "toString", function() {
            return "[object Generator]";
          }), (oe = function() {
            return { w: ae, m: Fn };
          })();
        }
        function te(zt, Et, vt, Dt) {
          var de = Object.defineProperty;
          try {
            de({}, "", {});
          } catch {
            de = 0;
          }
          te = function(ae, Qr, Sn, fn) {
            if (Qr) de ? de(ae, Qr, { value: Sn, enumerable: !fn, configurable: !fn, writable: !fn }) : ae[Qr] = Sn;
            else {
              let Bn = function(Do, go) {
                te(ae, Do, function(Fn) {
                  return this._invoke(Do, go, Fn);
                });
              };
              Bn("next", 0), Bn("throw", 1), Bn("return", 2);
            }
          }, te(zt, Et, vt, Dt);
        }
        function yt(zt, Et, vt, Dt, de, ae, Qr) {
          try {
            var Sn = zt[ae](Qr), fn = Sn.value;
          } catch (Bn) {
            return void vt(Bn);
          }
          Sn.done ? Et(fn) : Promise.resolve(fn).then(Dt, de);
        }
        function Mt(zt) {
          return function() {
            var Et = this, vt = arguments;
            return new Promise(function(Dt, de) {
              var ae = zt.apply(Et, vt);
              function Qr(fn) {
                yt(ae, Dt, de, Qr, Sn, "next", fn);
              }
              function Sn(fn) {
                yt(ae, Dt, de, Qr, Sn, "throw", fn);
              }
              Qr(void 0);
            });
          };
        }
        function O(zt, Et) {
          for (var vt = 0; vt < Et.length; vt++) {
            var Dt = Et[vt];
            Dt.enumerable = Dt.enumerable || false, Dt.configurable = true, "value" in Dt && (Dt.writable = true), Object.defineProperty(zt, z(Dt.key), Dt);
          }
        }
        function z(zt) {
          var Et = function(vt, Dt) {
            if (Vt(vt) != "object" || !vt) return vt;
            var de = vt[Symbol.toPrimitive];
            if (de !== void 0) {
              var ae = de.call(vt, Dt);
              if (Vt(ae) != "object") return ae;
              throw new TypeError("@@toPrimitive must return a primitive value.");
            }
            return String(vt);
          }(zt, "string");
          return Vt(Et) == "symbol" ? Et : Et + "";
        }
        var J, tt, H, K, q = ["transaction"], _ = u.g;
        J = (tt = (H = _.EventSource) !== null && H !== void 0 ? H : (K = _.window) === null || K === void 0 ? void 0 : K.EventSource) !== null && tt !== void 0 ? tt : u(1731);
        var L, et, St = function(zt, Et, vt) {
          return Et && O(zt.prototype, Et), Object.defineProperty(zt, "prototype", { writable: false }), zt;
        }(function zt(Et) {
          var vt = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : "";
          (function(Dt, de) {
            if (!(Dt instanceof de)) throw new TypeError("Cannot call a class as a function");
          })(this, zt), this.url = Et.clone(), this.filter = [], this.originalSegments = this.url.segment() || [], this.neighborRoot = vt;
        }, [{ key: "call", value: function() {
          var zt = this;
          return this.checkFilter(), this._sendNormalRequest(this.url).then(function(Et) {
            return zt._parseResponse(Et);
          });
        } }, { key: "stream", value: function() {
          var zt, Et, vt = this, Dt = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};
          if (J === void 0) throw new Error("Streaming requires eventsource to be enabled. If you need this functionality, compile with USE_EVENTSOURCE=true.");
          this.checkFilter(), this.url.setQuery("X-Client-Name", "js-stellar-sdk"), this.url.setQuery("X-Client-Version", xt);
          var de = function() {
            Et = setTimeout(function() {
              var Qr;
              (Qr = zt) === null || Qr === void 0 || Qr.close(), zt = ae();
            }, Dt.reconnectTimeout || 15e3);
          }, ae = function() {
            try {
              zt = new J(vt.url.toString());
            } catch (Do) {
              Dt.onerror && Dt.onerror(Do);
            }
            if (de(), !zt) return zt;
            var Qr = false, Sn = function() {
              Qr || (clearTimeout(Et), zt.close(), ae(), Qr = true);
            }, fn = function(Do) {
              if (Do.type !== "close") {
                var go = Do.data ? vt._parseRecord(JSON.parse(Do.data)) : Do;
                go.paging_token && vt.url.setQuery("cursor", go.paging_token), clearTimeout(Et), de(), Dt.onmessage !== void 0 && Dt.onmessage(go);
              } else Sn();
            }, Bn = function(Do) {
              Dt.onerror && Dt.onerror(Do);
            };
            return zt.addEventListener ? (zt.addEventListener("message", fn.bind(vt)), zt.addEventListener("error", Bn.bind(vt)), zt.addEventListener("close", Sn.bind(vt))) : (zt.onmessage = fn.bind(vt), zt.onerror = Bn.bind(vt)), zt;
          };
          return ae(), function() {
            var Qr;
            clearTimeout(Et), (Qr = zt) === null || Qr === void 0 || Qr.close();
          };
        } }, { key: "cursor", value: function(zt) {
          return this.url.setQuery("cursor", zt), this;
        } }, { key: "limit", value: function(zt) {
          return this.url.setQuery("limit", zt.toString()), this;
        } }, { key: "order", value: function(zt) {
          return this.url.setQuery("order", zt), this;
        } }, { key: "join", value: function(zt) {
          return this.url.setQuery("join", zt), this;
        } }, { key: "forEndpoint", value: function(zt, Et) {
          if (this.neighborRoot === "") throw new Error("Invalid usage: neighborRoot not set in constructor");
          return this.filter.push([zt, Et, this.neighborRoot]), this;
        } }, { key: "checkFilter", value: function() {
          if (this.filter.length >= 2) throw new mt.v7("Too many filters specified", this.filter);
          if (this.filter.length === 1) {
            var zt = this.originalSegments.concat(this.filter[0]);
            this.url.segment(zt);
          }
        } }, { key: "_requestFnForLink", value: function(zt) {
          var Et = this;
          return Mt(oe().m(function vt() {
            var Dt, de, ae, Qr, Sn = arguments;
            return oe().w(function(fn) {
              for (; ; ) switch (fn.n) {
                case 0:
                  return Dt = Sn.length > 0 && Sn[0] !== void 0 ? Sn[0] : {}, zt.templated ? (ae = it()(zt.href), de = Lt()(ae.expand(Dt))) : de = Lt()(zt.href), fn.n = 1, Et._sendNormalRequest(de);
                case 1:
                  return Qr = fn.v, fn.a(2, Et._parseResponse(Qr));
              }
            }, vt);
          }));
        } }, { key: "_parseRecord", value: function(zt) {
          var Et = this;
          return zt._links && Object.keys(zt._links).forEach(function(vt) {
            var Dt = zt._links[vt], de = false;
            if (zt[vt] !== void 0 && (zt["".concat(vt, "_attr")] = zt[vt], de = true), de && q.indexOf(vt) >= 0) {
              var ae = Et._parseRecord(zt[vt]);
              zt[vt] = Mt(oe().m(function Qr() {
                return oe().w(function(Sn) {
                  for (; ; ) if (Sn.n === 0) return Sn.a(2, ae);
                }, Qr);
              }));
            } else zt[vt] = Et._requestFnForLink(Dt);
          }), zt;
        } }, { key: "_sendNormalRequest", value: (et = Mt(oe().m(function zt(Et) {
          var vt;
          return oe().w(function(Dt) {
            for (; ; ) if (Dt.n === 0) return (vt = Et).authority() === "" && (vt = vt.authority(this.url.authority())), vt.protocol() === "" && (vt = vt.protocol(this.url.protocol())), Dt.a(2, Tt.get(vt.toString()).then(function(de) {
              return de.data;
            }).catch(this._handleNetworkError));
          }, zt, this);
        })), function(zt) {
          return et.apply(this, arguments);
        }) }, { key: "_parseResponse", value: function(zt) {
          return zt._embedded && zt._embedded.records ? this._toCollectionPage(zt) : this._parseRecord(zt);
        } }, { key: "_toCollectionPage", value: function(zt) {
          for (var Et, vt, Dt = this, de = 0; de < zt._embedded.records.length; de += 1) zt._embedded.records[de] = this._parseRecord(zt._embedded.records[de]);
          return { records: zt._embedded.records, next: (vt = Mt(oe().m(function ae() {
            var Qr;
            return oe().w(function(Sn) {
              for (; ; ) switch (Sn.n) {
                case 0:
                  return Sn.n = 1, Dt._sendNormalRequest(Lt()(zt._links.next.href));
                case 1:
                  return Qr = Sn.v, Sn.a(2, Dt._toCollectionPage(Qr));
              }
            }, ae);
          })), function() {
            return vt.apply(this, arguments);
          }), prev: (Et = Mt(oe().m(function ae() {
            var Qr;
            return oe().w(function(Sn) {
              for (; ; ) switch (Sn.n) {
                case 0:
                  return Sn.n = 1, Dt._sendNormalRequest(Lt()(zt._links.prev.href));
                case 1:
                  return Qr = Sn.v, Sn.a(2, Dt._toCollectionPage(Qr));
              }
            }, ae);
          })), function() {
            return Et.apply(this, arguments);
          }) };
        } }, { key: "_handleNetworkError", value: (L = Mt(oe().m(function zt(Et) {
          var vt, Dt, de;
          return oe().w(function(ae) {
            for (; ; ) switch (ae.n) {
              case 0:
                if (!Et.response || !Et.response.status) {
                  ae.n = 4;
                  break;
                }
                de = Et.response.status, ae.n = de === 404 ? 1 : 2;
                break;
              case 1:
                return ae.a(2, Promise.reject(new mt.m_((vt = Et.response.statusText) !== null && vt !== void 0 ? vt : "Not Found", Et.response.data)));
              case 2:
                return ae.a(2, Promise.reject(new mt.Dr((Dt = Et.response.statusText) !== null && Dt !== void 0 ? Dt : "Unknown", Et.response.data)));
              case 3:
                ae.n = 5;
                break;
              case 4:
                return ae.a(2, Promise.reject(new Error(Et.message)));
              case 5:
                return ae.a(2);
            }
          }, zt);
        })), function(zt) {
          return L.apply(this, arguments);
        }) }]), kt = u(8732);
        function ct(zt) {
          return ct = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(Et) {
            return typeof Et;
          } : function(Et) {
            return Et && typeof Symbol == "function" && Et.constructor === Symbol && Et !== Symbol.prototype ? "symbol" : typeof Et;
          }, ct(zt);
        }
        function j(zt, Et) {
          for (var vt = 0; vt < Et.length; vt++) {
            var Dt = Et[vt];
            Dt.enumerable = Dt.enumerable || false, Dt.configurable = true, "value" in Dt && (Dt.writable = true), Object.defineProperty(zt, ut(Dt.key), Dt);
          }
        }
        function ut(zt) {
          var Et = function(vt, Dt) {
            if (ct(vt) != "object" || !vt) return vt;
            var de = vt[Symbol.toPrimitive];
            if (de !== void 0) {
              var ae = de.call(vt, Dt);
              if (ct(ae) != "object") return ae;
              throw new TypeError("@@toPrimitive must return a primitive value.");
            }
            return String(vt);
          }(zt, "string");
          return ct(Et) == "symbol" ? Et : Et + "";
        }
        function gt(zt, Et, vt) {
          return Et = Ht(Et), function(Dt, de) {
            if (de && (ct(de) == "object" || typeof de == "function")) return de;
            if (de !== void 0) throw new TypeError("Derived constructors may only return object or undefined");
            return function(ae) {
              if (ae === void 0) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
              return ae;
            }(Dt);
          }(zt, $t() ? Reflect.construct(Et, vt || [], Ht(zt).constructor) : Et.apply(zt, vt));
        }
        function $t() {
          try {
            var zt = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
            }));
          } catch {
          }
          return ($t = function() {
            return !!zt;
          })();
        }
        function Ht(zt) {
          return Ht = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function(Et) {
            return Et.__proto__ || Object.getPrototypeOf(Et);
          }, Ht(zt);
        }
        function wt(zt, Et) {
          return wt = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function(vt, Dt) {
            return vt.__proto__ = Dt, vt;
          }, wt(zt, Et);
        }
        var Jt = function(zt) {
          function Et(vt) {
            var Dt;
            return function(de, ae) {
              if (!(de instanceof ae)) throw new TypeError("Cannot call a class as a function");
            }(this, Et), (Dt = gt(this, Et, [vt])).url.segment("accounts"), Dt;
          }
          return function(vt, Dt) {
            if (typeof Dt != "function" && Dt !== null) throw new TypeError("Super expression must either be null or a function");
            vt.prototype = Object.create(Dt && Dt.prototype, { constructor: { value: vt, writable: true, configurable: true } }), Object.defineProperty(vt, "prototype", { writable: false }), Dt && wt(vt, Dt);
          }(Et, zt), function(vt, Dt, de) {
            return Dt && j(vt.prototype, Dt), Object.defineProperty(vt, "prototype", { writable: false }), vt;
          }(Et, [{ key: "accountId", value: function(vt) {
            var Dt = new St(this.url.clone());
            return Dt.filter.push([vt]), Dt;
          } }, { key: "forSigner", value: function(vt) {
            return this.url.setQuery("signer", vt), this;
          } }, { key: "forAsset", value: function(vt) {
            return this.url.setQuery("asset", "".concat(vt)), this;
          } }, { key: "sponsor", value: function(vt) {
            return this.url.setQuery("sponsor", vt), this;
          } }, { key: "forLiquidityPool", value: function(vt) {
            return this.url.setQuery("liquidity_pool", vt), this;
          } }]);
        }(St);
        function Ee(zt) {
          return Ee = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(Et) {
            return typeof Et;
          } : function(Et) {
            return Et && typeof Symbol == "function" && Et.constructor === Symbol && Et !== Symbol.prototype ? "symbol" : typeof Et;
          }, Ee(zt);
        }
        function cr(zt, Et) {
          for (var vt = 0; vt < Et.length; vt++) {
            var Dt = Et[vt];
            Dt.enumerable = Dt.enumerable || false, Dt.configurable = true, "value" in Dt && (Dt.writable = true), Object.defineProperty(zt, Lr(Dt.key), Dt);
          }
        }
        function Lr(zt) {
          var Et = function(vt, Dt) {
            if (Ee(vt) != "object" || !vt) return vt;
            var de = vt[Symbol.toPrimitive];
            if (de !== void 0) {
              var ae = de.call(vt, Dt);
              if (Ee(ae) != "object") return ae;
              throw new TypeError("@@toPrimitive must return a primitive value.");
            }
            return String(vt);
          }(zt, "string");
          return Ee(Et) == "symbol" ? Et : Et + "";
        }
        function on(zt, Et, vt) {
          return Et = to(Et), function(Dt, de) {
            if (de && (Ee(de) == "object" || typeof de == "function")) return de;
            if (de !== void 0) throw new TypeError("Derived constructors may only return object or undefined");
            return function(ae) {
              if (ae === void 0) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
              return ae;
            }(Dt);
          }(zt, Zr() ? Reflect.construct(Et, vt || [], to(zt).constructor) : Et.apply(zt, vt));
        }
        function Zr() {
          try {
            var zt = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
            }));
          } catch {
          }
          return (Zr = function() {
            return !!zt;
          })();
        }
        function to(zt) {
          return to = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function(Et) {
            return Et.__proto__ || Object.getPrototypeOf(Et);
          }, to(zt);
        }
        function qn(zt, Et) {
          return qn = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function(vt, Dt) {
            return vt.__proto__ = Dt, vt;
          }, qn(zt, Et);
        }
        var jn = function(zt) {
          function Et(vt) {
            var Dt;
            return function(de, ae) {
              if (!(de instanceof ae)) throw new TypeError("Cannot call a class as a function");
            }(this, Et), (Dt = on(this, Et, [vt])).url.segment("assets"), Dt;
          }
          return function(vt, Dt) {
            if (typeof Dt != "function" && Dt !== null) throw new TypeError("Super expression must either be null or a function");
            vt.prototype = Object.create(Dt && Dt.prototype, { constructor: { value: vt, writable: true, configurable: true } }), Object.defineProperty(vt, "prototype", { writable: false }), Dt && qn(vt, Dt);
          }(Et, zt), function(vt, Dt, de) {
            return Dt && cr(vt.prototype, Dt), Object.defineProperty(vt, "prototype", { writable: false }), vt;
          }(Et, [{ key: "forCode", value: function(vt) {
            return this.url.setQuery("asset_code", vt), this;
          } }, { key: "forIssuer", value: function(vt) {
            return this.url.setQuery("asset_issuer", vt), this;
          } }]);
        }(St);
        function eo(zt) {
          return eo = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(Et) {
            return typeof Et;
          } : function(Et) {
            return Et && typeof Symbol == "function" && Et.constructor === Symbol && Et !== Symbol.prototype ? "symbol" : typeof Et;
          }, eo(zt);
        }
        function no(zt, Et) {
          for (var vt = 0; vt < Et.length; vt++) {
            var Dt = Et[vt];
            Dt.enumerable = Dt.enumerable || false, Dt.configurable = true, "value" in Dt && (Dt.writable = true), Object.defineProperty(zt, Dn(Dt.key), Dt);
          }
        }
        function Dn(zt) {
          var Et = function(vt, Dt) {
            if (eo(vt) != "object" || !vt) return vt;
            var de = vt[Symbol.toPrimitive];
            if (de !== void 0) {
              var ae = de.call(vt, Dt);
              if (eo(ae) != "object") return ae;
              throw new TypeError("@@toPrimitive must return a primitive value.");
            }
            return String(vt);
          }(zt, "string");
          return eo(Et) == "symbol" ? Et : Et + "";
        }
        function se(zt, Et, vt) {
          return Et = Tr(Et), function(Dt, de) {
            if (de && (eo(de) == "object" || typeof de == "function")) return de;
            if (de !== void 0) throw new TypeError("Derived constructors may only return object or undefined");
            return function(ae) {
              if (ae === void 0) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
              return ae;
            }(Dt);
          }(zt, rr() ? Reflect.construct(Et, vt || [], Tr(zt).constructor) : Et.apply(zt, vt));
        }
        function rr() {
          try {
            var zt = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
            }));
          } catch {
          }
          return (rr = function() {
            return !!zt;
          })();
        }
        function Tr(zt) {
          return Tr = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function(Et) {
            return Et.__proto__ || Object.getPrototypeOf(Et);
          }, Tr(zt);
        }
        function mr(zt, Et) {
          return mr = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function(vt, Dt) {
            return vt.__proto__ = Dt, vt;
          }, mr(zt, Et);
        }
        var Ir = function(zt) {
          function Et(vt) {
            var Dt;
            return function(de, ae) {
              if (!(de instanceof ae)) throw new TypeError("Cannot call a class as a function");
            }(this, Et), (Dt = se(this, Et, [vt])).url.segment("claimable_balances"), Dt;
          }
          return function(vt, Dt) {
            if (typeof Dt != "function" && Dt !== null) throw new TypeError("Super expression must either be null or a function");
            vt.prototype = Object.create(Dt && Dt.prototype, { constructor: { value: vt, writable: true, configurable: true } }), Object.defineProperty(vt, "prototype", { writable: false }), Dt && mr(vt, Dt);
          }(Et, zt), function(vt, Dt, de) {
            return Dt && no(vt.prototype, Dt), Object.defineProperty(vt, "prototype", { writable: false }), vt;
          }(Et, [{ key: "claimableBalance", value: function(vt) {
            var Dt = new St(this.url.clone());
            return Dt.filter.push([vt]), Dt;
          } }, { key: "sponsor", value: function(vt) {
            return this.url.setQuery("sponsor", vt), this;
          } }, { key: "claimant", value: function(vt) {
            return this.url.setQuery("claimant", vt), this;
          } }, { key: "asset", value: function(vt) {
            return this.url.setQuery("asset", vt.toString()), this;
          } }]);
        }(St);
        function En(zt) {
          return En = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(Et) {
            return typeof Et;
          } : function(Et) {
            return Et && typeof Symbol == "function" && Et.constructor === Symbol && Et !== Symbol.prototype ? "symbol" : typeof Et;
          }, En(zt);
        }
        function An(zt, Et) {
          for (var vt = 0; vt < Et.length; vt++) {
            var Dt = Et[vt];
            Dt.enumerable = Dt.enumerable || false, Dt.configurable = true, "value" in Dt && (Dt.writable = true), Object.defineProperty(zt, _n(Dt.key), Dt);
          }
        }
        function _n(zt) {
          var Et = function(vt, Dt) {
            if (En(vt) != "object" || !vt) return vt;
            var de = vt[Symbol.toPrimitive];
            if (de !== void 0) {
              var ae = de.call(vt, Dt);
              if (En(ae) != "object") return ae;
              throw new TypeError("@@toPrimitive must return a primitive value.");
            }
            return String(vt);
          }(zt, "string");
          return En(Et) == "symbol" ? Et : Et + "";
        }
        function Nn(zt, Et, vt) {
          return Et = Jn(Et), function(Dt, de) {
            if (de && (En(de) == "object" || typeof de == "function")) return de;
            if (de !== void 0) throw new TypeError("Derived constructors may only return object or undefined");
            return function(ae) {
              if (ae === void 0) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
              return ae;
            }(Dt);
          }(zt, Zn() ? Reflect.construct(Et, vt || [], Jn(zt).constructor) : Et.apply(zt, vt));
        }
        function Zn() {
          try {
            var zt = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
            }));
          } catch {
          }
          return (Zn = function() {
            return !!zt;
          })();
        }
        function Jn(zt) {
          return Jn = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function(Et) {
            return Et.__proto__ || Object.getPrototypeOf(Et);
          }, Jn(zt);
        }
        function Hn(zt, Et) {
          return Hn = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function(vt, Dt) {
            return vt.__proto__ = Dt, vt;
          }, Hn(zt, Et);
        }
        var uo = function(zt) {
          function Et(vt) {
            var Dt;
            return function(de, ae) {
              if (!(de instanceof ae)) throw new TypeError("Cannot call a class as a function");
            }(this, Et), (Dt = Nn(this, Et, [vt, "effects"])).url.segment("effects"), Dt;
          }
          return function(vt, Dt) {
            if (typeof Dt != "function" && Dt !== null) throw new TypeError("Super expression must either be null or a function");
            vt.prototype = Object.create(Dt && Dt.prototype, { constructor: { value: vt, writable: true, configurable: true } }), Object.defineProperty(vt, "prototype", { writable: false }), Dt && Hn(vt, Dt);
          }(Et, zt), function(vt, Dt, de) {
            return Dt && An(vt.prototype, Dt), Object.defineProperty(vt, "prototype", { writable: false }), vt;
          }(Et, [{ key: "forAccount", value: function(vt) {
            return this.forEndpoint("accounts", vt);
          } }, { key: "forLedger", value: function(vt) {
            return this.forEndpoint("ledgers", vt.toString());
          } }, { key: "forTransaction", value: function(vt) {
            return this.forEndpoint("transactions", vt);
          } }, { key: "forOperation", value: function(vt) {
            return this.forEndpoint("operations", vt);
          } }, { key: "forLiquidityPool", value: function(vt) {
            return this.forEndpoint("liquidity_pools", vt);
          } }]);
        }(St);
        function Oo(zt) {
          return Oo = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(Et) {
            return typeof Et;
          } : function(Et) {
            return Et && typeof Symbol == "function" && Et.constructor === Symbol && Et !== Symbol.prototype ? "symbol" : typeof Et;
          }, Oo(zt);
        }
        function jo(zt, Et, vt) {
          return Et = Po(Et), function(Dt, de) {
            if (de && (Oo(de) == "object" || typeof de == "function")) return de;
            if (de !== void 0) throw new TypeError("Derived constructors may only return object or undefined");
            return function(ae) {
              if (ae === void 0) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
              return ae;
            }(Dt);
          }(zt, Bo() ? Reflect.construct(Et, vt || [], Po(zt).constructor) : Et.apply(zt, vt));
        }
        function Bo() {
          try {
            var zt = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
            }));
          } catch {
          }
          return (Bo = function() {
            return !!zt;
          })();
        }
        function Po(zt) {
          return Po = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function(Et) {
            return Et.__proto__ || Object.getPrototypeOf(Et);
          }, Po(zt);
        }
        function yo(zt, Et) {
          return yo = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function(vt, Dt) {
            return vt.__proto__ = Dt, vt;
          }, yo(zt, Et);
        }
        var ri = function(zt) {
          function Et(vt, Dt) {
            var de;
            return function(ae, Qr) {
              if (!(ae instanceof Qr)) throw new TypeError("Cannot call a class as a function");
            }(this, Et), (de = jo(this, Et, [vt])).url.segment("friendbot"), de.url.setQuery("addr", Dt), de;
          }
          return function(vt, Dt) {
            if (typeof Dt != "function" && Dt !== null) throw new TypeError("Super expression must either be null or a function");
            vt.prototype = Object.create(Dt && Dt.prototype, { constructor: { value: vt, writable: true, configurable: true } }), Object.defineProperty(vt, "prototype", { writable: false }), Dt && yo(vt, Dt);
          }(Et, zt), function(vt, Dt, de) {
            return Object.defineProperty(vt, "prototype", { writable: false }), vt;
          }(Et);
        }(St);
        function Eo(zt) {
          return Eo = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(Et) {
            return typeof Et;
          } : function(Et) {
            return Et && typeof Symbol == "function" && Et.constructor === Symbol && Et !== Symbol.prototype ? "symbol" : typeof Et;
          }, Eo(zt);
        }
        function Ao(zt, Et) {
          for (var vt = 0; vt < Et.length; vt++) {
            var Dt = Et[vt];
            Dt.enumerable = Dt.enumerable || false, Dt.configurable = true, "value" in Dt && (Dt.writable = true), Object.defineProperty(zt, ti(Dt.key), Dt);
          }
        }
        function ti(zt) {
          var Et = function(vt, Dt) {
            if (Eo(vt) != "object" || !vt) return vt;
            var de = vt[Symbol.toPrimitive];
            if (de !== void 0) {
              var ae = de.call(vt, Dt);
              if (Eo(ae) != "object") return ae;
              throw new TypeError("@@toPrimitive must return a primitive value.");
            }
            return String(vt);
          }(zt, "string");
          return Eo(Et) == "symbol" ? Et : Et + "";
        }
        function li(zt, Et, vt) {
          return Et = Ho(Et), function(Dt, de) {
            if (de && (Eo(de) == "object" || typeof de == "function")) return de;
            if (de !== void 0) throw new TypeError("Derived constructors may only return object or undefined");
            return function(ae) {
              if (ae === void 0) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
              return ae;
            }(Dt);
          }(zt, pi() ? Reflect.construct(Et, vt || [], Ho(zt).constructor) : Et.apply(zt, vt));
        }
        function pi() {
          try {
            var zt = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
            }));
          } catch {
          }
          return (pi = function() {
            return !!zt;
          })();
        }
        function Ho(zt) {
          return Ho = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function(Et) {
            return Et.__proto__ || Object.getPrototypeOf(Et);
          }, Ho(zt);
        }
        function ai(zt, Et) {
          return ai = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function(vt, Dt) {
            return vt.__proto__ = Dt, vt;
          }, ai(zt, Et);
        }
        var hi = function(zt) {
          function Et(vt) {
            var Dt;
            return function(de, ae) {
              if (!(de instanceof ae)) throw new TypeError("Cannot call a class as a function");
            }(this, Et), (Dt = li(this, Et, [vt])).url.segment("ledgers"), Dt;
          }
          return function(vt, Dt) {
            if (typeof Dt != "function" && Dt !== null) throw new TypeError("Super expression must either be null or a function");
            vt.prototype = Object.create(Dt && Dt.prototype, { constructor: { value: vt, writable: true, configurable: true } }), Object.defineProperty(vt, "prototype", { writable: false }), Dt && ai(vt, Dt);
          }(Et, zt), function(vt, Dt, de) {
            return Dt && Ao(vt.prototype, Dt), Object.defineProperty(vt, "prototype", { writable: false }), vt;
          }(Et, [{ key: "ledger", value: function(vt) {
            return this.filter.push(["ledgers", vt.toString()]), this;
          } }]);
        }(St);
        function Co(zt) {
          return Co = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(Et) {
            return typeof Et;
          } : function(Et) {
            return Et && typeof Symbol == "function" && Et.constructor === Symbol && Et !== Symbol.prototype ? "symbol" : typeof Et;
          }, Co(zt);
        }
        function Wo(zt, Et) {
          for (var vt = 0; vt < Et.length; vt++) {
            var Dt = Et[vt];
            Dt.enumerable = Dt.enumerable || false, Dt.configurable = true, "value" in Dt && (Dt.writable = true), Object.defineProperty(zt, qt(Dt.key), Dt);
          }
        }
        function qt(zt) {
          var Et = function(vt, Dt) {
            if (Co(vt) != "object" || !vt) return vt;
            var de = vt[Symbol.toPrimitive];
            if (de !== void 0) {
              var ae = de.call(vt, Dt);
              if (Co(ae) != "object") return ae;
              throw new TypeError("@@toPrimitive must return a primitive value.");
            }
            return String(vt);
          }(zt, "string");
          return Co(Et) == "symbol" ? Et : Et + "";
        }
        function Nt(zt, Et, vt) {
          return Et = _e(Et), function(Dt, de) {
            if (de && (Co(de) == "object" || typeof de == "function")) return de;
            if (de !== void 0) throw new TypeError("Derived constructors may only return object or undefined");
            return function(ae) {
              if (ae === void 0) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
              return ae;
            }(Dt);
          }(zt, he() ? Reflect.construct(Et, vt || [], _e(zt).constructor) : Et.apply(zt, vt));
        }
        function he() {
          try {
            var zt = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
            }));
          } catch {
          }
          return (he = function() {
            return !!zt;
          })();
        }
        function _e(zt) {
          return _e = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function(Et) {
            return Et.__proto__ || Object.getPrototypeOf(Et);
          }, _e(zt);
        }
        function Ve(zt, Et) {
          return Ve = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function(vt, Dt) {
            return vt.__proto__ = Dt, vt;
          }, Ve(zt, Et);
        }
        var qe = function(zt) {
          function Et(vt) {
            var Dt;
            return function(de, ae) {
              if (!(de instanceof ae)) throw new TypeError("Cannot call a class as a function");
            }(this, Et), (Dt = Nt(this, Et, [vt])).url.segment("liquidity_pools"), Dt;
          }
          return function(vt, Dt) {
            if (typeof Dt != "function" && Dt !== null) throw new TypeError("Super expression must either be null or a function");
            vt.prototype = Object.create(Dt && Dt.prototype, { constructor: { value: vt, writable: true, configurable: true } }), Object.defineProperty(vt, "prototype", { writable: false }), Dt && Ve(vt, Dt);
          }(Et, zt), function(vt, Dt, de) {
            return Dt && Wo(vt.prototype, Dt), Object.defineProperty(vt, "prototype", { writable: false }), vt;
          }(Et, [{ key: "forAssets", value: function() {
            for (var vt = arguments.length, Dt = new Array(vt), de = 0; de < vt; de++) Dt[de] = arguments[de];
            var ae = Dt.map(function(Qr) {
              return Qr.toString();
            }).join(",");
            return this.url.setQuery("reserves", ae), this;
          } }, { key: "forAccount", value: function(vt) {
            return this.url.setQuery("account", vt), this;
          } }, { key: "liquidityPoolId", value: function(vt) {
            if (!vt.match(/[a-fA-F0-9]{64}/)) throw new TypeError("".concat(vt, " does not look like a liquidity pool ID"));
            var Dt = new St(this.url.clone());
            return Dt.filter.push([vt.toLowerCase()]), Dt;
          } }]);
        }(St);
        function Ge(zt) {
          return Ge = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(Et) {
            return typeof Et;
          } : function(Et) {
            return Et && typeof Symbol == "function" && Et.constructor === Symbol && Et !== Symbol.prototype ? "symbol" : typeof Et;
          }, Ge(zt);
        }
        function Je(zt, Et) {
          for (var vt = 0; vt < Et.length; vt++) {
            var Dt = Et[vt];
            Dt.enumerable = Dt.enumerable || false, Dt.configurable = true, "value" in Dt && (Dt.writable = true), Object.defineProperty(zt, Oe(Dt.key), Dt);
          }
        }
        function Oe(zt) {
          var Et = function(vt, Dt) {
            if (Ge(vt) != "object" || !vt) return vt;
            var de = vt[Symbol.toPrimitive];
            if (de !== void 0) {
              var ae = de.call(vt, Dt);
              if (Ge(ae) != "object") return ae;
              throw new TypeError("@@toPrimitive must return a primitive value.");
            }
            return String(vt);
          }(zt, "string");
          return Ge(Et) == "symbol" ? Et : Et + "";
        }
        function lr(zt, Et, vt) {
          return Et = Dr(Et), function(Dt, de) {
            if (de && (Ge(de) == "object" || typeof de == "function")) return de;
            if (de !== void 0) throw new TypeError("Derived constructors may only return object or undefined");
            return function(ae) {
              if (ae === void 0) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
              return ae;
            }(Dt);
          }(zt, Fr() ? Reflect.construct(Et, vt || [], Dr(zt).constructor) : Et.apply(zt, vt));
        }
        function Fr() {
          try {
            var zt = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
            }));
          } catch {
          }
          return (Fr = function() {
            return !!zt;
          })();
        }
        function Dr(zt) {
          return Dr = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function(Et) {
            return Et.__proto__ || Object.getPrototypeOf(Et);
          }, Dr(zt);
        }
        function gr(zt, Et) {
          return gr = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function(vt, Dt) {
            return vt.__proto__ = Dt, vt;
          }, gr(zt, Et);
        }
        var an = function(zt) {
          function Et(vt) {
            var Dt;
            return function(de, ae) {
              if (!(de instanceof ae)) throw new TypeError("Cannot call a class as a function");
            }(this, Et), (Dt = lr(this, Et, [vt, "offers"])).url.segment("offers"), Dt;
          }
          return function(vt, Dt) {
            if (typeof Dt != "function" && Dt !== null) throw new TypeError("Super expression must either be null or a function");
            vt.prototype = Object.create(Dt && Dt.prototype, { constructor: { value: vt, writable: true, configurable: true } }), Object.defineProperty(vt, "prototype", { writable: false }), Dt && gr(vt, Dt);
          }(Et, zt), function(vt, Dt, de) {
            return Dt && Je(vt.prototype, Dt), Object.defineProperty(vt, "prototype", { writable: false }), vt;
          }(Et, [{ key: "offer", value: function(vt) {
            var Dt = new St(this.url.clone());
            return Dt.filter.push([vt]), Dt;
          } }, { key: "forAccount", value: function(vt) {
            return this.forEndpoint("accounts", vt);
          } }, { key: "buying", value: function(vt) {
            return vt.isNative() ? this.url.setQuery("buying_asset_type", "native") : (this.url.setQuery("buying_asset_type", vt.getAssetType()), this.url.setQuery("buying_asset_code", vt.getCode()), this.url.setQuery("buying_asset_issuer", vt.getIssuer())), this;
          } }, { key: "selling", value: function(vt) {
            return vt.isNative() ? this.url.setQuery("selling_asset_type", "native") : (this.url.setQuery("selling_asset_type", vt.getAssetType()), this.url.setQuery("selling_asset_code", vt.getCode()), this.url.setQuery("selling_asset_issuer", vt.getIssuer())), this;
          } }, { key: "sponsor", value: function(vt) {
            return this.url.setQuery("sponsor", vt), this;
          } }, { key: "seller", value: function(vt) {
            return this.url.setQuery("seller", vt), this;
          } }]);
        }(St);
        function pn(zt) {
          return pn = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(Et) {
            return typeof Et;
          } : function(Et) {
            return Et && typeof Symbol == "function" && Et.constructor === Symbol && Et !== Symbol.prototype ? "symbol" : typeof Et;
          }, pn(zt);
        }
        function yn(zt, Et) {
          for (var vt = 0; vt < Et.length; vt++) {
            var Dt = Et[vt];
            Dt.enumerable = Dt.enumerable || false, Dt.configurable = true, "value" in Dt && (Dt.writable = true), Object.defineProperty(zt, Rt(Dt.key), Dt);
          }
        }
        function Rt(zt) {
          var Et = function(vt, Dt) {
            if (pn(vt) != "object" || !vt) return vt;
            var de = vt[Symbol.toPrimitive];
            if (de !== void 0) {
              var ae = de.call(vt, Dt);
              if (pn(ae) != "object") return ae;
              throw new TypeError("@@toPrimitive must return a primitive value.");
            }
            return String(vt);
          }(zt, "string");
          return pn(Et) == "symbol" ? Et : Et + "";
        }
        function jr(zt, Et, vt) {
          return Et = fo(Et), function(Dt, de) {
            if (de && (pn(de) == "object" || typeof de == "function")) return de;
            if (de !== void 0) throw new TypeError("Derived constructors may only return object or undefined");
            return function(ae) {
              if (ae === void 0) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
              return ae;
            }(Dt);
          }(zt, Ln() ? Reflect.construct(Et, vt || [], fo(zt).constructor) : Et.apply(zt, vt));
        }
        function Ln() {
          try {
            var zt = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
            }));
          } catch {
          }
          return (Ln = function() {
            return !!zt;
          })();
        }
        function fo(zt) {
          return fo = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function(Et) {
            return Et.__proto__ || Object.getPrototypeOf(Et);
          }, fo(zt);
        }
        function Wt(zt, Et) {
          return Wt = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function(vt, Dt) {
            return vt.__proto__ = Dt, vt;
          }, Wt(zt, Et);
        }
        var ue = function(zt) {
          function Et(vt) {
            var Dt;
            return function(de, ae) {
              if (!(de instanceof ae)) throw new TypeError("Cannot call a class as a function");
            }(this, Et), (Dt = jr(this, Et, [vt, "operations"])).url.segment("operations"), Dt;
          }
          return function(vt, Dt) {
            if (typeof Dt != "function" && Dt !== null) throw new TypeError("Super expression must either be null or a function");
            vt.prototype = Object.create(Dt && Dt.prototype, { constructor: { value: vt, writable: true, configurable: true } }), Object.defineProperty(vt, "prototype", { writable: false }), Dt && Wt(vt, Dt);
          }(Et, zt), function(vt, Dt, de) {
            return Dt && yn(vt.prototype, Dt), Object.defineProperty(vt, "prototype", { writable: false }), vt;
          }(Et, [{ key: "operation", value: function(vt) {
            var Dt = new St(this.url.clone());
            return Dt.filter.push([vt]), Dt;
          } }, { key: "forAccount", value: function(vt) {
            return this.forEndpoint("accounts", vt);
          } }, { key: "forClaimableBalance", value: function(vt) {
            return this.forEndpoint("claimable_balances", vt);
          } }, { key: "forLedger", value: function(vt) {
            return this.forEndpoint("ledgers", vt.toString());
          } }, { key: "forTransaction", value: function(vt) {
            return this.forEndpoint("transactions", vt);
          } }, { key: "forLiquidityPool", value: function(vt) {
            return this.forEndpoint("liquidity_pools", vt);
          } }, { key: "includeFailed", value: function(vt) {
            return this.url.setQuery("include_failed", vt.toString()), this;
          } }]);
        }(St);
        function Zt(zt) {
          return Zt = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(Et) {
            return typeof Et;
          } : function(Et) {
            return Et && typeof Symbol == "function" && Et.constructor === Symbol && Et !== Symbol.prototype ? "symbol" : typeof Et;
          }, Zt(zt);
        }
        function Xt(zt, Et, vt) {
          return Et = $e(Et), function(Dt, de) {
            if (de && (Zt(de) == "object" || typeof de == "function")) return de;
            if (de !== void 0) throw new TypeError("Derived constructors may only return object or undefined");
            return function(ae) {
              if (ae === void 0) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
              return ae;
            }(Dt);
          }(zt, pe() ? Reflect.construct(Et, vt || [], $e(zt).constructor) : Et.apply(zt, vt));
        }
        function pe() {
          try {
            var zt = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
            }));
          } catch {
          }
          return (pe = function() {
            return !!zt;
          })();
        }
        function $e(zt) {
          return $e = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function(Et) {
            return Et.__proto__ || Object.getPrototypeOf(Et);
          }, $e(zt);
        }
        function je(zt, Et) {
          return je = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function(vt, Dt) {
            return vt.__proto__ = Dt, vt;
          }, je(zt, Et);
        }
        var Me = function(zt) {
          function Et(vt, Dt, de) {
            var ae;
            return function(Qr, Sn) {
              if (!(Qr instanceof Sn)) throw new TypeError("Cannot call a class as a function");
            }(this, Et), (ae = Xt(this, Et, [vt])).url.segment("order_book"), Dt.isNative() ? ae.url.setQuery("selling_asset_type", "native") : (ae.url.setQuery("selling_asset_type", Dt.getAssetType()), ae.url.setQuery("selling_asset_code", Dt.getCode()), ae.url.setQuery("selling_asset_issuer", Dt.getIssuer())), de.isNative() ? ae.url.setQuery("buying_asset_type", "native") : (ae.url.setQuery("buying_asset_type", de.getAssetType()), ae.url.setQuery("buying_asset_code", de.getCode()), ae.url.setQuery("buying_asset_issuer", de.getIssuer())), ae;
          }
          return function(vt, Dt) {
            if (typeof Dt != "function" && Dt !== null) throw new TypeError("Super expression must either be null or a function");
            vt.prototype = Object.create(Dt && Dt.prototype, { constructor: { value: vt, writable: true, configurable: true } }), Object.defineProperty(vt, "prototype", { writable: false }), Dt && je(vt, Dt);
          }(Et, zt), function(vt, Dt, de) {
            return Object.defineProperty(vt, "prototype", { writable: false }), vt;
          }(Et);
        }(St);
        function fr(zt) {
          return fr = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(Et) {
            return typeof Et;
          } : function(Et) {
            return Et && typeof Symbol == "function" && Et.constructor === Symbol && Et !== Symbol.prototype ? "symbol" : typeof Et;
          }, fr(zt);
        }
        function Nr(zt, Et) {
          for (var vt = 0; vt < Et.length; vt++) {
            var Dt = Et[vt];
            Dt.enumerable = Dt.enumerable || false, Dt.configurable = true, "value" in Dt && (Dt.writable = true), Object.defineProperty(zt, wr(Dt.key), Dt);
          }
        }
        function wr(zt) {
          var Et = function(vt, Dt) {
            if (fr(vt) != "object" || !vt) return vt;
            var de = vt[Symbol.toPrimitive];
            if (de !== void 0) {
              var ae = de.call(vt, Dt);
              if (fr(ae) != "object") return ae;
              throw new TypeError("@@toPrimitive must return a primitive value.");
            }
            return String(vt);
          }(zt, "string");
          return fr(Et) == "symbol" ? Et : Et + "";
        }
        function Vr(zt, Et, vt) {
          return Et = Xr(Et), function(Dt, de) {
            if (de && (fr(de) == "object" || typeof de == "function")) return de;
            if (de !== void 0) throw new TypeError("Derived constructors may only return object or undefined");
            return function(ae) {
              if (ae === void 0) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
              return ae;
            }(Dt);
          }(zt, $r() ? Reflect.construct(Et, vt || [], Xr(zt).constructor) : Et.apply(zt, vt));
        }
        function $r() {
          try {
            var zt = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
            }));
          } catch {
          }
          return ($r = function() {
            return !!zt;
          })();
        }
        function Xr(zt) {
          return Xr = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function(Et) {
            return Et.__proto__ || Object.getPrototypeOf(Et);
          }, Xr(zt);
        }
        function Cn(zt, Et) {
          return Cn = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function(vt, Dt) {
            return vt.__proto__ = Dt, vt;
          }, Cn(zt, Et);
        }
        var sn = function(zt) {
          function Et(vt) {
            var Dt;
            return function(de, ae) {
              if (!(de instanceof ae)) throw new TypeError("Cannot call a class as a function");
            }(this, Et), (Dt = Vr(this, Et, [vt, "payments"])).url.segment("payments"), Dt;
          }
          return function(vt, Dt) {
            if (typeof Dt != "function" && Dt !== null) throw new TypeError("Super expression must either be null or a function");
            vt.prototype = Object.create(Dt && Dt.prototype, { constructor: { value: vt, writable: true, configurable: true } }), Object.defineProperty(vt, "prototype", { writable: false }), Dt && Cn(vt, Dt);
          }(Et, zt), function(vt, Dt, de) {
            return Dt && Nr(vt.prototype, Dt), Object.defineProperty(vt, "prototype", { writable: false }), vt;
          }(Et, [{ key: "forAccount", value: function(vt) {
            return this.forEndpoint("accounts", vt);
          } }, { key: "forLedger", value: function(vt) {
            return this.forEndpoint("ledgers", vt.toString());
          } }, { key: "forTransaction", value: function(vt) {
            return this.forEndpoint("transactions", vt);
          } }]);
        }(St);
        function To(zt) {
          return To = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(Et) {
            return typeof Et;
          } : function(Et) {
            return Et && typeof Symbol == "function" && Et.constructor === Symbol && Et !== Symbol.prototype ? "symbol" : typeof Et;
          }, To(zt);
        }
        function Ro(zt, Et, vt) {
          return Et = bo(Et), function(Dt, de) {
            if (de && (To(de) == "object" || typeof de == "function")) return de;
            if (de !== void 0) throw new TypeError("Derived constructors may only return object or undefined");
            return function(ae) {
              if (ae === void 0) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
              return ae;
            }(Dt);
          }(zt, Rn() ? Reflect.construct(Et, vt || [], bo(zt).constructor) : Et.apply(zt, vt));
        }
        function Rn() {
          try {
            var zt = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
            }));
          } catch {
          }
          return (Rn = function() {
            return !!zt;
          })();
        }
        function bo(zt) {
          return bo = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function(Et) {
            return Et.__proto__ || Object.getPrototypeOf(Et);
          }, bo(zt);
        }
        function si(zt, Et) {
          return si = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function(vt, Dt) {
            return vt.__proto__ = Dt, vt;
          }, si(zt, Et);
        }
        var Xo = function(zt) {
          function Et(vt, Dt, de, ae) {
            var Qr;
            if (function(fn, Bn) {
              if (!(fn instanceof Bn)) throw new TypeError("Cannot call a class as a function");
            }(this, Et), (Qr = Ro(this, Et, [vt])).url.segment("paths/strict-receive"), typeof Dt == "string") Qr.url.setQuery("source_account", Dt);
            else {
              var Sn = Dt.map(function(fn) {
                return fn.isNative() ? "native" : "".concat(fn.getCode(), ":").concat(fn.getIssuer());
              }).join(",");
              Qr.url.setQuery("source_assets", Sn);
            }
            return Qr.url.setQuery("destination_amount", ae), de.isNative() ? Qr.url.setQuery("destination_asset_type", "native") : (Qr.url.setQuery("destination_asset_type", de.getAssetType()), Qr.url.setQuery("destination_asset_code", de.getCode()), Qr.url.setQuery("destination_asset_issuer", de.getIssuer())), Qr;
          }
          return function(vt, Dt) {
            if (typeof Dt != "function" && Dt !== null) throw new TypeError("Super expression must either be null or a function");
            vt.prototype = Object.create(Dt && Dt.prototype, { constructor: { value: vt, writable: true, configurable: true } }), Object.defineProperty(vt, "prototype", { writable: false }), Dt && si(vt, Dt);
          }(Et, zt), function(vt, Dt, de) {
            return Object.defineProperty(vt, "prototype", { writable: false }), vt;
          }(Et);
        }(St);
        function Xn(zt) {
          return Xn = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(Et) {
            return typeof Et;
          } : function(Et) {
            return Et && typeof Symbol == "function" && Et.constructor === Symbol && Et !== Symbol.prototype ? "symbol" : typeof Et;
          }, Xn(zt);
        }
        function ki(zt, Et, vt) {
          return Et = wo(Et), function(Dt, de) {
            if (de && (Xn(de) == "object" || typeof de == "function")) return de;
            if (de !== void 0) throw new TypeError("Derived constructors may only return object or undefined");
            return function(ae) {
              if (ae === void 0) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
              return ae;
            }(Dt);
          }(zt, ii() ? Reflect.construct(Et, vt || [], wo(zt).constructor) : Et.apply(zt, vt));
        }
        function ii() {
          try {
            var zt = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
            }));
          } catch {
          }
          return (ii = function() {
            return !!zt;
          })();
        }
        function wo(zt) {
          return wo = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function(Et) {
            return Et.__proto__ || Object.getPrototypeOf(Et);
          }, wo(zt);
        }
        function Yt(zt, Et) {
          return Yt = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function(vt, Dt) {
            return vt.__proto__ = Dt, vt;
          }, Yt(zt, Et);
        }
        var ee = function(zt) {
          function Et(vt, Dt, de, ae) {
            var Qr;
            if (function(fn, Bn) {
              if (!(fn instanceof Bn)) throw new TypeError("Cannot call a class as a function");
            }(this, Et), (Qr = ki(this, Et, [vt])).url.segment("paths/strict-send"), Dt.isNative() ? Qr.url.setQuery("source_asset_type", "native") : (Qr.url.setQuery("source_asset_type", Dt.getAssetType()), Qr.url.setQuery("source_asset_code", Dt.getCode()), Qr.url.setQuery("source_asset_issuer", Dt.getIssuer())), Qr.url.setQuery("source_amount", de), typeof ae == "string") Qr.url.setQuery("destination_account", ae);
            else {
              var Sn = ae.map(function(fn) {
                return fn.isNative() ? "native" : "".concat(fn.getCode(), ":").concat(fn.getIssuer());
              }).join(",");
              Qr.url.setQuery("destination_assets", Sn);
            }
            return Qr;
          }
          return function(vt, Dt) {
            if (typeof Dt != "function" && Dt !== null) throw new TypeError("Super expression must either be null or a function");
            vt.prototype = Object.create(Dt && Dt.prototype, { constructor: { value: vt, writable: true, configurable: true } }), Object.defineProperty(vt, "prototype", { writable: false }), Dt && Yt(vt, Dt);
          }(Et, zt), function(vt, Dt, de) {
            return Object.defineProperty(vt, "prototype", { writable: false }), vt;
          }(Et);
        }(St);
        function ye(zt) {
          return ye = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(Et) {
            return typeof Et;
          } : function(Et) {
            return Et && typeof Symbol == "function" && Et.constructor === Symbol && Et !== Symbol.prototype ? "symbol" : typeof Et;
          }, ye(zt);
        }
        function Se(zt, Et) {
          for (var vt = 0; vt < Et.length; vt++) {
            var Dt = Et[vt];
            Dt.enumerable = Dt.enumerable || false, Dt.configurable = true, "value" in Dt && (Dt.writable = true), Object.defineProperty(zt, De(Dt.key), Dt);
          }
        }
        function De(zt) {
          var Et = function(vt, Dt) {
            if (ye(vt) != "object" || !vt) return vt;
            var de = vt[Symbol.toPrimitive];
            if (de !== void 0) {
              var ae = de.call(vt, Dt);
              if (ye(ae) != "object") return ae;
              throw new TypeError("@@toPrimitive must return a primitive value.");
            }
            return String(vt);
          }(zt, "string");
          return ye(Et) == "symbol" ? Et : Et + "";
        }
        function ar(zt, Et, vt) {
          return Et = Y(Et), function(Dt, de) {
            if (de && (ye(de) == "object" || typeof de == "function")) return de;
            if (de !== void 0) throw new TypeError("Derived constructors may only return object or undefined");
            return function(ae) {
              if (ae === void 0) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
              return ae;
            }(Dt);
          }(zt, C() ? Reflect.construct(Et, vt || [], Y(zt).constructor) : Et.apply(zt, vt));
        }
        function C() {
          try {
            var zt = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
            }));
          } catch {
          }
          return (C = function() {
            return !!zt;
          })();
        }
        function Y(zt) {
          return Y = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function(Et) {
            return Et.__proto__ || Object.getPrototypeOf(Et);
          }, Y(zt);
        }
        function ht(zt, Et) {
          return ht = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function(vt, Dt) {
            return vt.__proto__ = Dt, vt;
          }, ht(zt, Et);
        }
        var Pt = [6e4, 3e5, 9e5, 36e5, 864e5, 6048e5], Ft = function(zt) {
          function Et(vt, Dt, de, ae, Qr, Sn, fn) {
            var Bn;
            if (function(Do, go) {
              if (!(Do instanceof go)) throw new TypeError("Cannot call a class as a function");
            }(this, Et), (Bn = ar(this, Et, [vt])).url.segment("trade_aggregations"), Dt.isNative() ? Bn.url.setQuery("base_asset_type", "native") : (Bn.url.setQuery("base_asset_type", Dt.getAssetType()), Bn.url.setQuery("base_asset_code", Dt.getCode()), Bn.url.setQuery("base_asset_issuer", Dt.getIssuer())), de.isNative() ? Bn.url.setQuery("counter_asset_type", "native") : (Bn.url.setQuery("counter_asset_type", de.getAssetType()), Bn.url.setQuery("counter_asset_code", de.getCode()), Bn.url.setQuery("counter_asset_issuer", de.getIssuer())), typeof ae != "number" || typeof Qr != "number") throw new mt.v7("Invalid time bounds", [ae, Qr]);
            if (Bn.url.setQuery("start_time", ae.toString()), Bn.url.setQuery("end_time", Qr.toString()), !Bn.isValidResolution(Sn)) throw new mt.v7("Invalid resolution", Sn);
            if (Bn.url.setQuery("resolution", Sn.toString()), !Bn.isValidOffset(fn, Sn)) throw new mt.v7("Invalid offset", fn);
            return Bn.url.setQuery("offset", fn.toString()), Bn;
          }
          return function(vt, Dt) {
            if (typeof Dt != "function" && Dt !== null) throw new TypeError("Super expression must either be null or a function");
            vt.prototype = Object.create(Dt && Dt.prototype, { constructor: { value: vt, writable: true, configurable: true } }), Object.defineProperty(vt, "prototype", { writable: false }), Dt && ht(vt, Dt);
          }(Et, zt), function(vt, Dt, de) {
            return Dt && Se(vt.prototype, Dt), Object.defineProperty(vt, "prototype", { writable: false }), vt;
          }(Et, [{ key: "isValidResolution", value: function(vt) {
            return Pt.some(function(Dt) {
              return Dt === vt;
            });
          } }, { key: "isValidOffset", value: function(vt, Dt) {
            var de = 36e5;
            return !(vt > Dt || vt >= 24 * de || vt % de !== 0);
          } }]);
        }(St);
        function jt(zt) {
          return jt = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(Et) {
            return typeof Et;
          } : function(Et) {
            return Et && typeof Symbol == "function" && Et.constructor === Symbol && Et !== Symbol.prototype ? "symbol" : typeof Et;
          }, jt(zt);
        }
        function ne(zt, Et) {
          for (var vt = 0; vt < Et.length; vt++) {
            var Dt = Et[vt];
            Dt.enumerable = Dt.enumerable || false, Dt.configurable = true, "value" in Dt && (Dt.writable = true), Object.defineProperty(zt, Ie(Dt.key), Dt);
          }
        }
        function Ie(zt) {
          var Et = function(vt, Dt) {
            if (jt(vt) != "object" || !vt) return vt;
            var de = vt[Symbol.toPrimitive];
            if (de !== void 0) {
              var ae = de.call(vt, Dt);
              if (jt(ae) != "object") return ae;
              throw new TypeError("@@toPrimitive must return a primitive value.");
            }
            return String(vt);
          }(zt, "string");
          return jt(Et) == "symbol" ? Et : Et + "";
        }
        function ve(zt, Et, vt) {
          return Et = Ze(Et), function(Dt, de) {
            if (de && (jt(de) == "object" || typeof de == "function")) return de;
            if (de !== void 0) throw new TypeError("Derived constructors may only return object or undefined");
            return function(ae) {
              if (ae === void 0) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
              return ae;
            }(Dt);
          }(zt, ze() ? Reflect.construct(Et, vt || [], Ze(zt).constructor) : Et.apply(zt, vt));
        }
        function ze() {
          try {
            var zt = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
            }));
          } catch {
          }
          return (ze = function() {
            return !!zt;
          })();
        }
        function Ze(zt) {
          return Ze = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function(Et) {
            return Et.__proto__ || Object.getPrototypeOf(Et);
          }, Ze(zt);
        }
        function Ar(zt, Et) {
          return Ar = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function(vt, Dt) {
            return vt.__proto__ = Dt, vt;
          }, Ar(zt, Et);
        }
        var It = function(zt) {
          function Et(vt) {
            var Dt;
            return function(de, ae) {
              if (!(de instanceof ae)) throw new TypeError("Cannot call a class as a function");
            }(this, Et), (Dt = ve(this, Et, [vt, "trades"])).url.segment("trades"), Dt;
          }
          return function(vt, Dt) {
            if (typeof Dt != "function" && Dt !== null) throw new TypeError("Super expression must either be null or a function");
            vt.prototype = Object.create(Dt && Dt.prototype, { constructor: { value: vt, writable: true, configurable: true } }), Object.defineProperty(vt, "prototype", { writable: false }), Dt && Ar(vt, Dt);
          }(Et, zt), function(vt, Dt, de) {
            return Dt && ne(vt.prototype, Dt), Object.defineProperty(vt, "prototype", { writable: false }), vt;
          }(Et, [{ key: "forAssetPair", value: function(vt, Dt) {
            return vt.isNative() ? this.url.setQuery("base_asset_type", "native") : (this.url.setQuery("base_asset_type", vt.getAssetType()), this.url.setQuery("base_asset_code", vt.getCode()), this.url.setQuery("base_asset_issuer", vt.getIssuer())), Dt.isNative() ? this.url.setQuery("counter_asset_type", "native") : (this.url.setQuery("counter_asset_type", Dt.getAssetType()), this.url.setQuery("counter_asset_code", Dt.getCode()), this.url.setQuery("counter_asset_issuer", Dt.getIssuer())), this;
          } }, { key: "forOffer", value: function(vt) {
            return this.url.setQuery("offer_id", vt), this;
          } }, { key: "forType", value: function(vt) {
            return this.url.setQuery("trade_type", vt), this;
          } }, { key: "forAccount", value: function(vt) {
            return this.forEndpoint("accounts", vt);
          } }, { key: "forLiquidityPool", value: function(vt) {
            return this.forEndpoint("liquidity_pools", vt);
          } }]);
        }(St);
        function ie(zt) {
          return ie = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(Et) {
            return typeof Et;
          } : function(Et) {
            return Et && typeof Symbol == "function" && Et.constructor === Symbol && Et !== Symbol.prototype ? "symbol" : typeof Et;
          }, ie(zt);
        }
        function Ae(zt, Et) {
          for (var vt = 0; vt < Et.length; vt++) {
            var Dt = Et[vt];
            Dt.enumerable = Dt.enumerable || false, Dt.configurable = true, "value" in Dt && (Dt.writable = true), Object.defineProperty(zt, ge(Dt.key), Dt);
          }
        }
        function ge(zt) {
          var Et = function(vt, Dt) {
            if (ie(vt) != "object" || !vt) return vt;
            var de = vt[Symbol.toPrimitive];
            if (de !== void 0) {
              var ae = de.call(vt, Dt);
              if (ie(ae) != "object") return ae;
              throw new TypeError("@@toPrimitive must return a primitive value.");
            }
            return String(vt);
          }(zt, "string");
          return ie(Et) == "symbol" ? Et : Et + "";
        }
        function we(zt, Et, vt) {
          return Et = nr(Et), function(Dt, de) {
            if (de && (ie(de) == "object" || typeof de == "function")) return de;
            if (de !== void 0) throw new TypeError("Derived constructors may only return object or undefined");
            return function(ae) {
              if (ae === void 0) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
              return ae;
            }(Dt);
          }(zt, sr() ? Reflect.construct(Et, vt || [], nr(zt).constructor) : Et.apply(zt, vt));
        }
        function sr() {
          try {
            var zt = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
            }));
          } catch {
          }
          return (sr = function() {
            return !!zt;
          })();
        }
        function nr(zt) {
          return nr = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function(Et) {
            return Et.__proto__ || Object.getPrototypeOf(Et);
          }, nr(zt);
        }
        function gn(zt, Et) {
          return gn = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function(vt, Dt) {
            return vt.__proto__ = Dt, vt;
          }, gn(zt, Et);
        }
        var wn = function(zt) {
          function Et(vt) {
            var Dt;
            return function(de, ae) {
              if (!(de instanceof ae)) throw new TypeError("Cannot call a class as a function");
            }(this, Et), (Dt = we(this, Et, [vt, "transactions"])).url.segment("transactions"), Dt;
          }
          return function(vt, Dt) {
            if (typeof Dt != "function" && Dt !== null) throw new TypeError("Super expression must either be null or a function");
            vt.prototype = Object.create(Dt && Dt.prototype, { constructor: { value: vt, writable: true, configurable: true } }), Object.defineProperty(vt, "prototype", { writable: false }), Dt && gn(vt, Dt);
          }(Et, zt), function(vt, Dt, de) {
            return Dt && Ae(vt.prototype, Dt), Object.defineProperty(vt, "prototype", { writable: false }), vt;
          }(Et, [{ key: "transaction", value: function(vt) {
            var Dt = new St(this.url.clone());
            return Dt.filter.push([vt]), Dt;
          } }, { key: "forAccount", value: function(vt) {
            return this.forEndpoint("accounts", vt);
          } }, { key: "forClaimableBalance", value: function(vt) {
            return this.forEndpoint("claimable_balances", vt);
          } }, { key: "forLedger", value: function(vt) {
            return this.forEndpoint("ledgers", vt.toString());
          } }, { key: "forLiquidityPool", value: function(vt) {
            return this.forEndpoint("liquidity_pools", vt);
          } }, { key: "includeFailed", value: function(vt) {
            return this.url.setQuery("include_failed", vt.toString()), this;
          } }]);
        }(St);
        function dn(zt) {
          return dn = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(Et) {
            return typeof Et;
          } : function(Et) {
            return Et && typeof Symbol == "function" && Et.constructor === Symbol && Et !== Symbol.prototype ? "symbol" : typeof Et;
          }, dn(zt);
        }
        function Vn(zt, Et) {
          var vt = Object.keys(zt);
          if (Object.getOwnPropertySymbols) {
            var Dt = Object.getOwnPropertySymbols(zt);
            Et && (Dt = Dt.filter(function(de) {
              return Object.getOwnPropertyDescriptor(zt, de).enumerable;
            })), vt.push.apply(vt, Dt);
          }
          return vt;
        }
        function ln(zt) {
          for (var Et = 1; Et < arguments.length; Et++) {
            var vt = arguments[Et] != null ? arguments[Et] : {};
            Et % 2 ? Vn(Object(vt), true).forEach(function(Dt) {
              Yr(zt, Dt, vt[Dt]);
            }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(zt, Object.getOwnPropertyDescriptors(vt)) : Vn(Object(vt)).forEach(function(Dt) {
              Object.defineProperty(zt, Dt, Object.getOwnPropertyDescriptor(vt, Dt));
            });
          }
          return zt;
        }
        function Yr(zt, Et, vt) {
          return (Et = Lo(Et)) in zt ? Object.defineProperty(zt, Et, { value: vt, enumerable: true, configurable: true, writable: true }) : zt[Et] = vt, zt;
        }
        function ao() {
          var zt, Et, vt = typeof Symbol == "function" ? Symbol : {}, Dt = vt.iterator || "@@iterator", de = vt.toStringTag || "@@toStringTag";
          function ae(No, Fo, Vo, bi) {
            var gi = Fo && Fo.prototype instanceof Sn ? Fo : Sn, ci = Object.create(gi.prototype);
            return mo(ci, "_invoke", function(me, Ke, br) {
              var yr, xr, tn, xn = 0, Or = br || [], vn = false, Kn = { p: 0, n: 0, v: zt, a: Qn, f: Qn.bind(zt, 4), d: function(Tn, In) {
                return yr = Tn, xr = 0, tn = zt, Kn.n = In, Qr;
              } };
              function Qn(Tn, In) {
                for (xr = Tn, tn = In, Et = 0; !vn && xn && !ce && Et < Or.length; Et++) {
                  var ce, be = Or[Et], Ye = Kn.p, _r = be[2];
                  Tn > 3 ? (ce = _r === In) && (tn = be[(xr = be[4]) ? 5 : (xr = 3, 3)], be[4] = be[5] = zt) : be[0] <= Ye && ((ce = Tn < 2 && Ye < be[1]) ? (xr = 0, Kn.v = In, Kn.n = be[1]) : Ye < _r && (ce = Tn < 3 || be[0] > In || In > _r) && (be[4] = Tn, be[5] = In, Kn.n = _r, xr = 0));
                }
                if (ce || Tn > 1) return Qr;
                throw vn = true, In;
              }
              return function(Tn, In, ce) {
                if (xn > 1) throw TypeError("Generator is already running");
                for (vn && In === 1 && Qn(In, ce), xr = In, tn = ce; (Et = xr < 2 ? zt : tn) || !vn; ) {
                  yr || (xr ? xr < 3 ? (xr > 1 && (Kn.n = -1), Qn(xr, tn)) : Kn.n = tn : Kn.v = tn);
                  try {
                    if (xn = 2, yr) {
                      if (xr || (Tn = "next"), Et = yr[Tn]) {
                        if (!(Et = Et.call(yr, tn))) throw TypeError("iterator result is not an object");
                        if (!Et.done) return Et;
                        tn = Et.value, xr < 2 && (xr = 0);
                      } else xr === 1 && (Et = yr.return) && Et.call(yr), xr < 2 && (tn = TypeError("The iterator does not provide a '" + Tn + "' method"), xr = 1);
                      yr = zt;
                    } else if ((Et = (vn = Kn.n < 0) ? tn : me.call(Ke, Kn)) !== Qr) break;
                  } catch (be) {
                    yr = zt, xr = 1, tn = be;
                  } finally {
                    xn = 1;
                  }
                }
                return { value: Et, done: vn };
              };
            }(No, Vo, bi), true), ci;
          }
          var Qr = {};
          function Sn() {
          }
          function fn() {
          }
          function Bn() {
          }
          Et = Object.getPrototypeOf;
          var Do = [][Dt] ? Et(Et([][Dt]())) : (mo(Et = {}, Dt, function() {
            return this;
          }), Et), go = Bn.prototype = Sn.prototype = Object.create(Do);
          function Fn(No) {
            return Object.setPrototypeOf ? Object.setPrototypeOf(No, Bn) : (No.__proto__ = Bn, mo(No, de, "GeneratorFunction")), No.prototype = Object.create(go), No;
          }
          return fn.prototype = Bn, mo(go, "constructor", Bn), mo(Bn, "constructor", fn), fn.displayName = "GeneratorFunction", mo(Bn, de, "GeneratorFunction"), mo(go), mo(go, de, "Generator"), mo(go, Dt, function() {
            return this;
          }), mo(go, "toString", function() {
            return "[object Generator]";
          }), (ao = function() {
            return { w: ae, m: Fn };
          })();
        }
        function mo(zt, Et, vt, Dt) {
          var de = Object.defineProperty;
          try {
            de({}, "", {});
          } catch {
            de = 0;
          }
          mo = function(ae, Qr, Sn, fn) {
            if (Qr) de ? de(ae, Qr, { value: Sn, enumerable: !fn, configurable: !fn, writable: !fn }) : ae[Qr] = Sn;
            else {
              let Bn = function(Do, go) {
                mo(ae, Do, function(Fn) {
                  return this._invoke(Do, go, Fn);
                });
              };
              Bn("next", 0), Bn("throw", 1), Bn("return", 2);
            }
          }, mo(zt, Et, vt, Dt);
        }
        function co(zt, Et, vt, Dt, de, ae, Qr) {
          try {
            var Sn = zt[ae](Qr), fn = Sn.value;
          } catch (Bn) {
            return void vt(Bn);
          }
          Sn.done ? Et(fn) : Promise.resolve(fn).then(Dt, de);
        }
        function So(zt) {
          return function() {
            var Et = this, vt = arguments;
            return new Promise(function(Dt, de) {
              var ae = zt.apply(Et, vt);
              function Qr(fn) {
                co(ae, Dt, de, Qr, Sn, "next", fn);
              }
              function Sn(fn) {
                co(ae, Dt, de, Qr, Sn, "throw", fn);
              }
              Qr(void 0);
            });
          };
        }
        function ho(zt, Et) {
          for (var vt = 0; vt < Et.length; vt++) {
            var Dt = Et[vt];
            Dt.enumerable = Dt.enumerable || false, Dt.configurable = true, "value" in Dt && (Dt.writable = true), Object.defineProperty(zt, Lo(Dt.key), Dt);
          }
        }
        function Lo(zt) {
          var Et = function(vt, Dt) {
            if (dn(vt) != "object" || !vt) return vt;
            var de = vt[Symbol.toPrimitive];
            if (de !== void 0) {
              var ae = de.call(vt, Dt);
              if (dn(ae) != "object") return ae;
              throw new TypeError("@@toPrimitive must return a primitive value.");
            }
            return String(vt);
          }(zt, "string");
          return dn(Et) == "symbol" ? Et : Et + "";
        }
        function Io(zt) {
          return new ft(zt).div(1e7).toString();
        }
        var Ko, ui, yi, Mi, Qo, Si, ea, _o, Wi = function(zt, Et, vt) {
          return Et && ho(zt.prototype, Et), Object.defineProperty(zt, "prototype", { writable: false }), zt;
        }(function zt(Et) {
          var vt = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};
          (function(ae, Qr) {
            if (!(ae instanceof Qr)) throw new TypeError("Cannot call a class as a function");
          })(this, zt), this.serverURL = Lt()(Et);
          var Dt = vt.allowHttp === void 0 ? kt.T.isAllowHttp() : vt.allowHttp, de = {};
          if (vt.appName && (de["X-App-Name"] = vt.appName), vt.appVersion && (de["X-App-Version"] = vt.appVersion), vt.authToken && (de["X-Auth-Token"] = vt.authToken), vt.headers && Object.assign(de, vt.headers), Object.keys(de).length > 0 && At.interceptors.request.use(function(ae) {
            return ae.headers = ae.headers || {}, ae.headers = Object.assign(ae.headers, de), ae;
          }), this.serverURL.protocol() !== "https" && !Dt) throw new Error("Cannot connect to insecure horizon server");
        }, [{ key: "fetchTimebounds", value: (_o = So(ao().m(function zt(Et) {
          var vt, Dt, de = arguments;
          return ao().w(function(ae) {
            for (; ; ) switch (ae.n) {
              case 0:
                if (vt = de.length > 1 && de[1] !== void 0 && de[1], !(Dt = Ut(this.serverURL.hostname()))) {
                  ae.n = 1;
                  break;
                }
                return ae.a(2, { minTime: 0, maxTime: Dt + Et });
              case 1:
                if (!vt) {
                  ae.n = 2;
                  break;
                }
                return ae.a(2, { minTime: 0, maxTime: Math.floor((/* @__PURE__ */ new Date()).getTime() / 1e3) + Et });
              case 2:
                return ae.n = 3, At.get(Lt()(this.serverURL).toString());
              case 3:
                return ae.a(2, this.fetchTimebounds(Et, true));
            }
          }, zt, this);
        })), function(zt) {
          return _o.apply(this, arguments);
        }) }, { key: "fetchBaseFee", value: (ea = So(ao().m(function zt() {
          var Et;
          return ao().w(function(vt) {
            for (; ; ) switch (vt.n) {
              case 0:
                return vt.n = 1, this.feeStats();
              case 1:
                return Et = vt.v, vt.a(2, parseInt(Et.last_ledger_base_fee, 10) || 100);
            }
          }, zt, this);
        })), function() {
          return ea.apply(this, arguments);
        }) }, { key: "feeStats", value: (Si = So(ao().m(function zt() {
          var Et;
          return ao().w(function(vt) {
            for (; ; ) if (vt.n === 0) return (Et = new St(Lt()(this.serverURL))).filter.push(["fee_stats"]), vt.a(2, Et.call());
          }, zt, this);
        })), function() {
          return Si.apply(this, arguments);
        }) }, { key: "root", value: (Qo = So(ao().m(function zt() {
          var Et;
          return ao().w(function(vt) {
            for (; ; ) if (vt.n === 0) return Et = new St(Lt()(this.serverURL)), vt.a(2, Et.call());
          }, zt, this);
        })), function() {
          return Qo.apply(this, arguments);
        }) }, { key: "submitTransaction", value: (Mi = So(ao().m(function zt(Et) {
          var vt, Dt = arguments;
          return ao().w(function(de) {
            for (; ; ) switch (de.n) {
              case 0:
                if ((Dt.length > 1 && Dt[1] !== void 0 ? Dt[1] : { skipMemoRequiredCheck: false }).skipMemoRequiredCheck) {
                  de.n = 1;
                  break;
                }
                return de.n = 1, this.checkMemoRequired(Et);
              case 1:
                return vt = encodeURIComponent(Et.toEnvelope().toXDR().toString("base64")), de.a(2, At.post(Lt()(this.serverURL).segment("transactions").toString(), "tx=".concat(vt), { timeout: 6e4 }).then(function(ae) {
                  if (!ae.data.result_xdr) return ae.data;
                  var Qr, Sn, fn = b.xdr.TransactionResult.fromXDR(ae.data.result_xdr, "base64").result().value();
                  return fn.length && (Qr = fn.map(function(Bn, Do) {
                    if (Bn.value().switch().name !== "manageBuyOffer" && Bn.value().switch().name !== "manageSellOffer") return null;
                    Sn = true;
                    var go, Fn = new ft(0), No = new ft(0), Fo = Bn.value().value().success(), Vo = Fo.offersClaimed().map(function(Ke) {
                      var br = Ke.value(), yr = "";
                      switch (Ke.switch()) {
                        case b.xdr.ClaimAtomType.claimAtomTypeV0():
                          yr = b.StrKey.encodeEd25519PublicKey(br.sellerEd25519());
                          break;
                        case b.xdr.ClaimAtomType.claimAtomTypeOrderBook():
                          yr = b.StrKey.encodeEd25519PublicKey(br.sellerId().ed25519());
                          break;
                        default:
                          throw new Error("Invalid offer result type: ".concat(Ke.switch()));
                      }
                      var xr = new ft(br.amountBought().toString()), tn = new ft(br.amountSold().toString());
                      Fn = Fn.plus(tn), No = No.plus(xr);
                      var xn = b.Asset.fromOperation(br.assetSold()), Or = b.Asset.fromOperation(br.assetBought()), vn = { type: xn.getAssetType(), assetCode: xn.getCode(), issuer: xn.getIssuer() }, Kn = { type: Or.getAssetType(), assetCode: Or.getCode(), issuer: Or.getIssuer() };
                      return { sellerId: yr, offerId: br.offerId().toString(), assetSold: vn, amountSold: Io(tn), assetBought: Kn, amountBought: Io(xr) };
                    }), bi = Fo.offer().switch().name;
                    if (typeof Fo.offer().value == "function" && Fo.offer().value()) {
                      var gi = Fo.offer().value();
                      go = { offerId: gi.offerId().toString(), selling: {}, buying: {}, amount: Io(gi.amount().toString()), price: { n: gi.price().n(), d: gi.price().d() } };
                      var ci = b.Asset.fromOperation(gi.selling());
                      go.selling = { type: ci.getAssetType(), assetCode: ci.getCode(), issuer: ci.getIssuer() };
                      var me = b.Asset.fromOperation(gi.buying());
                      go.buying = { type: me.getAssetType(), assetCode: me.getCode(), issuer: me.getIssuer() };
                    }
                    return { offersClaimed: Vo, effect: bi, operationIndex: Do, currentOffer: go, amountBought: Io(Fn), amountSold: Io(No), isFullyOpen: !Vo.length && bi !== "manageOfferDeleted", wasPartiallyFilled: !!Vo.length && bi !== "manageOfferDeleted", wasImmediatelyFilled: !!Vo.length && bi === "manageOfferDeleted", wasImmediatelyDeleted: !Vo.length && bi === "manageOfferDeleted" };
                  }).filter(function(Bn) {
                    return !!Bn;
                  })), ln(ln({}, ae.data), {}, { offerResults: Sn ? Qr : void 0 });
                }).catch(function(ae) {
                  return ae instanceof Error ? Promise.reject(ae) : Promise.reject(new mt.nS("Transaction submission failed. Server responded: ".concat(ae.status, " ").concat(ae.statusText), ae.data));
                }));
            }
          }, zt, this);
        })), function(zt) {
          return Mi.apply(this, arguments);
        }) }, { key: "submitAsyncTransaction", value: (yi = So(ao().m(function zt(Et) {
          var vt, Dt = arguments;
          return ao().w(function(de) {
            for (; ; ) switch (de.n) {
              case 0:
                if ((Dt.length > 1 && Dt[1] !== void 0 ? Dt[1] : { skipMemoRequiredCheck: false }).skipMemoRequiredCheck) {
                  de.n = 1;
                  break;
                }
                return de.n = 1, this.checkMemoRequired(Et);
              case 1:
                return vt = encodeURIComponent(Et.toEnvelope().toXDR().toString("base64")), de.a(2, At.post(Lt()(this.serverURL).segment("transactions_async").toString(), "tx=".concat(vt)).then(function(ae) {
                  return ae.data;
                }).catch(function(ae) {
                  return ae instanceof Error ? Promise.reject(ae) : Promise.reject(new mt.nS("Transaction submission failed. Server responded: ".concat(ae.status, " ").concat(ae.statusText), ae.data));
                }));
            }
          }, zt, this);
        })), function(zt) {
          return yi.apply(this, arguments);
        }) }, { key: "accounts", value: function() {
          return new Jt(Lt()(this.serverURL));
        } }, { key: "claimableBalances", value: function() {
          return new Ir(Lt()(this.serverURL));
        } }, { key: "ledgers", value: function() {
          return new hi(Lt()(this.serverURL));
        } }, { key: "transactions", value: function() {
          return new wn(Lt()(this.serverURL));
        } }, { key: "offers", value: function() {
          return new an(Lt()(this.serverURL));
        } }, { key: "orderbook", value: function(zt, Et) {
          return new Me(Lt()(this.serverURL), zt, Et);
        } }, { key: "trades", value: function() {
          return new It(Lt()(this.serverURL));
        } }, { key: "operations", value: function() {
          return new ue(Lt()(this.serverURL));
        } }, { key: "liquidityPools", value: function() {
          return new qe(Lt()(this.serverURL));
        } }, { key: "strictReceivePaths", value: function(zt, Et, vt) {
          return new Xo(Lt()(this.serverURL), zt, Et, vt);
        } }, { key: "strictSendPaths", value: function(zt, Et, vt) {
          return new ee(Lt()(this.serverURL), zt, Et, vt);
        } }, { key: "payments", value: function() {
          return new sn(Lt()(this.serverURL));
        } }, { key: "effects", value: function() {
          return new uo(Lt()(this.serverURL));
        } }, { key: "friendbot", value: function(zt) {
          return new ri(Lt()(this.serverURL), zt);
        } }, { key: "assets", value: function() {
          return new jn(Lt()(this.serverURL));
        } }, { key: "loadAccount", value: (ui = So(ao().m(function zt(Et) {
          var vt;
          return ao().w(function(Dt) {
            for (; ; ) switch (Dt.n) {
              case 0:
                return Dt.n = 1, this.accounts().accountId(Et).call();
              case 1:
                return vt = Dt.v, Dt.a(2, new R(vt));
            }
          }, zt, this);
        })), function(zt) {
          return ui.apply(this, arguments);
        }) }, { key: "tradeAggregation", value: function(zt, Et, vt, Dt, de, ae) {
          return new Ft(Lt()(this.serverURL), zt, Et, vt, Dt, de, ae);
        } }, { key: "checkMemoRequired", value: (Ko = So(ao().m(function zt(Et) {
          var vt, Dt, de, ae, Qr, Sn;
          return ao().w(function(fn) {
            for (; ; ) switch (fn.p = fn.n) {
              case 0:
                if (Et instanceof b.FeeBumpTransaction && (Et = Et.innerTransaction), Et.memo.type === "none") {
                  fn.n = 1;
                  break;
                }
                return fn.a(2);
              case 1:
                vt = /* @__PURE__ */ new Set(), Dt = 0;
              case 2:
                if (!(Dt < Et.operations.length)) {
                  fn.n = 14;
                  break;
                }
                de = Et.operations[Dt], Qr = de.type, fn.n = Qr === "payment" || Qr === "pathPaymentStrictReceive" || Qr === "pathPaymentStrictSend" || Qr === "accountMerge" ? 3 : 4;
                break;
              case 3:
                return fn.a(3, 5);
              case 4:
                return fn.a(3, 13);
              case 5:
                if (ae = de.destination, !vt.has(ae)) {
                  fn.n = 6;
                  break;
                }
                return fn.a(3, 13);
              case 6:
                if (vt.add(ae), !ae.startsWith("M")) {
                  fn.n = 7;
                  break;
                }
                return fn.a(3, 13);
              case 7:
                return fn.p = 7, fn.n = 8, this.loadAccount(ae);
              case 8:
                if (fn.v.data_attr["config.memo_required"] !== "MQ==") {
                  fn.n = 9;
                  break;
                }
                throw new mt.Cu("account requires memo", ae, Dt);
              case 9:
                fn.n = 13;
                break;
              case 10:
                if (fn.p = 10, !((Sn = fn.v) instanceof mt.Cu)) {
                  fn.n = 11;
                  break;
                }
                throw Sn;
              case 11:
                if (Sn instanceof mt.m_) {
                  fn.n = 12;
                  break;
                }
                throw Sn;
              case 12:
                return fn.a(3, 13);
              case 13:
                Dt += 1, fn.n = 2;
                break;
              case 14:
                return fn.a(2);
            }
          }, zt, this, [[7, 10]]);
        })), function(zt) {
          return Ko.apply(this, arguments);
        }) }]);
        const Ui = (s = u.hmd(s)).exports;
      }, 8835: (s, i, u) => {
        var d = u(1270);
        function f() {
          this.protocol = null, this.slashes = null, this.auth = null, this.host = null, this.port = null, this.hostname = null, this.hash = null, this.search = null, this.query = null, this.pathname = null, this.path = null, this.href = null;
        }
        var p = /^([a-z0-9.+-]+:)/i, g = /:[0-9]*$/, b = /^(\/\/?(?!\/)[^?\s]*)(\?[^\s]*)?$/, h = ["{", "}", "|", "\\", "^", "`"].concat(["<", ">", '"', "`", " ", "\r", `
`, "	"]), m = ["'"].concat(h), c = ["%", "/", "?", ";", "#"].concat(m), w = ["/", "?", "#"], T = /^[+a-z0-9A-Z_-]{0,63}$/, P = /^([+a-z0-9A-Z_-]{0,63})(.*)$/, k = { javascript: true, "javascript:": true }, R = { javascript: true, "javascript:": true }, F = { http: true, https: true, ftp: true, gopher: true, file: true, "http:": true, "https:": true, "ftp:": true, "gopher:": true, "file:": true }, v = u(5373);
        function U(M, Z, D) {
          if (M && typeof M == "object" && M instanceof f) return M;
          var V = new f();
          return V.parse(M, Z, D), V;
        }
        f.prototype.parse = function(M, Z, D) {
          if (typeof M != "string") throw new TypeError("Parameter 'url' must be a string, not " + typeof M);
          var V = M.indexOf("?"), S = V !== -1 && V < M.indexOf("#") ? "?" : "#", x = M.split(S);
          x[0] = x[0].replace(/\\/g, "/");
          var B = M = x.join(S);
          if (B = B.trim(), !D && M.split("#").length === 1) {
            var W = b.exec(B);
            if (W) return this.path = B, this.href = B, this.pathname = W[1], W[2] ? (this.search = W[2], this.query = Z ? v.parse(this.search.substr(1)) : this.search.substr(1)) : Z && (this.search = "", this.query = {}), this;
          }
          var lt = p.exec(B);
          if (lt) {
            var pt = (lt = lt[0]).toLowerCase();
            this.protocol = pt, B = B.substr(lt.length);
          }
          if (D || lt || B.match(/^\/\/[^@/]+@[^@/]+/)) {
            var at = B.substr(0, 2) === "//";
            !at || lt && R[lt] || (B = B.substr(2), this.slashes = true);
          }
          if (!R[lt] && (at || lt && !F[lt])) {
            for (var rt, ot, X = -1, I = 0; I < w.length; I++) (nt = B.indexOf(w[I])) !== -1 && (X === -1 || nt < X) && (X = nt);
            for ((ot = X === -1 ? B.lastIndexOf("@") : B.lastIndexOf("@", X)) !== -1 && (rt = B.slice(0, ot), B = B.slice(ot + 1), this.auth = decodeURIComponent(rt)), X = -1, I = 0; I < c.length; I++) {
              var nt;
              (nt = B.indexOf(c[I])) !== -1 && (X === -1 || nt < X) && (X = nt);
            }
            X === -1 && (X = B.length), this.host = B.slice(0, X), B = B.slice(X), this.parseHost(), this.hostname = this.hostname || "";
            var ft = this.hostname[0] === "[" && this.hostname[this.hostname.length - 1] === "]";
            if (!ft) for (var dt = this.hostname.split(/\./), Lt = (I = 0, dt.length); I < Lt; I++) {
              var $ = dt[I];
              if ($ && !$.match(T)) {
                for (var it = "", mt = 0, Ot = $.length; mt < Ot; mt++) $.charCodeAt(mt) > 127 ? it += "x" : it += $[mt];
                if (!it.match(T)) {
                  var bt = dt.slice(0, I), xt = dt.slice(I + 1), Ct = $.match(P);
                  Ct && (bt.push(Ct[1]), xt.unshift(Ct[2])), xt.length && (B = "/" + xt.join(".") + B), this.hostname = bt.join(".");
                  break;
                }
              }
            }
            this.hostname.length > 255 ? this.hostname = "" : this.hostname = this.hostname.toLowerCase(), ft || (this.hostname = d.toASCII(this.hostname));
            var Tt = this.port ? ":" + this.port : "", Bt = this.hostname || "";
            this.host = Bt + Tt, this.href += this.host, ft && (this.hostname = this.hostname.substr(1, this.hostname.length - 2), B[0] !== "/" && (B = "/" + B));
          }
          if (!k[pt]) for (I = 0, Lt = m.length; I < Lt; I++) {
            var At = m[I];
            if (B.indexOf(At) !== -1) {
              var Ut = encodeURIComponent(At);
              Ut === At && (Ut = escape(At)), B = B.split(At).join(Ut);
            }
          }
          var Vt = B.indexOf("#");
          Vt !== -1 && (this.hash = B.substr(Vt), B = B.slice(0, Vt));
          var oe = B.indexOf("?");
          if (oe !== -1 ? (this.search = B.substr(oe), this.query = B.substr(oe + 1), Z && (this.query = v.parse(this.query)), B = B.slice(0, oe)) : Z && (this.search = "", this.query = {}), B && (this.pathname = B), F[pt] && this.hostname && !this.pathname && (this.pathname = "/"), this.pathname || this.search) {
            Tt = this.pathname || "";
            var te = this.search || "";
            this.path = Tt + te;
          }
          return this.href = this.format(), this;
        }, f.prototype.format = function() {
          var M = this.auth || "";
          M && (M = (M = encodeURIComponent(M)).replace(/%3A/i, ":"), M += "@");
          var Z = this.protocol || "", D = this.pathname || "", V = this.hash || "", S = false, x = "";
          this.host ? S = M + this.host : this.hostname && (S = M + (this.hostname.indexOf(":") === -1 ? this.hostname : "[" + this.hostname + "]"), this.port && (S += ":" + this.port)), this.query && typeof this.query == "object" && Object.keys(this.query).length && (x = v.stringify(this.query, { arrayFormat: "repeat", addQueryPrefix: false }));
          var B = this.search || x && "?" + x || "";
          return Z && Z.substr(-1) !== ":" && (Z += ":"), this.slashes || (!Z || F[Z]) && S !== false ? (S = "//" + (S || ""), D && D.charAt(0) !== "/" && (D = "/" + D)) : S || (S = ""), V && V.charAt(0) !== "#" && (V = "#" + V), B && B.charAt(0) !== "?" && (B = "?" + B), Z + S + (D = D.replace(/[?#]/g, function(W) {
            return encodeURIComponent(W);
          })) + (B = B.replace("#", "%23")) + V;
        }, f.prototype.resolve = function(M) {
          return this.resolveObject(U(M, false, true)).format();
        }, f.prototype.resolveObject = function(M) {
          if (typeof M == "string") {
            var Z = new f();
            Z.parse(M, false, true), M = Z;
          }
          for (var D = new f(), V = Object.keys(this), S = 0; S < V.length; S++) {
            var x = V[S];
            D[x] = this[x];
          }
          if (D.hash = M.hash, M.href === "") return D.href = D.format(), D;
          if (M.slashes && !M.protocol) {
            for (var B = Object.keys(M), W = 0; W < B.length; W++) {
              var lt = B[W];
              lt !== "protocol" && (D[lt] = M[lt]);
            }
            return F[D.protocol] && D.hostname && !D.pathname && (D.pathname = "/", D.path = D.pathname), D.href = D.format(), D;
          }
          if (M.protocol && M.protocol !== D.protocol) {
            if (!F[M.protocol]) {
              for (var pt = Object.keys(M), at = 0; at < pt.length; at++) {
                var rt = pt[at];
                D[rt] = M[rt];
              }
              return D.href = D.format(), D;
            }
            if (D.protocol = M.protocol, M.host || R[M.protocol]) D.pathname = M.pathname;
            else {
              for (var ot = (M.pathname || "").split("/"); ot.length && !(M.host = ot.shift()); ) ;
              M.host || (M.host = ""), M.hostname || (M.hostname = ""), ot[0] !== "" && ot.unshift(""), ot.length < 2 && ot.unshift(""), D.pathname = ot.join("/");
            }
            if (D.search = M.search, D.query = M.query, D.host = M.host || "", D.auth = M.auth, D.hostname = M.hostname || M.host, D.port = M.port, D.pathname || D.search) {
              var X = D.pathname || "", I = D.search || "";
              D.path = X + I;
            }
            return D.slashes = D.slashes || M.slashes, D.href = D.format(), D;
          }
          var nt = D.pathname && D.pathname.charAt(0) === "/", ft = M.host || M.pathname && M.pathname.charAt(0) === "/", dt = ft || nt || D.host && M.pathname, Lt = dt, $ = D.pathname && D.pathname.split("/") || [], it = (ot = M.pathname && M.pathname.split("/") || [], D.protocol && !F[D.protocol]);
          if (it && (D.hostname = "", D.port = null, D.host && ($[0] === "" ? $[0] = D.host : $.unshift(D.host)), D.host = "", M.protocol && (M.hostname = null, M.port = null, M.host && (ot[0] === "" ? ot[0] = M.host : ot.unshift(M.host)), M.host = null), dt = dt && (ot[0] === "" || $[0] === "")), ft) D.host = M.host || M.host === "" ? M.host : D.host, D.hostname = M.hostname || M.hostname === "" ? M.hostname : D.hostname, D.search = M.search, D.query = M.query, $ = ot;
          else if (ot.length) $ || ($ = []), $.pop(), $ = $.concat(ot), D.search = M.search, D.query = M.query;
          else if (M.search != null) return it && (D.host = $.shift(), D.hostname = D.host, (Ct = !!(D.host && D.host.indexOf("@") > 0) && D.host.split("@")) && (D.auth = Ct.shift(), D.hostname = Ct.shift(), D.host = D.hostname)), D.search = M.search, D.query = M.query, D.pathname === null && D.search === null || (D.path = (D.pathname ? D.pathname : "") + (D.search ? D.search : "")), D.href = D.format(), D;
          if (!$.length) return D.pathname = null, D.search ? D.path = "/" + D.search : D.path = null, D.href = D.format(), D;
          for (var mt = $.slice(-1)[0], Ot = (D.host || M.host || $.length > 1) && (mt === "." || mt === "..") || mt === "", bt = 0, xt = $.length; xt >= 0; xt--) (mt = $[xt]) === "." ? $.splice(xt, 1) : mt === ".." ? ($.splice(xt, 1), bt++) : bt && ($.splice(xt, 1), bt--);
          if (!dt && !Lt) for (; bt--; bt) $.unshift("..");
          !dt || $[0] === "" || $[0] && $[0].charAt(0) === "/" || $.unshift(""), Ot && $.join("/").substr(-1) !== "/" && $.push("");
          var Ct, Tt = $[0] === "" || $[0] && $[0].charAt(0) === "/";
          return it && (D.hostname = Tt ? "" : $.length ? $.shift() : "", D.host = D.hostname, (Ct = !!(D.host && D.host.indexOf("@") > 0) && D.host.split("@")) && (D.auth = Ct.shift(), D.hostname = Ct.shift(), D.host = D.hostname)), (dt = dt || D.host && $.length) && !Tt && $.unshift(""), $.length > 0 ? D.pathname = $.join("/") : (D.pathname = null, D.path = null), D.pathname === null && D.search === null || (D.path = (D.pathname ? D.pathname : "") + (D.search ? D.search : "")), D.auth = M.auth || D.auth, D.slashes = D.slashes || M.slashes, D.href = D.format(), D;
        }, f.prototype.parseHost = function() {
          var M = this.host, Z = g.exec(M);
          Z && ((Z = Z[0]) !== ":" && (this.port = Z.substr(1)), M = M.substr(0, M.length - Z.length)), M && (this.hostname = M);
        }, i.parse = U, i.resolve = function(M, Z) {
          return U(M, false, true).resolve(Z);
        }, i.resolveObject = function(M, Z) {
          return M ? U(M, false, true).resolveObject(Z) : Z;
        }, i.format = function(M) {
          return typeof M == "string" && (M = U(M)), M instanceof f ? M.format() : f.prototype.format.call(M);
        }, i.Url = f;
      }, 8859: (s, i, u) => {
        var d = typeof Map == "function" && Map.prototype, f = Object.getOwnPropertyDescriptor && d ? Object.getOwnPropertyDescriptor(Map.prototype, "size") : null, p = d && f && typeof f.get == "function" ? f.get : null, g = d && Map.prototype.forEach, b = typeof Set == "function" && Set.prototype, h = Object.getOwnPropertyDescriptor && b ? Object.getOwnPropertyDescriptor(Set.prototype, "size") : null, m = b && h && typeof h.get == "function" ? h.get : null, c = b && Set.prototype.forEach, w = typeof WeakMap == "function" && WeakMap.prototype ? WeakMap.prototype.has : null, T = typeof WeakSet == "function" && WeakSet.prototype ? WeakSet.prototype.has : null, P = typeof WeakRef == "function" && WeakRef.prototype ? WeakRef.prototype.deref : null, k = Boolean.prototype.valueOf, R = Object.prototype.toString, F = Function.prototype.toString, v = String.prototype.match, U = String.prototype.slice, M = String.prototype.replace, Z = String.prototype.toUpperCase, D = String.prototype.toLowerCase, V = RegExp.prototype.test, S = Array.prototype.concat, x = Array.prototype.join, B = Array.prototype.slice, W = Math.floor, lt = typeof BigInt == "function" ? BigInt.prototype.valueOf : null, pt = Object.getOwnPropertySymbols, at = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? Symbol.prototype.toString : null, rt = typeof Symbol == "function" && typeof Symbol.iterator == "object", ot = typeof Symbol == "function" && Symbol.toStringTag && (typeof Symbol.toStringTag === rt || true) ? Symbol.toStringTag : null, X = Object.prototype.propertyIsEnumerable, I = (typeof Reflect == "function" ? Reflect.getPrototypeOf : Object.getPrototypeOf) || ([].__proto__ === Array.prototype ? function(tt) {
          return tt.__proto__;
        } : null);
        function nt(tt, H) {
          if (tt === 1 / 0 || tt === -1 / 0 || tt != tt || tt && tt > -1e3 && tt < 1e3 || V.call(/e/, H)) return H;
          var K = /[0-9](?=(?:[0-9]{3})+(?![0-9]))/g;
          if (typeof tt == "number") {
            var q = tt < 0 ? -W(-tt) : W(tt);
            if (q !== tt) {
              var _ = String(q), L = U.call(H, _.length + 1);
              return M.call(_, K, "$&_") + "." + M.call(M.call(L, /([0-9]{3})/g, "$&_"), /_$/, "");
            }
          }
          return M.call(H, K, "$&_");
        }
        var ft = u(2634), dt = ft.custom, Lt = Tt(dt) ? dt : null, $ = { __proto__: null, double: '"', single: "'" }, it = { __proto__: null, double: /(["\\])/g, single: /(['\\])/g };
        function mt(tt, H, K) {
          var q = K.quoteStyle || H, _ = $[q];
          return _ + tt + _;
        }
        function Ot(tt) {
          return M.call(String(tt), /"/g, "&quot;");
        }
        function bt(tt) {
          return !ot || !(typeof tt == "object" && (ot in tt || tt[ot] !== void 0));
        }
        function xt(tt) {
          return Ut(tt) === "[object Array]" && bt(tt);
        }
        function Ct(tt) {
          return Ut(tt) === "[object RegExp]" && bt(tt);
        }
        function Tt(tt) {
          if (rt) return tt && typeof tt == "object" && tt instanceof Symbol;
          if (typeof tt == "symbol") return true;
          if (!tt || typeof tt != "object" || !at) return false;
          try {
            return at.call(tt), true;
          } catch {
          }
          return false;
        }
        s.exports = function tt(H, K, q, _) {
          var L = K || {};
          if (At(L, "quoteStyle") && !At($, L.quoteStyle)) throw new TypeError('option "quoteStyle" must be "single" or "double"');
          if (At(L, "maxStringLength") && (typeof L.maxStringLength == "number" ? L.maxStringLength < 0 && L.maxStringLength !== 1 / 0 : L.maxStringLength !== null)) throw new TypeError('option "maxStringLength", if provided, must be a positive integer, Infinity, or `null`');
          var et = !At(L, "customInspect") || L.customInspect;
          if (typeof et != "boolean" && et !== "symbol") throw new TypeError("option \"customInspect\", if provided, must be `true`, `false`, or `'symbol'`");
          if (At(L, "indent") && L.indent !== null && L.indent !== "	" && !(parseInt(L.indent, 10) === L.indent && L.indent > 0)) throw new TypeError('option "indent" must be "\\t", an integer > 0, or `null`');
          if (At(L, "numericSeparator") && typeof L.numericSeparator != "boolean") throw new TypeError('option "numericSeparator", if provided, must be `true` or `false`');
          var St = L.numericSeparator;
          if (H === void 0) return "undefined";
          if (H === null) return "null";
          if (typeof H == "boolean") return H ? "true" : "false";
          if (typeof H == "string") return oe(H, L);
          if (typeof H == "number") {
            if (H === 0) return 1 / 0 / H > 0 ? "0" : "-0";
            var kt = String(H);
            return St ? nt(H, kt) : kt;
          }
          if (typeof H == "bigint") {
            var ct = String(H) + "n";
            return St ? nt(H, ct) : ct;
          }
          var j = L.depth === void 0 ? 5 : L.depth;
          if (q === void 0 && (q = 0), q >= j && j > 0 && typeof H == "object") return xt(H) ? "[Array]" : "[Object]";
          var ut = function(se, rr) {
            var Tr;
            if (se.indent === "	") Tr = "	";
            else {
              if (!(typeof se.indent == "number" && se.indent > 0)) return null;
              Tr = x.call(Array(se.indent + 1), " ");
            }
            return { base: Tr, prev: x.call(Array(rr + 1), Tr) };
          }(L, q);
          if (_ === void 0) _ = [];
          else if (Vt(_, H) >= 0) return "[Circular]";
          function gt(se, rr, Tr) {
            if (rr && (_ = B.call(_)).push(rr), Tr) {
              var mr = { depth: L.depth };
              return At(L, "quoteStyle") && (mr.quoteStyle = L.quoteStyle), tt(se, mr, q + 1, _);
            }
            return tt(se, L, q + 1, _);
          }
          if (typeof H == "function" && !Ct(H)) {
            var $t = function(se) {
              if (se.name) return se.name;
              var rr = v.call(F.call(se), /^function\s*([\w$]+)/);
              return rr ? rr[1] : null;
            }(H), Ht = J(H, gt);
            return "[Function" + ($t ? ": " + $t : " (anonymous)") + "]" + (Ht.length > 0 ? " { " + x.call(Ht, ", ") + " }" : "");
          }
          if (Tt(H)) {
            var wt = rt ? M.call(String(H), /^(Symbol\(.*\))_[^)]*$/, "$1") : at.call(H);
            return typeof H != "object" || rt ? wt : yt(wt);
          }
          if (function(se) {
            return !se || typeof se != "object" ? false : typeof HTMLElement < "u" && se instanceof HTMLElement ? true : typeof se.nodeName == "string" && typeof se.getAttribute == "function";
          }(H)) {
            for (var Jt = "<" + D.call(String(H.nodeName)), Ee = H.attributes || [], cr = 0; cr < Ee.length; cr++) Jt += " " + Ee[cr].name + "=" + mt(Ot(Ee[cr].value), "double", L);
            return Jt += ">", H.childNodes && H.childNodes.length && (Jt += "..."), Jt += "</" + D.call(String(H.nodeName)) + ">";
          }
          if (xt(H)) {
            if (H.length === 0) return "[]";
            var Lr = J(H, gt);
            return ut && !function(se) {
              for (var rr = 0; rr < se.length; rr++) if (Vt(se[rr], `
`) >= 0) return false;
              return true;
            }(Lr) ? "[" + z(Lr, ut) + "]" : "[ " + x.call(Lr, ", ") + " ]";
          }
          if (function(se) {
            return Ut(se) === "[object Error]" && bt(se);
          }(H)) {
            var on = J(H, gt);
            return "cause" in Error.prototype || !("cause" in H) || X.call(H, "cause") ? on.length === 0 ? "[" + String(H) + "]" : "{ [" + String(H) + "] " + x.call(on, ", ") + " }" : "{ [" + String(H) + "] " + x.call(S.call("[cause]: " + gt(H.cause), on), ", ") + " }";
          }
          if (typeof H == "object" && et) {
            if (Lt && typeof H[Lt] == "function" && ft) return ft(H, { depth: j - q });
            if (et !== "symbol" && typeof H.inspect == "function") return H.inspect();
          }
          if (function(se) {
            if (!p || !se || typeof se != "object") return false;
            try {
              p.call(se);
              try {
                m.call(se);
              } catch {
                return true;
              }
              return se instanceof Map;
            } catch {
            }
            return false;
          }(H)) {
            var Zr = [];
            return g && g.call(H, function(se, rr) {
              Zr.push(gt(rr, H, true) + " => " + gt(se, H));
            }), O("Map", p.call(H), Zr, ut);
          }
          if (function(se) {
            if (!m || !se || typeof se != "object") return false;
            try {
              m.call(se);
              try {
                p.call(se);
              } catch {
                return true;
              }
              return se instanceof Set;
            } catch {
            }
            return false;
          }(H)) {
            var to = [];
            return c && c.call(H, function(se) {
              to.push(gt(se, H));
            }), O("Set", m.call(H), to, ut);
          }
          if (function(se) {
            if (!w || !se || typeof se != "object") return false;
            try {
              w.call(se, w);
              try {
                T.call(se, T);
              } catch {
                return true;
              }
              return se instanceof WeakMap;
            } catch {
            }
            return false;
          }(H)) return Mt("WeakMap");
          if (function(se) {
            if (!T || !se || typeof se != "object") return false;
            try {
              T.call(se, T);
              try {
                w.call(se, w);
              } catch {
                return true;
              }
              return se instanceof WeakSet;
            } catch {
            }
            return false;
          }(H)) return Mt("WeakSet");
          if (function(se) {
            if (!P || !se || typeof se != "object") return false;
            try {
              return P.call(se), true;
            } catch {
            }
            return false;
          }(H)) return Mt("WeakRef");
          if (function(se) {
            return Ut(se) === "[object Number]" && bt(se);
          }(H)) return yt(gt(Number(H)));
          if (function(se) {
            if (!se || typeof se != "object" || !lt) return false;
            try {
              return lt.call(se), true;
            } catch {
            }
            return false;
          }(H)) return yt(gt(lt.call(H)));
          if (function(se) {
            return Ut(se) === "[object Boolean]" && bt(se);
          }(H)) return yt(k.call(H));
          if (function(se) {
            return Ut(se) === "[object String]" && bt(se);
          }(H)) return yt(gt(String(H)));
          if (typeof window < "u" && H === window) return "{ [object Window] }";
          if (typeof globalThis < "u" && H === globalThis || u.g !== void 0 && H === u.g) return "{ [object globalThis] }";
          if (!function(se) {
            return Ut(se) === "[object Date]" && bt(se);
          }(H) && !Ct(H)) {
            var qn = J(H, gt), jn = I ? I(H) === Object.prototype : H instanceof Object || H.constructor === Object, eo = H instanceof Object ? "" : "null prototype", no = !jn && ot && Object(H) === H && ot in H ? U.call(Ut(H), 8, -1) : eo ? "Object" : "", Dn = (jn || typeof H.constructor != "function" ? "" : H.constructor.name ? H.constructor.name + " " : "") + (no || eo ? "[" + x.call(S.call([], no || [], eo || []), ": ") + "] " : "");
            return qn.length === 0 ? Dn + "{}" : ut ? Dn + "{" + z(qn, ut) + "}" : Dn + "{ " + x.call(qn, ", ") + " }";
          }
          return String(H);
        };
        var Bt = Object.prototype.hasOwnProperty || function(tt) {
          return tt in this;
        };
        function At(tt, H) {
          return Bt.call(tt, H);
        }
        function Ut(tt) {
          return R.call(tt);
        }
        function Vt(tt, H) {
          if (tt.indexOf) return tt.indexOf(H);
          for (var K = 0, q = tt.length; K < q; K++) if (tt[K] === H) return K;
          return -1;
        }
        function oe(tt, H) {
          if (tt.length > H.maxStringLength) {
            var K = tt.length - H.maxStringLength, q = "... " + K + " more character" + (K > 1 ? "s" : "");
            return oe(U.call(tt, 0, H.maxStringLength), H) + q;
          }
          var _ = it[H.quoteStyle || "single"];
          return _.lastIndex = 0, mt(M.call(M.call(tt, _, "\\$1"), /[\x00-\x1f]/g, te), "single", H);
        }
        function te(tt) {
          var H = tt.charCodeAt(0), K = { 8: "b", 9: "t", 10: "n", 12: "f", 13: "r" }[H];
          return K ? "\\" + K : "\\x" + (H < 16 ? "0" : "") + Z.call(H.toString(16));
        }
        function yt(tt) {
          return "Object(" + tt + ")";
        }
        function Mt(tt) {
          return tt + " { ? }";
        }
        function O(tt, H, K, q) {
          return tt + " (" + H + ") {" + (q ? z(K, q) : x.call(K, ", ")) + "}";
        }
        function z(tt, H) {
          if (tt.length === 0) return "";
          var K = `
` + H.prev + H.base;
          return K + x.call(tt, "," + K) + `
` + H.prev;
        }
        function J(tt, H) {
          var K = xt(tt), q = [];
          if (K) {
            q.length = tt.length;
            for (var _ = 0; _ < tt.length; _++) q[_] = At(tt, _) ? H(tt[_], tt) : "";
          }
          var L, et = typeof pt == "function" ? pt(tt) : [];
          if (rt) {
            L = {};
            for (var St = 0; St < et.length; St++) L["$" + et[St]] = et[St];
          }
          for (var kt in tt) At(tt, kt) && (K && String(Number(kt)) === kt && kt < tt.length || rt && L["$" + kt] instanceof Symbol || (V.call(/[^\w$]/, kt) ? q.push(H(kt, tt) + ": " + H(tt[kt], tt)) : q.push(kt + ": " + H(tt[kt], tt))));
          if (typeof pt == "function") for (var ct = 0; ct < et.length; ct++) X.call(tt, et[ct]) && q.push("[" + H(et[ct]) + "]: " + H(tt[et[ct]], tt));
          return q;
        }
      }, 8950: (s) => {
        var i;
        i = () => (() => {
          var u = { 41: (p, g, b) => {
            var h = b(655), m = b(8068), c = b(9675), w = b(5795);
            p.exports = function(T, P, k) {
              if (!T || typeof T != "object" && typeof T != "function") throw new c("`obj` must be an object or a function`");
              if (typeof P != "string" && typeof P != "symbol") throw new c("`property` must be a string or a symbol`");
              if (arguments.length > 3 && typeof arguments[3] != "boolean" && arguments[3] !== null) throw new c("`nonEnumerable`, if provided, must be a boolean or null");
              if (arguments.length > 4 && typeof arguments[4] != "boolean" && arguments[4] !== null) throw new c("`nonWritable`, if provided, must be a boolean or null");
              if (arguments.length > 5 && typeof arguments[5] != "boolean" && arguments[5] !== null) throw new c("`nonConfigurable`, if provided, must be a boolean or null");
              if (arguments.length > 6 && typeof arguments[6] != "boolean") throw new c("`loose`, if provided, must be a boolean");
              var R = arguments.length > 3 ? arguments[3] : null, F = arguments.length > 4 ? arguments[4] : null, v = arguments.length > 5 ? arguments[5] : null, U = arguments.length > 6 && arguments[6], M = !!w && w(T, P);
              if (h) h(T, P, { configurable: v === null && M ? M.configurable : !v, enumerable: R === null && M ? M.enumerable : !R, value: k, writable: F === null && M ? M.writable : !F });
              else {
                if (!U && (R || F || v)) throw new m("This environment does not support defining a property as non-configurable, non-writable, or non-enumerable.");
                T[P] = k;
              }
            };
          }, 76: (p) => {
            p.exports = Function.prototype.call;
          }, 251: (p, g) => {
            g.read = function(b, h, m, c, w) {
              var T, P, k = 8 * w - c - 1, R = (1 << k) - 1, F = R >> 1, v = -7, U = m ? w - 1 : 0, M = m ? -1 : 1, Z = b[h + U];
              for (U += M, T = Z & (1 << -v) - 1, Z >>= -v, v += k; v > 0; T = 256 * T + b[h + U], U += M, v -= 8) ;
              for (P = T & (1 << -v) - 1, T >>= -v, v += c; v > 0; P = 256 * P + b[h + U], U += M, v -= 8) ;
              if (T === 0) T = 1 - F;
              else {
                if (T === R) return P ? NaN : 1 / 0 * (Z ? -1 : 1);
                P += Math.pow(2, c), T -= F;
              }
              return (Z ? -1 : 1) * P * Math.pow(2, T - c);
            }, g.write = function(b, h, m, c, w, T) {
              var P, k, R, F = 8 * T - w - 1, v = (1 << F) - 1, U = v >> 1, M = w === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0, Z = c ? 0 : T - 1, D = c ? 1 : -1, V = h < 0 || h === 0 && 1 / h < 0 ? 1 : 0;
              for (h = Math.abs(h), isNaN(h) || h === 1 / 0 ? (k = isNaN(h) ? 1 : 0, P = v) : (P = Math.floor(Math.log(h) / Math.LN2), h * (R = Math.pow(2, -P)) < 1 && (P--, R *= 2), (h += P + U >= 1 ? M / R : M * Math.pow(2, 1 - U)) * R >= 2 && (P++, R /= 2), P + U >= v ? (k = 0, P = v) : P + U >= 1 ? (k = (h * R - 1) * Math.pow(2, w), P += U) : (k = h * Math.pow(2, U - 1) * Math.pow(2, w), P = 0)); w >= 8; b[m + Z] = 255 & k, Z += D, k /= 256, w -= 8) ;
              for (P = P << w | k, F += w; F > 0; b[m + Z] = 255 & P, Z += D, P /= 256, F -= 8) ;
              b[m + Z - D] |= 128 * V;
            };
          }, 392: (p, g, b) => {
            var h = b(2861).Buffer;
            function m(c, w) {
              this._block = h.alloc(c), this._finalSize = w, this._blockSize = c, this._len = 0;
            }
            m.prototype.update = function(c, w) {
              typeof c == "string" && (w = w || "utf8", c = h.from(c, w));
              for (var T = this._block, P = this._blockSize, k = c.length, R = this._len, F = 0; F < k; ) {
                for (var v = R % P, U = Math.min(k - F, P - v), M = 0; M < U; M++) T[v + M] = c[F + M];
                F += U, (R += U) % P === 0 && this._update(T);
              }
              return this._len += k, this;
            }, m.prototype.digest = function(c) {
              var w = this._len % this._blockSize;
              this._block[w] = 128, this._block.fill(0, w + 1), w >= this._finalSize && (this._update(this._block), this._block.fill(0));
              var T = 8 * this._len;
              if (T <= 4294967295) this._block.writeUInt32BE(T, this._blockSize - 4);
              else {
                var P = (4294967295 & T) >>> 0, k = (T - P) / 4294967296;
                this._block.writeUInt32BE(k, this._blockSize - 8), this._block.writeUInt32BE(P, this._blockSize - 4);
              }
              this._update(this._block);
              var R = this._hash();
              return c ? R.toString(c) : R;
            }, m.prototype._update = function() {
              throw new Error("_update must be implemented by subclass");
            }, p.exports = m;
          }, 414: (p) => {
            p.exports = Math.round;
          }, 453: (p, g, b) => {
            var h, m = b(9612), c = b(9383), w = b(1237), T = b(9290), P = b(9538), k = b(8068), R = b(9675), F = b(5345), v = b(1514), U = b(8968), M = b(6188), Z = b(8002), D = b(5880), V = b(414), S = b(3093), x = Function, B = function(yt) {
              try {
                return x('"use strict"; return (' + yt + ").constructor;")();
              } catch {
              }
            }, W = b(5795), lt = b(655), pt = function() {
              throw new R();
            }, at = W ? function() {
              try {
                return pt;
              } catch {
                try {
                  return W(arguments, "callee").get;
                } catch {
                  return pt;
                }
              }
            }() : pt, rt = b(4039)(), ot = b(3628), X = b(1064), I = b(8648), nt = b(1002), ft = b(76), dt = {}, Lt = typeof Uint8Array < "u" && ot ? ot(Uint8Array) : h, $ = { __proto__: null, "%AggregateError%": typeof AggregateError > "u" ? h : AggregateError, "%Array%": Array, "%ArrayBuffer%": typeof ArrayBuffer > "u" ? h : ArrayBuffer, "%ArrayIteratorPrototype%": rt && ot ? ot([][Symbol.iterator]()) : h, "%AsyncFromSyncIteratorPrototype%": h, "%AsyncFunction%": dt, "%AsyncGenerator%": dt, "%AsyncGeneratorFunction%": dt, "%AsyncIteratorPrototype%": dt, "%Atomics%": typeof Atomics > "u" ? h : Atomics, "%BigInt%": typeof BigInt > "u" ? h : BigInt, "%BigInt64Array%": typeof BigInt64Array > "u" ? h : BigInt64Array, "%BigUint64Array%": typeof BigUint64Array > "u" ? h : BigUint64Array, "%Boolean%": Boolean, "%DataView%": typeof DataView > "u" ? h : DataView, "%Date%": Date, "%decodeURI%": decodeURI, "%decodeURIComponent%": decodeURIComponent, "%encodeURI%": encodeURI, "%encodeURIComponent%": encodeURIComponent, "%Error%": c, "%eval%": eval, "%EvalError%": w, "%Float16Array%": typeof Float16Array > "u" ? h : Float16Array, "%Float32Array%": typeof Float32Array > "u" ? h : Float32Array, "%Float64Array%": typeof Float64Array > "u" ? h : Float64Array, "%FinalizationRegistry%": typeof FinalizationRegistry > "u" ? h : FinalizationRegistry, "%Function%": x, "%GeneratorFunction%": dt, "%Int8Array%": typeof Int8Array > "u" ? h : Int8Array, "%Int16Array%": typeof Int16Array > "u" ? h : Int16Array, "%Int32Array%": typeof Int32Array > "u" ? h : Int32Array, "%isFinite%": isFinite, "%isNaN%": isNaN, "%IteratorPrototype%": rt && ot ? ot(ot([][Symbol.iterator]())) : h, "%JSON%": typeof JSON == "object" ? JSON : h, "%Map%": typeof Map > "u" ? h : Map, "%MapIteratorPrototype%": typeof Map < "u" && rt && ot ? ot((/* @__PURE__ */ new Map())[Symbol.iterator]()) : h, "%Math%": Math, "%Number%": Number, "%Object%": m, "%Object.getOwnPropertyDescriptor%": W, "%parseFloat%": parseFloat, "%parseInt%": parseInt, "%Promise%": typeof Promise > "u" ? h : Promise, "%Proxy%": typeof Proxy > "u" ? h : Proxy, "%RangeError%": T, "%ReferenceError%": P, "%Reflect%": typeof Reflect > "u" ? h : Reflect, "%RegExp%": RegExp, "%Set%": typeof Set > "u" ? h : Set, "%SetIteratorPrototype%": typeof Set < "u" && rt && ot ? ot((/* @__PURE__ */ new Set())[Symbol.iterator]()) : h, "%SharedArrayBuffer%": typeof SharedArrayBuffer > "u" ? h : SharedArrayBuffer, "%String%": String, "%StringIteratorPrototype%": rt && ot ? ot(""[Symbol.iterator]()) : h, "%Symbol%": rt ? Symbol : h, "%SyntaxError%": k, "%ThrowTypeError%": at, "%TypedArray%": Lt, "%TypeError%": R, "%Uint8Array%": typeof Uint8Array > "u" ? h : Uint8Array, "%Uint8ClampedArray%": typeof Uint8ClampedArray > "u" ? h : Uint8ClampedArray, "%Uint16Array%": typeof Uint16Array > "u" ? h : Uint16Array, "%Uint32Array%": typeof Uint32Array > "u" ? h : Uint32Array, "%URIError%": F, "%WeakMap%": typeof WeakMap > "u" ? h : WeakMap, "%WeakRef%": typeof WeakRef > "u" ? h : WeakRef, "%WeakSet%": typeof WeakSet > "u" ? h : WeakSet, "%Function.prototype.call%": ft, "%Function.prototype.apply%": nt, "%Object.defineProperty%": lt, "%Object.getPrototypeOf%": X, "%Math.abs%": v, "%Math.floor%": U, "%Math.max%": M, "%Math.min%": Z, "%Math.pow%": D, "%Math.round%": V, "%Math.sign%": S, "%Reflect.getPrototypeOf%": I };
            if (ot) try {
              null.error;
            } catch (yt) {
              var it = ot(ot(yt));
              $["%Error.prototype%"] = it;
            }
            var mt = function yt(Mt) {
              var O;
              if (Mt === "%AsyncFunction%") O = B("async function () {}");
              else if (Mt === "%GeneratorFunction%") O = B("function* () {}");
              else if (Mt === "%AsyncGeneratorFunction%") O = B("async function* () {}");
              else if (Mt === "%AsyncGenerator%") {
                var z = yt("%AsyncGeneratorFunction%");
                z && (O = z.prototype);
              } else if (Mt === "%AsyncIteratorPrototype%") {
                var J = yt("%AsyncGenerator%");
                J && ot && (O = ot(J.prototype));
              }
              return $[Mt] = O, O;
            }, Ot = { __proto__: null, "%ArrayBufferPrototype%": ["ArrayBuffer", "prototype"], "%ArrayPrototype%": ["Array", "prototype"], "%ArrayProto_entries%": ["Array", "prototype", "entries"], "%ArrayProto_forEach%": ["Array", "prototype", "forEach"], "%ArrayProto_keys%": ["Array", "prototype", "keys"], "%ArrayProto_values%": ["Array", "prototype", "values"], "%AsyncFunctionPrototype%": ["AsyncFunction", "prototype"], "%AsyncGenerator%": ["AsyncGeneratorFunction", "prototype"], "%AsyncGeneratorPrototype%": ["AsyncGeneratorFunction", "prototype", "prototype"], "%BooleanPrototype%": ["Boolean", "prototype"], "%DataViewPrototype%": ["DataView", "prototype"], "%DatePrototype%": ["Date", "prototype"], "%ErrorPrototype%": ["Error", "prototype"], "%EvalErrorPrototype%": ["EvalError", "prototype"], "%Float32ArrayPrototype%": ["Float32Array", "prototype"], "%Float64ArrayPrototype%": ["Float64Array", "prototype"], "%FunctionPrototype%": ["Function", "prototype"], "%Generator%": ["GeneratorFunction", "prototype"], "%GeneratorPrototype%": ["GeneratorFunction", "prototype", "prototype"], "%Int8ArrayPrototype%": ["Int8Array", "prototype"], "%Int16ArrayPrototype%": ["Int16Array", "prototype"], "%Int32ArrayPrototype%": ["Int32Array", "prototype"], "%JSONParse%": ["JSON", "parse"], "%JSONStringify%": ["JSON", "stringify"], "%MapPrototype%": ["Map", "prototype"], "%NumberPrototype%": ["Number", "prototype"], "%ObjectPrototype%": ["Object", "prototype"], "%ObjProto_toString%": ["Object", "prototype", "toString"], "%ObjProto_valueOf%": ["Object", "prototype", "valueOf"], "%PromisePrototype%": ["Promise", "prototype"], "%PromiseProto_then%": ["Promise", "prototype", "then"], "%Promise_all%": ["Promise", "all"], "%Promise_reject%": ["Promise", "reject"], "%Promise_resolve%": ["Promise", "resolve"], "%RangeErrorPrototype%": ["RangeError", "prototype"], "%ReferenceErrorPrototype%": ["ReferenceError", "prototype"], "%RegExpPrototype%": ["RegExp", "prototype"], "%SetPrototype%": ["Set", "prototype"], "%SharedArrayBufferPrototype%": ["SharedArrayBuffer", "prototype"], "%StringPrototype%": ["String", "prototype"], "%SymbolPrototype%": ["Symbol", "prototype"], "%SyntaxErrorPrototype%": ["SyntaxError", "prototype"], "%TypedArrayPrototype%": ["TypedArray", "prototype"], "%TypeErrorPrototype%": ["TypeError", "prototype"], "%Uint8ArrayPrototype%": ["Uint8Array", "prototype"], "%Uint8ClampedArrayPrototype%": ["Uint8ClampedArray", "prototype"], "%Uint16ArrayPrototype%": ["Uint16Array", "prototype"], "%Uint32ArrayPrototype%": ["Uint32Array", "prototype"], "%URIErrorPrototype%": ["URIError", "prototype"], "%WeakMapPrototype%": ["WeakMap", "prototype"], "%WeakSetPrototype%": ["WeakSet", "prototype"] }, bt = b(6743), xt = b(9957), Ct = bt.call(ft, Array.prototype.concat), Tt = bt.call(nt, Array.prototype.splice), Bt = bt.call(ft, String.prototype.replace), At = bt.call(ft, String.prototype.slice), Ut = bt.call(ft, RegExp.prototype.exec), Vt = /[^%.[\]]+|\[(?:(-?\d+(?:\.\d+)?)|(["'])((?:(?!\2)[^\\]|\\.)*?)\2)\]|(?=(?:\.|\[\])(?:\.|\[\]|%$))/g, oe = /\\(\\)?/g, te = function(yt, Mt) {
              var O, z = yt;
              if (xt(Ot, z) && (z = "%" + (O = Ot[z])[0] + "%"), xt($, z)) {
                var J = $[z];
                if (J === dt && (J = mt(z)), J === void 0 && !Mt) throw new R("intrinsic " + yt + " exists, but is not available. Please file an issue!");
                return { alias: O, name: z, value: J };
              }
              throw new k("intrinsic " + yt + " does not exist!");
            };
            p.exports = function(yt, Mt) {
              if (typeof yt != "string" || yt.length === 0) throw new R("intrinsic name must be a non-empty string");
              if (arguments.length > 1 && typeof Mt != "boolean") throw new R('"allowMissing" argument must be a boolean');
              if (Ut(/^%?[^%]*%?$/, yt) === null) throw new k("`%` may not be present anywhere but at the beginning and end of the intrinsic name");
              var O = function(j) {
                var ut = At(j, 0, 1), gt = At(j, -1);
                if (ut === "%" && gt !== "%") throw new k("invalid intrinsic syntax, expected closing `%`");
                if (gt === "%" && ut !== "%") throw new k("invalid intrinsic syntax, expected opening `%`");
                var $t = [];
                return Bt(j, Vt, function(Ht, wt, Jt, Ee) {
                  $t[$t.length] = Jt ? Bt(Ee, oe, "$1") : wt || Ht;
                }), $t;
              }(yt), z = O.length > 0 ? O[0] : "", J = te("%" + z + "%", Mt), tt = J.name, H = J.value, K = false, q = J.alias;
              q && (z = q[0], Tt(O, Ct([0, 1], q)));
              for (var _ = 1, L = true; _ < O.length; _ += 1) {
                var et = O[_], St = At(et, 0, 1), kt = At(et, -1);
                if ((St === '"' || St === "'" || St === "`" || kt === '"' || kt === "'" || kt === "`") && St !== kt) throw new k("property names with quotes must have matching quotes");
                if (et !== "constructor" && L || (K = true), xt($, tt = "%" + (z += "." + et) + "%")) H = $[tt];
                else if (H != null) {
                  if (!(et in H)) {
                    if (!Mt) throw new R("base intrinsic for " + yt + " exists, but the property is not available.");
                    return;
                  }
                  if (W && _ + 1 >= O.length) {
                    var ct = W(H, et);
                    H = (L = !!ct) && "get" in ct && !("originalValue" in ct.get) ? ct.get : H[et];
                  } else L = xt(H, et), H = H[et];
                  L && !K && ($[tt] = H);
                }
              }
              return H;
            };
          }, 487: (p, g, b) => {
            var h = b(6897), m = b(655), c = b(3126), w = b(2205);
            p.exports = function(T) {
              var P = c(arguments), k = T.length - (arguments.length - 1);
              return h(P, 1 + (k > 0 ? k : 0), true);
            }, m ? m(p.exports, "apply", { value: w }) : p.exports.apply = w;
          }, 537: (p, g, b) => {
            var h = b(5606), m = b(6763), c = Object.getOwnPropertyDescriptors || function($) {
              for (var it = Object.keys($), mt = {}, Ot = 0; Ot < it.length; Ot++) mt[it[Ot]] = Object.getOwnPropertyDescriptor($, it[Ot]);
              return mt;
            }, w = /%[sdj%]/g;
            g.format = function($) {
              if (!B($)) {
                for (var it = [], mt = 0; mt < arguments.length; mt++) it.push(R(arguments[mt]));
                return it.join(" ");
              }
              mt = 1;
              for (var Ot = arguments, bt = Ot.length, xt = String($).replace(w, function(Tt) {
                if (Tt === "%%") return "%";
                if (mt >= bt) return Tt;
                switch (Tt) {
                  case "%s":
                    return String(Ot[mt++]);
                  case "%d":
                    return Number(Ot[mt++]);
                  case "%j":
                    try {
                      return JSON.stringify(Ot[mt++]);
                    } catch {
                      return "[Circular]";
                    }
                  default:
                    return Tt;
                }
              }), Ct = Ot[mt]; mt < bt; Ct = Ot[++mt]) S(Ct) || !pt(Ct) ? xt += " " + Ct : xt += " " + R(Ct);
              return xt;
            }, g.deprecate = function($, it) {
              if (h !== void 0 && h.noDeprecation === true) return $;
              if (h === void 0) return function() {
                return g.deprecate($, it).apply(this, arguments);
              };
              var mt = false;
              return function() {
                if (!mt) {
                  if (h.throwDeprecation) throw new Error(it);
                  h.traceDeprecation ? m.trace(it) : m.error(it), mt = true;
                }
                return $.apply(this, arguments);
              };
            };
            var T = {}, P = /^$/;
            if (h.env.NODE_DEBUG) {
              var k = h.env.NODE_DEBUG;
              k = k.replace(/[|\\{}()[\]^$+?.]/g, "\\$&").replace(/\*/g, ".*").replace(/,/g, "$|^").toUpperCase(), P = new RegExp("^" + k + "$", "i");
            }
            function R($, it) {
              var mt = { seen: [], stylize: v };
              return arguments.length >= 3 && (mt.depth = arguments[2]), arguments.length >= 4 && (mt.colors = arguments[3]), V(it) ? mt.showHidden = it : it && g._extend(mt, it), W(mt.showHidden) && (mt.showHidden = false), W(mt.depth) && (mt.depth = 2), W(mt.colors) && (mt.colors = false), W(mt.customInspect) && (mt.customInspect = true), mt.colors && (mt.stylize = F), U(mt, $, mt.depth);
            }
            function F($, it) {
              var mt = R.styles[it];
              return mt ? "\x1B[" + R.colors[mt][0] + "m" + $ + "\x1B[" + R.colors[mt][1] + "m" : $;
            }
            function v($, it) {
              return $;
            }
            function U($, it, mt) {
              if ($.customInspect && it && ot(it.inspect) && it.inspect !== g.inspect && (!it.constructor || it.constructor.prototype !== it)) {
                var Ot = it.inspect(mt, $);
                return B(Ot) || (Ot = U($, Ot, mt)), Ot;
              }
              var bt = function(oe, te) {
                if (W(te)) return oe.stylize("undefined", "undefined");
                if (B(te)) {
                  var yt = "'" + JSON.stringify(te).replace(/^"|"$/g, "").replace(/'/g, "\\'").replace(/\\"/g, '"') + "'";
                  return oe.stylize(yt, "string");
                }
                return x(te) ? oe.stylize("" + te, "number") : V(te) ? oe.stylize("" + te, "boolean") : S(te) ? oe.stylize("null", "null") : void 0;
              }($, it);
              if (bt) return bt;
              var xt = Object.keys(it), Ct = function(oe) {
                var te = {};
                return oe.forEach(function(yt, Mt) {
                  te[yt] = true;
                }), te;
              }(xt);
              if ($.showHidden && (xt = Object.getOwnPropertyNames(it)), rt(it) && (xt.indexOf("message") >= 0 || xt.indexOf("description") >= 0)) return M(it);
              if (xt.length === 0) {
                if (ot(it)) {
                  var Tt = it.name ? ": " + it.name : "";
                  return $.stylize("[Function" + Tt + "]", "special");
                }
                if (lt(it)) return $.stylize(RegExp.prototype.toString.call(it), "regexp");
                if (at(it)) return $.stylize(Date.prototype.toString.call(it), "date");
                if (rt(it)) return M(it);
              }
              var Bt, At = "", Ut = false, Vt = ["{", "}"];
              return D(it) && (Ut = true, Vt = ["[", "]"]), ot(it) && (At = " [Function" + (it.name ? ": " + it.name : "") + "]"), lt(it) && (At = " " + RegExp.prototype.toString.call(it)), at(it) && (At = " " + Date.prototype.toUTCString.call(it)), rt(it) && (At = " " + M(it)), xt.length !== 0 || Ut && it.length != 0 ? mt < 0 ? lt(it) ? $.stylize(RegExp.prototype.toString.call(it), "regexp") : $.stylize("[Object]", "special") : ($.seen.push(it), Bt = Ut ? function(oe, te, yt, Mt, O) {
                for (var z = [], J = 0, tt = te.length; J < tt; ++J) ft(te, String(J)) ? z.push(Z(oe, te, yt, Mt, String(J), true)) : z.push("");
                return O.forEach(function(H) {
                  H.match(/^\d+$/) || z.push(Z(oe, te, yt, Mt, H, true));
                }), z;
              }($, it, mt, Ct, xt) : xt.map(function(oe) {
                return Z($, it, mt, Ct, oe, Ut);
              }), $.seen.pop(), function(oe, te, yt) {
                var Mt = oe.reduce(function(O, z) {
                  return z.indexOf(`
`), O + z.replace(/\u001b\[\d\d?m/g, "").length + 1;
                }, 0);
                return Mt > 60 ? yt[0] + (te === "" ? "" : te + `
 `) + " " + oe.join(`,
  `) + " " + yt[1] : yt[0] + te + " " + oe.join(", ") + " " + yt[1];
              }(Bt, At, Vt)) : Vt[0] + At + Vt[1];
            }
            function M($) {
              return "[" + Error.prototype.toString.call($) + "]";
            }
            function Z($, it, mt, Ot, bt, xt) {
              var Ct, Tt, Bt;
              if ((Bt = Object.getOwnPropertyDescriptor(it, bt) || { value: it[bt] }).get ? Tt = Bt.set ? $.stylize("[Getter/Setter]", "special") : $.stylize("[Getter]", "special") : Bt.set && (Tt = $.stylize("[Setter]", "special")), ft(Ot, bt) || (Ct = "[" + bt + "]"), Tt || ($.seen.indexOf(Bt.value) < 0 ? (Tt = S(mt) ? U($, Bt.value, null) : U($, Bt.value, mt - 1)).indexOf(`
`) > -1 && (Tt = xt ? Tt.split(`
`).map(function(At) {
                return "  " + At;
              }).join(`
`).slice(2) : `
` + Tt.split(`
`).map(function(At) {
                return "   " + At;
              }).join(`
`)) : Tt = $.stylize("[Circular]", "special")), W(Ct)) {
                if (xt && bt.match(/^\d+$/)) return Tt;
                (Ct = JSON.stringify("" + bt)).match(/^"([a-zA-Z_][a-zA-Z_0-9]*)"$/) ? (Ct = Ct.slice(1, -1), Ct = $.stylize(Ct, "name")) : (Ct = Ct.replace(/'/g, "\\'").replace(/\\"/g, '"').replace(/(^"|"$)/g, "'"), Ct = $.stylize(Ct, "string"));
              }
              return Ct + ": " + Tt;
            }
            function D($) {
              return Array.isArray($);
            }
            function V($) {
              return typeof $ == "boolean";
            }
            function S($) {
              return $ === null;
            }
            function x($) {
              return typeof $ == "number";
            }
            function B($) {
              return typeof $ == "string";
            }
            function W($) {
              return $ === void 0;
            }
            function lt($) {
              return pt($) && X($) === "[object RegExp]";
            }
            function pt($) {
              return typeof $ == "object" && $ !== null;
            }
            function at($) {
              return pt($) && X($) === "[object Date]";
            }
            function rt($) {
              return pt($) && (X($) === "[object Error]" || $ instanceof Error);
            }
            function ot($) {
              return typeof $ == "function";
            }
            function X($) {
              return Object.prototype.toString.call($);
            }
            function I($) {
              return $ < 10 ? "0" + $.toString(10) : $.toString(10);
            }
            g.debuglog = function($) {
              if ($ = $.toUpperCase(), !T[$]) if (P.test($)) {
                var it = h.pid;
                T[$] = function() {
                  var mt = g.format.apply(g, arguments);
                  m.error("%s %d: %s", $, it, mt);
                };
              } else T[$] = function() {
              };
              return T[$];
            }, g.inspect = R, R.colors = { bold: [1, 22], italic: [3, 23], underline: [4, 24], inverse: [7, 27], white: [37, 39], grey: [90, 39], black: [30, 39], blue: [34, 39], cyan: [36, 39], green: [32, 39], magenta: [35, 39], red: [31, 39], yellow: [33, 39] }, R.styles = { special: "cyan", number: "yellow", boolean: "yellow", undefined: "grey", null: "bold", string: "green", date: "magenta", regexp: "red" }, g.types = b(9032), g.isArray = D, g.isBoolean = V, g.isNull = S, g.isNullOrUndefined = function($) {
              return $ == null;
            }, g.isNumber = x, g.isString = B, g.isSymbol = function($) {
              return typeof $ == "symbol";
            }, g.isUndefined = W, g.isRegExp = lt, g.types.isRegExp = lt, g.isObject = pt, g.isDate = at, g.types.isDate = at, g.isError = rt, g.types.isNativeError = rt, g.isFunction = ot, g.isPrimitive = function($) {
              return $ === null || typeof $ == "boolean" || typeof $ == "number" || typeof $ == "string" || typeof $ == "symbol" || $ === void 0;
            }, g.isBuffer = b(1135);
            var nt = ["Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec"];
            function ft($, it) {
              return Object.prototype.hasOwnProperty.call($, it);
            }
            g.log = function() {
              var $, it;
              m.log("%s - %s", (it = [I(($ = /* @__PURE__ */ new Date()).getHours()), I($.getMinutes()), I($.getSeconds())].join(":"), [$.getDate(), nt[$.getMonth()], it].join(" ")), g.format.apply(g, arguments));
            }, g.inherits = b(6698), g._extend = function($, it) {
              if (!it || !pt(it)) return $;
              for (var mt = Object.keys(it), Ot = mt.length; Ot--; ) $[mt[Ot]] = it[mt[Ot]];
              return $;
            };
            var dt = typeof Symbol < "u" ? Symbol("util.promisify.custom") : void 0;
            function Lt($, it) {
              if (!$) {
                var mt = new Error("Promise was rejected with a falsy value");
                mt.reason = $, $ = mt;
              }
              return it($);
            }
            g.promisify = function($) {
              if (typeof $ != "function") throw new TypeError('The "original" argument must be of type Function');
              if (dt && $[dt]) {
                var it;
                if (typeof (it = $[dt]) != "function") throw new TypeError('The "util.promisify.custom" argument must be of type Function');
                return Object.defineProperty(it, dt, { value: it, enumerable: false, writable: false, configurable: true }), it;
              }
              function it() {
                for (var mt, Ot, bt = new Promise(function(Tt, Bt) {
                  mt = Tt, Ot = Bt;
                }), xt = [], Ct = 0; Ct < arguments.length; Ct++) xt.push(arguments[Ct]);
                xt.push(function(Tt, Bt) {
                  Tt ? Ot(Tt) : mt(Bt);
                });
                try {
                  $.apply(this, xt);
                } catch (Tt) {
                  Ot(Tt);
                }
                return bt;
              }
              return Object.setPrototypeOf(it, Object.getPrototypeOf($)), dt && Object.defineProperty(it, dt, { value: it, enumerable: false, writable: false, configurable: true }), Object.defineProperties(it, c($));
            }, g.promisify.custom = dt, g.callbackify = function($) {
              if (typeof $ != "function") throw new TypeError('The "original" argument must be of type Function');
              function it() {
                for (var mt = [], Ot = 0; Ot < arguments.length; Ot++) mt.push(arguments[Ot]);
                var bt = mt.pop();
                if (typeof bt != "function") throw new TypeError("The last argument must be of type Function");
                var xt = this, Ct = function() {
                  return bt.apply(xt, arguments);
                };
                $.apply(this, mt).then(function(Tt) {
                  h.nextTick(Ct.bind(null, null, Tt));
                }, function(Tt) {
                  h.nextTick(Lt.bind(null, Tt, Ct));
                });
              }
              return Object.setPrototypeOf(it, Object.getPrototypeOf($)), Object.defineProperties(it, c($)), it;
            };
          }, 592: (p, g, b) => {
            var h = b(655), m = function() {
              return !!h;
            };
            m.hasArrayLengthDefineBug = function() {
              if (!h) return null;
              try {
                return h([], "length", { value: 1 }).length !== 1;
              } catch {
                return true;
              }
            }, p.exports = m;
          }, 655: (p) => {
            var g = Object.defineProperty || false;
            if (g) try {
              g({}, "a", { value: 1 });
            } catch {
              g = false;
            }
            p.exports = g;
          }, 1002: (p) => {
            p.exports = Function.prototype.apply;
          }, 1064: (p, g, b) => {
            var h = b(9612);
            p.exports = h.getPrototypeOf || null;
          }, 1093: (p) => {
            var g = Object.prototype.toString;
            p.exports = function(b) {
              var h = g.call(b), m = h === "[object Arguments]";
              return m || (m = h !== "[object Array]" && b !== null && typeof b == "object" && typeof b.length == "number" && b.length >= 0 && g.call(b.callee) === "[object Function]"), m;
            };
          }, 1135: (p) => {
            p.exports = function(g) {
              return g && typeof g == "object" && typeof g.copy == "function" && typeof g.fill == "function" && typeof g.readUInt8 == "function";
            };
          }, 1189: (p, g, b) => {
            var h = Array.prototype.slice, m = b(1093), c = Object.keys, w = c ? function(P) {
              return c(P);
            } : b(8875), T = Object.keys;
            w.shim = function() {
              if (Object.keys) {
                var P = function() {
                  var k = Object.keys(arguments);
                  return k && k.length === arguments.length;
                }(1, 2);
                P || (Object.keys = function(k) {
                  return m(k) ? T(h.call(k)) : T(k);
                });
              } else Object.keys = w;
              return Object.keys || w;
            }, p.exports = w;
          }, 1237: (p) => {
            p.exports = EvalError;
          }, 1333: (p) => {
            p.exports = function() {
              if (typeof Symbol != "function" || typeof Object.getOwnPropertySymbols != "function") return false;
              if (typeof Symbol.iterator == "symbol") return true;
              var g = {}, b = Symbol("test"), h = Object(b);
              if (typeof b == "string" || Object.prototype.toString.call(b) !== "[object Symbol]" || Object.prototype.toString.call(h) !== "[object Symbol]") return false;
              for (var m in g[b] = 42, g) return false;
              if (typeof Object.keys == "function" && Object.keys(g).length !== 0 || typeof Object.getOwnPropertyNames == "function" && Object.getOwnPropertyNames(g).length !== 0) return false;
              var c = Object.getOwnPropertySymbols(g);
              if (c.length !== 1 || c[0] !== b || !Object.prototype.propertyIsEnumerable.call(g, b)) return false;
              if (typeof Object.getOwnPropertyDescriptor == "function") {
                var w = Object.getOwnPropertyDescriptor(g, b);
                if (w.value !== 42 || w.enumerable !== true) return false;
              }
              return true;
            };
          }, 1514: (p) => {
            p.exports = Math.abs;
          }, 2205: (p, g, b) => {
            var h = b(6743), m = b(1002), c = b(3144);
            p.exports = function() {
              return c(h, m, arguments);
            };
          }, 2299: (p, g, b) => {
            function h(Ut, Vt) {
              return function(oe) {
                if (Array.isArray(oe)) return oe;
              }(Ut) || function(oe, te) {
                var yt = oe == null ? null : typeof Symbol < "u" && oe[Symbol.iterator] || oe["@@iterator"];
                if (yt != null) {
                  var Mt, O, z, J, tt = [], H = true, K = false;
                  try {
                    if (z = (yt = yt.call(oe)).next, te !== 0) for (; !(H = (Mt = z.call(yt)).done) && (tt.push(Mt.value), tt.length !== te); H = true) ;
                  } catch (q) {
                    K = true, O = q;
                  } finally {
                    try {
                      if (!H && yt.return != null && (J = yt.return(), Object(J) !== J)) return;
                    } finally {
                      if (K) throw O;
                    }
                  }
                  return tt;
                }
              }(Ut, Vt) || function(oe, te) {
                if (oe) {
                  if (typeof oe == "string") return m(oe, te);
                  var yt = Object.prototype.toString.call(oe).slice(8, -1);
                  return yt === "Object" && oe.constructor && (yt = oe.constructor.name), yt === "Map" || yt === "Set" ? Array.from(oe) : yt === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(yt) ? m(oe, te) : void 0;
                }
              }(Ut, Vt) || function() {
                throw new TypeError(`Invalid attempt to destructure non-iterable instance.
In order to be iterable, non-array objects must have a [Symbol.iterator]() method.`);
              }();
            }
            function m(Ut, Vt) {
              (Vt == null || Vt > Ut.length) && (Vt = Ut.length);
              for (var oe = 0, te = new Array(Vt); oe < Vt; oe++) te[oe] = Ut[oe];
              return te;
            }
            function c(Ut) {
              return c = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(Vt) {
                return typeof Vt;
              } : function(Vt) {
                return Vt && typeof Symbol == "function" && Vt.constructor === Symbol && Vt !== Symbol.prototype ? "symbol" : typeof Vt;
              }, c(Ut);
            }
            var w = /a/g.flags !== void 0, T = function(Ut) {
              var Vt = [];
              return Ut.forEach(function(oe) {
                return Vt.push(oe);
              }), Vt;
            }, P = function(Ut) {
              var Vt = [];
              return Ut.forEach(function(oe, te) {
                return Vt.push([te, oe]);
              }), Vt;
            }, k = Object.is ? Object.is : b(7653), R = Object.getOwnPropertySymbols ? Object.getOwnPropertySymbols : function() {
              return [];
            }, F = Number.isNaN ? Number.isNaN : b(4133);
            function v(Ut) {
              return Ut.call.bind(Ut);
            }
            var U = v(Object.prototype.hasOwnProperty), M = v(Object.prototype.propertyIsEnumerable), Z = v(Object.prototype.toString), D = b(537).types, V = D.isAnyArrayBuffer, S = D.isArrayBufferView, x = D.isDate, B = D.isMap, W = D.isRegExp, lt = D.isSet, pt = D.isNativeError, at = D.isBoxedPrimitive, rt = D.isNumberObject, ot = D.isStringObject, X = D.isBooleanObject, I = D.isBigIntObject, nt = D.isSymbolObject, ft = D.isFloat32Array, dt = D.isFloat64Array;
            function Lt(Ut) {
              if (Ut.length === 0 || Ut.length > 10) return true;
              for (var Vt = 0; Vt < Ut.length; Vt++) {
                var oe = Ut.charCodeAt(Vt);
                if (oe < 48 || oe > 57) return true;
              }
              return Ut.length === 10 && Ut >= Math.pow(2, 32);
            }
            function $(Ut) {
              return Object.keys(Ut).filter(Lt).concat(R(Ut).filter(Object.prototype.propertyIsEnumerable.bind(Ut)));
            }
            function it(Ut, Vt) {
              if (Ut === Vt) return 0;
              for (var oe = Ut.length, te = Vt.length, yt = 0, Mt = Math.min(oe, te); yt < Mt; ++yt) if (Ut[yt] !== Vt[yt]) {
                oe = Ut[yt], te = Vt[yt];
                break;
              }
              return oe < te ? -1 : te < oe ? 1 : 0;
            }
            function mt(Ut, Vt, oe, te) {
              if (Ut === Vt) return Ut !== 0 || !oe || k(Ut, Vt);
              if (oe) {
                if (c(Ut) !== "object") return typeof Ut == "number" && F(Ut) && F(Vt);
                if (c(Vt) !== "object" || Ut === null || Vt === null || Object.getPrototypeOf(Ut) !== Object.getPrototypeOf(Vt)) return false;
              } else {
                if (Ut === null || c(Ut) !== "object") return (Vt === null || c(Vt) !== "object") && Ut == Vt;
                if (Vt === null || c(Vt) !== "object") return false;
              }
              var yt, Mt, O, z, J = Z(Ut);
              if (J !== Z(Vt)) return false;
              if (Array.isArray(Ut)) {
                if (Ut.length !== Vt.length) return false;
                var tt = $(Ut), H = $(Vt);
                return tt.length === H.length && bt(Ut, Vt, oe, te, 1, tt);
              }
              if (J === "[object Object]" && (!B(Ut) && B(Vt) || !lt(Ut) && lt(Vt))) return false;
              if (x(Ut)) {
                if (!x(Vt) || Date.prototype.getTime.call(Ut) !== Date.prototype.getTime.call(Vt)) return false;
              } else if (W(Ut)) {
                if (!W(Vt) || (O = Ut, z = Vt, !(w ? O.source === z.source && O.flags === z.flags : RegExp.prototype.toString.call(O) === RegExp.prototype.toString.call(z)))) return false;
              } else if (pt(Ut) || Ut instanceof Error) {
                if (Ut.message !== Vt.message || Ut.name !== Vt.name) return false;
              } else {
                if (S(Ut)) {
                  if (oe || !ft(Ut) && !dt(Ut)) {
                    if (!function(_, L) {
                      return _.byteLength === L.byteLength && it(new Uint8Array(_.buffer, _.byteOffset, _.byteLength), new Uint8Array(L.buffer, L.byteOffset, L.byteLength)) === 0;
                    }(Ut, Vt)) return false;
                  } else if (!function(_, L) {
                    if (_.byteLength !== L.byteLength) return false;
                    for (var et = 0; et < _.byteLength; et++) if (_[et] !== L[et]) return false;
                    return true;
                  }(Ut, Vt)) return false;
                  var K = $(Ut), q = $(Vt);
                  return K.length === q.length && bt(Ut, Vt, oe, te, 0, K);
                }
                if (lt(Ut)) return !(!lt(Vt) || Ut.size !== Vt.size) && bt(Ut, Vt, oe, te, 2);
                if (B(Ut)) return !(!B(Vt) || Ut.size !== Vt.size) && bt(Ut, Vt, oe, te, 3);
                if (V(Ut)) {
                  if (Mt = Vt, (yt = Ut).byteLength !== Mt.byteLength || it(new Uint8Array(yt), new Uint8Array(Mt)) !== 0) return false;
                } else if (at(Ut) && !function(_, L) {
                  return rt(_) ? rt(L) && k(Number.prototype.valueOf.call(_), Number.prototype.valueOf.call(L)) : ot(_) ? ot(L) && String.prototype.valueOf.call(_) === String.prototype.valueOf.call(L) : X(_) ? X(L) && Boolean.prototype.valueOf.call(_) === Boolean.prototype.valueOf.call(L) : I(_) ? I(L) && BigInt.prototype.valueOf.call(_) === BigInt.prototype.valueOf.call(L) : nt(L) && Symbol.prototype.valueOf.call(_) === Symbol.prototype.valueOf.call(L);
                }(Ut, Vt)) return false;
              }
              return bt(Ut, Vt, oe, te, 0);
            }
            function Ot(Ut, Vt) {
              return Vt.filter(function(oe) {
                return M(Ut, oe);
              });
            }
            function bt(Ut, Vt, oe, te, yt, Mt) {
              if (arguments.length === 5) {
                Mt = Object.keys(Ut);
                var O = Object.keys(Vt);
                if (Mt.length !== O.length) return false;
              }
              for (var z = 0; z < Mt.length; z++) if (!U(Vt, Mt[z])) return false;
              if (oe && arguments.length === 5) {
                var J = R(Ut);
                if (J.length !== 0) {
                  var tt = 0;
                  for (z = 0; z < J.length; z++) {
                    var H = J[z];
                    if (M(Ut, H)) {
                      if (!M(Vt, H)) return false;
                      Mt.push(H), tt++;
                    } else if (M(Vt, H)) return false;
                  }
                  var K = R(Vt);
                  if (J.length !== K.length && Ot(Vt, K).length !== tt) return false;
                } else {
                  var q = R(Vt);
                  if (q.length !== 0 && Ot(Vt, q).length !== 0) return false;
                }
              }
              if (Mt.length === 0 && (yt === 0 || yt === 1 && Ut.length === 0 || Ut.size === 0)) return true;
              if (te === void 0) te = { val1: /* @__PURE__ */ new Map(), val2: /* @__PURE__ */ new Map(), position: 0 };
              else {
                var _ = te.val1.get(Ut);
                if (_ !== void 0) {
                  var L = te.val2.get(Vt);
                  if (L !== void 0) return _ === L;
                }
                te.position++;
              }
              te.val1.set(Ut, te.position), te.val2.set(Vt, te.position);
              var et = function(St, kt, ct, j, ut, gt) {
                var $t = 0;
                if (gt === 2) {
                  if (!function(Ee, cr, Lr, on) {
                    for (var Zr = null, to = T(Ee), qn = 0; qn < to.length; qn++) {
                      var jn = to[qn];
                      if (c(jn) === "object" && jn !== null) Zr === null && (Zr = /* @__PURE__ */ new Set()), Zr.add(jn);
                      else if (!cr.has(jn)) {
                        if (Lr || !Tt(Ee, cr, jn)) return false;
                        Zr === null && (Zr = /* @__PURE__ */ new Set()), Zr.add(jn);
                      }
                    }
                    if (Zr !== null) {
                      for (var eo = T(cr), no = 0; no < eo.length; no++) {
                        var Dn = eo[no];
                        if (c(Dn) === "object" && Dn !== null) {
                          if (!xt(Zr, Dn, Lr, on)) return false;
                        } else if (!Lr && !Ee.has(Dn) && !xt(Zr, Dn, Lr, on)) return false;
                      }
                      return Zr.size === 0;
                    }
                    return true;
                  }(St, kt, ct, ut)) return false;
                } else if (gt === 3) {
                  if (!function(Ee, cr, Lr, on) {
                    for (var Zr = null, to = P(Ee), qn = 0; qn < to.length; qn++) {
                      var jn = h(to[qn], 2), eo = jn[0], no = jn[1];
                      if (c(eo) === "object" && eo !== null) Zr === null && (Zr = /* @__PURE__ */ new Set()), Zr.add(eo);
                      else {
                        var Dn = cr.get(eo);
                        if (Dn === void 0 && !cr.has(eo) || !mt(no, Dn, Lr, on)) {
                          if (Lr || !Bt(Ee, cr, eo, no, on)) return false;
                          Zr === null && (Zr = /* @__PURE__ */ new Set()), Zr.add(eo);
                        }
                      }
                    }
                    if (Zr !== null) {
                      for (var se = P(cr), rr = 0; rr < se.length; rr++) {
                        var Tr = h(se[rr], 2), mr = Tr[0], Ir = Tr[1];
                        if (c(mr) === "object" && mr !== null) {
                          if (!At(Zr, Ee, mr, Ir, Lr, on)) return false;
                        } else if (!(Lr || Ee.has(mr) && mt(Ee.get(mr), Ir, false, on) || At(Zr, Ee, mr, Ir, false, on))) return false;
                      }
                      return Zr.size === 0;
                    }
                    return true;
                  }(St, kt, ct, ut)) return false;
                } else if (gt === 1) for (; $t < St.length; $t++) {
                  if (!U(St, $t)) {
                    if (U(kt, $t)) return false;
                    for (var Ht = Object.keys(St); $t < Ht.length; $t++) {
                      var wt = Ht[$t];
                      if (!U(kt, wt) || !mt(St[wt], kt[wt], ct, ut)) return false;
                    }
                    return Ht.length === Object.keys(kt).length;
                  }
                  if (!U(kt, $t) || !mt(St[$t], kt[$t], ct, ut)) return false;
                }
                for ($t = 0; $t < j.length; $t++) {
                  var Jt = j[$t];
                  if (!mt(St[Jt], kt[Jt], ct, ut)) return false;
                }
                return true;
              }(Ut, Vt, oe, Mt, te, yt);
              return te.val1.delete(Ut), te.val2.delete(Vt), et;
            }
            function xt(Ut, Vt, oe, te) {
              for (var yt = T(Ut), Mt = 0; Mt < yt.length; Mt++) {
                var O = yt[Mt];
                if (mt(Vt, O, oe, te)) return Ut.delete(O), true;
              }
              return false;
            }
            function Ct(Ut) {
              switch (c(Ut)) {
                case "undefined":
                  return null;
                case "object":
                  return;
                case "symbol":
                  return false;
                case "string":
                  Ut = +Ut;
                case "number":
                  if (F(Ut)) return false;
              }
              return true;
            }
            function Tt(Ut, Vt, oe) {
              var te = Ct(oe);
              return te ?? (Vt.has(te) && !Ut.has(te));
            }
            function Bt(Ut, Vt, oe, te, yt) {
              var Mt = Ct(oe);
              if (Mt != null) return Mt;
              var O = Vt.get(Mt);
              return !(O === void 0 && !Vt.has(Mt) || !mt(te, O, false, yt)) && !Ut.has(Mt) && mt(te, O, false, yt);
            }
            function At(Ut, Vt, oe, te, yt, Mt) {
              for (var O = T(Ut), z = 0; z < O.length; z++) {
                var J = O[z];
                if (mt(oe, J, yt, Mt) && mt(te, Vt.get(J), yt, Mt)) return Ut.delete(J), true;
              }
              return false;
            }
            p.exports = { isDeepEqual: function(Ut, Vt) {
              return mt(Ut, Vt, false);
            }, isDeepStrictEqual: function(Ut, Vt) {
              return mt(Ut, Vt, true);
            } };
          }, 2464: (p, g, b) => {
            var h = b(8452), m = b(6642);
            p.exports = function() {
              var c = m();
              return h(Number, { isNaN: c }, { isNaN: function() {
                return Number.isNaN !== c;
              } }), c;
            };
          }, 2682: (p, g, b) => {
            var h = b(9600), m = Object.prototype.toString, c = Object.prototype.hasOwnProperty;
            p.exports = function(w, T, P) {
              if (!h(T)) throw new TypeError("iterator must be a function");
              var k, R;
              arguments.length >= 3 && (k = P), R = w, m.call(R) === "[object Array]" ? function(F, v, U) {
                for (var M = 0, Z = F.length; M < Z; M++) c.call(F, M) && (U == null ? v(F[M], M, F) : v.call(U, F[M], M, F));
              }(w, T, k) : typeof w == "string" ? function(F, v, U) {
                for (var M = 0, Z = F.length; M < Z; M++) U == null ? v(F.charAt(M), M, F) : v.call(U, F.charAt(M), M, F);
              }(w, T, k) : function(F, v, U) {
                for (var M in F) c.call(F, M) && (U == null ? v(F[M], M, F) : v.call(U, F[M], M, F));
              }(w, T, k);
            };
          }, 2802: (p, g, b) => {
            var h = p.exports = function(m) {
              m = m.toLowerCase();
              var c = h[m];
              if (!c) throw new Error(m + " is not supported (we accept pull requests)");
              return new c();
            };
            h.sha = b(7816), h.sha1 = b(3737), h.sha224 = b(6710), h.sha256 = b(4107), h.sha384 = b(2827), h.sha512 = b(2890);
          }, 2827: (p, g, b) => {
            var h = b(6698), m = b(2890), c = b(392), w = b(2861).Buffer, T = new Array(160);
            function P() {
              this.init(), this._w = T, c.call(this, 128, 112);
            }
            h(P, m), P.prototype.init = function() {
              return this._ah = 3418070365, this._bh = 1654270250, this._ch = 2438529370, this._dh = 355462360, this._eh = 1731405415, this._fh = 2394180231, this._gh = 3675008525, this._hh = 1203062813, this._al = 3238371032, this._bl = 914150663, this._cl = 812702999, this._dl = 4144912697, this._el = 4290775857, this._fl = 1750603025, this._gl = 1694076839, this._hl = 3204075428, this;
            }, P.prototype._hash = function() {
              var k = w.allocUnsafe(48);
              function R(F, v, U) {
                k.writeInt32BE(F, U), k.writeInt32BE(v, U + 4);
              }
              return R(this._ah, this._al, 0), R(this._bh, this._bl, 8), R(this._ch, this._cl, 16), R(this._dh, this._dl, 24), R(this._eh, this._el, 32), R(this._fh, this._fl, 40), k;
            }, p.exports = P;
          }, 2861: (p, g, b) => {
            var h = b(8287), m = h.Buffer;
            function c(T, P) {
              for (var k in T) P[k] = T[k];
            }
            function w(T, P, k) {
              return m(T, P, k);
            }
            m.from && m.alloc && m.allocUnsafe && m.allocUnsafeSlow ? p.exports = h : (c(h, g), g.Buffer = w), w.prototype = Object.create(m.prototype), c(m, w), w.from = function(T, P, k) {
              if (typeof T == "number") throw new TypeError("Argument must not be a number");
              return m(T, P, k);
            }, w.alloc = function(T, P, k) {
              if (typeof T != "number") throw new TypeError("Argument must be a number");
              var R = m(T);
              return P !== void 0 ? typeof k == "string" ? R.fill(P, k) : R.fill(P) : R.fill(0), R;
            }, w.allocUnsafe = function(T) {
              if (typeof T != "number") throw new TypeError("Argument must be a number");
              return m(T);
            }, w.allocUnsafeSlow = function(T) {
              if (typeof T != "number") throw new TypeError("Argument must be a number");
              return h.SlowBuffer(T);
            };
          }, 2890: (p, g, b) => {
            var h = b(6698), m = b(392), c = b(2861).Buffer, w = [1116352408, 3609767458, 1899447441, 602891725, 3049323471, 3964484399, 3921009573, 2173295548, 961987163, 4081628472, 1508970993, 3053834265, 2453635748, 2937671579, 2870763221, 3664609560, 3624381080, 2734883394, 310598401, 1164996542, 607225278, 1323610764, 1426881987, 3590304994, 1925078388, 4068182383, 2162078206, 991336113, 2614888103, 633803317, 3248222580, 3479774868, 3835390401, 2666613458, 4022224774, 944711139, 264347078, 2341262773, 604807628, 2007800933, 770255983, 1495990901, 1249150122, 1856431235, 1555081692, 3175218132, 1996064986, 2198950837, 2554220882, 3999719339, 2821834349, 766784016, 2952996808, 2566594879, 3210313671, 3203337956, 3336571891, 1034457026, 3584528711, 2466948901, 113926993, 3758326383, 338241895, 168717936, 666307205, 1188179964, 773529912, 1546045734, 1294757372, 1522805485, 1396182291, 2643833823, 1695183700, 2343527390, 1986661051, 1014477480, 2177026350, 1206759142, 2456956037, 344077627, 2730485921, 1290863460, 2820302411, 3158454273, 3259730800, 3505952657, 3345764771, 106217008, 3516065817, 3606008344, 3600352804, 1432725776, 4094571909, 1467031594, 275423344, 851169720, 430227734, 3100823752, 506948616, 1363258195, 659060556, 3750685593, 883997877, 3785050280, 958139571, 3318307427, 1322822218, 3812723403, 1537002063, 2003034995, 1747873779, 3602036899, 1955562222, 1575990012, 2024104815, 1125592928, 2227730452, 2716904306, 2361852424, 442776044, 2428436474, 593698344, 2756734187, 3733110249, 3204031479, 2999351573, 3329325298, 3815920427, 3391569614, 3928383900, 3515267271, 566280711, 3940187606, 3454069534, 4118630271, 4000239992, 116418474, 1914138554, 174292421, 2731055270, 289380356, 3203993006, 460393269, 320620315, 685471733, 587496836, 852142971, 1086792851, 1017036298, 365543100, 1126000580, 2618297676, 1288033470, 3409855158, 1501505948, 4234509866, 1607167915, 987167468, 1816402316, 1246189591], T = new Array(160);
            function P() {
              this.init(), this._w = T, m.call(this, 128, 112);
            }
            function k(S, x, B) {
              return B ^ S & (x ^ B);
            }
            function R(S, x, B) {
              return S & x | B & (S | x);
            }
            function F(S, x) {
              return (S >>> 28 | x << 4) ^ (x >>> 2 | S << 30) ^ (x >>> 7 | S << 25);
            }
            function v(S, x) {
              return (S >>> 14 | x << 18) ^ (S >>> 18 | x << 14) ^ (x >>> 9 | S << 23);
            }
            function U(S, x) {
              return (S >>> 1 | x << 31) ^ (S >>> 8 | x << 24) ^ S >>> 7;
            }
            function M(S, x) {
              return (S >>> 1 | x << 31) ^ (S >>> 8 | x << 24) ^ (S >>> 7 | x << 25);
            }
            function Z(S, x) {
              return (S >>> 19 | x << 13) ^ (x >>> 29 | S << 3) ^ S >>> 6;
            }
            function D(S, x) {
              return (S >>> 19 | x << 13) ^ (x >>> 29 | S << 3) ^ (S >>> 6 | x << 26);
            }
            function V(S, x) {
              return S >>> 0 < x >>> 0 ? 1 : 0;
            }
            h(P, m), P.prototype.init = function() {
              return this._ah = 1779033703, this._bh = 3144134277, this._ch = 1013904242, this._dh = 2773480762, this._eh = 1359893119, this._fh = 2600822924, this._gh = 528734635, this._hh = 1541459225, this._al = 4089235720, this._bl = 2227873595, this._cl = 4271175723, this._dl = 1595750129, this._el = 2917565137, this._fl = 725511199, this._gl = 4215389547, this._hl = 327033209, this;
            }, P.prototype._update = function(S) {
              for (var x = this._w, B = 0 | this._ah, W = 0 | this._bh, lt = 0 | this._ch, pt = 0 | this._dh, at = 0 | this._eh, rt = 0 | this._fh, ot = 0 | this._gh, X = 0 | this._hh, I = 0 | this._al, nt = 0 | this._bl, ft = 0 | this._cl, dt = 0 | this._dl, Lt = 0 | this._el, $ = 0 | this._fl, it = 0 | this._gl, mt = 0 | this._hl, Ot = 0; Ot < 32; Ot += 2) x[Ot] = S.readInt32BE(4 * Ot), x[Ot + 1] = S.readInt32BE(4 * Ot + 4);
              for (; Ot < 160; Ot += 2) {
                var bt = x[Ot - 30], xt = x[Ot - 30 + 1], Ct = U(bt, xt), Tt = M(xt, bt), Bt = Z(bt = x[Ot - 4], xt = x[Ot - 4 + 1]), At = D(xt, bt), Ut = x[Ot - 14], Vt = x[Ot - 14 + 1], oe = x[Ot - 32], te = x[Ot - 32 + 1], yt = Tt + Vt | 0, Mt = Ct + Ut + V(yt, Tt) | 0;
                Mt = (Mt = Mt + Bt + V(yt = yt + At | 0, At) | 0) + oe + V(yt = yt + te | 0, te) | 0, x[Ot] = Mt, x[Ot + 1] = yt;
              }
              for (var O = 0; O < 160; O += 2) {
                Mt = x[O], yt = x[O + 1];
                var z = R(B, W, lt), J = R(I, nt, ft), tt = F(B, I), H = F(I, B), K = v(at, Lt), q = v(Lt, at), _ = w[O], L = w[O + 1], et = k(at, rt, ot), St = k(Lt, $, it), kt = mt + q | 0, ct = X + K + V(kt, mt) | 0;
                ct = (ct = (ct = ct + et + V(kt = kt + St | 0, St) | 0) + _ + V(kt = kt + L | 0, L) | 0) + Mt + V(kt = kt + yt | 0, yt) | 0;
                var j = H + J | 0, ut = tt + z + V(j, H) | 0;
                X = ot, mt = it, ot = rt, it = $, rt = at, $ = Lt, at = pt + ct + V(Lt = dt + kt | 0, dt) | 0, pt = lt, dt = ft, lt = W, ft = nt, W = B, nt = I, B = ct + ut + V(I = kt + j | 0, kt) | 0;
              }
              this._al = this._al + I | 0, this._bl = this._bl + nt | 0, this._cl = this._cl + ft | 0, this._dl = this._dl + dt | 0, this._el = this._el + Lt | 0, this._fl = this._fl + $ | 0, this._gl = this._gl + it | 0, this._hl = this._hl + mt | 0, this._ah = this._ah + B + V(this._al, I) | 0, this._bh = this._bh + W + V(this._bl, nt) | 0, this._ch = this._ch + lt + V(this._cl, ft) | 0, this._dh = this._dh + pt + V(this._dl, dt) | 0, this._eh = this._eh + at + V(this._el, Lt) | 0, this._fh = this._fh + rt + V(this._fl, $) | 0, this._gh = this._gh + ot + V(this._gl, it) | 0, this._hh = this._hh + X + V(this._hl, mt) | 0;
            }, P.prototype._hash = function() {
              var S = c.allocUnsafe(64);
              function x(B, W, lt) {
                S.writeInt32BE(B, lt), S.writeInt32BE(W, lt + 4);
              }
              return x(this._ah, this._al, 0), x(this._bh, this._bl, 8), x(this._ch, this._cl, 16), x(this._dh, this._dl, 24), x(this._eh, this._el, 32), x(this._fh, this._fl, 40), x(this._gh, this._gl, 48), x(this._hh, this._hl, 56), S;
            }, p.exports = P;
          }, 3003: (p) => {
            p.exports = function(g) {
              return g != g;
            };
          }, 3093: (p, g, b) => {
            var h = b(4459);
            p.exports = function(m) {
              return h(m) || m === 0 ? m : m < 0 ? -1 : 1;
            };
          }, 3126: (p, g, b) => {
            var h = b(6743), m = b(9675), c = b(76), w = b(3144);
            p.exports = function(T) {
              if (T.length < 1 || typeof T[0] != "function") throw new m("a function is required");
              return w(h, c, T);
            };
          }, 3144: (p, g, b) => {
            var h = b(6743), m = b(1002), c = b(76), w = b(7119);
            p.exports = w || h.call(c, m);
          }, 3628: (p, g, b) => {
            var h = b(8648), m = b(1064), c = b(7176);
            p.exports = h ? function(w) {
              return h(w);
            } : m ? function(w) {
              if (!w || typeof w != "object" && typeof w != "function") throw new TypeError("getProto: not an object");
              return m(w);
            } : c ? function(w) {
              return c(w);
            } : null;
          }, 3737: (p, g, b) => {
            var h = b(6698), m = b(392), c = b(2861).Buffer, w = [1518500249, 1859775393, -1894007588, -899497514], T = new Array(80);
            function P() {
              this.init(), this._w = T, m.call(this, 64, 56);
            }
            function k(U) {
              return U << 1 | U >>> 31;
            }
            function R(U) {
              return U << 5 | U >>> 27;
            }
            function F(U) {
              return U << 30 | U >>> 2;
            }
            function v(U, M, Z, D) {
              return U === 0 ? M & Z | ~M & D : U === 2 ? M & Z | M & D | Z & D : M ^ Z ^ D;
            }
            h(P, m), P.prototype.init = function() {
              return this._a = 1732584193, this._b = 4023233417, this._c = 2562383102, this._d = 271733878, this._e = 3285377520, this;
            }, P.prototype._update = function(U) {
              for (var M = this._w, Z = 0 | this._a, D = 0 | this._b, V = 0 | this._c, S = 0 | this._d, x = 0 | this._e, B = 0; B < 16; ++B) M[B] = U.readInt32BE(4 * B);
              for (; B < 80; ++B) M[B] = k(M[B - 3] ^ M[B - 8] ^ M[B - 14] ^ M[B - 16]);
              for (var W = 0; W < 80; ++W) {
                var lt = ~~(W / 20), pt = R(Z) + v(lt, D, V, S) + x + M[W] + w[lt] | 0;
                x = S, S = V, V = F(D), D = Z, Z = pt;
              }
              this._a = Z + this._a | 0, this._b = D + this._b | 0, this._c = V + this._c | 0, this._d = S + this._d | 0, this._e = x + this._e | 0;
            }, P.prototype._hash = function() {
              var U = c.allocUnsafe(20);
              return U.writeInt32BE(0 | this._a, 0), U.writeInt32BE(0 | this._b, 4), U.writeInt32BE(0 | this._c, 8), U.writeInt32BE(0 | this._d, 12), U.writeInt32BE(0 | this._e, 16), U;
            }, p.exports = P;
          }, 3740: function(p, g, b) {
            var h, m = b(6763);
            h = () => (() => {
              var c = { 616: (P, k, R) => {
                R.d(k, { A: () => v });
                var F = R(287);
                F.hp.alloc(1).subarray(0, 1) instanceof F.hp || (F.hp.prototype.subarray = function(U, M) {
                  const Z = Uint8Array.prototype.subarray.call(this, U, M);
                  return Object.setPrototypeOf(Z, F.hp.prototype), Z;
                });
                const v = F.hp;
              }, 281: (P, k, R) => {
                const F = R(164);
                P.exports = F;
              }, 164: (P, k, R) => {
                R.r(k), R.d(k, { Array: () => Mt, Bool: () => Bt, Double: () => Ct, Enum: () => tt, Float: () => xt, Hyper: () => it, Int: () => ft, LargeInt: () => $, Opaque: () => oe, Option: () => z, Quadruple: () => Tt, Reference: () => H, String: () => Ut, Struct: () => K, Union: () => _, UnsignedHyper: () => bt, UnsignedInt: () => Ot, VarArray: () => O, VarOpaque: () => yt, Void: () => J, XdrReader: () => D, XdrWriter: () => x, config: () => $t });
                class F extends TypeError {
                  constructor(wt) {
                    super(`XDR Write Error: ${wt}`);
                  }
                }
                class v extends TypeError {
                  constructor(wt) {
                    super(`XDR Read Error: ${wt}`);
                  }
                }
                class U extends TypeError {
                  constructor(wt) {
                    super(`XDR Type Definition Error: ${wt}`);
                  }
                }
                class M extends U {
                  constructor() {
                    super("method not implemented, it should be overloaded in the descendant class.");
                  }
                }
                var Z = R(616).A;
                class D {
                  constructor(wt) {
                    __publicField(this, "_buffer");
                    __publicField(this, "_length");
                    __publicField(this, "_index");
                    if (!Z.isBuffer(wt)) {
                      if (!(wt instanceof Array || Array.isArray(wt) || ArrayBuffer.isView(wt))) throw new v(`source invalid: ${wt}`);
                      wt = Z.from(wt);
                    }
                    this._buffer = wt, this._length = wt.length, this._index = 0;
                  }
                  get eof() {
                    return this._index === this._length;
                  }
                  advance(wt) {
                    const Jt = this._index;
                    if (this._index += wt, this._length < this._index) throw new v("attempt to read outside the boundary of the buffer");
                    const Ee = 4 - (wt % 4 || 4);
                    if (Ee > 0) {
                      for (let cr = 0; cr < Ee; cr++) if (this._buffer[this._index + cr] !== 0) throw new v("invalid padding");
                      this._index += Ee;
                    }
                    return Jt;
                  }
                  rewind() {
                    this._index = 0;
                  }
                  read(wt) {
                    const Jt = this.advance(wt);
                    return this._buffer.subarray(Jt, Jt + wt);
                  }
                  readInt32BE() {
                    return this._buffer.readInt32BE(this.advance(4));
                  }
                  readUInt32BE() {
                    return this._buffer.readUInt32BE(this.advance(4));
                  }
                  readBigInt64BE() {
                    return this._buffer.readBigInt64BE(this.advance(8));
                  }
                  readBigUInt64BE() {
                    return this._buffer.readBigUInt64BE(this.advance(8));
                  }
                  readFloatBE() {
                    return this._buffer.readFloatBE(this.advance(4));
                  }
                  readDoubleBE() {
                    return this._buffer.readDoubleBE(this.advance(8));
                  }
                  ensureInputConsumed() {
                    if (this._index !== this._length) throw new v("invalid XDR contract typecast - source buffer not entirely consumed");
                  }
                }
                var V = R(616).A;
                const S = 8192;
                class x {
                  constructor(wt) {
                    __publicField(this, "_buffer");
                    __publicField(this, "_length");
                    __publicField(this, "_index", 0);
                    typeof wt == "number" ? wt = V.allocUnsafe(wt) : wt instanceof V || (wt = V.allocUnsafe(S)), this._buffer = wt, this._length = wt.length;
                  }
                  alloc(wt) {
                    const Jt = this._index;
                    return this._index += wt, this._length < this._index && this.resize(this._index), Jt;
                  }
                  resize(wt) {
                    const Jt = Math.ceil(wt / S) * S, Ee = V.allocUnsafe(Jt);
                    this._buffer.copy(Ee, 0, 0, this._length), this._buffer = Ee, this._length = Jt;
                  }
                  finalize() {
                    return this._buffer.subarray(0, this._index);
                  }
                  toArray() {
                    return [...this.finalize()];
                  }
                  write(wt, Jt) {
                    if (typeof wt == "string") {
                      const cr = this.alloc(Jt);
                      this._buffer.write(wt, cr, "utf8");
                    } else {
                      wt instanceof V || (wt = V.from(wt));
                      const cr = this.alloc(Jt);
                      wt.copy(this._buffer, cr, 0, Jt);
                    }
                    const Ee = 4 - (Jt % 4 || 4);
                    if (Ee > 0) {
                      const cr = this.alloc(Ee);
                      this._buffer.fill(0, cr, this._index);
                    }
                  }
                  writeInt32BE(wt) {
                    const Jt = this.alloc(4);
                    this._buffer.writeInt32BE(wt, Jt);
                  }
                  writeUInt32BE(wt) {
                    const Jt = this.alloc(4);
                    this._buffer.writeUInt32BE(wt, Jt);
                  }
                  writeBigInt64BE(wt) {
                    const Jt = this.alloc(8);
                    this._buffer.writeBigInt64BE(wt, Jt);
                  }
                  writeBigUInt64BE(wt) {
                    const Jt = this.alloc(8);
                    this._buffer.writeBigUInt64BE(wt, Jt);
                  }
                  writeFloatBE(wt) {
                    const Jt = this.alloc(4);
                    this._buffer.writeFloatBE(wt, Jt);
                  }
                  writeDoubleBE(wt) {
                    const Jt = this.alloc(8);
                    this._buffer.writeDoubleBE(wt, Jt);
                  }
                }
                __publicField(x, "bufferChunkSize", S);
                var B = R(616).A;
                class W {
                  toXDR(wt = "raw") {
                    if (!this.write) return this.constructor.toXDR(this, wt);
                    const Jt = new x();
                    return this.write(this, Jt), rt(Jt.finalize(), wt);
                  }
                  fromXDR(wt, Jt = "raw") {
                    if (!this.read) return this.constructor.fromXDR(wt, Jt);
                    const Ee = new D(ot(wt, Jt)), cr = this.read(Ee);
                    return Ee.ensureInputConsumed(), cr;
                  }
                  validateXDR(wt, Jt = "raw") {
                    try {
                      return this.fromXDR(wt, Jt), true;
                    } catch {
                      return false;
                    }
                  }
                  static toXDR(wt, Jt = "raw") {
                    const Ee = new x();
                    return this.write(wt, Ee), rt(Ee.finalize(), Jt);
                  }
                  static fromXDR(wt, Jt = "raw") {
                    const Ee = new D(ot(wt, Jt)), cr = this.read(Ee);
                    return Ee.ensureInputConsumed(), cr;
                  }
                  static validateXDR(wt, Jt = "raw") {
                    try {
                      return this.fromXDR(wt, Jt), true;
                    } catch {
                      return false;
                    }
                  }
                }
                class lt extends W {
                  static read(wt) {
                    throw new M();
                  }
                  static write(wt, Jt) {
                    throw new M();
                  }
                  static isValid(wt) {
                    return false;
                  }
                }
                class pt extends W {
                  isValid(wt) {
                    return false;
                  }
                }
                class at extends TypeError {
                  constructor(wt) {
                    super(`Invalid format ${wt}, must be one of "raw", "hex", "base64"`);
                  }
                }
                function rt(Ht, wt) {
                  switch (wt) {
                    case "raw":
                      return Ht;
                    case "hex":
                      return Ht.toString("hex");
                    case "base64":
                      return Ht.toString("base64");
                    default:
                      throw new at(wt);
                  }
                }
                function ot(Ht, wt) {
                  switch (wt) {
                    case "raw":
                      return Ht;
                    case "hex":
                      return B.from(Ht, "hex");
                    case "base64":
                      return B.from(Ht, "base64");
                    default:
                      throw new at(wt);
                  }
                }
                function X(Ht, wt) {
                  return Ht != null && (Ht instanceof wt || I(Ht, wt) && typeof Ht.constructor.read == "function" && typeof Ht.constructor.write == "function" && I(Ht, "XdrType"));
                }
                function I(Ht, wt) {
                  do
                    if (Ht.constructor.name === wt) return true;
                  while (Ht = Object.getPrototypeOf(Ht));
                  return false;
                }
                const nt = 2147483647;
                class ft extends lt {
                  static read(wt) {
                    return wt.readInt32BE();
                  }
                  static write(wt, Jt) {
                    if (typeof wt != "number") throw new F("not a number");
                    if ((0 | wt) !== wt) throw new F("invalid i32 value");
                    Jt.writeInt32BE(wt);
                  }
                  static isValid(wt) {
                    return typeof wt == "number" && (0 | wt) === wt && wt >= -2147483648 && wt <= nt;
                  }
                }
                function dt(Ht, wt, Jt) {
                  if (typeof Ht != "bigint") throw new TypeError("Expected bigint 'value', got " + typeof Ht);
                  const Ee = wt / Jt;
                  if (Ee === 1) return [Ht];
                  if (Jt < 32 || Jt > 128 || Ee !== 2 && Ee !== 4 && Ee !== 8) throw new TypeError(`invalid bigint (${Ht}) and slice size (${wt} -> ${Jt}) combination`);
                  const cr = BigInt(Jt), Lr = new Array(Ee);
                  for (let on = 0; on < Ee; on++) Lr[on] = BigInt.asIntN(Jt, Ht), Ht >>= cr;
                  return Lr;
                }
                function Lt(Ht, wt) {
                  if (wt) return [0n, (1n << BigInt(Ht)) - 1n];
                  const Jt = 1n << BigInt(Ht - 1);
                  return [0n - Jt, Jt - 1n];
                }
                ft.MAX_VALUE = nt, ft.MIN_VALUE = 2147483648;
                class $ extends lt {
                  constructor(wt) {
                    super(), this._value = function(Jt, Ee, cr) {
                      Jt instanceof Array ? Jt.length && Jt[0] instanceof Array && (Jt = Jt[0]) : Jt = [Jt];
                      const Lr = Ee / Jt.length;
                      switch (Lr) {
                        case 32:
                        case 64:
                        case 128:
                        case 256:
                          break;
                        default:
                          throw new RangeError(`expected slices to fit in 32/64/128/256 bits, got ${Jt}`);
                      }
                      try {
                        for (let qn = 0; qn < Jt.length; qn++) typeof Jt[qn] != "bigint" && (Jt[qn] = BigInt(Jt[qn].valueOf()));
                      } catch (qn) {
                        throw new TypeError(`expected bigint-like values, got: ${Jt} (${qn})`);
                      }
                      if (cr && Jt.length === 1 && Jt[0] < 0n) throw new RangeError(`expected a positive value, got: ${Jt}`);
                      let on = BigInt.asUintN(Lr, Jt[0]);
                      for (let qn = 1; qn < Jt.length; qn++) on |= BigInt.asUintN(Lr, Jt[qn]) << BigInt(qn * Lr);
                      cr || (on = BigInt.asIntN(Ee, on));
                      const [Zr, to] = Lt(Ee, cr);
                      if (on >= Zr && on <= to) return on;
                      throw new TypeError(`bigint values [${Jt}] for ${function(qn, jn) {
                        return `${jn ? "u" : "i"}${qn}`;
                      }(Ee, cr)} out of range [${Zr}, ${to}]: ${on}`);
                    }(wt, this.size, this.unsigned);
                  }
                  get unsigned() {
                    throw new M();
                  }
                  get size() {
                    throw new M();
                  }
                  slice(wt) {
                    return dt(this._value, this.size, wt);
                  }
                  toString() {
                    return this._value.toString();
                  }
                  toJSON() {
                    return { _value: this._value.toString() };
                  }
                  toBigInt() {
                    return BigInt(this._value);
                  }
                  static read(wt) {
                    const { size: Jt } = this.prototype;
                    return Jt === 64 ? new this(wt.readBigUInt64BE()) : new this(...Array.from({ length: Jt / 64 }, () => wt.readBigUInt64BE()).reverse());
                  }
                  static write(wt, Jt) {
                    if (wt instanceof this) wt = wt._value;
                    else if (typeof wt != "bigint" || wt > this.MAX_VALUE || wt < this.MIN_VALUE) throw new F(`${wt} is not a ${this.name}`);
                    const { unsigned: Ee, size: cr } = this.prototype;
                    if (cr === 64) Ee ? Jt.writeBigUInt64BE(wt) : Jt.writeBigInt64BE(wt);
                    else for (const Lr of dt(wt, cr, 64).reverse()) Ee ? Jt.writeBigUInt64BE(Lr) : Jt.writeBigInt64BE(Lr);
                  }
                  static isValid(wt) {
                    return typeof wt == "bigint" || wt instanceof this;
                  }
                  static fromString(wt) {
                    return new this(wt);
                  }
                  static defineIntBoundaries() {
                    const [wt, Jt] = Lt(this.prototype.size, this.prototype.unsigned);
                    this.MIN_VALUE = wt, this.MAX_VALUE = Jt;
                  }
                }
                __publicField($, "MAX_VALUE", 0n);
                __publicField($, "MIN_VALUE", 0n);
                class it extends $ {
                  constructor(...wt) {
                    super(wt);
                  }
                  get low() {
                    return 0 | Number(0xffffffffn & this._value);
                  }
                  get high() {
                    return 0 | Number(this._value >> 32n);
                  }
                  get size() {
                    return 64;
                  }
                  get unsigned() {
                    return false;
                  }
                  static fromBits(wt, Jt) {
                    return new this(wt, Jt);
                  }
                }
                it.defineIntBoundaries();
                const mt = 4294967295;
                class Ot extends lt {
                  static read(wt) {
                    return wt.readUInt32BE();
                  }
                  static write(wt, Jt) {
                    if (typeof wt != "number" || !(wt >= 0 && wt <= mt) || wt % 1 != 0) throw new F("invalid u32 value");
                    Jt.writeUInt32BE(wt);
                  }
                  static isValid(wt) {
                    return typeof wt == "number" && wt % 1 == 0 && wt >= 0 && wt <= mt;
                  }
                }
                Ot.MAX_VALUE = mt, Ot.MIN_VALUE = 0;
                class bt extends $ {
                  constructor(...wt) {
                    super(wt);
                  }
                  get low() {
                    return 0 | Number(0xffffffffn & this._value);
                  }
                  get high() {
                    return 0 | Number(this._value >> 32n);
                  }
                  get size() {
                    return 64;
                  }
                  get unsigned() {
                    return true;
                  }
                  static fromBits(wt, Jt) {
                    return new this(wt, Jt);
                  }
                }
                bt.defineIntBoundaries();
                class xt extends lt {
                  static read(wt) {
                    return wt.readFloatBE();
                  }
                  static write(wt, Jt) {
                    if (typeof wt != "number") throw new F("not a number");
                    Jt.writeFloatBE(wt);
                  }
                  static isValid(wt) {
                    return typeof wt == "number";
                  }
                }
                class Ct extends lt {
                  static read(wt) {
                    return wt.readDoubleBE();
                  }
                  static write(wt, Jt) {
                    if (typeof wt != "number") throw new F("not a number");
                    Jt.writeDoubleBE(wt);
                  }
                  static isValid(wt) {
                    return typeof wt == "number";
                  }
                }
                class Tt extends lt {
                  static read() {
                    throw new U("quadruple not supported");
                  }
                  static write() {
                    throw new U("quadruple not supported");
                  }
                  static isValid() {
                    return false;
                  }
                }
                class Bt extends lt {
                  static read(wt) {
                    const Jt = ft.read(wt);
                    switch (Jt) {
                      case 0:
                        return false;
                      case 1:
                        return true;
                      default:
                        throw new v(`got ${Jt} when trying to read a bool`);
                    }
                  }
                  static write(wt, Jt) {
                    const Ee = wt ? 1 : 0;
                    ft.write(Ee, Jt);
                  }
                  static isValid(wt) {
                    return typeof wt == "boolean";
                  }
                }
                var At = R(616).A;
                class Ut extends pt {
                  constructor(wt = Ot.MAX_VALUE) {
                    super(), this._maxLength = wt;
                  }
                  read(wt) {
                    const Jt = Ot.read(wt);
                    if (Jt > this._maxLength) throw new v(`saw ${Jt} length String, max allowed is ${this._maxLength}`);
                    return wt.read(Jt);
                  }
                  readString(wt) {
                    return this.read(wt).toString("utf8");
                  }
                  write(wt, Jt) {
                    const Ee = typeof wt == "string" ? At.byteLength(wt, "utf8") : wt.length;
                    if (Ee > this._maxLength) throw new F(`got ${wt.length} bytes, max allowed is ${this._maxLength}`);
                    Ot.write(Ee, Jt), Jt.write(wt, Ee);
                  }
                  isValid(wt) {
                    return typeof wt == "string" ? At.byteLength(wt, "utf8") <= this._maxLength : !!(wt instanceof Array || At.isBuffer(wt)) && wt.length <= this._maxLength;
                  }
                }
                var Vt = R(616).A;
                class oe extends pt {
                  constructor(wt) {
                    super(), this._length = wt;
                  }
                  read(wt) {
                    return wt.read(this._length);
                  }
                  write(wt, Jt) {
                    const { length: Ee } = wt;
                    if (Ee !== this._length) throw new F(`got ${wt.length} bytes, expected ${this._length}`);
                    Jt.write(wt, Ee);
                  }
                  isValid(wt) {
                    return Vt.isBuffer(wt) && wt.length === this._length;
                  }
                }
                var te = R(616).A;
                class yt extends pt {
                  constructor(wt = Ot.MAX_VALUE) {
                    super(), this._maxLength = wt;
                  }
                  read(wt) {
                    const Jt = Ot.read(wt);
                    if (Jt > this._maxLength) throw new v(`saw ${Jt} length VarOpaque, max allowed is ${this._maxLength}`);
                    return wt.read(Jt);
                  }
                  write(wt, Jt) {
                    const { length: Ee } = wt;
                    if (wt.length > this._maxLength) throw new F(`got ${wt.length} bytes, max allowed is ${this._maxLength}`);
                    Ot.write(Ee, Jt), Jt.write(wt, Ee);
                  }
                  isValid(wt) {
                    return te.isBuffer(wt) && wt.length <= this._maxLength;
                  }
                }
                class Mt extends pt {
                  constructor(wt, Jt) {
                    super(), this._childType = wt, this._length = Jt;
                  }
                  read(wt) {
                    const Jt = new R.g.Array(this._length);
                    for (let Ee = 0; Ee < this._length; Ee++) Jt[Ee] = this._childType.read(wt);
                    return Jt;
                  }
                  write(wt, Jt) {
                    if (!R.g.Array.isArray(wt)) throw new F("value is not array");
                    if (wt.length !== this._length) throw new F(`got array of size ${wt.length}, expected ${this._length}`);
                    for (const Ee of wt) this._childType.write(Ee, Jt);
                  }
                  isValid(wt) {
                    if (!(wt instanceof R.g.Array) || wt.length !== this._length) return false;
                    for (const Jt of wt) if (!this._childType.isValid(Jt)) return false;
                    return true;
                  }
                }
                class O extends pt {
                  constructor(wt, Jt = Ot.MAX_VALUE) {
                    super(), this._childType = wt, this._maxLength = Jt;
                  }
                  read(wt) {
                    const Jt = Ot.read(wt);
                    if (Jt > this._maxLength) throw new v(`saw ${Jt} length VarArray, max allowed is ${this._maxLength}`);
                    const Ee = new Array(Jt);
                    for (let cr = 0; cr < Jt; cr++) Ee[cr] = this._childType.read(wt);
                    return Ee;
                  }
                  write(wt, Jt) {
                    if (!(wt instanceof Array)) throw new F("value is not array");
                    if (wt.length > this._maxLength) throw new F(`got array of size ${wt.length}, max allowed is ${this._maxLength}`);
                    Ot.write(wt.length, Jt);
                    for (const Ee of wt) this._childType.write(Ee, Jt);
                  }
                  isValid(wt) {
                    if (!(wt instanceof Array) || wt.length > this._maxLength) return false;
                    for (const Jt of wt) if (!this._childType.isValid(Jt)) return false;
                    return true;
                  }
                }
                class z extends lt {
                  constructor(wt) {
                    super(), this._childType = wt;
                  }
                  read(wt) {
                    if (Bt.read(wt)) return this._childType.read(wt);
                  }
                  write(wt, Jt) {
                    const Ee = wt != null;
                    Bt.write(Ee, Jt), Ee && this._childType.write(wt, Jt);
                  }
                  isValid(wt) {
                    return wt == null || this._childType.isValid(wt);
                  }
                }
                class J extends lt {
                  static read() {
                  }
                  static write(wt) {
                    if (wt !== void 0) throw new F("trying to write value to a void slot");
                  }
                  static isValid(wt) {
                    return wt === void 0;
                  }
                }
                class tt extends lt {
                  constructor(wt, Jt) {
                    super(), this.name = wt, this.value = Jt;
                  }
                  static read(wt) {
                    const Jt = ft.read(wt), Ee = this._byValue[Jt];
                    if (Ee === void 0) throw new v(`unknown ${this.enumName} member for value ${Jt}`);
                    return Ee;
                  }
                  static write(wt, Jt) {
                    if (!this.isValid(wt)) throw new F(`${wt} has enum name ${wt == null ? void 0 : wt.enumName}, not ${this.enumName}: ${JSON.stringify(wt)}`);
                    ft.write(wt.value, Jt);
                  }
                  static isValid(wt) {
                    var _a2;
                    return ((_a2 = wt == null ? void 0 : wt.constructor) == null ? void 0 : _a2.enumName) === this.enumName || X(wt, this);
                  }
                  static members() {
                    return this._members;
                  }
                  static values() {
                    return Object.values(this._members);
                  }
                  static fromName(wt) {
                    const Jt = this._members[wt];
                    if (!Jt) throw new TypeError(`${wt} is not a member of ${this.enumName}`);
                    return Jt;
                  }
                  static fromValue(wt) {
                    const Jt = this._byValue[wt];
                    if (Jt === void 0) throw new TypeError(`${wt} is not a value of any member of ${this.enumName}`);
                    return Jt;
                  }
                  static create(wt, Jt, Ee) {
                    const cr = class extends tt {
                    };
                    cr.enumName = Jt, wt.results[Jt] = cr, cr._members = {}, cr._byValue = {};
                    for (const [Lr, on] of Object.entries(Ee)) {
                      const Zr = new cr(Lr, on);
                      cr._members[Lr] = Zr, cr._byValue[on] = Zr, cr[Lr] = () => Zr;
                    }
                    return cr;
                  }
                }
                class H extends lt {
                  resolve() {
                    throw new U('"resolve" method should be implemented in the descendant class');
                  }
                }
                class K extends pt {
                  constructor(wt) {
                    super(), this._attributes = wt || {};
                  }
                  static read(wt) {
                    const Jt = {};
                    for (const [Ee, cr] of this._fields) Jt[Ee] = cr.read(wt);
                    return new this(Jt);
                  }
                  static write(wt, Jt) {
                    var _a2;
                    if (!this.isValid(wt)) throw new F(`${wt} has struct name ${(_a2 = wt == null ? void 0 : wt.constructor) == null ? void 0 : _a2.structName}, not ${this.structName}: ${JSON.stringify(wt)}`);
                    for (const [Ee, cr] of this._fields) {
                      const Lr = wt._attributes[Ee];
                      cr.write(Lr, Jt);
                    }
                  }
                  static isValid(wt) {
                    var _a2;
                    return ((_a2 = wt == null ? void 0 : wt.constructor) == null ? void 0 : _a2.structName) === this.structName || X(wt, this);
                  }
                  static create(wt, Jt, Ee) {
                    const cr = class extends K {
                    };
                    cr.structName = Jt, wt.results[Jt] = cr;
                    const Lr = new Array(Ee.length);
                    for (let on = 0; on < Ee.length; on++) {
                      const Zr = Ee[on], to = Zr[0];
                      let qn = Zr[1];
                      qn instanceof H && (qn = qn.resolve(wt)), Lr[on] = [to, qn], cr.prototype[to] = q(to);
                    }
                    return cr._fields = Lr, cr;
                  }
                }
                function q(Ht) {
                  return function(wt) {
                    return wt !== void 0 && (this._attributes[Ht] = wt), this._attributes[Ht];
                  };
                }
                class _ extends pt {
                  constructor(wt, Jt) {
                    super(), this.set(wt, Jt);
                  }
                  set(wt, Jt) {
                    typeof wt == "string" && (wt = this.constructor._switchOn.fromName(wt)), this._switch = wt;
                    const Ee = this.constructor.armForSwitch(this._switch);
                    this._arm = Ee, this._armType = Ee === J ? J : this.constructor._arms[Ee], this._value = Jt;
                  }
                  get(wt = this._arm) {
                    if (this._arm !== J && this._arm !== wt) throw new TypeError(`${wt} not set`);
                    return this._value;
                  }
                  switch() {
                    return this._switch;
                  }
                  arm() {
                    return this._arm;
                  }
                  armType() {
                    return this._armType;
                  }
                  value() {
                    return this._value;
                  }
                  static armForSwitch(wt) {
                    const Jt = this._switches.get(wt);
                    if (Jt !== void 0) return Jt;
                    if (this._defaultArm) return this._defaultArm;
                    throw new TypeError(`Bad union switch: ${wt}`);
                  }
                  static armTypeForArm(wt) {
                    return wt === J ? J : this._arms[wt];
                  }
                  static read(wt) {
                    const Jt = this._switchOn.read(wt), Ee = this.armForSwitch(Jt), cr = Ee === J ? J : this._arms[Ee];
                    let Lr;
                    return Lr = cr !== void 0 ? cr.read(wt) : Ee.read(wt), new this(Jt, Lr);
                  }
                  static write(wt, Jt) {
                    if (!this.isValid(wt)) throw new F(`${wt} has union name ${wt == null ? void 0 : wt.unionName}, not ${this.unionName}: ${JSON.stringify(wt)}`);
                    this._switchOn.write(wt.switch(), Jt), wt.armType().write(wt.value(), Jt);
                  }
                  static isValid(wt) {
                    var _a2;
                    return ((_a2 = wt == null ? void 0 : wt.constructor) == null ? void 0 : _a2.unionName) === this.unionName || X(wt, this);
                  }
                  static create(wt, Jt, Ee) {
                    const cr = class extends _ {
                    };
                    cr.unionName = Jt, wt.results[Jt] = cr, Ee.switchOn instanceof H ? cr._switchOn = Ee.switchOn.resolve(wt) : cr._switchOn = Ee.switchOn, cr._switches = /* @__PURE__ */ new Map(), cr._arms = {};
                    let Lr = Ee.defaultArm;
                    Lr instanceof H && (Lr = Lr.resolve(wt)), cr._defaultArm = Lr;
                    for (const [on, Zr] of Ee.switches) {
                      const to = typeof on == "string" ? cr._switchOn.fromName(on) : on;
                      cr._switches.set(to, Zr);
                    }
                    if (cr._switchOn.values !== void 0) for (const on of cr._switchOn.values()) cr[on.name] = function(Zr) {
                      return new cr(on, Zr);
                    }, cr.prototype[on.name] = function(Zr) {
                      return this.set(on, Zr);
                    };
                    if (Ee.arms) for (const [on, Zr] of Object.entries(Ee.arms)) cr._arms[on] = Zr instanceof H ? Zr.resolve(wt) : Zr, Zr !== J && (cr.prototype[on] = function() {
                      return this.get(on);
                    });
                    return cr;
                  }
                }
                class L extends H {
                  constructor(wt) {
                    super(), this.name = wt;
                  }
                  resolve(wt) {
                    return wt.definitions[this.name].resolve(wt);
                  }
                }
                class et extends H {
                  constructor(wt, Jt, Ee = false) {
                    super(), this.childReference = wt, this.length = Jt, this.variable = Ee;
                  }
                  resolve(wt) {
                    let Jt = this.childReference, Ee = this.length;
                    return Jt instanceof H && (Jt = Jt.resolve(wt)), Ee instanceof H && (Ee = Ee.resolve(wt)), this.variable ? new O(Jt, Ee) : new Mt(Jt, Ee);
                  }
                }
                class St extends H {
                  constructor(wt) {
                    super(), this.childReference = wt, this.name = wt.name;
                  }
                  resolve(wt) {
                    let Jt = this.childReference;
                    return Jt instanceof H && (Jt = Jt.resolve(wt)), new z(Jt);
                  }
                }
                class kt extends H {
                  constructor(wt, Jt) {
                    super(), this.sizedType = wt, this.length = Jt;
                  }
                  resolve(wt) {
                    let Jt = this.length;
                    return Jt instanceof H && (Jt = Jt.resolve(wt)), new this.sizedType(Jt);
                  }
                }
                class ct {
                  constructor(wt, Jt, Ee) {
                    this.constructor = wt, this.name = Jt, this.config = Ee;
                  }
                  resolve(wt) {
                    return this.name in wt.results ? wt.results[this.name] : this.constructor(wt, this.name, this.config);
                  }
                }
                function j(Ht, wt, Jt) {
                  return Jt instanceof H && (Jt = Jt.resolve(Ht)), Ht.results[wt] = Jt, Jt;
                }
                function ut(Ht, wt, Jt) {
                  return Ht.results[wt] = Jt, Jt;
                }
                class gt {
                  constructor(wt) {
                    this._destination = wt, this._definitions = {};
                  }
                  enum(wt, Jt) {
                    const Ee = new ct(tt.create, wt, Jt);
                    this.define(wt, Ee);
                  }
                  struct(wt, Jt) {
                    const Ee = new ct(K.create, wt, Jt);
                    this.define(wt, Ee);
                  }
                  union(wt, Jt) {
                    const Ee = new ct(_.create, wt, Jt);
                    this.define(wt, Ee);
                  }
                  typedef(wt, Jt) {
                    const Ee = new ct(j, wt, Jt);
                    this.define(wt, Ee);
                  }
                  const(wt, Jt) {
                    const Ee = new ct(ut, wt, Jt);
                    this.define(wt, Ee);
                  }
                  void() {
                    return J;
                  }
                  bool() {
                    return Bt;
                  }
                  int() {
                    return ft;
                  }
                  hyper() {
                    return it;
                  }
                  uint() {
                    return Ot;
                  }
                  uhyper() {
                    return bt;
                  }
                  float() {
                    return xt;
                  }
                  double() {
                    return Ct;
                  }
                  quadruple() {
                    return Tt;
                  }
                  string(wt) {
                    return new kt(Ut, wt);
                  }
                  opaque(wt) {
                    return new kt(oe, wt);
                  }
                  varOpaque(wt) {
                    return new kt(yt, wt);
                  }
                  array(wt, Jt) {
                    return new et(wt, Jt);
                  }
                  varArray(wt, Jt) {
                    return new et(wt, Jt, true);
                  }
                  option(wt) {
                    return new St(wt);
                  }
                  define(wt, Jt) {
                    if (this._destination[wt] !== void 0) throw new U(`${wt} is already defined`);
                    this._definitions[wt] = Jt;
                  }
                  lookup(wt) {
                    return new L(wt);
                  }
                  resolve() {
                    for (const wt of Object.values(this._definitions)) wt.resolve({ definitions: this._definitions, results: this._destination });
                  }
                }
                function $t(Ht, wt = {}) {
                  if (Ht) {
                    const Jt = new gt(wt);
                    Ht(Jt), Jt.resolve();
                  }
                  return wt;
                }
              }, 526: (P, k) => {
                k.byteLength = function(V) {
                  var S = Z(V), x = S[0], B = S[1];
                  return 3 * (x + B) / 4 - B;
                }, k.toByteArray = function(V) {
                  var S, x, B = Z(V), W = B[0], lt = B[1], pt = new v(function(ot, X, I) {
                    return 3 * (X + I) / 4 - I;
                  }(0, W, lt)), at = 0, rt = lt > 0 ? W - 4 : W;
                  for (x = 0; x < rt; x += 4) S = F[V.charCodeAt(x)] << 18 | F[V.charCodeAt(x + 1)] << 12 | F[V.charCodeAt(x + 2)] << 6 | F[V.charCodeAt(x + 3)], pt[at++] = S >> 16 & 255, pt[at++] = S >> 8 & 255, pt[at++] = 255 & S;
                  return lt === 2 && (S = F[V.charCodeAt(x)] << 2 | F[V.charCodeAt(x + 1)] >> 4, pt[at++] = 255 & S), lt === 1 && (S = F[V.charCodeAt(x)] << 10 | F[V.charCodeAt(x + 1)] << 4 | F[V.charCodeAt(x + 2)] >> 2, pt[at++] = S >> 8 & 255, pt[at++] = 255 & S), pt;
                }, k.fromByteArray = function(V) {
                  for (var S, x = V.length, B = x % 3, W = [], lt = 16383, pt = 0, at = x - B; pt < at; pt += lt) W.push(D(V, pt, pt + lt > at ? at : pt + lt));
                  return B === 1 ? (S = V[x - 1], W.push(R[S >> 2] + R[S << 4 & 63] + "==")) : B === 2 && (S = (V[x - 2] << 8) + V[x - 1], W.push(R[S >> 10] + R[S >> 4 & 63] + R[S << 2 & 63] + "=")), W.join("");
                };
                for (var R = [], F = [], v = typeof Uint8Array < "u" ? Uint8Array : Array, U = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/", M = 0; M < 64; ++M) R[M] = U[M], F[U.charCodeAt(M)] = M;
                function Z(V) {
                  var S = V.length;
                  if (S % 4 > 0) throw new Error("Invalid string. Length must be a multiple of 4");
                  var x = V.indexOf("=");
                  return x === -1 && (x = S), [x, x === S ? 0 : 4 - x % 4];
                }
                function D(V, S, x) {
                  for (var B, W, lt = [], pt = S; pt < x; pt += 3) B = (V[pt] << 16 & 16711680) + (V[pt + 1] << 8 & 65280) + (255 & V[pt + 2]), lt.push(R[(W = B) >> 18 & 63] + R[W >> 12 & 63] + R[W >> 6 & 63] + R[63 & W]);
                  return lt.join("");
                }
                F[45] = 62, F[95] = 63;
              }, 287: (P, k, R) => {
                const F = R(526), v = R(251), U = typeof Symbol == "function" && typeof Symbol.for == "function" ? Symbol.for("nodejs.util.inspect.custom") : null;
                k.hp = D, k.IS = 50;
                const M = 2147483647;
                function Z(j) {
                  if (j > M) throw new RangeError('The value "' + j + '" is invalid for option "size"');
                  const ut = new Uint8Array(j);
                  return Object.setPrototypeOf(ut, D.prototype), ut;
                }
                function D(j, ut, gt) {
                  if (typeof j == "number") {
                    if (typeof ut == "string") throw new TypeError('The "string" argument must be of type string. Received type number');
                    return x(j);
                  }
                  return V(j, ut, gt);
                }
                function V(j, ut, gt) {
                  if (typeof j == "string") return function(wt, Jt) {
                    if (typeof Jt == "string" && Jt !== "" || (Jt = "utf8"), !D.isEncoding(Jt)) throw new TypeError("Unknown encoding: " + Jt);
                    const Ee = 0 | pt(wt, Jt);
                    let cr = Z(Ee);
                    const Lr = cr.write(wt, Jt);
                    return Lr !== Ee && (cr = cr.slice(0, Lr)), cr;
                  }(j, ut);
                  if (ArrayBuffer.isView(j)) return function(wt) {
                    if (L(wt, Uint8Array)) {
                      const Jt = new Uint8Array(wt);
                      return W(Jt.buffer, Jt.byteOffset, Jt.byteLength);
                    }
                    return B(wt);
                  }(j);
                  if (j == null) throw new TypeError("The first argument must be one of type string, Buffer, ArrayBuffer, Array, or Array-like Object. Received type " + typeof j);
                  if (L(j, ArrayBuffer) || j && L(j.buffer, ArrayBuffer) || typeof SharedArrayBuffer < "u" && (L(j, SharedArrayBuffer) || j && L(j.buffer, SharedArrayBuffer))) return W(j, ut, gt);
                  if (typeof j == "number") throw new TypeError('The "value" argument must not be of type number. Received type number');
                  const $t = j.valueOf && j.valueOf();
                  if ($t != null && $t !== j) return D.from($t, ut, gt);
                  const Ht = function(wt) {
                    if (D.isBuffer(wt)) {
                      const Jt = 0 | lt(wt.length), Ee = Z(Jt);
                      return Ee.length === 0 || wt.copy(Ee, 0, 0, Jt), Ee;
                    }
                    return wt.length !== void 0 ? typeof wt.length != "number" || et(wt.length) ? Z(0) : B(wt) : wt.type === "Buffer" && Array.isArray(wt.data) ? B(wt.data) : void 0;
                  }(j);
                  if (Ht) return Ht;
                  if (typeof Symbol < "u" && Symbol.toPrimitive != null && typeof j[Symbol.toPrimitive] == "function") return D.from(j[Symbol.toPrimitive]("string"), ut, gt);
                  throw new TypeError("The first argument must be one of type string, Buffer, ArrayBuffer, Array, or Array-like Object. Received type " + typeof j);
                }
                function S(j) {
                  if (typeof j != "number") throw new TypeError('"size" argument must be of type number');
                  if (j < 0) throw new RangeError('The value "' + j + '" is invalid for option "size"');
                }
                function x(j) {
                  return S(j), Z(j < 0 ? 0 : 0 | lt(j));
                }
                function B(j) {
                  const ut = j.length < 0 ? 0 : 0 | lt(j.length), gt = Z(ut);
                  for (let $t = 0; $t < ut; $t += 1) gt[$t] = 255 & j[$t];
                  return gt;
                }
                function W(j, ut, gt) {
                  if (ut < 0 || j.byteLength < ut) throw new RangeError('"offset" is outside of buffer bounds');
                  if (j.byteLength < ut + (gt || 0)) throw new RangeError('"length" is outside of buffer bounds');
                  let $t;
                  return $t = ut === void 0 && gt === void 0 ? new Uint8Array(j) : gt === void 0 ? new Uint8Array(j, ut) : new Uint8Array(j, ut, gt), Object.setPrototypeOf($t, D.prototype), $t;
                }
                function lt(j) {
                  if (j >= M) throw new RangeError("Attempt to allocate Buffer larger than maximum size: 0x" + M.toString(16) + " bytes");
                  return 0 | j;
                }
                function pt(j, ut) {
                  if (D.isBuffer(j)) return j.length;
                  if (ArrayBuffer.isView(j) || L(j, ArrayBuffer)) return j.byteLength;
                  if (typeof j != "string") throw new TypeError('The "string" argument must be one of type string, Buffer, or ArrayBuffer. Received type ' + typeof j);
                  const gt = j.length, $t = arguments.length > 2 && arguments[2] === true;
                  if (!$t && gt === 0) return 0;
                  let Ht = false;
                  for (; ; ) switch (ut) {
                    case "ascii":
                    case "latin1":
                    case "binary":
                      return gt;
                    case "utf8":
                    case "utf-8":
                      return K(j).length;
                    case "ucs2":
                    case "ucs-2":
                    case "utf16le":
                    case "utf-16le":
                      return 2 * gt;
                    case "hex":
                      return gt >>> 1;
                    case "base64":
                      return q(j).length;
                    default:
                      if (Ht) return $t ? -1 : K(j).length;
                      ut = ("" + ut).toLowerCase(), Ht = true;
                  }
                }
                function at(j, ut, gt) {
                  let $t = false;
                  if ((ut === void 0 || ut < 0) && (ut = 0), ut > this.length || ((gt === void 0 || gt > this.length) && (gt = this.length), gt <= 0) || (gt >>>= 0) <= (ut >>>= 0)) return "";
                  for (j || (j = "utf8"); ; ) switch (j) {
                    case "hex":
                      return xt(this, ut, gt);
                    case "utf8":
                    case "utf-8":
                      return it(this, ut, gt);
                    case "ascii":
                      return Ot(this, ut, gt);
                    case "latin1":
                    case "binary":
                      return bt(this, ut, gt);
                    case "base64":
                      return $(this, ut, gt);
                    case "ucs2":
                    case "ucs-2":
                    case "utf16le":
                    case "utf-16le":
                      return Ct(this, ut, gt);
                    default:
                      if ($t) throw new TypeError("Unknown encoding: " + j);
                      j = (j + "").toLowerCase(), $t = true;
                  }
                }
                function rt(j, ut, gt) {
                  const $t = j[ut];
                  j[ut] = j[gt], j[gt] = $t;
                }
                function ot(j, ut, gt, $t, Ht) {
                  if (j.length === 0) return -1;
                  if (typeof gt == "string" ? ($t = gt, gt = 0) : gt > 2147483647 ? gt = 2147483647 : gt < -2147483648 && (gt = -2147483648), et(gt = +gt) && (gt = Ht ? 0 : j.length - 1), gt < 0 && (gt = j.length + gt), gt >= j.length) {
                    if (Ht) return -1;
                    gt = j.length - 1;
                  } else if (gt < 0) {
                    if (!Ht) return -1;
                    gt = 0;
                  }
                  if (typeof ut == "string" && (ut = D.from(ut, $t)), D.isBuffer(ut)) return ut.length === 0 ? -1 : X(j, ut, gt, $t, Ht);
                  if (typeof ut == "number") return ut &= 255, typeof Uint8Array.prototype.indexOf == "function" ? Ht ? Uint8Array.prototype.indexOf.call(j, ut, gt) : Uint8Array.prototype.lastIndexOf.call(j, ut, gt) : X(j, [ut], gt, $t, Ht);
                  throw new TypeError("val must be string, number or Buffer");
                }
                function X(j, ut, gt, $t, Ht) {
                  let wt, Jt = 1, Ee = j.length, cr = ut.length;
                  if ($t !== void 0 && (($t = String($t).toLowerCase()) === "ucs2" || $t === "ucs-2" || $t === "utf16le" || $t === "utf-16le")) {
                    if (j.length < 2 || ut.length < 2) return -1;
                    Jt = 2, Ee /= 2, cr /= 2, gt /= 2;
                  }
                  function Lr(on, Zr) {
                    return Jt === 1 ? on[Zr] : on.readUInt16BE(Zr * Jt);
                  }
                  if (Ht) {
                    let on = -1;
                    for (wt = gt; wt < Ee; wt++) if (Lr(j, wt) === Lr(ut, on === -1 ? 0 : wt - on)) {
                      if (on === -1 && (on = wt), wt - on + 1 === cr) return on * Jt;
                    } else on !== -1 && (wt -= wt - on), on = -1;
                  } else for (gt + cr > Ee && (gt = Ee - cr), wt = gt; wt >= 0; wt--) {
                    let on = true;
                    for (let Zr = 0; Zr < cr; Zr++) if (Lr(j, wt + Zr) !== Lr(ut, Zr)) {
                      on = false;
                      break;
                    }
                    if (on) return wt;
                  }
                  return -1;
                }
                function I(j, ut, gt, $t) {
                  gt = Number(gt) || 0;
                  const Ht = j.length - gt;
                  $t ? ($t = Number($t)) > Ht && ($t = Ht) : $t = Ht;
                  const wt = ut.length;
                  let Jt;
                  for ($t > wt / 2 && ($t = wt / 2), Jt = 0; Jt < $t; ++Jt) {
                    const Ee = parseInt(ut.substr(2 * Jt, 2), 16);
                    if (et(Ee)) return Jt;
                    j[gt + Jt] = Ee;
                  }
                  return Jt;
                }
                function nt(j, ut, gt, $t) {
                  return _(K(ut, j.length - gt), j, gt, $t);
                }
                function ft(j, ut, gt, $t) {
                  return _(function(Ht) {
                    const wt = [];
                    for (let Jt = 0; Jt < Ht.length; ++Jt) wt.push(255 & Ht.charCodeAt(Jt));
                    return wt;
                  }(ut), j, gt, $t);
                }
                function dt(j, ut, gt, $t) {
                  return _(q(ut), j, gt, $t);
                }
                function Lt(j, ut, gt, $t) {
                  return _(function(Ht, wt) {
                    let Jt, Ee, cr;
                    const Lr = [];
                    for (let on = 0; on < Ht.length && !((wt -= 2) < 0); ++on) Jt = Ht.charCodeAt(on), Ee = Jt >> 8, cr = Jt % 256, Lr.push(cr), Lr.push(Ee);
                    return Lr;
                  }(ut, j.length - gt), j, gt, $t);
                }
                function $(j, ut, gt) {
                  return ut === 0 && gt === j.length ? F.fromByteArray(j) : F.fromByteArray(j.slice(ut, gt));
                }
                function it(j, ut, gt) {
                  gt = Math.min(j.length, gt);
                  const $t = [];
                  let Ht = ut;
                  for (; Ht < gt; ) {
                    const wt = j[Ht];
                    let Jt = null, Ee = wt > 239 ? 4 : wt > 223 ? 3 : wt > 191 ? 2 : 1;
                    if (Ht + Ee <= gt) {
                      let cr, Lr, on, Zr;
                      switch (Ee) {
                        case 1:
                          wt < 128 && (Jt = wt);
                          break;
                        case 2:
                          cr = j[Ht + 1], (192 & cr) == 128 && (Zr = (31 & wt) << 6 | 63 & cr, Zr > 127 && (Jt = Zr));
                          break;
                        case 3:
                          cr = j[Ht + 1], Lr = j[Ht + 2], (192 & cr) == 128 && (192 & Lr) == 128 && (Zr = (15 & wt) << 12 | (63 & cr) << 6 | 63 & Lr, Zr > 2047 && (Zr < 55296 || Zr > 57343) && (Jt = Zr));
                          break;
                        case 4:
                          cr = j[Ht + 1], Lr = j[Ht + 2], on = j[Ht + 3], (192 & cr) == 128 && (192 & Lr) == 128 && (192 & on) == 128 && (Zr = (15 & wt) << 18 | (63 & cr) << 12 | (63 & Lr) << 6 | 63 & on, Zr > 65535 && Zr < 1114112 && (Jt = Zr));
                      }
                    }
                    Jt === null ? (Jt = 65533, Ee = 1) : Jt > 65535 && (Jt -= 65536, $t.push(Jt >>> 10 & 1023 | 55296), Jt = 56320 | 1023 & Jt), $t.push(Jt), Ht += Ee;
                  }
                  return function(wt) {
                    const Jt = wt.length;
                    if (Jt <= mt) return String.fromCharCode.apply(String, wt);
                    let Ee = "", cr = 0;
                    for (; cr < Jt; ) Ee += String.fromCharCode.apply(String, wt.slice(cr, cr += mt));
                    return Ee;
                  }($t);
                }
                D.TYPED_ARRAY_SUPPORT = function() {
                  try {
                    const j = new Uint8Array(1), ut = { foo: function() {
                      return 42;
                    } };
                    return Object.setPrototypeOf(ut, Uint8Array.prototype), Object.setPrototypeOf(j, ut), j.foo() === 42;
                  } catch {
                    return false;
                  }
                }(), D.TYPED_ARRAY_SUPPORT || m === void 0 || typeof m.error != "function" || m.error("This browser lacks typed array (Uint8Array) support which is required by `buffer` v5.x. Use `buffer` v4.x if you require old browser support."), Object.defineProperty(D.prototype, "parent", { enumerable: true, get: function() {
                  if (D.isBuffer(this)) return this.buffer;
                } }), Object.defineProperty(D.prototype, "offset", { enumerable: true, get: function() {
                  if (D.isBuffer(this)) return this.byteOffset;
                } }), D.poolSize = 8192, D.from = function(j, ut, gt) {
                  return V(j, ut, gt);
                }, Object.setPrototypeOf(D.prototype, Uint8Array.prototype), Object.setPrototypeOf(D, Uint8Array), D.alloc = function(j, ut, gt) {
                  return function($t, Ht, wt) {
                    return S($t), $t <= 0 ? Z($t) : Ht !== void 0 ? typeof wt == "string" ? Z($t).fill(Ht, wt) : Z($t).fill(Ht) : Z($t);
                  }(j, ut, gt);
                }, D.allocUnsafe = function(j) {
                  return x(j);
                }, D.allocUnsafeSlow = function(j) {
                  return x(j);
                }, D.isBuffer = function(j) {
                  return j != null && j._isBuffer === true && j !== D.prototype;
                }, D.compare = function(j, ut) {
                  if (L(j, Uint8Array) && (j = D.from(j, j.offset, j.byteLength)), L(ut, Uint8Array) && (ut = D.from(ut, ut.offset, ut.byteLength)), !D.isBuffer(j) || !D.isBuffer(ut)) throw new TypeError('The "buf1", "buf2" arguments must be one of type Buffer or Uint8Array');
                  if (j === ut) return 0;
                  let gt = j.length, $t = ut.length;
                  for (let Ht = 0, wt = Math.min(gt, $t); Ht < wt; ++Ht) if (j[Ht] !== ut[Ht]) {
                    gt = j[Ht], $t = ut[Ht];
                    break;
                  }
                  return gt < $t ? -1 : $t < gt ? 1 : 0;
                }, D.isEncoding = function(j) {
                  switch (String(j).toLowerCase()) {
                    case "hex":
                    case "utf8":
                    case "utf-8":
                    case "ascii":
                    case "latin1":
                    case "binary":
                    case "base64":
                    case "ucs2":
                    case "ucs-2":
                    case "utf16le":
                    case "utf-16le":
                      return true;
                    default:
                      return false;
                  }
                }, D.concat = function(j, ut) {
                  if (!Array.isArray(j)) throw new TypeError('"list" argument must be an Array of Buffers');
                  if (j.length === 0) return D.alloc(0);
                  let gt;
                  if (ut === void 0) for (ut = 0, gt = 0; gt < j.length; ++gt) ut += j[gt].length;
                  const $t = D.allocUnsafe(ut);
                  let Ht = 0;
                  for (gt = 0; gt < j.length; ++gt) {
                    let wt = j[gt];
                    if (L(wt, Uint8Array)) Ht + wt.length > $t.length ? (D.isBuffer(wt) || (wt = D.from(wt)), wt.copy($t, Ht)) : Uint8Array.prototype.set.call($t, wt, Ht);
                    else {
                      if (!D.isBuffer(wt)) throw new TypeError('"list" argument must be an Array of Buffers');
                      wt.copy($t, Ht);
                    }
                    Ht += wt.length;
                  }
                  return $t;
                }, D.byteLength = pt, D.prototype._isBuffer = true, D.prototype.swap16 = function() {
                  const j = this.length;
                  if (j % 2 != 0) throw new RangeError("Buffer size must be a multiple of 16-bits");
                  for (let ut = 0; ut < j; ut += 2) rt(this, ut, ut + 1);
                  return this;
                }, D.prototype.swap32 = function() {
                  const j = this.length;
                  if (j % 4 != 0) throw new RangeError("Buffer size must be a multiple of 32-bits");
                  for (let ut = 0; ut < j; ut += 4) rt(this, ut, ut + 3), rt(this, ut + 1, ut + 2);
                  return this;
                }, D.prototype.swap64 = function() {
                  const j = this.length;
                  if (j % 8 != 0) throw new RangeError("Buffer size must be a multiple of 64-bits");
                  for (let ut = 0; ut < j; ut += 8) rt(this, ut, ut + 7), rt(this, ut + 1, ut + 6), rt(this, ut + 2, ut + 5), rt(this, ut + 3, ut + 4);
                  return this;
                }, D.prototype.toString = function() {
                  const j = this.length;
                  return j === 0 ? "" : arguments.length === 0 ? it(this, 0, j) : at.apply(this, arguments);
                }, D.prototype.toLocaleString = D.prototype.toString, D.prototype.equals = function(j) {
                  if (!D.isBuffer(j)) throw new TypeError("Argument must be a Buffer");
                  return this === j || D.compare(this, j) === 0;
                }, D.prototype.inspect = function() {
                  let j = "";
                  const ut = k.IS;
                  return j = this.toString("hex", 0, ut).replace(/(.{2})/g, "$1 ").trim(), this.length > ut && (j += " ... "), "<Buffer " + j + ">";
                }, U && (D.prototype[U] = D.prototype.inspect), D.prototype.compare = function(j, ut, gt, $t, Ht) {
                  if (L(j, Uint8Array) && (j = D.from(j, j.offset, j.byteLength)), !D.isBuffer(j)) throw new TypeError('The "target" argument must be one of type Buffer or Uint8Array. Received type ' + typeof j);
                  if (ut === void 0 && (ut = 0), gt === void 0 && (gt = j ? j.length : 0), $t === void 0 && ($t = 0), Ht === void 0 && (Ht = this.length), ut < 0 || gt > j.length || $t < 0 || Ht > this.length) throw new RangeError("out of range index");
                  if ($t >= Ht && ut >= gt) return 0;
                  if ($t >= Ht) return -1;
                  if (ut >= gt) return 1;
                  if (this === j) return 0;
                  let wt = (Ht >>>= 0) - ($t >>>= 0), Jt = (gt >>>= 0) - (ut >>>= 0);
                  const Ee = Math.min(wt, Jt), cr = this.slice($t, Ht), Lr = j.slice(ut, gt);
                  for (let on = 0; on < Ee; ++on) if (cr[on] !== Lr[on]) {
                    wt = cr[on], Jt = Lr[on];
                    break;
                  }
                  return wt < Jt ? -1 : Jt < wt ? 1 : 0;
                }, D.prototype.includes = function(j, ut, gt) {
                  return this.indexOf(j, ut, gt) !== -1;
                }, D.prototype.indexOf = function(j, ut, gt) {
                  return ot(this, j, ut, gt, true);
                }, D.prototype.lastIndexOf = function(j, ut, gt) {
                  return ot(this, j, ut, gt, false);
                }, D.prototype.write = function(j, ut, gt, $t) {
                  if (ut === void 0) $t = "utf8", gt = this.length, ut = 0;
                  else if (gt === void 0 && typeof ut == "string") $t = ut, gt = this.length, ut = 0;
                  else {
                    if (!isFinite(ut)) throw new Error("Buffer.write(string, encoding, offset[, length]) is no longer supported");
                    ut >>>= 0, isFinite(gt) ? (gt >>>= 0, $t === void 0 && ($t = "utf8")) : ($t = gt, gt = void 0);
                  }
                  const Ht = this.length - ut;
                  if ((gt === void 0 || gt > Ht) && (gt = Ht), j.length > 0 && (gt < 0 || ut < 0) || ut > this.length) throw new RangeError("Attempt to write outside buffer bounds");
                  $t || ($t = "utf8");
                  let wt = false;
                  for (; ; ) switch ($t) {
                    case "hex":
                      return I(this, j, ut, gt);
                    case "utf8":
                    case "utf-8":
                      return nt(this, j, ut, gt);
                    case "ascii":
                    case "latin1":
                    case "binary":
                      return ft(this, j, ut, gt);
                    case "base64":
                      return dt(this, j, ut, gt);
                    case "ucs2":
                    case "ucs-2":
                    case "utf16le":
                    case "utf-16le":
                      return Lt(this, j, ut, gt);
                    default:
                      if (wt) throw new TypeError("Unknown encoding: " + $t);
                      $t = ("" + $t).toLowerCase(), wt = true;
                  }
                }, D.prototype.toJSON = function() {
                  return { type: "Buffer", data: Array.prototype.slice.call(this._arr || this, 0) };
                };
                const mt = 4096;
                function Ot(j, ut, gt) {
                  let $t = "";
                  gt = Math.min(j.length, gt);
                  for (let Ht = ut; Ht < gt; ++Ht) $t += String.fromCharCode(127 & j[Ht]);
                  return $t;
                }
                function bt(j, ut, gt) {
                  let $t = "";
                  gt = Math.min(j.length, gt);
                  for (let Ht = ut; Ht < gt; ++Ht) $t += String.fromCharCode(j[Ht]);
                  return $t;
                }
                function xt(j, ut, gt) {
                  const $t = j.length;
                  (!ut || ut < 0) && (ut = 0), (!gt || gt < 0 || gt > $t) && (gt = $t);
                  let Ht = "";
                  for (let wt = ut; wt < gt; ++wt) Ht += St[j[wt]];
                  return Ht;
                }
                function Ct(j, ut, gt) {
                  const $t = j.slice(ut, gt);
                  let Ht = "";
                  for (let wt = 0; wt < $t.length - 1; wt += 2) Ht += String.fromCharCode($t[wt] + 256 * $t[wt + 1]);
                  return Ht;
                }
                function Tt(j, ut, gt) {
                  if (j % 1 != 0 || j < 0) throw new RangeError("offset is not uint");
                  if (j + ut > gt) throw new RangeError("Trying to access beyond buffer length");
                }
                function Bt(j, ut, gt, $t, Ht, wt) {
                  if (!D.isBuffer(j)) throw new TypeError('"buffer" argument must be a Buffer instance');
                  if (ut > Ht || ut < wt) throw new RangeError('"value" argument is out of bounds');
                  if (gt + $t > j.length) throw new RangeError("Index out of range");
                }
                function At(j, ut, gt, $t, Ht) {
                  z(ut, $t, Ht, j, gt, 7);
                  let wt = Number(ut & BigInt(4294967295));
                  j[gt++] = wt, wt >>= 8, j[gt++] = wt, wt >>= 8, j[gt++] = wt, wt >>= 8, j[gt++] = wt;
                  let Jt = Number(ut >> BigInt(32) & BigInt(4294967295));
                  return j[gt++] = Jt, Jt >>= 8, j[gt++] = Jt, Jt >>= 8, j[gt++] = Jt, Jt >>= 8, j[gt++] = Jt, gt;
                }
                function Ut(j, ut, gt, $t, Ht) {
                  z(ut, $t, Ht, j, gt, 7);
                  let wt = Number(ut & BigInt(4294967295));
                  j[gt + 7] = wt, wt >>= 8, j[gt + 6] = wt, wt >>= 8, j[gt + 5] = wt, wt >>= 8, j[gt + 4] = wt;
                  let Jt = Number(ut >> BigInt(32) & BigInt(4294967295));
                  return j[gt + 3] = Jt, Jt >>= 8, j[gt + 2] = Jt, Jt >>= 8, j[gt + 1] = Jt, Jt >>= 8, j[gt] = Jt, gt + 8;
                }
                function Vt(j, ut, gt, $t, Ht, wt) {
                  if (gt + $t > j.length) throw new RangeError("Index out of range");
                  if (gt < 0) throw new RangeError("Index out of range");
                }
                function oe(j, ut, gt, $t, Ht) {
                  return ut = +ut, gt >>>= 0, Ht || Vt(j, 0, gt, 4), v.write(j, ut, gt, $t, 23, 4), gt + 4;
                }
                function te(j, ut, gt, $t, Ht) {
                  return ut = +ut, gt >>>= 0, Ht || Vt(j, 0, gt, 8), v.write(j, ut, gt, $t, 52, 8), gt + 8;
                }
                D.prototype.slice = function(j, ut) {
                  const gt = this.length;
                  (j = ~~j) < 0 ? (j += gt) < 0 && (j = 0) : j > gt && (j = gt), (ut = ut === void 0 ? gt : ~~ut) < 0 ? (ut += gt) < 0 && (ut = 0) : ut > gt && (ut = gt), ut < j && (ut = j);
                  const $t = this.subarray(j, ut);
                  return Object.setPrototypeOf($t, D.prototype), $t;
                }, D.prototype.readUintLE = D.prototype.readUIntLE = function(j, ut, gt) {
                  j >>>= 0, ut >>>= 0, gt || Tt(j, ut, this.length);
                  let $t = this[j], Ht = 1, wt = 0;
                  for (; ++wt < ut && (Ht *= 256); ) $t += this[j + wt] * Ht;
                  return $t;
                }, D.prototype.readUintBE = D.prototype.readUIntBE = function(j, ut, gt) {
                  j >>>= 0, ut >>>= 0, gt || Tt(j, ut, this.length);
                  let $t = this[j + --ut], Ht = 1;
                  for (; ut > 0 && (Ht *= 256); ) $t += this[j + --ut] * Ht;
                  return $t;
                }, D.prototype.readUint8 = D.prototype.readUInt8 = function(j, ut) {
                  return j >>>= 0, ut || Tt(j, 1, this.length), this[j];
                }, D.prototype.readUint16LE = D.prototype.readUInt16LE = function(j, ut) {
                  return j >>>= 0, ut || Tt(j, 2, this.length), this[j] | this[j + 1] << 8;
                }, D.prototype.readUint16BE = D.prototype.readUInt16BE = function(j, ut) {
                  return j >>>= 0, ut || Tt(j, 2, this.length), this[j] << 8 | this[j + 1];
                }, D.prototype.readUint32LE = D.prototype.readUInt32LE = function(j, ut) {
                  return j >>>= 0, ut || Tt(j, 4, this.length), (this[j] | this[j + 1] << 8 | this[j + 2] << 16) + 16777216 * this[j + 3];
                }, D.prototype.readUint32BE = D.prototype.readUInt32BE = function(j, ut) {
                  return j >>>= 0, ut || Tt(j, 4, this.length), 16777216 * this[j] + (this[j + 1] << 16 | this[j + 2] << 8 | this[j + 3]);
                }, D.prototype.readBigUInt64LE = kt(function(j) {
                  J(j >>>= 0, "offset");
                  const ut = this[j], gt = this[j + 7];
                  ut !== void 0 && gt !== void 0 || tt(j, this.length - 8);
                  const $t = ut + 256 * this[++j] + 65536 * this[++j] + this[++j] * 2 ** 24, Ht = this[++j] + 256 * this[++j] + 65536 * this[++j] + gt * 2 ** 24;
                  return BigInt($t) + (BigInt(Ht) << BigInt(32));
                }), D.prototype.readBigUInt64BE = kt(function(j) {
                  J(j >>>= 0, "offset");
                  const ut = this[j], gt = this[j + 7];
                  ut !== void 0 && gt !== void 0 || tt(j, this.length - 8);
                  const $t = ut * 2 ** 24 + 65536 * this[++j] + 256 * this[++j] + this[++j], Ht = this[++j] * 2 ** 24 + 65536 * this[++j] + 256 * this[++j] + gt;
                  return (BigInt($t) << BigInt(32)) + BigInt(Ht);
                }), D.prototype.readIntLE = function(j, ut, gt) {
                  j >>>= 0, ut >>>= 0, gt || Tt(j, ut, this.length);
                  let $t = this[j], Ht = 1, wt = 0;
                  for (; ++wt < ut && (Ht *= 256); ) $t += this[j + wt] * Ht;
                  return Ht *= 128, $t >= Ht && ($t -= Math.pow(2, 8 * ut)), $t;
                }, D.prototype.readIntBE = function(j, ut, gt) {
                  j >>>= 0, ut >>>= 0, gt || Tt(j, ut, this.length);
                  let $t = ut, Ht = 1, wt = this[j + --$t];
                  for (; $t > 0 && (Ht *= 256); ) wt += this[j + --$t] * Ht;
                  return Ht *= 128, wt >= Ht && (wt -= Math.pow(2, 8 * ut)), wt;
                }, D.prototype.readInt8 = function(j, ut) {
                  return j >>>= 0, ut || Tt(j, 1, this.length), 128 & this[j] ? -1 * (255 - this[j] + 1) : this[j];
                }, D.prototype.readInt16LE = function(j, ut) {
                  j >>>= 0, ut || Tt(j, 2, this.length);
                  const gt = this[j] | this[j + 1] << 8;
                  return 32768 & gt ? 4294901760 | gt : gt;
                }, D.prototype.readInt16BE = function(j, ut) {
                  j >>>= 0, ut || Tt(j, 2, this.length);
                  const gt = this[j + 1] | this[j] << 8;
                  return 32768 & gt ? 4294901760 | gt : gt;
                }, D.prototype.readInt32LE = function(j, ut) {
                  return j >>>= 0, ut || Tt(j, 4, this.length), this[j] | this[j + 1] << 8 | this[j + 2] << 16 | this[j + 3] << 24;
                }, D.prototype.readInt32BE = function(j, ut) {
                  return j >>>= 0, ut || Tt(j, 4, this.length), this[j] << 24 | this[j + 1] << 16 | this[j + 2] << 8 | this[j + 3];
                }, D.prototype.readBigInt64LE = kt(function(j) {
                  J(j >>>= 0, "offset");
                  const ut = this[j], gt = this[j + 7];
                  ut !== void 0 && gt !== void 0 || tt(j, this.length - 8);
                  const $t = this[j + 4] + 256 * this[j + 5] + 65536 * this[j + 6] + (gt << 24);
                  return (BigInt($t) << BigInt(32)) + BigInt(ut + 256 * this[++j] + 65536 * this[++j] + this[++j] * 16777216);
                }), D.prototype.readBigInt64BE = kt(function(j) {
                  J(j >>>= 0, "offset");
                  const ut = this[j], gt = this[j + 7];
                  ut !== void 0 && gt !== void 0 || tt(j, this.length - 8);
                  const $t = (ut << 24) + 65536 * this[++j] + 256 * this[++j] + this[++j];
                  return (BigInt($t) << BigInt(32)) + BigInt(this[++j] * 16777216 + 65536 * this[++j] + 256 * this[++j] + gt);
                }), D.prototype.readFloatLE = function(j, ut) {
                  return j >>>= 0, ut || Tt(j, 4, this.length), v.read(this, j, true, 23, 4);
                }, D.prototype.readFloatBE = function(j, ut) {
                  return j >>>= 0, ut || Tt(j, 4, this.length), v.read(this, j, false, 23, 4);
                }, D.prototype.readDoubleLE = function(j, ut) {
                  return j >>>= 0, ut || Tt(j, 8, this.length), v.read(this, j, true, 52, 8);
                }, D.prototype.readDoubleBE = function(j, ut) {
                  return j >>>= 0, ut || Tt(j, 8, this.length), v.read(this, j, false, 52, 8);
                }, D.prototype.writeUintLE = D.prototype.writeUIntLE = function(j, ut, gt, $t) {
                  j = +j, ut >>>= 0, gt >>>= 0, $t || Bt(this, j, ut, gt, Math.pow(2, 8 * gt) - 1, 0);
                  let Ht = 1, wt = 0;
                  for (this[ut] = 255 & j; ++wt < gt && (Ht *= 256); ) this[ut + wt] = j / Ht & 255;
                  return ut + gt;
                }, D.prototype.writeUintBE = D.prototype.writeUIntBE = function(j, ut, gt, $t) {
                  j = +j, ut >>>= 0, gt >>>= 0, $t || Bt(this, j, ut, gt, Math.pow(2, 8 * gt) - 1, 0);
                  let Ht = gt - 1, wt = 1;
                  for (this[ut + Ht] = 255 & j; --Ht >= 0 && (wt *= 256); ) this[ut + Ht] = j / wt & 255;
                  return ut + gt;
                }, D.prototype.writeUint8 = D.prototype.writeUInt8 = function(j, ut, gt) {
                  return j = +j, ut >>>= 0, gt || Bt(this, j, ut, 1, 255, 0), this[ut] = 255 & j, ut + 1;
                }, D.prototype.writeUint16LE = D.prototype.writeUInt16LE = function(j, ut, gt) {
                  return j = +j, ut >>>= 0, gt || Bt(this, j, ut, 2, 65535, 0), this[ut] = 255 & j, this[ut + 1] = j >>> 8, ut + 2;
                }, D.prototype.writeUint16BE = D.prototype.writeUInt16BE = function(j, ut, gt) {
                  return j = +j, ut >>>= 0, gt || Bt(this, j, ut, 2, 65535, 0), this[ut] = j >>> 8, this[ut + 1] = 255 & j, ut + 2;
                }, D.prototype.writeUint32LE = D.prototype.writeUInt32LE = function(j, ut, gt) {
                  return j = +j, ut >>>= 0, gt || Bt(this, j, ut, 4, 4294967295, 0), this[ut + 3] = j >>> 24, this[ut + 2] = j >>> 16, this[ut + 1] = j >>> 8, this[ut] = 255 & j, ut + 4;
                }, D.prototype.writeUint32BE = D.prototype.writeUInt32BE = function(j, ut, gt) {
                  return j = +j, ut >>>= 0, gt || Bt(this, j, ut, 4, 4294967295, 0), this[ut] = j >>> 24, this[ut + 1] = j >>> 16, this[ut + 2] = j >>> 8, this[ut + 3] = 255 & j, ut + 4;
                }, D.prototype.writeBigUInt64LE = kt(function(j, ut = 0) {
                  return At(this, j, ut, BigInt(0), BigInt("0xffffffffffffffff"));
                }), D.prototype.writeBigUInt64BE = kt(function(j, ut = 0) {
                  return Ut(this, j, ut, BigInt(0), BigInt("0xffffffffffffffff"));
                }), D.prototype.writeIntLE = function(j, ut, gt, $t) {
                  if (j = +j, ut >>>= 0, !$t) {
                    const Ee = Math.pow(2, 8 * gt - 1);
                    Bt(this, j, ut, gt, Ee - 1, -Ee);
                  }
                  let Ht = 0, wt = 1, Jt = 0;
                  for (this[ut] = 255 & j; ++Ht < gt && (wt *= 256); ) j < 0 && Jt === 0 && this[ut + Ht - 1] !== 0 && (Jt = 1), this[ut + Ht] = (j / wt | 0) - Jt & 255;
                  return ut + gt;
                }, D.prototype.writeIntBE = function(j, ut, gt, $t) {
                  if (j = +j, ut >>>= 0, !$t) {
                    const Ee = Math.pow(2, 8 * gt - 1);
                    Bt(this, j, ut, gt, Ee - 1, -Ee);
                  }
                  let Ht = gt - 1, wt = 1, Jt = 0;
                  for (this[ut + Ht] = 255 & j; --Ht >= 0 && (wt *= 256); ) j < 0 && Jt === 0 && this[ut + Ht + 1] !== 0 && (Jt = 1), this[ut + Ht] = (j / wt | 0) - Jt & 255;
                  return ut + gt;
                }, D.prototype.writeInt8 = function(j, ut, gt) {
                  return j = +j, ut >>>= 0, gt || Bt(this, j, ut, 1, 127, -128), j < 0 && (j = 255 + j + 1), this[ut] = 255 & j, ut + 1;
                }, D.prototype.writeInt16LE = function(j, ut, gt) {
                  return j = +j, ut >>>= 0, gt || Bt(this, j, ut, 2, 32767, -32768), this[ut] = 255 & j, this[ut + 1] = j >>> 8, ut + 2;
                }, D.prototype.writeInt16BE = function(j, ut, gt) {
                  return j = +j, ut >>>= 0, gt || Bt(this, j, ut, 2, 32767, -32768), this[ut] = j >>> 8, this[ut + 1] = 255 & j, ut + 2;
                }, D.prototype.writeInt32LE = function(j, ut, gt) {
                  return j = +j, ut >>>= 0, gt || Bt(this, j, ut, 4, 2147483647, -2147483648), this[ut] = 255 & j, this[ut + 1] = j >>> 8, this[ut + 2] = j >>> 16, this[ut + 3] = j >>> 24, ut + 4;
                }, D.prototype.writeInt32BE = function(j, ut, gt) {
                  return j = +j, ut >>>= 0, gt || Bt(this, j, ut, 4, 2147483647, -2147483648), j < 0 && (j = 4294967295 + j + 1), this[ut] = j >>> 24, this[ut + 1] = j >>> 16, this[ut + 2] = j >>> 8, this[ut + 3] = 255 & j, ut + 4;
                }, D.prototype.writeBigInt64LE = kt(function(j, ut = 0) {
                  return At(this, j, ut, -BigInt("0x8000000000000000"), BigInt("0x7fffffffffffffff"));
                }), D.prototype.writeBigInt64BE = kt(function(j, ut = 0) {
                  return Ut(this, j, ut, -BigInt("0x8000000000000000"), BigInt("0x7fffffffffffffff"));
                }), D.prototype.writeFloatLE = function(j, ut, gt) {
                  return oe(this, j, ut, true, gt);
                }, D.prototype.writeFloatBE = function(j, ut, gt) {
                  return oe(this, j, ut, false, gt);
                }, D.prototype.writeDoubleLE = function(j, ut, gt) {
                  return te(this, j, ut, true, gt);
                }, D.prototype.writeDoubleBE = function(j, ut, gt) {
                  return te(this, j, ut, false, gt);
                }, D.prototype.copy = function(j, ut, gt, $t) {
                  if (!D.isBuffer(j)) throw new TypeError("argument should be a Buffer");
                  if (gt || (gt = 0), $t || $t === 0 || ($t = this.length), ut >= j.length && (ut = j.length), ut || (ut = 0), $t > 0 && $t < gt && ($t = gt), $t === gt || j.length === 0 || this.length === 0) return 0;
                  if (ut < 0) throw new RangeError("targetStart out of bounds");
                  if (gt < 0 || gt >= this.length) throw new RangeError("Index out of range");
                  if ($t < 0) throw new RangeError("sourceEnd out of bounds");
                  $t > this.length && ($t = this.length), j.length - ut < $t - gt && ($t = j.length - ut + gt);
                  const Ht = $t - gt;
                  return this === j && typeof Uint8Array.prototype.copyWithin == "function" ? this.copyWithin(ut, gt, $t) : Uint8Array.prototype.set.call(j, this.subarray(gt, $t), ut), Ht;
                }, D.prototype.fill = function(j, ut, gt, $t) {
                  if (typeof j == "string") {
                    if (typeof ut == "string" ? ($t = ut, ut = 0, gt = this.length) : typeof gt == "string" && ($t = gt, gt = this.length), $t !== void 0 && typeof $t != "string") throw new TypeError("encoding must be a string");
                    if (typeof $t == "string" && !D.isEncoding($t)) throw new TypeError("Unknown encoding: " + $t);
                    if (j.length === 1) {
                      const wt = j.charCodeAt(0);
                      ($t === "utf8" && wt < 128 || $t === "latin1") && (j = wt);
                    }
                  } else typeof j == "number" ? j &= 255 : typeof j == "boolean" && (j = Number(j));
                  if (ut < 0 || this.length < ut || this.length < gt) throw new RangeError("Out of range index");
                  if (gt <= ut) return this;
                  let Ht;
                  if (ut >>>= 0, gt = gt === void 0 ? this.length : gt >>> 0, j || (j = 0), typeof j == "number") for (Ht = ut; Ht < gt; ++Ht) this[Ht] = j;
                  else {
                    const wt = D.isBuffer(j) ? j : D.from(j, $t), Jt = wt.length;
                    if (Jt === 0) throw new TypeError('The value "' + j + '" is invalid for argument "value"');
                    for (Ht = 0; Ht < gt - ut; ++Ht) this[Ht + ut] = wt[Ht % Jt];
                  }
                  return this;
                };
                const yt = {};
                function Mt(j, ut, gt) {
                  yt[j] = class extends gt {
                    constructor() {
                      super(), Object.defineProperty(this, "message", { value: ut.apply(this, arguments), writable: true, configurable: true }), this.name = `${this.name} [${j}]`, this.stack, delete this.name;
                    }
                    get code() {
                      return j;
                    }
                    set code($t) {
                      Object.defineProperty(this, "code", { configurable: true, enumerable: true, value: $t, writable: true });
                    }
                    toString() {
                      return `${this.name} [${j}]: ${this.message}`;
                    }
                  };
                }
                function O(j) {
                  let ut = "", gt = j.length;
                  const $t = j[0] === "-" ? 1 : 0;
                  for (; gt >= $t + 4; gt -= 3) ut = `_${j.slice(gt - 3, gt)}${ut}`;
                  return `${j.slice(0, gt)}${ut}`;
                }
                function z(j, ut, gt, $t, Ht, wt) {
                  if (j > gt || j < ut) {
                    const Jt = typeof ut == "bigint" ? "n" : "";
                    let Ee;
                    throw Ee = ut === 0 || ut === BigInt(0) ? `>= 0${Jt} and < 2${Jt} ** ${8 * (wt + 1)}${Jt}` : `>= -(2${Jt} ** ${8 * (wt + 1) - 1}${Jt}) and < 2 ** ${8 * (wt + 1) - 1}${Jt}`, new yt.ERR_OUT_OF_RANGE("value", Ee, j);
                  }
                  (function(Jt, Ee, cr) {
                    J(Ee, "offset"), Jt[Ee] !== void 0 && Jt[Ee + cr] !== void 0 || tt(Ee, Jt.length - (cr + 1));
                  })($t, Ht, wt);
                }
                function J(j, ut) {
                  if (typeof j != "number") throw new yt.ERR_INVALID_ARG_TYPE(ut, "number", j);
                }
                function tt(j, ut, gt) {
                  throw Math.floor(j) !== j ? (J(j, gt), new yt.ERR_OUT_OF_RANGE("offset", "an integer", j)) : ut < 0 ? new yt.ERR_BUFFER_OUT_OF_BOUNDS() : new yt.ERR_OUT_OF_RANGE("offset", `>= 0 and <= ${ut}`, j);
                }
                Mt("ERR_BUFFER_OUT_OF_BOUNDS", function(j) {
                  return j ? `${j} is outside of buffer bounds` : "Attempt to access memory outside buffer bounds";
                }, RangeError), Mt("ERR_INVALID_ARG_TYPE", function(j, ut) {
                  return `The "${j}" argument must be of type number. Received type ${typeof ut}`;
                }, TypeError), Mt("ERR_OUT_OF_RANGE", function(j, ut, gt) {
                  let $t = `The value of "${j}" is out of range.`, Ht = gt;
                  return Number.isInteger(gt) && Math.abs(gt) > 4294967296 ? Ht = O(String(gt)) : typeof gt == "bigint" && (Ht = String(gt), (gt > BigInt(2) ** BigInt(32) || gt < -(BigInt(2) ** BigInt(32))) && (Ht = O(Ht)), Ht += "n"), $t += ` It must be ${ut}. Received ${Ht}`, $t;
                }, RangeError);
                const H = /[^+/0-9A-Za-z-_]/g;
                function K(j, ut) {
                  let gt;
                  ut = ut || 1 / 0;
                  const $t = j.length;
                  let Ht = null;
                  const wt = [];
                  for (let Jt = 0; Jt < $t; ++Jt) {
                    if (gt = j.charCodeAt(Jt), gt > 55295 && gt < 57344) {
                      if (!Ht) {
                        if (gt > 56319) {
                          (ut -= 3) > -1 && wt.push(239, 191, 189);
                          continue;
                        }
                        if (Jt + 1 === $t) {
                          (ut -= 3) > -1 && wt.push(239, 191, 189);
                          continue;
                        }
                        Ht = gt;
                        continue;
                      }
                      if (gt < 56320) {
                        (ut -= 3) > -1 && wt.push(239, 191, 189), Ht = gt;
                        continue;
                      }
                      gt = 65536 + (Ht - 55296 << 10 | gt - 56320);
                    } else Ht && (ut -= 3) > -1 && wt.push(239, 191, 189);
                    if (Ht = null, gt < 128) {
                      if ((ut -= 1) < 0) break;
                      wt.push(gt);
                    } else if (gt < 2048) {
                      if ((ut -= 2) < 0) break;
                      wt.push(gt >> 6 | 192, 63 & gt | 128);
                    } else if (gt < 65536) {
                      if ((ut -= 3) < 0) break;
                      wt.push(gt >> 12 | 224, gt >> 6 & 63 | 128, 63 & gt | 128);
                    } else {
                      if (!(gt < 1114112)) throw new Error("Invalid code point");
                      if ((ut -= 4) < 0) break;
                      wt.push(gt >> 18 | 240, gt >> 12 & 63 | 128, gt >> 6 & 63 | 128, 63 & gt | 128);
                    }
                  }
                  return wt;
                }
                function q(j) {
                  return F.toByteArray(function(ut) {
                    if ((ut = (ut = ut.split("=")[0]).trim().replace(H, "")).length < 2) return "";
                    for (; ut.length % 4 != 0; ) ut += "=";
                    return ut;
                  }(j));
                }
                function _(j, ut, gt, $t) {
                  let Ht;
                  for (Ht = 0; Ht < $t && !(Ht + gt >= ut.length || Ht >= j.length); ++Ht) ut[Ht + gt] = j[Ht];
                  return Ht;
                }
                function L(j, ut) {
                  return j instanceof ut || j != null && j.constructor != null && j.constructor.name != null && j.constructor.name === ut.name;
                }
                function et(j) {
                  return j != j;
                }
                const St = function() {
                  const j = "0123456789abcdef", ut = new Array(256);
                  for (let gt = 0; gt < 16; ++gt) {
                    const $t = 16 * gt;
                    for (let Ht = 0; Ht < 16; ++Ht) ut[$t + Ht] = j[gt] + j[Ht];
                  }
                  return ut;
                }();
                function kt(j) {
                  return typeof BigInt > "u" ? ct : j;
                }
                function ct() {
                  throw new Error("BigInt not supported");
                }
              }, 251: (P, k) => {
                k.read = function(R, F, v, U, M) {
                  var Z, D, V = 8 * M - U - 1, S = (1 << V) - 1, x = S >> 1, B = -7, W = v ? M - 1 : 0, lt = v ? -1 : 1, pt = R[F + W];
                  for (W += lt, Z = pt & (1 << -B) - 1, pt >>= -B, B += V; B > 0; Z = 256 * Z + R[F + W], W += lt, B -= 8) ;
                  for (D = Z & (1 << -B) - 1, Z >>= -B, B += U; B > 0; D = 256 * D + R[F + W], W += lt, B -= 8) ;
                  if (Z === 0) Z = 1 - x;
                  else {
                    if (Z === S) return D ? NaN : 1 / 0 * (pt ? -1 : 1);
                    D += Math.pow(2, U), Z -= x;
                  }
                  return (pt ? -1 : 1) * D * Math.pow(2, Z - U);
                }, k.write = function(R, F, v, U, M, Z) {
                  var D, V, S, x = 8 * Z - M - 1, B = (1 << x) - 1, W = B >> 1, lt = M === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0, pt = U ? 0 : Z - 1, at = U ? 1 : -1, rt = F < 0 || F === 0 && 1 / F < 0 ? 1 : 0;
                  for (F = Math.abs(F), isNaN(F) || F === 1 / 0 ? (V = isNaN(F) ? 1 : 0, D = B) : (D = Math.floor(Math.log(F) / Math.LN2), F * (S = Math.pow(2, -D)) < 1 && (D--, S *= 2), (F += D + W >= 1 ? lt / S : lt * Math.pow(2, 1 - W)) * S >= 2 && (D++, S /= 2), D + W >= B ? (V = 0, D = B) : D + W >= 1 ? (V = (F * S - 1) * Math.pow(2, M), D += W) : (V = F * Math.pow(2, W - 1) * Math.pow(2, M), D = 0)); M >= 8; R[v + pt] = 255 & V, pt += at, V /= 256, M -= 8) ;
                  for (D = D << M | V, x += M; x > 0; R[v + pt] = 255 & D, pt += at, D /= 256, x -= 8) ;
                  R[v + pt - at] |= 128 * rt;
                };
              } }, w = {};
              function T(P) {
                var k = w[P];
                if (k !== void 0) return k.exports;
                var R = w[P] = { exports: {} };
                return c[P](R, R.exports, T), R.exports;
              }
              return T.d = (P, k) => {
                for (var R in k) T.o(k, R) && !T.o(P, R) && Object.defineProperty(P, R, { enumerable: true, get: k[R] });
              }, T.g = function() {
                if (typeof globalThis == "object") return globalThis;
                try {
                  return this || new Function("return this")();
                } catch {
                  if (typeof window == "object") return window;
                }
              }(), T.o = (P, k) => Object.prototype.hasOwnProperty.call(P, k), T.r = (P) => {
                typeof Symbol < "u" && Symbol.toStringTag && Object.defineProperty(P, Symbol.toStringTag, { value: "Module" }), Object.defineProperty(P, "__esModule", { value: true });
              }, T(281);
            })(), p.exports = h();
          }, 3918: (p, g, b) => {
            var h = b(5606);
            function m(nt, ft) {
              var dt = Object.keys(nt);
              if (Object.getOwnPropertySymbols) {
                var Lt = Object.getOwnPropertySymbols(nt);
                ft && (Lt = Lt.filter(function($) {
                  return Object.getOwnPropertyDescriptor(nt, $).enumerable;
                })), dt.push.apply(dt, Lt);
              }
              return dt;
            }
            function c(nt) {
              for (var ft = 1; ft < arguments.length; ft++) {
                var dt = arguments[ft] != null ? arguments[ft] : {};
                ft % 2 ? m(Object(dt), true).forEach(function(Lt) {
                  w(nt, Lt, dt[Lt]);
                }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(nt, Object.getOwnPropertyDescriptors(dt)) : m(Object(dt)).forEach(function(Lt) {
                  Object.defineProperty(nt, Lt, Object.getOwnPropertyDescriptor(dt, Lt));
                });
              }
              return nt;
            }
            function w(nt, ft, dt) {
              return (ft = P(ft)) in nt ? Object.defineProperty(nt, ft, { value: dt, enumerable: true, configurable: true, writable: true }) : nt[ft] = dt, nt;
            }
            function T(nt, ft) {
              for (var dt = 0; dt < ft.length; dt++) {
                var Lt = ft[dt];
                Lt.enumerable = Lt.enumerable || false, Lt.configurable = true, "value" in Lt && (Lt.writable = true), Object.defineProperty(nt, P(Lt.key), Lt);
              }
            }
            function P(nt) {
              var ft = function(dt) {
                if (D(dt) !== "object" || dt === null) return dt;
                var Lt = dt[Symbol.toPrimitive];
                if (Lt !== void 0) {
                  var $ = Lt.call(dt, "string");
                  if (D($) !== "object") return $;
                  throw new TypeError("@@toPrimitive must return a primitive value.");
                }
                return String(dt);
              }(nt);
              return D(ft) === "symbol" ? ft : String(ft);
            }
            function k(nt, ft) {
              if (ft && (D(ft) === "object" || typeof ft == "function")) return ft;
              if (ft !== void 0) throw new TypeError("Derived constructors may only return object or undefined");
              return R(nt);
            }
            function R(nt) {
              if (nt === void 0) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
              return nt;
            }
            function F(nt) {
              var ft = typeof Map == "function" ? /* @__PURE__ */ new Map() : void 0;
              return F = function(dt) {
                if (dt === null || (Lt = dt, Function.toString.call(Lt).indexOf("[native code]") === -1)) return dt;
                var Lt;
                if (typeof dt != "function") throw new TypeError("Super expression must either be null or a function");
                if (ft !== void 0) {
                  if (ft.has(dt)) return ft.get(dt);
                  ft.set(dt, $);
                }
                function $() {
                  return v(dt, arguments, Z(this).constructor);
                }
                return $.prototype = Object.create(dt.prototype, { constructor: { value: $, enumerable: false, writable: true, configurable: true } }), M($, dt);
              }, F(nt);
            }
            function v(nt, ft, dt) {
              return v = U() ? Reflect.construct.bind() : function(Lt, $, it) {
                var mt = [null];
                mt.push.apply(mt, $);
                var Ot = new (Function.bind.apply(Lt, mt))();
                return it && M(Ot, it.prototype), Ot;
              }, v.apply(null, arguments);
            }
            function U() {
              if (typeof Reflect > "u" || !Reflect.construct || Reflect.construct.sham) return false;
              if (typeof Proxy == "function") return true;
              try {
                return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
                })), true;
              } catch {
                return false;
              }
            }
            function M(nt, ft) {
              return M = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function(dt, Lt) {
                return dt.__proto__ = Lt, dt;
              }, M(nt, ft);
            }
            function Z(nt) {
              return Z = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function(ft) {
                return ft.__proto__ || Object.getPrototypeOf(ft);
              }, Z(nt);
            }
            function D(nt) {
              return D = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(ft) {
                return typeof ft;
              } : function(ft) {
                return ft && typeof Symbol == "function" && ft.constructor === Symbol && ft !== Symbol.prototype ? "symbol" : typeof ft;
              }, D(nt);
            }
            var V = b(537).inspect, S = b(9597).codes.ERR_INVALID_ARG_TYPE;
            function x(nt, ft, dt) {
              return (dt === void 0 || dt > nt.length) && (dt = nt.length), nt.substring(dt - ft.length, dt) === ft;
            }
            var B = "", W = "", lt = "", pt = "", at = { deepStrictEqual: "Expected values to be strictly deep-equal:", strictEqual: "Expected values to be strictly equal:", strictEqualObject: 'Expected "actual" to be reference-equal to "expected":', deepEqual: "Expected values to be loosely deep-equal:", equal: "Expected values to be loosely equal:", notDeepStrictEqual: 'Expected "actual" not to be strictly deep-equal to:', notStrictEqual: 'Expected "actual" to be strictly unequal to:', notStrictEqualObject: 'Expected "actual" not to be reference-equal to "expected":', notDeepEqual: 'Expected "actual" not to be loosely deep-equal to:', notEqual: 'Expected "actual" to be loosely unequal to:', notIdentical: "Values identical but not reference-equal:" };
            function rt(nt) {
              var ft = Object.keys(nt), dt = Object.create(Object.getPrototypeOf(nt));
              return ft.forEach(function(Lt) {
                dt[Lt] = nt[Lt];
              }), Object.defineProperty(dt, "message", { value: nt.message }), dt;
            }
            function ot(nt) {
              return V(nt, { compact: false, customInspect: false, depth: 1e3, maxArrayLength: 1 / 0, showHidden: false, breakLength: 1 / 0, showProxy: false, sorted: true, getters: true });
            }
            function X(nt, ft, dt) {
              var Lt = "", $ = "", it = 0, mt = "", Ot = false, bt = ot(nt), xt = bt.split(`
`), Ct = ot(ft).split(`
`), Tt = 0, Bt = "";
              if (dt === "strictEqual" && D(nt) === "object" && D(ft) === "object" && nt !== null && ft !== null && (dt = "strictEqualObject"), xt.length === 1 && Ct.length === 1 && xt[0] !== Ct[0]) {
                var At = xt[0].length + Ct[0].length;
                if (At <= 10) {
                  if (!(D(nt) === "object" && nt !== null || D(ft) === "object" && ft !== null || nt === 0 && ft === 0)) return "".concat(at[dt], `

`) + "".concat(xt[0], " !== ").concat(Ct[0], `
`);
                } else if (dt !== "strictEqualObject" && At < (h.stderr && h.stderr.isTTY ? h.stderr.columns : 80)) {
                  for (; xt[0][Tt] === Ct[0][Tt]; ) Tt++;
                  Tt > 2 && (Bt = `
  `.concat(function(K, q) {
                    if (q = Math.floor(q), K.length == 0 || q == 0) return "";
                    var _ = K.length * q;
                    for (q = Math.floor(Math.log(q) / Math.log(2)); q; ) K += K, q--;
                    return K + K.substring(0, _ - K.length);
                  }(" ", Tt), "^"), Tt = 0);
                }
              }
              for (var Ut = xt[xt.length - 1], Vt = Ct[Ct.length - 1]; Ut === Vt && (Tt++ < 2 ? mt = `
  `.concat(Ut).concat(mt) : Lt = Ut, xt.pop(), Ct.pop(), xt.length !== 0 && Ct.length !== 0); ) Ut = xt[xt.length - 1], Vt = Ct[Ct.length - 1];
              var oe = Math.max(xt.length, Ct.length);
              if (oe === 0) {
                var te = bt.split(`
`);
                if (te.length > 30) for (te[26] = "".concat(B, "...").concat(pt); te.length > 27; ) te.pop();
                return "".concat(at.notIdentical, `

`).concat(te.join(`
`), `
`);
              }
              Tt > 3 && (mt = `
`.concat(B, "...").concat(pt).concat(mt), Ot = true), Lt !== "" && (mt = `
  `.concat(Lt).concat(mt), Lt = "");
              var yt = 0, Mt = at[dt] + `
`.concat(W, "+ actual").concat(pt, " ").concat(lt, "- expected").concat(pt), O = " ".concat(B, "...").concat(pt, " Lines skipped");
              for (Tt = 0; Tt < oe; Tt++) {
                var z = Tt - it;
                if (xt.length < Tt + 1) z > 1 && Tt > 2 && (z > 4 ? ($ += `
`.concat(B, "...").concat(pt), Ot = true) : z > 3 && ($ += `
  `.concat(Ct[Tt - 2]), yt++), $ += `
  `.concat(Ct[Tt - 1]), yt++), it = Tt, Lt += `
`.concat(lt, "-").concat(pt, " ").concat(Ct[Tt]), yt++;
                else if (Ct.length < Tt + 1) z > 1 && Tt > 2 && (z > 4 ? ($ += `
`.concat(B, "...").concat(pt), Ot = true) : z > 3 && ($ += `
  `.concat(xt[Tt - 2]), yt++), $ += `
  `.concat(xt[Tt - 1]), yt++), it = Tt, $ += `
`.concat(W, "+").concat(pt, " ").concat(xt[Tt]), yt++;
                else {
                  var J = Ct[Tt], tt = xt[Tt], H = tt !== J && (!x(tt, ",") || tt.slice(0, -1) !== J);
                  H && x(J, ",") && J.slice(0, -1) === tt && (H = false, tt += ","), H ? (z > 1 && Tt > 2 && (z > 4 ? ($ += `
`.concat(B, "...").concat(pt), Ot = true) : z > 3 && ($ += `
  `.concat(xt[Tt - 2]), yt++), $ += `
  `.concat(xt[Tt - 1]), yt++), it = Tt, $ += `
`.concat(W, "+").concat(pt, " ").concat(tt), Lt += `
`.concat(lt, "-").concat(pt, " ").concat(J), yt += 2) : ($ += Lt, Lt = "", z !== 1 && Tt !== 0 || ($ += `
  `.concat(tt), yt++));
                }
                if (yt > 20 && Tt < oe - 2) return "".concat(Mt).concat(O, `
`).concat($, `
`).concat(B, "...").concat(pt).concat(Lt, `
`) + "".concat(B, "...").concat(pt);
              }
              return "".concat(Mt).concat(Ot ? O : "", `
`).concat($).concat(Lt).concat(mt).concat(Bt);
            }
            var I = function(nt, ft) {
              (function(bt, xt) {
                if (typeof xt != "function" && xt !== null) throw new TypeError("Super expression must either be null or a function");
                bt.prototype = Object.create(xt && xt.prototype, { constructor: { value: bt, writable: true, configurable: true } }), Object.defineProperty(bt, "prototype", { writable: false }), xt && M(bt, xt);
              })(Ot, nt);
              var dt, Lt, $, it, mt = (dt = Ot, Lt = U(), function() {
                var bt, xt = Z(dt);
                if (Lt) {
                  var Ct = Z(this).constructor;
                  bt = Reflect.construct(xt, arguments, Ct);
                } else bt = xt.apply(this, arguments);
                return k(this, bt);
              });
              function Ot(bt) {
                var xt;
                if (function(z, J) {
                  if (!(z instanceof J)) throw new TypeError("Cannot call a class as a function");
                }(this, Ot), D(bt) !== "object" || bt === null) throw new S("options", "Object", bt);
                var Ct = bt.message, Tt = bt.operator, Bt = bt.stackStartFn, At = bt.actual, Ut = bt.expected, Vt = Error.stackTraceLimit;
                if (Error.stackTraceLimit = 0, Ct != null) xt = mt.call(this, String(Ct));
                else if (h.stderr && h.stderr.isTTY && (h.stderr && h.stderr.getColorDepth && h.stderr.getColorDepth() !== 1 ? (B = "\x1B[34m", W = "\x1B[32m", pt = "\x1B[39m", lt = "\x1B[31m") : (B = "", W = "", pt = "", lt = "")), D(At) === "object" && At !== null && D(Ut) === "object" && Ut !== null && "stack" in At && At instanceof Error && "stack" in Ut && Ut instanceof Error && (At = rt(At), Ut = rt(Ut)), Tt === "deepStrictEqual" || Tt === "strictEqual") xt = mt.call(this, X(At, Ut, Tt));
                else if (Tt === "notDeepStrictEqual" || Tt === "notStrictEqual") {
                  var oe = at[Tt], te = ot(At).split(`
`);
                  if (Tt === "notStrictEqual" && D(At) === "object" && At !== null && (oe = at.notStrictEqualObject), te.length > 30) for (te[26] = "".concat(B, "...").concat(pt); te.length > 27; ) te.pop();
                  xt = te.length === 1 ? mt.call(this, "".concat(oe, " ").concat(te[0])) : mt.call(this, "".concat(oe, `

`).concat(te.join(`
`), `
`));
                } else {
                  var yt = ot(At), Mt = "", O = at[Tt];
                  Tt === "notDeepEqual" || Tt === "notEqual" ? (yt = "".concat(at[Tt], `

`).concat(yt)).length > 1024 && (yt = "".concat(yt.slice(0, 1021), "...")) : (Mt = "".concat(ot(Ut)), yt.length > 512 && (yt = "".concat(yt.slice(0, 509), "...")), Mt.length > 512 && (Mt = "".concat(Mt.slice(0, 509), "...")), Tt === "deepEqual" || Tt === "equal" ? yt = "".concat(O, `

`).concat(yt, `

should equal

`) : Mt = " ".concat(Tt, " ").concat(Mt)), xt = mt.call(this, "".concat(yt).concat(Mt));
                }
                return Error.stackTraceLimit = Vt, xt.generatedMessage = !Ct, Object.defineProperty(R(xt), "name", { value: "AssertionError [ERR_ASSERTION]", enumerable: false, writable: true, configurable: true }), xt.code = "ERR_ASSERTION", xt.actual = At, xt.expected = Ut, xt.operator = Tt, Error.captureStackTrace && Error.captureStackTrace(R(xt), Bt), xt.stack, xt.name = "AssertionError", k(xt);
              }
              return $ = Ot, (it = [{ key: "toString", value: function() {
                return "".concat(this.name, " [").concat(this.code, "]: ").concat(this.message);
              } }, { key: ft, value: function(bt, xt) {
                return V(this, c(c({}, xt), {}, { customInspect: false, depth: 0 }));
              } }]) && T($.prototype, it), Object.defineProperty($, "prototype", { writable: false }), Ot;
            }(F(Error), V.custom);
            p.exports = I;
          }, 4035: (p, g, b) => {
            var h, m = b(6556), c = b(9092)(), w = b(9957), T = b(5795);
            if (c) {
              var P = m("RegExp.prototype.exec"), k = {}, R = function() {
                throw k;
              }, F = { toString: R, valueOf: R };
              typeof Symbol.toPrimitive == "symbol" && (F[Symbol.toPrimitive] = R), h = function(U) {
                if (!U || typeof U != "object") return false;
                var M = T(U, "lastIndex");
                if (!M || !w(M, "value")) return false;
                try {
                  P(U, F);
                } catch (Z) {
                  return Z === k;
                }
              };
            } else {
              var v = m("Object.prototype.toString");
              h = function(U) {
                return !(!U || typeof U != "object" && typeof U != "function") && v(U) === "[object RegExp]";
              };
            }
            p.exports = h;
          }, 4039: (p, g, b) => {
            var h = typeof Symbol < "u" && Symbol, m = b(1333);
            p.exports = function() {
              return typeof h == "function" && typeof Symbol == "function" && typeof h("foo") == "symbol" && typeof Symbol("bar") == "symbol" && m();
            };
          }, 4107: (p, g, b) => {
            var h = b(6698), m = b(392), c = b(2861).Buffer, w = [1116352408, 1899447441, 3049323471, 3921009573, 961987163, 1508970993, 2453635748, 2870763221, 3624381080, 310598401, 607225278, 1426881987, 1925078388, 2162078206, 2614888103, 3248222580, 3835390401, 4022224774, 264347078, 604807628, 770255983, 1249150122, 1555081692, 1996064986, 2554220882, 2821834349, 2952996808, 3210313671, 3336571891, 3584528711, 113926993, 338241895, 666307205, 773529912, 1294757372, 1396182291, 1695183700, 1986661051, 2177026350, 2456956037, 2730485921, 2820302411, 3259730800, 3345764771, 3516065817, 3600352804, 4094571909, 275423344, 430227734, 506948616, 659060556, 883997877, 958139571, 1322822218, 1537002063, 1747873779, 1955562222, 2024104815, 2227730452, 2361852424, 2428436474, 2756734187, 3204031479, 3329325298], T = new Array(64);
            function P() {
              this.init(), this._w = T, m.call(this, 64, 56);
            }
            function k(Z, D, V) {
              return V ^ Z & (D ^ V);
            }
            function R(Z, D, V) {
              return Z & D | V & (Z | D);
            }
            function F(Z) {
              return (Z >>> 2 | Z << 30) ^ (Z >>> 13 | Z << 19) ^ (Z >>> 22 | Z << 10);
            }
            function v(Z) {
              return (Z >>> 6 | Z << 26) ^ (Z >>> 11 | Z << 21) ^ (Z >>> 25 | Z << 7);
            }
            function U(Z) {
              return (Z >>> 7 | Z << 25) ^ (Z >>> 18 | Z << 14) ^ Z >>> 3;
            }
            function M(Z) {
              return (Z >>> 17 | Z << 15) ^ (Z >>> 19 | Z << 13) ^ Z >>> 10;
            }
            h(P, m), P.prototype.init = function() {
              return this._a = 1779033703, this._b = 3144134277, this._c = 1013904242, this._d = 2773480762, this._e = 1359893119, this._f = 2600822924, this._g = 528734635, this._h = 1541459225, this;
            }, P.prototype._update = function(Z) {
              for (var D = this._w, V = 0 | this._a, S = 0 | this._b, x = 0 | this._c, B = 0 | this._d, W = 0 | this._e, lt = 0 | this._f, pt = 0 | this._g, at = 0 | this._h, rt = 0; rt < 16; ++rt) D[rt] = Z.readInt32BE(4 * rt);
              for (; rt < 64; ++rt) D[rt] = M(D[rt - 2]) + D[rt - 7] + U(D[rt - 15]) + D[rt - 16] | 0;
              for (var ot = 0; ot < 64; ++ot) {
                var X = at + v(W) + k(W, lt, pt) + w[ot] + D[ot] | 0, I = F(V) + R(V, S, x) | 0;
                at = pt, pt = lt, lt = W, W = B + X | 0, B = x, x = S, S = V, V = X + I | 0;
              }
              this._a = V + this._a | 0, this._b = S + this._b | 0, this._c = x + this._c | 0, this._d = B + this._d | 0, this._e = W + this._e | 0, this._f = lt + this._f | 0, this._g = pt + this._g | 0, this._h = at + this._h | 0;
            }, P.prototype._hash = function() {
              var Z = c.allocUnsafe(32);
              return Z.writeInt32BE(this._a, 0), Z.writeInt32BE(this._b, 4), Z.writeInt32BE(this._c, 8), Z.writeInt32BE(this._d, 12), Z.writeInt32BE(this._e, 16), Z.writeInt32BE(this._f, 20), Z.writeInt32BE(this._g, 24), Z.writeInt32BE(this._h, 28), Z;
            }, p.exports = P;
          }, 4133: (p, g, b) => {
            var h = b(487), m = b(8452), c = b(3003), w = b(6642), T = b(2464), P = h(w(), Number);
            m(P, { getPolyfill: w, implementation: c, shim: T }), p.exports = P;
          }, 4148: (p, g, b) => {
            var h = b(5606), m = b(6763);
            function c(xt) {
              return c = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(Ct) {
                return typeof Ct;
              } : function(Ct) {
                return Ct && typeof Symbol == "function" && Ct.constructor === Symbol && Ct !== Symbol.prototype ? "symbol" : typeof Ct;
              }, c(xt);
            }
            var w, T, P = b(9597).codes, k = P.ERR_AMBIGUOUS_ARGUMENT, R = P.ERR_INVALID_ARG_TYPE, F = P.ERR_INVALID_ARG_VALUE, v = P.ERR_INVALID_RETURN_VALUE, U = P.ERR_MISSING_ARGS, M = b(3918), Z = b(537).inspect, D = b(537).types, V = D.isPromise, S = D.isRegExp, x = b(9133)(), B = b(9394)(), W = b(8075)("RegExp.prototype.test");
            function lt() {
              var xt = b(2299);
              w = xt.isDeepEqual, T = xt.isDeepStrictEqual;
            }
            var pt = false, at = p.exports = I, rt = {};
            function ot(xt) {
              throw xt.message instanceof Error ? xt.message : new M(xt);
            }
            function X(xt, Ct, Tt, Bt) {
              if (!Tt) {
                var At = false;
                if (Ct === 0) At = true, Bt = "No value argument passed to `assert.ok()`";
                else if (Bt instanceof Error) throw Bt;
                var Ut = new M({ actual: Tt, expected: true, message: Bt, operator: "==", stackStartFn: xt });
                throw Ut.generatedMessage = At, Ut;
              }
            }
            function I() {
              for (var xt = arguments.length, Ct = new Array(xt), Tt = 0; Tt < xt; Tt++) Ct[Tt] = arguments[Tt];
              X.apply(void 0, [I, Ct.length].concat(Ct));
            }
            at.fail = function xt(Ct, Tt, Bt, At, Ut) {
              var Vt, oe = arguments.length;
              if (oe === 0 ? Vt = "Failed" : oe === 1 ? (Bt = Ct, Ct = void 0) : (pt === false && (pt = true, (h.emitWarning ? h.emitWarning : m.warn.bind(m))("assert.fail() with more than one argument is deprecated. Please use assert.strictEqual() instead or only pass a message.", "DeprecationWarning", "DEP0094")), oe === 2 && (At = "!=")), Bt instanceof Error) throw Bt;
              var te = { actual: Ct, expected: Tt, operator: At === void 0 ? "fail" : At, stackStartFn: Ut || xt };
              Bt !== void 0 && (te.message = Bt);
              var yt = new M(te);
              throw Vt && (yt.message = Vt, yt.generatedMessage = true), yt;
            }, at.AssertionError = M, at.ok = I, at.equal = function xt(Ct, Tt, Bt) {
              if (arguments.length < 2) throw new U("actual", "expected");
              Ct != Tt && ot({ actual: Ct, expected: Tt, message: Bt, operator: "==", stackStartFn: xt });
            }, at.notEqual = function xt(Ct, Tt, Bt) {
              if (arguments.length < 2) throw new U("actual", "expected");
              Ct == Tt && ot({ actual: Ct, expected: Tt, message: Bt, operator: "!=", stackStartFn: xt });
            }, at.deepEqual = function xt(Ct, Tt, Bt) {
              if (arguments.length < 2) throw new U("actual", "expected");
              w === void 0 && lt(), w(Ct, Tt) || ot({ actual: Ct, expected: Tt, message: Bt, operator: "deepEqual", stackStartFn: xt });
            }, at.notDeepEqual = function xt(Ct, Tt, Bt) {
              if (arguments.length < 2) throw new U("actual", "expected");
              w === void 0 && lt(), w(Ct, Tt) && ot({ actual: Ct, expected: Tt, message: Bt, operator: "notDeepEqual", stackStartFn: xt });
            }, at.deepStrictEqual = function xt(Ct, Tt, Bt) {
              if (arguments.length < 2) throw new U("actual", "expected");
              w === void 0 && lt(), T(Ct, Tt) || ot({ actual: Ct, expected: Tt, message: Bt, operator: "deepStrictEqual", stackStartFn: xt });
            }, at.notDeepStrictEqual = function xt(Ct, Tt, Bt) {
              if (arguments.length < 2) throw new U("actual", "expected");
              w === void 0 && lt(), T(Ct, Tt) && ot({ actual: Ct, expected: Tt, message: Bt, operator: "notDeepStrictEqual", stackStartFn: xt });
            }, at.strictEqual = function xt(Ct, Tt, Bt) {
              if (arguments.length < 2) throw new U("actual", "expected");
              B(Ct, Tt) || ot({ actual: Ct, expected: Tt, message: Bt, operator: "strictEqual", stackStartFn: xt });
            }, at.notStrictEqual = function xt(Ct, Tt, Bt) {
              if (arguments.length < 2) throw new U("actual", "expected");
              B(Ct, Tt) && ot({ actual: Ct, expected: Tt, message: Bt, operator: "notStrictEqual", stackStartFn: xt });
            };
            var nt = function(xt, Ct, Tt) {
              return Object.defineProperty(xt, "prototype", { writable: false }), xt;
            }(function xt(Ct, Tt, Bt) {
              var At = this;
              (function(Ut, Vt) {
                if (!(Ut instanceof Vt)) throw new TypeError("Cannot call a class as a function");
              })(this, xt), Tt.forEach(function(Ut) {
                Ut in Ct && (Bt !== void 0 && typeof Bt[Ut] == "string" && S(Ct[Ut]) && W(Ct[Ut], Bt[Ut]) ? At[Ut] = Bt[Ut] : At[Ut] = Ct[Ut]);
              });
            });
            function ft(xt, Ct, Tt, Bt) {
              if (typeof Ct != "function") {
                if (S(Ct)) return W(Ct, xt);
                if (arguments.length === 2) throw new R("expected", ["Function", "RegExp"], Ct);
                if (c(xt) !== "object" || xt === null) {
                  var At = new M({ actual: xt, expected: Ct, message: Tt, operator: "deepStrictEqual", stackStartFn: Bt });
                  throw At.operator = Bt.name, At;
                }
                var Ut = Object.keys(Ct);
                if (Ct instanceof Error) Ut.push("name", "message");
                else if (Ut.length === 0) throw new F("error", Ct, "may not be an empty object");
                return w === void 0 && lt(), Ut.forEach(function(Vt) {
                  typeof xt[Vt] == "string" && S(Ct[Vt]) && W(Ct[Vt], xt[Vt]) || function(oe, te, yt, Mt, O, z) {
                    if (!(yt in oe) || !T(oe[yt], te[yt])) {
                      if (!Mt) {
                        var J = new nt(oe, O), tt = new nt(te, O, oe), H = new M({ actual: J, expected: tt, operator: "deepStrictEqual", stackStartFn: z });
                        throw H.actual = oe, H.expected = te, H.operator = z.name, H;
                      }
                      ot({ actual: oe, expected: te, message: Mt, operator: z.name, stackStartFn: z });
                    }
                  }(xt, Ct, Vt, Tt, Ut, Bt);
                }), true;
              }
              return Ct.prototype !== void 0 && xt instanceof Ct || !Error.isPrototypeOf(Ct) && Ct.call({}, xt) === true;
            }
            function dt(xt) {
              if (typeof xt != "function") throw new R("fn", "Function", xt);
              try {
                xt();
              } catch (Ct) {
                return Ct;
              }
              return rt;
            }
            function Lt(xt) {
              return V(xt) || xt !== null && c(xt) === "object" && typeof xt.then == "function" && typeof xt.catch == "function";
            }
            function $(xt) {
              return Promise.resolve().then(function() {
                var Ct;
                if (typeof xt == "function") {
                  if (!Lt(Ct = xt())) throw new v("instance of Promise", "promiseFn", Ct);
                } else {
                  if (!Lt(xt)) throw new R("promiseFn", ["Function", "Promise"], xt);
                  Ct = xt;
                }
                return Promise.resolve().then(function() {
                  return Ct;
                }).then(function() {
                  return rt;
                }).catch(function(Tt) {
                  return Tt;
                });
              });
            }
            function it(xt, Ct, Tt, Bt) {
              if (typeof Tt == "string") {
                if (arguments.length === 4) throw new R("error", ["Object", "Error", "Function", "RegExp"], Tt);
                if (c(Ct) === "object" && Ct !== null) {
                  if (Ct.message === Tt) throw new k("error/message", 'The error message "'.concat(Ct.message, '" is identical to the message.'));
                } else if (Ct === Tt) throw new k("error/message", 'The error "'.concat(Ct, '" is identical to the message.'));
                Bt = Tt, Tt = void 0;
              } else if (Tt != null && c(Tt) !== "object" && typeof Tt != "function") throw new R("error", ["Object", "Error", "Function", "RegExp"], Tt);
              if (Ct === rt) {
                var At = "";
                Tt && Tt.name && (At += " (".concat(Tt.name, ")")), At += Bt ? ": ".concat(Bt) : ".";
                var Ut = xt.name === "rejects" ? "rejection" : "exception";
                ot({ actual: void 0, expected: Tt, operator: xt.name, message: "Missing expected ".concat(Ut).concat(At), stackStartFn: xt });
              }
              if (Tt && !ft(Ct, Tt, Bt, xt)) throw Ct;
            }
            function mt(xt, Ct, Tt, Bt) {
              if (Ct !== rt) {
                if (typeof Tt == "string" && (Bt = Tt, Tt = void 0), !Tt || ft(Ct, Tt)) {
                  var At = Bt ? ": ".concat(Bt) : ".", Ut = xt.name === "doesNotReject" ? "rejection" : "exception";
                  ot({ actual: Ct, expected: Tt, operator: xt.name, message: "Got unwanted ".concat(Ut).concat(At, `
`) + 'Actual message: "'.concat(Ct && Ct.message, '"'), stackStartFn: xt });
                }
                throw Ct;
              }
            }
            function Ot(xt, Ct, Tt, Bt, At) {
              if (!S(Ct)) throw new R("regexp", "RegExp", Ct);
              var Ut = At === "match";
              if (typeof xt != "string" || W(Ct, xt) !== Ut) {
                if (Tt instanceof Error) throw Tt;
                var Vt = !Tt;
                Tt = Tt || (typeof xt != "string" ? 'The "string" argument must be of type string. Received type ' + "".concat(c(xt), " (").concat(Z(xt), ")") : (Ut ? "The input did not match the regular expression " : "The input was expected to not match the regular expression ") + "".concat(Z(Ct), `. Input:

`).concat(Z(xt), `
`));
                var oe = new M({ actual: xt, expected: Ct, message: Tt, operator: At, stackStartFn: Bt });
                throw oe.generatedMessage = Vt, oe;
              }
            }
            function bt() {
              for (var xt = arguments.length, Ct = new Array(xt), Tt = 0; Tt < xt; Tt++) Ct[Tt] = arguments[Tt];
              X.apply(void 0, [bt, Ct.length].concat(Ct));
            }
            at.throws = function xt(Ct) {
              for (var Tt = arguments.length, Bt = new Array(Tt > 1 ? Tt - 1 : 0), At = 1; At < Tt; At++) Bt[At - 1] = arguments[At];
              it.apply(void 0, [xt, dt(Ct)].concat(Bt));
            }, at.rejects = function xt(Ct) {
              for (var Tt = arguments.length, Bt = new Array(Tt > 1 ? Tt - 1 : 0), At = 1; At < Tt; At++) Bt[At - 1] = arguments[At];
              return $(Ct).then(function(Ut) {
                return it.apply(void 0, [xt, Ut].concat(Bt));
              });
            }, at.doesNotThrow = function xt(Ct) {
              for (var Tt = arguments.length, Bt = new Array(Tt > 1 ? Tt - 1 : 0), At = 1; At < Tt; At++) Bt[At - 1] = arguments[At];
              mt.apply(void 0, [xt, dt(Ct)].concat(Bt));
            }, at.doesNotReject = function xt(Ct) {
              for (var Tt = arguments.length, Bt = new Array(Tt > 1 ? Tt - 1 : 0), At = 1; At < Tt; At++) Bt[At - 1] = arguments[At];
              return $(Ct).then(function(Ut) {
                return mt.apply(void 0, [xt, Ut].concat(Bt));
              });
            }, at.ifError = function xt(Ct) {
              if (Ct != null) {
                var Tt = "ifError got unwanted exception: ";
                c(Ct) === "object" && typeof Ct.message == "string" ? Ct.message.length === 0 && Ct.constructor ? Tt += Ct.constructor.name : Tt += Ct.message : Tt += Z(Ct);
                var Bt = new M({ actual: Ct, expected: null, operator: "ifError", message: Tt, stackStartFn: xt }), At = Ct.stack;
                if (typeof At == "string") {
                  var Ut = At.split(`
`);
                  Ut.shift();
                  for (var Vt = Bt.stack.split(`
`), oe = 0; oe < Ut.length; oe++) {
                    var te = Vt.indexOf(Ut[oe]);
                    if (te !== -1) {
                      Vt = Vt.slice(0, te);
                      break;
                    }
                  }
                  Bt.stack = "".concat(Vt.join(`
`), `
`).concat(Ut.join(`
`));
                }
                throw Bt;
              }
            }, at.match = function xt(Ct, Tt, Bt) {
              Ot(Ct, Tt, Bt, xt, "match");
            }, at.doesNotMatch = function xt(Ct, Tt, Bt) {
              Ot(Ct, Tt, Bt, xt, "doesNotMatch");
            }, at.strict = x(bt, at, { equal: at.strictEqual, deepEqual: at.deepStrictEqual, notEqual: at.notStrictEqual, notDeepEqual: at.notDeepStrictEqual }), at.strict.strict = at.strict;
          }, 4459: (p) => {
            p.exports = Number.isNaN || function(g) {
              return g != g;
            };
          }, 5345: (p) => {
            p.exports = URIError;
          }, 5360: (p, g) => {
            var b = function(P, k) {
              return k || (k = {}), P.split("").forEach(function(R, F) {
                R in k || (k[R] = F);
              }), k;
            }, h = { alphabet: "ABCDEFGHIJKLMNOPQRSTUVWXYZ234567", charmap: { 0: 14, 1: 8 } };
            h.charmap = b(h.alphabet, h.charmap);
            var m = { alphabet: "0123456789ABCDEFGHJKMNPQRSTVWXYZ", charmap: { O: 0, I: 1, L: 1 } };
            m.charmap = b(m.alphabet, m.charmap);
            var c = { alphabet: "0123456789ABCDEFGHIJKLMNOPQRSTUV", charmap: {} };
            function w(P) {
              if (this.buf = [], this.shift = 8, this.carry = 0, P) {
                switch (P.type) {
                  case "rfc4648":
                    this.charmap = g.rfc4648.charmap;
                    break;
                  case "crockford":
                    this.charmap = g.crockford.charmap;
                    break;
                  case "base32hex":
                    this.charmap = g.base32hex.charmap;
                    break;
                  default:
                    throw new Error("invalid type");
                }
                P.charmap && (this.charmap = P.charmap);
              }
            }
            function T(P) {
              if (this.buf = "", this.shift = 3, this.carry = 0, P) {
                switch (P.type) {
                  case "rfc4648":
                    this.alphabet = g.rfc4648.alphabet;
                    break;
                  case "crockford":
                    this.alphabet = g.crockford.alphabet;
                    break;
                  case "base32hex":
                    this.alphabet = g.base32hex.alphabet;
                    break;
                  default:
                    throw new Error("invalid type");
                }
                P.alphabet ? this.alphabet = P.alphabet : P.lc && (this.alphabet = this.alphabet.toLowerCase());
              }
            }
            c.charmap = b(c.alphabet, c.charmap), w.prototype.charmap = h.charmap, w.prototype.write = function(P) {
              var k = this.charmap, R = this.buf, F = this.shift, v = this.carry;
              return P.toUpperCase().split("").forEach(function(U) {
                if (U != "=") {
                  var M = 255 & k[U];
                  (F -= 5) > 0 ? v |= M << F : F < 0 ? (R.push(v | M >> -F), v = M << (F += 8) & 255) : (R.push(v | M), F = 8, v = 0);
                }
              }), this.shift = F, this.carry = v, this;
            }, w.prototype.finalize = function(P) {
              return P && this.write(P), this.shift !== 8 && this.carry !== 0 && (this.buf.push(this.carry), this.shift = 8, this.carry = 0), this.buf;
            }, T.prototype.alphabet = h.alphabet, T.prototype.write = function(P) {
              var k, R, F, v = this.shift, U = this.carry;
              for (F = 0; F < P.length; F++) k = U | (R = P[F]) >> v, this.buf += this.alphabet[31 & k], v > 5 && (k = R >> (v -= 5), this.buf += this.alphabet[31 & k]), U = R << (v = 5 - v), v = 8 - v;
              return this.shift = v, this.carry = U, this;
            }, T.prototype.finalize = function(P) {
              return P && this.write(P), this.shift !== 3 && (this.buf += this.alphabet[31 & this.carry], this.shift = 3, this.carry = 0), this.buf;
            }, g.encode = function(P, k) {
              return new T(k).finalize(P);
            }, g.decode = function(P, k) {
              return new w(k).finalize(P);
            }, g.Decoder = w, g.Encoder = T, g.charmap = b, g.crockford = m, g.rfc4648 = h, g.base32hex = c;
          }, 5606: (p) => {
            var g, b, h = p.exports = {};
            function m() {
              throw new Error("setTimeout has not been defined");
            }
            function c() {
              throw new Error("clearTimeout has not been defined");
            }
            function w(Z) {
              if (g === setTimeout) return setTimeout(Z, 0);
              if ((g === m || !g) && setTimeout) return g = setTimeout, setTimeout(Z, 0);
              try {
                return g(Z, 0);
              } catch {
                try {
                  return g.call(null, Z, 0);
                } catch {
                  return g.call(this, Z, 0);
                }
              }
            }
            (function() {
              try {
                g = typeof setTimeout == "function" ? setTimeout : m;
              } catch {
                g = m;
              }
              try {
                b = typeof clearTimeout == "function" ? clearTimeout : c;
              } catch {
                b = c;
              }
            })();
            var T, P = [], k = false, R = -1;
            function F() {
              k && T && (k = false, T.length ? P = T.concat(P) : R = -1, P.length && v());
            }
            function v() {
              if (!k) {
                var Z = w(F);
                k = true;
                for (var D = P.length; D; ) {
                  for (T = P, P = []; ++R < D; ) T && T[R].run();
                  R = -1, D = P.length;
                }
                T = null, k = false, function(V) {
                  if (b === clearTimeout) return clearTimeout(V);
                  if ((b === c || !b) && clearTimeout) return b = clearTimeout, clearTimeout(V);
                  try {
                    return b(V);
                  } catch {
                    try {
                      return b.call(null, V);
                    } catch {
                      return b.call(this, V);
                    }
                  }
                }(Z);
              }
            }
            function U(Z, D) {
              this.fun = Z, this.array = D;
            }
            function M() {
            }
            h.nextTick = function(Z) {
              var D = new Array(arguments.length - 1);
              if (arguments.length > 1) for (var V = 1; V < arguments.length; V++) D[V - 1] = arguments[V];
              P.push(new U(Z, D)), P.length !== 1 || k || w(v);
            }, U.prototype.run = function() {
              this.fun.apply(null, this.array);
            }, h.title = "browser", h.browser = true, h.env = {}, h.argv = [], h.version = "", h.versions = {}, h.on = M, h.addListener = M, h.once = M, h.off = M, h.removeListener = M, h.removeAllListeners = M, h.emit = M, h.prependListener = M, h.prependOnceListener = M, h.listeners = function(Z) {
              return [];
            }, h.binding = function(Z) {
              throw new Error("process.binding is not supported");
            }, h.cwd = function() {
              return "/";
            }, h.chdir = function(Z) {
              throw new Error("process.chdir is not supported");
            }, h.umask = function() {
              return 0;
            };
          }, 5680: (p, g, b) => {
            var h = b(5767);
            p.exports = function(m) {
              return !!h(m);
            };
          }, 5767: (p, g, b) => {
            var h = b(2682), m = b(9209), c = b(487), w = b(6556), T = b(5795), P = b(3628), k = w("Object.prototype.toString"), R = b(9092)(), F = typeof globalThis > "u" ? b.g : globalThis, v = m(), U = w("String.prototype.slice"), M = w("Array.prototype.indexOf", true) || function(D, V) {
              for (var S = 0; S < D.length; S += 1) if (D[S] === V) return S;
              return -1;
            }, Z = { __proto__: null };
            h(v, R && T && P ? function(D) {
              var V = new F[D]();
              if (Symbol.toStringTag in V && P) {
                var S = P(V), x = T(S, Symbol.toStringTag);
                if (!x && S) {
                  var B = P(S);
                  x = T(B, Symbol.toStringTag);
                }
                Z["$" + D] = c(x.get);
              }
            } : function(D) {
              var V = new F[D](), S = V.slice || V.set;
              S && (Z["$" + D] = c(S));
            }), p.exports = function(D) {
              if (!D || typeof D != "object") return false;
              if (!R) {
                var V = U(k(D), 8, -1);
                return M(v, V) > -1 ? V : V === "Object" && function(S) {
                  var x = false;
                  return h(Z, function(B, W) {
                    if (!x) try {
                      B(S), x = U(W, 1);
                    } catch {
                    }
                  }), x;
                }(D);
              }
              return T ? function(S) {
                var x = false;
                return h(Z, function(B, W) {
                  if (!x) try {
                    "$" + B(S) === W && (x = U(W, 1));
                  } catch {
                  }
                }), x;
              }(D) : null;
            };
          }, 5795: (p, g, b) => {
            var h = b(6549);
            if (h) try {
              h([], "length");
            } catch {
              h = null;
            }
            p.exports = h;
          }, 5880: (p) => {
            p.exports = Math.pow;
          }, 6188: (p) => {
            p.exports = Math.max;
          }, 6549: (p) => {
            p.exports = Object.getOwnPropertyDescriptor;
          }, 6556: (p, g, b) => {
            var h = b(453), m = b(3126), c = m([h("%String.prototype.indexOf%")]);
            p.exports = function(w, T) {
              var P = h(w, !!T);
              return typeof P == "function" && c(w, ".prototype.") > -1 ? m([P]) : P;
            };
          }, 6576: (p, g, b) => {
            var h = b(9394), m = b(8452);
            p.exports = function() {
              var c = h();
              return m(Object, { is: c }, { is: function() {
                return Object.is !== c;
              } }), c;
            };
          }, 6578: (p) => {
            p.exports = ["Float16Array", "Float32Array", "Float64Array", "Int8Array", "Int16Array", "Int32Array", "Uint8Array", "Uint8ClampedArray", "Uint16Array", "Uint32Array", "BigInt64Array", "BigUint64Array"];
          }, 6642: (p, g, b) => {
            var h = b(3003);
            p.exports = function() {
              return Number.isNaN && Number.isNaN(NaN) && !Number.isNaN("a") ? Number.isNaN : h;
            };
          }, 6698: (p) => {
            typeof Object.create == "function" ? p.exports = function(g, b) {
              b && (g.super_ = b, g.prototype = Object.create(b.prototype, { constructor: { value: g, enumerable: false, writable: true, configurable: true } }));
            } : p.exports = function(g, b) {
              if (b) {
                g.super_ = b;
                var h = function() {
                };
                h.prototype = b.prototype, g.prototype = new h(), g.prototype.constructor = g;
              }
            };
          }, 6710: (p, g, b) => {
            var h = b(6698), m = b(4107), c = b(392), w = b(2861).Buffer, T = new Array(64);
            function P() {
              this.init(), this._w = T, c.call(this, 64, 56);
            }
            h(P, m), P.prototype.init = function() {
              return this._a = 3238371032, this._b = 914150663, this._c = 812702999, this._d = 4144912697, this._e = 4290775857, this._f = 1750603025, this._g = 1694076839, this._h = 3204075428, this;
            }, P.prototype._hash = function() {
              var k = w.allocUnsafe(28);
              return k.writeInt32BE(this._a, 0), k.writeInt32BE(this._b, 4), k.writeInt32BE(this._c, 8), k.writeInt32BE(this._d, 12), k.writeInt32BE(this._e, 16), k.writeInt32BE(this._f, 20), k.writeInt32BE(this._g, 24), k;
            }, p.exports = P;
          }, 6743: (p, g, b) => {
            var h = b(9353);
            p.exports = Function.prototype.bind || h;
          }, 6763: (p, g, b) => {
            var h = b(537), m = b(4148);
            function c() {
              return (/* @__PURE__ */ new Date()).getTime();
            }
            var w, T = Array.prototype.slice, P = {};
            w = b.g !== void 0 && b.g.console ? b.g.console : typeof window < "u" && window.console ? window.console : {};
            for (var k = [[function() {
            }, "log"], [function() {
              w.log.apply(w, arguments);
            }, "info"], [function() {
              w.log.apply(w, arguments);
            }, "warn"], [function() {
              w.warn.apply(w, arguments);
            }, "error"], [function(M) {
              P[M] = c();
            }, "time"], [function(M) {
              var Z = P[M];
              if (!Z) throw new Error("No such label: " + M);
              delete P[M];
              var D = c() - Z;
              w.log(M + ": " + D + "ms");
            }, "timeEnd"], [function() {
              var M = new Error();
              M.name = "Trace", M.message = h.format.apply(null, arguments), w.error(M.stack);
            }, "trace"], [function(M) {
              w.log(h.inspect(M) + `
`);
            }, "dir"], [function(M) {
              if (!M) {
                var Z = T.call(arguments, 1);
                m.ok(false, h.format.apply(null, Z));
              }
            }, "assert"]], R = 0; R < k.length; R++) {
              var F = k[R], v = F[0], U = F[1];
              w[U] || (w[U] = v);
            }
            p.exports = w;
          }, 6897: (p, g, b) => {
            var h = b(453), m = b(41), c = b(592)(), w = b(5795), T = b(9675), P = h("%Math.floor%");
            p.exports = function(k, R) {
              if (typeof k != "function") throw new T("`fn` is not a function");
              if (typeof R != "number" || R < 0 || R > 4294967295 || P(R) !== R) throw new T("`length` must be a positive 32-bit integer");
              var F = arguments.length > 2 && !!arguments[2], v = true, U = true;
              if ("length" in k && w) {
                var M = w(k, "length");
                M && !M.configurable && (v = false), M && !M.writable && (U = false);
              }
              return (v || U || !F) && (c ? m(k, "length", R, true, true) : m(k, "length", R)), k;
            };
          }, 7119: (p) => {
            p.exports = typeof Reflect < "u" && Reflect && Reflect.apply;
          }, 7175: (p, g, b) => {
            b.r(g), b.d(g, { Account: () => or, Address: () => Qo, Asset: () => je, AuthClawbackEnabledFlag: () => de, AuthImmutableFlag: () => Dt, AuthRequiredFlag: () => Et, AuthRevocableFlag: () => vt, BASE_FEE: () => _i, Claimant: () => sr, Contract: () => Bc, FeeBumpTransaction: () => ce, Hyper: () => h.Hyper, Int128: () => zu, Int256: () => Gu, Keypair: () => ue, LiquidityPoolAsset: () => ie, LiquidityPoolFeeV18: () => Nr, LiquidityPoolId: () => dn, Memo: () => bi, MemoHash: () => Fo, MemoID: () => Fn, MemoNone: () => go, MemoReturn: () => Vo, MemoText: () => No, MuxedAccount: () => Gr, Networks: () => za, Operation: () => ae, ScInt: () => Ku, SignerKey: () => vi, Soroban: () => Ic, SorobanDataBuilder: () => lo, StrKey: () => gr, TimeoutInfinite: () => Oi, Transaction: () => tn, TransactionBase: () => sn, TransactionBuilder: () => mi, Uint128: () => Ps, Uint256: () => Ga, UnsignedHyper: () => h.UnsignedHyper, XdrLargeInt: () => pa, authorizeEntry: () => Bs, authorizeInvocation: () => Hc, buildInvocationTree: () => Qu, cereal: () => w, decodeAddressToMuxedAccount: () => ln, default: () => Ra, encodeMuxedAccount: () => ao, encodeMuxedAccountToAddress: () => Yr, extractBaseAddress: () => mo, getLiquidityPoolId: () => wr, hash: () => P, humanizeEvents: () => qc, nativeToScVal: () => Sa, scValToBigInt: () => Is, scValToNative: () => Ki, sign: () => Wo, verify: () => qt, walkInvocationTree: () => Gc, xdr: () => c });
            var h = b(3740), m = h.config(function(n) {
              var A = 1024;
              n.typedef("Value", n.varOpaque()), n.struct("ScpBallot", [["counter", n.lookup("Uint32")], ["value", n.lookup("Value")]]), n.enum("ScpStatementType", { scpStPrepare: 0, scpStConfirm: 1, scpStExternalize: 2, scpStNominate: 3 }), n.struct("ScpNomination", [["quorumSetHash", n.lookup("Hash")], ["votes", n.varArray(n.lookup("Value"), 2147483647)], ["accepted", n.varArray(n.lookup("Value"), 2147483647)]]), n.struct("ScpStatementPrepare", [["quorumSetHash", n.lookup("Hash")], ["ballot", n.lookup("ScpBallot")], ["prepared", n.option(n.lookup("ScpBallot"))], ["preparedPrime", n.option(n.lookup("ScpBallot"))], ["nC", n.lookup("Uint32")], ["nH", n.lookup("Uint32")]]), n.struct("ScpStatementConfirm", [["ballot", n.lookup("ScpBallot")], ["nPrepared", n.lookup("Uint32")], ["nCommit", n.lookup("Uint32")], ["nH", n.lookup("Uint32")], ["quorumSetHash", n.lookup("Hash")]]), n.struct("ScpStatementExternalize", [["commit", n.lookup("ScpBallot")], ["nH", n.lookup("Uint32")], ["commitQuorumSetHash", n.lookup("Hash")]]), n.union("ScpStatementPledges", { switchOn: n.lookup("ScpStatementType"), switchName: "type", switches: [["scpStPrepare", "prepare"], ["scpStConfirm", "confirm"], ["scpStExternalize", "externalize"], ["scpStNominate", "nominate"]], arms: { prepare: n.lookup("ScpStatementPrepare"), confirm: n.lookup("ScpStatementConfirm"), externalize: n.lookup("ScpStatementExternalize"), nominate: n.lookup("ScpNomination") } }), n.struct("ScpStatement", [["nodeId", n.lookup("NodeId")], ["slotIndex", n.lookup("Uint64")], ["pledges", n.lookup("ScpStatementPledges")]]), n.struct("ScpEnvelope", [["statement", n.lookup("ScpStatement")], ["signature", n.lookup("Signature")]]), n.struct("ScpQuorumSet", [["threshold", n.lookup("Uint32")], ["validators", n.varArray(n.lookup("NodeId"), 2147483647)], ["innerSets", n.varArray(n.lookup("ScpQuorumSet"), 2147483647)]]), n.typedef("Thresholds", n.opaque(4)), n.typedef("String32", n.string(32)), n.typedef("String64", n.string(64)), n.typedef("SequenceNumber", n.lookup("Int64")), n.typedef("DataValue", n.varOpaque(64)), n.typedef("AssetCode4", n.opaque(4)), n.typedef("AssetCode12", n.opaque(12)), n.enum("AssetType", { assetTypeNative: 0, assetTypeCreditAlphanum4: 1, assetTypeCreditAlphanum12: 2, assetTypePoolShare: 3 }), n.union("AssetCode", { switchOn: n.lookup("AssetType"), switchName: "type", switches: [["assetTypeCreditAlphanum4", "assetCode4"], ["assetTypeCreditAlphanum12", "assetCode12"]], arms: { assetCode4: n.lookup("AssetCode4"), assetCode12: n.lookup("AssetCode12") } }), n.struct("AlphaNum4", [["assetCode", n.lookup("AssetCode4")], ["issuer", n.lookup("AccountId")]]), n.struct("AlphaNum12", [["assetCode", n.lookup("AssetCode12")], ["issuer", n.lookup("AccountId")]]), n.union("Asset", { switchOn: n.lookup("AssetType"), switchName: "type", switches: [["assetTypeNative", n.void()], ["assetTypeCreditAlphanum4", "alphaNum4"], ["assetTypeCreditAlphanum12", "alphaNum12"]], arms: { alphaNum4: n.lookup("AlphaNum4"), alphaNum12: n.lookup("AlphaNum12") } }), n.struct("Price", [["n", n.lookup("Int32")], ["d", n.lookup("Int32")]]), n.struct("Liabilities", [["buying", n.lookup("Int64")], ["selling", n.lookup("Int64")]]), n.enum("ThresholdIndices", { thresholdMasterWeight: 0, thresholdLow: 1, thresholdMed: 2, thresholdHigh: 3 }), n.enum("LedgerEntryType", { account: 0, trustline: 1, offer: 2, data: 3, claimableBalance: 4, liquidityPool: 5, contractData: 6, contractCode: 7, configSetting: 8, ttl: 9 }), n.struct("Signer", [["key", n.lookup("SignerKey")], ["weight", n.lookup("Uint32")]]), n.enum("AccountFlags", { authRequiredFlag: 1, authRevocableFlag: 2, authImmutableFlag: 4, authClawbackEnabledFlag: 8 }), n.const("MASK_ACCOUNT_FLAGS", 7), n.const("MASK_ACCOUNT_FLAGS_V17", 15), n.const("MAX_SIGNERS", 20), n.typedef("SponsorshipDescriptor", n.option(n.lookup("AccountId"))), n.struct("AccountEntryExtensionV3", [["ext", n.lookup("ExtensionPoint")], ["seqLedger", n.lookup("Uint32")], ["seqTime", n.lookup("TimePoint")]]), n.union("AccountEntryExtensionV2Ext", { switchOn: n.int(), switchName: "v", switches: [[0, n.void()], [3, "v3"]], arms: { v3: n.lookup("AccountEntryExtensionV3") } }), n.struct("AccountEntryExtensionV2", [["numSponsored", n.lookup("Uint32")], ["numSponsoring", n.lookup("Uint32")], ["signerSponsoringIDs", n.varArray(n.lookup("SponsorshipDescriptor"), n.lookup("MAX_SIGNERS"))], ["ext", n.lookup("AccountEntryExtensionV2Ext")]]), n.union("AccountEntryExtensionV1Ext", { switchOn: n.int(), switchName: "v", switches: [[0, n.void()], [2, "v2"]], arms: { v2: n.lookup("AccountEntryExtensionV2") } }), n.struct("AccountEntryExtensionV1", [["liabilities", n.lookup("Liabilities")], ["ext", n.lookup("AccountEntryExtensionV1Ext")]]), n.union("AccountEntryExt", { switchOn: n.int(), switchName: "v", switches: [[0, n.void()], [1, "v1"]], arms: { v1: n.lookup("AccountEntryExtensionV1") } }), n.struct("AccountEntry", [["accountId", n.lookup("AccountId")], ["balance", n.lookup("Int64")], ["seqNum", n.lookup("SequenceNumber")], ["numSubEntries", n.lookup("Uint32")], ["inflationDest", n.option(n.lookup("AccountId"))], ["flags", n.lookup("Uint32")], ["homeDomain", n.lookup("String32")], ["thresholds", n.lookup("Thresholds")], ["signers", n.varArray(n.lookup("Signer"), n.lookup("MAX_SIGNERS"))], ["ext", n.lookup("AccountEntryExt")]]), n.enum("TrustLineFlags", { authorizedFlag: 1, authorizedToMaintainLiabilitiesFlag: 2, trustlineClawbackEnabledFlag: 4 }), n.const("MASK_TRUSTLINE_FLAGS", 1), n.const("MASK_TRUSTLINE_FLAGS_V13", 3), n.const("MASK_TRUSTLINE_FLAGS_V17", 7), n.enum("LiquidityPoolType", { liquidityPoolConstantProduct: 0 }), n.union("TrustLineAsset", { switchOn: n.lookup("AssetType"), switchName: "type", switches: [["assetTypeNative", n.void()], ["assetTypeCreditAlphanum4", "alphaNum4"], ["assetTypeCreditAlphanum12", "alphaNum12"], ["assetTypePoolShare", "liquidityPoolId"]], arms: { alphaNum4: n.lookup("AlphaNum4"), alphaNum12: n.lookup("AlphaNum12"), liquidityPoolId: n.lookup("PoolId") } }), n.union("TrustLineEntryExtensionV2Ext", { switchOn: n.int(), switchName: "v", switches: [[0, n.void()]], arms: {} }), n.struct("TrustLineEntryExtensionV2", [["liquidityPoolUseCount", n.lookup("Int32")], ["ext", n.lookup("TrustLineEntryExtensionV2Ext")]]), n.union("TrustLineEntryV1Ext", { switchOn: n.int(), switchName: "v", switches: [[0, n.void()], [2, "v2"]], arms: { v2: n.lookup("TrustLineEntryExtensionV2") } }), n.struct("TrustLineEntryV1", [["liabilities", n.lookup("Liabilities")], ["ext", n.lookup("TrustLineEntryV1Ext")]]), n.union("TrustLineEntryExt", { switchOn: n.int(), switchName: "v", switches: [[0, n.void()], [1, "v1"]], arms: { v1: n.lookup("TrustLineEntryV1") } }), n.struct("TrustLineEntry", [["accountId", n.lookup("AccountId")], ["asset", n.lookup("TrustLineAsset")], ["balance", n.lookup("Int64")], ["limit", n.lookup("Int64")], ["flags", n.lookup("Uint32")], ["ext", n.lookup("TrustLineEntryExt")]]), n.enum("OfferEntryFlags", { passiveFlag: 1 }), n.const("MASK_OFFERENTRY_FLAGS", 1), n.union("OfferEntryExt", { switchOn: n.int(), switchName: "v", switches: [[0, n.void()]], arms: {} }), n.struct("OfferEntry", [["sellerId", n.lookup("AccountId")], ["offerId", n.lookup("Int64")], ["selling", n.lookup("Asset")], ["buying", n.lookup("Asset")], ["amount", n.lookup("Int64")], ["price", n.lookup("Price")], ["flags", n.lookup("Uint32")], ["ext", n.lookup("OfferEntryExt")]]), n.union("DataEntryExt", { switchOn: n.int(), switchName: "v", switches: [[0, n.void()]], arms: {} }), n.struct("DataEntry", [["accountId", n.lookup("AccountId")], ["dataName", n.lookup("String64")], ["dataValue", n.lookup("DataValue")], ["ext", n.lookup("DataEntryExt")]]), n.enum("ClaimPredicateType", { claimPredicateUnconditional: 0, claimPredicateAnd: 1, claimPredicateOr: 2, claimPredicateNot: 3, claimPredicateBeforeAbsoluteTime: 4, claimPredicateBeforeRelativeTime: 5 }), n.union("ClaimPredicate", { switchOn: n.lookup("ClaimPredicateType"), switchName: "type", switches: [["claimPredicateUnconditional", n.void()], ["claimPredicateAnd", "andPredicates"], ["claimPredicateOr", "orPredicates"], ["claimPredicateNot", "notPredicate"], ["claimPredicateBeforeAbsoluteTime", "absBefore"], ["claimPredicateBeforeRelativeTime", "relBefore"]], arms: { andPredicates: n.varArray(n.lookup("ClaimPredicate"), 2), orPredicates: n.varArray(n.lookup("ClaimPredicate"), 2), notPredicate: n.option(n.lookup("ClaimPredicate")), absBefore: n.lookup("Int64"), relBefore: n.lookup("Int64") } }), n.enum("ClaimantType", { claimantTypeV0: 0 }), n.struct("ClaimantV0", [["destination", n.lookup("AccountId")], ["predicate", n.lookup("ClaimPredicate")]]), n.union("Claimant", { switchOn: n.lookup("ClaimantType"), switchName: "type", switches: [["claimantTypeV0", "v0"]], arms: { v0: n.lookup("ClaimantV0") } }), n.enum("ClaimableBalanceFlags", { claimableBalanceClawbackEnabledFlag: 1 }), n.const("MASK_CLAIMABLE_BALANCE_FLAGS", 1), n.union("ClaimableBalanceEntryExtensionV1Ext", { switchOn: n.int(), switchName: "v", switches: [[0, n.void()]], arms: {} }), n.struct("ClaimableBalanceEntryExtensionV1", [["ext", n.lookup("ClaimableBalanceEntryExtensionV1Ext")], ["flags", n.lookup("Uint32")]]), n.union("ClaimableBalanceEntryExt", { switchOn: n.int(), switchName: "v", switches: [[0, n.void()], [1, "v1"]], arms: { v1: n.lookup("ClaimableBalanceEntryExtensionV1") } }), n.struct("ClaimableBalanceEntry", [["balanceId", n.lookup("ClaimableBalanceId")], ["claimants", n.varArray(n.lookup("Claimant"), 10)], ["asset", n.lookup("Asset")], ["amount", n.lookup("Int64")], ["ext", n.lookup("ClaimableBalanceEntryExt")]]), n.struct("LiquidityPoolConstantProductParameters", [["assetA", n.lookup("Asset")], ["assetB", n.lookup("Asset")], ["fee", n.lookup("Int32")]]), n.struct("LiquidityPoolEntryConstantProduct", [["params", n.lookup("LiquidityPoolConstantProductParameters")], ["reserveA", n.lookup("Int64")], ["reserveB", n.lookup("Int64")], ["totalPoolShares", n.lookup("Int64")], ["poolSharesTrustLineCount", n.lookup("Int64")]]), n.union("LiquidityPoolEntryBody", { switchOn: n.lookup("LiquidityPoolType"), switchName: "type", switches: [["liquidityPoolConstantProduct", "constantProduct"]], arms: { constantProduct: n.lookup("LiquidityPoolEntryConstantProduct") } }), n.struct("LiquidityPoolEntry", [["liquidityPoolId", n.lookup("PoolId")], ["body", n.lookup("LiquidityPoolEntryBody")]]), n.enum("ContractDataDurability", { temporary: 0, persistent: 1 }), n.struct("ContractDataEntry", [["ext", n.lookup("ExtensionPoint")], ["contract", n.lookup("ScAddress")], ["key", n.lookup("ScVal")], ["durability", n.lookup("ContractDataDurability")], ["val", n.lookup("ScVal")]]), n.struct("ContractCodeCostInputs", [["ext", n.lookup("ExtensionPoint")], ["nInstructions", n.lookup("Uint32")], ["nFunctions", n.lookup("Uint32")], ["nGlobals", n.lookup("Uint32")], ["nTableEntries", n.lookup("Uint32")], ["nTypes", n.lookup("Uint32")], ["nDataSegments", n.lookup("Uint32")], ["nElemSegments", n.lookup("Uint32")], ["nImports", n.lookup("Uint32")], ["nExports", n.lookup("Uint32")], ["nDataSegmentBytes", n.lookup("Uint32")]]), n.struct("ContractCodeEntryV1", [["ext", n.lookup("ExtensionPoint")], ["costInputs", n.lookup("ContractCodeCostInputs")]]), n.union("ContractCodeEntryExt", { switchOn: n.int(), switchName: "v", switches: [[0, n.void()], [1, "v1"]], arms: { v1: n.lookup("ContractCodeEntryV1") } }), n.struct("ContractCodeEntry", [["ext", n.lookup("ContractCodeEntryExt")], ["hash", n.lookup("Hash")], ["code", n.varOpaque()]]), n.struct("TtlEntry", [["keyHash", n.lookup("Hash")], ["liveUntilLedgerSeq", n.lookup("Uint32")]]), n.union("LedgerEntryExtensionV1Ext", { switchOn: n.int(), switchName: "v", switches: [[0, n.void()]], arms: {} }), n.struct("LedgerEntryExtensionV1", [["sponsoringId", n.lookup("SponsorshipDescriptor")], ["ext", n.lookup("LedgerEntryExtensionV1Ext")]]), n.union("LedgerEntryData", { switchOn: n.lookup("LedgerEntryType"), switchName: "type", switches: [["account", "account"], ["trustline", "trustLine"], ["offer", "offer"], ["data", "data"], ["claimableBalance", "claimableBalance"], ["liquidityPool", "liquidityPool"], ["contractData", "contractData"], ["contractCode", "contractCode"], ["configSetting", "configSetting"], ["ttl", "ttl"]], arms: { account: n.lookup("AccountEntry"), trustLine: n.lookup("TrustLineEntry"), offer: n.lookup("OfferEntry"), data: n.lookup("DataEntry"), claimableBalance: n.lookup("ClaimableBalanceEntry"), liquidityPool: n.lookup("LiquidityPoolEntry"), contractData: n.lookup("ContractDataEntry"), contractCode: n.lookup("ContractCodeEntry"), configSetting: n.lookup("ConfigSettingEntry"), ttl: n.lookup("TtlEntry") } }), n.union("LedgerEntryExt", { switchOn: n.int(), switchName: "v", switches: [[0, n.void()], [1, "v1"]], arms: { v1: n.lookup("LedgerEntryExtensionV1") } }), n.struct("LedgerEntry", [["lastModifiedLedgerSeq", n.lookup("Uint32")], ["data", n.lookup("LedgerEntryData")], ["ext", n.lookup("LedgerEntryExt")]]), n.struct("LedgerKeyAccount", [["accountId", n.lookup("AccountId")]]), n.struct("LedgerKeyTrustLine", [["accountId", n.lookup("AccountId")], ["asset", n.lookup("TrustLineAsset")]]), n.struct("LedgerKeyOffer", [["sellerId", n.lookup("AccountId")], ["offerId", n.lookup("Int64")]]), n.struct("LedgerKeyData", [["accountId", n.lookup("AccountId")], ["dataName", n.lookup("String64")]]), n.struct("LedgerKeyClaimableBalance", [["balanceId", n.lookup("ClaimableBalanceId")]]), n.struct("LedgerKeyLiquidityPool", [["liquidityPoolId", n.lookup("PoolId")]]), n.struct("LedgerKeyContractData", [["contract", n.lookup("ScAddress")], ["key", n.lookup("ScVal")], ["durability", n.lookup("ContractDataDurability")]]), n.struct("LedgerKeyContractCode", [["hash", n.lookup("Hash")]]), n.struct("LedgerKeyConfigSetting", [["configSettingId", n.lookup("ConfigSettingId")]]), n.struct("LedgerKeyTtl", [["keyHash", n.lookup("Hash")]]), n.union("LedgerKey", { switchOn: n.lookup("LedgerEntryType"), switchName: "type", switches: [["account", "account"], ["trustline", "trustLine"], ["offer", "offer"], ["data", "data"], ["claimableBalance", "claimableBalance"], ["liquidityPool", "liquidityPool"], ["contractData", "contractData"], ["contractCode", "contractCode"], ["configSetting", "configSetting"], ["ttl", "ttl"]], arms: { account: n.lookup("LedgerKeyAccount"), trustLine: n.lookup("LedgerKeyTrustLine"), offer: n.lookup("LedgerKeyOffer"), data: n.lookup("LedgerKeyData"), claimableBalance: n.lookup("LedgerKeyClaimableBalance"), liquidityPool: n.lookup("LedgerKeyLiquidityPool"), contractData: n.lookup("LedgerKeyContractData"), contractCode: n.lookup("LedgerKeyContractCode"), configSetting: n.lookup("LedgerKeyConfigSetting"), ttl: n.lookup("LedgerKeyTtl") } }), n.enum("EnvelopeType", { envelopeTypeTxV0: 0, envelopeTypeScp: 1, envelopeTypeTx: 2, envelopeTypeAuth: 3, envelopeTypeScpvalue: 4, envelopeTypeTxFeeBump: 5, envelopeTypeOpId: 6, envelopeTypePoolRevokeOpId: 7, envelopeTypeContractId: 8, envelopeTypeSorobanAuthorization: 9 }), n.enum("BucketListType", { live: 0, hotArchive: 1 }), n.enum("BucketEntryType", { metaentry: -1, liveentry: 0, deadentry: 1, initentry: 2 }), n.enum("HotArchiveBucketEntryType", { hotArchiveMetaentry: -1, hotArchiveArchived: 0, hotArchiveLive: 1 }), n.union("BucketMetadataExt", { switchOn: n.int(), switchName: "v", switches: [[0, n.void()], [1, "bucketListType"]], arms: { bucketListType: n.lookup("BucketListType") } }), n.struct("BucketMetadata", [["ledgerVersion", n.lookup("Uint32")], ["ext", n.lookup("BucketMetadataExt")]]), n.union("BucketEntry", { switchOn: n.lookup("BucketEntryType"), switchName: "type", switches: [["liveentry", "liveEntry"], ["initentry", "liveEntry"], ["deadentry", "deadEntry"], ["metaentry", "metaEntry"]], arms: { liveEntry: n.lookup("LedgerEntry"), deadEntry: n.lookup("LedgerKey"), metaEntry: n.lookup("BucketMetadata") } }), n.union("HotArchiveBucketEntry", { switchOn: n.lookup("HotArchiveBucketEntryType"), switchName: "type", switches: [["hotArchiveArchived", "archivedEntry"], ["hotArchiveLive", "key"], ["hotArchiveMetaentry", "metaEntry"]], arms: { archivedEntry: n.lookup("LedgerEntry"), key: n.lookup("LedgerKey"), metaEntry: n.lookup("BucketMetadata") } }), n.typedef("UpgradeType", n.varOpaque(128)), n.enum("StellarValueType", { stellarValueBasic: 0, stellarValueSigned: 1 }), n.struct("LedgerCloseValueSignature", [["nodeId", n.lookup("NodeId")], ["signature", n.lookup("Signature")]]), n.union("StellarValueExt", { switchOn: n.lookup("StellarValueType"), switchName: "v", switches: [["stellarValueBasic", n.void()], ["stellarValueSigned", "lcValueSignature"]], arms: { lcValueSignature: n.lookup("LedgerCloseValueSignature") } }), n.struct("StellarValue", [["txSetHash", n.lookup("Hash")], ["closeTime", n.lookup("TimePoint")], ["upgrades", n.varArray(n.lookup("UpgradeType"), 6)], ["ext", n.lookup("StellarValueExt")]]), n.const("MASK_LEDGER_HEADER_FLAGS", 7), n.enum("LedgerHeaderFlags", { disableLiquidityPoolTradingFlag: 1, disableLiquidityPoolDepositFlag: 2, disableLiquidityPoolWithdrawalFlag: 4 }), n.union("LedgerHeaderExtensionV1Ext", { switchOn: n.int(), switchName: "v", switches: [[0, n.void()]], arms: {} }), n.struct("LedgerHeaderExtensionV1", [["flags", n.lookup("Uint32")], ["ext", n.lookup("LedgerHeaderExtensionV1Ext")]]), n.union("LedgerHeaderExt", { switchOn: n.int(), switchName: "v", switches: [[0, n.void()], [1, "v1"]], arms: { v1: n.lookup("LedgerHeaderExtensionV1") } }), n.struct("LedgerHeader", [["ledgerVersion", n.lookup("Uint32")], ["previousLedgerHash", n.lookup("Hash")], ["scpValue", n.lookup("StellarValue")], ["txSetResultHash", n.lookup("Hash")], ["bucketListHash", n.lookup("Hash")], ["ledgerSeq", n.lookup("Uint32")], ["totalCoins", n.lookup("Int64")], ["feePool", n.lookup("Int64")], ["inflationSeq", n.lookup("Uint32")], ["idPool", n.lookup("Uint64")], ["baseFee", n.lookup("Uint32")], ["baseReserve", n.lookup("Uint32")], ["maxTxSetSize", n.lookup("Uint32")], ["skipList", n.array(n.lookup("Hash"), 4)], ["ext", n.lookup("LedgerHeaderExt")]]), n.enum("LedgerUpgradeType", { ledgerUpgradeVersion: 1, ledgerUpgradeBaseFee: 2, ledgerUpgradeMaxTxSetSize: 3, ledgerUpgradeBaseReserve: 4, ledgerUpgradeFlags: 5, ledgerUpgradeConfig: 6, ledgerUpgradeMaxSorobanTxSetSize: 7 }), n.struct("ConfigUpgradeSetKey", [["contractId", n.lookup("ContractId")], ["contentHash", n.lookup("Hash")]]), n.union("LedgerUpgrade", { switchOn: n.lookup("LedgerUpgradeType"), switchName: "type", switches: [["ledgerUpgradeVersion", "newLedgerVersion"], ["ledgerUpgradeBaseFee", "newBaseFee"], ["ledgerUpgradeMaxTxSetSize", "newMaxTxSetSize"], ["ledgerUpgradeBaseReserve", "newBaseReserve"], ["ledgerUpgradeFlags", "newFlags"], ["ledgerUpgradeConfig", "newConfig"], ["ledgerUpgradeMaxSorobanTxSetSize", "newMaxSorobanTxSetSize"]], arms: { newLedgerVersion: n.lookup("Uint32"), newBaseFee: n.lookup("Uint32"), newMaxTxSetSize: n.lookup("Uint32"), newBaseReserve: n.lookup("Uint32"), newFlags: n.lookup("Uint32"), newConfig: n.lookup("ConfigUpgradeSetKey"), newMaxSorobanTxSetSize: n.lookup("Uint32") } }), n.struct("ConfigUpgradeSet", [["updatedEntry", n.varArray(n.lookup("ConfigSettingEntry"), 2147483647)]]), n.enum("TxSetComponentType", { txsetCompTxsMaybeDiscountedFee: 0 }), n.typedef("DependentTxCluster", n.varArray(n.lookup("TransactionEnvelope"), 2147483647)), n.typedef("ParallelTxExecutionStage", n.varArray(n.lookup("DependentTxCluster"), 2147483647)), n.struct("ParallelTxsComponent", [["baseFee", n.option(n.lookup("Int64"))], ["executionStages", n.varArray(n.lookup("ParallelTxExecutionStage"), 2147483647)]]), n.struct("TxSetComponentTxsMaybeDiscountedFee", [["baseFee", n.option(n.lookup("Int64"))], ["txes", n.varArray(n.lookup("TransactionEnvelope"), 2147483647)]]), n.union("TxSetComponent", { switchOn: n.lookup("TxSetComponentType"), switchName: "type", switches: [["txsetCompTxsMaybeDiscountedFee", "txsMaybeDiscountedFee"]], arms: { txsMaybeDiscountedFee: n.lookup("TxSetComponentTxsMaybeDiscountedFee") } }), n.union("TransactionPhase", { switchOn: n.int(), switchName: "v", switches: [[0, "v0Components"], [1, "parallelTxsComponent"]], arms: { v0Components: n.varArray(n.lookup("TxSetComponent"), 2147483647), parallelTxsComponent: n.lookup("ParallelTxsComponent") } }), n.struct("TransactionSet", [["previousLedgerHash", n.lookup("Hash")], ["txes", n.varArray(n.lookup("TransactionEnvelope"), 2147483647)]]), n.struct("TransactionSetV1", [["previousLedgerHash", n.lookup("Hash")], ["phases", n.varArray(n.lookup("TransactionPhase"), 2147483647)]]), n.union("GeneralizedTransactionSet", { switchOn: n.int(), switchName: "v", switches: [[1, "v1TxSet"]], arms: { v1TxSet: n.lookup("TransactionSetV1") } }), n.struct("TransactionResultPair", [["transactionHash", n.lookup("Hash")], ["result", n.lookup("TransactionResult")]]), n.struct("TransactionResultSet", [["results", n.varArray(n.lookup("TransactionResultPair"), 2147483647)]]), n.union("TransactionHistoryEntryExt", { switchOn: n.int(), switchName: "v", switches: [[0, n.void()], [1, "generalizedTxSet"]], arms: { generalizedTxSet: n.lookup("GeneralizedTransactionSet") } }), n.struct("TransactionHistoryEntry", [["ledgerSeq", n.lookup("Uint32")], ["txSet", n.lookup("TransactionSet")], ["ext", n.lookup("TransactionHistoryEntryExt")]]), n.union("TransactionHistoryResultEntryExt", { switchOn: n.int(), switchName: "v", switches: [[0, n.void()]], arms: {} }), n.struct("TransactionHistoryResultEntry", [["ledgerSeq", n.lookup("Uint32")], ["txResultSet", n.lookup("TransactionResultSet")], ["ext", n.lookup("TransactionHistoryResultEntryExt")]]), n.union("LedgerHeaderHistoryEntryExt", { switchOn: n.int(), switchName: "v", switches: [[0, n.void()]], arms: {} }), n.struct("LedgerHeaderHistoryEntry", [["hash", n.lookup("Hash")], ["header", n.lookup("LedgerHeader")], ["ext", n.lookup("LedgerHeaderHistoryEntryExt")]]), n.struct("LedgerScpMessages", [["ledgerSeq", n.lookup("Uint32")], ["messages", n.varArray(n.lookup("ScpEnvelope"), 2147483647)]]), n.struct("ScpHistoryEntryV0", [["quorumSets", n.varArray(n.lookup("ScpQuorumSet"), 2147483647)], ["ledgerMessages", n.lookup("LedgerScpMessages")]]), n.union("ScpHistoryEntry", { switchOn: n.int(), switchName: "v", switches: [[0, "v0"]], arms: { v0: n.lookup("ScpHistoryEntryV0") } }), n.enum("LedgerEntryChangeType", { ledgerEntryCreated: 0, ledgerEntryUpdated: 1, ledgerEntryRemoved: 2, ledgerEntryState: 3, ledgerEntryRestored: 4 }), n.union("LedgerEntryChange", { switchOn: n.lookup("LedgerEntryChangeType"), switchName: "type", switches: [["ledgerEntryCreated", "created"], ["ledgerEntryUpdated", "updated"], ["ledgerEntryRemoved", "removed"], ["ledgerEntryState", "state"], ["ledgerEntryRestored", "restored"]], arms: { created: n.lookup("LedgerEntry"), updated: n.lookup("LedgerEntry"), removed: n.lookup("LedgerKey"), state: n.lookup("LedgerEntry"), restored: n.lookup("LedgerEntry") } }), n.typedef("LedgerEntryChanges", n.varArray(n.lookup("LedgerEntryChange"), 2147483647)), n.struct("OperationMeta", [["changes", n.lookup("LedgerEntryChanges")]]), n.struct("TransactionMetaV1", [["txChanges", n.lookup("LedgerEntryChanges")], ["operations", n.varArray(n.lookup("OperationMeta"), 2147483647)]]), n.struct("TransactionMetaV2", [["txChangesBefore", n.lookup("LedgerEntryChanges")], ["operations", n.varArray(n.lookup("OperationMeta"), 2147483647)], ["txChangesAfter", n.lookup("LedgerEntryChanges")]]), n.enum("ContractEventType", { system: 0, contract: 1, diagnostic: 2 }), n.struct("ContractEventV0", [["topics", n.varArray(n.lookup("ScVal"), 2147483647)], ["data", n.lookup("ScVal")]]), n.union("ContractEventBody", { switchOn: n.int(), switchName: "v", switches: [[0, "v0"]], arms: { v0: n.lookup("ContractEventV0") } }), n.struct("ContractEvent", [["ext", n.lookup("ExtensionPoint")], ["contractId", n.option(n.lookup("ContractId"))], ["type", n.lookup("ContractEventType")], ["body", n.lookup("ContractEventBody")]]), n.struct("DiagnosticEvent", [["inSuccessfulContractCall", n.bool()], ["event", n.lookup("ContractEvent")]]), n.struct("SorobanTransactionMetaExtV1", [["ext", n.lookup("ExtensionPoint")], ["totalNonRefundableResourceFeeCharged", n.lookup("Int64")], ["totalRefundableResourceFeeCharged", n.lookup("Int64")], ["rentFeeCharged", n.lookup("Int64")]]), n.union("SorobanTransactionMetaExt", { switchOn: n.int(), switchName: "v", switches: [[0, n.void()], [1, "v1"]], arms: { v1: n.lookup("SorobanTransactionMetaExtV1") } }), n.struct("SorobanTransactionMeta", [["ext", n.lookup("SorobanTransactionMetaExt")], ["events", n.varArray(n.lookup("ContractEvent"), 2147483647)], ["returnValue", n.lookup("ScVal")], ["diagnosticEvents", n.varArray(n.lookup("DiagnosticEvent"), 2147483647)]]), n.struct("TransactionMetaV3", [["ext", n.lookup("ExtensionPoint")], ["txChangesBefore", n.lookup("LedgerEntryChanges")], ["operations", n.varArray(n.lookup("OperationMeta"), 2147483647)], ["txChangesAfter", n.lookup("LedgerEntryChanges")], ["sorobanMeta", n.option(n.lookup("SorobanTransactionMeta"))]]), n.struct("OperationMetaV2", [["ext", n.lookup("ExtensionPoint")], ["changes", n.lookup("LedgerEntryChanges")], ["events", n.varArray(n.lookup("ContractEvent"), 2147483647)]]), n.struct("SorobanTransactionMetaV2", [["ext", n.lookup("SorobanTransactionMetaExt")], ["returnValue", n.option(n.lookup("ScVal"))]]), n.enum("TransactionEventStage", { transactionEventStageBeforeAllTxes: 0, transactionEventStageAfterTx: 1, transactionEventStageAfterAllTxes: 2 }), n.struct("TransactionEvent", [["stage", n.lookup("TransactionEventStage")], ["event", n.lookup("ContractEvent")]]), n.struct("TransactionMetaV4", [["ext", n.lookup("ExtensionPoint")], ["txChangesBefore", n.lookup("LedgerEntryChanges")], ["operations", n.varArray(n.lookup("OperationMetaV2"), 2147483647)], ["txChangesAfter", n.lookup("LedgerEntryChanges")], ["sorobanMeta", n.option(n.lookup("SorobanTransactionMetaV2"))], ["events", n.varArray(n.lookup("TransactionEvent"), 2147483647)], ["diagnosticEvents", n.varArray(n.lookup("DiagnosticEvent"), 2147483647)]]), n.struct("InvokeHostFunctionSuccessPreImage", [["returnValue", n.lookup("ScVal")], ["events", n.varArray(n.lookup("ContractEvent"), 2147483647)]]), n.union("TransactionMeta", { switchOn: n.int(), switchName: "v", switches: [[0, "operations"], [1, "v1"], [2, "v2"], [3, "v3"], [4, "v4"]], arms: { operations: n.varArray(n.lookup("OperationMeta"), 2147483647), v1: n.lookup("TransactionMetaV1"), v2: n.lookup("TransactionMetaV2"), v3: n.lookup("TransactionMetaV3"), v4: n.lookup("TransactionMetaV4") } }), n.struct("TransactionResultMeta", [["result", n.lookup("TransactionResultPair")], ["feeProcessing", n.lookup("LedgerEntryChanges")], ["txApplyProcessing", n.lookup("TransactionMeta")]]), n.struct("TransactionResultMetaV1", [["ext", n.lookup("ExtensionPoint")], ["result", n.lookup("TransactionResultPair")], ["feeProcessing", n.lookup("LedgerEntryChanges")], ["txApplyProcessing", n.lookup("TransactionMeta")], ["postTxApplyFeeProcessing", n.lookup("LedgerEntryChanges")]]), n.struct("UpgradeEntryMeta", [["upgrade", n.lookup("LedgerUpgrade")], ["changes", n.lookup("LedgerEntryChanges")]]), n.struct("LedgerCloseMetaV0", [["ledgerHeader", n.lookup("LedgerHeaderHistoryEntry")], ["txSet", n.lookup("TransactionSet")], ["txProcessing", n.varArray(n.lookup("TransactionResultMeta"), 2147483647)], ["upgradesProcessing", n.varArray(n.lookup("UpgradeEntryMeta"), 2147483647)], ["scpInfo", n.varArray(n.lookup("ScpHistoryEntry"), 2147483647)]]), n.struct("LedgerCloseMetaExtV1", [["ext", n.lookup("ExtensionPoint")], ["sorobanFeeWrite1Kb", n.lookup("Int64")]]), n.union("LedgerCloseMetaExt", { switchOn: n.int(), switchName: "v", switches: [[0, n.void()], [1, "v1"]], arms: { v1: n.lookup("LedgerCloseMetaExtV1") } }), n.struct("LedgerCloseMetaV1", [["ext", n.lookup("LedgerCloseMetaExt")], ["ledgerHeader", n.lookup("LedgerHeaderHistoryEntry")], ["txSet", n.lookup("GeneralizedTransactionSet")], ["txProcessing", n.varArray(n.lookup("TransactionResultMeta"), 2147483647)], ["upgradesProcessing", n.varArray(n.lookup("UpgradeEntryMeta"), 2147483647)], ["scpInfo", n.varArray(n.lookup("ScpHistoryEntry"), 2147483647)], ["totalByteSizeOfLiveSorobanState", n.lookup("Uint64")], ["evictedKeys", n.varArray(n.lookup("LedgerKey"), 2147483647)], ["unused", n.varArray(n.lookup("LedgerEntry"), 2147483647)]]), n.struct("LedgerCloseMetaV2", [["ext", n.lookup("LedgerCloseMetaExt")], ["ledgerHeader", n.lookup("LedgerHeaderHistoryEntry")], ["txSet", n.lookup("GeneralizedTransactionSet")], ["txProcessing", n.varArray(n.lookup("TransactionResultMetaV1"), 2147483647)], ["upgradesProcessing", n.varArray(n.lookup("UpgradeEntryMeta"), 2147483647)], ["scpInfo", n.varArray(n.lookup("ScpHistoryEntry"), 2147483647)], ["totalByteSizeOfLiveSorobanState", n.lookup("Uint64")], ["evictedKeys", n.varArray(n.lookup("LedgerKey"), 2147483647)]]), n.union("LedgerCloseMeta", { switchOn: n.int(), switchName: "v", switches: [[0, "v0"], [1, "v1"], [2, "v2"]], arms: { v0: n.lookup("LedgerCloseMetaV0"), v1: n.lookup("LedgerCloseMetaV1"), v2: n.lookup("LedgerCloseMetaV2") } }), n.enum("ErrorCode", { errMisc: 0, errData: 1, errConf: 2, errAuth: 3, errLoad: 4 }), n.struct("Error", [["code", n.lookup("ErrorCode")], ["msg", n.string(100)]]), n.struct("SendMore", [["numMessages", n.lookup("Uint32")]]), n.struct("SendMoreExtended", [["numMessages", n.lookup("Uint32")], ["numBytes", n.lookup("Uint32")]]), n.struct("AuthCert", [["pubkey", n.lookup("Curve25519Public")], ["expiration", n.lookup("Uint64")], ["sig", n.lookup("Signature")]]), n.struct("Hello", [["ledgerVersion", n.lookup("Uint32")], ["overlayVersion", n.lookup("Uint32")], ["overlayMinVersion", n.lookup("Uint32")], ["networkId", n.lookup("Hash")], ["versionStr", n.string(100)], ["listeningPort", n.int()], ["peerId", n.lookup("NodeId")], ["cert", n.lookup("AuthCert")], ["nonce", n.lookup("Uint256")]]), n.const("AUTH_MSG_FLAG_FLOW_CONTROL_BYTES_REQUESTED", 200), n.struct("Auth", [["flags", n.int()]]), n.enum("IpAddrType", { iPv4: 0, iPv6: 1 }), n.union("PeerAddressIp", { switchOn: n.lookup("IpAddrType"), switchName: "type", switches: [["iPv4", "ipv4"], ["iPv6", "ipv6"]], arms: { ipv4: n.opaque(4), ipv6: n.opaque(16) } }), n.struct("PeerAddress", [["ip", n.lookup("PeerAddressIp")], ["port", n.lookup("Uint32")], ["numFailures", n.lookup("Uint32")]]), n.enum("MessageType", { errorMsg: 0, auth: 2, dontHave: 3, peers: 5, getTxSet: 6, txSet: 7, generalizedTxSet: 17, transaction: 8, getScpQuorumset: 9, scpQuorumset: 10, scpMessage: 11, getScpState: 12, hello: 13, sendMore: 16, sendMoreExtended: 20, floodAdvert: 18, floodDemand: 19, timeSlicedSurveyRequest: 21, timeSlicedSurveyResponse: 22, timeSlicedSurveyStartCollecting: 23, timeSlicedSurveyStopCollecting: 24 }), n.struct("DontHave", [["type", n.lookup("MessageType")], ["reqHash", n.lookup("Uint256")]]), n.enum("SurveyMessageCommandType", { timeSlicedSurveyTopology: 1 }), n.enum("SurveyMessageResponseType", { surveyTopologyResponseV2: 2 }), n.struct("TimeSlicedSurveyStartCollectingMessage", [["surveyorId", n.lookup("NodeId")], ["nonce", n.lookup("Uint32")], ["ledgerNum", n.lookup("Uint32")]]), n.struct("SignedTimeSlicedSurveyStartCollectingMessage", [["signature", n.lookup("Signature")], ["startCollecting", n.lookup("TimeSlicedSurveyStartCollectingMessage")]]), n.struct("TimeSlicedSurveyStopCollectingMessage", [["surveyorId", n.lookup("NodeId")], ["nonce", n.lookup("Uint32")], ["ledgerNum", n.lookup("Uint32")]]), n.struct("SignedTimeSlicedSurveyStopCollectingMessage", [["signature", n.lookup("Signature")], ["stopCollecting", n.lookup("TimeSlicedSurveyStopCollectingMessage")]]), n.struct("SurveyRequestMessage", [["surveyorPeerId", n.lookup("NodeId")], ["surveyedPeerId", n.lookup("NodeId")], ["ledgerNum", n.lookup("Uint32")], ["encryptionKey", n.lookup("Curve25519Public")], ["commandType", n.lookup("SurveyMessageCommandType")]]), n.struct("TimeSlicedSurveyRequestMessage", [["request", n.lookup("SurveyRequestMessage")], ["nonce", n.lookup("Uint32")], ["inboundPeersIndex", n.lookup("Uint32")], ["outboundPeersIndex", n.lookup("Uint32")]]), n.struct("SignedTimeSlicedSurveyRequestMessage", [["requestSignature", n.lookup("Signature")], ["request", n.lookup("TimeSlicedSurveyRequestMessage")]]), n.typedef("EncryptedBody", n.varOpaque(64e3)), n.struct("SurveyResponseMessage", [["surveyorPeerId", n.lookup("NodeId")], ["surveyedPeerId", n.lookup("NodeId")], ["ledgerNum", n.lookup("Uint32")], ["commandType", n.lookup("SurveyMessageCommandType")], ["encryptedBody", n.lookup("EncryptedBody")]]), n.struct("TimeSlicedSurveyResponseMessage", [["response", n.lookup("SurveyResponseMessage")], ["nonce", n.lookup("Uint32")]]), n.struct("SignedTimeSlicedSurveyResponseMessage", [["responseSignature", n.lookup("Signature")], ["response", n.lookup("TimeSlicedSurveyResponseMessage")]]), n.struct("PeerStats", [["id", n.lookup("NodeId")], ["versionStr", n.string(100)], ["messagesRead", n.lookup("Uint64")], ["messagesWritten", n.lookup("Uint64")], ["bytesRead", n.lookup("Uint64")], ["bytesWritten", n.lookup("Uint64")], ["secondsConnected", n.lookup("Uint64")], ["uniqueFloodBytesRecv", n.lookup("Uint64")], ["duplicateFloodBytesRecv", n.lookup("Uint64")], ["uniqueFetchBytesRecv", n.lookup("Uint64")], ["duplicateFetchBytesRecv", n.lookup("Uint64")], ["uniqueFloodMessageRecv", n.lookup("Uint64")], ["duplicateFloodMessageRecv", n.lookup("Uint64")], ["uniqueFetchMessageRecv", n.lookup("Uint64")], ["duplicateFetchMessageRecv", n.lookup("Uint64")]]), n.struct("TimeSlicedNodeData", [["addedAuthenticatedPeers", n.lookup("Uint32")], ["droppedAuthenticatedPeers", n.lookup("Uint32")], ["totalInboundPeerCount", n.lookup("Uint32")], ["totalOutboundPeerCount", n.lookup("Uint32")], ["p75ScpFirstToSelfLatencyMs", n.lookup("Uint32")], ["p75ScpSelfToOtherLatencyMs", n.lookup("Uint32")], ["lostSyncCount", n.lookup("Uint32")], ["isValidator", n.bool()], ["maxInboundPeerCount", n.lookup("Uint32")], ["maxOutboundPeerCount", n.lookup("Uint32")]]), n.struct("TimeSlicedPeerData", [["peerStats", n.lookup("PeerStats")], ["averageLatencyMs", n.lookup("Uint32")]]), n.typedef("TimeSlicedPeerDataList", n.varArray(n.lookup("TimeSlicedPeerData"), 25)), n.struct("TopologyResponseBodyV2", [["inboundPeers", n.lookup("TimeSlicedPeerDataList")], ["outboundPeers", n.lookup("TimeSlicedPeerDataList")], ["nodeData", n.lookup("TimeSlicedNodeData")]]), n.union("SurveyResponseBody", { switchOn: n.lookup("SurveyMessageResponseType"), switchName: "type", switches: [["surveyTopologyResponseV2", "topologyResponseBodyV2"]], arms: { topologyResponseBodyV2: n.lookup("TopologyResponseBodyV2") } }), n.const("TX_ADVERT_VECTOR_MAX_SIZE", 1e3), n.typedef("TxAdvertVector", n.varArray(n.lookup("Hash"), n.lookup("TX_ADVERT_VECTOR_MAX_SIZE"))), n.struct("FloodAdvert", [["txHashes", n.lookup("TxAdvertVector")]]), n.const("TX_DEMAND_VECTOR_MAX_SIZE", 1e3), n.typedef("TxDemandVector", n.varArray(n.lookup("Hash"), n.lookup("TX_DEMAND_VECTOR_MAX_SIZE"))), n.struct("FloodDemand", [["txHashes", n.lookup("TxDemandVector")]]), n.union("StellarMessage", { switchOn: n.lookup("MessageType"), switchName: "type", switches: [["errorMsg", "error"], ["hello", "hello"], ["auth", "auth"], ["dontHave", "dontHave"], ["peers", "peers"], ["getTxSet", "txSetHash"], ["txSet", "txSet"], ["generalizedTxSet", "generalizedTxSet"], ["transaction", "transaction"], ["timeSlicedSurveyRequest", "signedTimeSlicedSurveyRequestMessage"], ["timeSlicedSurveyResponse", "signedTimeSlicedSurveyResponseMessage"], ["timeSlicedSurveyStartCollecting", "signedTimeSlicedSurveyStartCollectingMessage"], ["timeSlicedSurveyStopCollecting", "signedTimeSlicedSurveyStopCollectingMessage"], ["getScpQuorumset", "qSetHash"], ["scpQuorumset", "qSet"], ["scpMessage", "envelope"], ["getScpState", "getScpLedgerSeq"], ["sendMore", "sendMoreMessage"], ["sendMoreExtended", "sendMoreExtendedMessage"], ["floodAdvert", "floodAdvert"], ["floodDemand", "floodDemand"]], arms: { error: n.lookup("Error"), hello: n.lookup("Hello"), auth: n.lookup("Auth"), dontHave: n.lookup("DontHave"), peers: n.varArray(n.lookup("PeerAddress"), 100), txSetHash: n.lookup("Uint256"), txSet: n.lookup("TransactionSet"), generalizedTxSet: n.lookup("GeneralizedTransactionSet"), transaction: n.lookup("TransactionEnvelope"), signedTimeSlicedSurveyRequestMessage: n.lookup("SignedTimeSlicedSurveyRequestMessage"), signedTimeSlicedSurveyResponseMessage: n.lookup("SignedTimeSlicedSurveyResponseMessage"), signedTimeSlicedSurveyStartCollectingMessage: n.lookup("SignedTimeSlicedSurveyStartCollectingMessage"), signedTimeSlicedSurveyStopCollectingMessage: n.lookup("SignedTimeSlicedSurveyStopCollectingMessage"), qSetHash: n.lookup("Uint256"), qSet: n.lookup("ScpQuorumSet"), envelope: n.lookup("ScpEnvelope"), getScpLedgerSeq: n.lookup("Uint32"), sendMoreMessage: n.lookup("SendMore"), sendMoreExtendedMessage: n.lookup("SendMoreExtended"), floodAdvert: n.lookup("FloodAdvert"), floodDemand: n.lookup("FloodDemand") } }), n.struct("AuthenticatedMessageV0", [["sequence", n.lookup("Uint64")], ["message", n.lookup("StellarMessage")], ["mac", n.lookup("HmacSha256Mac")]]), n.union("AuthenticatedMessage", { switchOn: n.lookup("Uint32"), switchName: "v", switches: [[0, "v0"]], arms: { v0: n.lookup("AuthenticatedMessageV0") } }), n.const("MAX_OPS_PER_TX", 100), n.union("LiquidityPoolParameters", { switchOn: n.lookup("LiquidityPoolType"), switchName: "type", switches: [["liquidityPoolConstantProduct", "constantProduct"]], arms: { constantProduct: n.lookup("LiquidityPoolConstantProductParameters") } }), n.struct("MuxedAccountMed25519", [["id", n.lookup("Uint64")], ["ed25519", n.lookup("Uint256")]]), n.union("MuxedAccount", { switchOn: n.lookup("CryptoKeyType"), switchName: "type", switches: [["keyTypeEd25519", "ed25519"], ["keyTypeMuxedEd25519", "med25519"]], arms: { ed25519: n.lookup("Uint256"), med25519: n.lookup("MuxedAccountMed25519") } }), n.struct("DecoratedSignature", [["hint", n.lookup("SignatureHint")], ["signature", n.lookup("Signature")]]), n.enum("OperationType", { createAccount: 0, payment: 1, pathPaymentStrictReceive: 2, manageSellOffer: 3, createPassiveSellOffer: 4, setOptions: 5, changeTrust: 6, allowTrust: 7, accountMerge: 8, inflation: 9, manageData: 10, bumpSequence: 11, manageBuyOffer: 12, pathPaymentStrictSend: 13, createClaimableBalance: 14, claimClaimableBalance: 15, beginSponsoringFutureReserves: 16, endSponsoringFutureReserves: 17, revokeSponsorship: 18, clawback: 19, clawbackClaimableBalance: 20, setTrustLineFlags: 21, liquidityPoolDeposit: 22, liquidityPoolWithdraw: 23, invokeHostFunction: 24, extendFootprintTtl: 25, restoreFootprint: 26 }), n.struct("CreateAccountOp", [["destination", n.lookup("AccountId")], ["startingBalance", n.lookup("Int64")]]), n.struct("PaymentOp", [["destination", n.lookup("MuxedAccount")], ["asset", n.lookup("Asset")], ["amount", n.lookup("Int64")]]), n.struct("PathPaymentStrictReceiveOp", [["sendAsset", n.lookup("Asset")], ["sendMax", n.lookup("Int64")], ["destination", n.lookup("MuxedAccount")], ["destAsset", n.lookup("Asset")], ["destAmount", n.lookup("Int64")], ["path", n.varArray(n.lookup("Asset"), 5)]]), n.struct("PathPaymentStrictSendOp", [["sendAsset", n.lookup("Asset")], ["sendAmount", n.lookup("Int64")], ["destination", n.lookup("MuxedAccount")], ["destAsset", n.lookup("Asset")], ["destMin", n.lookup("Int64")], ["path", n.varArray(n.lookup("Asset"), 5)]]), n.struct("ManageSellOfferOp", [["selling", n.lookup("Asset")], ["buying", n.lookup("Asset")], ["amount", n.lookup("Int64")], ["price", n.lookup("Price")], ["offerId", n.lookup("Int64")]]), n.struct("ManageBuyOfferOp", [["selling", n.lookup("Asset")], ["buying", n.lookup("Asset")], ["buyAmount", n.lookup("Int64")], ["price", n.lookup("Price")], ["offerId", n.lookup("Int64")]]), n.struct("CreatePassiveSellOfferOp", [["selling", n.lookup("Asset")], ["buying", n.lookup("Asset")], ["amount", n.lookup("Int64")], ["price", n.lookup("Price")]]), n.struct("SetOptionsOp", [["inflationDest", n.option(n.lookup("AccountId"))], ["clearFlags", n.option(n.lookup("Uint32"))], ["setFlags", n.option(n.lookup("Uint32"))], ["masterWeight", n.option(n.lookup("Uint32"))], ["lowThreshold", n.option(n.lookup("Uint32"))], ["medThreshold", n.option(n.lookup("Uint32"))], ["highThreshold", n.option(n.lookup("Uint32"))], ["homeDomain", n.option(n.lookup("String32"))], ["signer", n.option(n.lookup("Signer"))]]), n.union("ChangeTrustAsset", { switchOn: n.lookup("AssetType"), switchName: "type", switches: [["assetTypeNative", n.void()], ["assetTypeCreditAlphanum4", "alphaNum4"], ["assetTypeCreditAlphanum12", "alphaNum12"], ["assetTypePoolShare", "liquidityPool"]], arms: { alphaNum4: n.lookup("AlphaNum4"), alphaNum12: n.lookup("AlphaNum12"), liquidityPool: n.lookup("LiquidityPoolParameters") } }), n.struct("ChangeTrustOp", [["line", n.lookup("ChangeTrustAsset")], ["limit", n.lookup("Int64")]]), n.struct("AllowTrustOp", [["trustor", n.lookup("AccountId")], ["asset", n.lookup("AssetCode")], ["authorize", n.lookup("Uint32")]]), n.struct("ManageDataOp", [["dataName", n.lookup("String64")], ["dataValue", n.option(n.lookup("DataValue"))]]), n.struct("BumpSequenceOp", [["bumpTo", n.lookup("SequenceNumber")]]), n.struct("CreateClaimableBalanceOp", [["asset", n.lookup("Asset")], ["amount", n.lookup("Int64")], ["claimants", n.varArray(n.lookup("Claimant"), 10)]]), n.struct("ClaimClaimableBalanceOp", [["balanceId", n.lookup("ClaimableBalanceId")]]), n.struct("BeginSponsoringFutureReservesOp", [["sponsoredId", n.lookup("AccountId")]]), n.enum("RevokeSponsorshipType", { revokeSponsorshipLedgerEntry: 0, revokeSponsorshipSigner: 1 }), n.struct("RevokeSponsorshipOpSigner", [["accountId", n.lookup("AccountId")], ["signerKey", n.lookup("SignerKey")]]), n.union("RevokeSponsorshipOp", { switchOn: n.lookup("RevokeSponsorshipType"), switchName: "type", switches: [["revokeSponsorshipLedgerEntry", "ledgerKey"], ["revokeSponsorshipSigner", "signer"]], arms: { ledgerKey: n.lookup("LedgerKey"), signer: n.lookup("RevokeSponsorshipOpSigner") } }), n.struct("ClawbackOp", [["asset", n.lookup("Asset")], ["from", n.lookup("MuxedAccount")], ["amount", n.lookup("Int64")]]), n.struct("ClawbackClaimableBalanceOp", [["balanceId", n.lookup("ClaimableBalanceId")]]), n.struct("SetTrustLineFlagsOp", [["trustor", n.lookup("AccountId")], ["asset", n.lookup("Asset")], ["clearFlags", n.lookup("Uint32")], ["setFlags", n.lookup("Uint32")]]), n.const("LIQUIDITY_POOL_FEE_V18", 30), n.struct("LiquidityPoolDepositOp", [["liquidityPoolId", n.lookup("PoolId")], ["maxAmountA", n.lookup("Int64")], ["maxAmountB", n.lookup("Int64")], ["minPrice", n.lookup("Price")], ["maxPrice", n.lookup("Price")]]), n.struct("LiquidityPoolWithdrawOp", [["liquidityPoolId", n.lookup("PoolId")], ["amount", n.lookup("Int64")], ["minAmountA", n.lookup("Int64")], ["minAmountB", n.lookup("Int64")]]), n.enum("HostFunctionType", { hostFunctionTypeInvokeContract: 0, hostFunctionTypeCreateContract: 1, hostFunctionTypeUploadContractWasm: 2, hostFunctionTypeCreateContractV2: 3 }), n.enum("ContractIdPreimageType", { contractIdPreimageFromAddress: 0, contractIdPreimageFromAsset: 1 }), n.struct("ContractIdPreimageFromAddress", [["address", n.lookup("ScAddress")], ["salt", n.lookup("Uint256")]]), n.union("ContractIdPreimage", { switchOn: n.lookup("ContractIdPreimageType"), switchName: "type", switches: [["contractIdPreimageFromAddress", "fromAddress"], ["contractIdPreimageFromAsset", "fromAsset"]], arms: { fromAddress: n.lookup("ContractIdPreimageFromAddress"), fromAsset: n.lookup("Asset") } }), n.struct("CreateContractArgs", [["contractIdPreimage", n.lookup("ContractIdPreimage")], ["executable", n.lookup("ContractExecutable")]]), n.struct("CreateContractArgsV2", [["contractIdPreimage", n.lookup("ContractIdPreimage")], ["executable", n.lookup("ContractExecutable")], ["constructorArgs", n.varArray(n.lookup("ScVal"), 2147483647)]]), n.struct("InvokeContractArgs", [["contractAddress", n.lookup("ScAddress")], ["functionName", n.lookup("ScSymbol")], ["args", n.varArray(n.lookup("ScVal"), 2147483647)]]), n.union("HostFunction", { switchOn: n.lookup("HostFunctionType"), switchName: "type", switches: [["hostFunctionTypeInvokeContract", "invokeContract"], ["hostFunctionTypeCreateContract", "createContract"], ["hostFunctionTypeUploadContractWasm", "wasm"], ["hostFunctionTypeCreateContractV2", "createContractV2"]], arms: { invokeContract: n.lookup("InvokeContractArgs"), createContract: n.lookup("CreateContractArgs"), wasm: n.varOpaque(), createContractV2: n.lookup("CreateContractArgsV2") } }), n.enum("SorobanAuthorizedFunctionType", { sorobanAuthorizedFunctionTypeContractFn: 0, sorobanAuthorizedFunctionTypeCreateContractHostFn: 1, sorobanAuthorizedFunctionTypeCreateContractV2HostFn: 2 }), n.union("SorobanAuthorizedFunction", { switchOn: n.lookup("SorobanAuthorizedFunctionType"), switchName: "type", switches: [["sorobanAuthorizedFunctionTypeContractFn", "contractFn"], ["sorobanAuthorizedFunctionTypeCreateContractHostFn", "createContractHostFn"], ["sorobanAuthorizedFunctionTypeCreateContractV2HostFn", "createContractV2HostFn"]], arms: { contractFn: n.lookup("InvokeContractArgs"), createContractHostFn: n.lookup("CreateContractArgs"), createContractV2HostFn: n.lookup("CreateContractArgsV2") } }), n.struct("SorobanAuthorizedInvocation", [["function", n.lookup("SorobanAuthorizedFunction")], ["subInvocations", n.varArray(n.lookup("SorobanAuthorizedInvocation"), 2147483647)]]), n.struct("SorobanAddressCredentials", [["address", n.lookup("ScAddress")], ["nonce", n.lookup("Int64")], ["signatureExpirationLedger", n.lookup("Uint32")], ["signature", n.lookup("ScVal")]]), n.enum("SorobanCredentialsType", { sorobanCredentialsSourceAccount: 0, sorobanCredentialsAddress: 1 }), n.union("SorobanCredentials", { switchOn: n.lookup("SorobanCredentialsType"), switchName: "type", switches: [["sorobanCredentialsSourceAccount", n.void()], ["sorobanCredentialsAddress", "address"]], arms: { address: n.lookup("SorobanAddressCredentials") } }), n.struct("SorobanAuthorizationEntry", [["credentials", n.lookup("SorobanCredentials")], ["rootInvocation", n.lookup("SorobanAuthorizedInvocation")]]), n.typedef("SorobanAuthorizationEntries", n.varArray(n.lookup("SorobanAuthorizationEntry"), 2147483647)), n.struct("InvokeHostFunctionOp", [["hostFunction", n.lookup("HostFunction")], ["auth", n.varArray(n.lookup("SorobanAuthorizationEntry"), 2147483647)]]), n.struct("ExtendFootprintTtlOp", [["ext", n.lookup("ExtensionPoint")], ["extendTo", n.lookup("Uint32")]]), n.struct("RestoreFootprintOp", [["ext", n.lookup("ExtensionPoint")]]), n.union("OperationBody", { switchOn: n.lookup("OperationType"), switchName: "type", switches: [["createAccount", "createAccountOp"], ["payment", "paymentOp"], ["pathPaymentStrictReceive", "pathPaymentStrictReceiveOp"], ["manageSellOffer", "manageSellOfferOp"], ["createPassiveSellOffer", "createPassiveSellOfferOp"], ["setOptions", "setOptionsOp"], ["changeTrust", "changeTrustOp"], ["allowTrust", "allowTrustOp"], ["accountMerge", "destination"], ["inflation", n.void()], ["manageData", "manageDataOp"], ["bumpSequence", "bumpSequenceOp"], ["manageBuyOffer", "manageBuyOfferOp"], ["pathPaymentStrictSend", "pathPaymentStrictSendOp"], ["createClaimableBalance", "createClaimableBalanceOp"], ["claimClaimableBalance", "claimClaimableBalanceOp"], ["beginSponsoringFutureReserves", "beginSponsoringFutureReservesOp"], ["endSponsoringFutureReserves", n.void()], ["revokeSponsorship", "revokeSponsorshipOp"], ["clawback", "clawbackOp"], ["clawbackClaimableBalance", "clawbackClaimableBalanceOp"], ["setTrustLineFlags", "setTrustLineFlagsOp"], ["liquidityPoolDeposit", "liquidityPoolDepositOp"], ["liquidityPoolWithdraw", "liquidityPoolWithdrawOp"], ["invokeHostFunction", "invokeHostFunctionOp"], ["extendFootprintTtl", "extendFootprintTtlOp"], ["restoreFootprint", "restoreFootprintOp"]], arms: { createAccountOp: n.lookup("CreateAccountOp"), paymentOp: n.lookup("PaymentOp"), pathPaymentStrictReceiveOp: n.lookup("PathPaymentStrictReceiveOp"), manageSellOfferOp: n.lookup("ManageSellOfferOp"), createPassiveSellOfferOp: n.lookup("CreatePassiveSellOfferOp"), setOptionsOp: n.lookup("SetOptionsOp"), changeTrustOp: n.lookup("ChangeTrustOp"), allowTrustOp: n.lookup("AllowTrustOp"), destination: n.lookup("MuxedAccount"), manageDataOp: n.lookup("ManageDataOp"), bumpSequenceOp: n.lookup("BumpSequenceOp"), manageBuyOfferOp: n.lookup("ManageBuyOfferOp"), pathPaymentStrictSendOp: n.lookup("PathPaymentStrictSendOp"), createClaimableBalanceOp: n.lookup("CreateClaimableBalanceOp"), claimClaimableBalanceOp: n.lookup("ClaimClaimableBalanceOp"), beginSponsoringFutureReservesOp: n.lookup("BeginSponsoringFutureReservesOp"), revokeSponsorshipOp: n.lookup("RevokeSponsorshipOp"), clawbackOp: n.lookup("ClawbackOp"), clawbackClaimableBalanceOp: n.lookup("ClawbackClaimableBalanceOp"), setTrustLineFlagsOp: n.lookup("SetTrustLineFlagsOp"), liquidityPoolDepositOp: n.lookup("LiquidityPoolDepositOp"), liquidityPoolWithdrawOp: n.lookup("LiquidityPoolWithdrawOp"), invokeHostFunctionOp: n.lookup("InvokeHostFunctionOp"), extendFootprintTtlOp: n.lookup("ExtendFootprintTtlOp"), restoreFootprintOp: n.lookup("RestoreFootprintOp") } }), n.struct("Operation", [["sourceAccount", n.option(n.lookup("MuxedAccount"))], ["body", n.lookup("OperationBody")]]), n.struct("HashIdPreimageOperationId", [["sourceAccount", n.lookup("AccountId")], ["seqNum", n.lookup("SequenceNumber")], ["opNum", n.lookup("Uint32")]]), n.struct("HashIdPreimageRevokeId", [["sourceAccount", n.lookup("AccountId")], ["seqNum", n.lookup("SequenceNumber")], ["opNum", n.lookup("Uint32")], ["liquidityPoolId", n.lookup("PoolId")], ["asset", n.lookup("Asset")]]), n.struct("HashIdPreimageContractId", [["networkId", n.lookup("Hash")], ["contractIdPreimage", n.lookup("ContractIdPreimage")]]), n.struct("HashIdPreimageSorobanAuthorization", [["networkId", n.lookup("Hash")], ["nonce", n.lookup("Int64")], ["signatureExpirationLedger", n.lookup("Uint32")], ["invocation", n.lookup("SorobanAuthorizedInvocation")]]), n.union("HashIdPreimage", { switchOn: n.lookup("EnvelopeType"), switchName: "type", switches: [["envelopeTypeOpId", "operationId"], ["envelopeTypePoolRevokeOpId", "revokeId"], ["envelopeTypeContractId", "contractId"], ["envelopeTypeSorobanAuthorization", "sorobanAuthorization"]], arms: { operationId: n.lookup("HashIdPreimageOperationId"), revokeId: n.lookup("HashIdPreimageRevokeId"), contractId: n.lookup("HashIdPreimageContractId"), sorobanAuthorization: n.lookup("HashIdPreimageSorobanAuthorization") } }), n.enum("MemoType", { memoNone: 0, memoText: 1, memoId: 2, memoHash: 3, memoReturn: 4 }), n.union("Memo", { switchOn: n.lookup("MemoType"), switchName: "type", switches: [["memoNone", n.void()], ["memoText", "text"], ["memoId", "id"], ["memoHash", "hash"], ["memoReturn", "retHash"]], arms: { text: n.string(28), id: n.lookup("Uint64"), hash: n.lookup("Hash"), retHash: n.lookup("Hash") } }), n.struct("TimeBounds", [["minTime", n.lookup("TimePoint")], ["maxTime", n.lookup("TimePoint")]]), n.struct("LedgerBounds", [["minLedger", n.lookup("Uint32")], ["maxLedger", n.lookup("Uint32")]]), n.struct("PreconditionsV2", [["timeBounds", n.option(n.lookup("TimeBounds"))], ["ledgerBounds", n.option(n.lookup("LedgerBounds"))], ["minSeqNum", n.option(n.lookup("SequenceNumber"))], ["minSeqAge", n.lookup("Duration")], ["minSeqLedgerGap", n.lookup("Uint32")], ["extraSigners", n.varArray(n.lookup("SignerKey"), 2)]]), n.enum("PreconditionType", { precondNone: 0, precondTime: 1, precondV2: 2 }), n.union("Preconditions", { switchOn: n.lookup("PreconditionType"), switchName: "type", switches: [["precondNone", n.void()], ["precondTime", "timeBounds"], ["precondV2", "v2"]], arms: { timeBounds: n.lookup("TimeBounds"), v2: n.lookup("PreconditionsV2") } }), n.struct("LedgerFootprint", [["readOnly", n.varArray(n.lookup("LedgerKey"), 2147483647)], ["readWrite", n.varArray(n.lookup("LedgerKey"), 2147483647)]]), n.struct("SorobanResources", [["footprint", n.lookup("LedgerFootprint")], ["instructions", n.lookup("Uint32")], ["diskReadBytes", n.lookup("Uint32")], ["writeBytes", n.lookup("Uint32")]]), n.struct("SorobanResourcesExtV0", [["archivedSorobanEntries", n.varArray(n.lookup("Uint32"), 2147483647)]]), n.union("SorobanTransactionDataExt", { switchOn: n.int(), switchName: "v", switches: [[0, n.void()], [1, "resourceExt"]], arms: { resourceExt: n.lookup("SorobanResourcesExtV0") } }), n.struct("SorobanTransactionData", [["ext", n.lookup("SorobanTransactionDataExt")], ["resources", n.lookup("SorobanResources")], ["resourceFee", n.lookup("Int64")]]), n.union("TransactionV0Ext", { switchOn: n.int(), switchName: "v", switches: [[0, n.void()]], arms: {} }), n.struct("TransactionV0", [["sourceAccountEd25519", n.lookup("Uint256")], ["fee", n.lookup("Uint32")], ["seqNum", n.lookup("SequenceNumber")], ["timeBounds", n.option(n.lookup("TimeBounds"))], ["memo", n.lookup("Memo")], ["operations", n.varArray(n.lookup("Operation"), n.lookup("MAX_OPS_PER_TX"))], ["ext", n.lookup("TransactionV0Ext")]]), n.struct("TransactionV0Envelope", [["tx", n.lookup("TransactionV0")], ["signatures", n.varArray(n.lookup("DecoratedSignature"), 20)]]), n.union("TransactionExt", { switchOn: n.int(), switchName: "v", switches: [[0, n.void()], [1, "sorobanData"]], arms: { sorobanData: n.lookup("SorobanTransactionData") } }), n.struct("Transaction", [["sourceAccount", n.lookup("MuxedAccount")], ["fee", n.lookup("Uint32")], ["seqNum", n.lookup("SequenceNumber")], ["cond", n.lookup("Preconditions")], ["memo", n.lookup("Memo")], ["operations", n.varArray(n.lookup("Operation"), n.lookup("MAX_OPS_PER_TX"))], ["ext", n.lookup("TransactionExt")]]), n.struct("TransactionV1Envelope", [["tx", n.lookup("Transaction")], ["signatures", n.varArray(n.lookup("DecoratedSignature"), 20)]]), n.union("FeeBumpTransactionInnerTx", { switchOn: n.lookup("EnvelopeType"), switchName: "type", switches: [["envelopeTypeTx", "v1"]], arms: { v1: n.lookup("TransactionV1Envelope") } }), n.union("FeeBumpTransactionExt", { switchOn: n.int(), switchName: "v", switches: [[0, n.void()]], arms: {} }), n.struct("FeeBumpTransaction", [["feeSource", n.lookup("MuxedAccount")], ["fee", n.lookup("Int64")], ["innerTx", n.lookup("FeeBumpTransactionInnerTx")], ["ext", n.lookup("FeeBumpTransactionExt")]]), n.struct("FeeBumpTransactionEnvelope", [["tx", n.lookup("FeeBumpTransaction")], ["signatures", n.varArray(n.lookup("DecoratedSignature"), 20)]]), n.union("TransactionEnvelope", { switchOn: n.lookup("EnvelopeType"), switchName: "type", switches: [["envelopeTypeTxV0", "v0"], ["envelopeTypeTx", "v1"], ["envelopeTypeTxFeeBump", "feeBump"]], arms: { v0: n.lookup("TransactionV0Envelope"), v1: n.lookup("TransactionV1Envelope"), feeBump: n.lookup("FeeBumpTransactionEnvelope") } }), n.union("TransactionSignaturePayloadTaggedTransaction", { switchOn: n.lookup("EnvelopeType"), switchName: "type", switches: [["envelopeTypeTx", "tx"], ["envelopeTypeTxFeeBump", "feeBump"]], arms: { tx: n.lookup("Transaction"), feeBump: n.lookup("FeeBumpTransaction") } }), n.struct("TransactionSignaturePayload", [["networkId", n.lookup("Hash")], ["taggedTransaction", n.lookup("TransactionSignaturePayloadTaggedTransaction")]]), n.enum("ClaimAtomType", { claimAtomTypeV0: 0, claimAtomTypeOrderBook: 1, claimAtomTypeLiquidityPool: 2 }), n.struct("ClaimOfferAtomV0", [["sellerEd25519", n.lookup("Uint256")], ["offerId", n.lookup("Int64")], ["assetSold", n.lookup("Asset")], ["amountSold", n.lookup("Int64")], ["assetBought", n.lookup("Asset")], ["amountBought", n.lookup("Int64")]]), n.struct("ClaimOfferAtom", [["sellerId", n.lookup("AccountId")], ["offerId", n.lookup("Int64")], ["assetSold", n.lookup("Asset")], ["amountSold", n.lookup("Int64")], ["assetBought", n.lookup("Asset")], ["amountBought", n.lookup("Int64")]]), n.struct("ClaimLiquidityAtom", [["liquidityPoolId", n.lookup("PoolId")], ["assetSold", n.lookup("Asset")], ["amountSold", n.lookup("Int64")], ["assetBought", n.lookup("Asset")], ["amountBought", n.lookup("Int64")]]), n.union("ClaimAtom", { switchOn: n.lookup("ClaimAtomType"), switchName: "type", switches: [["claimAtomTypeV0", "v0"], ["claimAtomTypeOrderBook", "orderBook"], ["claimAtomTypeLiquidityPool", "liquidityPool"]], arms: { v0: n.lookup("ClaimOfferAtomV0"), orderBook: n.lookup("ClaimOfferAtom"), liquidityPool: n.lookup("ClaimLiquidityAtom") } }), n.enum("CreateAccountResultCode", { createAccountSuccess: 0, createAccountMalformed: -1, createAccountUnderfunded: -2, createAccountLowReserve: -3, createAccountAlreadyExist: -4 }), n.union("CreateAccountResult", { switchOn: n.lookup("CreateAccountResultCode"), switchName: "code", switches: [["createAccountSuccess", n.void()], ["createAccountMalformed", n.void()], ["createAccountUnderfunded", n.void()], ["createAccountLowReserve", n.void()], ["createAccountAlreadyExist", n.void()]], arms: {} }), n.enum("PaymentResultCode", { paymentSuccess: 0, paymentMalformed: -1, paymentUnderfunded: -2, paymentSrcNoTrust: -3, paymentSrcNotAuthorized: -4, paymentNoDestination: -5, paymentNoTrust: -6, paymentNotAuthorized: -7, paymentLineFull: -8, paymentNoIssuer: -9 }), n.union("PaymentResult", { switchOn: n.lookup("PaymentResultCode"), switchName: "code", switches: [["paymentSuccess", n.void()], ["paymentMalformed", n.void()], ["paymentUnderfunded", n.void()], ["paymentSrcNoTrust", n.void()], ["paymentSrcNotAuthorized", n.void()], ["paymentNoDestination", n.void()], ["paymentNoTrust", n.void()], ["paymentNotAuthorized", n.void()], ["paymentLineFull", n.void()], ["paymentNoIssuer", n.void()]], arms: {} }), n.enum("PathPaymentStrictReceiveResultCode", { pathPaymentStrictReceiveSuccess: 0, pathPaymentStrictReceiveMalformed: -1, pathPaymentStrictReceiveUnderfunded: -2, pathPaymentStrictReceiveSrcNoTrust: -3, pathPaymentStrictReceiveSrcNotAuthorized: -4, pathPaymentStrictReceiveNoDestination: -5, pathPaymentStrictReceiveNoTrust: -6, pathPaymentStrictReceiveNotAuthorized: -7, pathPaymentStrictReceiveLineFull: -8, pathPaymentStrictReceiveNoIssuer: -9, pathPaymentStrictReceiveTooFewOffers: -10, pathPaymentStrictReceiveOfferCrossSelf: -11, pathPaymentStrictReceiveOverSendmax: -12 }), n.struct("SimplePaymentResult", [["destination", n.lookup("AccountId")], ["asset", n.lookup("Asset")], ["amount", n.lookup("Int64")]]), n.struct("PathPaymentStrictReceiveResultSuccess", [["offers", n.varArray(n.lookup("ClaimAtom"), 2147483647)], ["last", n.lookup("SimplePaymentResult")]]), n.union("PathPaymentStrictReceiveResult", { switchOn: n.lookup("PathPaymentStrictReceiveResultCode"), switchName: "code", switches: [["pathPaymentStrictReceiveSuccess", "success"], ["pathPaymentStrictReceiveMalformed", n.void()], ["pathPaymentStrictReceiveUnderfunded", n.void()], ["pathPaymentStrictReceiveSrcNoTrust", n.void()], ["pathPaymentStrictReceiveSrcNotAuthorized", n.void()], ["pathPaymentStrictReceiveNoDestination", n.void()], ["pathPaymentStrictReceiveNoTrust", n.void()], ["pathPaymentStrictReceiveNotAuthorized", n.void()], ["pathPaymentStrictReceiveLineFull", n.void()], ["pathPaymentStrictReceiveNoIssuer", "noIssuer"], ["pathPaymentStrictReceiveTooFewOffers", n.void()], ["pathPaymentStrictReceiveOfferCrossSelf", n.void()], ["pathPaymentStrictReceiveOverSendmax", n.void()]], arms: { success: n.lookup("PathPaymentStrictReceiveResultSuccess"), noIssuer: n.lookup("Asset") } }), n.enum("PathPaymentStrictSendResultCode", { pathPaymentStrictSendSuccess: 0, pathPaymentStrictSendMalformed: -1, pathPaymentStrictSendUnderfunded: -2, pathPaymentStrictSendSrcNoTrust: -3, pathPaymentStrictSendSrcNotAuthorized: -4, pathPaymentStrictSendNoDestination: -5, pathPaymentStrictSendNoTrust: -6, pathPaymentStrictSendNotAuthorized: -7, pathPaymentStrictSendLineFull: -8, pathPaymentStrictSendNoIssuer: -9, pathPaymentStrictSendTooFewOffers: -10, pathPaymentStrictSendOfferCrossSelf: -11, pathPaymentStrictSendUnderDestmin: -12 }), n.struct("PathPaymentStrictSendResultSuccess", [["offers", n.varArray(n.lookup("ClaimAtom"), 2147483647)], ["last", n.lookup("SimplePaymentResult")]]), n.union("PathPaymentStrictSendResult", { switchOn: n.lookup("PathPaymentStrictSendResultCode"), switchName: "code", switches: [["pathPaymentStrictSendSuccess", "success"], ["pathPaymentStrictSendMalformed", n.void()], ["pathPaymentStrictSendUnderfunded", n.void()], ["pathPaymentStrictSendSrcNoTrust", n.void()], ["pathPaymentStrictSendSrcNotAuthorized", n.void()], ["pathPaymentStrictSendNoDestination", n.void()], ["pathPaymentStrictSendNoTrust", n.void()], ["pathPaymentStrictSendNotAuthorized", n.void()], ["pathPaymentStrictSendLineFull", n.void()], ["pathPaymentStrictSendNoIssuer", "noIssuer"], ["pathPaymentStrictSendTooFewOffers", n.void()], ["pathPaymentStrictSendOfferCrossSelf", n.void()], ["pathPaymentStrictSendUnderDestmin", n.void()]], arms: { success: n.lookup("PathPaymentStrictSendResultSuccess"), noIssuer: n.lookup("Asset") } }), n.enum("ManageSellOfferResultCode", { manageSellOfferSuccess: 0, manageSellOfferMalformed: -1, manageSellOfferSellNoTrust: -2, manageSellOfferBuyNoTrust: -3, manageSellOfferSellNotAuthorized: -4, manageSellOfferBuyNotAuthorized: -5, manageSellOfferLineFull: -6, manageSellOfferUnderfunded: -7, manageSellOfferCrossSelf: -8, manageSellOfferSellNoIssuer: -9, manageSellOfferBuyNoIssuer: -10, manageSellOfferNotFound: -11, manageSellOfferLowReserve: -12 }), n.enum("ManageOfferEffect", { manageOfferCreated: 0, manageOfferUpdated: 1, manageOfferDeleted: 2 }), n.union("ManageOfferSuccessResultOffer", { switchOn: n.lookup("ManageOfferEffect"), switchName: "effect", switches: [["manageOfferCreated", "offer"], ["manageOfferUpdated", "offer"], ["manageOfferDeleted", n.void()]], arms: { offer: n.lookup("OfferEntry") } }), n.struct("ManageOfferSuccessResult", [["offersClaimed", n.varArray(n.lookup("ClaimAtom"), 2147483647)], ["offer", n.lookup("ManageOfferSuccessResultOffer")]]), n.union("ManageSellOfferResult", { switchOn: n.lookup("ManageSellOfferResultCode"), switchName: "code", switches: [["manageSellOfferSuccess", "success"], ["manageSellOfferMalformed", n.void()], ["manageSellOfferSellNoTrust", n.void()], ["manageSellOfferBuyNoTrust", n.void()], ["manageSellOfferSellNotAuthorized", n.void()], ["manageSellOfferBuyNotAuthorized", n.void()], ["manageSellOfferLineFull", n.void()], ["manageSellOfferUnderfunded", n.void()], ["manageSellOfferCrossSelf", n.void()], ["manageSellOfferSellNoIssuer", n.void()], ["manageSellOfferBuyNoIssuer", n.void()], ["manageSellOfferNotFound", n.void()], ["manageSellOfferLowReserve", n.void()]], arms: { success: n.lookup("ManageOfferSuccessResult") } }), n.enum("ManageBuyOfferResultCode", { manageBuyOfferSuccess: 0, manageBuyOfferMalformed: -1, manageBuyOfferSellNoTrust: -2, manageBuyOfferBuyNoTrust: -3, manageBuyOfferSellNotAuthorized: -4, manageBuyOfferBuyNotAuthorized: -5, manageBuyOfferLineFull: -6, manageBuyOfferUnderfunded: -7, manageBuyOfferCrossSelf: -8, manageBuyOfferSellNoIssuer: -9, manageBuyOfferBuyNoIssuer: -10, manageBuyOfferNotFound: -11, manageBuyOfferLowReserve: -12 }), n.union("ManageBuyOfferResult", { switchOn: n.lookup("ManageBuyOfferResultCode"), switchName: "code", switches: [["manageBuyOfferSuccess", "success"], ["manageBuyOfferMalformed", n.void()], ["manageBuyOfferSellNoTrust", n.void()], ["manageBuyOfferBuyNoTrust", n.void()], ["manageBuyOfferSellNotAuthorized", n.void()], ["manageBuyOfferBuyNotAuthorized", n.void()], ["manageBuyOfferLineFull", n.void()], ["manageBuyOfferUnderfunded", n.void()], ["manageBuyOfferCrossSelf", n.void()], ["manageBuyOfferSellNoIssuer", n.void()], ["manageBuyOfferBuyNoIssuer", n.void()], ["manageBuyOfferNotFound", n.void()], ["manageBuyOfferLowReserve", n.void()]], arms: { success: n.lookup("ManageOfferSuccessResult") } }), n.enum("SetOptionsResultCode", { setOptionsSuccess: 0, setOptionsLowReserve: -1, setOptionsTooManySigners: -2, setOptionsBadFlags: -3, setOptionsInvalidInflation: -4, setOptionsCantChange: -5, setOptionsUnknownFlag: -6, setOptionsThresholdOutOfRange: -7, setOptionsBadSigner: -8, setOptionsInvalidHomeDomain: -9, setOptionsAuthRevocableRequired: -10 }), n.union("SetOptionsResult", { switchOn: n.lookup("SetOptionsResultCode"), switchName: "code", switches: [["setOptionsSuccess", n.void()], ["setOptionsLowReserve", n.void()], ["setOptionsTooManySigners", n.void()], ["setOptionsBadFlags", n.void()], ["setOptionsInvalidInflation", n.void()], ["setOptionsCantChange", n.void()], ["setOptionsUnknownFlag", n.void()], ["setOptionsThresholdOutOfRange", n.void()], ["setOptionsBadSigner", n.void()], ["setOptionsInvalidHomeDomain", n.void()], ["setOptionsAuthRevocableRequired", n.void()]], arms: {} }), n.enum("ChangeTrustResultCode", { changeTrustSuccess: 0, changeTrustMalformed: -1, changeTrustNoIssuer: -2, changeTrustInvalidLimit: -3, changeTrustLowReserve: -4, changeTrustSelfNotAllowed: -5, changeTrustTrustLineMissing: -6, changeTrustCannotDelete: -7, changeTrustNotAuthMaintainLiabilities: -8 }), n.union("ChangeTrustResult", { switchOn: n.lookup("ChangeTrustResultCode"), switchName: "code", switches: [["changeTrustSuccess", n.void()], ["changeTrustMalformed", n.void()], ["changeTrustNoIssuer", n.void()], ["changeTrustInvalidLimit", n.void()], ["changeTrustLowReserve", n.void()], ["changeTrustSelfNotAllowed", n.void()], ["changeTrustTrustLineMissing", n.void()], ["changeTrustCannotDelete", n.void()], ["changeTrustNotAuthMaintainLiabilities", n.void()]], arms: {} }), n.enum("AllowTrustResultCode", { allowTrustSuccess: 0, allowTrustMalformed: -1, allowTrustNoTrustLine: -2, allowTrustTrustNotRequired: -3, allowTrustCantRevoke: -4, allowTrustSelfNotAllowed: -5, allowTrustLowReserve: -6 }), n.union("AllowTrustResult", { switchOn: n.lookup("AllowTrustResultCode"), switchName: "code", switches: [["allowTrustSuccess", n.void()], ["allowTrustMalformed", n.void()], ["allowTrustNoTrustLine", n.void()], ["allowTrustTrustNotRequired", n.void()], ["allowTrustCantRevoke", n.void()], ["allowTrustSelfNotAllowed", n.void()], ["allowTrustLowReserve", n.void()]], arms: {} }), n.enum("AccountMergeResultCode", { accountMergeSuccess: 0, accountMergeMalformed: -1, accountMergeNoAccount: -2, accountMergeImmutableSet: -3, accountMergeHasSubEntries: -4, accountMergeSeqnumTooFar: -5, accountMergeDestFull: -6, accountMergeIsSponsor: -7 }), n.union("AccountMergeResult", { switchOn: n.lookup("AccountMergeResultCode"), switchName: "code", switches: [["accountMergeSuccess", "sourceAccountBalance"], ["accountMergeMalformed", n.void()], ["accountMergeNoAccount", n.void()], ["accountMergeImmutableSet", n.void()], ["accountMergeHasSubEntries", n.void()], ["accountMergeSeqnumTooFar", n.void()], ["accountMergeDestFull", n.void()], ["accountMergeIsSponsor", n.void()]], arms: { sourceAccountBalance: n.lookup("Int64") } }), n.enum("InflationResultCode", { inflationSuccess: 0, inflationNotTime: -1 }), n.struct("InflationPayout", [["destination", n.lookup("AccountId")], ["amount", n.lookup("Int64")]]), n.union("InflationResult", { switchOn: n.lookup("InflationResultCode"), switchName: "code", switches: [["inflationSuccess", "payouts"], ["inflationNotTime", n.void()]], arms: { payouts: n.varArray(n.lookup("InflationPayout"), 2147483647) } }), n.enum("ManageDataResultCode", { manageDataSuccess: 0, manageDataNotSupportedYet: -1, manageDataNameNotFound: -2, manageDataLowReserve: -3, manageDataInvalidName: -4 }), n.union("ManageDataResult", { switchOn: n.lookup("ManageDataResultCode"), switchName: "code", switches: [["manageDataSuccess", n.void()], ["manageDataNotSupportedYet", n.void()], ["manageDataNameNotFound", n.void()], ["manageDataLowReserve", n.void()], ["manageDataInvalidName", n.void()]], arms: {} }), n.enum("BumpSequenceResultCode", { bumpSequenceSuccess: 0, bumpSequenceBadSeq: -1 }), n.union("BumpSequenceResult", { switchOn: n.lookup("BumpSequenceResultCode"), switchName: "code", switches: [["bumpSequenceSuccess", n.void()], ["bumpSequenceBadSeq", n.void()]], arms: {} }), n.enum("CreateClaimableBalanceResultCode", { createClaimableBalanceSuccess: 0, createClaimableBalanceMalformed: -1, createClaimableBalanceLowReserve: -2, createClaimableBalanceNoTrust: -3, createClaimableBalanceNotAuthorized: -4, createClaimableBalanceUnderfunded: -5 }), n.union("CreateClaimableBalanceResult", { switchOn: n.lookup("CreateClaimableBalanceResultCode"), switchName: "code", switches: [["createClaimableBalanceSuccess", "balanceId"], ["createClaimableBalanceMalformed", n.void()], ["createClaimableBalanceLowReserve", n.void()], ["createClaimableBalanceNoTrust", n.void()], ["createClaimableBalanceNotAuthorized", n.void()], ["createClaimableBalanceUnderfunded", n.void()]], arms: { balanceId: n.lookup("ClaimableBalanceId") } }), n.enum("ClaimClaimableBalanceResultCode", { claimClaimableBalanceSuccess: 0, claimClaimableBalanceDoesNotExist: -1, claimClaimableBalanceCannotClaim: -2, claimClaimableBalanceLineFull: -3, claimClaimableBalanceNoTrust: -4, claimClaimableBalanceNotAuthorized: -5 }), n.union("ClaimClaimableBalanceResult", { switchOn: n.lookup("ClaimClaimableBalanceResultCode"), switchName: "code", switches: [["claimClaimableBalanceSuccess", n.void()], ["claimClaimableBalanceDoesNotExist", n.void()], ["claimClaimableBalanceCannotClaim", n.void()], ["claimClaimableBalanceLineFull", n.void()], ["claimClaimableBalanceNoTrust", n.void()], ["claimClaimableBalanceNotAuthorized", n.void()]], arms: {} }), n.enum("BeginSponsoringFutureReservesResultCode", { beginSponsoringFutureReservesSuccess: 0, beginSponsoringFutureReservesMalformed: -1, beginSponsoringFutureReservesAlreadySponsored: -2, beginSponsoringFutureReservesRecursive: -3 }), n.union("BeginSponsoringFutureReservesResult", { switchOn: n.lookup("BeginSponsoringFutureReservesResultCode"), switchName: "code", switches: [["beginSponsoringFutureReservesSuccess", n.void()], ["beginSponsoringFutureReservesMalformed", n.void()], ["beginSponsoringFutureReservesAlreadySponsored", n.void()], ["beginSponsoringFutureReservesRecursive", n.void()]], arms: {} }), n.enum("EndSponsoringFutureReservesResultCode", { endSponsoringFutureReservesSuccess: 0, endSponsoringFutureReservesNotSponsored: -1 }), n.union("EndSponsoringFutureReservesResult", { switchOn: n.lookup("EndSponsoringFutureReservesResultCode"), switchName: "code", switches: [["endSponsoringFutureReservesSuccess", n.void()], ["endSponsoringFutureReservesNotSponsored", n.void()]], arms: {} }), n.enum("RevokeSponsorshipResultCode", { revokeSponsorshipSuccess: 0, revokeSponsorshipDoesNotExist: -1, revokeSponsorshipNotSponsor: -2, revokeSponsorshipLowReserve: -3, revokeSponsorshipOnlyTransferable: -4, revokeSponsorshipMalformed: -5 }), n.union("RevokeSponsorshipResult", { switchOn: n.lookup("RevokeSponsorshipResultCode"), switchName: "code", switches: [["revokeSponsorshipSuccess", n.void()], ["revokeSponsorshipDoesNotExist", n.void()], ["revokeSponsorshipNotSponsor", n.void()], ["revokeSponsorshipLowReserve", n.void()], ["revokeSponsorshipOnlyTransferable", n.void()], ["revokeSponsorshipMalformed", n.void()]], arms: {} }), n.enum("ClawbackResultCode", { clawbackSuccess: 0, clawbackMalformed: -1, clawbackNotClawbackEnabled: -2, clawbackNoTrust: -3, clawbackUnderfunded: -4 }), n.union("ClawbackResult", { switchOn: n.lookup("ClawbackResultCode"), switchName: "code", switches: [["clawbackSuccess", n.void()], ["clawbackMalformed", n.void()], ["clawbackNotClawbackEnabled", n.void()], ["clawbackNoTrust", n.void()], ["clawbackUnderfunded", n.void()]], arms: {} }), n.enum("ClawbackClaimableBalanceResultCode", { clawbackClaimableBalanceSuccess: 0, clawbackClaimableBalanceDoesNotExist: -1, clawbackClaimableBalanceNotIssuer: -2, clawbackClaimableBalanceNotClawbackEnabled: -3 }), n.union("ClawbackClaimableBalanceResult", { switchOn: n.lookup("ClawbackClaimableBalanceResultCode"), switchName: "code", switches: [["clawbackClaimableBalanceSuccess", n.void()], ["clawbackClaimableBalanceDoesNotExist", n.void()], ["clawbackClaimableBalanceNotIssuer", n.void()], ["clawbackClaimableBalanceNotClawbackEnabled", n.void()]], arms: {} }), n.enum("SetTrustLineFlagsResultCode", { setTrustLineFlagsSuccess: 0, setTrustLineFlagsMalformed: -1, setTrustLineFlagsNoTrustLine: -2, setTrustLineFlagsCantRevoke: -3, setTrustLineFlagsInvalidState: -4, setTrustLineFlagsLowReserve: -5 }), n.union("SetTrustLineFlagsResult", { switchOn: n.lookup("SetTrustLineFlagsResultCode"), switchName: "code", switches: [["setTrustLineFlagsSuccess", n.void()], ["setTrustLineFlagsMalformed", n.void()], ["setTrustLineFlagsNoTrustLine", n.void()], ["setTrustLineFlagsCantRevoke", n.void()], ["setTrustLineFlagsInvalidState", n.void()], ["setTrustLineFlagsLowReserve", n.void()]], arms: {} }), n.enum("LiquidityPoolDepositResultCode", { liquidityPoolDepositSuccess: 0, liquidityPoolDepositMalformed: -1, liquidityPoolDepositNoTrust: -2, liquidityPoolDepositNotAuthorized: -3, liquidityPoolDepositUnderfunded: -4, liquidityPoolDepositLineFull: -5, liquidityPoolDepositBadPrice: -6, liquidityPoolDepositPoolFull: -7 }), n.union("LiquidityPoolDepositResult", { switchOn: n.lookup("LiquidityPoolDepositResultCode"), switchName: "code", switches: [["liquidityPoolDepositSuccess", n.void()], ["liquidityPoolDepositMalformed", n.void()], ["liquidityPoolDepositNoTrust", n.void()], ["liquidityPoolDepositNotAuthorized", n.void()], ["liquidityPoolDepositUnderfunded", n.void()], ["liquidityPoolDepositLineFull", n.void()], ["liquidityPoolDepositBadPrice", n.void()], ["liquidityPoolDepositPoolFull", n.void()]], arms: {} }), n.enum("LiquidityPoolWithdrawResultCode", { liquidityPoolWithdrawSuccess: 0, liquidityPoolWithdrawMalformed: -1, liquidityPoolWithdrawNoTrust: -2, liquidityPoolWithdrawUnderfunded: -3, liquidityPoolWithdrawLineFull: -4, liquidityPoolWithdrawUnderMinimum: -5 }), n.union("LiquidityPoolWithdrawResult", { switchOn: n.lookup("LiquidityPoolWithdrawResultCode"), switchName: "code", switches: [["liquidityPoolWithdrawSuccess", n.void()], ["liquidityPoolWithdrawMalformed", n.void()], ["liquidityPoolWithdrawNoTrust", n.void()], ["liquidityPoolWithdrawUnderfunded", n.void()], ["liquidityPoolWithdrawLineFull", n.void()], ["liquidityPoolWithdrawUnderMinimum", n.void()]], arms: {} }), n.enum("InvokeHostFunctionResultCode", { invokeHostFunctionSuccess: 0, invokeHostFunctionMalformed: -1, invokeHostFunctionTrapped: -2, invokeHostFunctionResourceLimitExceeded: -3, invokeHostFunctionEntryArchived: -4, invokeHostFunctionInsufficientRefundableFee: -5 }), n.union("InvokeHostFunctionResult", { switchOn: n.lookup("InvokeHostFunctionResultCode"), switchName: "code", switches: [["invokeHostFunctionSuccess", "success"], ["invokeHostFunctionMalformed", n.void()], ["invokeHostFunctionTrapped", n.void()], ["invokeHostFunctionResourceLimitExceeded", n.void()], ["invokeHostFunctionEntryArchived", n.void()], ["invokeHostFunctionInsufficientRefundableFee", n.void()]], arms: { success: n.lookup("Hash") } }), n.enum("ExtendFootprintTtlResultCode", { extendFootprintTtlSuccess: 0, extendFootprintTtlMalformed: -1, extendFootprintTtlResourceLimitExceeded: -2, extendFootprintTtlInsufficientRefundableFee: -3 }), n.union("ExtendFootprintTtlResult", { switchOn: n.lookup("ExtendFootprintTtlResultCode"), switchName: "code", switches: [["extendFootprintTtlSuccess", n.void()], ["extendFootprintTtlMalformed", n.void()], ["extendFootprintTtlResourceLimitExceeded", n.void()], ["extendFootprintTtlInsufficientRefundableFee", n.void()]], arms: {} }), n.enum("RestoreFootprintResultCode", { restoreFootprintSuccess: 0, restoreFootprintMalformed: -1, restoreFootprintResourceLimitExceeded: -2, restoreFootprintInsufficientRefundableFee: -3 }), n.union("RestoreFootprintResult", { switchOn: n.lookup("RestoreFootprintResultCode"), switchName: "code", switches: [["restoreFootprintSuccess", n.void()], ["restoreFootprintMalformed", n.void()], ["restoreFootprintResourceLimitExceeded", n.void()], ["restoreFootprintInsufficientRefundableFee", n.void()]], arms: {} }), n.enum("OperationResultCode", { opInner: 0, opBadAuth: -1, opNoAccount: -2, opNotSupported: -3, opTooManySubentries: -4, opExceededWorkLimit: -5, opTooManySponsoring: -6 }), n.union("OperationResultTr", { switchOn: n.lookup("OperationType"), switchName: "type", switches: [["createAccount", "createAccountResult"], ["payment", "paymentResult"], ["pathPaymentStrictReceive", "pathPaymentStrictReceiveResult"], ["manageSellOffer", "manageSellOfferResult"], ["createPassiveSellOffer", "createPassiveSellOfferResult"], ["setOptions", "setOptionsResult"], ["changeTrust", "changeTrustResult"], ["allowTrust", "allowTrustResult"], ["accountMerge", "accountMergeResult"], ["inflation", "inflationResult"], ["manageData", "manageDataResult"], ["bumpSequence", "bumpSeqResult"], ["manageBuyOffer", "manageBuyOfferResult"], ["pathPaymentStrictSend", "pathPaymentStrictSendResult"], ["createClaimableBalance", "createClaimableBalanceResult"], ["claimClaimableBalance", "claimClaimableBalanceResult"], ["beginSponsoringFutureReserves", "beginSponsoringFutureReservesResult"], ["endSponsoringFutureReserves", "endSponsoringFutureReservesResult"], ["revokeSponsorship", "revokeSponsorshipResult"], ["clawback", "clawbackResult"], ["clawbackClaimableBalance", "clawbackClaimableBalanceResult"], ["setTrustLineFlags", "setTrustLineFlagsResult"], ["liquidityPoolDeposit", "liquidityPoolDepositResult"], ["liquidityPoolWithdraw", "liquidityPoolWithdrawResult"], ["invokeHostFunction", "invokeHostFunctionResult"], ["extendFootprintTtl", "extendFootprintTtlResult"], ["restoreFootprint", "restoreFootprintResult"]], arms: { createAccountResult: n.lookup("CreateAccountResult"), paymentResult: n.lookup("PaymentResult"), pathPaymentStrictReceiveResult: n.lookup("PathPaymentStrictReceiveResult"), manageSellOfferResult: n.lookup("ManageSellOfferResult"), createPassiveSellOfferResult: n.lookup("ManageSellOfferResult"), setOptionsResult: n.lookup("SetOptionsResult"), changeTrustResult: n.lookup("ChangeTrustResult"), allowTrustResult: n.lookup("AllowTrustResult"), accountMergeResult: n.lookup("AccountMergeResult"), inflationResult: n.lookup("InflationResult"), manageDataResult: n.lookup("ManageDataResult"), bumpSeqResult: n.lookup("BumpSequenceResult"), manageBuyOfferResult: n.lookup("ManageBuyOfferResult"), pathPaymentStrictSendResult: n.lookup("PathPaymentStrictSendResult"), createClaimableBalanceResult: n.lookup("CreateClaimableBalanceResult"), claimClaimableBalanceResult: n.lookup("ClaimClaimableBalanceResult"), beginSponsoringFutureReservesResult: n.lookup("BeginSponsoringFutureReservesResult"), endSponsoringFutureReservesResult: n.lookup("EndSponsoringFutureReservesResult"), revokeSponsorshipResult: n.lookup("RevokeSponsorshipResult"), clawbackResult: n.lookup("ClawbackResult"), clawbackClaimableBalanceResult: n.lookup("ClawbackClaimableBalanceResult"), setTrustLineFlagsResult: n.lookup("SetTrustLineFlagsResult"), liquidityPoolDepositResult: n.lookup("LiquidityPoolDepositResult"), liquidityPoolWithdrawResult: n.lookup("LiquidityPoolWithdrawResult"), invokeHostFunctionResult: n.lookup("InvokeHostFunctionResult"), extendFootprintTtlResult: n.lookup("ExtendFootprintTtlResult"), restoreFootprintResult: n.lookup("RestoreFootprintResult") } }), n.union("OperationResult", { switchOn: n.lookup("OperationResultCode"), switchName: "code", switches: [["opInner", "tr"], ["opBadAuth", n.void()], ["opNoAccount", n.void()], ["opNotSupported", n.void()], ["opTooManySubentries", n.void()], ["opExceededWorkLimit", n.void()], ["opTooManySponsoring", n.void()]], arms: { tr: n.lookup("OperationResultTr") } }), n.enum("TransactionResultCode", { txFeeBumpInnerSuccess: 1, txSuccess: 0, txFailed: -1, txTooEarly: -2, txTooLate: -3, txMissingOperation: -4, txBadSeq: -5, txBadAuth: -6, txInsufficientBalance: -7, txNoAccount: -8, txInsufficientFee: -9, txBadAuthExtra: -10, txInternalError: -11, txNotSupported: -12, txFeeBumpInnerFailed: -13, txBadSponsorship: -14, txBadMinSeqAgeOrGap: -15, txMalformed: -16, txSorobanInvalid: -17 }), n.union("InnerTransactionResultResult", { switchOn: n.lookup("TransactionResultCode"), switchName: "code", switches: [["txSuccess", "results"], ["txFailed", "results"], ["txTooEarly", n.void()], ["txTooLate", n.void()], ["txMissingOperation", n.void()], ["txBadSeq", n.void()], ["txBadAuth", n.void()], ["txInsufficientBalance", n.void()], ["txNoAccount", n.void()], ["txInsufficientFee", n.void()], ["txBadAuthExtra", n.void()], ["txInternalError", n.void()], ["txNotSupported", n.void()], ["txBadSponsorship", n.void()], ["txBadMinSeqAgeOrGap", n.void()], ["txMalformed", n.void()], ["txSorobanInvalid", n.void()]], arms: { results: n.varArray(n.lookup("OperationResult"), 2147483647) } }), n.union("InnerTransactionResultExt", { switchOn: n.int(), switchName: "v", switches: [[0, n.void()]], arms: {} }), n.struct("InnerTransactionResult", [["feeCharged", n.lookup("Int64")], ["result", n.lookup("InnerTransactionResultResult")], ["ext", n.lookup("InnerTransactionResultExt")]]), n.struct("InnerTransactionResultPair", [["transactionHash", n.lookup("Hash")], ["result", n.lookup("InnerTransactionResult")]]), n.union("TransactionResultResult", { switchOn: n.lookup("TransactionResultCode"), switchName: "code", switches: [["txFeeBumpInnerSuccess", "innerResultPair"], ["txFeeBumpInnerFailed", "innerResultPair"], ["txSuccess", "results"], ["txFailed", "results"], ["txTooEarly", n.void()], ["txTooLate", n.void()], ["txMissingOperation", n.void()], ["txBadSeq", n.void()], ["txBadAuth", n.void()], ["txInsufficientBalance", n.void()], ["txNoAccount", n.void()], ["txInsufficientFee", n.void()], ["txBadAuthExtra", n.void()], ["txInternalError", n.void()], ["txNotSupported", n.void()], ["txBadSponsorship", n.void()], ["txBadMinSeqAgeOrGap", n.void()], ["txMalformed", n.void()], ["txSorobanInvalid", n.void()]], arms: { innerResultPair: n.lookup("InnerTransactionResultPair"), results: n.varArray(n.lookup("OperationResult"), 2147483647) } }), n.union("TransactionResultExt", { switchOn: n.int(), switchName: "v", switches: [[0, n.void()]], arms: {} }), n.struct("TransactionResult", [["feeCharged", n.lookup("Int64")], ["result", n.lookup("TransactionResultResult")], ["ext", n.lookup("TransactionResultExt")]]), n.typedef("Hash", n.opaque(32)), n.typedef("Uint256", n.opaque(32)), n.typedef("Uint32", n.uint()), n.typedef("Int32", n.int()), n.typedef("Uint64", n.uhyper()), n.typedef("Int64", n.hyper()), n.typedef("TimePoint", n.lookup("Uint64")), n.typedef("Duration", n.lookup("Uint64")), n.union("ExtensionPoint", { switchOn: n.int(), switchName: "v", switches: [[0, n.void()]], arms: {} }), n.enum("CryptoKeyType", { keyTypeEd25519: 0, keyTypePreAuthTx: 1, keyTypeHashX: 2, keyTypeEd25519SignedPayload: 3, keyTypeMuxedEd25519: 256 }), n.enum("PublicKeyType", { publicKeyTypeEd25519: 0 }), n.enum("SignerKeyType", { signerKeyTypeEd25519: 0, signerKeyTypePreAuthTx: 1, signerKeyTypeHashX: 2, signerKeyTypeEd25519SignedPayload: 3 }), n.union("PublicKey", { switchOn: n.lookup("PublicKeyType"), switchName: "type", switches: [["publicKeyTypeEd25519", "ed25519"]], arms: { ed25519: n.lookup("Uint256") } }), n.struct("SignerKeyEd25519SignedPayload", [["ed25519", n.lookup("Uint256")], ["payload", n.varOpaque(64)]]), n.union("SignerKey", { switchOn: n.lookup("SignerKeyType"), switchName: "type", switches: [["signerKeyTypeEd25519", "ed25519"], ["signerKeyTypePreAuthTx", "preAuthTx"], ["signerKeyTypeHashX", "hashX"], ["signerKeyTypeEd25519SignedPayload", "ed25519SignedPayload"]], arms: { ed25519: n.lookup("Uint256"), preAuthTx: n.lookup("Uint256"), hashX: n.lookup("Uint256"), ed25519SignedPayload: n.lookup("SignerKeyEd25519SignedPayload") } }), n.typedef("Signature", n.varOpaque(64)), n.typedef("SignatureHint", n.opaque(4)), n.typedef("NodeId", n.lookup("PublicKey")), n.typedef("AccountId", n.lookup("PublicKey")), n.typedef("ContractId", n.lookup("Hash")), n.struct("Curve25519Secret", [["key", n.opaque(32)]]), n.struct("Curve25519Public", [["key", n.opaque(32)]]), n.struct("HmacSha256Key", [["key", n.opaque(32)]]), n.struct("HmacSha256Mac", [["mac", n.opaque(32)]]), n.struct("ShortHashSeed", [["seed", n.opaque(16)]]), n.enum("BinaryFuseFilterType", { binaryFuseFilter8Bit: 0, binaryFuseFilter16Bit: 1, binaryFuseFilter32Bit: 2 }), n.struct("SerializedBinaryFuseFilter", [["type", n.lookup("BinaryFuseFilterType")], ["inputHashSeed", n.lookup("ShortHashSeed")], ["filterSeed", n.lookup("ShortHashSeed")], ["segmentLength", n.lookup("Uint32")], ["segementLengthMask", n.lookup("Uint32")], ["segmentCount", n.lookup("Uint32")], ["segmentCountLength", n.lookup("Uint32")], ["fingerprintLength", n.lookup("Uint32")], ["fingerprints", n.varOpaque()]]), n.typedef("PoolId", n.lookup("Hash")), n.enum("ClaimableBalanceIdType", { claimableBalanceIdTypeV0: 0 }), n.union("ClaimableBalanceId", { switchOn: n.lookup("ClaimableBalanceIdType"), switchName: "type", switches: [["claimableBalanceIdTypeV0", "v0"]], arms: { v0: n.lookup("Hash") } }), n.enum("ScValType", { scvBool: 0, scvVoid: 1, scvError: 2, scvU32: 3, scvI32: 4, scvU64: 5, scvI64: 6, scvTimepoint: 7, scvDuration: 8, scvU128: 9, scvI128: 10, scvU256: 11, scvI256: 12, scvBytes: 13, scvString: 14, scvSymbol: 15, scvVec: 16, scvMap: 17, scvAddress: 18, scvContractInstance: 19, scvLedgerKeyContractInstance: 20, scvLedgerKeyNonce: 21 }), n.enum("ScErrorType", { sceContract: 0, sceWasmVm: 1, sceContext: 2, sceStorage: 3, sceObject: 4, sceCrypto: 5, sceEvents: 6, sceBudget: 7, sceValue: 8, sceAuth: 9 }), n.enum("ScErrorCode", { scecArithDomain: 0, scecIndexBounds: 1, scecInvalidInput: 2, scecMissingValue: 3, scecExistingValue: 4, scecExceededLimit: 5, scecInvalidAction: 6, scecInternalError: 7, scecUnexpectedType: 8, scecUnexpectedSize: 9 }), n.union("ScError", { switchOn: n.lookup("ScErrorType"), switchName: "type", switches: [["sceContract", "contractCode"], ["sceWasmVm", "code"], ["sceContext", "code"], ["sceStorage", "code"], ["sceObject", "code"], ["sceCrypto", "code"], ["sceEvents", "code"], ["sceBudget", "code"], ["sceValue", "code"], ["sceAuth", "code"]], arms: { contractCode: n.lookup("Uint32"), code: n.lookup("ScErrorCode") } }), n.struct("UInt128Parts", [["hi", n.lookup("Uint64")], ["lo", n.lookup("Uint64")]]), n.struct("Int128Parts", [["hi", n.lookup("Int64")], ["lo", n.lookup("Uint64")]]), n.struct("UInt256Parts", [["hiHi", n.lookup("Uint64")], ["hiLo", n.lookup("Uint64")], ["loHi", n.lookup("Uint64")], ["loLo", n.lookup("Uint64")]]), n.struct("Int256Parts", [["hiHi", n.lookup("Int64")], ["hiLo", n.lookup("Uint64")], ["loHi", n.lookup("Uint64")], ["loLo", n.lookup("Uint64")]]), n.enum("ContractExecutableType", { contractExecutableWasm: 0, contractExecutableStellarAsset: 1 }), n.union("ContractExecutable", { switchOn: n.lookup("ContractExecutableType"), switchName: "type", switches: [["contractExecutableWasm", "wasmHash"], ["contractExecutableStellarAsset", n.void()]], arms: { wasmHash: n.lookup("Hash") } }), n.enum("ScAddressType", { scAddressTypeAccount: 0, scAddressTypeContract: 1, scAddressTypeMuxedAccount: 2, scAddressTypeClaimableBalance: 3, scAddressTypeLiquidityPool: 4 }), n.struct("MuxedEd25519Account", [["id", n.lookup("Uint64")], ["ed25519", n.lookup("Uint256")]]), n.union("ScAddress", { switchOn: n.lookup("ScAddressType"), switchName: "type", switches: [["scAddressTypeAccount", "accountId"], ["scAddressTypeContract", "contractId"], ["scAddressTypeMuxedAccount", "muxedAccount"], ["scAddressTypeClaimableBalance", "claimableBalanceId"], ["scAddressTypeLiquidityPool", "liquidityPoolId"]], arms: { accountId: n.lookup("AccountId"), contractId: n.lookup("ContractId"), muxedAccount: n.lookup("MuxedEd25519Account"), claimableBalanceId: n.lookup("ClaimableBalanceId"), liquidityPoolId: n.lookup("PoolId") } }), n.const("SCSYMBOL_LIMIT", 32), n.typedef("ScVec", n.varArray(n.lookup("ScVal"), 2147483647)), n.typedef("ScMap", n.varArray(n.lookup("ScMapEntry"), 2147483647)), n.typedef("ScBytes", n.varOpaque()), n.typedef("ScString", n.string()), n.typedef("ScSymbol", n.string(32)), n.struct("ScNonceKey", [["nonce", n.lookup("Int64")]]), n.struct("ScContractInstance", [["executable", n.lookup("ContractExecutable")], ["storage", n.option(n.lookup("ScMap"))]]), n.union("ScVal", { switchOn: n.lookup("ScValType"), switchName: "type", switches: [["scvBool", "b"], ["scvVoid", n.void()], ["scvError", "error"], ["scvU32", "u32"], ["scvI32", "i32"], ["scvU64", "u64"], ["scvI64", "i64"], ["scvTimepoint", "timepoint"], ["scvDuration", "duration"], ["scvU128", "u128"], ["scvI128", "i128"], ["scvU256", "u256"], ["scvI256", "i256"], ["scvBytes", "bytes"], ["scvString", "str"], ["scvSymbol", "sym"], ["scvVec", "vec"], ["scvMap", "map"], ["scvAddress", "address"], ["scvContractInstance", "instance"], ["scvLedgerKeyContractInstance", n.void()], ["scvLedgerKeyNonce", "nonceKey"]], arms: { b: n.bool(), error: n.lookup("ScError"), u32: n.lookup("Uint32"), i32: n.lookup("Int32"), u64: n.lookup("Uint64"), i64: n.lookup("Int64"), timepoint: n.lookup("TimePoint"), duration: n.lookup("Duration"), u128: n.lookup("UInt128Parts"), i128: n.lookup("Int128Parts"), u256: n.lookup("UInt256Parts"), i256: n.lookup("Int256Parts"), bytes: n.lookup("ScBytes"), str: n.lookup("ScString"), sym: n.lookup("ScSymbol"), vec: n.option(n.lookup("ScVec")), map: n.option(n.lookup("ScMap")), address: n.lookup("ScAddress"), instance: n.lookup("ScContractInstance"), nonceKey: n.lookup("ScNonceKey") } }), n.struct("ScMapEntry", [["key", n.lookup("ScVal")], ["val", n.lookup("ScVal")]]), n.enum("ScEnvMetaKind", { scEnvMetaKindInterfaceVersion: 0 }), n.struct("ScEnvMetaEntryInterfaceVersion", [["protocol", n.lookup("Uint32")], ["preRelease", n.lookup("Uint32")]]), n.union("ScEnvMetaEntry", { switchOn: n.lookup("ScEnvMetaKind"), switchName: "kind", switches: [["scEnvMetaKindInterfaceVersion", "interfaceVersion"]], arms: { interfaceVersion: n.lookup("ScEnvMetaEntryInterfaceVersion") } }), n.struct("ScMetaV0", [["key", n.string()], ["val", n.string()]]), n.enum("ScMetaKind", { scMetaV0: 0 }), n.union("ScMetaEntry", { switchOn: n.lookup("ScMetaKind"), switchName: "kind", switches: [["scMetaV0", "v0"]], arms: { v0: n.lookup("ScMetaV0") } }), n.const("SC_SPEC_DOC_LIMIT", 1024), n.enum("ScSpecType", { scSpecTypeVal: 0, scSpecTypeBool: 1, scSpecTypeVoid: 2, scSpecTypeError: 3, scSpecTypeU32: 4, scSpecTypeI32: 5, scSpecTypeU64: 6, scSpecTypeI64: 7, scSpecTypeTimepoint: 8, scSpecTypeDuration: 9, scSpecTypeU128: 10, scSpecTypeI128: 11, scSpecTypeU256: 12, scSpecTypeI256: 13, scSpecTypeBytes: 14, scSpecTypeString: 16, scSpecTypeSymbol: 17, scSpecTypeAddress: 19, scSpecTypeMuxedAddress: 20, scSpecTypeOption: 1e3, scSpecTypeResult: 1001, scSpecTypeVec: 1002, scSpecTypeMap: 1004, scSpecTypeTuple: 1005, scSpecTypeBytesN: 1006, scSpecTypeUdt: 2e3 }), n.struct("ScSpecTypeOption", [["valueType", n.lookup("ScSpecTypeDef")]]), n.struct("ScSpecTypeResult", [["okType", n.lookup("ScSpecTypeDef")], ["errorType", n.lookup("ScSpecTypeDef")]]), n.struct("ScSpecTypeVec", [["elementType", n.lookup("ScSpecTypeDef")]]), n.struct("ScSpecTypeMap", [["keyType", n.lookup("ScSpecTypeDef")], ["valueType", n.lookup("ScSpecTypeDef")]]), n.struct("ScSpecTypeTuple", [["valueTypes", n.varArray(n.lookup("ScSpecTypeDef"), 12)]]), n.struct("ScSpecTypeBytesN", [["n", n.lookup("Uint32")]]), n.struct("ScSpecTypeUdt", [["name", n.string(60)]]), n.union("ScSpecTypeDef", { switchOn: n.lookup("ScSpecType"), switchName: "type", switches: [["scSpecTypeVal", n.void()], ["scSpecTypeBool", n.void()], ["scSpecTypeVoid", n.void()], ["scSpecTypeError", n.void()], ["scSpecTypeU32", n.void()], ["scSpecTypeI32", n.void()], ["scSpecTypeU64", n.void()], ["scSpecTypeI64", n.void()], ["scSpecTypeTimepoint", n.void()], ["scSpecTypeDuration", n.void()], ["scSpecTypeU128", n.void()], ["scSpecTypeI128", n.void()], ["scSpecTypeU256", n.void()], ["scSpecTypeI256", n.void()], ["scSpecTypeBytes", n.void()], ["scSpecTypeString", n.void()], ["scSpecTypeSymbol", n.void()], ["scSpecTypeAddress", n.void()], ["scSpecTypeMuxedAddress", n.void()], ["scSpecTypeOption", "option"], ["scSpecTypeResult", "result"], ["scSpecTypeVec", "vec"], ["scSpecTypeMap", "map"], ["scSpecTypeTuple", "tuple"], ["scSpecTypeBytesN", "bytesN"], ["scSpecTypeUdt", "udt"]], arms: { option: n.lookup("ScSpecTypeOption"), result: n.lookup("ScSpecTypeResult"), vec: n.lookup("ScSpecTypeVec"), map: n.lookup("ScSpecTypeMap"), tuple: n.lookup("ScSpecTypeTuple"), bytesN: n.lookup("ScSpecTypeBytesN"), udt: n.lookup("ScSpecTypeUdt") } }), n.struct("ScSpecUdtStructFieldV0", [["doc", n.string(A)], ["name", n.string(30)], ["type", n.lookup("ScSpecTypeDef")]]), n.struct("ScSpecUdtStructV0", [["doc", n.string(A)], ["lib", n.string(80)], ["name", n.string(60)], ["fields", n.varArray(n.lookup("ScSpecUdtStructFieldV0"), 40)]]), n.struct("ScSpecUdtUnionCaseVoidV0", [["doc", n.string(A)], ["name", n.string(60)]]), n.struct("ScSpecUdtUnionCaseTupleV0", [["doc", n.string(A)], ["name", n.string(60)], ["type", n.varArray(n.lookup("ScSpecTypeDef"), 12)]]), n.enum("ScSpecUdtUnionCaseV0Kind", { scSpecUdtUnionCaseVoidV0: 0, scSpecUdtUnionCaseTupleV0: 1 }), n.union("ScSpecUdtUnionCaseV0", { switchOn: n.lookup("ScSpecUdtUnionCaseV0Kind"), switchName: "kind", switches: [["scSpecUdtUnionCaseVoidV0", "voidCase"], ["scSpecUdtUnionCaseTupleV0", "tupleCase"]], arms: { voidCase: n.lookup("ScSpecUdtUnionCaseVoidV0"), tupleCase: n.lookup("ScSpecUdtUnionCaseTupleV0") } }), n.struct("ScSpecUdtUnionV0", [["doc", n.string(A)], ["lib", n.string(80)], ["name", n.string(60)], ["cases", n.varArray(n.lookup("ScSpecUdtUnionCaseV0"), 50)]]), n.struct("ScSpecUdtEnumCaseV0", [["doc", n.string(A)], ["name", n.string(60)], ["value", n.lookup("Uint32")]]), n.struct("ScSpecUdtEnumV0", [["doc", n.string(A)], ["lib", n.string(80)], ["name", n.string(60)], ["cases", n.varArray(n.lookup("ScSpecUdtEnumCaseV0"), 50)]]), n.struct("ScSpecUdtErrorEnumCaseV0", [["doc", n.string(A)], ["name", n.string(60)], ["value", n.lookup("Uint32")]]), n.struct("ScSpecUdtErrorEnumV0", [["doc", n.string(A)], ["lib", n.string(80)], ["name", n.string(60)], ["cases", n.varArray(n.lookup("ScSpecUdtErrorEnumCaseV0"), 50)]]), n.struct("ScSpecFunctionInputV0", [["doc", n.string(A)], ["name", n.string(30)], ["type", n.lookup("ScSpecTypeDef")]]), n.struct("ScSpecFunctionV0", [["doc", n.string(A)], ["name", n.lookup("ScSymbol")], ["inputs", n.varArray(n.lookup("ScSpecFunctionInputV0"), 10)], ["outputs", n.varArray(n.lookup("ScSpecTypeDef"), 1)]]), n.enum("ScSpecEventParamLocationV0", { scSpecEventParamLocationData: 0, scSpecEventParamLocationTopicList: 1 }), n.struct("ScSpecEventParamV0", [["doc", n.string(A)], ["name", n.string(30)], ["type", n.lookup("ScSpecTypeDef")], ["location", n.lookup("ScSpecEventParamLocationV0")]]), n.enum("ScSpecEventDataFormat", { scSpecEventDataFormatSingleValue: 0, scSpecEventDataFormatVec: 1, scSpecEventDataFormatMap: 2 }), n.struct("ScSpecEventV0", [["doc", n.string(A)], ["lib", n.string(80)], ["name", n.lookup("ScSymbol")], ["prefixTopics", n.varArray(n.lookup("ScSymbol"), 2)], ["params", n.varArray(n.lookup("ScSpecEventParamV0"), 50)], ["dataFormat", n.lookup("ScSpecEventDataFormat")]]), n.enum("ScSpecEntryKind", { scSpecEntryFunctionV0: 0, scSpecEntryUdtStructV0: 1, scSpecEntryUdtUnionV0: 2, scSpecEntryUdtEnumV0: 3, scSpecEntryUdtErrorEnumV0: 4, scSpecEntryEventV0: 5 }), n.union("ScSpecEntry", { switchOn: n.lookup("ScSpecEntryKind"), switchName: "kind", switches: [["scSpecEntryFunctionV0", "functionV0"], ["scSpecEntryUdtStructV0", "udtStructV0"], ["scSpecEntryUdtUnionV0", "udtUnionV0"], ["scSpecEntryUdtEnumV0", "udtEnumV0"], ["scSpecEntryUdtErrorEnumV0", "udtErrorEnumV0"], ["scSpecEntryEventV0", "eventV0"]], arms: { functionV0: n.lookup("ScSpecFunctionV0"), udtStructV0: n.lookup("ScSpecUdtStructV0"), udtUnionV0: n.lookup("ScSpecUdtUnionV0"), udtEnumV0: n.lookup("ScSpecUdtEnumV0"), udtErrorEnumV0: n.lookup("ScSpecUdtErrorEnumV0"), eventV0: n.lookup("ScSpecEventV0") } }), n.struct("ConfigSettingContractExecutionLanesV0", [["ledgerMaxTxCount", n.lookup("Uint32")]]), n.struct("ConfigSettingContractComputeV0", [["ledgerMaxInstructions", n.lookup("Int64")], ["txMaxInstructions", n.lookup("Int64")], ["feeRatePerInstructionsIncrement", n.lookup("Int64")], ["txMemoryLimit", n.lookup("Uint32")]]), n.struct("ConfigSettingContractParallelComputeV0", [["ledgerMaxDependentTxClusters", n.lookup("Uint32")]]), n.struct("ConfigSettingContractLedgerCostV0", [["ledgerMaxDiskReadEntries", n.lookup("Uint32")], ["ledgerMaxDiskReadBytes", n.lookup("Uint32")], ["ledgerMaxWriteLedgerEntries", n.lookup("Uint32")], ["ledgerMaxWriteBytes", n.lookup("Uint32")], ["txMaxDiskReadEntries", n.lookup("Uint32")], ["txMaxDiskReadBytes", n.lookup("Uint32")], ["txMaxWriteLedgerEntries", n.lookup("Uint32")], ["txMaxWriteBytes", n.lookup("Uint32")], ["feeDiskReadLedgerEntry", n.lookup("Int64")], ["feeWriteLedgerEntry", n.lookup("Int64")], ["feeDiskRead1Kb", n.lookup("Int64")], ["sorobanStateTargetSizeBytes", n.lookup("Int64")], ["rentFee1KbSorobanStateSizeLow", n.lookup("Int64")], ["rentFee1KbSorobanStateSizeHigh", n.lookup("Int64")], ["sorobanStateRentFeeGrowthFactor", n.lookup("Uint32")]]), n.struct("ConfigSettingContractLedgerCostExtV0", [["txMaxFootprintEntries", n.lookup("Uint32")], ["feeWrite1Kb", n.lookup("Int64")]]), n.struct("ConfigSettingContractHistoricalDataV0", [["feeHistorical1Kb", n.lookup("Int64")]]), n.struct("ConfigSettingContractEventsV0", [["txMaxContractEventsSizeBytes", n.lookup("Uint32")], ["feeContractEvents1Kb", n.lookup("Int64")]]), n.struct("ConfigSettingContractBandwidthV0", [["ledgerMaxTxsSizeBytes", n.lookup("Uint32")], ["txMaxSizeBytes", n.lookup("Uint32")], ["feeTxSize1Kb", n.lookup("Int64")]]), n.enum("ContractCostType", { wasmInsnExec: 0, memAlloc: 1, memCpy: 2, memCmp: 3, dispatchHostFunction: 4, visitObject: 5, valSer: 6, valDeser: 7, computeSha256Hash: 8, computeEd25519PubKey: 9, verifyEd25519Sig: 10, vmInstantiation: 11, vmCachedInstantiation: 12, invokeVmFunction: 13, computeKeccak256Hash: 14, decodeEcdsaCurve256Sig: 15, recoverEcdsaSecp256k1Key: 16, int256AddSub: 17, int256Mul: 18, int256Div: 19, int256Pow: 20, int256Shift: 21, chaCha20DrawBytes: 22, parseWasmInstructions: 23, parseWasmFunctions: 24, parseWasmGlobals: 25, parseWasmTableEntries: 26, parseWasmTypes: 27, parseWasmDataSegments: 28, parseWasmElemSegments: 29, parseWasmImports: 30, parseWasmExports: 31, parseWasmDataSegmentBytes: 32, instantiateWasmInstructions: 33, instantiateWasmFunctions: 34, instantiateWasmGlobals: 35, instantiateWasmTableEntries: 36, instantiateWasmTypes: 37, instantiateWasmDataSegments: 38, instantiateWasmElemSegments: 39, instantiateWasmImports: 40, instantiateWasmExports: 41, instantiateWasmDataSegmentBytes: 42, sec1DecodePointUncompressed: 43, verifyEcdsaSecp256r1Sig: 44, bls12381EncodeFp: 45, bls12381DecodeFp: 46, bls12381G1CheckPointOnCurve: 47, bls12381G1CheckPointInSubgroup: 48, bls12381G2CheckPointOnCurve: 49, bls12381G2CheckPointInSubgroup: 50, bls12381G1ProjectiveToAffine: 51, bls12381G2ProjectiveToAffine: 52, bls12381G1Add: 53, bls12381G1Mul: 54, bls12381G1Msm: 55, bls12381MapFpToG1: 56, bls12381HashToG1: 57, bls12381G2Add: 58, bls12381G2Mul: 59, bls12381G2Msm: 60, bls12381MapFp2ToG2: 61, bls12381HashToG2: 62, bls12381Pairing: 63, bls12381FrFromU256: 64, bls12381FrToU256: 65, bls12381FrAddSub: 66, bls12381FrMul: 67, bls12381FrPow: 68, bls12381FrInv: 69 }), n.struct("ContractCostParamEntry", [["ext", n.lookup("ExtensionPoint")], ["constTerm", n.lookup("Int64")], ["linearTerm", n.lookup("Int64")]]), n.struct("StateArchivalSettings", [["maxEntryTtl", n.lookup("Uint32")], ["minTemporaryTtl", n.lookup("Uint32")], ["minPersistentTtl", n.lookup("Uint32")], ["persistentRentRateDenominator", n.lookup("Int64")], ["tempRentRateDenominator", n.lookup("Int64")], ["maxEntriesToArchive", n.lookup("Uint32")], ["liveSorobanStateSizeWindowSampleSize", n.lookup("Uint32")], ["liveSorobanStateSizeWindowSamplePeriod", n.lookup("Uint32")], ["evictionScanSize", n.lookup("Uint32")], ["startingEvictionScanLevel", n.lookup("Uint32")]]), n.struct("EvictionIterator", [["bucketListLevel", n.lookup("Uint32")], ["isCurrBucket", n.bool()], ["bucketFileOffset", n.lookup("Uint64")]]), n.struct("ConfigSettingScpTiming", [["ledgerTargetCloseTimeMilliseconds", n.lookup("Uint32")], ["nominationTimeoutInitialMilliseconds", n.lookup("Uint32")], ["nominationTimeoutIncrementMilliseconds", n.lookup("Uint32")], ["ballotTimeoutInitialMilliseconds", n.lookup("Uint32")], ["ballotTimeoutIncrementMilliseconds", n.lookup("Uint32")]]), n.const("CONTRACT_COST_COUNT_LIMIT", 1024), n.typedef("ContractCostParams", n.varArray(n.lookup("ContractCostParamEntry"), n.lookup("CONTRACT_COST_COUNT_LIMIT"))), n.enum("ConfigSettingId", { configSettingContractMaxSizeBytes: 0, configSettingContractComputeV0: 1, configSettingContractLedgerCostV0: 2, configSettingContractHistoricalDataV0: 3, configSettingContractEventsV0: 4, configSettingContractBandwidthV0: 5, configSettingContractCostParamsCpuInstructions: 6, configSettingContractCostParamsMemoryBytes: 7, configSettingContractDataKeySizeBytes: 8, configSettingContractDataEntrySizeBytes: 9, configSettingStateArchival: 10, configSettingContractExecutionLanes: 11, configSettingLiveSorobanStateSizeWindow: 12, configSettingEvictionIterator: 13, configSettingContractParallelComputeV0: 14, configSettingContractLedgerCostExtV0: 15, configSettingScpTiming: 16 }), n.union("ConfigSettingEntry", { switchOn: n.lookup("ConfigSettingId"), switchName: "configSettingId", switches: [["configSettingContractMaxSizeBytes", "contractMaxSizeBytes"], ["configSettingContractComputeV0", "contractCompute"], ["configSettingContractLedgerCostV0", "contractLedgerCost"], ["configSettingContractHistoricalDataV0", "contractHistoricalData"], ["configSettingContractEventsV0", "contractEvents"], ["configSettingContractBandwidthV0", "contractBandwidth"], ["configSettingContractCostParamsCpuInstructions", "contractCostParamsCpuInsns"], ["configSettingContractCostParamsMemoryBytes", "contractCostParamsMemBytes"], ["configSettingContractDataKeySizeBytes", "contractDataKeySizeBytes"], ["configSettingContractDataEntrySizeBytes", "contractDataEntrySizeBytes"], ["configSettingStateArchival", "stateArchivalSettings"], ["configSettingContractExecutionLanes", "contractExecutionLanes"], ["configSettingLiveSorobanStateSizeWindow", "liveSorobanStateSizeWindow"], ["configSettingEvictionIterator", "evictionIterator"], ["configSettingContractParallelComputeV0", "contractParallelCompute"], ["configSettingContractLedgerCostExtV0", "contractLedgerCostExt"], ["configSettingScpTiming", "contractScpTiming"]], arms: { contractMaxSizeBytes: n.lookup("Uint32"), contractCompute: n.lookup("ConfigSettingContractComputeV0"), contractLedgerCost: n.lookup("ConfigSettingContractLedgerCostV0"), contractHistoricalData: n.lookup("ConfigSettingContractHistoricalDataV0"), contractEvents: n.lookup("ConfigSettingContractEventsV0"), contractBandwidth: n.lookup("ConfigSettingContractBandwidthV0"), contractCostParamsCpuInsns: n.lookup("ContractCostParams"), contractCostParamsMemBytes: n.lookup("ContractCostParams"), contractDataKeySizeBytes: n.lookup("Uint32"), contractDataEntrySizeBytes: n.lookup("Uint32"), stateArchivalSettings: n.lookup("StateArchivalSettings"), contractExecutionLanes: n.lookup("ConfigSettingContractExecutionLanesV0"), liveSorobanStateSizeWindow: n.varArray(n.lookup("Uint64"), 2147483647), evictionIterator: n.lookup("EvictionIterator"), contractParallelCompute: n.lookup("ConfigSettingContractParallelComputeV0"), contractLedgerCostExt: n.lookup("ConfigSettingContractLedgerCostExtV0"), contractScpTiming: n.lookup("ConfigSettingScpTiming") } }), n.struct("LedgerCloseMetaBatch", [["startSequence", n.lookup("Uint32")], ["endSequence", n.lookup("Uint32")], ["ledgerCloseMeta", n.varArray(n.lookup("LedgerCloseMeta"), 2147483647)]]);
            });
            const c = m, w = { XdrWriter: h.XdrWriter, XdrReader: h.XdrReader };
            var T = b(2802);
            function P(n) {
              var A = new T.sha256();
              return A.update(n, "utf8"), A.digest();
            }
            const k = typeof globalThis == "object" && "crypto" in globalThis ? globalThis.crypto : void 0;
            function R(n) {
              return n instanceof Uint8Array || ArrayBuffer.isView(n) && n.constructor.name === "Uint8Array";
            }
            function F(n, ...A) {
              if (!R(n)) throw new Error("Uint8Array expected");
              if (A.length > 0 && !A.includes(n.length)) throw new Error("Uint8Array expected of length " + A + ", got length=" + n.length);
            }
            function v(n, A = true) {
              if (n.destroyed) throw new Error("Hash instance has been destroyed");
              if (A && n.finished) throw new Error("Hash#digest() has already been called");
            }
            function U(...n) {
              for (let A = 0; A < n.length; A++) n[A].fill(0);
            }
            function M(n) {
              return new DataView(n.buffer, n.byteOffset, n.byteLength);
            }
            const Z = typeof Uint8Array.from([]).toHex == "function" && typeof Uint8Array.fromHex == "function", D = Array.from({ length: 256 }, (n, A) => A.toString(16).padStart(2, "0"));
            function V(n) {
              if (F(n), Z) return n.toHex();
              let A = "";
              for (let G = 0; G < n.length; G++) A += D[n[G]];
              return A;
            }
            function S(n) {
              return n >= 48 && n <= 57 ? n - 48 : n >= 65 && n <= 70 ? n - 55 : n >= 97 && n <= 102 ? n - 87 : void 0;
            }
            function x(n) {
              if (typeof n != "string") throw new Error("hex string expected, got " + typeof n);
              if (Z) return Uint8Array.fromHex(n);
              const A = n.length, G = A / 2;
              if (A % 2) throw new Error("hex string expected, got unpadded hex of length " + A);
              const st = new Uint8Array(G);
              for (let Gt = 0, Pe = 0; Gt < G; Gt++, Pe += 2) {
                const We = S(n.charCodeAt(Pe)), er = S(n.charCodeAt(Pe + 1));
                if (We === void 0 || er === void 0) {
                  const Rr = n[Pe] + n[Pe + 1];
                  throw new Error('hex string expected, got non-hex character "' + Rr + '" at index ' + Pe);
                }
                st[Gt] = 16 * We + er;
              }
              return st;
            }
            function B(n) {
              return typeof n == "string" && (n = function(A) {
                if (typeof A != "string") throw new Error("string expected");
                return new Uint8Array(new TextEncoder().encode(A));
              }(n)), F(n), n;
            }
            function W(...n) {
              let A = 0;
              for (let st = 0; st < n.length; st++) {
                const Gt = n[st];
                F(Gt), A += Gt.length;
              }
              const G = new Uint8Array(A);
              for (let st = 0, Gt = 0; st < n.length; st++) {
                const Pe = n[st];
                G.set(Pe, Gt), Gt += Pe.length;
              }
              return G;
            }
            class lt {
            }
            function pt(n = 32) {
              if (k && typeof k.getRandomValues == "function") return k.getRandomValues(new Uint8Array(n));
              if (k && typeof k.randomBytes == "function") return Uint8Array.from(k.randomBytes(n));
              throw new Error("crypto.getRandomValues must be defined");
            }
            class at extends lt {
              constructor(A, G, st, Gt) {
                super(), this.finished = false, this.length = 0, this.pos = 0, this.destroyed = false, this.blockLen = A, this.outputLen = G, this.padOffset = st, this.isLE = Gt, this.buffer = new Uint8Array(A), this.view = M(this.buffer);
              }
              update(A) {
                v(this), F(A = B(A));
                const { view: G, buffer: st, blockLen: Gt } = this, Pe = A.length;
                for (let We = 0; We < Pe; ) {
                  const er = Math.min(Gt - this.pos, Pe - We);
                  if (er === Gt) {
                    const Rr = M(A);
                    for (; Gt <= Pe - We; We += Gt) this.process(Rr, We);
                    continue;
                  }
                  st.set(A.subarray(We, We + er), this.pos), this.pos += er, We += er, this.pos === Gt && (this.process(G, 0), this.pos = 0);
                }
                return this.length += A.length, this.roundClean(), this;
              }
              digestInto(A) {
                v(this), function(ur, Er) {
                  F(ur);
                  const un = Er.outputLen;
                  if (ur.length < un) throw new Error("digestInto() expects output buffer of length at least " + un);
                }(A, this), this.finished = true;
                const { buffer: G, view: st, blockLen: Gt, isLE: Pe } = this;
                let { pos: We } = this;
                G[We++] = 128, U(this.buffer.subarray(We)), this.padOffset > Gt - We && (this.process(st, 0), We = 0);
                for (let ur = We; ur < Gt; ur++) G[ur] = 0;
                (function(ur, Er, un, cn) {
                  if (typeof ur.setBigUint64 == "function") return ur.setBigUint64(Er, un, cn);
                  const mn = BigInt(32), Pn = BigInt(4294967295), kn = Number(un >> mn & Pn), so = Number(un & Pn), Mn = cn ? 4 : 0, $n = cn ? 0 : 4;
                  ur.setUint32(Er + Mn, kn, cn), ur.setUint32(Er + $n, so, cn);
                })(st, Gt - 8, BigInt(8 * this.length), Pe), this.process(st, 0);
                const er = M(A), Rr = this.outputLen;
                if (Rr % 4) throw new Error("_sha2: outputLen should be aligned to 32bit");
                const kr = Rr / 4, vr = this.get();
                if (kr > vr.length) throw new Error("_sha2: outputLen bigger than state");
                for (let ur = 0; ur < kr; ur++) er.setUint32(4 * ur, vr[ur], Pe);
              }
              digest() {
                const { buffer: A, outputLen: G } = this;
                this.digestInto(A);
                const st = A.slice(0, G);
                return this.destroy(), st;
              }
              _cloneInto(A) {
                A || (A = new this.constructor()), A.set(...this.get());
                const { blockLen: G, buffer: st, length: Gt, finished: Pe, destroyed: We, pos: er } = this;
                return A.destroyed = We, A.finished = Pe, A.length = Gt, A.pos = er, Gt % G && A.buffer.set(st), A;
              }
              clone() {
                return this._cloneInto();
              }
            }
            const rt = Uint32Array.from([1779033703, 4089235720, 3144134277, 2227873595, 1013904242, 4271175723, 2773480762, 1595750129, 1359893119, 2917565137, 2600822924, 725511199, 528734635, 4215389547, 1541459225, 327033209]), ot = BigInt(2 ** 32 - 1), X = BigInt(32);
            function I(n, A = false) {
              return A ? { h: Number(n & ot), l: Number(n >> X & ot) } : { h: 0 | Number(n >> X & ot), l: 0 | Number(n & ot) };
            }
            const nt = (n, A, G) => n >>> G, ft = (n, A, G) => n << 32 - G | A >>> G, dt = (n, A, G) => n >>> G | A << 32 - G, Lt = (n, A, G) => n << 32 - G | A >>> G, $ = (n, A, G) => n << 64 - G | A >>> G - 32, it = (n, A, G) => n >>> G - 32 | A << 64 - G;
            function mt(n, A, G, st) {
              const Gt = (A >>> 0) + (st >>> 0);
              return { h: n + G + (Gt / 4294967296 | 0) | 0, l: 0 | Gt };
            }
            const Ot = (n, A, G) => (n >>> 0) + (A >>> 0) + (G >>> 0), bt = (n, A, G, st) => A + G + st + (n / 2 ** 32 | 0) | 0, xt = (n, A, G, st) => (n >>> 0) + (A >>> 0) + (G >>> 0) + (st >>> 0), Ct = (n, A, G, st, Gt) => A + G + st + Gt + (n / 2 ** 32 | 0) | 0, Tt = (n, A, G, st, Gt) => (n >>> 0) + (A >>> 0) + (G >>> 0) + (st >>> 0) + (Gt >>> 0), Bt = (n, A, G, st, Gt, Pe) => A + G + st + Gt + Pe + (n / 2 ** 32 | 0) | 0, At = function(n, A = false) {
              const G = n.length;
              let st = new Uint32Array(G), Gt = new Uint32Array(G);
              for (let Pe = 0; Pe < G; Pe++) {
                const { h: We, l: er } = I(n[Pe], A);
                [st[Pe], Gt[Pe]] = [We, er];
              }
              return [st, Gt];
            }(["0x428a2f98d728ae22", "0x7137449123ef65cd", "0xb5c0fbcfec4d3b2f", "0xe9b5dba58189dbbc", "0x3956c25bf348b538", "0x59f111f1b605d019", "0x923f82a4af194f9b", "0xab1c5ed5da6d8118", "0xd807aa98a3030242", "0x12835b0145706fbe", "0x243185be4ee4b28c", "0x550c7dc3d5ffb4e2", "0x72be5d74f27b896f", "0x80deb1fe3b1696b1", "0x9bdc06a725c71235", "0xc19bf174cf692694", "0xe49b69c19ef14ad2", "0xefbe4786384f25e3", "0x0fc19dc68b8cd5b5", "0x240ca1cc77ac9c65", "0x2de92c6f592b0275", "0x4a7484aa6ea6e483", "0x5cb0a9dcbd41fbd4", "0x76f988da831153b5", "0x983e5152ee66dfab", "0xa831c66d2db43210", "0xb00327c898fb213f", "0xbf597fc7beef0ee4", "0xc6e00bf33da88fc2", "0xd5a79147930aa725", "0x06ca6351e003826f", "0x142929670a0e6e70", "0x27b70a8546d22ffc", "0x2e1b21385c26c926", "0x4d2c6dfc5ac42aed", "0x53380d139d95b3df", "0x650a73548baf63de", "0x766a0abb3c77b2a8", "0x81c2c92e47edaee6", "0x92722c851482353b", "0xa2bfe8a14cf10364", "0xa81a664bbc423001", "0xc24b8b70d0f89791", "0xc76c51a30654be30", "0xd192e819d6ef5218", "0xd69906245565a910", "0xf40e35855771202a", "0x106aa07032bbd1b8", "0x19a4c116b8d2d0c8", "0x1e376c085141ab53", "0x2748774cdf8eeb99", "0x34b0bcb5e19b48a8", "0x391c0cb3c5c95a63", "0x4ed8aa4ae3418acb", "0x5b9cca4f7763e373", "0x682e6ff3d6b2b8a3", "0x748f82ee5defb2fc", "0x78a5636f43172f60", "0x84c87814a1f0ab72", "0x8cc702081a6439ec", "0x90befffa23631e28", "0xa4506cebde82bde9", "0xbef9a3f7b2c67915", "0xc67178f2e372532b", "0xca273eceea26619c", "0xd186b8c721c0c207", "0xeada7dd6cde0eb1e", "0xf57d4f7fee6ed178", "0x06f067aa72176fba", "0x0a637dc5a2c898a6", "0x113f9804bef90dae", "0x1b710b35131c471b", "0x28db77f523047d84", "0x32caab7b40c72493", "0x3c9ebe0a15c9bebc", "0x431d67c49c100d4c", "0x4cc5d4becb3e42b6", "0x597f299cfc657e2a", "0x5fcb6fab3ad6faec", "0x6c44198c4a475817"].map((n) => BigInt(n))), Ut = At[0], Vt = At[1], oe = new Uint32Array(80), te = new Uint32Array(80);
            class yt extends at {
              constructor(A = 64) {
                super(128, A, 16, false), this.Ah = 0 | rt[0], this.Al = 0 | rt[1], this.Bh = 0 | rt[2], this.Bl = 0 | rt[3], this.Ch = 0 | rt[4], this.Cl = 0 | rt[5], this.Dh = 0 | rt[6], this.Dl = 0 | rt[7], this.Eh = 0 | rt[8], this.El = 0 | rt[9], this.Fh = 0 | rt[10], this.Fl = 0 | rt[11], this.Gh = 0 | rt[12], this.Gl = 0 | rt[13], this.Hh = 0 | rt[14], this.Hl = 0 | rt[15];
              }
              get() {
                const { Ah: A, Al: G, Bh: st, Bl: Gt, Ch: Pe, Cl: We, Dh: er, Dl: Rr, Eh: kr, El: vr, Fh: ur, Fl: Er, Gh: un, Gl: cn, Hh: mn, Hl: Pn } = this;
                return [A, G, st, Gt, Pe, We, er, Rr, kr, vr, ur, Er, un, cn, mn, Pn];
              }
              set(A, G, st, Gt, Pe, We, er, Rr, kr, vr, ur, Er, un, cn, mn, Pn) {
                this.Ah = 0 | A, this.Al = 0 | G, this.Bh = 0 | st, this.Bl = 0 | Gt, this.Ch = 0 | Pe, this.Cl = 0 | We, this.Dh = 0 | er, this.Dl = 0 | Rr, this.Eh = 0 | kr, this.El = 0 | vr, this.Fh = 0 | ur, this.Fl = 0 | Er, this.Gh = 0 | un, this.Gl = 0 | cn, this.Hh = 0 | mn, this.Hl = 0 | Pn;
              }
              process(A, G) {
                for (let Mn = 0; Mn < 16; Mn++, G += 4) oe[Mn] = A.getUint32(G), te[Mn] = A.getUint32(G += 4);
                for (let Mn = 16; Mn < 80; Mn++) {
                  const $n = 0 | oe[Mn - 15], On = 0 | te[Mn - 15], r = dt($n, On, 1) ^ dt($n, On, 8) ^ nt($n, 0, 7), y = Lt($n, On, 1) ^ Lt($n, On, 8) ^ ft($n, On, 7), N = 0 | oe[Mn - 2], Q = 0 | te[Mn - 2], _t = dt(N, Q, 19) ^ $(N, Q, 61) ^ nt(N, 0, 6), Qt = Lt(N, Q, 19) ^ it(N, Q, 61) ^ ft(N, Q, 6), Ce = xt(y, Qt, te[Mn - 7], te[Mn - 16]), Le = Ct(Ce, r, _t, oe[Mn - 7], oe[Mn - 16]);
                  oe[Mn] = 0 | Le, te[Mn] = 0 | Ce;
                }
                let { Ah: st, Al: Gt, Bh: Pe, Bl: We, Ch: er, Cl: Rr, Dh: kr, Dl: vr, Eh: ur, El: Er, Fh: un, Fl: cn, Gh: mn, Gl: Pn, Hh: kn, Hl: so } = this;
                for (let Mn = 0; Mn < 80; Mn++) {
                  const $n = dt(ur, Er, 14) ^ dt(ur, Er, 18) ^ $(ur, Er, 41), On = Lt(ur, Er, 14) ^ Lt(ur, Er, 18) ^ it(ur, Er, 41), r = ur & un ^ ~ur & mn, y = Tt(so, On, Er & cn ^ ~Er & Pn, Vt[Mn], te[Mn]), N = Bt(y, kn, $n, r, Ut[Mn], oe[Mn]), Q = 0 | y, _t = dt(st, Gt, 28) ^ $(st, Gt, 34) ^ $(st, Gt, 39), Qt = Lt(st, Gt, 28) ^ it(st, Gt, 34) ^ it(st, Gt, 39), Ce = st & Pe ^ st & er ^ Pe & er, Le = Gt & We ^ Gt & Rr ^ We & Rr;
                  kn = 0 | mn, so = 0 | Pn, mn = 0 | un, Pn = 0 | cn, un = 0 | ur, cn = 0 | Er, { h: ur, l: Er } = mt(0 | kr, 0 | vr, 0 | N, 0 | Q), kr = 0 | er, vr = 0 | Rr, er = 0 | Pe, Rr = 0 | We, Pe = 0 | st, We = 0 | Gt;
                  const Qe = Ot(Q, Qt, Le);
                  st = bt(Qe, N, _t, Ce), Gt = 0 | Qe;
                }
                ({ h: st, l: Gt } = mt(0 | this.Ah, 0 | this.Al, 0 | st, 0 | Gt)), { h: Pe, l: We } = mt(0 | this.Bh, 0 | this.Bl, 0 | Pe, 0 | We), { h: er, l: Rr } = mt(0 | this.Ch, 0 | this.Cl, 0 | er, 0 | Rr), { h: kr, l: vr } = mt(0 | this.Dh, 0 | this.Dl, 0 | kr, 0 | vr), { h: ur, l: Er } = mt(0 | this.Eh, 0 | this.El, 0 | ur, 0 | Er), { h: un, l: cn } = mt(0 | this.Fh, 0 | this.Fl, 0 | un, 0 | cn), { h: mn, l: Pn } = mt(0 | this.Gh, 0 | this.Gl, 0 | mn, 0 | Pn), { h: kn, l: so } = mt(0 | this.Hh, 0 | this.Hl, 0 | kn, 0 | so), this.set(st, Gt, Pe, We, er, Rr, kr, vr, ur, Er, un, cn, mn, Pn, kn, so);
              }
              roundClean() {
                U(oe, te);
              }
              destroy() {
                U(this.buffer), this.set(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0);
              }
            }
            const Mt = function(n) {
              const A = (st) => n().update(B(st)).digest(), G = n();
              return A.outputLen = G.outputLen, A.blockLen = G.blockLen, A.create = () => n(), A;
            }(() => new yt()), O = BigInt(0), z = BigInt(1);
            function J(n, A) {
              if (typeof A != "boolean") throw new Error(n + " boolean expected, got " + A);
            }
            function tt(n) {
              if (typeof n != "string") throw new Error("hex string expected, got " + typeof n);
              return n === "" ? O : BigInt("0x" + n);
            }
            function H(n) {
              return F(n), tt(V(Uint8Array.from(n).reverse()));
            }
            function K(n, A) {
              return x(n.toString(16).padStart(2 * A, "0"));
            }
            function q(n, A) {
              return K(n, A).reverse();
            }
            function _(n, A, G) {
              let st;
              if (typeof A == "string") try {
                st = x(A);
              } catch (Pe) {
                throw new Error(n + " must be hex string or Uint8Array, cause: " + Pe);
              }
              else {
                if (!R(A)) throw new Error(n + " must be hex string or Uint8Array");
                st = Uint8Array.from(A);
              }
              const Gt = st.length;
              if (typeof G == "number" && Gt !== G) throw new Error(n + " of length " + G + " expected, got " + Gt);
              return st;
            }
            const L = (n) => typeof n == "bigint" && O <= n;
            function et(n, A, G, st) {
              if (!function(Gt, Pe, We) {
                return L(Gt) && L(Pe) && L(We) && Pe <= Gt && Gt < We;
              }(A, G, st)) throw new Error("expected valid " + n + ": " + G + " <= n < " + st + ", got " + A);
            }
            const St = (n) => (z << BigInt(n)) - z;
            function kt(n, A, G = {}) {
              if (!n || typeof n != "object") throw new Error("expected valid options object");
              function st(Gt, Pe, We) {
                const er = n[Gt];
                if (We && er === void 0) return;
                const Rr = typeof er;
                if (Rr !== Pe || er === null) throw new Error(`param "${Gt}" is invalid: expected ${Pe}, got ${Rr}`);
              }
              Object.entries(A).forEach(([Gt, Pe]) => st(Gt, Pe, false)), Object.entries(G).forEach(([Gt, Pe]) => st(Gt, Pe, true));
            }
            function ct(n) {
              const A = /* @__PURE__ */ new WeakMap();
              return (G, ...st) => {
                const Gt = A.get(G);
                if (Gt !== void 0) return Gt;
                const Pe = n(G, ...st);
                return A.set(G, Pe), Pe;
              };
            }
            const j = BigInt(0), ut = BigInt(1), gt = BigInt(2), $t = BigInt(3), Ht = BigInt(4), wt = BigInt(5), Jt = BigInt(8);
            function Ee(n, A) {
              const G = n % A;
              return G >= j ? G : A + G;
            }
            function cr(n, A, G) {
              let st = n;
              for (; A-- > j; ) st *= st, st %= G;
              return st;
            }
            function Lr(n, A) {
              if (n === j) throw new Error("invert: expected non-zero number");
              if (A <= j) throw new Error("invert: expected positive modulus, got " + A);
              let G = Ee(n, A), st = A, Gt = j, Pe = ut;
              for (; G !== j; ) {
                const We = st / G, er = st % G, Rr = Gt - Pe * We;
                st = G, G = er, Gt = Pe, Pe = Rr;
              }
              if (st !== ut) throw new Error("invert: does not exist");
              return Ee(Gt, A);
            }
            function on(n, A) {
              const G = (n.ORDER + ut) / Ht, st = n.pow(A, G);
              if (!n.eql(n.sqr(st), A)) throw new Error("Cannot find square root");
              return st;
            }
            function Zr(n, A) {
              const G = (n.ORDER - wt) / Jt, st = n.mul(A, gt), Gt = n.pow(st, G), Pe = n.mul(A, Gt), We = n.mul(n.mul(Pe, gt), Gt), er = n.mul(Pe, n.sub(We, n.ONE));
              if (!n.eql(n.sqr(er), A)) throw new Error("Cannot find square root");
              return er;
            }
            const to = ["create", "isValid", "is0", "neg", "inv", "sqrt", "sqr", "eql", "add", "sub", "mul", "pow", "div", "addN", "subN", "mulN", "sqrN"];
            function qn(n, A, G = false) {
              const st = new Array(A.length).fill(G ? n.ZERO : void 0), Gt = A.reduce((We, er, Rr) => n.is0(er) ? We : (st[Rr] = We, n.mul(We, er)), n.ONE), Pe = n.inv(Gt);
              return A.reduceRight((We, er, Rr) => n.is0(er) ? We : (st[Rr] = n.mul(We, st[Rr]), n.mul(We, er)), Pe), st;
            }
            function jn(n, A) {
              const G = (n.ORDER - ut) / gt, st = n.pow(A, G), Gt = n.eql(st, n.ONE), Pe = n.eql(st, n.ZERO), We = n.eql(st, n.neg(n.ONE));
              if (!Gt && !Pe && !We) throw new Error("invalid Legendre symbol result");
              return Gt ? 1 : Pe ? 0 : -1;
            }
            function eo(n, A) {
              A !== void 0 && function(st) {
                if (!Number.isSafeInteger(st) || st < 0) throw new Error("positive integer expected, got " + st);
              }(A);
              const G = A !== void 0 ? A : n.toString(2).length;
              return { nBitLength: G, nByteLength: Math.ceil(G / 8) };
            }
            function no(n, A, G = false, st = {}) {
              if (n <= j) throw new Error("invalid field: expected ORDER > 0, got " + n);
              let Gt, Pe;
              if (typeof A == "object" && A != null) {
                if (st.sqrt || G) throw new Error("cannot specify opts in two arguments");
                const vr = A;
                vr.BITS && (Gt = vr.BITS), vr.sqrt && (Pe = vr.sqrt), typeof vr.isLE == "boolean" && (G = vr.isLE);
              } else typeof A == "number" && (Gt = A), st.sqrt && (Pe = st.sqrt);
              const { nBitLength: We, nByteLength: er } = eo(n, Gt);
              if (er > 2048) throw new Error("invalid field: expected ORDER of <= 2048 bytes");
              let Rr;
              const kr = Object.freeze({ ORDER: n, isLE: G, BITS: We, BYTES: er, MASK: St(We), ZERO: j, ONE: ut, create: (vr) => Ee(vr, n), isValid: (vr) => {
                if (typeof vr != "bigint") throw new Error("invalid field element: expected bigint, got " + typeof vr);
                return j <= vr && vr < n;
              }, is0: (vr) => vr === j, isValidNot0: (vr) => !kr.is0(vr) && kr.isValid(vr), isOdd: (vr) => (vr & ut) === ut, neg: (vr) => Ee(-vr, n), eql: (vr, ur) => vr === ur, sqr: (vr) => Ee(vr * vr, n), add: (vr, ur) => Ee(vr + ur, n), sub: (vr, ur) => Ee(vr - ur, n), mul: (vr, ur) => Ee(vr * ur, n), pow: (vr, ur) => function(Er, un, cn) {
                if (cn < j) throw new Error("invalid exponent, negatives unsupported");
                if (cn === j) return Er.ONE;
                if (cn === ut) return un;
                let mn = Er.ONE, Pn = un;
                for (; cn > j; ) cn & ut && (mn = Er.mul(mn, Pn)), Pn = Er.sqr(Pn), cn >>= ut;
                return mn;
              }(kr, vr, ur), div: (vr, ur) => Ee(vr * Lr(ur, n), n), sqrN: (vr) => vr * vr, addN: (vr, ur) => vr + ur, subN: (vr, ur) => vr - ur, mulN: (vr, ur) => vr * ur, inv: (vr) => Lr(vr, n), sqrt: Pe || ((vr) => (Rr || (Rr = function(ur) {
                return ur % Ht === $t ? on : ur % Jt === wt ? Zr : function(Er) {
                  if (Er < BigInt(3)) throw new Error("sqrt is not defined for small field");
                  let un = Er - ut, cn = 0;
                  for (; un % gt === j; ) un /= gt, cn++;
                  let mn = gt;
                  const Pn = no(Er);
                  for (; jn(Pn, mn) === 1; ) if (mn++ > 1e3) throw new Error("Cannot find square root: probably non-prime P");
                  if (cn === 1) return on;
                  let kn = Pn.pow(mn, un);
                  const so = (un + ut) / gt;
                  return function(Mn, $n) {
                    if (Mn.is0($n)) return $n;
                    if (jn(Mn, $n) !== 1) throw new Error("Cannot find square root");
                    let On = cn, r = Mn.mul(Mn.ONE, kn), y = Mn.pow($n, un), N = Mn.pow($n, so);
                    for (; !Mn.eql(y, Mn.ONE); ) {
                      if (Mn.is0(y)) return Mn.ZERO;
                      let Q = 1, _t = Mn.sqr(y);
                      for (; !Mn.eql(_t, Mn.ONE); ) if (Q++, _t = Mn.sqr(_t), Q === On) throw new Error("Cannot find square root");
                      const Qt = ut << BigInt(On - Q - 1), Ce = Mn.pow(r, Qt);
                      On = Q, r = Mn.sqr(Ce), y = Mn.mul(y, r), N = Mn.mul(N, Ce);
                    }
                    return N;
                  };
                }(ur);
              }(n)), Rr(kr, vr))), toBytes: (vr) => G ? q(vr, er) : K(vr, er), fromBytes: (vr) => {
                if (vr.length !== er) throw new Error("Field.fromBytes: expected " + er + " bytes, got " + vr.length);
                return G ? H(vr) : function(ur) {
                  return tt(V(ur));
                }(vr);
              }, invertBatch: (vr) => qn(kr, vr), cmov: (vr, ur, Er) => Er ? ur : vr });
              return Object.freeze(kr);
            }
            const Dn = BigInt(0), se = BigInt(1);
            function rr(n, A) {
              const G = A.negate();
              return n ? G : A;
            }
            function Tr(n, A) {
              if (!Number.isSafeInteger(n) || n <= 0 || n > A) throw new Error("invalid window size, expected [1.." + A + "], got W=" + n);
            }
            function mr(n, A) {
              Tr(n, A);
              const G = 2 ** n;
              return { windows: Math.ceil(A / n) + 1, windowSize: 2 ** (n - 1), mask: St(n), maxNumber: G, shiftBy: BigInt(n) };
            }
            function Ir(n, A, G) {
              const { windowSize: st, mask: Gt, maxNumber: Pe, shiftBy: We } = G;
              let er = Number(n & Gt), Rr = n >> We;
              er > st && (er -= Pe, Rr += se);
              const kr = A * st;
              return { nextN: Rr, offset: kr + Math.abs(er) - 1, isZero: er === 0, isNeg: er < 0, isNegF: A % 2 != 0, offsetF: kr };
            }
            const En = /* @__PURE__ */ new WeakMap(), An = /* @__PURE__ */ new WeakMap();
            function _n(n) {
              return An.get(n) || 1;
            }
            function Nn(n) {
              if (n !== Dn) throw new Error("invalid wNAF");
            }
            function Zn(n, A, G, st) {
              (function(Er, un) {
                if (!Array.isArray(Er)) throw new Error("array expected");
                Er.forEach((cn, mn) => {
                  if (!(cn instanceof un)) throw new Error("invalid point at index " + mn);
                });
              })(G, n), function(Er, un) {
                if (!Array.isArray(Er)) throw new Error("array of scalars expected");
                Er.forEach((cn, mn) => {
                  if (!un.isValid(cn)) throw new Error("invalid scalar at index " + mn);
                });
              }(st, A);
              const Gt = G.length, Pe = st.length;
              if (Gt !== Pe) throw new Error("arrays of points and scalars must have equal length");
              const We = n.ZERO, er = function(Er) {
                let un;
                for (un = 0; Er > O; Er >>= z, un += 1) ;
                return un;
              }(BigInt(Gt));
              let Rr = 1;
              er > 12 ? Rr = er - 3 : er > 4 ? Rr = er - 2 : er > 0 && (Rr = 2);
              const kr = St(Rr), vr = new Array(Number(kr) + 1).fill(We);
              let ur = We;
              for (let Er = Math.floor((A.BITS - 1) / Rr) * Rr; Er >= 0; Er -= Rr) {
                vr.fill(We);
                for (let cn = 0; cn < Pe; cn++) {
                  const mn = st[cn], Pn = Number(mn >> BigInt(Er) & kr);
                  vr[Pn] = vr[Pn].add(G[cn]);
                }
                let un = We;
                for (let cn = vr.length - 1, mn = We; cn > 0; cn--) mn = mn.add(vr[cn]), un = un.add(mn);
                if (ur = ur.add(un), Er !== 0) for (let cn = 0; cn < Rr; cn++) ur = ur.double();
              }
              return ur;
            }
            function Jn(n, A) {
              if (A) {
                if (A.ORDER !== n) throw new Error("Field.ORDER must match order: Fp == p, Fn == n");
                return function(G) {
                  kt(G, to.reduce((st, Gt) => (st[Gt] = "function", st), { ORDER: "bigint", MASK: "bigint", BYTES: "number", BITS: "number" }));
                }(A), A;
              }
              return no(n);
            }
            const Hn = BigInt(0), uo = BigInt(1), Oo = BigInt(2), jo = BigInt(8), Bo = { zip215: true };
            function Po(n) {
              const { CURVE: A, curveOpts: G, eddsaOpts: st } = function(Gt) {
                const Pe = { a: Gt.a, d: Gt.d, p: Gt.Fp.ORDER, n: Gt.n, h: Gt.h, Gx: Gt.Gx, Gy: Gt.Gy };
                return { CURVE: Pe, curveOpts: { Fp: Gt.Fp, Fn: no(Pe.n, Gt.nBitLength, true), uvRatio: Gt.uvRatio }, eddsaOpts: { hash: Gt.hash, randomBytes: Gt.randomBytes, adjustScalarBytes: Gt.adjustScalarBytes, domain: Gt.domain, prehash: Gt.prehash, mapToCurve: Gt.mapToCurve } };
              }(n);
              return function(Gt, Pe) {
                return Object.assign({}, Pe, { ExtendedPoint: Pe.Point, CURVE: Gt });
              }(n, function(Gt, Pe) {
                kt(Pe, { hash: "function" }, { adjustScalarBytes: "function", randomBytes: "function", domain: "function", prehash: "function", mapToCurve: "function" });
                const { prehash: We, hash: er } = Pe, { BASE: Rr, Fp: kr, Fn: vr } = Gt, ur = vr.ORDER, Er = Pe.randomBytes || pt, un = Pe.adjustScalarBytes || (($n) => $n), cn = Pe.domain || (($n, On, r) => {
                  if (J("phflag", r), On.length || r) throw new Error("Contexts/pre-hash are not supported");
                  return $n;
                });
                function mn($n) {
                  return vr.create($n);
                }
                function Pn($n) {
                  return mn(H($n));
                }
                function kn($n) {
                  const { head: On, prefix: r, scalar: y } = function(_t) {
                    const Qt = kr.BYTES;
                    _t = _("private key", _t, Qt);
                    const Ce = _("hashed private key", er(_t), 2 * Qt), Le = un(Ce.slice(0, Qt));
                    return { head: Le, prefix: Ce.slice(Qt, 2 * Qt), scalar: Pn(Le) };
                  }($n), N = Rr.multiply(y), Q = N.toBytes();
                  return { head: On, prefix: r, scalar: y, point: N, pointBytes: Q };
                }
                function so($n = Uint8Array.of(), ...On) {
                  const r = W(...On);
                  return Pn(er(cn(r, _("context", $n), !!We)));
                }
                const Mn = Bo;
                return Rr.precompute(8), { getPublicKey: function($n) {
                  return kn($n).pointBytes;
                }, sign: function($n, On, r = {}) {
                  $n = _("message", $n), We && ($n = We($n));
                  const { prefix: y, scalar: N, pointBytes: Q } = kn(On), _t = so(r.context, y, $n), Qt = Rr.multiply(_t).toBytes(), Ce = mn(_t + so(r.context, Qt, Q, $n) * N);
                  et("signature.s", Ce, Hn, ur);
                  const Le = kr.BYTES;
                  return _("result", W(Qt, q(Ce, Le)), 2 * Le);
                }, verify: function($n, On, r, y = Mn) {
                  const { context: N, zip215: Q } = y, _t = kr.BYTES;
                  $n = _("signature", $n, 2 * _t), On = _("message", On), r = _("publicKey", r, _t), Q !== void 0 && J("zip215", Q), We && (On = We(On));
                  const Qt = H($n.slice(_t, 2 * _t));
                  let Ce, Le, Qe;
                  try {
                    Ce = Gt.fromHex(r, Q), Le = Gt.fromHex($n.slice(0, _t), Q), Qe = Rr.multiplyUnsafe(Qt);
                  } catch {
                    return false;
                  }
                  if (!Q && Ce.isSmallOrder()) return false;
                  const Sr = so(N, Le.toBytes(), Ce.toBytes(), On);
                  return Le.add(Ce.multiplyUnsafe(Sr)).subtract(Qe).clearCofactor().is0();
                }, utils: { getExtendedPublicKey: kn, randomPrivateKey: () => Er(kr.BYTES), precompute: ($n = 8, On = Gt.BASE) => On.precompute($n, false) }, Point: Gt };
              }(function(Gt, Pe = {}) {
                const { Fp: We, Fn: er } = function(On, r, y = {}) {
                  if (!r || typeof r != "object") throw new Error(`expected valid ${On} CURVE object`);
                  for (const Qt of ["p", "n", "h"]) {
                    const Ce = r[Qt];
                    if (!(typeof Ce == "bigint" && Ce > Dn)) throw new Error(`CURVE.${Qt} must be positive bigint`);
                  }
                  const N = Jn(r.p, y.Fp), Q = Jn(r.n, y.Fn), _t = ["Gx", "Gy", "a", "d"];
                  for (const Qt of _t) if (!N.isValid(r[Qt])) throw new Error(`CURVE.${Qt} must be valid field element of CURVE.Fp`);
                  return { Fp: N, Fn: Q };
                }("edwards", Gt, Pe), { h: Rr, n: kr } = Gt;
                kt(Pe, {}, { uvRatio: "function" });
                const vr = Oo << BigInt(8 * er.BYTES) - uo, ur = (On) => We.create(On), Er = Pe.uvRatio || ((On, r) => {
                  try {
                    return { isValid: true, value: We.sqrt(We.div(On, r)) };
                  } catch {
                    return { isValid: false, value: Hn };
                  }
                });
                if (!function(On, r, y, N) {
                  const Q = On.sqr(y), _t = On.sqr(N), Qt = On.add(On.mul(r.a, Q), _t), Ce = On.add(On.ONE, On.mul(r.d, On.mul(Q, _t)));
                  return On.eql(Qt, Ce);
                }(We, Gt, Gt.Gx, Gt.Gy)) throw new Error("bad curve params: generator point");
                function un(On, r, y = false) {
                  return et("coordinate " + On, r, y ? uo : Hn, vr), r;
                }
                function cn(On) {
                  if (!(On instanceof kn)) throw new Error("ExtendedPoint expected");
                }
                const mn = ct((On, r) => {
                  const { ex: y, ey: N, ez: Q } = On, _t = On.is0();
                  r == null && (r = _t ? jo : We.inv(Q));
                  const Qt = ur(y * r), Ce = ur(N * r), Le = ur(Q * r);
                  if (_t) return { x: Hn, y: uo };
                  if (Le !== uo) throw new Error("invZ was invalid");
                  return { x: Qt, y: Ce };
                }), Pn = ct((On) => {
                  const { a: r, d: y } = Gt;
                  if (On.is0()) throw new Error("bad point: ZERO");
                  const { ex: N, ey: Q, ez: _t, et: Qt } = On, Ce = ur(N * N), Le = ur(Q * Q), Qe = ur(_t * _t), Sr = ur(Qe * Qe), Kt = ur(Ce * r);
                  if (ur(Qe * ur(Kt + Le)) !== ur(Sr + ur(y * ur(Ce * Le)))) throw new Error("bad point: equation left != right (1)");
                  if (ur(N * Q) !== ur(_t * Qt)) throw new Error("bad point: equation left != right (2)");
                  return true;
                });
                class kn {
                  constructor(r, y, N, Q) {
                    this.ex = un("x", r), this.ey = un("y", y), this.ez = un("z", N, true), this.et = un("t", Q), Object.freeze(this);
                  }
                  get x() {
                    return this.toAffine().x;
                  }
                  get y() {
                    return this.toAffine().y;
                  }
                  static fromAffine(r) {
                    if (r instanceof kn) throw new Error("extended point not allowed");
                    const { x: y, y: N } = r || {};
                    return un("x", y), un("y", N), new kn(y, N, uo, ur(y * N));
                  }
                  static normalizeZ(r) {
                    return function(y, N, Q) {
                      const _t = (Ce) => Ce.ez, Qt = qn(y.Fp, Q.map(_t));
                      return Q.map((Ce, Le) => Ce.toAffine(Qt[Le])).map(y.fromAffine);
                    }(kn, 0, r);
                  }
                  static msm(r, y) {
                    return Zn(kn, er, r, y);
                  }
                  _setWindowSize(r) {
                    this.precompute(r);
                  }
                  precompute(r = 8, y = true) {
                    return so.setWindowSize(this, r), y || this.multiply(Oo), this;
                  }
                  assertValidity() {
                    Pn(this);
                  }
                  equals(r) {
                    cn(r);
                    const { ex: y, ey: N, ez: Q } = this, { ex: _t, ey: Qt, ez: Ce } = r, Le = ur(y * Ce), Qe = ur(_t * Q), Sr = ur(N * Ce), Kt = ur(Qt * Q);
                    return Le === Qe && Sr === Kt;
                  }
                  is0() {
                    return this.equals(kn.ZERO);
                  }
                  negate() {
                    return new kn(ur(-this.ex), this.ey, this.ez, ur(-this.et));
                  }
                  double() {
                    const { a: r } = Gt, { ex: y, ey: N, ez: Q } = this, _t = ur(y * y), Qt = ur(N * N), Ce = ur(Oo * ur(Q * Q)), Le = ur(r * _t), Qe = y + N, Sr = ur(ur(Qe * Qe) - _t - Qt), Kt = Le + Qt, re = Kt - Ce, fe = Le - Qt, Re = ur(Sr * re), Te = ur(Kt * fe), Fe = ur(Sr * fe), Xe = ur(re * Kt);
                    return new kn(Re, Te, Xe, Fe);
                  }
                  add(r) {
                    cn(r);
                    const { a: y, d: N } = Gt, { ex: Q, ey: _t, ez: Qt, et: Ce } = this, { ex: Le, ey: Qe, ez: Sr, et: Kt } = r, re = ur(Q * Le), fe = ur(_t * Qe), Re = ur(Ce * N * Kt), Te = ur(Qt * Sr), Fe = ur((Q + _t) * (Le + Qe) - re - fe), Xe = Te - Re, Ne = Te + Re, Be = ur(fe - y * re), Ue = ur(Fe * Xe), He = ur(Ne * Be), qr = ur(Fe * Be), rn = ur(Xe * Ne);
                    return new kn(Ue, He, rn, qr);
                  }
                  subtract(r) {
                    return this.add(r.negate());
                  }
                  multiply(r) {
                    const y = r;
                    et("scalar", y, uo, kr);
                    const { p: N, f: Q } = so.wNAFCached(this, y, kn.normalizeZ);
                    return kn.normalizeZ([N, Q])[0];
                  }
                  multiplyUnsafe(r, y = kn.ZERO) {
                    const N = r;
                    return et("scalar", N, Hn, kr), N === Hn ? kn.ZERO : this.is0() || N === uo ? this : so.wNAFCachedUnsafe(this, N, kn.normalizeZ, y);
                  }
                  isSmallOrder() {
                    return this.multiplyUnsafe(Rr).is0();
                  }
                  isTorsionFree() {
                    return so.wNAFCachedUnsafe(this, kr).is0();
                  }
                  toAffine(r) {
                    return mn(this, r);
                  }
                  clearCofactor() {
                    return Rr === uo ? this : this.multiplyUnsafe(Rr);
                  }
                  static fromBytes(r, y = false) {
                    return F(r), this.fromHex(r, y);
                  }
                  static fromHex(r, y = false) {
                    const { d: N, a: Q } = Gt, _t = We.BYTES;
                    r = _("pointHex", r, _t), J("zip215", y);
                    const Qt = r.slice(), Ce = r[_t - 1];
                    Qt[_t - 1] = -129 & Ce;
                    const Le = H(Qt), Qe = y ? vr : We.ORDER;
                    et("pointHex.y", Le, Hn, Qe);
                    const Sr = ur(Le * Le), Kt = ur(Sr - uo), re = ur(N * Sr - Q);
                    let { isValid: fe, value: Re } = Er(Kt, re);
                    if (!fe) throw new Error("Point.fromHex: invalid y coordinate");
                    const Te = (Re & uo) === uo, Fe = !!(128 & Ce);
                    if (!y && Re === Hn && Fe) throw new Error("Point.fromHex: x=0 and x_0=1");
                    return Fe !== Te && (Re = ur(-Re)), kn.fromAffine({ x: Re, y: Le });
                  }
                  static fromPrivateScalar(r) {
                    return kn.BASE.multiply(r);
                  }
                  toBytes() {
                    const { x: r, y } = this.toAffine(), N = q(y, We.BYTES);
                    return N[N.length - 1] |= r & uo ? 128 : 0, N;
                  }
                  toRawBytes() {
                    return this.toBytes();
                  }
                  toHex() {
                    return V(this.toBytes());
                  }
                  toString() {
                    return `<Point ${this.is0() ? "ZERO" : this.toHex()}>`;
                  }
                }
                kn.BASE = new kn(Gt.Gx, Gt.Gy, uo, ur(Gt.Gx * Gt.Gy)), kn.ZERO = new kn(Hn, uo, uo, Hn), kn.Fp = We, kn.Fn = er;
                const so = (Mn = kn, $n = 8 * er.BYTES, { constTimeNegate: rr, hasPrecomputes: (On) => _n(On) !== 1, unsafeLadder(On, r, y = Mn.ZERO) {
                  let N = On;
                  for (; r > Dn; ) r & se && (y = y.add(N)), N = N.double(), r >>= se;
                  return y;
                }, precomputeWindow(On, r) {
                  const { windows: y, windowSize: N } = mr(r, $n), Q = [];
                  let _t = On, Qt = _t;
                  for (let Ce = 0; Ce < y; Ce++) {
                    Qt = _t, Q.push(Qt);
                    for (let Le = 1; Le < N; Le++) Qt = Qt.add(_t), Q.push(Qt);
                    _t = Qt.double();
                  }
                  return Q;
                }, wNAF(On, r, y) {
                  let N = Mn.ZERO, Q = Mn.BASE;
                  const _t = mr(On, $n);
                  for (let Qt = 0; Qt < _t.windows; Qt++) {
                    const { nextN: Ce, offset: Le, isZero: Qe, isNeg: Sr, isNegF: Kt, offsetF: re } = Ir(y, Qt, _t);
                    y = Ce, Qe ? Q = Q.add(rr(Kt, r[re])) : N = N.add(rr(Sr, r[Le]));
                  }
                  return Nn(y), { p: N, f: Q };
                }, wNAFUnsafe(On, r, y, N = Mn.ZERO) {
                  const Q = mr(On, $n);
                  for (let _t = 0; _t < Q.windows && y !== Dn; _t++) {
                    const { nextN: Qt, offset: Ce, isZero: Le, isNeg: Qe } = Ir(y, _t, Q);
                    if (y = Qt, !Le) {
                      const Sr = r[Ce];
                      N = N.add(Qe ? Sr.negate() : Sr);
                    }
                  }
                  return Nn(y), N;
                }, getPrecomputes(On, r, y) {
                  let N = En.get(r);
                  return N || (N = this.precomputeWindow(r, On), On !== 1 && (typeof y == "function" && (N = y(N)), En.set(r, N))), N;
                }, wNAFCached(On, r, y) {
                  const N = _n(On);
                  return this.wNAF(N, this.getPrecomputes(N, On, y), r);
                }, wNAFCachedUnsafe(On, r, y, N) {
                  const Q = _n(On);
                  return Q === 1 ? this.unsafeLadder(On, r, N) : this.wNAFUnsafe(Q, this.getPrecomputes(Q, On, y), r, N);
                }, setWindowSize(On, r) {
                  Tr(r, $n), An.set(On, r), En.delete(On);
                } });
                var Mn, $n;
                return kn;
              }(A, G), st));
            }
            BigInt(0);
            const yo = BigInt(1), ri = BigInt(2), Eo = (BigInt(3), BigInt(5)), Ao = BigInt(8), ti = { p: BigInt("0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffed"), n: BigInt("0x1000000000000000000000000000000014def9dea2f79cd65812631a5cf5d3ed"), h: Ao, a: BigInt("0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffec"), d: BigInt("0x52036cee2b6ffe738cc740797779e89800700a4d4141d8ab75eb4dca135978a3"), Gx: BigInt("0x216936d3cd6e53fec0a4e231fdd6dc5c692cc7609525a7b2c9562d608f25d51a"), Gy: BigInt("0x6666666666666666666666666666666666666666666666666666666666666658") };
            function li(n) {
              return n[0] &= 248, n[31] &= 127, n[31] |= 64, n;
            }
            const pi = BigInt("19681161376707505956807079304988542015446066515923890162744021073123829784752");
            function Ho(n, A) {
              const G = ti.p, st = Ee(A * A * A, G), Gt = Ee(st * st * A, G);
              let Pe = Ee(n * st * function(Er) {
                const un = BigInt(10), cn = BigInt(20), mn = BigInt(40), Pn = BigInt(80), kn = ti.p, so = Er * Er % kn * Er % kn, Mn = cr(so, ri, kn) * so % kn, $n = cr(Mn, yo, kn) * Er % kn, On = cr($n, Eo, kn) * $n % kn, r = cr(On, un, kn) * On % kn, y = cr(r, cn, kn) * r % kn, N = cr(y, mn, kn) * y % kn, Q = cr(N, Pn, kn) * N % kn, _t = cr(Q, Pn, kn) * N % kn, Qt = cr(_t, un, kn) * On % kn;
                return { pow_p_5_8: cr(Qt, ri, kn) * Er % kn, b2: so };
              }(n * Gt).pow_p_5_8, G);
              const We = Ee(A * Pe * Pe, G), er = Pe, Rr = Ee(Pe * pi, G), kr = We === n, vr = We === Ee(-n, G), ur = We === Ee(-n * pi, G);
              return kr && (Pe = er), (vr || ur) && (Pe = Rr), (Ee(Pe, G) & ut) === ut && (Pe = Ee(-Pe, G)), { isValid: kr || vr, value: Pe };
            }
            const ai = no(ti.p, void 0, true), hi = Po({ ...ti, Fp: ai, hash: Mt, adjustScalarBytes: li, uvRatio: Ho });
            var Co = b(8287).Buffer;
            function Wo(n, A) {
              return Co.from(hi.sign(Co.from(n), A));
            }
            function qt(n, A, G) {
              return hi.verify(Co.from(A), Co.from(n), Co.from(G), { zip215: false });
            }
            var Nt = function(n, A) {
              for (var G = typeof n == "number", st = String(n); st.endsWith(A); ) st = st.slice(0, -1);
              return G ? Number(st) : st;
            }, he = b(5360), _e = b(8287).Buffer;
            function Ve(n) {
              return Ve = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(A) {
                return typeof A;
              } : function(A) {
                return A && typeof Symbol == "function" && A.constructor === Symbol && A !== Symbol.prototype ? "symbol" : typeof A;
              }, Ve(n);
            }
            function qe(n, A) {
              for (var G = 0; G < A.length; G++) {
                var st = A[G];
                st.enumerable = st.enumerable || false, st.configurable = true, "value" in st && (st.writable = true), Object.defineProperty(n, Ge(st.key), st);
              }
            }
            function Ge(n) {
              var A = function(G) {
                if (Ve(G) != "object" || !G) return G;
                var st = G[Symbol.toPrimitive];
                if (st !== void 0) {
                  var Gt = st.call(G, "string");
                  if (Ve(Gt) != "object") return Gt;
                  throw new TypeError("@@toPrimitive must return a primitive value.");
                }
                return String(G);
              }(n);
              return Ve(A) == "symbol" ? A : A + "";
            }
            var Je, Oe, lr, Fr = { ed25519PublicKey: 48, ed25519SecretSeed: 144, med25519PublicKey: 96, preAuthTx: 152, sha256Hash: 184, signedPayload: 120, contract: 16, liquidityPool: 88, claimableBalance: 8 }, Dr = { G: "ed25519PublicKey", S: "ed25519SecretSeed", M: "med25519PublicKey", T: "preAuthTx", X: "sha256Hash", P: "signedPayload", C: "contract", L: "liquidityPool", B: "claimableBalance" }, gr = function() {
              return n = function G() {
                (function(st, Gt) {
                  if (!(st instanceof Gt)) throw new TypeError("Cannot call a class as a function");
                })(this, G);
              }, A = [{ key: "encodeEd25519PublicKey", value: function(G) {
                return yn("ed25519PublicKey", G);
              } }, { key: "decodeEd25519PublicKey", value: function(G) {
                return pn("ed25519PublicKey", G);
              } }, { key: "isValidEd25519PublicKey", value: function(G) {
                return an("ed25519PublicKey", G);
              } }, { key: "encodeEd25519SecretSeed", value: function(G) {
                return yn("ed25519SecretSeed", G);
              } }, { key: "decodeEd25519SecretSeed", value: function(G) {
                return pn("ed25519SecretSeed", G);
              } }, { key: "isValidEd25519SecretSeed", value: function(G) {
                return an("ed25519SecretSeed", G);
              } }, { key: "encodeMed25519PublicKey", value: function(G) {
                return yn("med25519PublicKey", G);
              } }, { key: "decodeMed25519PublicKey", value: function(G) {
                return pn("med25519PublicKey", G);
              } }, { key: "isValidMed25519PublicKey", value: function(G) {
                return an("med25519PublicKey", G);
              } }, { key: "encodePreAuthTx", value: function(G) {
                return yn("preAuthTx", G);
              } }, { key: "decodePreAuthTx", value: function(G) {
                return pn("preAuthTx", G);
              } }, { key: "encodeSha256Hash", value: function(G) {
                return yn("sha256Hash", G);
              } }, { key: "decodeSha256Hash", value: function(G) {
                return pn("sha256Hash", G);
              } }, { key: "encodeSignedPayload", value: function(G) {
                return yn("signedPayload", G);
              } }, { key: "decodeSignedPayload", value: function(G) {
                return pn("signedPayload", G);
              } }, { key: "isValidSignedPayload", value: function(G) {
                return an("signedPayload", G);
              } }, { key: "encodeContract", value: function(G) {
                return yn("contract", G);
              } }, { key: "decodeContract", value: function(G) {
                return pn("contract", G);
              } }, { key: "isValidContract", value: function(G) {
                return an("contract", G);
              } }, { key: "encodeClaimableBalance", value: function(G) {
                return yn("claimableBalance", G);
              } }, { key: "decodeClaimableBalance", value: function(G) {
                return pn("claimableBalance", G);
              } }, { key: "isValidClaimableBalance", value: function(G) {
                return an("claimableBalance", G);
              } }, { key: "encodeLiquidityPool", value: function(G) {
                return yn("liquidityPool", G);
              } }, { key: "decodeLiquidityPool", value: function(G) {
                return pn("liquidityPool", G);
              } }, { key: "isValidLiquidityPool", value: function(G) {
                return an("liquidityPool", G);
              } }, { key: "getVersionByteForPrefix", value: function(G) {
                return Dr[G[0]];
              } }], A && qe(n, A), Object.defineProperty(n, "prototype", { writable: false }), n;
              var n, A;
            }();
            function an(n, A) {
              if (typeof A != "string") return false;
              switch (n) {
                case "ed25519PublicKey":
                case "ed25519SecretSeed":
                case "preAuthTx":
                case "sha256Hash":
                case "contract":
                case "liquidityPool":
                  if (A.length !== 56) return false;
                  break;
                case "claimableBalance":
                  if (A.length !== 58) return false;
                  break;
                case "med25519PublicKey":
                  if (A.length !== 69) return false;
                  break;
                case "signedPayload":
                  if (A.length < 56 || A.length > 165) return false;
                  break;
                default:
                  return false;
              }
              var G = "";
              try {
                G = pn(n, A);
              } catch {
                return false;
              }
              switch (n) {
                case "ed25519PublicKey":
                case "ed25519SecretSeed":
                case "preAuthTx":
                case "sha256Hash":
                case "contract":
                case "liquidityPool":
                  return G.length === 32;
                case "claimableBalance":
                  return G.length === 33;
                case "med25519PublicKey":
                  return G.length === 40;
                case "signedPayload":
                  return G.length >= 40 && G.length <= 100;
                default:
                  return false;
              }
            }
            function pn(n, A) {
              if (typeof A != "string") throw new TypeError("encoded argument must be of type String");
              var G = he.decode(A), st = G[0], Gt = G.slice(0, -2), Pe = Gt.slice(1), We = G.slice(-2);
              if (A !== he.encode(G)) throw new Error("invalid encoded string");
              var er = Fr[n];
              if (er === void 0) throw new Error("".concat(n, " is not a valid version byte name. ") + "Expected one of ".concat(Object.keys(Fr).join(", ")));
              if (st !== er) throw new Error("invalid version byte. expected ".concat(er, ", got ").concat(st));
              if (!function(Rr, kr) {
                if (Rr.length !== kr.length) return false;
                if (Rr.length === 0) return true;
                for (var vr = 0; vr < Rr.length; vr += 1) if (Rr[vr] !== kr[vr]) return false;
                return true;
              }(Rt(Gt), We)) throw new Error("invalid checksum");
              return _e.from(Pe);
            }
            function yn(n, A) {
              if (A == null) throw new Error("cannot encode null data");
              var G = Fr[n];
              if (G === void 0) throw new Error("".concat(n, " is not a valid version byte name. ") + "Expected one of ".concat(Object.keys(Fr).join(", ")));
              A = _e.from(A);
              var st = _e.from([G]), Gt = _e.concat([st, A]), Pe = _e.from(Rt(Gt)), We = _e.concat([Gt, Pe]);
              return he.encode(We);
            }
            function Rt(n) {
              for (var A = [0, 4129, 8258, 12387, 16516, 20645, 24774, 28903, 33032, 37161, 41290, 45419, 49548, 53677, 57806, 61935, 4657, 528, 12915, 8786, 21173, 17044, 29431, 25302, 37689, 33560, 45947, 41818, 54205, 50076, 62463, 58334, 9314, 13379, 1056, 5121, 25830, 29895, 17572, 21637, 42346, 46411, 34088, 38153, 58862, 62927, 50604, 54669, 13907, 9842, 5649, 1584, 30423, 26358, 22165, 18100, 46939, 42874, 38681, 34616, 63455, 59390, 55197, 51132, 18628, 22757, 26758, 30887, 2112, 6241, 10242, 14371, 51660, 55789, 59790, 63919, 35144, 39273, 43274, 47403, 23285, 19156, 31415, 27286, 6769, 2640, 14899, 10770, 56317, 52188, 64447, 60318, 39801, 35672, 47931, 43802, 27814, 31879, 19684, 23749, 11298, 15363, 3168, 7233, 60846, 64911, 52716, 56781, 44330, 48395, 36200, 40265, 32407, 28342, 24277, 20212, 15891, 11826, 7761, 3696, 65439, 61374, 57309, 53244, 48923, 44858, 40793, 36728, 37256, 33193, 45514, 41451, 53516, 49453, 61774, 57711, 4224, 161, 12482, 8419, 20484, 16421, 28742, 24679, 33721, 37784, 41979, 46042, 49981, 54044, 58239, 62302, 689, 4752, 8947, 13010, 16949, 21012, 25207, 29270, 46570, 42443, 38312, 34185, 62830, 58703, 54572, 50445, 13538, 9411, 5280, 1153, 29798, 25671, 21540, 17413, 42971, 47098, 34713, 38840, 59231, 63358, 50973, 55100, 9939, 14066, 1681, 5808, 26199, 30326, 17941, 22068, 55628, 51565, 63758, 59695, 39368, 35305, 47498, 43435, 22596, 18533, 30726, 26663, 6336, 2273, 14466, 10403, 52093, 56156, 60223, 64286, 35833, 39896, 43963, 48026, 19061, 23124, 27191, 31254, 2801, 6864, 10931, 14994, 64814, 60687, 56684, 52557, 48554, 44427, 40424, 36297, 31782, 27655, 23652, 19525, 15522, 11395, 7392, 3265, 61215, 65342, 53085, 57212, 44955, 49082, 36825, 40952, 28183, 32310, 20053, 24180, 11923, 16050, 3793, 7920], G = 0, st = 0; st < n.length; st += 1) G = G << 8 ^ A[G >> 8 ^ n[st]], G &= 65535;
              var Gt = new Uint8Array(2);
              return Gt[0] = 255 & G, Gt[1] = G >> 8 & 255, Gt;
            }
            Je = gr, lr = Dr, (Oe = Ge(Oe = "types")) in Je ? Object.defineProperty(Je, Oe, { value: lr, enumerable: true, configurable: true, writable: true }) : Je[Oe] = lr;
            var jr = b(8287).Buffer;
            function Ln(n) {
              return Ln = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(A) {
                return typeof A;
              } : function(A) {
                return A && typeof Symbol == "function" && A.constructor === Symbol && A !== Symbol.prototype ? "symbol" : typeof A;
              }, Ln(n);
            }
            function fo(n, A) {
              for (var G = 0; G < A.length; G++) {
                var st = A[G];
                st.enumerable = st.enumerable || false, st.configurable = true, "value" in st && (st.writable = true), Object.defineProperty(n, Wt(st.key), st);
              }
            }
            function Wt(n) {
              var A = function(G) {
                if (Ln(G) != "object" || !G) return G;
                var st = G[Symbol.toPrimitive];
                if (st !== void 0) {
                  var Gt = st.call(G, "string");
                  if (Ln(Gt) != "object") return Gt;
                  throw new TypeError("@@toPrimitive must return a primitive value.");
                }
                return String(G);
              }(n);
              return Ln(A) == "symbol" ? A : A + "";
            }
            var ue = function(n, A, G) {
              return A && fo(n.prototype, A), G && fo(n, G), Object.defineProperty(n, "prototype", { writable: false }), n;
            }(function n(A) {
              if (function(st, Gt) {
                if (!(st instanceof Gt)) throw new TypeError("Cannot call a class as a function");
              }(this, n), A.type !== "ed25519") throw new Error("Invalid keys type");
              if (this.type = A.type, A.secretKey) {
                if (A.secretKey = jr.from(A.secretKey), A.secretKey.length !== 32) throw new Error("secretKey length is invalid");
                if (this._secretSeed = A.secretKey, this._publicKey = (G = A.secretKey, Co.from(hi.getPublicKey(G))), this._secretKey = A.secretKey, A.publicKey && !this._publicKey.equals(jr.from(A.publicKey))) throw new Error("secretKey does not match publicKey");
              } else if (this._publicKey = jr.from(A.publicKey), this._publicKey.length !== 32) throw new Error("publicKey length is invalid");
              var G;
            }, [{ key: "xdrAccountId", value: function() {
              return new c.AccountId.publicKeyTypeEd25519(this._publicKey);
            } }, { key: "xdrPublicKey", value: function() {
              return new c.PublicKey.publicKeyTypeEd25519(this._publicKey);
            } }, { key: "xdrMuxedAccount", value: function(n) {
              if (n !== void 0) {
                if (typeof n != "string") throw new TypeError("expected string for ID, got ".concat(Ln(n)));
                return c.MuxedAccount.keyTypeMuxedEd25519(new c.MuxedAccountMed25519({ id: c.Uint64.fromString(n), ed25519: this._publicKey }));
              }
              return new c.MuxedAccount.keyTypeEd25519(this._publicKey);
            } }, { key: "rawPublicKey", value: function() {
              return this._publicKey;
            } }, { key: "signatureHint", value: function() {
              var n = this.xdrAccountId().toXDR();
              return n.slice(n.length - 4);
            } }, { key: "publicKey", value: function() {
              return gr.encodeEd25519PublicKey(this._publicKey);
            } }, { key: "secret", value: function() {
              if (!this._secretSeed) throw new Error("no secret key available");
              if (this.type === "ed25519") return gr.encodeEd25519SecretSeed(this._secretSeed);
              throw new Error("Invalid Keypair type");
            } }, { key: "rawSecretKey", value: function() {
              return this._secretSeed;
            } }, { key: "canSign", value: function() {
              return !!this._secretKey;
            } }, { key: "sign", value: function(n) {
              if (!this.canSign()) throw new Error("cannot sign: no secret key available");
              return Wo(n, this._secretKey);
            } }, { key: "verify", value: function(n, A) {
              return qt(n, A, this._publicKey);
            } }, { key: "signDecorated", value: function(n) {
              var A = this.sign(n), G = this.signatureHint();
              return new c.DecoratedSignature({ hint: G, signature: A });
            } }, { key: "signPayloadDecorated", value: function(n) {
              var A = this.sign(n), G = this.signatureHint(), st = jr.from(n.slice(-4));
              return st.length < 4 && (st = jr.concat([st, jr.alloc(4 - n.length, 0)])), new c.DecoratedSignature({ hint: st.map(function(Gt, Pe) {
                return Gt ^ G[Pe];
              }), signature: A });
            } }], [{ key: "fromSecret", value: function(n) {
              var A = gr.decodeEd25519SecretSeed(n);
              return this.fromRawEd25519Seed(A);
            } }, { key: "fromRawEd25519Seed", value: function(n) {
              return new this({ type: "ed25519", secretKey: n });
            } }, { key: "master", value: function(n) {
              if (!n) throw new Error("No network selected. Please pass a network argument, e.g. `Keypair.master(Networks.PUBLIC)`.");
              return this.fromRawEd25519Seed(P(n));
            } }, { key: "fromPublicKey", value: function(n) {
              if ((n = gr.decodeEd25519PublicKey(n)).length !== 32) throw new Error("Invalid Stellar public key");
              return new this({ type: "ed25519", publicKey: n });
            } }, { key: "random", value: function() {
              var n = hi.utils.randomPrivateKey();
              return this.fromRawEd25519Seed(n);
            } }]), Zt = b(8287).Buffer;
            function Xt(n) {
              return Xt = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(A) {
                return typeof A;
              } : function(A) {
                return A && typeof Symbol == "function" && A.constructor === Symbol && A !== Symbol.prototype ? "symbol" : typeof A;
              }, Xt(n);
            }
            function pe(n, A) {
              for (var G = 0; G < A.length; G++) {
                var st = A[G];
                st.enumerable = st.enumerable || false, st.configurable = true, "value" in st && (st.writable = true), Object.defineProperty(n, $e(st.key), st);
              }
            }
            function $e(n) {
              var A = function(G) {
                if (Xt(G) != "object" || !G) return G;
                var st = G[Symbol.toPrimitive];
                if (st !== void 0) {
                  var Gt = st.call(G, "string");
                  if (Xt(Gt) != "object") return Gt;
                  throw new TypeError("@@toPrimitive must return a primitive value.");
                }
                return String(G);
              }(n);
              return Xt(A) == "symbol" ? A : A + "";
            }
            var je = function() {
              function n(A, G) {
                if (function(st, Gt) {
                  if (!(st instanceof Gt)) throw new TypeError("Cannot call a class as a function");
                }(this, n), !/^[a-zA-Z0-9]{1,12}$/.test(A)) throw new Error("Asset code is invalid (maximum alphanumeric, 12 characters at max)");
                if (String(A).toLowerCase() !== "xlm" && !G) throw new Error("Issuer cannot be null");
                if (G && !gr.isValidEd25519PublicKey(G)) throw new Error("Issuer is invalid");
                String(A).toLowerCase() === "xlm" ? this.code = "XLM" : this.code = A, this.issuer = G;
              }
              return function(A, G, st) {
                return G && pe(A.prototype, G), st && pe(A, st), Object.defineProperty(A, "prototype", { writable: false }), A;
              }(n, [{ key: "toXDRObject", value: function() {
                return this._toXDRObject(c.Asset);
              } }, { key: "toChangeTrustXDRObject", value: function() {
                return this._toXDRObject(c.ChangeTrustAsset);
              } }, { key: "toTrustLineXDRObject", value: function() {
                return this._toXDRObject(c.TrustLineAsset);
              } }, { key: "contractId", value: function(A) {
                var G = P(Zt.from(A)), st = c.HashIdPreimage.envelopeTypeContractId(new c.HashIdPreimageContractId({ networkId: G, contractIdPreimage: c.ContractIdPreimage.contractIdPreimageFromAsset(this.toXDRObject()) }));
                return gr.encodeContract(P(st.toXDR()));
              } }, { key: "_toXDRObject", value: function() {
                var A, G, st = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : c.Asset;
                if (this.isNative()) return st.assetTypeNative();
                this.code.length <= 4 ? (A = c.AlphaNum4, G = "assetTypeCreditAlphanum4") : (A = c.AlphaNum12, G = "assetTypeCreditAlphanum12");
                var Gt = this.code.length <= 4 ? 4 : 12;
                return new st(G, new A({ assetCode: this.code.padEnd(Gt, "\0"), issuer: ue.fromPublicKey(this.issuer).xdrAccountId() }));
              } }, { key: "getCode", value: function() {
                if (this.code !== void 0) return String(this.code);
              } }, { key: "getIssuer", value: function() {
                if (this.issuer !== void 0) return String(this.issuer);
              } }, { key: "getAssetType", value: function() {
                switch (this.getRawAssetType().value) {
                  case c.AssetType.assetTypeNative().value:
                    return "native";
                  case c.AssetType.assetTypeCreditAlphanum4().value:
                    return "credit_alphanum4";
                  case c.AssetType.assetTypeCreditAlphanum12().value:
                    return "credit_alphanum12";
                  default:
                    return "unknown";
                }
              } }, { key: "getRawAssetType", value: function() {
                return this.isNative() ? c.AssetType.assetTypeNative() : this.code.length <= 4 ? c.AssetType.assetTypeCreditAlphanum4() : c.AssetType.assetTypeCreditAlphanum12();
              } }, { key: "isNative", value: function() {
                return !this.issuer;
              } }, { key: "equals", value: function(A) {
                return this.code === A.getCode() && this.issuer === A.getIssuer();
              } }, { key: "toString", value: function() {
                return this.isNative() ? "native" : "".concat(this.getCode(), ":").concat(this.getIssuer());
              } }], [{ key: "native", value: function() {
                return new n("XLM");
              } }, { key: "fromOperation", value: function(A) {
                var G, st;
                switch (A.switch()) {
                  case c.AssetType.assetTypeNative():
                    return this.native();
                  case c.AssetType.assetTypeCreditAlphanum4():
                    G = A.alphaNum4();
                  case c.AssetType.assetTypeCreditAlphanum12():
                    return G = G || A.alphaNum12(), st = gr.encodeEd25519PublicKey(G.issuer().ed25519()), new this(Nt(G.assetCode(), "\0"), st);
                  default:
                    throw new Error("Invalid asset type: ".concat(A.switch().name));
                }
              } }, { key: "compare", value: function(A, G) {
                if (!(A && A instanceof n)) throw new Error("assetA is invalid");
                if (!(G && G instanceof n)) throw new Error("assetB is invalid");
                if (A.equals(G)) return 0;
                var st = A.getRawAssetType().value, Gt = G.getRawAssetType().value;
                if (st !== Gt) return st < Gt ? -1 : 1;
                var Pe = Me(A.getCode(), G.getCode());
                return Pe !== 0 ? Pe : Me(A.getIssuer(), G.getIssuer());
              } }]);
            }();
            function Me(n, A) {
              return Zt.compare(Zt.from(n, "ascii"), Zt.from(A, "ascii"));
            }
            var fr = b(8287).Buffer, Nr = 30;
            function wr(n) {
              var A = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};
              if (n !== "constant_product") throw new Error("liquidityPoolType is invalid");
              var G = A.assetA, st = A.assetB, Gt = A.fee;
              if (!(G && G instanceof je)) throw new Error("assetA is invalid");
              if (!(st && st instanceof je)) throw new Error("assetB is invalid");
              if (!Gt || Gt !== Nr) throw new Error("fee is invalid");
              if (je.compare(G, st) !== -1) throw new Error("Assets are not in lexicographic order");
              var Pe = c.LiquidityPoolType.liquidityPoolConstantProduct().toXDR(), We = new c.LiquidityPoolConstantProductParameters({ assetA: G.toXDRObject(), assetB: st.toXDRObject(), fee: Gt }).toXDR();
              return P(fr.concat([Pe, We]));
            }
            var Vr = b(8287).Buffer;
            function $r(n) {
              return $r = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(A) {
                return typeof A;
              } : function(A) {
                return A && typeof Symbol == "function" && A.constructor === Symbol && A !== Symbol.prototype ? "symbol" : typeof A;
              }, $r(n);
            }
            function Xr(n, A) {
              for (var G = 0; G < A.length; G++) {
                var st = A[G];
                st.enumerable = st.enumerable || false, st.configurable = true, "value" in st && (st.writable = true), Object.defineProperty(n, Cn(st.key), st);
              }
            }
            function Cn(n) {
              var A = function(G) {
                if ($r(G) != "object" || !G) return G;
                var st = G[Symbol.toPrimitive];
                if (st !== void 0) {
                  var Gt = st.call(G, "string");
                  if ($r(Gt) != "object") return Gt;
                  throw new TypeError("@@toPrimitive must return a primitive value.");
                }
                return String(G);
              }(n);
              return $r(A) == "symbol" ? A : A + "";
            }
            var sn = function(n, A) {
              return A && Xr(n.prototype, A), Object.defineProperty(n, "prototype", { writable: false }), n;
            }(function n(A, G, st, Gt) {
              if (function(Pe, We) {
                if (!(Pe instanceof We)) throw new TypeError("Cannot call a class as a function");
              }(this, n), typeof Gt != "string") throw new Error("Invalid passphrase provided to Transaction: expected a string but got a ".concat($r(Gt)));
              this._networkPassphrase = Gt, this._tx = A, this._signatures = G, this._fee = st;
            }, [{ key: "signatures", get: function() {
              return this._signatures;
            }, set: function(n) {
              throw new Error("Transaction is immutable");
            } }, { key: "tx", get: function() {
              return this._tx;
            }, set: function(n) {
              throw new Error("Transaction is immutable");
            } }, { key: "fee", get: function() {
              return this._fee;
            }, set: function(n) {
              throw new Error("Transaction is immutable");
            } }, { key: "networkPassphrase", get: function() {
              return this._networkPassphrase;
            }, set: function(n) {
              this._networkPassphrase = n;
            } }, { key: "sign", value: function() {
              for (var n = this, A = this.hash(), G = arguments.length, st = new Array(G), Gt = 0; Gt < G; Gt++) st[Gt] = arguments[Gt];
              st.forEach(function(Pe) {
                var We = Pe.signDecorated(A);
                n.signatures.push(We);
              });
            } }, { key: "getKeypairSignature", value: function(n) {
              return n.sign(this.hash()).toString("base64");
            } }, { key: "addSignature", value: function() {
              var n, A, G = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : "", st = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : "";
              if (!st || typeof st != "string") throw new Error("Invalid signature");
              if (!G || typeof G != "string") throw new Error("Invalid publicKey");
              var Gt = Vr.from(st, "base64");
              try {
                A = (n = ue.fromPublicKey(G)).signatureHint();
              } catch {
                throw new Error("Invalid publicKey");
              }
              if (!n.verify(this.hash(), Gt)) throw new Error("Invalid signature");
              this.signatures.push(new c.DecoratedSignature({ hint: A, signature: Gt }));
            } }, { key: "addDecoratedSignature", value: function(n) {
              this.signatures.push(n);
            } }, { key: "signHashX", value: function(n) {
              if (typeof n == "string" && (n = Vr.from(n, "hex")), n.length > 64) throw new Error("preimage cannnot be longer than 64 bytes");
              var A = n, G = P(n), st = G.slice(G.length - 4);
              this.signatures.push(new c.DecoratedSignature({ hint: st, signature: A }));
            } }, { key: "hash", value: function() {
              return P(this.signatureBase());
            } }, { key: "signatureBase", value: function() {
              throw new Error("Implement in subclass");
            } }, { key: "toEnvelope", value: function() {
              throw new Error("Implement in subclass");
            } }, { key: "toXDR", value: function() {
              return this.toEnvelope().toXDR().toString("base64");
            } }]), To = /^-?(?:\d+(?:\.\d*)?|\.\d+)(?:e[+-]?\d+)?$/i, Ro = Math.ceil, Rn = Math.floor, bo = "[BigNumber Error] ", si = bo + "Number primitive has more than 15 significant digits: ", Xo = 1e14, Xn = 14, ki = 9007199254740991, ii = [1, 10, 100, 1e3, 1e4, 1e5, 1e6, 1e7, 1e8, 1e9, 1e10, 1e11, 1e12, 1e13], wo = 1e7, Yt = 1e9;
            function ee(n) {
              var A = 0 | n;
              return n > 0 || n === A ? A : A - 1;
            }
            function ye(n) {
              for (var A, G, st = 1, Gt = n.length, Pe = n[0] + ""; st < Gt; ) {
                for (A = n[st++] + "", G = Xn - A.length; G--; A = "0" + A) ;
                Pe += A;
              }
              for (Gt = Pe.length; Pe.charCodeAt(--Gt) === 48; ) ;
              return Pe.slice(0, Gt + 1 || 1);
            }
            function Se(n, A) {
              var G, st, Gt = n.c, Pe = A.c, We = n.s, er = A.s, Rr = n.e, kr = A.e;
              if (!We || !er) return null;
              if (G = Gt && !Gt[0], st = Pe && !Pe[0], G || st) return G ? st ? 0 : -er : We;
              if (We != er) return We;
              if (G = We < 0, st = Rr == kr, !Gt || !Pe) return st ? 0 : !Gt ^ G ? 1 : -1;
              if (!st) return Rr > kr ^ G ? 1 : -1;
              for (er = (Rr = Gt.length) < (kr = Pe.length) ? Rr : kr, We = 0; We < er; We++) if (Gt[We] != Pe[We]) return Gt[We] > Pe[We] ^ G ? 1 : -1;
              return Rr == kr ? 0 : Rr > kr ^ G ? 1 : -1;
            }
            function De(n, A, G, st) {
              if (n < A || n > G || n !== Rn(n)) throw Error(bo + (st || "Argument") + (typeof n == "number" ? n < A || n > G ? " out of range: " : " not an integer: " : " not a primitive number: ") + String(n));
            }
            function ar(n) {
              var A = n.c.length - 1;
              return ee(n.e / Xn) == A && n.c[A] % 2 != 0;
            }
            function C(n, A) {
              return (n.length > 1 ? n.charAt(0) + "." + n.slice(1) : n) + (A < 0 ? "e" : "e+") + A;
            }
            function Y(n, A, G) {
              var st, Gt;
              if (A < 0) {
                for (Gt = G + "."; ++A; Gt += G) ;
                n = Gt + n;
              } else if (++A > (st = n.length)) {
                for (Gt = G, A -= st; --A; Gt += G) ;
                n += Gt;
              } else A < st && (n = n.slice(0, A) + "." + n.slice(A));
              return n;
            }
            var ht = function n(A) {
              var G, st, Gt, Pe, We, er, Rr, kr, vr, ur, Er = _t.prototype = { constructor: _t, toString: null, valueOf: null }, un = new _t(1), cn = 20, mn = 4, Pn = -7, kn = 21, so = -1e7, Mn = 1e7, $n = false, On = 1, r = 0, y = { prefix: "", groupSize: 3, secondaryGroupSize: 0, groupSeparator: ",", decimalSeparator: ".", fractionGroupSize: 0, fractionGroupSeparator: "\xA0", suffix: "" }, N = "0123456789abcdefghijklmnopqrstuvwxyz", Q = true;
              function _t(Kt, re) {
                var fe, Re, Te, Fe, Xe, Ne, Be, Ue, He = this;
                if (!(He instanceof _t)) return new _t(Kt, re);
                if (re == null) {
                  if (Kt && Kt._isBigNumber === true) return He.s = Kt.s, void (!Kt.c || Kt.e > Mn ? He.c = He.e = null : Kt.e < so ? He.c = [He.e = 0] : (He.e = Kt.e, He.c = Kt.c.slice()));
                  if ((Ne = typeof Kt == "number") && 0 * Kt == 0) {
                    if (He.s = 1 / Kt < 0 ? (Kt = -Kt, -1) : 1, Kt === ~~Kt) {
                      for (Fe = 0, Xe = Kt; Xe >= 10; Xe /= 10, Fe++) ;
                      return void (Fe > Mn ? He.c = He.e = null : (He.e = Fe, He.c = [Kt]));
                    }
                    Ue = String(Kt);
                  } else {
                    if (!To.test(Ue = String(Kt))) return Gt(He, Ue, Ne);
                    He.s = Ue.charCodeAt(0) == 45 ? (Ue = Ue.slice(1), -1) : 1;
                  }
                  (Fe = Ue.indexOf(".")) > -1 && (Ue = Ue.replace(".", "")), (Xe = Ue.search(/e/i)) > 0 ? (Fe < 0 && (Fe = Xe), Fe += +Ue.slice(Xe + 1), Ue = Ue.substring(0, Xe)) : Fe < 0 && (Fe = Ue.length);
                } else {
                  if (De(re, 2, N.length, "Base"), re == 10 && Q) return Qe(He = new _t(Kt), cn + He.e + 1, mn);
                  if (Ue = String(Kt), Ne = typeof Kt == "number") {
                    if (0 * Kt != 0) return Gt(He, Ue, Ne, re);
                    if (He.s = 1 / Kt < 0 ? (Ue = Ue.slice(1), -1) : 1, _t.DEBUG && Ue.replace(/^0\.0*|\./, "").length > 15) throw Error(si + Kt);
                  } else He.s = Ue.charCodeAt(0) === 45 ? (Ue = Ue.slice(1), -1) : 1;
                  for (fe = N.slice(0, re), Fe = Xe = 0, Be = Ue.length; Xe < Be; Xe++) if (fe.indexOf(Re = Ue.charAt(Xe)) < 0) {
                    if (Re == ".") {
                      if (Xe > Fe) {
                        Fe = Be;
                        continue;
                      }
                    } else if (!Te && (Ue == Ue.toUpperCase() && (Ue = Ue.toLowerCase()) || Ue == Ue.toLowerCase() && (Ue = Ue.toUpperCase()))) {
                      Te = true, Xe = -1, Fe = 0;
                      continue;
                    }
                    return Gt(He, String(Kt), Ne, re);
                  }
                  Ne = false, (Fe = (Ue = st(Ue, re, 10, He.s)).indexOf(".")) > -1 ? Ue = Ue.replace(".", "") : Fe = Ue.length;
                }
                for (Xe = 0; Ue.charCodeAt(Xe) === 48; Xe++) ;
                for (Be = Ue.length; Ue.charCodeAt(--Be) === 48; ) ;
                if (Ue = Ue.slice(Xe, ++Be)) {
                  if (Be -= Xe, Ne && _t.DEBUG && Be > 15 && (Kt > ki || Kt !== Rn(Kt))) throw Error(si + He.s * Kt);
                  if ((Fe = Fe - Xe - 1) > Mn) He.c = He.e = null;
                  else if (Fe < so) He.c = [He.e = 0];
                  else {
                    if (He.e = Fe, He.c = [], Xe = (Fe + 1) % Xn, Fe < 0 && (Xe += Xn), Xe < Be) {
                      for (Xe && He.c.push(+Ue.slice(0, Xe)), Be -= Xn; Xe < Be; ) He.c.push(+Ue.slice(Xe, Xe += Xn));
                      Xe = Xn - (Ue = Ue.slice(Xe)).length;
                    } else Xe -= Be;
                    for (; Xe--; Ue += "0") ;
                    He.c.push(+Ue);
                  }
                } else He.c = [He.e = 0];
              }
              function Qt(Kt, re, fe, Re) {
                var Te, Fe, Xe, Ne, Be;
                if (fe == null ? fe = mn : De(fe, 0, 8), !Kt.c) return Kt.toString();
                if (Te = Kt.c[0], Xe = Kt.e, re == null) Be = ye(Kt.c), Be = Re == 1 || Re == 2 && (Xe <= Pn || Xe >= kn) ? C(Be, Xe) : Y(Be, Xe, "0");
                else if (Fe = (Kt = Qe(new _t(Kt), re, fe)).e, Ne = (Be = ye(Kt.c)).length, Re == 1 || Re == 2 && (re <= Fe || Fe <= Pn)) {
                  for (; Ne < re; Be += "0", Ne++) ;
                  Be = C(Be, Fe);
                } else if (re -= Xe, Be = Y(Be, Fe, "0"), Fe + 1 > Ne) {
                  if (--re > 0) for (Be += "."; re--; Be += "0") ;
                } else if ((re += Fe - Ne) > 0) for (Fe + 1 == Ne && (Be += "."); re--; Be += "0") ;
                return Kt.s < 0 && Te ? "-" + Be : Be;
              }
              function Ce(Kt, re) {
                for (var fe, Re, Te = 1, Fe = new _t(Kt[0]); Te < Kt.length; Te++) (!(Re = new _t(Kt[Te])).s || (fe = Se(Fe, Re)) === re || fe === 0 && Fe.s === re) && (Fe = Re);
                return Fe;
              }
              function Le(Kt, re, fe) {
                for (var Re = 1, Te = re.length; !re[--Te]; re.pop()) ;
                for (Te = re[0]; Te >= 10; Te /= 10, Re++) ;
                return (fe = Re + fe * Xn - 1) > Mn ? Kt.c = Kt.e = null : fe < so ? Kt.c = [Kt.e = 0] : (Kt.e = fe, Kt.c = re), Kt;
              }
              function Qe(Kt, re, fe, Re) {
                var Te, Fe, Xe, Ne, Be, Ue, He, qr = Kt.c, rn = ii;
                if (qr) {
                  t: {
                    for (Te = 1, Ne = qr[0]; Ne >= 10; Ne /= 10, Te++) ;
                    if ((Fe = re - Te) < 0) Fe += Xn, Xe = re, Be = qr[Ue = 0], He = Rn(Be / rn[Te - Xe - 1] % 10);
                    else if ((Ue = Ro((Fe + 1) / Xn)) >= qr.length) {
                      if (!Re) break t;
                      for (; qr.length <= Ue; qr.push(0)) ;
                      Be = He = 0, Te = 1, Xe = (Fe %= Xn) - Xn + 1;
                    } else {
                      for (Be = Ne = qr[Ue], Te = 1; Ne >= 10; Ne /= 10, Te++) ;
                      He = (Xe = (Fe %= Xn) - Xn + Te) < 0 ? 0 : Rn(Be / rn[Te - Xe - 1] % 10);
                    }
                    if (Re = Re || re < 0 || qr[Ue + 1] != null || (Xe < 0 ? Be : Be % rn[Te - Xe - 1]), Re = fe < 4 ? (He || Re) && (fe == 0 || fe == (Kt.s < 0 ? 3 : 2)) : He > 5 || He == 5 && (fe == 4 || Re || fe == 6 && (Fe > 0 ? Xe > 0 ? Be / rn[Te - Xe] : 0 : qr[Ue - 1]) % 10 & 1 || fe == (Kt.s < 0 ? 8 : 7)), re < 1 || !qr[0]) return qr.length = 0, Re ? (re -= Kt.e + 1, qr[0] = rn[(Xn - re % Xn) % Xn], Kt.e = -re || 0) : qr[0] = Kt.e = 0, Kt;
                    if (Fe == 0 ? (qr.length = Ue, Ne = 1, Ue--) : (qr.length = Ue + 1, Ne = rn[Xn - Fe], qr[Ue] = Xe > 0 ? Rn(Be / rn[Te - Xe] % rn[Xe]) * Ne : 0), Re) for (; ; ) {
                      if (Ue == 0) {
                        for (Fe = 1, Xe = qr[0]; Xe >= 10; Xe /= 10, Fe++) ;
                        for (Xe = qr[0] += Ne, Ne = 1; Xe >= 10; Xe /= 10, Ne++) ;
                        Fe != Ne && (Kt.e++, qr[0] == Xo && (qr[0] = 1));
                        break;
                      }
                      if (qr[Ue] += Ne, qr[Ue] != Xo) break;
                      qr[Ue--] = 0, Ne = 1;
                    }
                    for (Fe = qr.length; qr[--Fe] === 0; qr.pop()) ;
                  }
                  Kt.e > Mn ? Kt.c = Kt.e = null : Kt.e < so && (Kt.c = [Kt.e = 0]);
                }
                return Kt;
              }
              function Sr(Kt) {
                var re, fe = Kt.e;
                return fe === null ? Kt.toString() : (re = ye(Kt.c), re = fe <= Pn || fe >= kn ? C(re, fe) : Y(re, fe, "0"), Kt.s < 0 ? "-" + re : re);
              }
              return _t.clone = n, _t.ROUND_UP = 0, _t.ROUND_DOWN = 1, _t.ROUND_CEIL = 2, _t.ROUND_FLOOR = 3, _t.ROUND_HALF_UP = 4, _t.ROUND_HALF_DOWN = 5, _t.ROUND_HALF_EVEN = 6, _t.ROUND_HALF_CEIL = 7, _t.ROUND_HALF_FLOOR = 8, _t.EUCLID = 9, _t.config = _t.set = function(Kt) {
                var re, fe;
                if (Kt != null) {
                  if (typeof Kt != "object") throw Error(bo + "Object expected: " + Kt);
                  if (Kt.hasOwnProperty(re = "DECIMAL_PLACES") && (De(fe = Kt[re], 0, Yt, re), cn = fe), Kt.hasOwnProperty(re = "ROUNDING_MODE") && (De(fe = Kt[re], 0, 8, re), mn = fe), Kt.hasOwnProperty(re = "EXPONENTIAL_AT") && ((fe = Kt[re]) && fe.pop ? (De(fe[0], -1e9, 0, re), De(fe[1], 0, Yt, re), Pn = fe[0], kn = fe[1]) : (De(fe, -1e9, Yt, re), Pn = -(kn = fe < 0 ? -fe : fe))), Kt.hasOwnProperty(re = "RANGE")) if ((fe = Kt[re]) && fe.pop) De(fe[0], -1e9, -1, re), De(fe[1], 1, Yt, re), so = fe[0], Mn = fe[1];
                  else {
                    if (De(fe, -1e9, Yt, re), !fe) throw Error(bo + re + " cannot be zero: " + fe);
                    so = -(Mn = fe < 0 ? -fe : fe);
                  }
                  if (Kt.hasOwnProperty(re = "CRYPTO")) {
                    if ((fe = Kt[re]) !== !!fe) throw Error(bo + re + " not true or false: " + fe);
                    if (fe) {
                      if (typeof crypto > "u" || !crypto || !crypto.getRandomValues && !crypto.randomBytes) throw $n = !fe, Error(bo + "crypto unavailable");
                      $n = fe;
                    } else $n = fe;
                  }
                  if (Kt.hasOwnProperty(re = "MODULO_MODE") && (De(fe = Kt[re], 0, 9, re), On = fe), Kt.hasOwnProperty(re = "POW_PRECISION") && (De(fe = Kt[re], 0, Yt, re), r = fe), Kt.hasOwnProperty(re = "FORMAT")) {
                    if (typeof (fe = Kt[re]) != "object") throw Error(bo + re + " not an object: " + fe);
                    y = fe;
                  }
                  if (Kt.hasOwnProperty(re = "ALPHABET")) {
                    if (typeof (fe = Kt[re]) != "string" || /^.?$|[+\-.\s]|(.).*\1/.test(fe)) throw Error(bo + re + " invalid: " + fe);
                    Q = fe.slice(0, 10) == "0123456789", N = fe;
                  }
                }
                return { DECIMAL_PLACES: cn, ROUNDING_MODE: mn, EXPONENTIAL_AT: [Pn, kn], RANGE: [so, Mn], CRYPTO: $n, MODULO_MODE: On, POW_PRECISION: r, FORMAT: y, ALPHABET: N };
              }, _t.isBigNumber = function(Kt) {
                if (!Kt || Kt._isBigNumber !== true) return false;
                if (!_t.DEBUG) return true;
                var re, fe, Re = Kt.c, Te = Kt.e, Fe = Kt.s;
                t: if ({}.toString.call(Re) == "[object Array]") {
                  if ((Fe === 1 || Fe === -1) && Te >= -1e9 && Te <= Yt && Te === Rn(Te)) {
                    if (Re[0] === 0) {
                      if (Te === 0 && Re.length === 1) return true;
                      break t;
                    }
                    if ((re = (Te + 1) % Xn) < 1 && (re += Xn), String(Re[0]).length == re) {
                      for (re = 0; re < Re.length; re++) if ((fe = Re[re]) < 0 || fe >= Xo || fe !== Rn(fe)) break t;
                      if (fe !== 0) return true;
                    }
                  }
                } else if (Re === null && Te === null && (Fe === null || Fe === 1 || Fe === -1)) return true;
                throw Error(bo + "Invalid BigNumber: " + Kt);
              }, _t.maximum = _t.max = function() {
                return Ce(arguments, -1);
              }, _t.minimum = _t.min = function() {
                return Ce(arguments, 1);
              }, _t.random = (Pe = 9007199254740992, We = Math.random() * Pe & 2097151 ? function() {
                return Rn(Math.random() * Pe);
              } : function() {
                return 8388608 * (1073741824 * Math.random() | 0) + (8388608 * Math.random() | 0);
              }, function(Kt) {
                var re, fe, Re, Te, Fe, Xe = 0, Ne = [], Be = new _t(un);
                if (Kt == null ? Kt = cn : De(Kt, 0, Yt), Te = Ro(Kt / Xn), $n) if (crypto.getRandomValues) {
                  for (re = crypto.getRandomValues(new Uint32Array(Te *= 2)); Xe < Te; ) (Fe = 131072 * re[Xe] + (re[Xe + 1] >>> 11)) >= 9e15 ? (fe = crypto.getRandomValues(new Uint32Array(2)), re[Xe] = fe[0], re[Xe + 1] = fe[1]) : (Ne.push(Fe % 1e14), Xe += 2);
                  Xe = Te / 2;
                } else {
                  if (!crypto.randomBytes) throw $n = false, Error(bo + "crypto unavailable");
                  for (re = crypto.randomBytes(Te *= 7); Xe < Te; ) (Fe = 281474976710656 * (31 & re[Xe]) + 1099511627776 * re[Xe + 1] + 4294967296 * re[Xe + 2] + 16777216 * re[Xe + 3] + (re[Xe + 4] << 16) + (re[Xe + 5] << 8) + re[Xe + 6]) >= 9e15 ? crypto.randomBytes(7).copy(re, Xe) : (Ne.push(Fe % 1e14), Xe += 7);
                  Xe = Te / 7;
                }
                if (!$n) for (; Xe < Te; ) (Fe = We()) < 9e15 && (Ne[Xe++] = Fe % 1e14);
                for (Te = Ne[--Xe], Kt %= Xn, Te && Kt && (Fe = ii[Xn - Kt], Ne[Xe] = Rn(Te / Fe) * Fe); Ne[Xe] === 0; Ne.pop(), Xe--) ;
                if (Xe < 0) Ne = [Re = 0];
                else {
                  for (Re = -1; Ne[0] === 0; Ne.splice(0, 1), Re -= Xn) ;
                  for (Xe = 1, Fe = Ne[0]; Fe >= 10; Fe /= 10, Xe++) ;
                  Xe < Xn && (Re -= Xn - Xe);
                }
                return Be.e = Re, Be.c = Ne, Be;
              }), _t.sum = function() {
                for (var Kt = 1, re = arguments, fe = new _t(re[0]); Kt < re.length; ) fe = fe.plus(re[Kt++]);
                return fe;
              }, st = /* @__PURE__ */ function() {
                var Kt = "0123456789";
                function re(fe, Re, Te, Fe) {
                  for (var Xe, Ne, Be = [0], Ue = 0, He = fe.length; Ue < He; ) {
                    for (Ne = Be.length; Ne--; Be[Ne] *= Re) ;
                    for (Be[0] += Fe.indexOf(fe.charAt(Ue++)), Xe = 0; Xe < Be.length; Xe++) Be[Xe] > Te - 1 && (Be[Xe + 1] == null && (Be[Xe + 1] = 0), Be[Xe + 1] += Be[Xe] / Te | 0, Be[Xe] %= Te);
                  }
                  return Be.reverse();
                }
                return function(fe, Re, Te, Fe, Xe) {
                  var Ne, Be, Ue, He, qr, rn, nn, hn, zn = fe.indexOf("."), Jr = cn, ro = mn;
                  for (zn >= 0 && (He = r, r = 0, fe = fe.replace(".", ""), rn = (hn = new _t(Re)).pow(fe.length - zn), r = He, hn.c = re(Y(ye(rn.c), rn.e, "0"), 10, Te, Kt), hn.e = hn.c.length), Ue = He = (nn = re(fe, Re, Te, Xe ? (Ne = N, Kt) : (Ne = Kt, N))).length; nn[--He] == 0; nn.pop()) ;
                  if (!nn[0]) return Ne.charAt(0);
                  if (zn < 0 ? --Ue : (rn.c = nn, rn.e = Ue, rn.s = Fe, nn = (rn = G(rn, hn, Jr, ro, Te)).c, qr = rn.r, Ue = rn.e), zn = nn[Be = Ue + Jr + 1], He = Te / 2, qr = qr || Be < 0 || nn[Be + 1] != null, qr = ro < 4 ? (zn != null || qr) && (ro == 0 || ro == (rn.s < 0 ? 3 : 2)) : zn > He || zn == He && (ro == 4 || qr || ro == 6 && 1 & nn[Be - 1] || ro == (rn.s < 0 ? 8 : 7)), Be < 1 || !nn[0]) fe = qr ? Y(Ne.charAt(1), -Jr, Ne.charAt(0)) : Ne.charAt(0);
                  else {
                    if (nn.length = Be, qr) for (--Te; ++nn[--Be] > Te; ) nn[Be] = 0, Be || (++Ue, nn = [1].concat(nn));
                    for (He = nn.length; !nn[--He]; ) ;
                    for (zn = 0, fe = ""; zn <= He; fe += Ne.charAt(nn[zn++])) ;
                    fe = Y(fe, Ue, Ne.charAt(0));
                  }
                  return fe;
                };
              }(), G = /* @__PURE__ */ function() {
                function Kt(Re, Te, Fe) {
                  var Xe, Ne, Be, Ue, He = 0, qr = Re.length, rn = Te % wo, nn = Te / wo | 0;
                  for (Re = Re.slice(); qr--; ) He = ((Ne = rn * (Be = Re[qr] % wo) + (Xe = nn * Be + (Ue = Re[qr] / wo | 0) * rn) % wo * wo + He) / Fe | 0) + (Xe / wo | 0) + nn * Ue, Re[qr] = Ne % Fe;
                  return He && (Re = [He].concat(Re)), Re;
                }
                function re(Re, Te, Fe, Xe) {
                  var Ne, Be;
                  if (Fe != Xe) Be = Fe > Xe ? 1 : -1;
                  else for (Ne = Be = 0; Ne < Fe; Ne++) if (Re[Ne] != Te[Ne]) {
                    Be = Re[Ne] > Te[Ne] ? 1 : -1;
                    break;
                  }
                  return Be;
                }
                function fe(Re, Te, Fe, Xe) {
                  for (var Ne = 0; Fe--; ) Re[Fe] -= Ne, Ne = Re[Fe] < Te[Fe] ? 1 : 0, Re[Fe] = Ne * Xe + Re[Fe] - Te[Fe];
                  for (; !Re[0] && Re.length > 1; Re.splice(0, 1)) ;
                }
                return function(Re, Te, Fe, Xe, Ne) {
                  var Be, Ue, He, qr, rn, nn, hn, zn, Jr, ro, io, Uo, Mo, qo, xe, ke, tr, Mr = Re.s == Te.s ? 1 : -1, ir = Re.c, pr = Te.c;
                  if (!(ir && ir[0] && pr && pr[0])) return new _t(Re.s && Te.s && (ir ? !pr || ir[0] != pr[0] : pr) ? ir && ir[0] == 0 || !pr ? 0 * Mr : Mr / 0 : NaN);
                  for (Jr = (zn = new _t(Mr)).c = [], Mr = Fe + (Ue = Re.e - Te.e) + 1, Ne || (Ne = Xo, Ue = ee(Re.e / Xn) - ee(Te.e / Xn), Mr = Mr / Xn | 0), He = 0; pr[He] == (ir[He] || 0); He++) ;
                  if (pr[He] > (ir[He] || 0) && Ue--, Mr < 0) Jr.push(1), qr = true;
                  else {
                    for (qo = ir.length, ke = pr.length, He = 0, Mr += 2, (rn = Rn(Ne / (pr[0] + 1))) > 1 && (pr = Kt(pr, rn, Ne), ir = Kt(ir, rn, Ne), ke = pr.length, qo = ir.length), Mo = ke, io = (ro = ir.slice(0, ke)).length; io < ke; ro[io++] = 0) ;
                    tr = pr.slice(), tr = [0].concat(tr), xe = pr[0], pr[1] >= Ne / 2 && xe++;
                    do {
                      if (rn = 0, (Be = re(pr, ro, ke, io)) < 0) {
                        if (Uo = ro[0], ke != io && (Uo = Uo * Ne + (ro[1] || 0)), (rn = Rn(Uo / xe)) > 1) for (rn >= Ne && (rn = Ne - 1), hn = (nn = Kt(pr, rn, Ne)).length, io = ro.length; re(nn, ro, hn, io) == 1; ) rn--, fe(nn, ke < hn ? tr : pr, hn, Ne), hn = nn.length, Be = 1;
                        else rn == 0 && (Be = rn = 1), hn = (nn = pr.slice()).length;
                        if (hn < io && (nn = [0].concat(nn)), fe(ro, nn, io, Ne), io = ro.length, Be == -1) for (; re(pr, ro, ke, io) < 1; ) rn++, fe(ro, ke < io ? tr : pr, io, Ne), io = ro.length;
                      } else Be === 0 && (rn++, ro = [0]);
                      Jr[He++] = rn, ro[0] ? ro[io++] = ir[Mo] || 0 : (ro = [ir[Mo]], io = 1);
                    } while ((Mo++ < qo || ro[0] != null) && Mr--);
                    qr = ro[0] != null, Jr[0] || Jr.splice(0, 1);
                  }
                  if (Ne == Xo) {
                    for (He = 1, Mr = Jr[0]; Mr >= 10; Mr /= 10, He++) ;
                    Qe(zn, Fe + (zn.e = He + Ue * Xn - 1) + 1, Xe, qr);
                  } else zn.e = Ue, zn.r = +qr;
                  return zn;
                };
              }(), er = /^(-?)0([xbo])(?=\w[\w.]*$)/i, Rr = /^([^.]+)\.$/, kr = /^\.([^.]+)$/, vr = /^-?(Infinity|NaN)$/, ur = /^\s*\+(?=[\w.])|^\s+|\s+$/g, Gt = function(Kt, re, fe, Re) {
                var Te, Fe = fe ? re : re.replace(ur, "");
                if (vr.test(Fe)) Kt.s = isNaN(Fe) ? null : Fe < 0 ? -1 : 1;
                else {
                  if (!fe && (Fe = Fe.replace(er, function(Xe, Ne, Be) {
                    return Te = (Be = Be.toLowerCase()) == "x" ? 16 : Be == "b" ? 2 : 8, Re && Re != Te ? Xe : Ne;
                  }), Re && (Te = Re, Fe = Fe.replace(Rr, "$1").replace(kr, "0.$1")), re != Fe)) return new _t(Fe, Te);
                  if (_t.DEBUG) throw Error(bo + "Not a" + (Re ? " base " + Re : "") + " number: " + re);
                  Kt.s = null;
                }
                Kt.c = Kt.e = null;
              }, Er.absoluteValue = Er.abs = function() {
                var Kt = new _t(this);
                return Kt.s < 0 && (Kt.s = 1), Kt;
              }, Er.comparedTo = function(Kt, re) {
                return Se(this, new _t(Kt, re));
              }, Er.decimalPlaces = Er.dp = function(Kt, re) {
                var fe, Re, Te, Fe = this;
                if (Kt != null) return De(Kt, 0, Yt), re == null ? re = mn : De(re, 0, 8), Qe(new _t(Fe), Kt + Fe.e + 1, re);
                if (!(fe = Fe.c)) return null;
                if (Re = ((Te = fe.length - 1) - ee(this.e / Xn)) * Xn, Te = fe[Te]) for (; Te % 10 == 0; Te /= 10, Re--) ;
                return Re < 0 && (Re = 0), Re;
              }, Er.dividedBy = Er.div = function(Kt, re) {
                return G(this, new _t(Kt, re), cn, mn);
              }, Er.dividedToIntegerBy = Er.idiv = function(Kt, re) {
                return G(this, new _t(Kt, re), 0, 1);
              }, Er.exponentiatedBy = Er.pow = function(Kt, re) {
                var fe, Re, Te, Fe, Xe, Ne, Be, Ue, He = this;
                if ((Kt = new _t(Kt)).c && !Kt.isInteger()) throw Error(bo + "Exponent not an integer: " + Sr(Kt));
                if (re != null && (re = new _t(re)), Xe = Kt.e > 14, !He.c || !He.c[0] || He.c[0] == 1 && !He.e && He.c.length == 1 || !Kt.c || !Kt.c[0]) return Ue = new _t(Math.pow(+Sr(He), Xe ? Kt.s * (2 - ar(Kt)) : +Sr(Kt))), re ? Ue.mod(re) : Ue;
                if (Ne = Kt.s < 0, re) {
                  if (re.c ? !re.c[0] : !re.s) return new _t(NaN);
                  (Re = !Ne && He.isInteger() && re.isInteger()) && (He = He.mod(re));
                } else {
                  if (Kt.e > 9 && (He.e > 0 || He.e < -1 || (He.e == 0 ? He.c[0] > 1 || Xe && He.c[1] >= 24e7 : He.c[0] < 8e13 || Xe && He.c[0] <= 9999975e7))) return Fe = He.s < 0 && ar(Kt) ? -0 : 0, He.e > -1 && (Fe = 1 / Fe), new _t(Ne ? 1 / Fe : Fe);
                  r && (Fe = Ro(r / Xn + 2));
                }
                for (Xe ? (fe = new _t(0.5), Ne && (Kt.s = 1), Be = ar(Kt)) : Be = (Te = Math.abs(+Sr(Kt))) % 2, Ue = new _t(un); ; ) {
                  if (Be) {
                    if (!(Ue = Ue.times(He)).c) break;
                    Fe ? Ue.c.length > Fe && (Ue.c.length = Fe) : Re && (Ue = Ue.mod(re));
                  }
                  if (Te) {
                    if ((Te = Rn(Te / 2)) === 0) break;
                    Be = Te % 2;
                  } else if (Qe(Kt = Kt.times(fe), Kt.e + 1, 1), Kt.e > 14) Be = ar(Kt);
                  else {
                    if ((Te = +Sr(Kt)) == 0) break;
                    Be = Te % 2;
                  }
                  He = He.times(He), Fe ? He.c && He.c.length > Fe && (He.c.length = Fe) : Re && (He = He.mod(re));
                }
                return Re ? Ue : (Ne && (Ue = un.div(Ue)), re ? Ue.mod(re) : Fe ? Qe(Ue, r, mn, void 0) : Ue);
              }, Er.integerValue = function(Kt) {
                var re = new _t(this);
                return Kt == null ? Kt = mn : De(Kt, 0, 8), Qe(re, re.e + 1, Kt);
              }, Er.isEqualTo = Er.eq = function(Kt, re) {
                return Se(this, new _t(Kt, re)) === 0;
              }, Er.isFinite = function() {
                return !!this.c;
              }, Er.isGreaterThan = Er.gt = function(Kt, re) {
                return Se(this, new _t(Kt, re)) > 0;
              }, Er.isGreaterThanOrEqualTo = Er.gte = function(Kt, re) {
                return (re = Se(this, new _t(Kt, re))) === 1 || re === 0;
              }, Er.isInteger = function() {
                return !!this.c && ee(this.e / Xn) > this.c.length - 2;
              }, Er.isLessThan = Er.lt = function(Kt, re) {
                return Se(this, new _t(Kt, re)) < 0;
              }, Er.isLessThanOrEqualTo = Er.lte = function(Kt, re) {
                return (re = Se(this, new _t(Kt, re))) === -1 || re === 0;
              }, Er.isNaN = function() {
                return !this.s;
              }, Er.isNegative = function() {
                return this.s < 0;
              }, Er.isPositive = function() {
                return this.s > 0;
              }, Er.isZero = function() {
                return !!this.c && this.c[0] == 0;
              }, Er.minus = function(Kt, re) {
                var fe, Re, Te, Fe, Xe = this, Ne = Xe.s;
                if (re = (Kt = new _t(Kt, re)).s, !Ne || !re) return new _t(NaN);
                if (Ne != re) return Kt.s = -re, Xe.plus(Kt);
                var Be = Xe.e / Xn, Ue = Kt.e / Xn, He = Xe.c, qr = Kt.c;
                if (!Be || !Ue) {
                  if (!He || !qr) return He ? (Kt.s = -re, Kt) : new _t(qr ? Xe : NaN);
                  if (!He[0] || !qr[0]) return qr[0] ? (Kt.s = -re, Kt) : new _t(He[0] ? Xe : mn == 3 ? -0 : 0);
                }
                if (Be = ee(Be), Ue = ee(Ue), He = He.slice(), Ne = Be - Ue) {
                  for ((Fe = Ne < 0) ? (Ne = -Ne, Te = He) : (Ue = Be, Te = qr), Te.reverse(), re = Ne; re--; Te.push(0)) ;
                  Te.reverse();
                } else for (Re = (Fe = (Ne = He.length) < (re = qr.length)) ? Ne : re, Ne = re = 0; re < Re; re++) if (He[re] != qr[re]) {
                  Fe = He[re] < qr[re];
                  break;
                }
                if (Fe && (Te = He, He = qr, qr = Te, Kt.s = -Kt.s), (re = (Re = qr.length) - (fe = He.length)) > 0) for (; re--; He[fe++] = 0) ;
                for (re = Xo - 1; Re > Ne; ) {
                  if (He[--Re] < qr[Re]) {
                    for (fe = Re; fe && !He[--fe]; He[fe] = re) ;
                    --He[fe], He[Re] += Xo;
                  }
                  He[Re] -= qr[Re];
                }
                for (; He[0] == 0; He.splice(0, 1), --Ue) ;
                return He[0] ? Le(Kt, He, Ue) : (Kt.s = mn == 3 ? -1 : 1, Kt.c = [Kt.e = 0], Kt);
              }, Er.modulo = Er.mod = function(Kt, re) {
                var fe, Re, Te = this;
                return Kt = new _t(Kt, re), !Te.c || !Kt.s || Kt.c && !Kt.c[0] ? new _t(NaN) : !Kt.c || Te.c && !Te.c[0] ? new _t(Te) : (On == 9 ? (Re = Kt.s, Kt.s = 1, fe = G(Te, Kt, 0, 3), Kt.s = Re, fe.s *= Re) : fe = G(Te, Kt, 0, On), (Kt = Te.minus(fe.times(Kt))).c[0] || On != 1 || (Kt.s = Te.s), Kt);
              }, Er.multipliedBy = Er.times = function(Kt, re) {
                var fe, Re, Te, Fe, Xe, Ne, Be, Ue, He, qr, rn, nn, hn, zn, Jr, ro = this, io = ro.c, Uo = (Kt = new _t(Kt, re)).c;
                if (!(io && Uo && io[0] && Uo[0])) return !ro.s || !Kt.s || io && !io[0] && !Uo || Uo && !Uo[0] && !io ? Kt.c = Kt.e = Kt.s = null : (Kt.s *= ro.s, io && Uo ? (Kt.c = [0], Kt.e = 0) : Kt.c = Kt.e = null), Kt;
                for (Re = ee(ro.e / Xn) + ee(Kt.e / Xn), Kt.s *= ro.s, (Be = io.length) < (qr = Uo.length) && (hn = io, io = Uo, Uo = hn, Te = Be, Be = qr, qr = Te), Te = Be + qr, hn = []; Te--; hn.push(0)) ;
                for (zn = Xo, Jr = wo, Te = qr; --Te >= 0; ) {
                  for (fe = 0, rn = Uo[Te] % Jr, nn = Uo[Te] / Jr | 0, Fe = Te + (Xe = Be); Fe > Te; ) fe = ((Ue = rn * (Ue = io[--Xe] % Jr) + (Ne = nn * Ue + (He = io[Xe] / Jr | 0) * rn) % Jr * Jr + hn[Fe] + fe) / zn | 0) + (Ne / Jr | 0) + nn * He, hn[Fe--] = Ue % zn;
                  hn[Fe] = fe;
                }
                return fe ? ++Re : hn.splice(0, 1), Le(Kt, hn, Re);
              }, Er.negated = function() {
                var Kt = new _t(this);
                return Kt.s = -Kt.s || null, Kt;
              }, Er.plus = function(Kt, re) {
                var fe, Re = this, Te = Re.s;
                if (re = (Kt = new _t(Kt, re)).s, !Te || !re) return new _t(NaN);
                if (Te != re) return Kt.s = -re, Re.minus(Kt);
                var Fe = Re.e / Xn, Xe = Kt.e / Xn, Ne = Re.c, Be = Kt.c;
                if (!Fe || !Xe) {
                  if (!Ne || !Be) return new _t(Te / 0);
                  if (!Ne[0] || !Be[0]) return Be[0] ? Kt : new _t(Ne[0] ? Re : 0 * Te);
                }
                if (Fe = ee(Fe), Xe = ee(Xe), Ne = Ne.slice(), Te = Fe - Xe) {
                  for (Te > 0 ? (Xe = Fe, fe = Be) : (Te = -Te, fe = Ne), fe.reverse(); Te--; fe.push(0)) ;
                  fe.reverse();
                }
                for ((Te = Ne.length) - (re = Be.length) < 0 && (fe = Be, Be = Ne, Ne = fe, re = Te), Te = 0; re; ) Te = (Ne[--re] = Ne[re] + Be[re] + Te) / Xo | 0, Ne[re] = Xo === Ne[re] ? 0 : Ne[re] % Xo;
                return Te && (Ne = [Te].concat(Ne), ++Xe), Le(Kt, Ne, Xe);
              }, Er.precision = Er.sd = function(Kt, re) {
                var fe, Re, Te, Fe = this;
                if (Kt != null && Kt !== !!Kt) return De(Kt, 1, Yt), re == null ? re = mn : De(re, 0, 8), Qe(new _t(Fe), Kt, re);
                if (!(fe = Fe.c)) return null;
                if (Re = (Te = fe.length - 1) * Xn + 1, Te = fe[Te]) {
                  for (; Te % 10 == 0; Te /= 10, Re--) ;
                  for (Te = fe[0]; Te >= 10; Te /= 10, Re++) ;
                }
                return Kt && Fe.e + 1 > Re && (Re = Fe.e + 1), Re;
              }, Er.shiftedBy = function(Kt) {
                return De(Kt, -9007199254740991, ki), this.times("1e" + Kt);
              }, Er.squareRoot = Er.sqrt = function() {
                var Kt, re, fe, Re, Te, Fe = this, Xe = Fe.c, Ne = Fe.s, Be = Fe.e, Ue = cn + 4, He = new _t("0.5");
                if (Ne !== 1 || !Xe || !Xe[0]) return new _t(!Ne || Ne < 0 && (!Xe || Xe[0]) ? NaN : Xe ? Fe : 1 / 0);
                if ((Ne = Math.sqrt(+Sr(Fe))) == 0 || Ne == 1 / 0 ? (((re = ye(Xe)).length + Be) % 2 == 0 && (re += "0"), Ne = Math.sqrt(+re), Be = ee((Be + 1) / 2) - (Be < 0 || Be % 2), fe = new _t(re = Ne == 1 / 0 ? "5e" + Be : (re = Ne.toExponential()).slice(0, re.indexOf("e") + 1) + Be)) : fe = new _t(Ne + ""), fe.c[0]) {
                  for ((Ne = (Be = fe.e) + Ue) < 3 && (Ne = 0); ; ) if (Te = fe, fe = He.times(Te.plus(G(Fe, Te, Ue, 1))), ye(Te.c).slice(0, Ne) === (re = ye(fe.c)).slice(0, Ne)) {
                    if (fe.e < Be && --Ne, (re = re.slice(Ne - 3, Ne + 1)) != "9999" && (Re || re != "4999")) {
                      +re && (+re.slice(1) || re.charAt(0) != "5") || (Qe(fe, fe.e + cn + 2, 1), Kt = !fe.times(fe).eq(Fe));
                      break;
                    }
                    if (!Re && (Qe(Te, Te.e + cn + 2, 0), Te.times(Te).eq(Fe))) {
                      fe = Te;
                      break;
                    }
                    Ue += 4, Ne += 4, Re = 1;
                  }
                }
                return Qe(fe, fe.e + cn + 1, mn, Kt);
              }, Er.toExponential = function(Kt, re) {
                return Kt != null && (De(Kt, 0, Yt), Kt++), Qt(this, Kt, re, 1);
              }, Er.toFixed = function(Kt, re) {
                return Kt != null && (De(Kt, 0, Yt), Kt = Kt + this.e + 1), Qt(this, Kt, re);
              }, Er.toFormat = function(Kt, re, fe) {
                var Re, Te = this;
                if (fe == null) Kt != null && re && typeof re == "object" ? (fe = re, re = null) : Kt && typeof Kt == "object" ? (fe = Kt, Kt = re = null) : fe = y;
                else if (typeof fe != "object") throw Error(bo + "Argument not an object: " + fe);
                if (Re = Te.toFixed(Kt, re), Te.c) {
                  var Fe, Xe = Re.split("."), Ne = +fe.groupSize, Be = +fe.secondaryGroupSize, Ue = fe.groupSeparator || "", He = Xe[0], qr = Xe[1], rn = Te.s < 0, nn = rn ? He.slice(1) : He, hn = nn.length;
                  if (Be && (Fe = Ne, Ne = Be, Be = Fe, hn -= Fe), Ne > 0 && hn > 0) {
                    for (Fe = hn % Ne || Ne, He = nn.substr(0, Fe); Fe < hn; Fe += Ne) He += Ue + nn.substr(Fe, Ne);
                    Be > 0 && (He += Ue + nn.slice(Fe)), rn && (He = "-" + He);
                  }
                  Re = qr ? He + (fe.decimalSeparator || "") + ((Be = +fe.fractionGroupSize) ? qr.replace(new RegExp("\\d{" + Be + "}\\B", "g"), "$&" + (fe.fractionGroupSeparator || "")) : qr) : He;
                }
                return (fe.prefix || "") + Re + (fe.suffix || "");
              }, Er.toFraction = function(Kt) {
                var re, fe, Re, Te, Fe, Xe, Ne, Be, Ue, He, qr, rn, nn = this, hn = nn.c;
                if (Kt != null && (!(Ne = new _t(Kt)).isInteger() && (Ne.c || Ne.s !== 1) || Ne.lt(un))) throw Error(bo + "Argument " + (Ne.isInteger() ? "out of range: " : "not an integer: ") + Sr(Ne));
                if (!hn) return new _t(nn);
                for (re = new _t(un), Ue = fe = new _t(un), Re = Be = new _t(un), rn = ye(hn), Fe = re.e = rn.length - nn.e - 1, re.c[0] = ii[(Xe = Fe % Xn) < 0 ? Xn + Xe : Xe], Kt = !Kt || Ne.comparedTo(re) > 0 ? Fe > 0 ? re : Ue : Ne, Xe = Mn, Mn = 1 / 0, Ne = new _t(rn), Be.c[0] = 0; He = G(Ne, re, 0, 1), (Te = fe.plus(He.times(Re))).comparedTo(Kt) != 1; ) fe = Re, Re = Te, Ue = Be.plus(He.times(Te = Ue)), Be = Te, re = Ne.minus(He.times(Te = re)), Ne = Te;
                return Te = G(Kt.minus(fe), Re, 0, 1), Be = Be.plus(Te.times(Ue)), fe = fe.plus(Te.times(Re)), Be.s = Ue.s = nn.s, qr = G(Ue, Re, Fe *= 2, mn).minus(nn).abs().comparedTo(G(Be, fe, Fe, mn).minus(nn).abs()) < 1 ? [Ue, Re] : [Be, fe], Mn = Xe, qr;
              }, Er.toNumber = function() {
                return +Sr(this);
              }, Er.toPrecision = function(Kt, re) {
                return Kt != null && De(Kt, 1, Yt), Qt(this, Kt, re, 2);
              }, Er.toString = function(Kt) {
                var re, fe = this, Re = fe.s, Te = fe.e;
                return Te === null ? Re ? (re = "Infinity", Re < 0 && (re = "-" + re)) : re = "NaN" : (Kt == null ? re = Te <= Pn || Te >= kn ? C(ye(fe.c), Te) : Y(ye(fe.c), Te, "0") : Kt === 10 && Q ? re = Y(ye((fe = Qe(new _t(fe), cn + Te + 1, mn)).c), fe.e, "0") : (De(Kt, 2, N.length, "Base"), re = st(Y(ye(fe.c), Te, "0"), 10, Kt, Re, true)), Re < 0 && fe.c[0] && (re = "-" + re)), re;
              }, Er.valueOf = Er.toJSON = function() {
                return Sr(this);
              }, Er._isBigNumber = true, Er[Symbol.toStringTag] = "BigNumber", Er[Symbol.for("nodejs.util.inspect.custom")] = Er.valueOf, A != null && _t.set(A), _t;
            }(), Pt = ht.clone();
            Pt.DEBUG = true;
            const Ft = Pt;
            function jt(n, A) {
              (A == null || A > n.length) && (A = n.length);
              for (var G = 0, st = Array(A); G < A; G++) st[G] = n[G];
              return st;
            }
            var ne = 2147483647;
            function Ie(n) {
              return Ie = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(A) {
                return typeof A;
              } : function(A) {
                return A && typeof Symbol == "function" && A.constructor === Symbol && A !== Symbol.prototype ? "symbol" : typeof A;
              }, Ie(n);
            }
            function ve(n, A) {
              var G = Object.keys(n);
              if (Object.getOwnPropertySymbols) {
                var st = Object.getOwnPropertySymbols(n);
                A && (st = st.filter(function(Gt) {
                  return Object.getOwnPropertyDescriptor(n, Gt).enumerable;
                })), G.push.apply(G, st);
              }
              return G;
            }
            function ze(n) {
              for (var A = 1; A < arguments.length; A++) {
                var G = arguments[A] != null ? arguments[A] : {};
                A % 2 ? ve(Object(G), true).forEach(function(st) {
                  Ze(n, st, G[st]);
                }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(n, Object.getOwnPropertyDescriptors(G)) : ve(Object(G)).forEach(function(st) {
                  Object.defineProperty(n, st, Object.getOwnPropertyDescriptor(G, st));
                });
              }
              return n;
            }
            function Ze(n, A, G) {
              return (A = It(A)) in n ? Object.defineProperty(n, A, { value: G, enumerable: true, configurable: true, writable: true }) : n[A] = G, n;
            }
            function Ar(n, A) {
              for (var G = 0; G < A.length; G++) {
                var st = A[G];
                st.enumerable = st.enumerable || false, st.configurable = true, "value" in st && (st.writable = true), Object.defineProperty(n, It(st.key), st);
              }
            }
            function It(n) {
              var A = function(G) {
                if (Ie(G) != "object" || !G) return G;
                var st = G[Symbol.toPrimitive];
                if (st !== void 0) {
                  var Gt = st.call(G, "string");
                  if (Ie(Gt) != "object") return Gt;
                  throw new TypeError("@@toPrimitive must return a primitive value.");
                }
                return String(G);
              }(n);
              return Ie(A) == "symbol" ? A : A + "";
            }
            var ie = function(n, A, G) {
              return A && Ar(n.prototype, A), G && Ar(n, G), Object.defineProperty(n, "prototype", { writable: false }), n;
            }(function n(A, G, st) {
              if (function(Gt, Pe) {
                if (!(Gt instanceof Pe)) throw new TypeError("Cannot call a class as a function");
              }(this, n), !(A && A instanceof je)) throw new Error("assetA is invalid");
              if (!(G && G instanceof je)) throw new Error("assetB is invalid");
              if (je.compare(A, G) !== -1) throw new Error("Assets are not in lexicographic order");
              if (!st || st !== Nr) throw new Error("fee is invalid");
              this.assetA = A, this.assetB = G, this.fee = st;
            }, [{ key: "toXDRObject", value: function() {
              var n = new c.LiquidityPoolConstantProductParameters({ assetA: this.assetA.toXDRObject(), assetB: this.assetB.toXDRObject(), fee: this.fee }), A = new c.LiquidityPoolParameters("liquidityPoolConstantProduct", n);
              return new c.ChangeTrustAsset("assetTypePoolShare", A);
            } }, { key: "getLiquidityPoolParameters", value: function() {
              return ze(ze({}, this), {}, { assetA: this.assetA, assetB: this.assetB, fee: this.fee });
            } }, { key: "getAssetType", value: function() {
              return "liquidity_pool_shares";
            } }, { key: "equals", value: function(n) {
              return this.assetA.equals(n.assetA) && this.assetB.equals(n.assetB) && this.fee === n.fee;
            } }, { key: "toString", value: function() {
              var n = wr("constant_product", this.getLiquidityPoolParameters()).toString("hex");
              return "liquidity_pool:".concat(n);
            } }], [{ key: "fromOperation", value: function(n) {
              var A = n.switch();
              if (A === c.AssetType.assetTypePoolShare()) {
                var G = n.liquidityPool().constantProduct();
                return new this(je.fromOperation(G.assetA()), je.fromOperation(G.assetB()), G.fee());
              }
              throw new Error("Invalid asset type: ".concat(A.name));
            } }]);
            function Ae(n) {
              return Ae = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(A) {
                return typeof A;
              } : function(A) {
                return A && typeof Symbol == "function" && A.constructor === Symbol && A !== Symbol.prototype ? "symbol" : typeof A;
              }, Ae(n);
            }
            function ge(n, A) {
              for (var G = 0; G < A.length; G++) {
                var st = A[G];
                st.enumerable = st.enumerable || false, st.configurable = true, "value" in st && (st.writable = true), Object.defineProperty(n, we(st.key), st);
              }
            }
            function we(n) {
              var A = function(G) {
                if (Ae(G) != "object" || !G) return G;
                var st = G[Symbol.toPrimitive];
                if (st !== void 0) {
                  var Gt = st.call(G, "string");
                  if (Ae(Gt) != "object") return Gt;
                  throw new TypeError("@@toPrimitive must return a primitive value.");
                }
                return String(G);
              }(n);
              return Ae(A) == "symbol" ? A : A + "";
            }
            var sr = function(n, A, G) {
              return A && ge(n.prototype, A), G && ge(n, G), Object.defineProperty(n, "prototype", { writable: false }), n;
            }(function n(A, G) {
              if (function(st, Gt) {
                if (!(st instanceof Gt)) throw new TypeError("Cannot call a class as a function");
              }(this, n), A && !gr.isValidEd25519PublicKey(A)) throw new Error("Destination is invalid");
              if (this._destination = A, G) {
                if (!(G instanceof c.ClaimPredicate)) throw new Error("Predicate should be an xdr.ClaimPredicate");
                this._predicate = G;
              } else this._predicate = c.ClaimPredicate.claimPredicateUnconditional();
            }, [{ key: "toXDRObject", value: function() {
              var n = new c.ClaimantV0({ destination: ue.fromPublicKey(this._destination).xdrAccountId(), predicate: this._predicate });
              return c.Claimant.claimantTypeV0(n);
            } }, { key: "destination", get: function() {
              return this._destination;
            }, set: function(n) {
              throw new Error("Claimant is immutable");
            } }, { key: "predicate", get: function() {
              return this._predicate;
            }, set: function(n) {
              throw new Error("Claimant is immutable");
            } }], [{ key: "predicateUnconditional", value: function() {
              return c.ClaimPredicate.claimPredicateUnconditional();
            } }, { key: "predicateAnd", value: function(n, A) {
              if (!(n instanceof c.ClaimPredicate)) throw new Error("left Predicate should be an xdr.ClaimPredicate");
              if (!(A instanceof c.ClaimPredicate)) throw new Error("right Predicate should be an xdr.ClaimPredicate");
              return c.ClaimPredicate.claimPredicateAnd([n, A]);
            } }, { key: "predicateOr", value: function(n, A) {
              if (!(n instanceof c.ClaimPredicate)) throw new Error("left Predicate should be an xdr.ClaimPredicate");
              if (!(A instanceof c.ClaimPredicate)) throw new Error("right Predicate should be an xdr.ClaimPredicate");
              return c.ClaimPredicate.claimPredicateOr([n, A]);
            } }, { key: "predicateNot", value: function(n) {
              if (!(n instanceof c.ClaimPredicate)) throw new Error("right Predicate should be an xdr.ClaimPredicate");
              return c.ClaimPredicate.claimPredicateNot(n);
            } }, { key: "predicateBeforeAbsoluteTime", value: function(n) {
              return c.ClaimPredicate.claimPredicateBeforeAbsoluteTime(c.Int64.fromString(n));
            } }, { key: "predicateBeforeRelativeTime", value: function(n) {
              return c.ClaimPredicate.claimPredicateBeforeRelativeTime(c.Int64.fromString(n));
            } }, { key: "fromXDR", value: function(n) {
              var A;
              if (n.switch() === c.ClaimantType.claimantTypeV0()) return A = n.v0(), new this(gr.encodeEd25519PublicKey(A.destination().ed25519()), A.predicate());
              throw new Error("Invalid claimant type: ".concat(n.switch().name));
            } }]);
            function nr(n) {
              return nr = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(A) {
                return typeof A;
              } : function(A) {
                return A && typeof Symbol == "function" && A.constructor === Symbol && A !== Symbol.prototype ? "symbol" : typeof A;
              }, nr(n);
            }
            function gn(n, A) {
              for (var G = 0; G < A.length; G++) {
                var st = A[G];
                st.enumerable = st.enumerable || false, st.configurable = true, "value" in st && (st.writable = true), Object.defineProperty(n, wn(st.key), st);
              }
            }
            function wn(n) {
              var A = function(G) {
                if (nr(G) != "object" || !G) return G;
                var st = G[Symbol.toPrimitive];
                if (st !== void 0) {
                  var Gt = st.call(G, "string");
                  if (nr(Gt) != "object") return Gt;
                  throw new TypeError("@@toPrimitive must return a primitive value.");
                }
                return String(G);
              }(n);
              return nr(A) == "symbol" ? A : A + "";
            }
            var dn = function(n, A, G) {
              return A && gn(n.prototype, A), G && gn(n, G), Object.defineProperty(n, "prototype", { writable: false }), n;
            }(function n(A) {
              if (function(G, st) {
                if (!(G instanceof st)) throw new TypeError("Cannot call a class as a function");
              }(this, n), !A) throw new Error("liquidityPoolId cannot be empty");
              if (!/^[a-f0-9]{64}$/.test(A)) throw new Error("Liquidity pool ID is not a valid hash");
              this.liquidityPoolId = A;
            }, [{ key: "toXDRObject", value: function() {
              var n = c.PoolId.fromXDR(this.liquidityPoolId, "hex");
              return new c.TrustLineAsset("assetTypePoolShare", n);
            } }, { key: "getLiquidityPoolId", value: function() {
              return String(this.liquidityPoolId);
            } }, { key: "getAssetType", value: function() {
              return "liquidity_pool_shares";
            } }, { key: "equals", value: function(n) {
              return this.liquidityPoolId === n.getLiquidityPoolId();
            } }, { key: "toString", value: function() {
              return "liquidity_pool:".concat(this.liquidityPoolId);
            } }], [{ key: "fromOperation", value: function(n) {
              var A = n.switch();
              if (A === c.AssetType.assetTypePoolShare()) return new this(n.liquidityPoolId().toString("hex"));
              throw new Error("Invalid asset type: ".concat(A.name));
            } }]), Vn = b(8287).Buffer;
            function ln(n) {
              return gr.isValidMed25519PublicKey(n) ? function(A) {
                var G = gr.decodeMed25519PublicKey(A);
                return c.MuxedAccount.keyTypeMuxedEd25519(new c.MuxedAccountMed25519({ id: c.Uint64.fromXDR(G.subarray(-8)), ed25519: G.subarray(0, -8) }));
              }(n) : c.MuxedAccount.keyTypeEd25519(gr.decodeEd25519PublicKey(n));
            }
            function Yr(n) {
              return n.switch().value === c.CryptoKeyType.keyTypeMuxedEd25519().value ? function(A) {
                if (A.switch() === c.CryptoKeyType.keyTypeEd25519()) return Yr(A);
                var G = A.med25519();
                return gr.encodeMed25519PublicKey(Vn.concat([G.ed25519(), G.id().toXDR("raw")]));
              }(n) : gr.encodeEd25519PublicKey(n.ed25519());
            }
            function ao(n, A) {
              if (!gr.isValidEd25519PublicKey(n)) throw new Error("address should be a Stellar account ID (G...)");
              if (typeof A != "string") throw new Error("id should be a string representing a number (uint64)");
              return c.MuxedAccount.keyTypeMuxedEd25519(new c.MuxedAccountMed25519({ id: c.Uint64.fromString(A), ed25519: gr.decodeEd25519PublicKey(n) }));
            }
            function mo(n) {
              if (gr.isValidEd25519PublicKey(n)) return n;
              if (!gr.isValidMed25519PublicKey(n)) throw new TypeError("expected muxed account (M...), got ".concat(n));
              var A = ln(n);
              return gr.encodeEd25519PublicKey(A.med25519().ed25519());
            }
            function co(n) {
              if (typeof n != "string" || n.length !== 72) throw new Error("must provide a valid claimable balance id");
            }
            var So = b(8287).Buffer, ho = b(8287).Buffer;
            function Lo(n, A) {
              if (n >= 0 && n <= 255) return true;
              throw new Error("".concat(A, " value must be between 0 and 255"));
            }
            var Io = b(8287).Buffer;
            function Ko(n) {
              return Ko = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(A) {
                return typeof A;
              } : function(A) {
                return A && typeof Symbol == "function" && A.constructor === Symbol && A !== Symbol.prototype ? "symbol" : typeof A;
              }, Ko(n);
            }
            function ui(n) {
              return ui = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(A) {
                return typeof A;
              } : function(A) {
                return A && typeof Symbol == "function" && A.constructor === Symbol && A !== Symbol.prototype ? "symbol" : typeof A;
              }, ui(n);
            }
            function yi(n, A) {
              for (var G = 0; G < A.length; G++) {
                var st = A[G];
                st.enumerable = st.enumerable || false, st.configurable = true, "value" in st && (st.writable = true), Object.defineProperty(n, Mi(st.key), st);
              }
            }
            function Mi(n) {
              var A = function(G) {
                if (ui(G) != "object" || !G) return G;
                var st = G[Symbol.toPrimitive];
                if (st !== void 0) {
                  var Gt = st.call(G, "string");
                  if (ui(Gt) != "object") return Gt;
                  throw new TypeError("@@toPrimitive must return a primitive value.");
                }
                return String(G);
              }(n);
              return ui(A) == "symbol" ? A : A + "";
            }
            var Qo = function() {
              function n(A) {
                if (function(G, st) {
                  if (!(G instanceof st)) throw new TypeError("Cannot call a class as a function");
                }(this, n), gr.isValidEd25519PublicKey(A)) this._type = "account", this._key = gr.decodeEd25519PublicKey(A);
                else if (gr.isValidContract(A)) this._type = "contract", this._key = gr.decodeContract(A);
                else if (gr.isValidMed25519PublicKey(A)) this._type = "muxedAccount", this._key = gr.decodeMed25519PublicKey(A);
                else if (gr.isValidClaimableBalance(A)) this._type = "claimableBalance", this._key = gr.decodeClaimableBalance(A);
                else {
                  if (!gr.isValidLiquidityPool(A)) throw new Error("Unsupported address type: ".concat(A));
                  this._type = "liquidityPool", this._key = gr.decodeLiquidityPool(A);
                }
              }
              return function(A, G, st) {
                return G && yi(A.prototype, G), st && yi(A, st), Object.defineProperty(A, "prototype", { writable: false }), A;
              }(n, [{ key: "toString", value: function() {
                switch (this._type) {
                  case "account":
                    return gr.encodeEd25519PublicKey(this._key);
                  case "contract":
                    return gr.encodeContract(this._key);
                  case "claimableBalance":
                    return gr.encodeClaimableBalance(this._key);
                  case "liquidityPool":
                    return gr.encodeLiquidityPool(this._key);
                  case "muxedAccount":
                    return gr.encodeMed25519PublicKey(this._key);
                  default:
                    throw new Error("Unsupported address type");
                }
              } }, { key: "toScVal", value: function() {
                return c.ScVal.scvAddress(this.toScAddress());
              } }, { key: "toScAddress", value: function() {
                switch (this._type) {
                  case "account":
                    return c.ScAddress.scAddressTypeAccount(c.PublicKey.publicKeyTypeEd25519(this._key));
                  case "contract":
                    return c.ScAddress.scAddressTypeContract(this._key);
                  case "liquidityPool":
                    return c.ScAddress.scAddressTypeLiquidityPool(this._key);
                  case "claimableBalance":
                    return c.ScAddress.scAddressTypeClaimableBalance(new c.ClaimableBalanceId("claimableBalanceIdTypeV".concat(this._key.at(0)), this._key.subarray(1)));
                  case "muxedAccount":
                    return c.ScAddress.scAddressTypeMuxedAccount(c.MuxedEd25519Account.fromXDR(this._key));
                  default:
                    throw new Error("Unsupported address type: ".concat(this._type));
                }
              } }, { key: "toBuffer", value: function() {
                return this._key;
              } }], [{ key: "fromString", value: function(A) {
                return new n(A);
              } }, { key: "account", value: function(A) {
                return new n(gr.encodeEd25519PublicKey(A));
              } }, { key: "contract", value: function(A) {
                return new n(gr.encodeContract(A));
              } }, { key: "claimableBalance", value: function(A) {
                return new n(gr.encodeClaimableBalance(A));
              } }, { key: "liquidityPool", value: function(A) {
                return new n(gr.encodeLiquidityPool(A));
              } }, { key: "muxedAccount", value: function(A) {
                return new n(gr.encodeMed25519PublicKey(A));
              } }, { key: "fromScVal", value: function(A) {
                return n.fromScAddress(A.address());
              } }, { key: "fromScAddress", value: function(A) {
                switch (A.switch().value) {
                  case c.ScAddressType.scAddressTypeAccount().value:
                    return n.account(A.accountId().ed25519());
                  case c.ScAddressType.scAddressTypeContract().value:
                    return n.contract(A.contractId());
                  case c.ScAddressType.scAddressTypeMuxedAccount().value:
                    return n.muxedAccount(A.muxedAccount());
                  case c.ScAddressType.scAddressTypeClaimableBalance().value:
                    return n.claimableBalance(A.claimableBalanceId());
                  case c.ScAddressType.scAddressTypeLiquidityPool().value:
                    return n.liquidityPool(A.liquidityPoolId());
                  default:
                    throw new Error("Unsupported address type: ".concat(A.switch().name));
                }
              } }]);
            }(), Si = b(8287).Buffer;
            function ea(n, A) {
              (A == null || A > n.length) && (A = n.length);
              for (var G = 0, st = Array(A); G < A; G++) st[G] = n[G];
              return st;
            }
            function _o(n) {
              return _o = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(A) {
                return typeof A;
              } : function(A) {
                return A && typeof Symbol == "function" && A.constructor === Symbol && A !== Symbol.prototype ? "symbol" : typeof A;
              }, _o(n);
            }
            function Wi(n, A) {
              for (var G = 0; G < A.length; G++) {
                var st = A[G];
                st.enumerable = st.enumerable || false, st.configurable = true, "value" in st && (st.writable = true), Object.defineProperty(n, Ui(st.key), st);
              }
            }
            function Ui(n) {
              var A = function(G) {
                if (_o(G) != "object" || !G) return G;
                var st = G[Symbol.toPrimitive];
                if (st !== void 0) {
                  var Gt = st.call(G, "string");
                  if (_o(Gt) != "object") return Gt;
                  throw new TypeError("@@toPrimitive must return a primitive value.");
                }
                return String(G);
              }(n);
              return _o(A) == "symbol" ? A : A + "";
            }
            var zt = 1e7, Et = 1, vt = 2, Dt = 4, de = 8, ae = function(n, A, G) {
              return G && Wi(n, G), Object.defineProperty(n, "prototype", { writable: false }), n;
            }(function n() {
              (function(A, G) {
                if (!(A instanceof G)) throw new TypeError("Cannot call a class as a function");
              })(this, n);
            }, 0, [{ key: "setSourceAccount", value: function(n, A) {
              if (A.source) try {
                n.sourceAccount = ln(A.source);
              } catch {
                throw new Error("Source address is invalid");
              }
            } }, { key: "fromXDRObject", value: function(n) {
              var A = {};
              n.sourceAccount() && (A.source = Yr(n.sourceAccount()));
              var G = n.body().value(), st = n.body().switch().name;
              switch (st) {
                case "createAccount":
                  A.type = "createAccount", A.destination = Qr(G.destination()), A.startingBalance = this._fromXDRAmount(G.startingBalance());
                  break;
                case "payment":
                  A.type = "payment", A.destination = Yr(G.destination()), A.asset = je.fromOperation(G.asset()), A.amount = this._fromXDRAmount(G.amount());
                  break;
                case "pathPaymentStrictReceive":
                  A.type = "pathPaymentStrictReceive", A.sendAsset = je.fromOperation(G.sendAsset()), A.sendMax = this._fromXDRAmount(G.sendMax()), A.destination = Yr(G.destination()), A.destAsset = je.fromOperation(G.destAsset()), A.destAmount = this._fromXDRAmount(G.destAmount()), A.path = [];
                  var Gt = G.path();
                  Object.keys(Gt).forEach(function(un) {
                    A.path.push(je.fromOperation(Gt[un]));
                  });
                  break;
                case "pathPaymentStrictSend":
                  A.type = "pathPaymentStrictSend", A.sendAsset = je.fromOperation(G.sendAsset()), A.sendAmount = this._fromXDRAmount(G.sendAmount()), A.destination = Yr(G.destination()), A.destAsset = je.fromOperation(G.destAsset()), A.destMin = this._fromXDRAmount(G.destMin()), A.path = [];
                  var Pe = G.path();
                  Object.keys(Pe).forEach(function(un) {
                    A.path.push(je.fromOperation(Pe[un]));
                  });
                  break;
                case "changeTrust":
                  A.type = "changeTrust", G.line().switch() === c.AssetType.assetTypePoolShare() ? A.line = ie.fromOperation(G.line()) : A.line = je.fromOperation(G.line()), A.limit = this._fromXDRAmount(G.limit());
                  break;
                case "allowTrust":
                  A.type = "allowTrust", A.trustor = Qr(G.trustor()), A.assetCode = G.asset().value().toString(), A.assetCode = Nt(A.assetCode, "\0"), A.authorize = G.authorize();
                  break;
                case "setOptions":
                  if (A.type = "setOptions", G.inflationDest() && (A.inflationDest = Qr(G.inflationDest())), A.clearFlags = G.clearFlags(), A.setFlags = G.setFlags(), A.masterWeight = G.masterWeight(), A.lowThreshold = G.lowThreshold(), A.medThreshold = G.medThreshold(), A.highThreshold = G.highThreshold(), A.homeDomain = G.homeDomain() !== void 0 ? G.homeDomain().toString("ascii") : void 0, G.signer()) {
                    var We = {}, er = G.signer().key().arm();
                    if (er === "ed25519") We.ed25519PublicKey = Qr(G.signer().key());
                    else if (er === "preAuthTx") We.preAuthTx = G.signer().key().preAuthTx();
                    else if (er === "hashX") We.sha256Hash = G.signer().key().hashX();
                    else if (er === "ed25519SignedPayload") {
                      var Rr = G.signer().key().ed25519SignedPayload();
                      We.ed25519SignedPayload = gr.encodeSignedPayload(Rr.toXDR());
                    }
                    We.weight = G.signer().weight(), A.signer = We;
                  }
                  break;
                case "manageOffer":
                case "manageSellOffer":
                  A.type = "manageSellOffer", A.selling = je.fromOperation(G.selling()), A.buying = je.fromOperation(G.buying()), A.amount = this._fromXDRAmount(G.amount()), A.price = this._fromXDRPrice(G.price()), A.offerId = G.offerId().toString();
                  break;
                case "manageBuyOffer":
                  A.type = "manageBuyOffer", A.selling = je.fromOperation(G.selling()), A.buying = je.fromOperation(G.buying()), A.buyAmount = this._fromXDRAmount(G.buyAmount()), A.price = this._fromXDRPrice(G.price()), A.offerId = G.offerId().toString();
                  break;
                case "createPassiveOffer":
                case "createPassiveSellOffer":
                  A.type = "createPassiveSellOffer", A.selling = je.fromOperation(G.selling()), A.buying = je.fromOperation(G.buying()), A.amount = this._fromXDRAmount(G.amount()), A.price = this._fromXDRPrice(G.price());
                  break;
                case "accountMerge":
                  A.type = "accountMerge", A.destination = Yr(G);
                  break;
                case "manageData":
                  A.type = "manageData", A.name = G.dataName().toString("ascii"), A.value = G.dataValue();
                  break;
                case "inflation":
                  A.type = "inflation";
                  break;
                case "bumpSequence":
                  A.type = "bumpSequence", A.bumpTo = G.bumpTo().toString();
                  break;
                case "createClaimableBalance":
                  A.type = "createClaimableBalance", A.asset = je.fromOperation(G.asset()), A.amount = this._fromXDRAmount(G.amount()), A.claimants = [], G.claimants().forEach(function(un) {
                    A.claimants.push(sr.fromXDR(un));
                  });
                  break;
                case "claimClaimableBalance":
                  A.type = "claimClaimableBalance", A.balanceId = G.toXDR("hex");
                  break;
                case "beginSponsoringFutureReserves":
                  A.type = "beginSponsoringFutureReserves", A.sponsoredId = Qr(G.sponsoredId());
                  break;
                case "endSponsoringFutureReserves":
                  A.type = "endSponsoringFutureReserves";
                  break;
                case "revokeSponsorship":
                  (function(un, cn) {
                    switch (un.switch().name) {
                      case "revokeSponsorshipLedgerEntry":
                        var mn = un.ledgerKey();
                        switch (mn.switch().name) {
                          case c.LedgerEntryType.account().name:
                            cn.type = "revokeAccountSponsorship", cn.account = Qr(mn.account().accountId());
                            break;
                          case c.LedgerEntryType.trustline().name:
                            cn.type = "revokeTrustlineSponsorship", cn.account = Qr(mn.trustLine().accountId());
                            var Pn = mn.trustLine().asset();
                            Pn.switch() === c.AssetType.assetTypePoolShare() ? cn.asset = dn.fromOperation(Pn) : cn.asset = je.fromOperation(Pn);
                            break;
                          case c.LedgerEntryType.offer().name:
                            cn.type = "revokeOfferSponsorship", cn.seller = Qr(mn.offer().sellerId()), cn.offerId = mn.offer().offerId().toString();
                            break;
                          case c.LedgerEntryType.data().name:
                            cn.type = "revokeDataSponsorship", cn.account = Qr(mn.data().accountId()), cn.name = mn.data().dataName().toString("ascii");
                            break;
                          case c.LedgerEntryType.claimableBalance().name:
                            cn.type = "revokeClaimableBalanceSponsorship", cn.balanceId = mn.claimableBalance().balanceId().toXDR("hex");
                            break;
                          case c.LedgerEntryType.liquidityPool().name:
                            cn.type = "revokeLiquidityPoolSponsorship", cn.liquidityPoolId = mn.liquidityPool().liquidityPoolId().toString("hex");
                            break;
                          default:
                            throw new Error("Unknown ledgerKey: ".concat(un.switch().name));
                        }
                        break;
                      case "revokeSponsorshipSigner":
                        cn.type = "revokeSignerSponsorship", cn.account = Qr(un.signer().accountId()), cn.signer = function(kn) {
                          var so = {};
                          switch (kn.switch().name) {
                            case c.SignerKeyType.signerKeyTypeEd25519().name:
                              so.ed25519PublicKey = gr.encodeEd25519PublicKey(kn.ed25519());
                              break;
                            case c.SignerKeyType.signerKeyTypePreAuthTx().name:
                              so.preAuthTx = kn.preAuthTx().toString("hex");
                              break;
                            case c.SignerKeyType.signerKeyTypeHashX().name:
                              so.sha256Hash = kn.hashX().toString("hex");
                              break;
                            default:
                              throw new Error("Unknown signerKey: ".concat(kn.switch().name));
                          }
                          return so;
                        }(un.signer().signerKey());
                        break;
                      default:
                        throw new Error("Unknown revokeSponsorship: ".concat(un.switch().name));
                    }
                  })(G, A);
                  break;
                case "clawback":
                  A.type = "clawback", A.amount = this._fromXDRAmount(G.amount()), A.from = Yr(G.from()), A.asset = je.fromOperation(G.asset());
                  break;
                case "clawbackClaimableBalance":
                  A.type = "clawbackClaimableBalance", A.balanceId = G.toXDR("hex");
                  break;
                case "setTrustLineFlags":
                  A.type = "setTrustLineFlags", A.asset = je.fromOperation(G.asset()), A.trustor = Qr(G.trustor());
                  var kr = G.clearFlags(), vr = G.setFlags(), ur = { authorized: c.TrustLineFlags.authorizedFlag(), authorizedToMaintainLiabilities: c.TrustLineFlags.authorizedToMaintainLiabilitiesFlag(), clawbackEnabled: c.TrustLineFlags.trustlineClawbackEnabledFlag() };
                  A.flags = {}, Object.keys(ur).forEach(function(un) {
                    var cn;
                    A.flags[un] = (cn = ur[un].value, !!(vr & cn) || !(kr & cn) && void 0);
                  });
                  break;
                case "liquidityPoolDeposit":
                  A.type = "liquidityPoolDeposit", A.liquidityPoolId = G.liquidityPoolId().toString("hex"), A.maxAmountA = this._fromXDRAmount(G.maxAmountA()), A.maxAmountB = this._fromXDRAmount(G.maxAmountB()), A.minPrice = this._fromXDRPrice(G.minPrice()), A.maxPrice = this._fromXDRPrice(G.maxPrice());
                  break;
                case "liquidityPoolWithdraw":
                  A.type = "liquidityPoolWithdraw", A.liquidityPoolId = G.liquidityPoolId().toString("hex"), A.amount = this._fromXDRAmount(G.amount()), A.minAmountA = this._fromXDRAmount(G.minAmountA()), A.minAmountB = this._fromXDRAmount(G.minAmountB());
                  break;
                case "invokeHostFunction":
                  var Er;
                  A.type = "invokeHostFunction", A.func = G.hostFunction(), A.auth = (Er = G.auth()) !== null && Er !== void 0 ? Er : [];
                  break;
                case "extendFootprintTtl":
                  A.type = "extendFootprintTtl", A.extendTo = G.extendTo();
                  break;
                case "restoreFootprint":
                  A.type = "restoreFootprint";
                  break;
                default:
                  throw new Error("Unknown operation: ".concat(st));
              }
              return A;
            } }, { key: "isValidAmount", value: function(n) {
              var A, G = arguments.length > 1 && arguments[1] !== void 0 && arguments[1];
              if (typeof n != "string") return false;
              try {
                A = new Ft(n);
              } catch {
                return false;
              }
              return !(!G && A.isZero() || A.isNegative() || A.times(zt).gt(new Ft("9223372036854775807").toString()) || A.decimalPlaces() > 7 || A.isNaN() || !A.isFinite());
            } }, { key: "constructAmountRequirementsError", value: function(n) {
              return "".concat(n, " argument must be of type String, represent a positive number and have at most 7 digits after the decimal");
            } }, { key: "_checkUnsignedIntValue", value: function(n, A) {
              var G = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : null;
              if (A !== void 0) switch (typeof A == "string" && (A = parseFloat(A)), true) {
                case (typeof A != "number" || !Number.isFinite(A) || A % 1 != 0):
                  throw new Error("".concat(n, " value is invalid"));
                case A < 0:
                  throw new Error("".concat(n, " value must be unsigned"));
                case (!G || G && G(A, n)):
                  return A;
                default:
                  throw new Error("".concat(n, " value is invalid"));
              }
            } }, { key: "_toXDRAmount", value: function(n) {
              var A = new Ft(n).times(zt);
              return h.Hyper.fromString(A.toString());
            } }, { key: "_fromXDRAmount", value: function(n) {
              return new Ft(n).div(zt).toFixed(7);
            } }, { key: "_fromXDRPrice", value: function(n) {
              return new Ft(n.n()).div(new Ft(n.d())).toString();
            } }, { key: "_toXDRPrice", value: function(n) {
              var A;
              if (n.n && n.d) A = new c.Price(n);
              else {
                var G = function(st) {
                  for (var Gt, Pe, We = new Ft(st), er = [[new Ft(0), new Ft(1)], [new Ft(1), new Ft(0)]], Rr = 2; !We.gt(ne); ) {
                    Gt = We.integerValue(Ft.ROUND_FLOOR), Pe = We.minus(Gt);
                    var kr = Gt.times(er[Rr - 1][0]).plus(er[Rr - 2][0]), vr = Gt.times(er[Rr - 1][1]).plus(er[Rr - 2][1]);
                    if (kr.gt(ne) || vr.gt(ne) || (er.push([kr, vr]), Pe.eq(0))) break;
                    We = new Ft(1).div(Pe), Rr += 1;
                  }
                  var ur = function(cn, mn) {
                    return function(Pn) {
                      if (Array.isArray(Pn)) return Pn;
                    }(cn) || function(Pn, kn) {
                      var so = Pn == null ? null : typeof Symbol < "u" && Pn[Symbol.iterator] || Pn["@@iterator"];
                      if (so != null) {
                        var Mn, $n, On, r, y = [], N = true, Q = false;
                        try {
                          if (On = (so = so.call(Pn)).next, kn !== 0) for (; !(N = (Mn = On.call(so)).done) && (y.push(Mn.value), y.length !== kn); N = true) ;
                        } catch (_t) {
                          Q = true, $n = _t;
                        } finally {
                          try {
                            if (!N && so.return != null && (r = so.return(), Object(r) !== r)) return;
                          } finally {
                            if (Q) throw $n;
                          }
                        }
                        return y;
                      }
                    }(cn, mn) || function(Pn, kn) {
                      if (Pn) {
                        if (typeof Pn == "string") return jt(Pn, kn);
                        var so = {}.toString.call(Pn).slice(8, -1);
                        return so === "Object" && Pn.constructor && (so = Pn.constructor.name), so === "Map" || so === "Set" ? Array.from(Pn) : so === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(so) ? jt(Pn, kn) : void 0;
                      }
                    }(cn, mn) || function() {
                      throw new TypeError(`Invalid attempt to destructure non-iterable instance.
In order to be iterable, non-array objects must have a [Symbol.iterator]() method.`);
                    }();
                  }(er[er.length - 1], 2), Er = ur[0], un = ur[1];
                  if (Er.isZero() || un.isZero()) throw new Error("Couldn't find approximation");
                  return [Er.toNumber(), un.toNumber()];
                }(n);
                A = new c.Price({ n: parseInt(G[0], 10), d: parseInt(G[1], 10) });
              }
              if (A.n() < 0 || A.d() < 0) throw new Error("price must be positive");
              return A;
            } }]);
            function Qr(n) {
              return gr.encodeEd25519PublicKey(n.ed25519());
            }
            ae.accountMerge = function(n) {
              var A = {};
              try {
                A.body = c.OperationBody.accountMerge(ln(n.destination));
              } catch {
                throw new Error("destination is invalid");
              }
              return this.setSourceAccount(A, n), new c.Operation(A);
            }, ae.allowTrust = function(n) {
              if (!gr.isValidEd25519PublicKey(n.trustor)) throw new Error("trustor is invalid");
              var A = {};
              if (A.trustor = ue.fromPublicKey(n.trustor).xdrAccountId(), n.assetCode.length <= 4) {
                var G = n.assetCode.padEnd(4, "\0");
                A.asset = c.AssetCode.assetTypeCreditAlphanum4(G);
              } else {
                if (!(n.assetCode.length <= 12)) throw new Error("Asset code must be 12 characters at max.");
                var st = n.assetCode.padEnd(12, "\0");
                A.asset = c.AssetCode.assetTypeCreditAlphanum12(st);
              }
              typeof n.authorize == "boolean" ? n.authorize ? A.authorize = c.TrustLineFlags.authorizedFlag().value : A.authorize = 0 : A.authorize = n.authorize;
              var Gt = new c.AllowTrustOp(A), Pe = {};
              return Pe.body = c.OperationBody.allowTrust(Gt), this.setSourceAccount(Pe, n), new c.Operation(Pe);
            }, ae.bumpSequence = function(n) {
              var A = {};
              if (typeof n.bumpTo != "string") throw new Error("bumpTo must be a string");
              try {
                new Ft(n.bumpTo);
              } catch {
                throw new Error("bumpTo must be a stringified number");
              }
              A.bumpTo = h.Hyper.fromString(n.bumpTo);
              var G = new c.BumpSequenceOp(A), st = {};
              return st.body = c.OperationBody.bumpSequence(G), this.setSourceAccount(st, n), new c.Operation(st);
            }, ae.changeTrust = function(n) {
              var A = {};
              if (n.asset instanceof je) A.line = n.asset.toChangeTrustXDRObject();
              else {
                if (!(n.asset instanceof ie)) throw new TypeError("asset must be Asset or LiquidityPoolAsset");
                A.line = n.asset.toXDRObject();
              }
              if (n.limit !== void 0 && !this.isValidAmount(n.limit, true)) throw new TypeError(this.constructAmountRequirementsError("limit"));
              n.limit ? A.limit = this._toXDRAmount(n.limit) : A.limit = h.Hyper.fromString(new Ft("9223372036854775807").toString()), n.source && (A.source = n.source.masterKeypair);
              var G = new c.ChangeTrustOp(A), st = {};
              return st.body = c.OperationBody.changeTrust(G), this.setSourceAccount(st, n), new c.Operation(st);
            }, ae.createAccount = function(n) {
              if (!gr.isValidEd25519PublicKey(n.destination)) throw new Error("destination is invalid");
              if (!this.isValidAmount(n.startingBalance, true)) throw new TypeError(this.constructAmountRequirementsError("startingBalance"));
              var A = {};
              A.destination = ue.fromPublicKey(n.destination).xdrAccountId(), A.startingBalance = this._toXDRAmount(n.startingBalance);
              var G = new c.CreateAccountOp(A), st = {};
              return st.body = c.OperationBody.createAccount(G), this.setSourceAccount(st, n), new c.Operation(st);
            }, ae.createClaimableBalance = function(n) {
              if (!(n.asset instanceof je)) throw new Error("must provide an asset for create claimable balance operation");
              if (!this.isValidAmount(n.amount)) throw new TypeError(this.constructAmountRequirementsError("amount"));
              if (!Array.isArray(n.claimants) || n.claimants.length === 0) throw new Error("must provide at least one claimant");
              var A = {};
              A.asset = n.asset.toXDRObject(), A.amount = this._toXDRAmount(n.amount), A.claimants = Object.values(n.claimants).map(function(Gt) {
                return Gt.toXDRObject();
              });
              var G = new c.CreateClaimableBalanceOp(A), st = {};
              return st.body = c.OperationBody.createClaimableBalance(G), this.setSourceAccount(st, n), new c.Operation(st);
            }, ae.claimClaimableBalance = function() {
              var n = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};
              co(n.balanceId);
              var A = {};
              A.balanceId = c.ClaimableBalanceId.fromXDR(n.balanceId, "hex");
              var G = new c.ClaimClaimableBalanceOp(A), st = {};
              return st.body = c.OperationBody.claimClaimableBalance(G), this.setSourceAccount(st, n), new c.Operation(st);
            }, ae.clawbackClaimableBalance = function() {
              var n = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};
              co(n.balanceId);
              var A = { balanceId: c.ClaimableBalanceId.fromXDR(n.balanceId, "hex") }, G = { body: c.OperationBody.clawbackClaimableBalance(new c.ClawbackClaimableBalanceOp(A)) };
              return this.setSourceAccount(G, n), new c.Operation(G);
            }, ae.createPassiveSellOffer = function(n) {
              var A = {};
              if (A.selling = n.selling.toXDRObject(), A.buying = n.buying.toXDRObject(), !this.isValidAmount(n.amount)) throw new TypeError(this.constructAmountRequirementsError("amount"));
              if (A.amount = this._toXDRAmount(n.amount), n.price === void 0) throw new TypeError("price argument is required");
              A.price = this._toXDRPrice(n.price);
              var G = new c.CreatePassiveSellOfferOp(A), st = {};
              return st.body = c.OperationBody.createPassiveSellOffer(G), this.setSourceAccount(st, n), new c.Operation(st);
            }, ae.inflation = function() {
              var n = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {}, A = {};
              return A.body = c.OperationBody.inflation(), this.setSourceAccount(A, n), new c.Operation(A);
            }, ae.manageData = function(n) {
              var A = {};
              if (!(typeof n.name == "string" && n.name.length <= 64)) throw new Error("name must be a string, up to 64 characters");
              if (A.dataName = n.name, typeof n.value != "string" && !So.isBuffer(n.value) && n.value !== null) throw new Error("value must be a string, Buffer or null");
              if (typeof n.value == "string" ? A.dataValue = So.from(n.value) : A.dataValue = n.value, A.dataValue !== null && A.dataValue.length > 64) throw new Error("value cannot be longer that 64 bytes");
              var G = new c.ManageDataOp(A), st = {};
              return st.body = c.OperationBody.manageData(G), this.setSourceAccount(st, n), new c.Operation(st);
            }, ae.manageSellOffer = function(n) {
              var A = {};
              if (A.selling = n.selling.toXDRObject(), A.buying = n.buying.toXDRObject(), !this.isValidAmount(n.amount, true)) throw new TypeError(this.constructAmountRequirementsError("amount"));
              if (A.amount = this._toXDRAmount(n.amount), n.price === void 0) throw new TypeError("price argument is required");
              A.price = this._toXDRPrice(n.price), n.offerId !== void 0 ? n.offerId = n.offerId.toString() : n.offerId = "0", A.offerId = h.Hyper.fromString(n.offerId);
              var G = new c.ManageSellOfferOp(A), st = {};
              return st.body = c.OperationBody.manageSellOffer(G), this.setSourceAccount(st, n), new c.Operation(st);
            }, ae.manageBuyOffer = function(n) {
              var A = {};
              if (A.selling = n.selling.toXDRObject(), A.buying = n.buying.toXDRObject(), !this.isValidAmount(n.buyAmount, true)) throw new TypeError(this.constructAmountRequirementsError("buyAmount"));
              if (A.buyAmount = this._toXDRAmount(n.buyAmount), n.price === void 0) throw new TypeError("price argument is required");
              A.price = this._toXDRPrice(n.price), n.offerId !== void 0 ? n.offerId = n.offerId.toString() : n.offerId = "0", A.offerId = h.Hyper.fromString(n.offerId);
              var G = new c.ManageBuyOfferOp(A), st = {};
              return st.body = c.OperationBody.manageBuyOffer(G), this.setSourceAccount(st, n), new c.Operation(st);
            }, ae.pathPaymentStrictReceive = function(n) {
              switch (true) {
                case !n.sendAsset:
                  throw new Error("Must specify a send asset");
                case !this.isValidAmount(n.sendMax):
                  throw new TypeError(this.constructAmountRequirementsError("sendMax"));
                case !n.destAsset:
                  throw new Error("Must provide a destAsset for a payment operation");
                case !this.isValidAmount(n.destAmount):
                  throw new TypeError(this.constructAmountRequirementsError("destAmount"));
              }
              var A = {};
              A.sendAsset = n.sendAsset.toXDRObject(), A.sendMax = this._toXDRAmount(n.sendMax);
              try {
                A.destination = ln(n.destination);
              } catch {
                throw new Error("destination is invalid");
              }
              A.destAsset = n.destAsset.toXDRObject(), A.destAmount = this._toXDRAmount(n.destAmount);
              var G = n.path ? n.path : [];
              A.path = G.map(function(Pe) {
                return Pe.toXDRObject();
              });
              var st = new c.PathPaymentStrictReceiveOp(A), Gt = {};
              return Gt.body = c.OperationBody.pathPaymentStrictReceive(st), this.setSourceAccount(Gt, n), new c.Operation(Gt);
            }, ae.pathPaymentStrictSend = function(n) {
              switch (true) {
                case !n.sendAsset:
                  throw new Error("Must specify a send asset");
                case !this.isValidAmount(n.sendAmount):
                  throw new TypeError(this.constructAmountRequirementsError("sendAmount"));
                case !n.destAsset:
                  throw new Error("Must provide a destAsset for a payment operation");
                case !this.isValidAmount(n.destMin):
                  throw new TypeError(this.constructAmountRequirementsError("destMin"));
              }
              var A = {};
              A.sendAsset = n.sendAsset.toXDRObject(), A.sendAmount = this._toXDRAmount(n.sendAmount);
              try {
                A.destination = ln(n.destination);
              } catch {
                throw new Error("destination is invalid");
              }
              A.destAsset = n.destAsset.toXDRObject(), A.destMin = this._toXDRAmount(n.destMin);
              var G = n.path ? n.path : [];
              A.path = G.map(function(Pe) {
                return Pe.toXDRObject();
              });
              var st = new c.PathPaymentStrictSendOp(A), Gt = {};
              return Gt.body = c.OperationBody.pathPaymentStrictSend(st), this.setSourceAccount(Gt, n), new c.Operation(Gt);
            }, ae.payment = function(n) {
              if (!n.asset) throw new Error("Must provide an asset for a payment operation");
              if (!this.isValidAmount(n.amount)) throw new TypeError(this.constructAmountRequirementsError("amount"));
              var A = {};
              try {
                A.destination = ln(n.destination);
              } catch {
                throw new Error("destination is invalid");
              }
              A.asset = n.asset.toXDRObject(), A.amount = this._toXDRAmount(n.amount);
              var G = new c.PaymentOp(A), st = {};
              return st.body = c.OperationBody.payment(G), this.setSourceAccount(st, n), new c.Operation(st);
            }, ae.setOptions = function(n) {
              var A = {};
              if (n.inflationDest) {
                if (!gr.isValidEd25519PublicKey(n.inflationDest)) throw new Error("inflationDest is invalid");
                A.inflationDest = ue.fromPublicKey(n.inflationDest).xdrAccountId();
              }
              if (A.clearFlags = this._checkUnsignedIntValue("clearFlags", n.clearFlags), A.setFlags = this._checkUnsignedIntValue("setFlags", n.setFlags), A.masterWeight = this._checkUnsignedIntValue("masterWeight", n.masterWeight, Lo), A.lowThreshold = this._checkUnsignedIntValue("lowThreshold", n.lowThreshold, Lo), A.medThreshold = this._checkUnsignedIntValue("medThreshold", n.medThreshold, Lo), A.highThreshold = this._checkUnsignedIntValue("highThreshold", n.highThreshold, Lo), n.homeDomain !== void 0 && typeof n.homeDomain != "string") throw new TypeError("homeDomain argument must be of type String");
              if (A.homeDomain = n.homeDomain, n.signer) {
                var G, st = this._checkUnsignedIntValue("signer.weight", n.signer.weight, Lo), Gt = 0;
                if (n.signer.ed25519PublicKey) {
                  if (!gr.isValidEd25519PublicKey(n.signer.ed25519PublicKey)) throw new Error("signer.ed25519PublicKey is invalid.");
                  var Pe = gr.decodeEd25519PublicKey(n.signer.ed25519PublicKey);
                  G = new c.SignerKey.signerKeyTypeEd25519(Pe), Gt += 1;
                }
                if (n.signer.preAuthTx) {
                  if (typeof n.signer.preAuthTx == "string" && (n.signer.preAuthTx = ho.from(n.signer.preAuthTx, "hex")), !ho.isBuffer(n.signer.preAuthTx) || n.signer.preAuthTx.length !== 32) throw new Error("signer.preAuthTx must be 32 bytes Buffer.");
                  G = new c.SignerKey.signerKeyTypePreAuthTx(n.signer.preAuthTx), Gt += 1;
                }
                if (n.signer.sha256Hash) {
                  if (typeof n.signer.sha256Hash == "string" && (n.signer.sha256Hash = ho.from(n.signer.sha256Hash, "hex")), !ho.isBuffer(n.signer.sha256Hash) || n.signer.sha256Hash.length !== 32) throw new Error("signer.sha256Hash must be 32 bytes Buffer.");
                  G = new c.SignerKey.signerKeyTypeHashX(n.signer.sha256Hash), Gt += 1;
                }
                if (n.signer.ed25519SignedPayload) {
                  if (!gr.isValidSignedPayload(n.signer.ed25519SignedPayload)) throw new Error("signer.ed25519SignedPayload is invalid.");
                  var We = gr.decodeSignedPayload(n.signer.ed25519SignedPayload), er = c.SignerKeyEd25519SignedPayload.fromXDR(We);
                  G = c.SignerKey.signerKeyTypeEd25519SignedPayload(er), Gt += 1;
                }
                if (Gt !== 1) throw new Error("Signer object must contain exactly one of signer.ed25519PublicKey, signer.sha256Hash, signer.preAuthTx.");
                A.signer = new c.Signer({ key: G, weight: st });
              }
              var Rr = new c.SetOptionsOp(A), kr = {};
              return kr.body = c.OperationBody.setOptions(Rr), this.setSourceAccount(kr, n), new c.Operation(kr);
            }, ae.beginSponsoringFutureReserves = function() {
              var n = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};
              if (!gr.isValidEd25519PublicKey(n.sponsoredId)) throw new Error("sponsoredId is invalid");
              var A = new c.BeginSponsoringFutureReservesOp({ sponsoredId: ue.fromPublicKey(n.sponsoredId).xdrAccountId() }), G = {};
              return G.body = c.OperationBody.beginSponsoringFutureReserves(A), this.setSourceAccount(G, n), new c.Operation(G);
            }, ae.endSponsoringFutureReserves = function() {
              var n = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {}, A = {};
              return A.body = c.OperationBody.endSponsoringFutureReserves(), this.setSourceAccount(A, n), new c.Operation(A);
            }, ae.revokeAccountSponsorship = function() {
              var n = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};
              if (!gr.isValidEd25519PublicKey(n.account)) throw new Error("account is invalid");
              var A = c.LedgerKey.account(new c.LedgerKeyAccount({ accountId: ue.fromPublicKey(n.account).xdrAccountId() })), G = c.RevokeSponsorshipOp.revokeSponsorshipLedgerEntry(A), st = {};
              return st.body = c.OperationBody.revokeSponsorship(G), this.setSourceAccount(st, n), new c.Operation(st);
            }, ae.revokeTrustlineSponsorship = function() {
              var n, A = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};
              if (!gr.isValidEd25519PublicKey(A.account)) throw new Error("account is invalid");
              if (A.asset instanceof je) n = A.asset.toTrustLineXDRObject();
              else {
                if (!(A.asset instanceof dn)) throw new TypeError("asset must be an Asset or LiquidityPoolId");
                n = A.asset.toXDRObject();
              }
              var G = c.LedgerKey.trustline(new c.LedgerKeyTrustLine({ accountId: ue.fromPublicKey(A.account).xdrAccountId(), asset: n })), st = c.RevokeSponsorshipOp.revokeSponsorshipLedgerEntry(G), Gt = {};
              return Gt.body = c.OperationBody.revokeSponsorship(st), this.setSourceAccount(Gt, A), new c.Operation(Gt);
            }, ae.revokeOfferSponsorship = function() {
              var n = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};
              if (!gr.isValidEd25519PublicKey(n.seller)) throw new Error("seller is invalid");
              if (typeof n.offerId != "string") throw new Error("offerId is invalid");
              var A = c.LedgerKey.offer(new c.LedgerKeyOffer({ sellerId: ue.fromPublicKey(n.seller).xdrAccountId(), offerId: c.Int64.fromString(n.offerId) })), G = c.RevokeSponsorshipOp.revokeSponsorshipLedgerEntry(A), st = {};
              return st.body = c.OperationBody.revokeSponsorship(G), this.setSourceAccount(st, n), new c.Operation(st);
            }, ae.revokeDataSponsorship = function() {
              var n = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};
              if (!gr.isValidEd25519PublicKey(n.account)) throw new Error("account is invalid");
              if (typeof n.name != "string" || n.name.length > 64) throw new Error("name must be a string, up to 64 characters");
              var A = c.LedgerKey.data(new c.LedgerKeyData({ accountId: ue.fromPublicKey(n.account).xdrAccountId(), dataName: n.name })), G = c.RevokeSponsorshipOp.revokeSponsorshipLedgerEntry(A), st = {};
              return st.body = c.OperationBody.revokeSponsorship(G), this.setSourceAccount(st, n), new c.Operation(st);
            }, ae.revokeClaimableBalanceSponsorship = function() {
              var n = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};
              if (typeof n.balanceId != "string") throw new Error("balanceId is invalid");
              var A = c.LedgerKey.claimableBalance(new c.LedgerKeyClaimableBalance({ balanceId: c.ClaimableBalanceId.fromXDR(n.balanceId, "hex") })), G = c.RevokeSponsorshipOp.revokeSponsorshipLedgerEntry(A), st = {};
              return st.body = c.OperationBody.revokeSponsorship(G), this.setSourceAccount(st, n), new c.Operation(st);
            }, ae.revokeLiquidityPoolSponsorship = function() {
              var n = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};
              if (typeof n.liquidityPoolId != "string") throw new Error("liquidityPoolId is invalid");
              var A = c.LedgerKey.liquidityPool(new c.LedgerKeyLiquidityPool({ liquidityPoolId: c.PoolId.fromXDR(n.liquidityPoolId, "hex") })), G = c.RevokeSponsorshipOp.revokeSponsorshipLedgerEntry(A), st = { body: c.OperationBody.revokeSponsorship(G) };
              return this.setSourceAccount(st, n), new c.Operation(st);
            }, ae.revokeSignerSponsorship = function() {
              var n, A = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};
              if (!gr.isValidEd25519PublicKey(A.account)) throw new Error("account is invalid");
              if (A.signer.ed25519PublicKey) {
                if (!gr.isValidEd25519PublicKey(A.signer.ed25519PublicKey)) throw new Error("signer.ed25519PublicKey is invalid.");
                var G = gr.decodeEd25519PublicKey(A.signer.ed25519PublicKey);
                n = new c.SignerKey.signerKeyTypeEd25519(G);
              } else if (A.signer.preAuthTx) {
                var st;
                if (st = typeof A.signer.preAuthTx == "string" ? Io.from(A.signer.preAuthTx, "hex") : A.signer.preAuthTx, !Io.isBuffer(st) || st.length !== 32) throw new Error("signer.preAuthTx must be 32 bytes Buffer.");
                n = new c.SignerKey.signerKeyTypePreAuthTx(st);
              } else {
                if (!A.signer.sha256Hash) throw new Error("signer is invalid");
                var Gt;
                if (Gt = typeof A.signer.sha256Hash == "string" ? Io.from(A.signer.sha256Hash, "hex") : A.signer.sha256Hash, !Io.isBuffer(Gt) || Gt.length !== 32) throw new Error("signer.sha256Hash must be 32 bytes Buffer.");
                n = new c.SignerKey.signerKeyTypeHashX(Gt);
              }
              var Pe = new c.RevokeSponsorshipOpSigner({ accountId: ue.fromPublicKey(A.account).xdrAccountId(), signerKey: n }), We = c.RevokeSponsorshipOp.revokeSponsorshipSigner(Pe), er = {};
              return er.body = c.OperationBody.revokeSponsorship(We), this.setSourceAccount(er, A), new c.Operation(er);
            }, ae.clawback = function(n) {
              var A = {};
              if (!this.isValidAmount(n.amount)) throw new TypeError(this.constructAmountRequirementsError("amount"));
              A.amount = this._toXDRAmount(n.amount), A.asset = n.asset.toXDRObject();
              try {
                A.from = ln(n.from);
              } catch {
                throw new Error("from address is invalid");
              }
              var G = { body: c.OperationBody.clawback(new c.ClawbackOp(A)) };
              return this.setSourceAccount(G, n), new c.Operation(G);
            }, ae.setTrustLineFlags = function() {
              var n = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {}, A = {};
              if (Ko(n.flags) !== "object" || Object.keys(n.flags).length === 0) throw new Error("opts.flags must be a map of boolean flags to modify");
              var G = { authorized: c.TrustLineFlags.authorizedFlag(), authorizedToMaintainLiabilities: c.TrustLineFlags.authorizedToMaintainLiabilitiesFlag(), clawbackEnabled: c.TrustLineFlags.trustlineClawbackEnabledFlag() }, st = 0, Gt = 0;
              Object.keys(n.flags).forEach(function(We) {
                if (!Object.prototype.hasOwnProperty.call(G, We)) throw new Error("unsupported flag name specified: ".concat(We));
                var er = n.flags[We], Rr = G[We].value;
                er === true ? Gt |= Rr : er === false && (st |= Rr);
              }), A.trustor = ue.fromPublicKey(n.trustor).xdrAccountId(), A.asset = n.asset.toXDRObject(), A.clearFlags = st, A.setFlags = Gt;
              var Pe = { body: c.OperationBody.setTrustLineFlags(new c.SetTrustLineFlagsOp(A)) };
              return this.setSourceAccount(Pe, n), new c.Operation(Pe);
            }, ae.liquidityPoolDeposit = function() {
              var n = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {}, A = n.liquidityPoolId, G = n.maxAmountA, st = n.maxAmountB, Gt = n.minPrice, Pe = n.maxPrice, We = {};
              if (!A) throw new TypeError("liquidityPoolId argument is required");
              if (We.liquidityPoolId = c.PoolId.fromXDR(A, "hex"), !this.isValidAmount(G, true)) throw new TypeError(this.constructAmountRequirementsError("maxAmountA"));
              if (We.maxAmountA = this._toXDRAmount(G), !this.isValidAmount(st, true)) throw new TypeError(this.constructAmountRequirementsError("maxAmountB"));
              if (We.maxAmountB = this._toXDRAmount(st), Gt === void 0) throw new TypeError("minPrice argument is required");
              if (We.minPrice = this._toXDRPrice(Gt), Pe === void 0) throw new TypeError("maxPrice argument is required");
              We.maxPrice = this._toXDRPrice(Pe);
              var er = new c.LiquidityPoolDepositOp(We), Rr = { body: c.OperationBody.liquidityPoolDeposit(er) };
              return this.setSourceAccount(Rr, n), new c.Operation(Rr);
            }, ae.liquidityPoolWithdraw = function() {
              var n = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {}, A = {};
              if (!n.liquidityPoolId) throw new TypeError("liquidityPoolId argument is required");
              if (A.liquidityPoolId = c.PoolId.fromXDR(n.liquidityPoolId, "hex"), !this.isValidAmount(n.amount)) throw new TypeError(this.constructAmountRequirementsError("amount"));
              if (A.amount = this._toXDRAmount(n.amount), !this.isValidAmount(n.minAmountA, true)) throw new TypeError(this.constructAmountRequirementsError("minAmountA"));
              if (A.minAmountA = this._toXDRAmount(n.minAmountA), !this.isValidAmount(n.minAmountB, true)) throw new TypeError(this.constructAmountRequirementsError("minAmountB"));
              A.minAmountB = this._toXDRAmount(n.minAmountB);
              var G = new c.LiquidityPoolWithdrawOp(A), st = { body: c.OperationBody.liquidityPoolWithdraw(G) };
              return this.setSourceAccount(st, n), new c.Operation(st);
            }, ae.invokeHostFunction = function(n) {
              if (!n.func) throw new TypeError("host function invocation ('func') required (got ".concat(JSON.stringify(n), ")"));
              n.func.switch().value === c.HostFunctionType.hostFunctionTypeInvokeContract().value && n.func.invokeContract().args().forEach(function(st) {
                var Gt;
                try {
                  Gt = Qo.fromScVal(st);
                } catch {
                  return;
                }
                switch (Gt._type) {
                  case "claimableBalance":
                  case "liquidityPool":
                    throw new TypeError("claimable balances and liquidity pools cannot be arguments to invokeHostFunction");
                }
              });
              var A = new c.InvokeHostFunctionOp({ hostFunction: n.func, auth: n.auth || [] }), G = { body: c.OperationBody.invokeHostFunction(A) };
              return this.setSourceAccount(G, n), new c.Operation(G);
            }, ae.extendFootprintTtl = function(n) {
              var A;
              if (((A = n.extendTo) !== null && A !== void 0 ? A : -1) <= 0) throw new RangeError("extendTo has to be positive");
              var G = new c.ExtendFootprintTtlOp({ ext: new c.ExtensionPoint(0), extendTo: n.extendTo }), st = { body: c.OperationBody.extendFootprintTtl(G) };
              return this.setSourceAccount(st, n), new c.Operation(st);
            }, ae.restoreFootprint = function() {
              var n = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {}, A = new c.RestoreFootprintOp({ ext: new c.ExtensionPoint(0) }), G = { body: c.OperationBody.restoreFootprint(A) };
              return this.setSourceAccount(G, n ?? {}), new c.Operation(G);
            }, ae.createStellarAssetContract = function(n) {
              var A = n.asset;
              if (typeof A == "string") {
                var G = function(Pe, We) {
                  return function(er) {
                    if (Array.isArray(er)) return er;
                  }(Pe) || function(er, Rr) {
                    var kr = er == null ? null : typeof Symbol < "u" && er[Symbol.iterator] || er["@@iterator"];
                    if (kr != null) {
                      var vr, ur, Er, un, cn = [], mn = true, Pn = false;
                      try {
                        if (Er = (kr = kr.call(er)).next, Rr !== 0) for (; !(mn = (vr = Er.call(kr)).done) && (cn.push(vr.value), cn.length !== Rr); mn = true) ;
                      } catch (kn) {
                        Pn = true, ur = kn;
                      } finally {
                        try {
                          if (!mn && kr.return != null && (un = kr.return(), Object(un) !== un)) return;
                        } finally {
                          if (Pn) throw ur;
                        }
                      }
                      return cn;
                    }
                  }(Pe, We) || function(er, Rr) {
                    if (er) {
                      if (typeof er == "string") return ea(er, Rr);
                      var kr = {}.toString.call(er).slice(8, -1);
                      return kr === "Object" && er.constructor && (kr = er.constructor.name), kr === "Map" || kr === "Set" ? Array.from(er) : kr === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(kr) ? ea(er, Rr) : void 0;
                    }
                  }(Pe, We) || function() {
                    throw new TypeError(`Invalid attempt to destructure non-iterable instance.
In order to be iterable, non-array objects must have a [Symbol.iterator]() method.`);
                  }();
                }(A.split(":"), 2), st = G[0], Gt = G[1];
                A = new je(st, Gt);
              }
              if (!(A instanceof je)) throw new TypeError("expected Asset in 'opts.asset', got ".concat(A));
              return this.invokeHostFunction({ source: n.source, auth: n.auth, func: c.HostFunction.hostFunctionTypeCreateContract(new c.CreateContractArgs({ executable: c.ContractExecutable.contractExecutableStellarAsset(), contractIdPreimage: c.ContractIdPreimage.contractIdPreimageFromAsset(A.toXDRObject()) })) });
            }, ae.invokeContractFunction = function(n) {
              var A = new Qo(n.contract);
              if (A._type !== "contract") throw new TypeError("expected contract strkey instance, got ".concat(A));
              return this.invokeHostFunction({ source: n.source, auth: n.auth, func: c.HostFunction.hostFunctionTypeInvokeContract(new c.InvokeContractArgs({ contractAddress: A.toScAddress(), functionName: n.function, args: n.args })) });
            }, ae.createCustomContract = function(n) {
              var A, G = Si.from(n.salt || ue.random().xdrPublicKey().value());
              if (!n.wasmHash || n.wasmHash.length !== 32) throw new TypeError("expected hash(contract WASM) in 'opts.wasmHash', got ".concat(n.wasmHash));
              if (G.length !== 32) throw new TypeError("expected 32-byte salt in 'opts.salt', got ".concat(n.wasmHash));
              return this.invokeHostFunction({ source: n.source, auth: n.auth, func: c.HostFunction.hostFunctionTypeCreateContractV2(new c.CreateContractArgsV2({ executable: c.ContractExecutable.contractExecutableWasm(Si.from(n.wasmHash)), contractIdPreimage: c.ContractIdPreimage.contractIdPreimageFromAddress(new c.ContractIdPreimageFromAddress({ address: n.address.toScAddress(), salt: G })), constructorArgs: (A = n.constructorArgs) !== null && A !== void 0 ? A : [] })) });
            }, ae.uploadContractWasm = function(n) {
              return this.invokeHostFunction({ source: n.source, auth: n.auth, func: c.HostFunction.hostFunctionTypeUploadContractWasm(Si.from(n.wasm)) });
            };
            var Sn = b(8287).Buffer;
            function fn(n) {
              return fn = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(A) {
                return typeof A;
              } : function(A) {
                return A && typeof Symbol == "function" && A.constructor === Symbol && A !== Symbol.prototype ? "symbol" : typeof A;
              }, fn(n);
            }
            function Bn(n, A) {
              for (var G = 0; G < A.length; G++) {
                var st = A[G];
                st.enumerable = st.enumerable || false, st.configurable = true, "value" in st && (st.writable = true), Object.defineProperty(n, Do(st.key), st);
              }
            }
            function Do(n) {
              var A = function(G) {
                if (fn(G) != "object" || !G) return G;
                var st = G[Symbol.toPrimitive];
                if (st !== void 0) {
                  var Gt = st.call(G, "string");
                  if (fn(Gt) != "object") return Gt;
                  throw new TypeError("@@toPrimitive must return a primitive value.");
                }
                return String(G);
              }(n);
              return fn(A) == "symbol" ? A : A + "";
            }
            var go = "none", Fn = "id", No = "text", Fo = "hash", Vo = "return", bi = function() {
              function n(A) {
                var G = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : null;
                switch (function(st, Gt) {
                  if (!(st instanceof Gt)) throw new TypeError("Cannot call a class as a function");
                }(this, n), this._type = A, this._value = G, this._type) {
                  case go:
                    break;
                  case Fn:
                    n._validateIdValue(G);
                    break;
                  case No:
                    n._validateTextValue(G);
                    break;
                  case Fo:
                  case Vo:
                    n._validateHashValue(G), typeof G == "string" && (this._value = Sn.from(G, "hex"));
                    break;
                  default:
                    throw new Error("Invalid memo type");
                }
              }
              return function(A, G, st) {
                return G && Bn(A.prototype, G), st && Bn(A, st), Object.defineProperty(A, "prototype", { writable: false }), A;
              }(n, [{ key: "type", get: function() {
                return this._type;
              }, set: function(A) {
                throw new Error("Memo is immutable");
              } }, { key: "value", get: function() {
                switch (this._type) {
                  case go:
                    return null;
                  case Fn:
                  case No:
                    return this._value;
                  case Fo:
                  case Vo:
                    return Sn.from(this._value);
                  default:
                    throw new Error("Invalid memo type");
                }
              }, set: function(A) {
                throw new Error("Memo is immutable");
              } }, { key: "toXDRObject", value: function() {
                switch (this._type) {
                  case go:
                    return c.Memo.memoNone();
                  case Fn:
                    return c.Memo.memoId(h.UnsignedHyper.fromString(this._value));
                  case No:
                    return c.Memo.memoText(this._value);
                  case Fo:
                    return c.Memo.memoHash(this._value);
                  case Vo:
                    return c.Memo.memoReturn(this._value);
                  default:
                    return null;
                }
              } }], [{ key: "_validateIdValue", value: function(A) {
                var G, st = new Error("Expects a int64 as a string. Got ".concat(A));
                if (typeof A != "string") throw st;
                try {
                  G = new Ft(A);
                } catch {
                  throw st;
                }
                if (!G.isFinite() || G.isNaN()) throw st;
              } }, { key: "_validateTextValue", value: function(A) {
                if (!c.Memo.armTypeForArm("text").isValid(A)) throw new Error("Expects string, array or buffer, max 28 bytes");
              } }, { key: "_validateHashValue", value: function(A) {
                var G, st = new Error("Expects a 32 byte hash value or hex encoded string. Got ".concat(A));
                if (A == null) throw st;
                if (typeof A == "string") {
                  if (!/^[0-9A-Fa-f]{64}$/g.test(A)) throw st;
                  G = Sn.from(A, "hex");
                } else {
                  if (!Sn.isBuffer(A)) throw st;
                  G = Sn.from(A);
                }
                if (!G.length || G.length !== 32) throw st;
              } }, { key: "none", value: function() {
                return new n(go);
              } }, { key: "text", value: function(A) {
                return new n(No, A);
              } }, { key: "id", value: function(A) {
                return new n(Fn, A);
              } }, { key: "hash", value: function(A) {
                return new n(Fo, A);
              } }, { key: "return", value: function(A) {
                return new n(Vo, A);
              } }, { key: "fromXDRObject", value: function(A) {
                switch (A.arm()) {
                  case "id":
                    return n.id(A.value().toString());
                  case "text":
                    return n.text(A.value());
                  case "hash":
                    return n.hash(A.value());
                  case "retHash":
                    return n.return(A.value());
                }
                if (A.value() === void 0) return n.none();
                throw new Error("Unknown type");
              } }]);
            }(), gi = b(8287).Buffer;
            function ci(n) {
              return ci = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(A) {
                return typeof A;
              } : function(A) {
                return A && typeof Symbol == "function" && A.constructor === Symbol && A !== Symbol.prototype ? "symbol" : typeof A;
              }, ci(n);
            }
            function me(n, A) {
              for (var G = 0; G < A.length; G++) {
                var st = A[G];
                st.enumerable = st.enumerable || false, st.configurable = true, "value" in st && (st.writable = true), Object.defineProperty(n, Ke(st.key), st);
              }
            }
            function Ke(n) {
              var A = function(G) {
                if (ci(G) != "object" || !G) return G;
                var st = G[Symbol.toPrimitive];
                if (st !== void 0) {
                  var Gt = st.call(G, "string");
                  if (ci(Gt) != "object") return Gt;
                  throw new TypeError("@@toPrimitive must return a primitive value.");
                }
                return String(G);
              }(n);
              return ci(A) == "symbol" ? A : A + "";
            }
            function br() {
              try {
                var n = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
                }));
              } catch {
              }
              return (br = function() {
                return !!n;
              })();
            }
            function yr(n) {
              return yr = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function(A) {
                return A.__proto__ || Object.getPrototypeOf(A);
              }, yr(n);
            }
            function xr(n, A) {
              return xr = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function(G, st) {
                return G.__proto__ = st, G;
              }, xr(n, A);
            }
            var tn = function(n) {
              function A(G, st) {
                var Gt;
                if (function(mn, Pn) {
                  if (!(mn instanceof Pn)) throw new TypeError("Cannot call a class as a function");
                }(this, A), typeof G == "string") {
                  var Pe = gi.from(G, "base64");
                  G = c.TransactionEnvelope.fromXDR(Pe);
                }
                var We = G.switch();
                if (We !== c.EnvelopeType.envelopeTypeTxV0() && We !== c.EnvelopeType.envelopeTypeTx()) throw new Error("Invalid TransactionEnvelope: expected an envelopeTypeTxV0 or envelopeTypeTx but received an ".concat(We.name, "."));
                var er = G.value(), Rr = er.tx(), kr = Rr.fee().toString();
                (Gt = function(mn, Pn, kn) {
                  return Pn = yr(Pn), function(so, Mn) {
                    if (Mn && (ci(Mn) == "object" || typeof Mn == "function")) return Mn;
                    if (Mn !== void 0) throw new TypeError("Derived constructors may only return object or undefined");
                    return function($n) {
                      if ($n === void 0) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
                      return $n;
                    }(so);
                  }(mn, br() ? Reflect.construct(Pn, kn || [], yr(mn).constructor) : Pn.apply(mn, kn));
                }(this, A, [Rr, (er.signatures() || []).slice(), kr, st]))._envelopeType = We, Gt._memo = Rr.memo(), Gt._sequence = Rr.seqNum().toString(), Gt._envelopeType === c.EnvelopeType.envelopeTypeTxV0() ? Gt._source = gr.encodeEd25519PublicKey(Gt.tx.sourceAccountEd25519()) : Gt._source = Yr(Gt.tx.sourceAccount());
                var vr = null, ur = null;
                switch (Gt._envelopeType) {
                  case c.EnvelopeType.envelopeTypeTxV0():
                    ur = Rr.timeBounds();
                    break;
                  case c.EnvelopeType.envelopeTypeTx():
                    switch (Rr.cond().switch()) {
                      case c.PreconditionType.precondTime():
                        ur = Rr.cond().timeBounds();
                        break;
                      case c.PreconditionType.precondV2():
                        ur = (vr = Rr.cond().v2()).timeBounds();
                    }
                }
                if (ur && (Gt._timeBounds = { minTime: ur.minTime().toString(), maxTime: ur.maxTime().toString() }), vr) {
                  var Er = vr.ledgerBounds();
                  Er && (Gt._ledgerBounds = { minLedger: Er.minLedger(), maxLedger: Er.maxLedger() });
                  var un = vr.minSeqNum();
                  un && (Gt._minAccountSequence = un.toString()), Gt._minAccountSequenceAge = vr.minSeqAge(), Gt._minAccountSequenceLedgerGap = vr.minSeqLedgerGap(), Gt._extraSigners = vr.extraSigners();
                }
                var cn = Rr.operations() || [];
                return Gt._operations = cn.map(function(mn) {
                  return ae.fromXDRObject(mn);
                }), Gt;
              }
              return function(G, st) {
                if (typeof st != "function" && st !== null) throw new TypeError("Super expression must either be null or a function");
                G.prototype = Object.create(st && st.prototype, { constructor: { value: G, writable: true, configurable: true } }), Object.defineProperty(G, "prototype", { writable: false }), st && xr(G, st);
              }(A, n), function(G, st) {
                return st && me(G.prototype, st), Object.defineProperty(G, "prototype", { writable: false }), G;
              }(A, [{ key: "timeBounds", get: function() {
                return this._timeBounds;
              }, set: function(G) {
                throw new Error("Transaction is immutable");
              } }, { key: "ledgerBounds", get: function() {
                return this._ledgerBounds;
              }, set: function(G) {
                throw new Error("Transaction is immutable");
              } }, { key: "minAccountSequence", get: function() {
                return this._minAccountSequence;
              }, set: function(G) {
                throw new Error("Transaction is immutable");
              } }, { key: "minAccountSequenceAge", get: function() {
                return this._minAccountSequenceAge;
              }, set: function(G) {
                throw new Error("Transaction is immutable");
              } }, { key: "minAccountSequenceLedgerGap", get: function() {
                return this._minAccountSequenceLedgerGap;
              }, set: function(G) {
                throw new Error("Transaction is immutable");
              } }, { key: "extraSigners", get: function() {
                return this._extraSigners;
              }, set: function(G) {
                throw new Error("Transaction is immutable");
              } }, { key: "sequence", get: function() {
                return this._sequence;
              }, set: function(G) {
                throw new Error("Transaction is immutable");
              } }, { key: "source", get: function() {
                return this._source;
              }, set: function(G) {
                throw new Error("Transaction is immutable");
              } }, { key: "operations", get: function() {
                return this._operations;
              }, set: function(G) {
                throw new Error("Transaction is immutable");
              } }, { key: "memo", get: function() {
                return bi.fromXDRObject(this._memo);
              }, set: function(G) {
                throw new Error("Transaction is immutable");
              } }, { key: "signatureBase", value: function() {
                var G = this.tx;
                this._envelopeType === c.EnvelopeType.envelopeTypeTxV0() && (G = c.Transaction.fromXDR(gi.concat([c.PublicKeyType.publicKeyTypeEd25519().toXDR(), G.toXDR()])));
                var st = new c.TransactionSignaturePayloadTaggedTransaction.envelopeTypeTx(G);
                return new c.TransactionSignaturePayload({ networkId: c.Hash.fromXDR(P(this.networkPassphrase)), taggedTransaction: st }).toXDR();
              } }, { key: "toEnvelope", value: function() {
                var G, st = this.tx.toXDR(), Gt = this.signatures.slice();
                switch (this._envelopeType) {
                  case c.EnvelopeType.envelopeTypeTxV0():
                    G = new c.TransactionEnvelope.envelopeTypeTxV0(new c.TransactionV0Envelope({ tx: c.TransactionV0.fromXDR(st), signatures: Gt }));
                    break;
                  case c.EnvelopeType.envelopeTypeTx():
                    G = new c.TransactionEnvelope.envelopeTypeTx(new c.TransactionV1Envelope({ tx: c.Transaction.fromXDR(st), signatures: Gt }));
                    break;
                  default:
                    throw new Error("Invalid TransactionEnvelope: expected an envelopeTypeTxV0 or envelopeTypeTx but received an ".concat(this._envelopeType.name, "."));
                }
                return G;
              } }, { key: "getClaimableBalanceId", value: function(G) {
                if (!Number.isInteger(G) || G < 0 || G >= this.operations.length) throw new RangeError("invalid operation index");
                var st = this.operations[G];
                try {
                  st = ae.createClaimableBalance(st);
                } catch (We) {
                  throw new TypeError("expected createClaimableBalance, got ".concat(st.type, ": ").concat(We));
                }
                var Gt = gr.decodeEd25519PublicKey(mo(this.source)), Pe = P(c.HashIdPreimage.envelopeTypeOpId(new c.HashIdPreimageOperationId({ sourceAccount: c.AccountId.publicKeyTypeEd25519(Gt), seqNum: c.SequenceNumber.fromString(this.sequence), opNum: G })).toXDR("raw"));
                return c.ClaimableBalanceId.claimableBalanceIdTypeV0(Pe).toXDR("hex");
              } }]);
            }(sn), xn = b(8287).Buffer;
            function Or(n) {
              return Or = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(A) {
                return typeof A;
              } : function(A) {
                return A && typeof Symbol == "function" && A.constructor === Symbol && A !== Symbol.prototype ? "symbol" : typeof A;
              }, Or(n);
            }
            function vn(n, A) {
              for (var G = 0; G < A.length; G++) {
                var st = A[G];
                st.enumerable = st.enumerable || false, st.configurable = true, "value" in st && (st.writable = true), Object.defineProperty(n, Kn(st.key), st);
              }
            }
            function Kn(n) {
              var A = function(G) {
                if (Or(G) != "object" || !G) return G;
                var st = G[Symbol.toPrimitive];
                if (st !== void 0) {
                  var Gt = st.call(G, "string");
                  if (Or(Gt) != "object") return Gt;
                  throw new TypeError("@@toPrimitive must return a primitive value.");
                }
                return String(G);
              }(n);
              return Or(A) == "symbol" ? A : A + "";
            }
            function Qn() {
              try {
                var n = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
                }));
              } catch {
              }
              return (Qn = function() {
                return !!n;
              })();
            }
            function Tn(n) {
              return Tn = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function(A) {
                return A.__proto__ || Object.getPrototypeOf(A);
              }, Tn(n);
            }
            function In(n, A) {
              return In = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function(G, st) {
                return G.__proto__ = st, G;
              }, In(n, A);
            }
            var ce = function(n) {
              function A(G, st) {
                var Gt;
                if (function(ur, Er) {
                  if (!(ur instanceof Er)) throw new TypeError("Cannot call a class as a function");
                }(this, A), typeof G == "string") {
                  var Pe = xn.from(G, "base64");
                  G = c.TransactionEnvelope.fromXDR(Pe);
                }
                var We = G.switch();
                if (We !== c.EnvelopeType.envelopeTypeTxFeeBump()) throw new Error("Invalid TransactionEnvelope: expected an envelopeTypeTxFeeBump but received an ".concat(We.name, "."));
                var er = G.value(), Rr = er.tx(), kr = Rr.fee().toString();
                Gt = function(ur, Er, un) {
                  return Er = Tn(Er), function(cn, mn) {
                    if (mn && (Or(mn) == "object" || typeof mn == "function")) return mn;
                    if (mn !== void 0) throw new TypeError("Derived constructors may only return object or undefined");
                    return function(Pn) {
                      if (Pn === void 0) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
                      return Pn;
                    }(cn);
                  }(ur, Qn() ? Reflect.construct(Er, un || [], Tn(ur).constructor) : Er.apply(ur, un));
                }(this, A, [Rr, (er.signatures() || []).slice(), kr, st]);
                var vr = c.TransactionEnvelope.envelopeTypeTx(Rr.innerTx().v1());
                return Gt._feeSource = Yr(Gt.tx.feeSource()), Gt._innerTransaction = new tn(vr, st), Gt;
              }
              return function(G, st) {
                if (typeof st != "function" && st !== null) throw new TypeError("Super expression must either be null or a function");
                G.prototype = Object.create(st && st.prototype, { constructor: { value: G, writable: true, configurable: true } }), Object.defineProperty(G, "prototype", { writable: false }), st && In(G, st);
              }(A, n), function(G, st) {
                return st && vn(G.prototype, st), Object.defineProperty(G, "prototype", { writable: false }), G;
              }(A, [{ key: "innerTransaction", get: function() {
                return this._innerTransaction;
              } }, { key: "operations", get: function() {
                return this._innerTransaction.operations;
              } }, { key: "feeSource", get: function() {
                return this._feeSource;
              } }, { key: "signatureBase", value: function() {
                var G = new c.TransactionSignaturePayloadTaggedTransaction.envelopeTypeTxFeeBump(this.tx);
                return new c.TransactionSignaturePayload({ networkId: c.Hash.fromXDR(P(this.networkPassphrase)), taggedTransaction: G }).toXDR();
              } }, { key: "toEnvelope", value: function() {
                var G = new c.FeeBumpTransactionEnvelope({ tx: c.FeeBumpTransaction.fromXDR(this.tx.toXDR()), signatures: this.signatures.slice() });
                return new c.TransactionEnvelope.envelopeTypeTxFeeBump(G);
              } }]);
            }(sn);
            function be(n) {
              return be = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(A) {
                return typeof A;
              } : function(A) {
                return A && typeof Symbol == "function" && A.constructor === Symbol && A !== Symbol.prototype ? "symbol" : typeof A;
              }, be(n);
            }
            function Ye(n, A) {
              for (var G = 0; G < A.length; G++) {
                var st = A[G];
                st.enumerable = st.enumerable || false, st.configurable = true, "value" in st && (st.writable = true), Object.defineProperty(n, _r(st.key), st);
              }
            }
            function _r(n) {
              var A = function(G) {
                if (be(G) != "object" || !G) return G;
                var st = G[Symbol.toPrimitive];
                if (st !== void 0) {
                  var Gt = st.call(G, "string");
                  if (be(Gt) != "object") return Gt;
                  throw new TypeError("@@toPrimitive must return a primitive value.");
                }
                return String(G);
              }(n);
              return be(A) == "symbol" ? A : A + "";
            }
            var or = function(n, A) {
              return A && Ye(n.prototype, A), Object.defineProperty(n, "prototype", { writable: false }), n;
            }(function n(A, G) {
              if (function(st, Gt) {
                if (!(st instanceof Gt)) throw new TypeError("Cannot call a class as a function");
              }(this, n), gr.isValidMed25519PublicKey(A)) throw new Error("accountId is an M-address; use MuxedAccount instead");
              if (!gr.isValidEd25519PublicKey(A)) throw new Error("accountId is invalid");
              if (typeof G != "string") throw new Error("sequence must be of type string");
              this._accountId = A, this.sequence = new Ft(G);
            }, [{ key: "accountId", value: function() {
              return this._accountId;
            } }, { key: "sequenceNumber", value: function() {
              return this.sequence.toString();
            } }, { key: "incrementSequenceNumber", value: function() {
              this.sequence = this.sequence.plus(1);
            } }]);
            function dr(n) {
              return dr = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(A) {
                return typeof A;
              } : function(A) {
                return A && typeof Symbol == "function" && A.constructor === Symbol && A !== Symbol.prototype ? "symbol" : typeof A;
              }, dr(n);
            }
            function Cr(n, A) {
              for (var G = 0; G < A.length; G++) {
                var st = A[G];
                st.enumerable = st.enumerable || false, st.configurable = true, "value" in st && (st.writable = true), Object.defineProperty(n, hr(st.key), st);
              }
            }
            function hr(n) {
              var A = function(G) {
                if (dr(G) != "object" || !G) return G;
                var st = G[Symbol.toPrimitive];
                if (st !== void 0) {
                  var Gt = st.call(G, "string");
                  if (dr(Gt) != "object") return Gt;
                  throw new TypeError("@@toPrimitive must return a primitive value.");
                }
                return String(G);
              }(n);
              return dr(A) == "symbol" ? A : A + "";
            }
            var Gr = function() {
              function n(A, G) {
                (function(Gt, Pe) {
                  if (!(Gt instanceof Pe)) throw new TypeError("Cannot call a class as a function");
                })(this, n);
                var st = A.accountId();
                if (!gr.isValidEd25519PublicKey(st)) throw new Error("accountId is invalid");
                this.account = A, this._muxedXdr = ao(st, G), this._mAddress = Yr(this._muxedXdr), this._id = G;
              }
              return function(A, G, st) {
                return G && Cr(A.prototype, G), st && Cr(A, st), Object.defineProperty(A, "prototype", { writable: false }), A;
              }(n, [{ key: "baseAccount", value: function() {
                return this.account;
              } }, { key: "accountId", value: function() {
                return this._mAddress;
              } }, { key: "id", value: function() {
                return this._id;
              } }, { key: "setId", value: function(A) {
                if (typeof A != "string") throw new Error("id should be a string representing a number (uint64)");
                return this._muxedXdr.med25519().id(c.Uint64.fromString(A)), this._mAddress = Yr(this._muxedXdr), this._id = A, this;
              } }, { key: "sequenceNumber", value: function() {
                return this.account.sequenceNumber();
              } }, { key: "incrementSequenceNumber", value: function() {
                return this.account.incrementSequenceNumber();
              } }, { key: "toXDRObject", value: function() {
                return this._muxedXdr;
              } }, { key: "equals", value: function(A) {
                return this.accountId() === A.accountId();
              } }], [{ key: "fromAddress", value: function(A, G) {
                var st = ln(A), Gt = mo(A), Pe = st.med25519().id().toString();
                return new n(new or(Gt, G), Pe);
              } }]);
            }();
            function Wr(n) {
              return Wr = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(A) {
                return typeof A;
              } : function(A) {
                return A && typeof Symbol == "function" && A.constructor === Symbol && A !== Symbol.prototype ? "symbol" : typeof A;
              }, Wr(n);
            }
            function zr(n, A) {
              for (var G = 0; G < A.length; G++) {
                var st = A[G];
                st.enumerable = st.enumerable || false, st.configurable = true, "value" in st && (st.writable = true), Object.defineProperty(n, Un(st.key), st);
              }
            }
            function Un(n) {
              var A = function(G) {
                if (Wr(G) != "object" || !G) return G;
                var st = G[Symbol.toPrimitive];
                if (st !== void 0) {
                  var Gt = st.call(G, "string");
                  if (Wr(Gt) != "object") return Gt;
                  throw new TypeError("@@toPrimitive must return a primitive value.");
                }
                return String(G);
              }(n);
              return Wr(A) == "symbol" ? A : A + "";
            }
            var lo = function(n, A, G) {
              return A && zr(n.prototype, A), G && zr(n, G), Object.defineProperty(n, "prototype", { writable: false }), n;
            }(function n(A) {
              var G;
              (function(st, Gt) {
                if (!(st instanceof Gt)) throw new TypeError("Cannot call a class as a function");
              })(this, n), function(st, Gt, Pe) {
                (Gt = Un(Gt)) in st ? Object.defineProperty(st, Gt, { value: Pe, enumerable: true, configurable: true, writable: true }) : st[Gt] = Pe;
              }(this, "_data", void 0), G = A ? typeof A == "string" || ArrayBuffer.isView(A) ? n.fromXDR(A) : n.fromXDR(A.toXDR()) : new c.SorobanTransactionData({ resources: new c.SorobanResources({ footprint: new c.LedgerFootprint({ readOnly: [], readWrite: [] }), instructions: 0, diskReadBytes: 0, writeBytes: 0 }), ext: new c.SorobanTransactionDataExt(0), resourceFee: new c.Int64(0) }), this._data = G;
            }, [{ key: "setResourceFee", value: function(n) {
              return this._data.resourceFee(new c.Int64(n)), this;
            } }, { key: "setResources", value: function(n, A, G) {
              return this._data.resources().instructions(n), this._data.resources().diskReadBytes(A), this._data.resources().writeBytes(G), this;
            } }, { key: "appendFootprint", value: function(n, A) {
              return this.setFootprint(this.getReadOnly().concat(n), this.getReadWrite().concat(A));
            } }, { key: "setFootprint", value: function(n, A) {
              return n !== null && this.setReadOnly(n), A !== null && this.setReadWrite(A), this;
            } }, { key: "setReadOnly", value: function(n) {
              return this._data.resources().footprint().readOnly(n ?? []), this;
            } }, { key: "setReadWrite", value: function(n) {
              return this._data.resources().footprint().readWrite(n ?? []), this;
            } }, { key: "build", value: function() {
              return c.SorobanTransactionData.fromXDR(this._data.toXDR());
            } }, { key: "getReadOnly", value: function() {
              return this.getFootprint().readOnly();
            } }, { key: "getReadWrite", value: function() {
              return this.getFootprint().readWrite();
            } }, { key: "getFootprint", value: function() {
              return this._data.resources().footprint();
            } }], [{ key: "fromXDR", value: function(n) {
              return c.SorobanTransactionData.fromXDR(n, typeof n == "string" ? "base64" : "raw");
            } }]);
            function po(n) {
              return po = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(A) {
                return typeof A;
              } : function(A) {
                return A && typeof Symbol == "function" && A.constructor === Symbol && A !== Symbol.prototype ? "symbol" : typeof A;
              }, po(n);
            }
            function zo(n, A) {
              for (var G = 0; G < A.length; G++) {
                var st = A[G];
                st.enumerable = st.enumerable || false, st.configurable = true, "value" in st && (st.writable = true), Object.defineProperty(n, di(st.key), st);
              }
            }
            function di(n) {
              var A = function(G) {
                if (po(G) != "object" || !G) return G;
                var st = G[Symbol.toPrimitive];
                if (st !== void 0) {
                  var Gt = st.call(G, "string");
                  if (po(Gt) != "object") return Gt;
                  throw new TypeError("@@toPrimitive must return a primitive value.");
                }
                return String(G);
              }(n);
              return po(A) == "symbol" ? A : A + "";
            }
            var vi = function(n, A, G) {
              return G && zo(n, G), Object.defineProperty(n, "prototype", { writable: false }), n;
            }(function n() {
              (function(A, G) {
                if (!(A instanceof G)) throw new TypeError("Cannot call a class as a function");
              })(this, n);
            }, 0, [{ key: "decodeAddress", value: function(n) {
              var A = { ed25519PublicKey: c.SignerKey.signerKeyTypeEd25519, preAuthTx: c.SignerKey.signerKeyTypePreAuthTx, sha256Hash: c.SignerKey.signerKeyTypeHashX, signedPayload: c.SignerKey.signerKeyTypeEd25519SignedPayload }, G = gr.getVersionByteForPrefix(n), st = A[G];
              if (!st) throw new Error("invalid signer key type (".concat(G, ")"));
              var Gt = pn(G, n);
              return st(G === "signedPayload" ? new c.SignerKeyEd25519SignedPayload({ ed25519: Gt.slice(0, 32), payload: Gt.slice(36) }) : Gt);
            } }, { key: "encodeSignerKey", value: function(n) {
              var A, G;
              switch (n.switch()) {
                case c.SignerKeyType.signerKeyTypeEd25519():
                  A = "ed25519PublicKey", G = n.value();
                  break;
                case c.SignerKeyType.signerKeyTypePreAuthTx():
                  A = "preAuthTx", G = n.value();
                  break;
                case c.SignerKeyType.signerKeyTypeHashX():
                  A = "sha256Hash", G = n.value();
                  break;
                case c.SignerKeyType.signerKeyTypeEd25519SignedPayload():
                  A = "signedPayload", G = n.ed25519SignedPayload().toXDR("raw");
                  break;
                default:
                  throw new Error("invalid SignerKey (type: ".concat(n.switch(), ")"));
              }
              return yn(A, G);
            } }]);
            function ko(n) {
              return ko = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(A) {
                return typeof A;
              } : function(A) {
                return A && typeof Symbol == "function" && A.constructor === Symbol && A !== Symbol.prototype ? "symbol" : typeof A;
              }, ko(n);
            }
            function Jo(n) {
              return function(A) {
                if (Array.isArray(A)) return xi(A);
              }(n) || function(A) {
                if (typeof Symbol < "u" && A[Symbol.iterator] != null || A["@@iterator"] != null) return Array.from(A);
              }(n) || function(A, G) {
                if (A) {
                  if (typeof A == "string") return xi(A, G);
                  var st = {}.toString.call(A).slice(8, -1);
                  return st === "Object" && A.constructor && (st = A.constructor.name), st === "Map" || st === "Set" ? Array.from(A) : st === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(st) ? xi(A, G) : void 0;
                }
              }(n) || function() {
                throw new TypeError(`Invalid attempt to spread non-iterable instance.
In order to be iterable, non-array objects must have a [Symbol.iterator]() method.`);
              }();
            }
            function xi(n, A) {
              (A == null || A > n.length) && (A = n.length);
              for (var G = 0, st = Array(A); G < A; G++) st[G] = n[G];
              return st;
            }
            function va(n, A) {
              var G = Object.keys(n);
              if (Object.getOwnPropertySymbols) {
                var st = Object.getOwnPropertySymbols(n);
                A && (st = st.filter(function(Gt) {
                  return Object.getOwnPropertyDescriptor(n, Gt).enumerable;
                })), G.push.apply(G, st);
              }
              return G;
            }
            function ra(n) {
              for (var A = 1; A < arguments.length; A++) {
                var G = arguments[A] != null ? arguments[A] : {};
                A % 2 ? va(Object(G), true).forEach(function(st) {
                  hs(n, st, G[st]);
                }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(n, Object.getOwnPropertyDescriptors(G)) : va(Object(G)).forEach(function(st) {
                  Object.defineProperty(n, st, Object.getOwnPropertyDescriptor(G, st));
                });
              }
              return n;
            }
            function hs(n, A, G) {
              return (A = ba(A)) in n ? Object.defineProperty(n, A, { value: G, enumerable: true, configurable: true, writable: true }) : n[A] = G, n;
            }
            function Xi(n, A) {
              for (var G = 0; G < A.length; G++) {
                var st = A[G];
                st.enumerable = st.enumerable || false, st.configurable = true, "value" in st && (st.writable = true), Object.defineProperty(n, ba(st.key), st);
              }
            }
            function ba(n) {
              var A = function(G) {
                if (ko(G) != "object" || !G) return G;
                var st = G[Symbol.toPrimitive];
                if (st !== void 0) {
                  var Gt = st.call(G, "string");
                  if (ko(Gt) != "object") return Gt;
                  throw new TypeError("@@toPrimitive must return a primitive value.");
                }
                return String(G);
              }(n);
              return ko(A) == "symbol" ? A : A + "";
            }
            var _i = "100", Oi = 0, mi = function() {
              function n(A) {
                var G = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};
                if (function(st, Gt) {
                  if (!(st instanceof Gt)) throw new TypeError("Cannot call a class as a function");
                }(this, n), !A) throw new Error("must specify source account for the transaction");
                if (G.fee === void 0) throw new Error("must specify fee for the transaction (in stroops)");
                this.source = A, this.operations = [], this.baseFee = G.fee, this.timebounds = G.timebounds ? ra({}, G.timebounds) : null, this.ledgerbounds = G.ledgerbounds ? ra({}, G.ledgerbounds) : null, this.minAccountSequence = G.minAccountSequence || null, this.minAccountSequenceAge = G.minAccountSequenceAge || null, this.minAccountSequenceLedgerGap = G.minAccountSequenceLedgerGap || null, this.extraSigners = G.extraSigners ? Jo(G.extraSigners) : null, this.memo = G.memo || bi.none(), this.networkPassphrase = G.networkPassphrase || null, this.sorobanData = G.sorobanData ? new lo(G.sorobanData).build() : null;
              }
              return function(A, G, st) {
                return G && Xi(A.prototype, G), st && Xi(A, st), Object.defineProperty(A, "prototype", { writable: false }), A;
              }(n, [{ key: "addOperation", value: function(A) {
                return this.operations.push(A), this;
              } }, { key: "addOperationAt", value: function(A, G) {
                return this.operations.splice(G, 0, A), this;
              } }, { key: "clearOperations", value: function() {
                return this.operations = [], this;
              } }, { key: "clearOperationAt", value: function(A) {
                return this.operations.splice(A, 1), this;
              } }, { key: "addMemo", value: function(A) {
                return this.memo = A, this;
              } }, { key: "setTimeout", value: function(A) {
                if (this.timebounds !== null && this.timebounds.maxTime > 0) throw new Error("TimeBounds.max_time has been already set - setting timeout would overwrite it.");
                if (A < 0) throw new Error("timeout cannot be negative");
                if (A > 0) {
                  var G = Math.floor(Date.now() / 1e3) + A;
                  this.timebounds === null ? this.timebounds = { minTime: 0, maxTime: G } : this.timebounds = { minTime: this.timebounds.minTime, maxTime: G };
                } else this.timebounds = { minTime: 0, maxTime: 0 };
                return this;
              } }, { key: "setTimebounds", value: function(A, G) {
                if (typeof A == "number" && (A = new Date(1e3 * A)), typeof G == "number" && (G = new Date(1e3 * G)), this.timebounds !== null) throw new Error("TimeBounds has been already set - setting timebounds would overwrite it.");
                var st = Math.floor(A.valueOf() / 1e3), Gt = Math.floor(G.valueOf() / 1e3);
                if (st < 0) throw new Error("min_time cannot be negative");
                if (Gt < 0) throw new Error("max_time cannot be negative");
                if (Gt > 0 && st > Gt) throw new Error("min_time cannot be greater than max_time");
                return this.timebounds = { minTime: st, maxTime: Gt }, this;
              } }, { key: "setLedgerbounds", value: function(A, G) {
                if (this.ledgerbounds !== null) throw new Error("LedgerBounds has been already set - setting ledgerbounds would overwrite it.");
                if (A < 0) throw new Error("min_ledger cannot be negative");
                if (G < 0) throw new Error("max_ledger cannot be negative");
                if (G > 0 && A > G) throw new Error("min_ledger cannot be greater than max_ledger");
                return this.ledgerbounds = { minLedger: A, maxLedger: G }, this;
              } }, { key: "setMinAccountSequence", value: function(A) {
                if (this.minAccountSequence !== null) throw new Error("min_account_sequence has been already set - setting min_account_sequence would overwrite it.");
                return this.minAccountSequence = A, this;
              } }, { key: "setMinAccountSequenceAge", value: function(A) {
                if (typeof A != "number") throw new Error("min_account_sequence_age must be a number");
                if (this.minAccountSequenceAge !== null) throw new Error("min_account_sequence_age has been already set - setting min_account_sequence_age would overwrite it.");
                if (A < 0) throw new Error("min_account_sequence_age cannot be negative");
                return this.minAccountSequenceAge = A, this;
              } }, { key: "setMinAccountSequenceLedgerGap", value: function(A) {
                if (this.minAccountSequenceLedgerGap !== null) throw new Error("min_account_sequence_ledger_gap has been already set - setting min_account_sequence_ledger_gap would overwrite it.");
                if (A < 0) throw new Error("min_account_sequence_ledger_gap cannot be negative");
                return this.minAccountSequenceLedgerGap = A, this;
              } }, { key: "setExtraSigners", value: function(A) {
                if (!Array.isArray(A)) throw new Error("extra_signers must be an array of strings.");
                if (this.extraSigners !== null) throw new Error("extra_signers has been already set - setting extra_signers would overwrite it.");
                if (A.length > 2) throw new Error("extra_signers cannot be longer than 2 elements.");
                return this.extraSigners = Jo(A), this;
              } }, { key: "setNetworkPassphrase", value: function(A) {
                return this.networkPassphrase = A, this;
              } }, { key: "setSorobanData", value: function(A) {
                return this.sorobanData = new lo(A).build(), this;
              } }, { key: "build", value: function() {
                var A = new Ft(this.source.sequenceNumber()).plus(1), G = { fee: new Ft(this.baseFee).times(this.operations.length).toNumber(), seqNum: c.SequenceNumber.fromString(A.toString()), memo: this.memo ? this.memo.toXDRObject() : null };
                if (this.timebounds === null || this.timebounds.minTime === void 0 || this.timebounds.maxTime === void 0) throw new Error("TimeBounds has to be set or you must call setTimeout(TimeoutInfinite).");
                eu(this.timebounds.minTime) && (this.timebounds.minTime = this.timebounds.minTime.getTime() / 1e3), eu(this.timebounds.maxTime) && (this.timebounds.maxTime = this.timebounds.maxTime.getTime() / 1e3), this.timebounds.minTime = h.UnsignedHyper.fromString(this.timebounds.minTime.toString()), this.timebounds.maxTime = h.UnsignedHyper.fromString(this.timebounds.maxTime.toString());
                var st = new c.TimeBounds(this.timebounds);
                if (this.hasV2Preconditions()) {
                  var Gt = null;
                  this.ledgerbounds !== null && (Gt = new c.LedgerBounds(this.ledgerbounds));
                  var Pe = this.minAccountSequence || "0";
                  Pe = c.SequenceNumber.fromString(Pe);
                  var We = h.UnsignedHyper.fromString(this.minAccountSequenceAge !== null ? this.minAccountSequenceAge.toString() : "0"), er = this.minAccountSequenceLedgerGap || 0, Rr = this.extraSigners !== null ? this.extraSigners.map(vi.decodeAddress) : [];
                  G.cond = c.Preconditions.precondV2(new c.PreconditionsV2({ timeBounds: st, ledgerBounds: Gt, minSeqNum: Pe, minSeqAge: We, minSeqLedgerGap: er, extraSigners: Rr }));
                } else G.cond = c.Preconditions.precondTime(st);
                G.sourceAccount = ln(this.source.accountId()), this.sorobanData ? G.ext = new c.TransactionExt(1, this.sorobanData) : G.ext = new c.TransactionExt(0, c.Void);
                var kr = new c.Transaction(G);
                kr.operations(this.operations);
                var vr = new c.TransactionEnvelope.envelopeTypeTx(new c.TransactionV1Envelope({ tx: kr })), ur = new tn(vr, this.networkPassphrase);
                return this.source.incrementSequenceNumber(), ur;
              } }, { key: "hasV2Preconditions", value: function() {
                return this.ledgerbounds !== null || this.minAccountSequence !== null || this.minAccountSequenceAge !== null || this.minAccountSequenceLedgerGap !== null || this.extraSigners !== null && this.extraSigners.length > 0;
              } }], [{ key: "cloneFrom", value: function(A) {
                var G = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};
                if (!(A instanceof tn)) throw new TypeError("expected a 'Transaction', got: ".concat(A));
                var st, Gt = (BigInt(A.sequence) - 1n).toString();
                if (gr.isValidMed25519PublicKey(A.source)) st = Gr.fromAddress(A.source, Gt);
                else {
                  if (!gr.isValidEd25519PublicKey(A.source)) throw new TypeError("unsupported tx source account: ".concat(A.source));
                  st = new or(A.source, Gt);
                }
                var Pe = new n(st, ra({ fee: (parseInt(A.fee, 10) / A.operations.length || _i).toString(), memo: A.memo, networkPassphrase: A.networkPassphrase, timebounds: A.timeBounds, ledgerbounds: A.ledgerBounds, minAccountSequence: A.minAccountSequence, minAccountSequenceAge: A.minAccountSequenceAge, minAccountSequenceLedgerGap: A.minAccountSequenceLedgerGap, extraSigners: A.extraSigners }, G));
                return A._tx.operations().forEach(function(We) {
                  return Pe.addOperation(We);
                }), Pe;
              } }, { key: "buildFeeBumpTransaction", value: function(A, G, st, Gt) {
                var Pe = st.operations.length, We = new Ft(st.fee).div(Pe), er = new Ft(G);
                if (er.lt(We)) throw new Error("Invalid baseFee, it should be at least ".concat(We, " stroops."));
                var Rr = new Ft(_i);
                if (er.lt(Rr)) throw new Error("Invalid baseFee, it should be at least ".concat(Rr, " stroops."));
                var kr, vr = st.toEnvelope();
                if (vr.switch() === c.EnvelopeType.envelopeTypeTxV0()) {
                  var ur = vr.v0().tx(), Er = new c.Transaction({ sourceAccount: new c.MuxedAccount.keyTypeEd25519(ur.sourceAccountEd25519()), fee: ur.fee(), seqNum: ur.seqNum(), cond: c.Preconditions.precondTime(ur.timeBounds()), memo: ur.memo(), operations: ur.operations(), ext: new c.TransactionExt(0) });
                  vr = new c.TransactionEnvelope.envelopeTypeTx(new c.TransactionV1Envelope({ tx: Er, signatures: vr.v0().signatures() }));
                }
                kr = typeof A == "string" ? ln(A) : A.xdrMuxedAccount();
                var un = new c.FeeBumpTransaction({ feeSource: kr, fee: c.Int64.fromString(er.times(Pe + 1).toString()), innerTx: c.FeeBumpTransactionInnerTx.envelopeTypeTx(vr.v1()), ext: new c.FeeBumpTransactionExt(0) }), cn = new c.FeeBumpTransactionEnvelope({ tx: un, signatures: [] }), mn = new c.TransactionEnvelope.envelopeTypeTxFeeBump(cn);
                return new ce(mn, Gt);
              } }, { key: "fromXDR", value: function(A, G) {
                return typeof A == "string" && (A = c.TransactionEnvelope.fromXDR(A, "base64")), A.switch() === c.EnvelopeType.envelopeTypeTxFeeBump() ? new ce(A, G) : new tn(A, G);
              } }]);
            }();
            function eu(n) {
              return n instanceof Date && !isNaN(n);
            }
            var za = { PUBLIC: "Public Global Stellar Network ; September 2015", TESTNET: "Test SDF Network ; September 2015", FUTURENET: "Test SDF Future Network ; October 2022", SANDBOX: "Local Sandbox Stellar Network ; September 2022", STANDALONE: "Standalone Network ; February 2017" };
            function ks(n) {
              return ks = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(A) {
                return typeof A;
              } : function(A) {
                return A && typeof Symbol == "function" && A.constructor === Symbol && A !== Symbol.prototype ? "symbol" : typeof A;
              }, ks(n);
            }
            function Cc(n, A) {
              (A == null || A > n.length) && (A = n.length);
              for (var G = 0, st = Array(A); G < A; G++) st[G] = n[G];
              return st;
            }
            function Rc(n, A) {
              for (var G = 0; G < A.length; G++) {
                var st = A[G];
                st.enumerable = st.enumerable || false, st.configurable = true, "value" in st && (st.writable = true), Object.defineProperty(n, Os(st.key), st);
              }
            }
            function Os(n) {
              var A = function(G) {
                if (ks(G) != "object" || !G) return G;
                var st = G[Symbol.toPrimitive];
                if (st !== void 0) {
                  var Gt = st.call(G, "string");
                  if (ks(Gt) != "object") return Gt;
                  throw new TypeError("@@toPrimitive must return a primitive value.");
                }
                return String(G);
              }(n);
              return ks(A) == "symbol" ? A : A + "";
            }
            var Ic = function(n, A, G) {
              return G && Rc(n, G), Object.defineProperty(n, "prototype", { writable: false }), n;
            }(function n() {
              (function(A, G) {
                if (!(A instanceof G)) throw new TypeError("Cannot call a class as a function");
              })(this, n);
            }, 0, [{ key: "formatTokenAmount", value: function(n, A) {
              if (n.includes(".")) throw new TypeError("No decimals are allowed");
              var G = n;
              return A > 0 && (G = A > G.length ? ["0", G.toString().padStart(A, "0")].join(".") : [G.slice(0, -A), G.slice(-A)].join(".")), G.replace(/(\.\d*?)0+$/, "$1");
            } }, { key: "parseTokenAmount", value: function(n, A) {
              var G, st = function(We) {
                return function(er) {
                  if (Array.isArray(er)) return er;
                }(We) || function(er) {
                  if (typeof Symbol < "u" && er[Symbol.iterator] != null || er["@@iterator"] != null) return Array.from(er);
                }(We) || function(er, Rr) {
                  if (er) {
                    if (typeof er == "string") return Cc(er, Rr);
                    var kr = {}.toString.call(er).slice(8, -1);
                    return kr === "Object" && er.constructor && (kr = er.constructor.name), kr === "Map" || kr === "Set" ? Array.from(er) : kr === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(kr) ? Cc(er, Rr) : void 0;
                  }
                }(We) || function() {
                  throw new TypeError(`Invalid attempt to destructure non-iterable instance.
In order to be iterable, non-array objects must have a [Symbol.iterator]() method.`);
                }();
              }(n.split(".").slice()), Gt = st[0], Pe = st[1];
              if (st.slice(2).length) throw new Error("Invalid decimal value: ".concat(n));
              return BigInt(Gt + ((G = Pe == null ? void 0 : Pe.padEnd(A, "0")) !== null && G !== void 0 ? G : "0".repeat(A))).toString();
            } }]);
            function qa(n) {
              return qa = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(A) {
                return typeof A;
              } : function(A) {
                return A && typeof Symbol == "function" && A.constructor === Symbol && A !== Symbol.prototype ? "symbol" : typeof A;
              }, qa(n);
            }
            function Mc(n, A) {
              for (var G = 0; G < A.length; G++) {
                var st = A[G];
                st.enumerable = st.enumerable || false, st.configurable = true, "value" in st && (st.writable = true), Object.defineProperty(n, Fu(st.key), st);
              }
            }
            function Fu(n) {
              var A = function(G) {
                if (qa(G) != "object" || !G) return G;
                var st = G[Symbol.toPrimitive];
                if (st !== void 0) {
                  var Gt = st.call(G, "string");
                  if (qa(Gt) != "object") return Gt;
                  throw new TypeError("@@toPrimitive must return a primitive value.");
                }
                return String(G);
              }(n);
              return qa(A) == "symbol" ? A : A + "";
            }
            var Bc = function(n, A) {
              return A && Mc(n.prototype, A), Object.defineProperty(n, "prototype", { writable: false }), n;
            }(function n(A) {
              (function(G, st) {
                if (!(G instanceof st)) throw new TypeError("Cannot call a class as a function");
              })(this, n);
              try {
                this._id = gr.decodeContract(A);
              } catch {
                throw new Error("Invalid contract ID: ".concat(A));
              }
            }, [{ key: "contractId", value: function() {
              return gr.encodeContract(this._id);
            } }, { key: "toString", value: function() {
              return this.contractId();
            } }, { key: "address", value: function() {
              return Qo.contract(this._id);
            } }, { key: "call", value: function(n) {
              for (var A = arguments.length, G = new Array(A > 1 ? A - 1 : 0), st = 1; st < A; st++) G[st - 1] = arguments[st];
              return ae.invokeContractFunction({ contract: this.address().toString(), function: n, args: G });
            } }, { key: "getFootprint", value: function() {
              return c.LedgerKey.contractData(new c.LedgerKeyContractData({ contract: this.address().toScAddress(), key: c.ScVal.scvLedgerKeyContractInstance(), durability: c.ContractDataDurability.persistent() }));
            } }]);
            function Ha(n) {
              return Ha = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(A) {
                return typeof A;
              } : function(A) {
                return A && typeof Symbol == "function" && A.constructor === Symbol && A !== Symbol.prototype ? "symbol" : typeof A;
              }, Ha(n);
            }
            function Lc(n, A) {
              for (var G = 0; G < A.length; G++) {
                var st = A[G];
                st.enumerable = st.enumerable || false, st.configurable = true, "value" in st && (st.writable = true), Object.defineProperty(n, Uu(st.key), st);
              }
            }
            function Uu(n) {
              var A = function(G) {
                if (Ha(G) != "object" || !G) return G;
                var st = G[Symbol.toPrimitive];
                if (st !== void 0) {
                  var Gt = st.call(G, "string");
                  if (Ha(Gt) != "object") return Gt;
                  throw new TypeError("@@toPrimitive must return a primitive value.");
                }
                return String(G);
              }(n);
              return Ha(A) == "symbol" ? A : A + "";
            }
            function Nc() {
              try {
                var n = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
                }));
              } catch {
              }
              return (Nc = function() {
                return !!n;
              })();
            }
            function ru(n) {
              return ru = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function(A) {
                return A.__proto__ || Object.getPrototypeOf(A);
              }, ru(n);
            }
            function nu(n, A) {
              return nu = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function(G, st) {
                return G.__proto__ = st, G;
              }, nu(n, A);
            }
            var Ps = function(n) {
              function A() {
                (function(Pe, We) {
                  if (!(Pe instanceof We)) throw new TypeError("Cannot call a class as a function");
                })(this, A);
                for (var G = arguments.length, st = new Array(G), Gt = 0; Gt < G; Gt++) st[Gt] = arguments[Gt];
                return function(Pe, We, er) {
                  return We = ru(We), function(Rr, kr) {
                    if (kr && (Ha(kr) == "object" || typeof kr == "function")) return kr;
                    if (kr !== void 0) throw new TypeError("Derived constructors may only return object or undefined");
                    return function(vr) {
                      if (vr === void 0) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
                      return vr;
                    }(Rr);
                  }(Pe, Nc() ? Reflect.construct(We, er || [], ru(Pe).constructor) : We.apply(Pe, er));
                }(this, A, [st]);
              }
              return function(G, st) {
                if (typeof st != "function" && st !== null) throw new TypeError("Super expression must either be null or a function");
                G.prototype = Object.create(st && st.prototype, { constructor: { value: G, writable: true, configurable: true } }), Object.defineProperty(G, "prototype", { writable: false }), st && nu(G, st);
              }(A, n), function(G, st) {
                return st && Lc(G.prototype, st), Object.defineProperty(G, "prototype", { writable: false }), G;
              }(A, [{ key: "unsigned", get: function() {
                return true;
              } }, { key: "size", get: function() {
                return 128;
              } }]);
            }(h.LargeInt);
            function fa(n) {
              return fa = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(A) {
                return typeof A;
              } : function(A) {
                return A && typeof Symbol == "function" && A.constructor === Symbol && A !== Symbol.prototype ? "symbol" : typeof A;
              }, fa(n);
            }
            function tf(n, A) {
              for (var G = 0; G < A.length; G++) {
                var st = A[G];
                st.enumerable = st.enumerable || false, st.configurable = true, "value" in st && (st.writable = true), Object.defineProperty(n, Dc(st.key), st);
              }
            }
            function Dc(n) {
              var A = function(G) {
                if (fa(G) != "object" || !G) return G;
                var st = G[Symbol.toPrimitive];
                if (st !== void 0) {
                  var Gt = st.call(G, "string");
                  if (fa(Gt) != "object") return Gt;
                  throw new TypeError("@@toPrimitive must return a primitive value.");
                }
                return String(G);
              }(n);
              return fa(A) == "symbol" ? A : A + "";
            }
            function Fc() {
              try {
                var n = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
                }));
              } catch {
              }
              return (Fc = function() {
                return !!n;
              })();
            }
            function ou(n) {
              return ou = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function(A) {
                return A.__proto__ || Object.getPrototypeOf(A);
              }, ou(n);
            }
            function ju(n, A) {
              return ju = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function(G, st) {
                return G.__proto__ = st, G;
              }, ju(n, A);
            }
            Ps.defineIntBoundaries();
            var Ga = function(n) {
              function A() {
                (function(Pe, We) {
                  if (!(Pe instanceof We)) throw new TypeError("Cannot call a class as a function");
                })(this, A);
                for (var G = arguments.length, st = new Array(G), Gt = 0; Gt < G; Gt++) st[Gt] = arguments[Gt];
                return function(Pe, We, er) {
                  return We = ou(We), function(Rr, kr) {
                    if (kr && (fa(kr) == "object" || typeof kr == "function")) return kr;
                    if (kr !== void 0) throw new TypeError("Derived constructors may only return object or undefined");
                    return function(vr) {
                      if (vr === void 0) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
                      return vr;
                    }(Rr);
                  }(Pe, Fc() ? Reflect.construct(We, er || [], ou(Pe).constructor) : We.apply(Pe, er));
                }(this, A, [st]);
              }
              return function(G, st) {
                if (typeof st != "function" && st !== null) throw new TypeError("Super expression must either be null or a function");
                G.prototype = Object.create(st && st.prototype, { constructor: { value: G, writable: true, configurable: true } }), Object.defineProperty(G, "prototype", { writable: false }), st && ju(G, st);
              }(A, n), function(G, st) {
                return st && tf(G.prototype, st), Object.defineProperty(G, "prototype", { writable: false }), G;
              }(A, [{ key: "unsigned", get: function() {
                return true;
              } }, { key: "size", get: function() {
                return 256;
              } }]);
            }(h.LargeInt);
            function ds(n) {
              return ds = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(A) {
                return typeof A;
              } : function(A) {
                return A && typeof Symbol == "function" && A.constructor === Symbol && A !== Symbol.prototype ? "symbol" : typeof A;
              }, ds(n);
            }
            function ef(n, A) {
              for (var G = 0; G < A.length; G++) {
                var st = A[G];
                st.enumerable = st.enumerable || false, st.configurable = true, "value" in st && (st.writable = true), Object.defineProperty(n, Uc(st.key), st);
              }
            }
            function Uc(n) {
              var A = function(G) {
                if (ds(G) != "object" || !G) return G;
                var st = G[Symbol.toPrimitive];
                if (st !== void 0) {
                  var Gt = st.call(G, "string");
                  if (ds(Gt) != "object") return Gt;
                  throw new TypeError("@@toPrimitive must return a primitive value.");
                }
                return String(G);
              }(n);
              return ds(A) == "symbol" ? A : A + "";
            }
            function Wa() {
              try {
                var n = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
                }));
              } catch {
              }
              return (Wa = function() {
                return !!n;
              })();
            }
            function iu(n) {
              return iu = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function(A) {
                return A.__proto__ || Object.getPrototypeOf(A);
              }, iu(n);
            }
            function Vu(n, A) {
              return Vu = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function(G, st) {
                return G.__proto__ = st, G;
              }, Vu(n, A);
            }
            Ga.defineIntBoundaries();
            var zu = function(n) {
              function A() {
                (function(Pe, We) {
                  if (!(Pe instanceof We)) throw new TypeError("Cannot call a class as a function");
                })(this, A);
                for (var G = arguments.length, st = new Array(G), Gt = 0; Gt < G; Gt++) st[Gt] = arguments[Gt];
                return function(Pe, We, er) {
                  return We = iu(We), function(Rr, kr) {
                    if (kr && (ds(kr) == "object" || typeof kr == "function")) return kr;
                    if (kr !== void 0) throw new TypeError("Derived constructors may only return object or undefined");
                    return function(vr) {
                      if (vr === void 0) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
                      return vr;
                    }(Rr);
                  }(Pe, Wa() ? Reflect.construct(We, er || [], iu(Pe).constructor) : We.apply(Pe, er));
                }(this, A, [st]);
              }
              return function(G, st) {
                if (typeof st != "function" && st !== null) throw new TypeError("Super expression must either be null or a function");
                G.prototype = Object.create(st && st.prototype, { constructor: { value: G, writable: true, configurable: true } }), Object.defineProperty(G, "prototype", { writable: false }), st && Vu(G, st);
              }(A, n), function(G, st) {
                return st && ef(G.prototype, st), Object.defineProperty(G, "prototype", { writable: false }), G;
              }(A, [{ key: "unsigned", get: function() {
                return false;
              } }, { key: "size", get: function() {
                return 128;
              } }]);
            }(h.LargeInt);
            function Xa(n) {
              return Xa = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(A) {
                return typeof A;
              } : function(A) {
                return A && typeof Symbol == "function" && A.constructor === Symbol && A !== Symbol.prototype ? "symbol" : typeof A;
              }, Xa(n);
            }
            function au(n, A) {
              for (var G = 0; G < A.length; G++) {
                var st = A[G];
                st.enumerable = st.enumerable || false, st.configurable = true, "value" in st && (st.writable = true), Object.defineProperty(n, qu(st.key), st);
              }
            }
            function qu(n) {
              var A = function(G) {
                if (Xa(G) != "object" || !G) return G;
                var st = G[Symbol.toPrimitive];
                if (st !== void 0) {
                  var Gt = st.call(G, "string");
                  if (Xa(Gt) != "object") return Gt;
                  throw new TypeError("@@toPrimitive must return a primitive value.");
                }
                return String(G);
              }(n);
              return Xa(A) == "symbol" ? A : A + "";
            }
            function su() {
              try {
                var n = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
                }));
              } catch {
              }
              return (su = function() {
                return !!n;
              })();
            }
            function wa(n) {
              return wa = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function(A) {
                return A.__proto__ || Object.getPrototypeOf(A);
              }, wa(n);
            }
            function Hu(n, A) {
              return Hu = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function(G, st) {
                return G.__proto__ = st, G;
              }, Hu(n, A);
            }
            zu.defineIntBoundaries();
            var Gu = function(n) {
              function A() {
                (function(Pe, We) {
                  if (!(Pe instanceof We)) throw new TypeError("Cannot call a class as a function");
                })(this, A);
                for (var G = arguments.length, st = new Array(G), Gt = 0; Gt < G; Gt++) st[Gt] = arguments[Gt];
                return function(Pe, We, er) {
                  return We = wa(We), function(Rr, kr) {
                    if (kr && (Xa(kr) == "object" || typeof kr == "function")) return kr;
                    if (kr !== void 0) throw new TypeError("Derived constructors may only return object or undefined");
                    return function(vr) {
                      if (vr === void 0) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
                      return vr;
                    }(Rr);
                  }(Pe, su() ? Reflect.construct(We, er || [], wa(Pe).constructor) : We.apply(Pe, er));
                }(this, A, [st]);
              }
              return function(G, st) {
                if (typeof st != "function" && st !== null) throw new TypeError("Super expression must either be null or a function");
                G.prototype = Object.create(st && st.prototype, { constructor: { value: G, writable: true, configurable: true } }), Object.defineProperty(G, "prototype", { writable: false }), st && Hu(G, st);
              }(A, n), function(G, st) {
                return st && au(G.prototype, st), Object.defineProperty(G, "prototype", { writable: false }), G;
              }(A, [{ key: "unsigned", get: function() {
                return false;
              } }, { key: "size", get: function() {
                return 256;
              } }]);
            }(h.LargeInt);
            function Cs(n) {
              return Cs = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(A) {
                return typeof A;
              } : function(A) {
                return A && typeof Symbol == "function" && A.constructor === Symbol && A !== Symbol.prototype ? "symbol" : typeof A;
              }, Cs(n);
            }
            function Wu(n, A) {
              for (var G = 0; G < A.length; G++) {
                var st = A[G];
                st.enumerable = st.enumerable || false, st.configurable = true, "value" in st && (st.writable = true), Object.defineProperty(n, uu(st.key), st);
              }
            }
            function Rs(n, A, G) {
              return (A = uu(A)) in n ? Object.defineProperty(n, A, { value: G, enumerable: true, configurable: true, writable: true }) : n[A] = G, n;
            }
            function uu(n) {
              var A = function(G) {
                if (Cs(G) != "object" || !G) return G;
                var st = G[Symbol.toPrimitive];
                if (st !== void 0) {
                  var Gt = st.call(G, "string");
                  if (Cs(Gt) != "object") return Gt;
                  throw new TypeError("@@toPrimitive must return a primitive value.");
                }
                return String(G);
              }(n);
              return Cs(A) == "symbol" ? A : A + "";
            }
            Gu.defineIntBoundaries();
            var pa = function(n, A, G) {
              return A && Wu(n.prototype, A), G && Wu(n, G), Object.defineProperty(n, "prototype", { writable: false }), n;
            }(function n(A, G) {
              switch (function(st, Gt) {
                if (!(st instanceof Gt)) throw new TypeError("Cannot call a class as a function");
              }(this, n), Rs(this, "int", void 0), Rs(this, "type", void 0), G instanceof Array || (G = [G]), G = G.map(function(st) {
                return typeof st == "bigint" ? st : typeof st.toBigInt == "function" ? st.toBigInt() : BigInt(st);
              }), A) {
                case "i64":
                  this.int = new h.Hyper(G);
                  break;
                case "i128":
                  this.int = new zu(G);
                  break;
                case "i256":
                  this.int = new Gu(G);
                  break;
                case "u64":
                  this.int = new h.UnsignedHyper(G);
                  break;
                case "u128":
                  this.int = new Ps(G);
                  break;
                case "u256":
                  this.int = new Ga(G);
                  break;
                default:
                  throw TypeError("invalid type: ".concat(A));
              }
              this.type = A;
            }, [{ key: "toNumber", value: function() {
              var n = this.int.toBigInt();
              if (n > Number.MAX_SAFE_INTEGER || n < Number.MIN_SAFE_INTEGER) throw RangeError("value ".concat(n, " not in range for Number ") + "[".concat(Number.MAX_SAFE_INTEGER, ", ").concat(Number.MIN_SAFE_INTEGER, "]"));
              return Number(n);
            } }, { key: "toBigInt", value: function() {
              return this.int.toBigInt();
            } }, { key: "toI64", value: function() {
              this._sizeCheck(64);
              var n = this.toBigInt();
              if (BigInt.asIntN(64, n) !== n) throw RangeError("value too large for i64: ".concat(n));
              return c.ScVal.scvI64(new c.Int64(n));
            } }, { key: "toU64", value: function() {
              return this._sizeCheck(64), c.ScVal.scvU64(new c.Uint64(BigInt.asUintN(64, this.toBigInt())));
            } }, { key: "toI128", value: function() {
              this._sizeCheck(128);
              var n = this.int.toBigInt(), A = BigInt.asIntN(64, n >> 64n), G = BigInt.asUintN(64, n);
              return c.ScVal.scvI128(new c.Int128Parts({ hi: new c.Int64(A), lo: new c.Uint64(G) }));
            } }, { key: "toU128", value: function() {
              this._sizeCheck(128);
              var n = this.int.toBigInt();
              return c.ScVal.scvU128(new c.UInt128Parts({ hi: new c.Uint64(BigInt.asUintN(64, n >> 64n)), lo: new c.Uint64(BigInt.asUintN(64, n)) }));
            } }, { key: "toI256", value: function() {
              var n = this.int.toBigInt(), A = BigInt.asIntN(64, n >> 192n), G = BigInt.asUintN(64, n >> 128n), st = BigInt.asUintN(64, n >> 64n), Gt = BigInt.asUintN(64, n);
              return c.ScVal.scvI256(new c.Int256Parts({ hiHi: new c.Int64(A), hiLo: new c.Uint64(G), loHi: new c.Uint64(st), loLo: new c.Uint64(Gt) }));
            } }, { key: "toU256", value: function() {
              var n = this.int.toBigInt(), A = BigInt.asUintN(64, n >> 192n), G = BigInt.asUintN(64, n >> 128n), st = BigInt.asUintN(64, n >> 64n), Gt = BigInt.asUintN(64, n);
              return c.ScVal.scvU256(new c.UInt256Parts({ hiHi: new c.Uint64(A), hiLo: new c.Uint64(G), loHi: new c.Uint64(st), loLo: new c.Uint64(Gt) }));
            } }, { key: "toScVal", value: function() {
              switch (this.type) {
                case "i64":
                  return this.toI64();
                case "i128":
                  return this.toI128();
                case "i256":
                  return this.toI256();
                case "u64":
                  return this.toU64();
                case "u128":
                  return this.toU128();
                case "u256":
                  return this.toU256();
                default:
                  throw TypeError("invalid type: ".concat(this.type));
              }
            } }, { key: "valueOf", value: function() {
              return this.int.valueOf();
            } }, { key: "toString", value: function() {
              return this.int.toString();
            } }, { key: "toJSON", value: function() {
              return { value: this.toBigInt().toString(), type: this.type };
            } }, { key: "_sizeCheck", value: function(n) {
              if (this.int.size > n) throw RangeError("value too large for ".concat(n, " bits (").concat(this.type, ")"));
            } }], [{ key: "isType", value: function(n) {
              switch (n) {
                case "i64":
                case "i128":
                case "i256":
                case "u64":
                case "u128":
                case "u256":
                  return true;
                default:
                  return false;
              }
            } }, { key: "getType", value: function(n) {
              return n.slice(3).toLowerCase();
            } }]);
            function Pa(n) {
              return Pa = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(A) {
                return typeof A;
              } : function(A) {
                return A && typeof Symbol == "function" && A.constructor === Symbol && A !== Symbol.prototype ? "symbol" : typeof A;
              }, Pa(n);
            }
            function jc() {
              try {
                var n = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
                }));
              } catch {
              }
              return (jc = function() {
                return !!n;
              })();
            }
            function cu(n) {
              return cu = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function(A) {
                return A.__proto__ || Object.getPrototypeOf(A);
              }, cu(n);
            }
            function Xu(n, A) {
              return Xu = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function(G, st) {
                return G.__proto__ = st, G;
              }, Xu(n, A);
            }
            var Ku = function(n) {
              function A(G, st) {
                var Gt;
                (function(Rr, kr) {
                  if (!(Rr instanceof kr)) throw new TypeError("Cannot call a class as a function");
                })(this, A);
                var Pe = G < 0, We = (Gt = st == null ? void 0 : st.type) !== null && Gt !== void 0 ? Gt : "";
                if (We.startsWith("u") && Pe) throw TypeError("specified type ".concat(st.type, " yet negative (").concat(G, ")"));
                if (We === "") {
                  We = Pe ? "i" : "u";
                  var er = function(Rr) {
                    var kr, vr = Rr.toString(2).length;
                    return (kr = [64, 128, 256].find(function(ur) {
                      return vr <= ur;
                    })) !== null && kr !== void 0 ? kr : vr;
                  }(G);
                  switch (er) {
                    case 64:
                    case 128:
                    case 256:
                      We += er.toString();
                      break;
                    default:
                      throw RangeError("expected 64/128/256 bits for input (".concat(G, "), got ").concat(er));
                  }
                }
                return function(Rr, kr, vr) {
                  return kr = cu(kr), function(ur, Er) {
                    if (Er && (Pa(Er) == "object" || typeof Er == "function")) return Er;
                    if (Er !== void 0) throw new TypeError("Derived constructors may only return object or undefined");
                    return function(un) {
                      if (un === void 0) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
                      return un;
                    }(ur);
                  }(Rr, jc() ? Reflect.construct(kr, vr || [], cu(Rr).constructor) : kr.apply(Rr, vr));
                }(this, A, [We, G]);
              }
              return function(G, st) {
                if (typeof st != "function" && st !== null) throw new TypeError("Super expression must either be null or a function");
                G.prototype = Object.create(st && st.prototype, { constructor: { value: G, writable: true, configurable: true } }), Object.defineProperty(G, "prototype", { writable: false }), st && Xu(G, st);
              }(A, n), function(G) {
                return Object.defineProperty(G, "prototype", { writable: false }), G;
              }(A);
            }(pa);
            function Is(n) {
              var A = pa.getType(n.switch().name);
              switch (n.switch().name) {
                case "scvU32":
                case "scvI32":
                  return BigInt(n.value());
                case "scvU64":
                case "scvI64":
                  return new pa(A, n.value()).toBigInt();
                case "scvU128":
                case "scvI128":
                  return new pa(A, [n.value().lo(), n.value().hi()]).toBigInt();
                case "scvU256":
                case "scvI256":
                  return new pa(A, [n.value().loLo(), n.value().loHi(), n.value().hiLo(), n.value().hiHi()]).toBigInt();
                default:
                  throw TypeError("expected integer type, got ".concat(n.switch()));
              }
            }
            var lu = b(8287).Buffer;
            function ms(n, A) {
              return function(G) {
                if (Array.isArray(G)) return G;
              }(n) || function(G, st) {
                var Gt = G == null ? null : typeof Symbol < "u" && G[Symbol.iterator] || G["@@iterator"];
                if (Gt != null) {
                  var Pe, We, er, Rr, kr = [], vr = true, ur = false;
                  try {
                    if (er = (Gt = Gt.call(G)).next, st === 0) {
                      if (Object(Gt) !== Gt) return;
                      vr = false;
                    } else for (; !(vr = (Pe = er.call(Gt)).done) && (kr.push(Pe.value), kr.length !== st); vr = true) ;
                  } catch (Er) {
                    ur = true, We = Er;
                  } finally {
                    try {
                      if (!vr && Gt.return != null && (Rr = Gt.return(), Object(Rr) !== Rr)) return;
                    } finally {
                      if (ur) throw We;
                    }
                  }
                  return kr;
                }
              }(n, A) || function(G, st) {
                if (G) {
                  if (typeof G == "string") return Ka(G, st);
                  var Gt = {}.toString.call(G).slice(8, -1);
                  return Gt === "Object" && G.constructor && (Gt = G.constructor.name), Gt === "Map" || Gt === "Set" ? Array.from(G) : Gt === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(Gt) ? Ka(G, st) : void 0;
                }
              }(n, A) || function() {
                throw new TypeError(`Invalid attempt to destructure non-iterable instance.
In order to be iterable, non-array objects must have a [Symbol.iterator]() method.`);
              }();
            }
            function Ka(n, A) {
              (A == null || A > n.length) && (A = n.length);
              for (var G = 0, st = Array(A); G < A; G++) st[G] = n[G];
              return st;
            }
            function Vc(n, A) {
              var G = Object.keys(n);
              if (Object.getOwnPropertySymbols) {
                var st = Object.getOwnPropertySymbols(n);
                A && (st = st.filter(function(Gt) {
                  return Object.getOwnPropertyDescriptor(n, Gt).enumerable;
                })), G.push.apply(G, st);
              }
              return G;
            }
            function rf(n, A, G) {
              return (A = function(st) {
                var Gt = function(Pe) {
                  if (Ca(Pe) != "object" || !Pe) return Pe;
                  var We = Pe[Symbol.toPrimitive];
                  if (We !== void 0) {
                    var er = We.call(Pe, "string");
                    if (Ca(er) != "object") return er;
                    throw new TypeError("@@toPrimitive must return a primitive value.");
                  }
                  return String(Pe);
                }(st);
                return Ca(Gt) == "symbol" ? Gt : Gt + "";
              }(A)) in n ? Object.defineProperty(n, A, { value: G, enumerable: true, configurable: true, writable: true }) : n[A] = G, n;
            }
            function Ca(n) {
              return Ca = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(A) {
                return typeof A;
              } : function(A) {
                return A && typeof Symbol == "function" && A.constructor === Symbol && A !== Symbol.prototype ? "symbol" : typeof A;
              }, Ca(n);
            }
            function Sa(n) {
              var A = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};
              switch (Ca(n)) {
                case "object":
                  var G, st, Gt;
                  if (n === null) return c.ScVal.scvVoid();
                  if (n instanceof c.ScVal) return n;
                  if (n instanceof Qo) return n.toScVal();
                  if (n instanceof ue) return Sa(n.publicKey(), { type: "address" });
                  if (n instanceof Bc) return n.address().toScVal();
                  if (n instanceof Uint8Array || lu.isBuffer(n)) {
                    var Pe, We = Uint8Array.from(n);
                    switch ((Pe = A == null ? void 0 : A.type) !== null && Pe !== void 0 ? Pe : "bytes") {
                      case "bytes":
                        return c.ScVal.scvBytes(We);
                      case "symbol":
                        return c.ScVal.scvSymbol(We);
                      case "string":
                        return c.ScVal.scvString(We);
                      default:
                        throw new TypeError("invalid type (".concat(A.type, ") specified for bytes-like value"));
                    }
                  }
                  if (Array.isArray(n)) return c.ScVal.scvVec(n.map(function(kr, vr) {
                    return Array.isArray(A.type) ? Sa(kr, function(ur) {
                      for (var Er = 1; Er < arguments.length; Er++) {
                        var un = arguments[Er] != null ? arguments[Er] : {};
                        Er % 2 ? Vc(Object(un), true).forEach(function(cn) {
                          rf(ur, cn, un[cn]);
                        }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(ur, Object.getOwnPropertyDescriptors(un)) : Vc(Object(un)).forEach(function(cn) {
                          Object.defineProperty(ur, cn, Object.getOwnPropertyDescriptor(un, cn));
                        });
                      }
                      return ur;
                    }({}, A.type.length > vr && { type: A.type[vr] })) : Sa(kr, A);
                  }));
                  if (((G = (st = n.constructor) === null || st === void 0 ? void 0 : st.name) !== null && G !== void 0 ? G : "") !== "Object") throw new TypeError("cannot interpret ".concat((Gt = n.constructor) === null || Gt === void 0 ? void 0 : Gt.name, " value as ScVal (").concat(JSON.stringify(n), ")"));
                  return c.ScVal.scvMap(Object.entries(n).sort(function(kr, vr) {
                    var ur = ms(kr, 1)[0], Er = ms(vr, 1)[0];
                    return ur.localeCompare(Er);
                  }).map(function(kr) {
                    var vr, ur, Er = ms(kr, 2), un = Er[0], cn = Er[1], mn = ms((vr = ((ur = A == null ? void 0 : A.type) !== null && ur !== void 0 ? ur : {})[un]) !== null && vr !== void 0 ? vr : [null, null], 2), Pn = mn[0], kn = mn[1], so = Pn ? { type: Pn } : {}, Mn = kn ? { type: kn } : {};
                    return new c.ScMapEntry({ key: Sa(un, so), val: Sa(cn, Mn) });
                  }));
                case "number":
                case "bigint":
                  switch (A == null ? void 0 : A.type) {
                    case "u32":
                      return c.ScVal.scvU32(n);
                    case "i32":
                      return c.ScVal.scvI32(n);
                  }
                  return new Ku(n, { type: A == null ? void 0 : A.type }).toScVal();
                case "string":
                  var er, Rr = (er = A == null ? void 0 : A.type) !== null && er !== void 0 ? er : "string";
                  switch (Rr) {
                    case "string":
                      return c.ScVal.scvString(n);
                    case "symbol":
                      return c.ScVal.scvSymbol(n);
                    case "address":
                      return new Qo(n).toScVal();
                    case "u32":
                      return c.ScVal.scvU32(parseInt(n, 10));
                    case "i32":
                      return c.ScVal.scvI32(parseInt(n, 10));
                    default:
                      if (pa.isType(Rr)) return new pa(Rr, n).toScVal();
                      throw new TypeError("invalid type (".concat(A.type, ") specified for string value"));
                  }
                case "boolean":
                  return c.ScVal.scvBool(n);
                case "undefined":
                  return c.ScVal.scvVoid();
                case "function":
                  return Sa(n());
                default:
                  throw new TypeError("failed to convert typeof ".concat(Ca(n), " (").concat(n, ")"));
              }
            }
            function Ki(n) {
              var A, G;
              switch (n.switch().value) {
                case c.ScValType.scvVoid().value:
                  return null;
                case c.ScValType.scvU64().value:
                case c.ScValType.scvI64().value:
                  return n.value().toBigInt();
                case c.ScValType.scvU128().value:
                case c.ScValType.scvI128().value:
                case c.ScValType.scvU256().value:
                case c.ScValType.scvI256().value:
                  return Is(n);
                case c.ScValType.scvVec().value:
                  return ((A = n.vec()) !== null && A !== void 0 ? A : []).map(Ki);
                case c.ScValType.scvAddress().value:
                  return Qo.fromScVal(n).toString();
                case c.ScValType.scvMap().value:
                  return Object.fromEntries(((G = n.map()) !== null && G !== void 0 ? G : []).map(function(Pe) {
                    return [Ki(Pe.key()), Ki(Pe.val())];
                  }));
                case c.ScValType.scvBool().value:
                case c.ScValType.scvU32().value:
                case c.ScValType.scvI32().value:
                case c.ScValType.scvBytes().value:
                  return n.value();
                case c.ScValType.scvSymbol().value:
                case c.ScValType.scvString().value:
                  var st = n.value();
                  if (lu.isBuffer(st) || ArrayBuffer.isView(st)) try {
                    return new TextDecoder().decode(st);
                  } catch {
                    return new Uint8Array(st.buffer);
                  }
                  return st;
                case c.ScValType.scvTimepoint().value:
                case c.ScValType.scvDuration().value:
                  return new c.Uint64(n.value()).toBigInt();
                case c.ScValType.scvError().value:
                  if (n.error().switch().value === c.ScErrorType.sceContract().value) return { type: "contract", code: n.error().contractCode() };
                  var Gt = n.error();
                  return { type: "system", code: Gt.code().value, value: Gt.code().name };
                default:
                  return n.value();
              }
            }
            function $a(n) {
              return $a = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(A) {
                return typeof A;
              } : function(A) {
                return A && typeof Symbol == "function" && A.constructor === Symbol && A !== Symbol.prototype ? "symbol" : typeof A;
              }, $a(n);
            }
            function fu(n, A) {
              var G = Object.keys(n);
              if (Object.getOwnPropertySymbols) {
                var st = Object.getOwnPropertySymbols(n);
                A && (st = st.filter(function(Gt) {
                  return Object.getOwnPropertyDescriptor(n, Gt).enumerable;
                })), G.push.apply(G, st);
              }
              return G;
            }
            function ys(n) {
              for (var A = 1; A < arguments.length; A++) {
                var G = arguments[A] != null ? arguments[A] : {};
                A % 2 ? fu(Object(G), true).forEach(function(st) {
                  zc(n, st, G[st]);
                }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(n, Object.getOwnPropertyDescriptors(G)) : fu(Object(G)).forEach(function(st) {
                  Object.defineProperty(n, st, Object.getOwnPropertyDescriptor(G, st));
                });
              }
              return n;
            }
            function zc(n, A, G) {
              return (A = function(st) {
                var Gt = function(Pe) {
                  if ($a(Pe) != "object" || !Pe) return Pe;
                  var We = Pe[Symbol.toPrimitive];
                  if (We !== void 0) {
                    var er = We.call(Pe, "string");
                    if ($a(er) != "object") return er;
                    throw new TypeError("@@toPrimitive must return a primitive value.");
                  }
                  return String(Pe);
                }(st);
                return $a(Gt) == "symbol" ? Gt : Gt + "";
              }(A)) in n ? Object.defineProperty(n, A, { value: G, enumerable: true, configurable: true, writable: true }) : n[A] = G, n;
            }
            function qc(n) {
              return n.map(function(A) {
                return A.inSuccessfulContractCall ? $u(A.event()) : $u(A);
              });
            }
            function $u(n) {
              return ys(ys({}, typeof n.contractId == "function" && n.contractId() != null && { contractId: gr.encodeContract(n.contractId()) }), {}, { type: n.type().name, topics: n.body().value().topics().map(function(A) {
                return Ki(A);
              }), data: Ki(n.body().value().data()) });
            }
            c.scvSortedMap = function(n) {
              var A = Array.from(n).sort(function(G, st) {
                var Gt = Ki(G.key()), Pe = Ki(st.key());
                switch (Ca(Gt)) {
                  case "number":
                  case "bigint":
                    return Gt < Pe ? -1 : 1;
                  default:
                    return Gt.toString().localeCompare(Pe.toString());
                }
              });
              return c.ScVal.scvMap(A);
            };
            var na = b(8287).Buffer;
            function Ms() {
              var n, A, G = typeof Symbol == "function" ? Symbol : {}, st = G.iterator || "@@iterator", Gt = G.toStringTag || "@@toStringTag";
              function Pe(un, cn, mn, Pn) {
                var kn = cn && cn.prototype instanceof er ? cn : er, so = Object.create(kn.prototype);
                return $i(so, "_invoke", function(Mn, $n, On) {
                  var r, y, N, Q = 0, _t = On || [], Qt = false, Ce = { p: 0, n: 0, v: n, a: Le, f: Le.bind(n, 4), d: function(Qe, Sr) {
                    return r = Qe, y = 0, N = n, Ce.n = Sr, We;
                  } };
                  function Le(Qe, Sr) {
                    for (y = Qe, N = Sr, A = 0; !Qt && Q && !Kt && A < _t.length; A++) {
                      var Kt, re = _t[A], fe = Ce.p, Re = re[2];
                      Qe > 3 ? (Kt = Re === Sr) && (N = re[(y = re[4]) ? 5 : (y = 3, 3)], re[4] = re[5] = n) : re[0] <= fe && ((Kt = Qe < 2 && fe < re[1]) ? (y = 0, Ce.v = Sr, Ce.n = re[1]) : fe < Re && (Kt = Qe < 3 || re[0] > Sr || Sr > Re) && (re[4] = Qe, re[5] = Sr, Ce.n = Re, y = 0));
                    }
                    if (Kt || Qe > 1) return We;
                    throw Qt = true, Sr;
                  }
                  return function(Qe, Sr, Kt) {
                    if (Q > 1) throw TypeError("Generator is already running");
                    for (Qt && Sr === 1 && Le(Sr, Kt), y = Sr, N = Kt; (A = y < 2 ? n : N) || !Qt; ) {
                      r || (y ? y < 3 ? (y > 1 && (Ce.n = -1), Le(y, N)) : Ce.n = N : Ce.v = N);
                      try {
                        if (Q = 2, r) {
                          if (y || (Qe = "next"), A = r[Qe]) {
                            if (!(A = A.call(r, N))) throw TypeError("iterator result is not an object");
                            if (!A.done) return A;
                            N = A.value, y < 2 && (y = 0);
                          } else y === 1 && (A = r.return) && A.call(r), y < 2 && (N = TypeError("The iterator does not provide a '" + Qe + "' method"), y = 1);
                          r = n;
                        } else if ((A = (Qt = Ce.n < 0) ? N : Mn.call($n, Ce)) !== We) break;
                      } catch (re) {
                        r = n, y = 1, N = re;
                      } finally {
                        Q = 1;
                      }
                    }
                    return { value: A, done: Qt };
                  };
                }(un, mn, Pn), true), so;
              }
              var We = {};
              function er() {
              }
              function Rr() {
              }
              function kr() {
              }
              A = Object.getPrototypeOf;
              var vr = [][st] ? A(A([][st]())) : ($i(A = {}, st, function() {
                return this;
              }), A), ur = kr.prototype = er.prototype = Object.create(vr);
              function Er(un) {
                return Object.setPrototypeOf ? Object.setPrototypeOf(un, kr) : (un.__proto__ = kr, $i(un, Gt, "GeneratorFunction")), un.prototype = Object.create(ur), un;
              }
              return Rr.prototype = kr, $i(ur, "constructor", kr), $i(kr, "constructor", Rr), Rr.displayName = "GeneratorFunction", $i(kr, Gt, "GeneratorFunction"), $i(ur), $i(ur, Gt, "Generator"), $i(ur, st, function() {
                return this;
              }), $i(ur, "toString", function() {
                return "[object Generator]";
              }), (Ms = function() {
                return { w: Pe, m: Er };
              })();
            }
            function $i(n, A, G, st) {
              var Gt = Object.defineProperty;
              try {
                Gt({}, "", {});
              } catch {
                Gt = 0;
              }
              $i = function(Pe, We, er, Rr) {
                if (We) Gt ? Gt(Pe, We, { value: er, enumerable: !Rr, configurable: !Rr, writable: !Rr }) : Pe[We] = er;
                else {
                  var kr = function(vr, ur) {
                    $i(Pe, vr, function(Er) {
                      return this._invoke(vr, ur, Er);
                    });
                  };
                  kr("next", 0), kr("throw", 1), kr("return", 2);
                }
              }, $i(n, A, G, st);
            }
            function Yu(n, A, G, st, Gt, Pe, We) {
              try {
                var er = n[Pe](We), Rr = er.value;
              } catch (kr) {
                return void G(kr);
              }
              er.done ? A(Rr) : Promise.resolve(Rr).then(st, Gt);
            }
            function Bs(n, A, G) {
              return Ls.apply(this, arguments);
            }
            function Ls() {
              var n;
              return n = Ms().m(function A(G, st, Gt) {
                var Pe, We, er, Rr, kr, vr, ur, Er, un, cn, mn = arguments;
                return Ms().w(function(Pn) {
                  for (; ; ) switch (Pn.n) {
                    case 0:
                      if (Pe = mn.length > 3 && mn[3] !== void 0 ? mn[3] : za.FUTURENET, G.credentials().switch().value === c.SorobanCredentialsType.sorobanCredentialsAddress().value) {
                        Pn.n = 1;
                        break;
                      }
                      return Pn.a(2, G);
                    case 1:
                      if (We = c.SorobanAuthorizationEntry.fromXDR(G.toXDR()), (er = We.credentials().address()).signatureExpirationLedger(Gt), Rr = P(na.from(Pe)), kr = c.HashIdPreimage.envelopeTypeSorobanAuthorization(new c.HashIdPreimageSorobanAuthorization({ networkId: Rr, nonce: er.nonce(), invocation: We.rootInvocation(), signatureExpirationLedger: er.signatureExpirationLedger() })), vr = P(kr.toXDR()), typeof st != "function") {
                        Pn.n = 3;
                        break;
                      }
                      return Pn.n = 2, st(kr);
                    case 2:
                      (un = Pn.v) != null && un.signature ? (ur = na.from(un.signature), Er = un.publicKey) : (ur = na.from(un), Er = Qo.fromScAddress(er.address()).toString()), Pn.n = 4;
                      break;
                    case 3:
                      ur = na.from(st.sign(vr)), Er = st.publicKey();
                    case 4:
                      if (ue.fromPublicKey(Er).verify(vr, ur)) {
                        Pn.n = 5;
                        break;
                      }
                      throw new Error("signature doesn't match payload");
                    case 5:
                      return cn = Sa({ public_key: gr.decodeEd25519PublicKey(Er), signature: ur }, { type: { public_key: ["symbol", null], signature: ["symbol", null] } }), er.signature(c.ScVal.scvVec([cn])), Pn.a(2, We);
                  }
                }, A);
              }), Ls = function() {
                var A = this, G = arguments;
                return new Promise(function(st, Gt) {
                  var Pe = n.apply(A, G);
                  function We(Rr) {
                    Yu(Pe, st, Gt, We, er, "next", Rr);
                  }
                  function er(Rr) {
                    Yu(Pe, st, Gt, We, er, "throw", Rr);
                  }
                  We(void 0);
                });
              }, Ls.apply(this, arguments);
            }
            function Hc(n, A, G) {
              var st = arguments.length > 3 && arguments[3] !== void 0 ? arguments[3] : "", Gt = arguments.length > 4 && arguments[4] !== void 0 ? arguments[4] : za.FUTURENET, Pe = ue.random().rawPublicKey(), We = new c.Int64(Pe.subarray(0, 8).reduce(function(Rr, kr) {
                return Rr << 8 | kr;
              }, 0)), er = st || n.publicKey();
              if (!er) throw new Error("authorizeInvocation requires publicKey parameter");
              return Bs(new c.SorobanAuthorizationEntry({ rootInvocation: G, credentials: c.SorobanCredentials.sorobanCredentialsAddress(new c.SorobanAddressCredentials({ address: new Qo(er).toScAddress(), nonce: We, signatureExpirationLedger: 0, signature: c.ScVal.scvVec([]) })) }), n, A, Gt);
            }
            function gs(n) {
              return gs = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(A) {
                return typeof A;
              } : function(A) {
                return A && typeof Symbol == "function" && A.constructor === Symbol && A !== Symbol.prototype ? "symbol" : typeof A;
              }, gs(n);
            }
            function Zu(n, A) {
              var G = Object.keys(n);
              if (Object.getOwnPropertySymbols) {
                var st = Object.getOwnPropertySymbols(n);
                A && (st = st.filter(function(Gt) {
                  return Object.getOwnPropertyDescriptor(n, Gt).enumerable;
                })), G.push.apply(G, st);
              }
              return G;
            }
            function pu(n, A, G) {
              return (A = function(st) {
                var Gt = function(Pe) {
                  if (gs(Pe) != "object" || !Pe) return Pe;
                  var We = Pe[Symbol.toPrimitive];
                  if (We !== void 0) {
                    var er = We.call(Pe, "string");
                    if (gs(er) != "object") return er;
                    throw new TypeError("@@toPrimitive must return a primitive value.");
                  }
                  return String(Pe);
                }(st);
                return gs(Gt) == "symbol" ? Gt : Gt + "";
              }(A)) in n ? Object.defineProperty(n, A, { value: G, enumerable: true, configurable: true, writable: true }) : n[A] = G, n;
            }
            function Qu(n) {
              var A = n.function(), G = {}, st = A.value();
              switch (A.switch().value) {
                case 0:
                  G.type = "execute", G.args = { source: Qo.fromScAddress(st.contractAddress()).toString(), function: st.functionName(), args: st.args().map(function(kr) {
                    return Ki(kr);
                  }) };
                  break;
                case 1:
                case 2:
                  var Gt = A.switch().value === 2;
                  G.type = "create", G.args = {};
                  var Pe = [st.executable(), st.contractIdPreimage()], We = Pe[0], er = Pe[1];
                  if (!!We.switch().value != !!er.switch().value) throw new Error("creation function appears invalid: ".concat(JSON.stringify(st), " (should be wasm+address or token+asset)"));
                  switch (We.switch().value) {
                    case 0:
                      var Rr = er.fromAddress();
                      G.args.type = "wasm", G.args.wasm = function(kr) {
                        for (var vr = 1; vr < arguments.length; vr++) {
                          var ur = arguments[vr] != null ? arguments[vr] : {};
                          vr % 2 ? Zu(Object(ur), true).forEach(function(Er) {
                            pu(kr, Er, ur[Er]);
                          }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(kr, Object.getOwnPropertyDescriptors(ur)) : Zu(Object(ur)).forEach(function(Er) {
                            Object.defineProperty(kr, Er, Object.getOwnPropertyDescriptor(ur, Er));
                          });
                        }
                        return kr;
                      }({ salt: Rr.salt().toString("hex"), hash: We.wasmHash().toString("hex"), address: Qo.fromScAddress(Rr.address()).toString() }, Gt && { constructorArgs: st.constructorArgs().map(function(kr) {
                        return Ki(kr);
                      }) });
                      break;
                    case 1:
                      G.args.type = "sac", G.args.asset = je.fromOperation(er.fromAsset()).toString();
                      break;
                    default:
                      throw new Error("unknown creation type: ".concat(JSON.stringify(We)));
                  }
                  break;
                default:
                  throw new Error("unknown invocation type (".concat(A.switch(), "): ").concat(JSON.stringify(A)));
              }
              return G.invocations = n.subInvocations().map(function(kr) {
                return Qu(kr);
              }), G;
            }
            function Gc(n, A) {
              Wc(n, 1, A);
            }
            function Wc(n, A, G, st) {
              G(n, A, st) !== false && n.subInvocations().forEach(function(Gt) {
                return Wc(Gt, A + 1, G, n);
              });
            }
            const Ra = (p = b.hmd(p)).exports;
          }, 7176: (p, g, b) => {
            var h, m = b(3126), c = b(5795);
            try {
              h = [].__proto__ === Array.prototype;
            } catch (k) {
              if (!k || typeof k != "object" || !("code" in k) || k.code !== "ERR_PROTO_ACCESS") throw k;
            }
            var w = !!h && c && c(Object.prototype, "__proto__"), T = Object, P = T.getPrototypeOf;
            p.exports = w && typeof w.get == "function" ? m([w.get]) : typeof P == "function" && function(k) {
              return P(k == null ? k : T(k));
            };
          }, 7244: (p, g, b) => {
            var h = b(9092)(), m = b(6556)("Object.prototype.toString"), c = function(P) {
              return !(h && P && typeof P == "object" && Symbol.toStringTag in P) && m(P) === "[object Arguments]";
            }, w = function(P) {
              return !!c(P) || P !== null && typeof P == "object" && "length" in P && typeof P.length == "number" && P.length >= 0 && m(P) !== "[object Array]" && "callee" in P && m(P.callee) === "[object Function]";
            }, T = function() {
              return c(arguments);
            }();
            c.isLegacyArguments = w, p.exports = T ? c : w;
          }, 7526: (p, g) => {
            g.byteLength = function(R) {
              var F = T(R), v = F[0], U = F[1];
              return 3 * (v + U) / 4 - U;
            }, g.toByteArray = function(R) {
              var F, v, U = T(R), M = U[0], Z = U[1], D = new m(function(x, B, W) {
                return 3 * (B + W) / 4 - W;
              }(0, M, Z)), V = 0, S = Z > 0 ? M - 4 : M;
              for (v = 0; v < S; v += 4) F = h[R.charCodeAt(v)] << 18 | h[R.charCodeAt(v + 1)] << 12 | h[R.charCodeAt(v + 2)] << 6 | h[R.charCodeAt(v + 3)], D[V++] = F >> 16 & 255, D[V++] = F >> 8 & 255, D[V++] = 255 & F;
              return Z === 2 && (F = h[R.charCodeAt(v)] << 2 | h[R.charCodeAt(v + 1)] >> 4, D[V++] = 255 & F), Z === 1 && (F = h[R.charCodeAt(v)] << 10 | h[R.charCodeAt(v + 1)] << 4 | h[R.charCodeAt(v + 2)] >> 2, D[V++] = F >> 8 & 255, D[V++] = 255 & F), D;
            }, g.fromByteArray = function(R) {
              for (var F, v = R.length, U = v % 3, M = [], Z = 16383, D = 0, V = v - U; D < V; D += Z) M.push(k(R, D, D + Z > V ? V : D + Z));
              return U === 1 ? (F = R[v - 1], M.push(b[F >> 2] + b[F << 4 & 63] + "==")) : U === 2 && (F = (R[v - 2] << 8) + R[v - 1], M.push(b[F >> 10] + b[F >> 4 & 63] + b[F << 2 & 63] + "=")), M.join("");
            };
            for (var b = [], h = [], m = typeof Uint8Array < "u" ? Uint8Array : Array, c = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/", w = 0; w < 64; ++w) b[w] = c[w], h[c.charCodeAt(w)] = w;
            function T(R) {
              var F = R.length;
              if (F % 4 > 0) throw new Error("Invalid string. Length must be a multiple of 4");
              var v = R.indexOf("=");
              return v === -1 && (v = F), [v, v === F ? 0 : 4 - v % 4];
            }
            function P(R) {
              return b[R >> 18 & 63] + b[R >> 12 & 63] + b[R >> 6 & 63] + b[63 & R];
            }
            function k(R, F, v) {
              for (var U, M = [], Z = F; Z < v; Z += 3) U = (R[Z] << 16 & 16711680) + (R[Z + 1] << 8 & 65280) + (255 & R[Z + 2]), M.push(P(U));
              return M.join("");
            }
            h[45] = 62, h[95] = 63;
          }, 7653: (p, g, b) => {
            var h = b(8452), m = b(487), c = b(9211), w = b(9394), T = b(6576), P = m(w(), Object);
            h(P, { getPolyfill: w, implementation: c, shim: T }), p.exports = P;
          }, 7816: (p, g, b) => {
            var h = b(6698), m = b(392), c = b(2861).Buffer, w = [1518500249, 1859775393, -1894007588, -899497514], T = new Array(80);
            function P() {
              this.init(), this._w = T, m.call(this, 64, 56);
            }
            function k(v) {
              return v << 5 | v >>> 27;
            }
            function R(v) {
              return v << 30 | v >>> 2;
            }
            function F(v, U, M, Z) {
              return v === 0 ? U & M | ~U & Z : v === 2 ? U & M | U & Z | M & Z : U ^ M ^ Z;
            }
            h(P, m), P.prototype.init = function() {
              return this._a = 1732584193, this._b = 4023233417, this._c = 2562383102, this._d = 271733878, this._e = 3285377520, this;
            }, P.prototype._update = function(v) {
              for (var U = this._w, M = 0 | this._a, Z = 0 | this._b, D = 0 | this._c, V = 0 | this._d, S = 0 | this._e, x = 0; x < 16; ++x) U[x] = v.readInt32BE(4 * x);
              for (; x < 80; ++x) U[x] = U[x - 3] ^ U[x - 8] ^ U[x - 14] ^ U[x - 16];
              for (var B = 0; B < 80; ++B) {
                var W = ~~(B / 20), lt = k(M) + F(W, Z, D, V) + S + U[B] + w[W] | 0;
                S = V, V = D, D = R(Z), Z = M, M = lt;
              }
              this._a = M + this._a | 0, this._b = Z + this._b | 0, this._c = D + this._c | 0, this._d = V + this._d | 0, this._e = S + this._e | 0;
            }, P.prototype._hash = function() {
              var v = c.allocUnsafe(20);
              return v.writeInt32BE(0 | this._a, 0), v.writeInt32BE(0 | this._b, 4), v.writeInt32BE(0 | this._c, 8), v.writeInt32BE(0 | this._d, 12), v.writeInt32BE(0 | this._e, 16), v;
            }, p.exports = P;
          }, 8002: (p) => {
            p.exports = Math.min;
          }, 8068: (p) => {
            p.exports = SyntaxError;
          }, 8075: (p, g, b) => {
            var h = b(453), m = b(487), c = m(h("String.prototype.indexOf"));
            p.exports = function(w, T) {
              var P = h(w, !!T);
              return typeof P == "function" && c(w, ".prototype.") > -1 ? m(P) : P;
            };
          }, 8184: (p, g, b) => {
            var h, m = b(6556), c = b(9721)(/^\s*(?:function)?\*/), w = b(9092)(), T = b(3628), P = m("Object.prototype.toString"), k = m("Function.prototype.toString");
            p.exports = function(R) {
              if (typeof R != "function") return false;
              if (c(k(R))) return true;
              if (!w) return P(R) === "[object GeneratorFunction]";
              if (!T) return false;
              if (h === void 0) {
                var F = function() {
                  if (!w) return false;
                  try {
                    return Function("return function*() {}")();
                  } catch {
                  }
                }();
                h = !!F && T(F);
              }
              return T(R) === h;
            };
          }, 8287: (p, g, b) => {
            var h = b(6763);
            const m = b(7526), c = b(251), w = typeof Symbol == "function" && typeof Symbol.for == "function" ? Symbol.for("nodejs.util.inspect.custom") : null;
            g.Buffer = k, g.SlowBuffer = function(q) {
              return +q != q && (q = 0), k.alloc(+q);
            }, g.INSPECT_MAX_BYTES = 50;
            const T = 2147483647;
            function P(q) {
              if (q > T) throw new RangeError('The value "' + q + '" is invalid for option "size"');
              const _ = new Uint8Array(q);
              return Object.setPrototypeOf(_, k.prototype), _;
            }
            function k(q, _, L) {
              if (typeof q == "number") {
                if (typeof _ == "string") throw new TypeError('The "string" argument must be of type string. Received type number');
                return v(q);
              }
              return R(q, _, L);
            }
            function R(q, _, L) {
              if (typeof q == "string") return function(kt, ct) {
                if (typeof ct == "string" && ct !== "" || (ct = "utf8"), !k.isEncoding(ct)) throw new TypeError("Unknown encoding: " + ct);
                const j = 0 | D(kt, ct);
                let ut = P(j);
                const gt = ut.write(kt, ct);
                return gt !== j && (ut = ut.slice(0, gt)), ut;
              }(q, _);
              if (ArrayBuffer.isView(q)) return function(kt) {
                if (z(kt, Uint8Array)) {
                  const ct = new Uint8Array(kt);
                  return M(ct.buffer, ct.byteOffset, ct.byteLength);
                }
                return U(kt);
              }(q);
              if (q == null) throw new TypeError("The first argument must be one of type string, Buffer, ArrayBuffer, Array, or Array-like Object. Received type " + typeof q);
              if (z(q, ArrayBuffer) || q && z(q.buffer, ArrayBuffer) || typeof SharedArrayBuffer < "u" && (z(q, SharedArrayBuffer) || q && z(q.buffer, SharedArrayBuffer))) return M(q, _, L);
              if (typeof q == "number") throw new TypeError('The "value" argument must not be of type number. Received type number');
              const et = q.valueOf && q.valueOf();
              if (et != null && et !== q) return k.from(et, _, L);
              const St = function(kt) {
                if (k.isBuffer(kt)) {
                  const ct = 0 | Z(kt.length), j = P(ct);
                  return j.length === 0 || kt.copy(j, 0, 0, ct), j;
                }
                return kt.length !== void 0 ? typeof kt.length != "number" || J(kt.length) ? P(0) : U(kt) : kt.type === "Buffer" && Array.isArray(kt.data) ? U(kt.data) : void 0;
              }(q);
              if (St) return St;
              if (typeof Symbol < "u" && Symbol.toPrimitive != null && typeof q[Symbol.toPrimitive] == "function") return k.from(q[Symbol.toPrimitive]("string"), _, L);
              throw new TypeError("The first argument must be one of type string, Buffer, ArrayBuffer, Array, or Array-like Object. Received type " + typeof q);
            }
            function F(q) {
              if (typeof q != "number") throw new TypeError('"size" argument must be of type number');
              if (q < 0) throw new RangeError('The value "' + q + '" is invalid for option "size"');
            }
            function v(q) {
              return F(q), P(q < 0 ? 0 : 0 | Z(q));
            }
            function U(q) {
              const _ = q.length < 0 ? 0 : 0 | Z(q.length), L = P(_);
              for (let et = 0; et < _; et += 1) L[et] = 255 & q[et];
              return L;
            }
            function M(q, _, L) {
              if (_ < 0 || q.byteLength < _) throw new RangeError('"offset" is outside of buffer bounds');
              if (q.byteLength < _ + (L || 0)) throw new RangeError('"length" is outside of buffer bounds');
              let et;
              return et = _ === void 0 && L === void 0 ? new Uint8Array(q) : L === void 0 ? new Uint8Array(q, _) : new Uint8Array(q, _, L), Object.setPrototypeOf(et, k.prototype), et;
            }
            function Z(q) {
              if (q >= T) throw new RangeError("Attempt to allocate Buffer larger than maximum size: 0x" + T.toString(16) + " bytes");
              return 0 | q;
            }
            function D(q, _) {
              if (k.isBuffer(q)) return q.length;
              if (ArrayBuffer.isView(q) || z(q, ArrayBuffer)) return q.byteLength;
              if (typeof q != "string") throw new TypeError('The "string" argument must be one of type string, Buffer, or ArrayBuffer. Received type ' + typeof q);
              const L = q.length, et = arguments.length > 2 && arguments[2] === true;
              if (!et && L === 0) return 0;
              let St = false;
              for (; ; ) switch (_) {
                case "ascii":
                case "latin1":
                case "binary":
                  return L;
                case "utf8":
                case "utf-8":
                  return yt(q).length;
                case "ucs2":
                case "ucs-2":
                case "utf16le":
                case "utf-16le":
                  return 2 * L;
                case "hex":
                  return L >>> 1;
                case "base64":
                  return Mt(q).length;
                default:
                  if (St) return et ? -1 : yt(q).length;
                  _ = ("" + _).toLowerCase(), St = true;
              }
            }
            function V(q, _, L) {
              let et = false;
              if ((_ === void 0 || _ < 0) && (_ = 0), _ > this.length || ((L === void 0 || L > this.length) && (L = this.length), L <= 0) || (L >>>= 0) <= (_ >>>= 0)) return "";
              for (q || (q = "utf8"); ; ) switch (q) {
                case "hex":
                  return dt(this, _, L);
                case "utf8":
                case "utf-8":
                  return X(this, _, L);
                case "ascii":
                  return nt(this, _, L);
                case "latin1":
                case "binary":
                  return ft(this, _, L);
                case "base64":
                  return ot(this, _, L);
                case "ucs2":
                case "ucs-2":
                case "utf16le":
                case "utf-16le":
                  return Lt(this, _, L);
                default:
                  if (et) throw new TypeError("Unknown encoding: " + q);
                  q = (q + "").toLowerCase(), et = true;
              }
            }
            function S(q, _, L) {
              const et = q[_];
              q[_] = q[L], q[L] = et;
            }
            function x(q, _, L, et, St) {
              if (q.length === 0) return -1;
              if (typeof L == "string" ? (et = L, L = 0) : L > 2147483647 ? L = 2147483647 : L < -2147483648 && (L = -2147483648), J(L = +L) && (L = St ? 0 : q.length - 1), L < 0 && (L = q.length + L), L >= q.length) {
                if (St) return -1;
                L = q.length - 1;
              } else if (L < 0) {
                if (!St) return -1;
                L = 0;
              }
              if (typeof _ == "string" && (_ = k.from(_, et)), k.isBuffer(_)) return _.length === 0 ? -1 : B(q, _, L, et, St);
              if (typeof _ == "number") return _ &= 255, typeof Uint8Array.prototype.indexOf == "function" ? St ? Uint8Array.prototype.indexOf.call(q, _, L) : Uint8Array.prototype.lastIndexOf.call(q, _, L) : B(q, [_], L, et, St);
              throw new TypeError("val must be string, number or Buffer");
            }
            function B(q, _, L, et, St) {
              let kt, ct = 1, j = q.length, ut = _.length;
              if (et !== void 0 && ((et = String(et).toLowerCase()) === "ucs2" || et === "ucs-2" || et === "utf16le" || et === "utf-16le")) {
                if (q.length < 2 || _.length < 2) return -1;
                ct = 2, j /= 2, ut /= 2, L /= 2;
              }
              function gt($t, Ht) {
                return ct === 1 ? $t[Ht] : $t.readUInt16BE(Ht * ct);
              }
              if (St) {
                let $t = -1;
                for (kt = L; kt < j; kt++) if (gt(q, kt) === gt(_, $t === -1 ? 0 : kt - $t)) {
                  if ($t === -1 && ($t = kt), kt - $t + 1 === ut) return $t * ct;
                } else $t !== -1 && (kt -= kt - $t), $t = -1;
              } else for (L + ut > j && (L = j - ut), kt = L; kt >= 0; kt--) {
                let $t = true;
                for (let Ht = 0; Ht < ut; Ht++) if (gt(q, kt + Ht) !== gt(_, Ht)) {
                  $t = false;
                  break;
                }
                if ($t) return kt;
              }
              return -1;
            }
            function W(q, _, L, et) {
              L = Number(L) || 0;
              const St = q.length - L;
              et ? (et = Number(et)) > St && (et = St) : et = St;
              const kt = _.length;
              let ct;
              for (et > kt / 2 && (et = kt / 2), ct = 0; ct < et; ++ct) {
                const j = parseInt(_.substr(2 * ct, 2), 16);
                if (J(j)) return ct;
                q[L + ct] = j;
              }
              return ct;
            }
            function lt(q, _, L, et) {
              return O(yt(_, q.length - L), q, L, et);
            }
            function pt(q, _, L, et) {
              return O(function(St) {
                const kt = [];
                for (let ct = 0; ct < St.length; ++ct) kt.push(255 & St.charCodeAt(ct));
                return kt;
              }(_), q, L, et);
            }
            function at(q, _, L, et) {
              return O(Mt(_), q, L, et);
            }
            function rt(q, _, L, et) {
              return O(function(St, kt) {
                let ct, j, ut;
                const gt = [];
                for (let $t = 0; $t < St.length && !((kt -= 2) < 0); ++$t) ct = St.charCodeAt($t), j = ct >> 8, ut = ct % 256, gt.push(ut), gt.push(j);
                return gt;
              }(_, q.length - L), q, L, et);
            }
            function ot(q, _, L) {
              return _ === 0 && L === q.length ? m.fromByteArray(q) : m.fromByteArray(q.slice(_, L));
            }
            function X(q, _, L) {
              L = Math.min(q.length, L);
              const et = [];
              let St = _;
              for (; St < L; ) {
                const kt = q[St];
                let ct = null, j = kt > 239 ? 4 : kt > 223 ? 3 : kt > 191 ? 2 : 1;
                if (St + j <= L) {
                  let ut, gt, $t, Ht;
                  switch (j) {
                    case 1:
                      kt < 128 && (ct = kt);
                      break;
                    case 2:
                      ut = q[St + 1], (192 & ut) == 128 && (Ht = (31 & kt) << 6 | 63 & ut, Ht > 127 && (ct = Ht));
                      break;
                    case 3:
                      ut = q[St + 1], gt = q[St + 2], (192 & ut) == 128 && (192 & gt) == 128 && (Ht = (15 & kt) << 12 | (63 & ut) << 6 | 63 & gt, Ht > 2047 && (Ht < 55296 || Ht > 57343) && (ct = Ht));
                      break;
                    case 4:
                      ut = q[St + 1], gt = q[St + 2], $t = q[St + 3], (192 & ut) == 128 && (192 & gt) == 128 && (192 & $t) == 128 && (Ht = (15 & kt) << 18 | (63 & ut) << 12 | (63 & gt) << 6 | 63 & $t, Ht > 65535 && Ht < 1114112 && (ct = Ht));
                  }
                }
                ct === null ? (ct = 65533, j = 1) : ct > 65535 && (ct -= 65536, et.push(ct >>> 10 & 1023 | 55296), ct = 56320 | 1023 & ct), et.push(ct), St += j;
              }
              return function(kt) {
                const ct = kt.length;
                if (ct <= I) return String.fromCharCode.apply(String, kt);
                let j = "", ut = 0;
                for (; ut < ct; ) j += String.fromCharCode.apply(String, kt.slice(ut, ut += I));
                return j;
              }(et);
            }
            g.kMaxLength = T, k.TYPED_ARRAY_SUPPORT = function() {
              try {
                const q = new Uint8Array(1), _ = { foo: function() {
                  return 42;
                } };
                return Object.setPrototypeOf(_, Uint8Array.prototype), Object.setPrototypeOf(q, _), q.foo() === 42;
              } catch {
                return false;
              }
            }(), k.TYPED_ARRAY_SUPPORT || h === void 0 || typeof h.error != "function" || h.error("This browser lacks typed array (Uint8Array) support which is required by `buffer` v5.x. Use `buffer` v4.x if you require old browser support."), Object.defineProperty(k.prototype, "parent", { enumerable: true, get: function() {
              if (k.isBuffer(this)) return this.buffer;
            } }), Object.defineProperty(k.prototype, "offset", { enumerable: true, get: function() {
              if (k.isBuffer(this)) return this.byteOffset;
            } }), k.poolSize = 8192, k.from = function(q, _, L) {
              return R(q, _, L);
            }, Object.setPrototypeOf(k.prototype, Uint8Array.prototype), Object.setPrototypeOf(k, Uint8Array), k.alloc = function(q, _, L) {
              return function(et, St, kt) {
                return F(et), et <= 0 ? P(et) : St !== void 0 ? typeof kt == "string" ? P(et).fill(St, kt) : P(et).fill(St) : P(et);
              }(q, _, L);
            }, k.allocUnsafe = function(q) {
              return v(q);
            }, k.allocUnsafeSlow = function(q) {
              return v(q);
            }, k.isBuffer = function(q) {
              return q != null && q._isBuffer === true && q !== k.prototype;
            }, k.compare = function(q, _) {
              if (z(q, Uint8Array) && (q = k.from(q, q.offset, q.byteLength)), z(_, Uint8Array) && (_ = k.from(_, _.offset, _.byteLength)), !k.isBuffer(q) || !k.isBuffer(_)) throw new TypeError('The "buf1", "buf2" arguments must be one of type Buffer or Uint8Array');
              if (q === _) return 0;
              let L = q.length, et = _.length;
              for (let St = 0, kt = Math.min(L, et); St < kt; ++St) if (q[St] !== _[St]) {
                L = q[St], et = _[St];
                break;
              }
              return L < et ? -1 : et < L ? 1 : 0;
            }, k.isEncoding = function(q) {
              switch (String(q).toLowerCase()) {
                case "hex":
                case "utf8":
                case "utf-8":
                case "ascii":
                case "latin1":
                case "binary":
                case "base64":
                case "ucs2":
                case "ucs-2":
                case "utf16le":
                case "utf-16le":
                  return true;
                default:
                  return false;
              }
            }, k.concat = function(q, _) {
              if (!Array.isArray(q)) throw new TypeError('"list" argument must be an Array of Buffers');
              if (q.length === 0) return k.alloc(0);
              let L;
              if (_ === void 0) for (_ = 0, L = 0; L < q.length; ++L) _ += q[L].length;
              const et = k.allocUnsafe(_);
              let St = 0;
              for (L = 0; L < q.length; ++L) {
                let kt = q[L];
                if (z(kt, Uint8Array)) St + kt.length > et.length ? (k.isBuffer(kt) || (kt = k.from(kt)), kt.copy(et, St)) : Uint8Array.prototype.set.call(et, kt, St);
                else {
                  if (!k.isBuffer(kt)) throw new TypeError('"list" argument must be an Array of Buffers');
                  kt.copy(et, St);
                }
                St += kt.length;
              }
              return et;
            }, k.byteLength = D, k.prototype._isBuffer = true, k.prototype.swap16 = function() {
              const q = this.length;
              if (q % 2 != 0) throw new RangeError("Buffer size must be a multiple of 16-bits");
              for (let _ = 0; _ < q; _ += 2) S(this, _, _ + 1);
              return this;
            }, k.prototype.swap32 = function() {
              const q = this.length;
              if (q % 4 != 0) throw new RangeError("Buffer size must be a multiple of 32-bits");
              for (let _ = 0; _ < q; _ += 4) S(this, _, _ + 3), S(this, _ + 1, _ + 2);
              return this;
            }, k.prototype.swap64 = function() {
              const q = this.length;
              if (q % 8 != 0) throw new RangeError("Buffer size must be a multiple of 64-bits");
              for (let _ = 0; _ < q; _ += 8) S(this, _, _ + 7), S(this, _ + 1, _ + 6), S(this, _ + 2, _ + 5), S(this, _ + 3, _ + 4);
              return this;
            }, k.prototype.toString = function() {
              const q = this.length;
              return q === 0 ? "" : arguments.length === 0 ? X(this, 0, q) : V.apply(this, arguments);
            }, k.prototype.toLocaleString = k.prototype.toString, k.prototype.equals = function(q) {
              if (!k.isBuffer(q)) throw new TypeError("Argument must be a Buffer");
              return this === q || k.compare(this, q) === 0;
            }, k.prototype.inspect = function() {
              let q = "";
              const _ = g.INSPECT_MAX_BYTES;
              return q = this.toString("hex", 0, _).replace(/(.{2})/g, "$1 ").trim(), this.length > _ && (q += " ... "), "<Buffer " + q + ">";
            }, w && (k.prototype[w] = k.prototype.inspect), k.prototype.compare = function(q, _, L, et, St) {
              if (z(q, Uint8Array) && (q = k.from(q, q.offset, q.byteLength)), !k.isBuffer(q)) throw new TypeError('The "target" argument must be one of type Buffer or Uint8Array. Received type ' + typeof q);
              if (_ === void 0 && (_ = 0), L === void 0 && (L = q ? q.length : 0), et === void 0 && (et = 0), St === void 0 && (St = this.length), _ < 0 || L > q.length || et < 0 || St > this.length) throw new RangeError("out of range index");
              if (et >= St && _ >= L) return 0;
              if (et >= St) return -1;
              if (_ >= L) return 1;
              if (this === q) return 0;
              let kt = (St >>>= 0) - (et >>>= 0), ct = (L >>>= 0) - (_ >>>= 0);
              const j = Math.min(kt, ct), ut = this.slice(et, St), gt = q.slice(_, L);
              for (let $t = 0; $t < j; ++$t) if (ut[$t] !== gt[$t]) {
                kt = ut[$t], ct = gt[$t];
                break;
              }
              return kt < ct ? -1 : ct < kt ? 1 : 0;
            }, k.prototype.includes = function(q, _, L) {
              return this.indexOf(q, _, L) !== -1;
            }, k.prototype.indexOf = function(q, _, L) {
              return x(this, q, _, L, true);
            }, k.prototype.lastIndexOf = function(q, _, L) {
              return x(this, q, _, L, false);
            }, k.prototype.write = function(q, _, L, et) {
              if (_ === void 0) et = "utf8", L = this.length, _ = 0;
              else if (L === void 0 && typeof _ == "string") et = _, L = this.length, _ = 0;
              else {
                if (!isFinite(_)) throw new Error("Buffer.write(string, encoding, offset[, length]) is no longer supported");
                _ >>>= 0, isFinite(L) ? (L >>>= 0, et === void 0 && (et = "utf8")) : (et = L, L = void 0);
              }
              const St = this.length - _;
              if ((L === void 0 || L > St) && (L = St), q.length > 0 && (L < 0 || _ < 0) || _ > this.length) throw new RangeError("Attempt to write outside buffer bounds");
              et || (et = "utf8");
              let kt = false;
              for (; ; ) switch (et) {
                case "hex":
                  return W(this, q, _, L);
                case "utf8":
                case "utf-8":
                  return lt(this, q, _, L);
                case "ascii":
                case "latin1":
                case "binary":
                  return pt(this, q, _, L);
                case "base64":
                  return at(this, q, _, L);
                case "ucs2":
                case "ucs-2":
                case "utf16le":
                case "utf-16le":
                  return rt(this, q, _, L);
                default:
                  if (kt) throw new TypeError("Unknown encoding: " + et);
                  et = ("" + et).toLowerCase(), kt = true;
              }
            }, k.prototype.toJSON = function() {
              return { type: "Buffer", data: Array.prototype.slice.call(this._arr || this, 0) };
            };
            const I = 4096;
            function nt(q, _, L) {
              let et = "";
              L = Math.min(q.length, L);
              for (let St = _; St < L; ++St) et += String.fromCharCode(127 & q[St]);
              return et;
            }
            function ft(q, _, L) {
              let et = "";
              L = Math.min(q.length, L);
              for (let St = _; St < L; ++St) et += String.fromCharCode(q[St]);
              return et;
            }
            function dt(q, _, L) {
              const et = q.length;
              (!_ || _ < 0) && (_ = 0), (!L || L < 0 || L > et) && (L = et);
              let St = "";
              for (let kt = _; kt < L; ++kt) St += tt[q[kt]];
              return St;
            }
            function Lt(q, _, L) {
              const et = q.slice(_, L);
              let St = "";
              for (let kt = 0; kt < et.length - 1; kt += 2) St += String.fromCharCode(et[kt] + 256 * et[kt + 1]);
              return St;
            }
            function $(q, _, L) {
              if (q % 1 != 0 || q < 0) throw new RangeError("offset is not uint");
              if (q + _ > L) throw new RangeError("Trying to access beyond buffer length");
            }
            function it(q, _, L, et, St, kt) {
              if (!k.isBuffer(q)) throw new TypeError('"buffer" argument must be a Buffer instance');
              if (_ > St || _ < kt) throw new RangeError('"value" argument is out of bounds');
              if (L + et > q.length) throw new RangeError("Index out of range");
            }
            function mt(q, _, L, et, St) {
              Ut(_, et, St, q, L, 7);
              let kt = Number(_ & BigInt(4294967295));
              q[L++] = kt, kt >>= 8, q[L++] = kt, kt >>= 8, q[L++] = kt, kt >>= 8, q[L++] = kt;
              let ct = Number(_ >> BigInt(32) & BigInt(4294967295));
              return q[L++] = ct, ct >>= 8, q[L++] = ct, ct >>= 8, q[L++] = ct, ct >>= 8, q[L++] = ct, L;
            }
            function Ot(q, _, L, et, St) {
              Ut(_, et, St, q, L, 7);
              let kt = Number(_ & BigInt(4294967295));
              q[L + 7] = kt, kt >>= 8, q[L + 6] = kt, kt >>= 8, q[L + 5] = kt, kt >>= 8, q[L + 4] = kt;
              let ct = Number(_ >> BigInt(32) & BigInt(4294967295));
              return q[L + 3] = ct, ct >>= 8, q[L + 2] = ct, ct >>= 8, q[L + 1] = ct, ct >>= 8, q[L] = ct, L + 8;
            }
            function bt(q, _, L, et, St, kt) {
              if (L + et > q.length) throw new RangeError("Index out of range");
              if (L < 0) throw new RangeError("Index out of range");
            }
            function xt(q, _, L, et, St) {
              return _ = +_, L >>>= 0, St || bt(q, 0, L, 4), c.write(q, _, L, et, 23, 4), L + 4;
            }
            function Ct(q, _, L, et, St) {
              return _ = +_, L >>>= 0, St || bt(q, 0, L, 8), c.write(q, _, L, et, 52, 8), L + 8;
            }
            k.prototype.slice = function(q, _) {
              const L = this.length;
              (q = ~~q) < 0 ? (q += L) < 0 && (q = 0) : q > L && (q = L), (_ = _ === void 0 ? L : ~~_) < 0 ? (_ += L) < 0 && (_ = 0) : _ > L && (_ = L), _ < q && (_ = q);
              const et = this.subarray(q, _);
              return Object.setPrototypeOf(et, k.prototype), et;
            }, k.prototype.readUintLE = k.prototype.readUIntLE = function(q, _, L) {
              q >>>= 0, _ >>>= 0, L || $(q, _, this.length);
              let et = this[q], St = 1, kt = 0;
              for (; ++kt < _ && (St *= 256); ) et += this[q + kt] * St;
              return et;
            }, k.prototype.readUintBE = k.prototype.readUIntBE = function(q, _, L) {
              q >>>= 0, _ >>>= 0, L || $(q, _, this.length);
              let et = this[q + --_], St = 1;
              for (; _ > 0 && (St *= 256); ) et += this[q + --_] * St;
              return et;
            }, k.prototype.readUint8 = k.prototype.readUInt8 = function(q, _) {
              return q >>>= 0, _ || $(q, 1, this.length), this[q];
            }, k.prototype.readUint16LE = k.prototype.readUInt16LE = function(q, _) {
              return q >>>= 0, _ || $(q, 2, this.length), this[q] | this[q + 1] << 8;
            }, k.prototype.readUint16BE = k.prototype.readUInt16BE = function(q, _) {
              return q >>>= 0, _ || $(q, 2, this.length), this[q] << 8 | this[q + 1];
            }, k.prototype.readUint32LE = k.prototype.readUInt32LE = function(q, _) {
              return q >>>= 0, _ || $(q, 4, this.length), (this[q] | this[q + 1] << 8 | this[q + 2] << 16) + 16777216 * this[q + 3];
            }, k.prototype.readUint32BE = k.prototype.readUInt32BE = function(q, _) {
              return q >>>= 0, _ || $(q, 4, this.length), 16777216 * this[q] + (this[q + 1] << 16 | this[q + 2] << 8 | this[q + 3]);
            }, k.prototype.readBigUInt64LE = H(function(q) {
              Vt(q >>>= 0, "offset");
              const _ = this[q], L = this[q + 7];
              _ !== void 0 && L !== void 0 || oe(q, this.length - 8);
              const et = _ + 256 * this[++q] + 65536 * this[++q] + this[++q] * 2 ** 24, St = this[++q] + 256 * this[++q] + 65536 * this[++q] + L * 2 ** 24;
              return BigInt(et) + (BigInt(St) << BigInt(32));
            }), k.prototype.readBigUInt64BE = H(function(q) {
              Vt(q >>>= 0, "offset");
              const _ = this[q], L = this[q + 7];
              _ !== void 0 && L !== void 0 || oe(q, this.length - 8);
              const et = _ * 2 ** 24 + 65536 * this[++q] + 256 * this[++q] + this[++q], St = this[++q] * 2 ** 24 + 65536 * this[++q] + 256 * this[++q] + L;
              return (BigInt(et) << BigInt(32)) + BigInt(St);
            }), k.prototype.readIntLE = function(q, _, L) {
              q >>>= 0, _ >>>= 0, L || $(q, _, this.length);
              let et = this[q], St = 1, kt = 0;
              for (; ++kt < _ && (St *= 256); ) et += this[q + kt] * St;
              return St *= 128, et >= St && (et -= Math.pow(2, 8 * _)), et;
            }, k.prototype.readIntBE = function(q, _, L) {
              q >>>= 0, _ >>>= 0, L || $(q, _, this.length);
              let et = _, St = 1, kt = this[q + --et];
              for (; et > 0 && (St *= 256); ) kt += this[q + --et] * St;
              return St *= 128, kt >= St && (kt -= Math.pow(2, 8 * _)), kt;
            }, k.prototype.readInt8 = function(q, _) {
              return q >>>= 0, _ || $(q, 1, this.length), 128 & this[q] ? -1 * (255 - this[q] + 1) : this[q];
            }, k.prototype.readInt16LE = function(q, _) {
              q >>>= 0, _ || $(q, 2, this.length);
              const L = this[q] | this[q + 1] << 8;
              return 32768 & L ? 4294901760 | L : L;
            }, k.prototype.readInt16BE = function(q, _) {
              q >>>= 0, _ || $(q, 2, this.length);
              const L = this[q + 1] | this[q] << 8;
              return 32768 & L ? 4294901760 | L : L;
            }, k.prototype.readInt32LE = function(q, _) {
              return q >>>= 0, _ || $(q, 4, this.length), this[q] | this[q + 1] << 8 | this[q + 2] << 16 | this[q + 3] << 24;
            }, k.prototype.readInt32BE = function(q, _) {
              return q >>>= 0, _ || $(q, 4, this.length), this[q] << 24 | this[q + 1] << 16 | this[q + 2] << 8 | this[q + 3];
            }, k.prototype.readBigInt64LE = H(function(q) {
              Vt(q >>>= 0, "offset");
              const _ = this[q], L = this[q + 7];
              _ !== void 0 && L !== void 0 || oe(q, this.length - 8);
              const et = this[q + 4] + 256 * this[q + 5] + 65536 * this[q + 6] + (L << 24);
              return (BigInt(et) << BigInt(32)) + BigInt(_ + 256 * this[++q] + 65536 * this[++q] + this[++q] * 16777216);
            }), k.prototype.readBigInt64BE = H(function(q) {
              Vt(q >>>= 0, "offset");
              const _ = this[q], L = this[q + 7];
              _ !== void 0 && L !== void 0 || oe(q, this.length - 8);
              const et = (_ << 24) + 65536 * this[++q] + 256 * this[++q] + this[++q];
              return (BigInt(et) << BigInt(32)) + BigInt(this[++q] * 16777216 + 65536 * this[++q] + 256 * this[++q] + L);
            }), k.prototype.readFloatLE = function(q, _) {
              return q >>>= 0, _ || $(q, 4, this.length), c.read(this, q, true, 23, 4);
            }, k.prototype.readFloatBE = function(q, _) {
              return q >>>= 0, _ || $(q, 4, this.length), c.read(this, q, false, 23, 4);
            }, k.prototype.readDoubleLE = function(q, _) {
              return q >>>= 0, _ || $(q, 8, this.length), c.read(this, q, true, 52, 8);
            }, k.prototype.readDoubleBE = function(q, _) {
              return q >>>= 0, _ || $(q, 8, this.length), c.read(this, q, false, 52, 8);
            }, k.prototype.writeUintLE = k.prototype.writeUIntLE = function(q, _, L, et) {
              q = +q, _ >>>= 0, L >>>= 0, et || it(this, q, _, L, Math.pow(2, 8 * L) - 1, 0);
              let St = 1, kt = 0;
              for (this[_] = 255 & q; ++kt < L && (St *= 256); ) this[_ + kt] = q / St & 255;
              return _ + L;
            }, k.prototype.writeUintBE = k.prototype.writeUIntBE = function(q, _, L, et) {
              q = +q, _ >>>= 0, L >>>= 0, et || it(this, q, _, L, Math.pow(2, 8 * L) - 1, 0);
              let St = L - 1, kt = 1;
              for (this[_ + St] = 255 & q; --St >= 0 && (kt *= 256); ) this[_ + St] = q / kt & 255;
              return _ + L;
            }, k.prototype.writeUint8 = k.prototype.writeUInt8 = function(q, _, L) {
              return q = +q, _ >>>= 0, L || it(this, q, _, 1, 255, 0), this[_] = 255 & q, _ + 1;
            }, k.prototype.writeUint16LE = k.prototype.writeUInt16LE = function(q, _, L) {
              return q = +q, _ >>>= 0, L || it(this, q, _, 2, 65535, 0), this[_] = 255 & q, this[_ + 1] = q >>> 8, _ + 2;
            }, k.prototype.writeUint16BE = k.prototype.writeUInt16BE = function(q, _, L) {
              return q = +q, _ >>>= 0, L || it(this, q, _, 2, 65535, 0), this[_] = q >>> 8, this[_ + 1] = 255 & q, _ + 2;
            }, k.prototype.writeUint32LE = k.prototype.writeUInt32LE = function(q, _, L) {
              return q = +q, _ >>>= 0, L || it(this, q, _, 4, 4294967295, 0), this[_ + 3] = q >>> 24, this[_ + 2] = q >>> 16, this[_ + 1] = q >>> 8, this[_] = 255 & q, _ + 4;
            }, k.prototype.writeUint32BE = k.prototype.writeUInt32BE = function(q, _, L) {
              return q = +q, _ >>>= 0, L || it(this, q, _, 4, 4294967295, 0), this[_] = q >>> 24, this[_ + 1] = q >>> 16, this[_ + 2] = q >>> 8, this[_ + 3] = 255 & q, _ + 4;
            }, k.prototype.writeBigUInt64LE = H(function(q, _ = 0) {
              return mt(this, q, _, BigInt(0), BigInt("0xffffffffffffffff"));
            }), k.prototype.writeBigUInt64BE = H(function(q, _ = 0) {
              return Ot(this, q, _, BigInt(0), BigInt("0xffffffffffffffff"));
            }), k.prototype.writeIntLE = function(q, _, L, et) {
              if (q = +q, _ >>>= 0, !et) {
                const j = Math.pow(2, 8 * L - 1);
                it(this, q, _, L, j - 1, -j);
              }
              let St = 0, kt = 1, ct = 0;
              for (this[_] = 255 & q; ++St < L && (kt *= 256); ) q < 0 && ct === 0 && this[_ + St - 1] !== 0 && (ct = 1), this[_ + St] = (q / kt | 0) - ct & 255;
              return _ + L;
            }, k.prototype.writeIntBE = function(q, _, L, et) {
              if (q = +q, _ >>>= 0, !et) {
                const j = Math.pow(2, 8 * L - 1);
                it(this, q, _, L, j - 1, -j);
              }
              let St = L - 1, kt = 1, ct = 0;
              for (this[_ + St] = 255 & q; --St >= 0 && (kt *= 256); ) q < 0 && ct === 0 && this[_ + St + 1] !== 0 && (ct = 1), this[_ + St] = (q / kt | 0) - ct & 255;
              return _ + L;
            }, k.prototype.writeInt8 = function(q, _, L) {
              return q = +q, _ >>>= 0, L || it(this, q, _, 1, 127, -128), q < 0 && (q = 255 + q + 1), this[_] = 255 & q, _ + 1;
            }, k.prototype.writeInt16LE = function(q, _, L) {
              return q = +q, _ >>>= 0, L || it(this, q, _, 2, 32767, -32768), this[_] = 255 & q, this[_ + 1] = q >>> 8, _ + 2;
            }, k.prototype.writeInt16BE = function(q, _, L) {
              return q = +q, _ >>>= 0, L || it(this, q, _, 2, 32767, -32768), this[_] = q >>> 8, this[_ + 1] = 255 & q, _ + 2;
            }, k.prototype.writeInt32LE = function(q, _, L) {
              return q = +q, _ >>>= 0, L || it(this, q, _, 4, 2147483647, -2147483648), this[_] = 255 & q, this[_ + 1] = q >>> 8, this[_ + 2] = q >>> 16, this[_ + 3] = q >>> 24, _ + 4;
            }, k.prototype.writeInt32BE = function(q, _, L) {
              return q = +q, _ >>>= 0, L || it(this, q, _, 4, 2147483647, -2147483648), q < 0 && (q = 4294967295 + q + 1), this[_] = q >>> 24, this[_ + 1] = q >>> 16, this[_ + 2] = q >>> 8, this[_ + 3] = 255 & q, _ + 4;
            }, k.prototype.writeBigInt64LE = H(function(q, _ = 0) {
              return mt(this, q, _, -BigInt("0x8000000000000000"), BigInt("0x7fffffffffffffff"));
            }), k.prototype.writeBigInt64BE = H(function(q, _ = 0) {
              return Ot(this, q, _, -BigInt("0x8000000000000000"), BigInt("0x7fffffffffffffff"));
            }), k.prototype.writeFloatLE = function(q, _, L) {
              return xt(this, q, _, true, L);
            }, k.prototype.writeFloatBE = function(q, _, L) {
              return xt(this, q, _, false, L);
            }, k.prototype.writeDoubleLE = function(q, _, L) {
              return Ct(this, q, _, true, L);
            }, k.prototype.writeDoubleBE = function(q, _, L) {
              return Ct(this, q, _, false, L);
            }, k.prototype.copy = function(q, _, L, et) {
              if (!k.isBuffer(q)) throw new TypeError("argument should be a Buffer");
              if (L || (L = 0), et || et === 0 || (et = this.length), _ >= q.length && (_ = q.length), _ || (_ = 0), et > 0 && et < L && (et = L), et === L || q.length === 0 || this.length === 0) return 0;
              if (_ < 0) throw new RangeError("targetStart out of bounds");
              if (L < 0 || L >= this.length) throw new RangeError("Index out of range");
              if (et < 0) throw new RangeError("sourceEnd out of bounds");
              et > this.length && (et = this.length), q.length - _ < et - L && (et = q.length - _ + L);
              const St = et - L;
              return this === q && typeof Uint8Array.prototype.copyWithin == "function" ? this.copyWithin(_, L, et) : Uint8Array.prototype.set.call(q, this.subarray(L, et), _), St;
            }, k.prototype.fill = function(q, _, L, et) {
              if (typeof q == "string") {
                if (typeof _ == "string" ? (et = _, _ = 0, L = this.length) : typeof L == "string" && (et = L, L = this.length), et !== void 0 && typeof et != "string") throw new TypeError("encoding must be a string");
                if (typeof et == "string" && !k.isEncoding(et)) throw new TypeError("Unknown encoding: " + et);
                if (q.length === 1) {
                  const kt = q.charCodeAt(0);
                  (et === "utf8" && kt < 128 || et === "latin1") && (q = kt);
                }
              } else typeof q == "number" ? q &= 255 : typeof q == "boolean" && (q = Number(q));
              if (_ < 0 || this.length < _ || this.length < L) throw new RangeError("Out of range index");
              if (L <= _) return this;
              let St;
              if (_ >>>= 0, L = L === void 0 ? this.length : L >>> 0, q || (q = 0), typeof q == "number") for (St = _; St < L; ++St) this[St] = q;
              else {
                const kt = k.isBuffer(q) ? q : k.from(q, et), ct = kt.length;
                if (ct === 0) throw new TypeError('The value "' + q + '" is invalid for argument "value"');
                for (St = 0; St < L - _; ++St) this[St + _] = kt[St % ct];
              }
              return this;
            };
            const Tt = {};
            function Bt(q, _, L) {
              Tt[q] = class extends L {
                constructor() {
                  super(), Object.defineProperty(this, "message", { value: _.apply(this, arguments), writable: true, configurable: true }), this.name = `${this.name} [${q}]`, this.stack, delete this.name;
                }
                get code() {
                  return q;
                }
                set code(et) {
                  Object.defineProperty(this, "code", { configurable: true, enumerable: true, value: et, writable: true });
                }
                toString() {
                  return `${this.name} [${q}]: ${this.message}`;
                }
              };
            }
            function At(q) {
              let _ = "", L = q.length;
              const et = q[0] === "-" ? 1 : 0;
              for (; L >= et + 4; L -= 3) _ = `_${q.slice(L - 3, L)}${_}`;
              return `${q.slice(0, L)}${_}`;
            }
            function Ut(q, _, L, et, St, kt) {
              if (q > L || q < _) {
                const ct = typeof _ == "bigint" ? "n" : "";
                let j;
                throw j = _ === 0 || _ === BigInt(0) ? `>= 0${ct} and < 2${ct} ** ${8 * (kt + 1)}${ct}` : `>= -(2${ct} ** ${8 * (kt + 1) - 1}${ct}) and < 2 ** ${8 * (kt + 1) - 1}${ct}`, new Tt.ERR_OUT_OF_RANGE("value", j, q);
              }
              (function(ct, j, ut) {
                Vt(j, "offset"), ct[j] !== void 0 && ct[j + ut] !== void 0 || oe(j, ct.length - (ut + 1));
              })(et, St, kt);
            }
            function Vt(q, _) {
              if (typeof q != "number") throw new Tt.ERR_INVALID_ARG_TYPE(_, "number", q);
            }
            function oe(q, _, L) {
              throw Math.floor(q) !== q ? (Vt(q, L), new Tt.ERR_OUT_OF_RANGE("offset", "an integer", q)) : _ < 0 ? new Tt.ERR_BUFFER_OUT_OF_BOUNDS() : new Tt.ERR_OUT_OF_RANGE("offset", `>= 0 and <= ${_}`, q);
            }
            Bt("ERR_BUFFER_OUT_OF_BOUNDS", function(q) {
              return q ? `${q} is outside of buffer bounds` : "Attempt to access memory outside buffer bounds";
            }, RangeError), Bt("ERR_INVALID_ARG_TYPE", function(q, _) {
              return `The "${q}" argument must be of type number. Received type ${typeof _}`;
            }, TypeError), Bt("ERR_OUT_OF_RANGE", function(q, _, L) {
              let et = `The value of "${q}" is out of range.`, St = L;
              return Number.isInteger(L) && Math.abs(L) > 4294967296 ? St = At(String(L)) : typeof L == "bigint" && (St = String(L), (L > BigInt(2) ** BigInt(32) || L < -(BigInt(2) ** BigInt(32))) && (St = At(St)), St += "n"), et += ` It must be ${_}. Received ${St}`, et;
            }, RangeError);
            const te = /[^+/0-9A-Za-z-_]/g;
            function yt(q, _) {
              let L;
              _ = _ || 1 / 0;
              const et = q.length;
              let St = null;
              const kt = [];
              for (let ct = 0; ct < et; ++ct) {
                if (L = q.charCodeAt(ct), L > 55295 && L < 57344) {
                  if (!St) {
                    if (L > 56319) {
                      (_ -= 3) > -1 && kt.push(239, 191, 189);
                      continue;
                    }
                    if (ct + 1 === et) {
                      (_ -= 3) > -1 && kt.push(239, 191, 189);
                      continue;
                    }
                    St = L;
                    continue;
                  }
                  if (L < 56320) {
                    (_ -= 3) > -1 && kt.push(239, 191, 189), St = L;
                    continue;
                  }
                  L = 65536 + (St - 55296 << 10 | L - 56320);
                } else St && (_ -= 3) > -1 && kt.push(239, 191, 189);
                if (St = null, L < 128) {
                  if ((_ -= 1) < 0) break;
                  kt.push(L);
                } else if (L < 2048) {
                  if ((_ -= 2) < 0) break;
                  kt.push(L >> 6 | 192, 63 & L | 128);
                } else if (L < 65536) {
                  if ((_ -= 3) < 0) break;
                  kt.push(L >> 12 | 224, L >> 6 & 63 | 128, 63 & L | 128);
                } else {
                  if (!(L < 1114112)) throw new Error("Invalid code point");
                  if ((_ -= 4) < 0) break;
                  kt.push(L >> 18 | 240, L >> 12 & 63 | 128, L >> 6 & 63 | 128, 63 & L | 128);
                }
              }
              return kt;
            }
            function Mt(q) {
              return m.toByteArray(function(_) {
                if ((_ = (_ = _.split("=")[0]).trim().replace(te, "")).length < 2) return "";
                for (; _.length % 4 != 0; ) _ += "=";
                return _;
              }(q));
            }
            function O(q, _, L, et) {
              let St;
              for (St = 0; St < et && !(St + L >= _.length || St >= q.length); ++St) _[St + L] = q[St];
              return St;
            }
            function z(q, _) {
              return q instanceof _ || q != null && q.constructor != null && q.constructor.name != null && q.constructor.name === _.name;
            }
            function J(q) {
              return q != q;
            }
            const tt = function() {
              const q = "0123456789abcdef", _ = new Array(256);
              for (let L = 0; L < 16; ++L) {
                const et = 16 * L;
                for (let St = 0; St < 16; ++St) _[et + St] = q[L] + q[St];
              }
              return _;
            }();
            function H(q) {
              return typeof BigInt > "u" ? K : q;
            }
            function K() {
              throw new Error("BigInt not supported");
            }
          }, 8403: (p, g, b) => {
            var h = b(1189), m = b(1333)(), c = b(6556), w = b(9612), T = c("Array.prototype.push"), P = c("Object.prototype.propertyIsEnumerable"), k = m ? w.getOwnPropertySymbols : null;
            p.exports = function(R, F) {
              if (R == null) throw new TypeError("target must be an object");
              var v = w(R);
              if (arguments.length === 1) return v;
              for (var U = 1; U < arguments.length; ++U) {
                var M = w(arguments[U]), Z = h(M), D = m && (w.getOwnPropertySymbols || k);
                if (D) for (var V = D(M), S = 0; S < V.length; ++S) {
                  var x = V[S];
                  P(M, x) && T(Z, x);
                }
                for (var B = 0; B < Z.length; ++B) {
                  var W = Z[B];
                  if (P(M, W)) {
                    var lt = M[W];
                    v[W] = lt;
                  }
                }
              }
              return v;
            };
          }, 8452: (p, g, b) => {
            var h = b(1189), m = typeof Symbol == "function" && typeof Symbol("foo") == "symbol", c = Object.prototype.toString, w = Array.prototype.concat, T = b(41), P = b(592)(), k = function(F, v, U, M) {
              if (v in F) {
                if (M === true) {
                  if (F[v] === U) return;
                } else if (typeof (Z = M) != "function" || c.call(Z) !== "[object Function]" || !M()) return;
              }
              var Z;
              P ? T(F, v, U, true) : T(F, v, U);
            }, R = function(F, v) {
              var U = arguments.length > 2 ? arguments[2] : {}, M = h(v);
              m && (M = w.call(M, Object.getOwnPropertySymbols(v)));
              for (var Z = 0; Z < M.length; Z += 1) k(F, M[Z], v[M[Z]], U[M[Z]]);
            };
            R.supportsDescriptors = !!P, p.exports = R;
          }, 8648: (p) => {
            p.exports = typeof Reflect < "u" && Reflect.getPrototypeOf || null;
          }, 8875: (p, g, b) => {
            var h;
            if (!Object.keys) {
              var m = Object.prototype.hasOwnProperty, c = Object.prototype.toString, w = b(1093), T = Object.prototype.propertyIsEnumerable, P = !T.call({ toString: null }, "toString"), k = T.call(function() {
              }, "prototype"), R = ["toString", "toLocaleString", "valueOf", "hasOwnProperty", "isPrototypeOf", "propertyIsEnumerable", "constructor"], F = function(M) {
                var Z = M.constructor;
                return Z && Z.prototype === M;
              }, v = { $applicationCache: true, $console: true, $external: true, $frame: true, $frameElement: true, $frames: true, $innerHeight: true, $innerWidth: true, $onmozfullscreenchange: true, $onmozfullscreenerror: true, $outerHeight: true, $outerWidth: true, $pageXOffset: true, $pageYOffset: true, $parent: true, $scrollLeft: true, $scrollTop: true, $scrollX: true, $scrollY: true, $self: true, $webkitIndexedDB: true, $webkitStorageInfo: true, $window: true }, U = function() {
                if (typeof window > "u") return false;
                for (var M in window) try {
                  if (!v["$" + M] && m.call(window, M) && window[M] !== null && typeof window[M] == "object") try {
                    F(window[M]);
                  } catch {
                    return true;
                  }
                } catch {
                  return true;
                }
                return false;
              }();
              h = function(M) {
                var Z = M !== null && typeof M == "object", D = c.call(M) === "[object Function]", V = w(M), S = Z && c.call(M) === "[object String]", x = [];
                if (!Z && !D && !V) throw new TypeError("Object.keys called on a non-object");
                var B = k && D;
                if (S && M.length > 0 && !m.call(M, 0)) for (var W = 0; W < M.length; ++W) x.push(String(W));
                if (V && M.length > 0) for (var lt = 0; lt < M.length; ++lt) x.push(String(lt));
                else for (var pt in M) B && pt === "prototype" || !m.call(M, pt) || x.push(String(pt));
                if (P) for (var at = function(ot) {
                  if (typeof window > "u" || !U) return F(ot);
                  try {
                    return F(ot);
                  } catch {
                    return false;
                  }
                }(M), rt = 0; rt < R.length; ++rt) at && R[rt] === "constructor" || !m.call(M, R[rt]) || x.push(R[rt]);
                return x;
              };
            }
            p.exports = h;
          }, 8968: (p) => {
            p.exports = Math.floor;
          }, 9032: (p, g, b) => {
            var h = b(7244), m = b(8184), c = b(5767), w = b(5680);
            function T($) {
              return $.call.bind($);
            }
            var P = typeof BigInt < "u", k = typeof Symbol < "u", R = T(Object.prototype.toString), F = T(Number.prototype.valueOf), v = T(String.prototype.valueOf), U = T(Boolean.prototype.valueOf);
            if (P) var M = T(BigInt.prototype.valueOf);
            if (k) var Z = T(Symbol.prototype.valueOf);
            function D($, it) {
              if (typeof $ != "object") return false;
              try {
                return it($), true;
              } catch {
                return false;
              }
            }
            function V($) {
              return R($) === "[object Map]";
            }
            function S($) {
              return R($) === "[object Set]";
            }
            function x($) {
              return R($) === "[object WeakMap]";
            }
            function B($) {
              return R($) === "[object WeakSet]";
            }
            function W($) {
              return R($) === "[object ArrayBuffer]";
            }
            function lt($) {
              return typeof ArrayBuffer < "u" && (W.working ? W($) : $ instanceof ArrayBuffer);
            }
            function pt($) {
              return R($) === "[object DataView]";
            }
            function at($) {
              return typeof DataView < "u" && (pt.working ? pt($) : $ instanceof DataView);
            }
            g.isArgumentsObject = h, g.isGeneratorFunction = m, g.isTypedArray = w, g.isPromise = function($) {
              return typeof Promise < "u" && $ instanceof Promise || $ !== null && typeof $ == "object" && typeof $.then == "function" && typeof $.catch == "function";
            }, g.isArrayBufferView = function($) {
              return typeof ArrayBuffer < "u" && ArrayBuffer.isView ? ArrayBuffer.isView($) : w($) || at($);
            }, g.isUint8Array = function($) {
              return c($) === "Uint8Array";
            }, g.isUint8ClampedArray = function($) {
              return c($) === "Uint8ClampedArray";
            }, g.isUint16Array = function($) {
              return c($) === "Uint16Array";
            }, g.isUint32Array = function($) {
              return c($) === "Uint32Array";
            }, g.isInt8Array = function($) {
              return c($) === "Int8Array";
            }, g.isInt16Array = function($) {
              return c($) === "Int16Array";
            }, g.isInt32Array = function($) {
              return c($) === "Int32Array";
            }, g.isFloat32Array = function($) {
              return c($) === "Float32Array";
            }, g.isFloat64Array = function($) {
              return c($) === "Float64Array";
            }, g.isBigInt64Array = function($) {
              return c($) === "BigInt64Array";
            }, g.isBigUint64Array = function($) {
              return c($) === "BigUint64Array";
            }, V.working = typeof Map < "u" && V(/* @__PURE__ */ new Map()), g.isMap = function($) {
              return typeof Map < "u" && (V.working ? V($) : $ instanceof Map);
            }, S.working = typeof Set < "u" && S(/* @__PURE__ */ new Set()), g.isSet = function($) {
              return typeof Set < "u" && (S.working ? S($) : $ instanceof Set);
            }, x.working = typeof WeakMap < "u" && x(/* @__PURE__ */ new WeakMap()), g.isWeakMap = function($) {
              return typeof WeakMap < "u" && (x.working ? x($) : $ instanceof WeakMap);
            }, B.working = typeof WeakSet < "u" && B(/* @__PURE__ */ new WeakSet()), g.isWeakSet = function($) {
              return B($);
            }, W.working = typeof ArrayBuffer < "u" && W(new ArrayBuffer()), g.isArrayBuffer = lt, pt.working = typeof ArrayBuffer < "u" && typeof DataView < "u" && pt(new DataView(new ArrayBuffer(1), 0, 1)), g.isDataView = at;
            var rt = typeof SharedArrayBuffer < "u" ? SharedArrayBuffer : void 0;
            function ot($) {
              return R($) === "[object SharedArrayBuffer]";
            }
            function X($) {
              return rt !== void 0 && (ot.working === void 0 && (ot.working = ot(new rt())), ot.working ? ot($) : $ instanceof rt);
            }
            function I($) {
              return D($, F);
            }
            function nt($) {
              return D($, v);
            }
            function ft($) {
              return D($, U);
            }
            function dt($) {
              return P && D($, M);
            }
            function Lt($) {
              return k && D($, Z);
            }
            g.isSharedArrayBuffer = X, g.isAsyncFunction = function($) {
              return R($) === "[object AsyncFunction]";
            }, g.isMapIterator = function($) {
              return R($) === "[object Map Iterator]";
            }, g.isSetIterator = function($) {
              return R($) === "[object Set Iterator]";
            }, g.isGeneratorObject = function($) {
              return R($) === "[object Generator]";
            }, g.isWebAssemblyCompiledModule = function($) {
              return R($) === "[object WebAssembly.Module]";
            }, g.isNumberObject = I, g.isStringObject = nt, g.isBooleanObject = ft, g.isBigIntObject = dt, g.isSymbolObject = Lt, g.isBoxedPrimitive = function($) {
              return I($) || nt($) || ft($) || dt($) || Lt($);
            }, g.isAnyArrayBuffer = function($) {
              return typeof Uint8Array < "u" && (lt($) || X($));
            }, ["isProxy", "isExternal", "isModuleNamespaceObject"].forEach(function($) {
              Object.defineProperty(g, $, { enumerable: false, value: function() {
                throw new Error($ + " is not supported in userland");
              } });
            });
          }, 9092: (p, g, b) => {
            var h = b(1333);
            p.exports = function() {
              return h() && !!Symbol.toStringTag;
            };
          }, 9133: (p, g, b) => {
            var h = b(8403);
            p.exports = function() {
              return Object.assign ? function() {
                if (!Object.assign) return false;
                for (var m = "abcdefghijklmnopqrst", c = m.split(""), w = {}, T = 0; T < c.length; ++T) w[c[T]] = c[T];
                var P = Object.assign({}, w), k = "";
                for (var R in P) k += R;
                return m !== k;
              }() || function() {
                if (!Object.assign || !Object.preventExtensions) return false;
                var m = Object.preventExtensions({ 1: 2 });
                try {
                  Object.assign(m, "xy");
                } catch {
                  return m[1] === "y";
                }
                return false;
              }() ? h : Object.assign : h;
            };
          }, 9209: (p, g, b) => {
            var h = b(6578), m = typeof globalThis > "u" ? b.g : globalThis;
            p.exports = function() {
              for (var c = [], w = 0; w < h.length; w++) typeof m[h[w]] == "function" && (c[c.length] = h[w]);
              return c;
            };
          }, 9211: (p) => {
            var g = function(b) {
              return b != b;
            };
            p.exports = function(b, h) {
              return b === 0 && h === 0 ? 1 / b == 1 / h : b === h || !(!g(b) || !g(h));
            };
          }, 9290: (p) => {
            p.exports = RangeError;
          }, 9353: (p) => {
            var g = Object.prototype.toString, b = Math.max, h = function(m, c) {
              for (var w = [], T = 0; T < m.length; T += 1) w[T] = m[T];
              for (var P = 0; P < c.length; P += 1) w[P + m.length] = c[P];
              return w;
            };
            p.exports = function(m) {
              var c = this;
              if (typeof c != "function" || g.apply(c) !== "[object Function]") throw new TypeError("Function.prototype.bind called on incompatible " + c);
              for (var w, T = function(v) {
                for (var U = [], M = 1, Z = 0; M < v.length; M += 1, Z += 1) U[Z] = v[M];
                return U;
              }(arguments), P = b(0, c.length - T.length), k = [], R = 0; R < P; R++) k[R] = "$" + R;
              if (w = Function("binder", "return function (" + function(v) {
                for (var U = "", M = 0; M < v.length; M += 1) U += v[M], M + 1 < v.length && (U += ",");
                return U;
              }(k) + "){ return binder.apply(this,arguments); }")(function() {
                if (this instanceof w) {
                  var v = c.apply(this, h(T, arguments));
                  return Object(v) === v ? v : this;
                }
                return c.apply(m, h(T, arguments));
              }), c.prototype) {
                var F = function() {
                };
                F.prototype = c.prototype, w.prototype = new F(), F.prototype = null;
              }
              return w;
            };
          }, 9383: (p) => {
            p.exports = Error;
          }, 9394: (p, g, b) => {
            var h = b(9211);
            p.exports = function() {
              return typeof Object.is == "function" ? Object.is : h;
            };
          }, 9538: (p) => {
            p.exports = ReferenceError;
          }, 9597: (p, g, b) => {
            function h(v) {
              return h = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(U) {
                return typeof U;
              } : function(U) {
                return U && typeof Symbol == "function" && U.constructor === Symbol && U !== Symbol.prototype ? "symbol" : typeof U;
              }, h(v);
            }
            function m(v, U) {
              return m = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function(M, Z) {
                return M.__proto__ = Z, M;
              }, m(v, U);
            }
            function c(v) {
              var U = function() {
                if (typeof Reflect > "u" || !Reflect.construct || Reflect.construct.sham) return false;
                if (typeof Proxy == "function") return true;
                try {
                  return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
                  })), true;
                } catch {
                  return false;
                }
              }();
              return function() {
                var M, Z = w(v);
                if (U) {
                  var D = w(this).constructor;
                  M = Reflect.construct(Z, arguments, D);
                } else M = Z.apply(this, arguments);
                return function(V, S) {
                  if (S && (h(S) === "object" || typeof S == "function")) return S;
                  if (S !== void 0) throw new TypeError("Derived constructors may only return object or undefined");
                  return function(x) {
                    if (x === void 0) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
                    return x;
                  }(V);
                }(this, M);
              };
            }
            function w(v) {
              return w = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function(U) {
                return U.__proto__ || Object.getPrototypeOf(U);
              }, w(v);
            }
            var T, P, k = {};
            function R(v, U, M) {
              M || (M = Error);
              var Z = function(D) {
                (function(B, W) {
                  if (typeof W != "function" && W !== null) throw new TypeError("Super expression must either be null or a function");
                  B.prototype = Object.create(W && W.prototype, { constructor: { value: B, writable: true, configurable: true } }), Object.defineProperty(B, "prototype", { writable: false }), W && m(B, W);
                })(x, D);
                var V, S = c(x);
                function x(B, W, lt) {
                  var pt;
                  return function(at, rt) {
                    if (!(at instanceof rt)) throw new TypeError("Cannot call a class as a function");
                  }(this, x), pt = S.call(this, function(at, rt, ot) {
                    return typeof U == "string" ? U : U(at, rt, ot);
                  }(B, W, lt)), pt.code = v, pt;
                }
                return V = x, Object.defineProperty(V, "prototype", { writable: false }), V;
              }(M);
              k[v] = Z;
            }
            function F(v, U) {
              if (Array.isArray(v)) {
                var M = v.length;
                return v = v.map(function(Z) {
                  return String(Z);
                }), M > 2 ? "one of ".concat(U, " ").concat(v.slice(0, M - 1).join(", "), ", or ") + v[M - 1] : M === 2 ? "one of ".concat(U, " ").concat(v[0], " or ").concat(v[1]) : "of ".concat(U, " ").concat(v[0]);
              }
              return "of ".concat(U, " ").concat(String(v));
            }
            R("ERR_AMBIGUOUS_ARGUMENT", 'The "%s" argument is ambiguous. %s', TypeError), R("ERR_INVALID_ARG_TYPE", function(v, U, M) {
              var Z, D, V;
              if (T === void 0 && (T = b(4148)), T(typeof v == "string", "'name' must be a string"), typeof U == "string" && (D = "not ", U.substr(0, 4) === D) ? (Z = "must not be", U = U.replace(/^not /, "")) : Z = "must be", function(x, B, W) {
                return (W === void 0 || W > x.length) && (W = x.length), x.substring(W - 9, W) === B;
              }(v, " argument")) V = "The ".concat(v, " ").concat(Z, " ").concat(F(U, "type"));
              else {
                var S = function(x, B, W) {
                  return typeof W != "number" && (W = 0), !(W + 1 > x.length) && x.indexOf(".", W) !== -1;
                }(v) ? "property" : "argument";
                V = 'The "'.concat(v, '" ').concat(S, " ").concat(Z, " ").concat(F(U, "type"));
              }
              return V + ". Received type ".concat(h(M));
            }, TypeError), R("ERR_INVALID_ARG_VALUE", function(v, U) {
              var M = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : "is invalid";
              P === void 0 && (P = b(537));
              var Z = P.inspect(U);
              return Z.length > 128 && (Z = "".concat(Z.slice(0, 128), "...")), "The argument '".concat(v, "' ").concat(M, ". Received ").concat(Z);
            }, TypeError), R("ERR_INVALID_RETURN_VALUE", function(v, U, M) {
              var Z;
              return Z = M && M.constructor && M.constructor.name ? "instance of ".concat(M.constructor.name) : "type ".concat(h(M)), "Expected ".concat(v, ' to be returned from the "').concat(U, '"') + " function but got ".concat(Z, ".");
            }, TypeError), R("ERR_MISSING_ARGS", function() {
              for (var v = arguments.length, U = new Array(v), M = 0; M < v; M++) U[M] = arguments[M];
              T === void 0 && (T = b(4148)), T(U.length > 0, "At least one arg needs to be specified");
              var Z = "The ", D = U.length;
              switch (U = U.map(function(V) {
                return '"'.concat(V, '"');
              }), D) {
                case 1:
                  Z += "".concat(U[0], " argument");
                  break;
                case 2:
                  Z += "".concat(U[0], " and ").concat(U[1], " arguments");
                  break;
                default:
                  Z += U.slice(0, D - 1).join(", "), Z += ", and ".concat(U[D - 1], " arguments");
              }
              return "".concat(Z, " must be specified");
            }, TypeError), p.exports.codes = k;
          }, 9600: (p) => {
            var g, b, h = Function.prototype.toString, m = typeof Reflect == "object" && Reflect !== null && Reflect.apply;
            if (typeof m == "function" && typeof Object.defineProperty == "function") try {
              g = Object.defineProperty({}, "length", { get: function() {
                throw b;
              } }), b = {}, m(function() {
                throw 42;
              }, null, g);
            } catch (U) {
              U !== b && (m = null);
            }
            else m = null;
            var c = /^\s*class\b/, w = function(U) {
              try {
                var M = h.call(U);
                return c.test(M);
              } catch {
                return false;
              }
            }, T = function(U) {
              try {
                return !w(U) && (h.call(U), true);
              } catch {
                return false;
              }
            }, P = Object.prototype.toString, k = typeof Symbol == "function" && !!Symbol.toStringTag, R = !(0 in [,]), F = function() {
              return false;
            };
            if (typeof document == "object") {
              var v = document.all;
              P.call(v) === P.call(document.all) && (F = function(U) {
                if ((R || !U) && (U === void 0 || typeof U == "object")) try {
                  var M = P.call(U);
                  return (M === "[object HTMLAllCollection]" || M === "[object HTML document.all class]" || M === "[object HTMLCollection]" || M === "[object Object]") && U("") == null;
                } catch {
                }
                return false;
              });
            }
            p.exports = m ? function(U) {
              if (F(U)) return true;
              if (!U || typeof U != "function" && typeof U != "object") return false;
              try {
                m(U, null, g);
              } catch (M) {
                if (M !== b) return false;
              }
              return !w(U) && T(U);
            } : function(U) {
              if (F(U)) return true;
              if (!U || typeof U != "function" && typeof U != "object") return false;
              if (k) return T(U);
              if (w(U)) return false;
              var M = P.call(U);
              return !(M !== "[object Function]" && M !== "[object GeneratorFunction]" && !/^\[object HTML/.test(M)) && T(U);
            };
          }, 9612: (p) => {
            p.exports = Object;
          }, 9675: (p) => {
            p.exports = TypeError;
          }, 9721: (p, g, b) => {
            var h = b(6556), m = b(4035), c = h("RegExp.prototype.exec"), w = b(9675);
            p.exports = function(T) {
              if (!m(T)) throw new w("`regex` must be a RegExp");
              return function(P) {
                return c(T, P) !== null;
              };
            };
          }, 9957: (p, g, b) => {
            var h = Function.prototype.call, m = Object.prototype.hasOwnProperty, c = b(6743);
            p.exports = c.call(h, m);
          } }, d = {};
          function f(p) {
            var g = d[p];
            if (g !== void 0) return g.exports;
            var b = d[p] = { id: p, loaded: false, exports: {} };
            return u[p].call(b.exports, b, b.exports, f), b.loaded = true, b.exports;
          }
          return f.d = (p, g) => {
            for (var b in g) f.o(g, b) && !f.o(p, b) && Object.defineProperty(p, b, { enumerable: true, get: g[b] });
          }, f.g = function() {
            if (typeof globalThis == "object") return globalThis;
            try {
              return this || new Function("return this")();
            } catch {
              if (typeof window == "object") return window;
            }
          }(), f.hmd = (p) => ((p = Object.create(p)).children || (p.children = []), Object.defineProperty(p, "exports", { enumerable: true, set: () => {
            throw new Error("ES Modules may not assign module.exports or exports.*, Use ESM export syntax, instead: " + p.id);
          } }), p), f.o = (p, g) => Object.prototype.hasOwnProperty.call(p, g), f.r = (p) => {
            typeof Symbol < "u" && Symbol.toStringTag && Object.defineProperty(p, Symbol.toStringTag, { value: "Module" }), Object.defineProperty(p, "__esModule", { value: true });
          }, f(7175);
        })(), s.exports = i();
      }, 8968: (s) => {
        s.exports = Math.floor;
      }, 9032: (s, i, u) => {
        var d = u(7244), f = u(8184), p = u(5767), g = u(5680);
        function b(I) {
          return I.call.bind(I);
        }
        var h = typeof BigInt < "u", m = typeof Symbol < "u", c = b(Object.prototype.toString), w = b(Number.prototype.valueOf), T = b(String.prototype.valueOf), P = b(Boolean.prototype.valueOf);
        if (h) var k = b(BigInt.prototype.valueOf);
        if (m) var R = b(Symbol.prototype.valueOf);
        function F(I, nt) {
          if (typeof I != "object") return false;
          try {
            return nt(I), true;
          } catch {
            return false;
          }
        }
        function v(I) {
          return c(I) === "[object Map]";
        }
        function U(I) {
          return c(I) === "[object Set]";
        }
        function M(I) {
          return c(I) === "[object WeakMap]";
        }
        function Z(I) {
          return c(I) === "[object WeakSet]";
        }
        function D(I) {
          return c(I) === "[object ArrayBuffer]";
        }
        function V(I) {
          return typeof ArrayBuffer < "u" && (D.working ? D(I) : I instanceof ArrayBuffer);
        }
        function S(I) {
          return c(I) === "[object DataView]";
        }
        function x(I) {
          return typeof DataView < "u" && (S.working ? S(I) : I instanceof DataView);
        }
        i.isArgumentsObject = d, i.isGeneratorFunction = f, i.isTypedArray = g, i.isPromise = function(I) {
          return typeof Promise < "u" && I instanceof Promise || I !== null && typeof I == "object" && typeof I.then == "function" && typeof I.catch == "function";
        }, i.isArrayBufferView = function(I) {
          return typeof ArrayBuffer < "u" && ArrayBuffer.isView ? ArrayBuffer.isView(I) : g(I) || x(I);
        }, i.isUint8Array = function(I) {
          return p(I) === "Uint8Array";
        }, i.isUint8ClampedArray = function(I) {
          return p(I) === "Uint8ClampedArray";
        }, i.isUint16Array = function(I) {
          return p(I) === "Uint16Array";
        }, i.isUint32Array = function(I) {
          return p(I) === "Uint32Array";
        }, i.isInt8Array = function(I) {
          return p(I) === "Int8Array";
        }, i.isInt16Array = function(I) {
          return p(I) === "Int16Array";
        }, i.isInt32Array = function(I) {
          return p(I) === "Int32Array";
        }, i.isFloat32Array = function(I) {
          return p(I) === "Float32Array";
        }, i.isFloat64Array = function(I) {
          return p(I) === "Float64Array";
        }, i.isBigInt64Array = function(I) {
          return p(I) === "BigInt64Array";
        }, i.isBigUint64Array = function(I) {
          return p(I) === "BigUint64Array";
        }, v.working = typeof Map < "u" && v(/* @__PURE__ */ new Map()), i.isMap = function(I) {
          return typeof Map < "u" && (v.working ? v(I) : I instanceof Map);
        }, U.working = typeof Set < "u" && U(/* @__PURE__ */ new Set()), i.isSet = function(I) {
          return typeof Set < "u" && (U.working ? U(I) : I instanceof Set);
        }, M.working = typeof WeakMap < "u" && M(/* @__PURE__ */ new WeakMap()), i.isWeakMap = function(I) {
          return typeof WeakMap < "u" && (M.working ? M(I) : I instanceof WeakMap);
        }, Z.working = typeof WeakSet < "u" && Z(/* @__PURE__ */ new WeakSet()), i.isWeakSet = function(I) {
          return Z(I);
        }, D.working = typeof ArrayBuffer < "u" && D(new ArrayBuffer()), i.isArrayBuffer = V, S.working = typeof ArrayBuffer < "u" && typeof DataView < "u" && S(new DataView(new ArrayBuffer(1), 0, 1)), i.isDataView = x;
        var B = typeof SharedArrayBuffer < "u" ? SharedArrayBuffer : void 0;
        function W(I) {
          return c(I) === "[object SharedArrayBuffer]";
        }
        function lt(I) {
          return B !== void 0 && (W.working === void 0 && (W.working = W(new B())), W.working ? W(I) : I instanceof B);
        }
        function pt(I) {
          return F(I, w);
        }
        function at(I) {
          return F(I, T);
        }
        function rt(I) {
          return F(I, P);
        }
        function ot(I) {
          return h && F(I, k);
        }
        function X(I) {
          return m && F(I, R);
        }
        i.isSharedArrayBuffer = lt, i.isAsyncFunction = function(I) {
          return c(I) === "[object AsyncFunction]";
        }, i.isMapIterator = function(I) {
          return c(I) === "[object Map Iterator]";
        }, i.isSetIterator = function(I) {
          return c(I) === "[object Set Iterator]";
        }, i.isGeneratorObject = function(I) {
          return c(I) === "[object Generator]";
        }, i.isWebAssemblyCompiledModule = function(I) {
          return c(I) === "[object WebAssembly.Module]";
        }, i.isNumberObject = pt, i.isStringObject = at, i.isBooleanObject = rt, i.isBigIntObject = ot, i.isSymbolObject = X, i.isBoxedPrimitive = function(I) {
          return pt(I) || at(I) || rt(I) || ot(I) || X(I);
        }, i.isAnyArrayBuffer = function(I) {
          return typeof Uint8Array < "u" && (V(I) || lt(I));
        }, ["isProxy", "isExternal", "isModuleNamespaceObject"].forEach(function(I) {
          Object.defineProperty(i, I, { enumerable: false, value: function() {
            throw new Error(I + " is not supported in userland");
          } });
        });
      }, 9092: (s, i, u) => {
        var d = u(1333);
        s.exports = function() {
          return d() && !!Symbol.toStringTag;
        };
      }, 9127: function(s, i, u) {
        var d, f, p;
        (function(g, b) {
          s.exports ? s.exports = b(u(4193)) : (f = [u(4193)], (p = typeof (d = b) == "function" ? d.apply(i, f) : d) === void 0 || (s.exports = p));
        })(0, function(g, b) {
          var h = b && b.URITemplate, m = Object.prototype.hasOwnProperty;
          function c(k) {
            return c._cache[k] ? c._cache[k] : this instanceof c ? (this.expression = k, c._cache[k] = this, this) : new c(k);
          }
          function w(k) {
            this.data = k, this.cache = {};
          }
          var T = c.prototype, P = { "": { prefix: "", separator: ",", named: false, empty_name_separator: false, encode: "encode" }, "+": { prefix: "", separator: ",", named: false, empty_name_separator: false, encode: "encodeReserved" }, "#": { prefix: "#", separator: ",", named: false, empty_name_separator: false, encode: "encodeReserved" }, ".": { prefix: ".", separator: ".", named: false, empty_name_separator: false, encode: "encode" }, "/": { prefix: "/", separator: "/", named: false, empty_name_separator: false, encode: "encode" }, ";": { prefix: ";", separator: ";", named: true, empty_name_separator: false, encode: "encode" }, "?": { prefix: "?", separator: "&", named: true, empty_name_separator: true, encode: "encode" }, "&": { prefix: "&", separator: "&", named: true, empty_name_separator: true, encode: "encode" } };
          return c._cache = {}, c.EXPRESSION_PATTERN = /\{([^a-zA-Z0-9%_]?)([^\}]+)(\}|$)/g, c.VARIABLE_PATTERN = /^([^*:.](?:\.?[^*:.])*)((\*)|:(\d+))?$/, c.VARIABLE_NAME_PATTERN = /[^a-zA-Z0-9%_.]/, c.LITERAL_PATTERN = /[<>{}"`^| \\]/, c.expand = function(k, R, F) {
            var v, U, M, Z = P[k.operator], D = Z.named ? "Named" : "Unnamed", V = k.variables, S = [];
            for (M = 0; U = V[M]; M++) {
              if ((v = R.get(U.name)).type === 0 && F && F.strict) throw new Error('Missing expansion value for variable "' + U.name + '"');
              if (v.val.length) {
                if (v.type > 1 && U.maxlength) throw new Error('Invalid expression: Prefix modifier not applicable to variable "' + U.name + '"');
                S.push(c["expand" + D](v, Z, U.explode, U.explode && Z.separator || ",", U.maxlength, U.name));
              } else v.type && S.push("");
            }
            return S.length ? Z.prefix + S.join(Z.separator) : "";
          }, c.expandNamed = function(k, R, F, v, U, M) {
            var Z, D, V, S = "", x = R.encode, B = R.empty_name_separator, W = !k[x].length, lt = k.type === 2 ? "" : g[x](M);
            for (D = 0, V = k.val.length; D < V; D++) U ? (Z = g[x](k.val[D][1].substring(0, U)), k.type === 2 && (lt = g[x](k.val[D][0].substring(0, U)))) : W ? (Z = g[x](k.val[D][1]), k.type === 2 ? (lt = g[x](k.val[D][0]), k[x].push([lt, Z])) : k[x].push([void 0, Z])) : (Z = k[x][D][1], k.type === 2 && (lt = k[x][D][0])), S && (S += v), F ? S += lt + (B || Z ? "=" : "") + Z : (D || (S += g[x](M) + (B || Z ? "=" : "")), k.type === 2 && (S += lt + ","), S += Z);
            return S;
          }, c.expandUnnamed = function(k, R, F, v, U) {
            var M, Z, D, V = "", S = R.encode, x = R.empty_name_separator, B = !k[S].length;
            for (Z = 0, D = k.val.length; Z < D; Z++) U ? M = g[S](k.val[Z][1].substring(0, U)) : B ? (M = g[S](k.val[Z][1]), k[S].push([k.type === 2 ? g[S](k.val[Z][0]) : void 0, M])) : M = k[S][Z][1], V && (V += v), k.type === 2 && (V += U ? g[S](k.val[Z][0].substring(0, U)) : k[S][Z][0], V += F ? x || M ? "=" : "" : ","), V += M;
            return V;
          }, c.noConflict = function() {
            return b.URITemplate === c && (b.URITemplate = h), c;
          }, T.expand = function(k, R) {
            var F = "";
            this.parts && this.parts.length || this.parse(), k instanceof w || (k = new w(k));
            for (var v = 0, U = this.parts.length; v < U; v++) F += typeof this.parts[v] == "string" ? this.parts[v] : c.expand(this.parts[v], k, R);
            return F;
          }, T.parse = function() {
            var k, R, F, v = this.expression, U = c.EXPRESSION_PATTERN, M = c.VARIABLE_PATTERN, Z = c.VARIABLE_NAME_PATTERN, D = c.LITERAL_PATTERN, V = [], S = 0, x = function(lt) {
              if (lt.match(D)) throw new Error('Invalid Literal "' + lt + '"');
              return lt;
            };
            for (U.lastIndex = 0; ; ) {
              if ((R = U.exec(v)) === null) {
                V.push(x(v.substring(S)));
                break;
              }
              if (V.push(x(v.substring(S, R.index))), S = R.index + R[0].length, !P[R[1]]) throw new Error('Unknown Operator "' + R[1] + '" in "' + R[0] + '"');
              if (!R[3]) throw new Error('Unclosed Expression "' + R[0] + '"');
              for (var B = 0, W = (k = R[2].split(",")).length; B < W; B++) {
                if ((F = k[B].match(M)) === null) throw new Error('Invalid Variable "' + k[B] + '" in "' + R[0] + '"');
                if (F[1].match(Z)) throw new Error('Invalid Variable Name "' + F[1] + '" in "' + R[0] + '"');
                k[B] = { name: F[1], explode: !!F[3], maxlength: F[4] && parseInt(F[4], 10) };
              }
              if (!k.length) throw new Error('Expression Missing Variable(s) "' + R[0] + '"');
              V.push({ expression: R[0], operator: R[1], variables: k });
            }
            return V.length || V.push(x(v)), this.parts = V, this;
          }, w.prototype.get = function(k) {
            var R, F, v, U = this.data, M = { type: 0, val: [], encode: [], encodeReserved: [] };
            if (this.cache[k] !== void 0) return this.cache[k];
            if (this.cache[k] = M, (v = String(Object.prototype.toString.call(U)) === "[object Function]" ? U(k) : String(Object.prototype.toString.call(U[k])) === "[object Function]" ? U[k](k) : U[k]) == null) return M;
            if (String(Object.prototype.toString.call(v)) === "[object Array]") {
              for (R = 0, F = v.length; R < F; R++) v[R] !== void 0 && v[R] !== null && M.val.push([void 0, String(v[R])]);
              M.val.length && (M.type = 3);
            } else if (String(Object.prototype.toString.call(v)) === "[object Object]") {
              for (R in v) m.call(v, R) && v[R] !== void 0 && v[R] !== null && M.val.push([R, String(v[R])]);
              M.val.length && (M.type = 2);
            } else M.type = 1, M.val.push([void 0, String(v)]);
            return M;
          }, g.expand = function(k, R) {
            var F = new c(k).expand(R);
            return new g(F);
          }, c;
        });
      }, 9209: (s, i, u) => {
        var d = u(6578), f = typeof globalThis > "u" ? u.g : globalThis;
        s.exports = function() {
          for (var p = [], g = 0; g < d.length; g++) typeof f[d[g]] == "function" && (p[p.length] = d[g]);
          return p;
        };
      }, 9290: (s) => {
        s.exports = RangeError;
      }, 9340: function(s, i, u) {
        var d;
        s = u.nmd(s), function() {
          i && i.nodeType, s && s.nodeType;
          var f = typeof u.g == "object" && u.g;
          f.global !== f && f.window !== f && f.self;
          var p, g = 2147483647, b = 36, h = /^xn--/, m = /[^\x20-\x7E]/, c = /[\x2E\u3002\uFF0E\uFF61]/g, w = { overflow: "Overflow: input needs wider integers to process", "not-basic": "Illegal input >= 0x80 (not a basic code point)", "invalid-input": "Invalid input" }, T = Math.floor, P = String.fromCharCode;
          function k(x) {
            throw new RangeError(w[x]);
          }
          function R(x, B) {
            for (var W = x.length, lt = []; W--; ) lt[W] = B(x[W]);
            return lt;
          }
          function F(x, B) {
            var W = x.split("@"), lt = "";
            return W.length > 1 && (lt = W[0] + "@", x = W[1]), lt + R((x = x.replace(c, ".")).split("."), B).join(".");
          }
          function v(x) {
            for (var B, W, lt = [], pt = 0, at = x.length; pt < at; ) (B = x.charCodeAt(pt++)) >= 55296 && B <= 56319 && pt < at ? (64512 & (W = x.charCodeAt(pt++))) == 56320 ? lt.push(((1023 & B) << 10) + (1023 & W) + 65536) : (lt.push(B), pt--) : lt.push(B);
            return lt;
          }
          function U(x) {
            return R(x, function(B) {
              var W = "";
              return B > 65535 && (W += P((B -= 65536) >>> 10 & 1023 | 55296), B = 56320 | 1023 & B), W += P(B);
            }).join("");
          }
          function M(x) {
            return x - 48 < 10 ? x - 22 : x - 65 < 26 ? x - 65 : x - 97 < 26 ? x - 97 : b;
          }
          function Z(x, B) {
            return x + 22 + 75 * (x < 26) - ((B != 0) << 5);
          }
          function D(x, B, W) {
            var lt = 0;
            for (x = W ? T(x / 700) : x >> 1, x += T(x / B); x > 455; lt += b) x = T(x / 35);
            return T(lt + 36 * x / (x + 38));
          }
          function V(x) {
            var B, W, lt, pt, at, rt, ot, X, I, nt, ft = [], dt = x.length, Lt = 0, $ = 128, it = 72;
            for ((W = x.lastIndexOf("-")) < 0 && (W = 0), lt = 0; lt < W; ++lt) x.charCodeAt(lt) >= 128 && k("not-basic"), ft.push(x.charCodeAt(lt));
            for (pt = W > 0 ? W + 1 : 0; pt < dt; ) {
              for (at = Lt, rt = 1, ot = b; pt >= dt && k("invalid-input"), ((X = M(x.charCodeAt(pt++))) >= b || X > T((g - Lt) / rt)) && k("overflow"), Lt += X * rt, !(X < (I = ot <= it ? 1 : ot >= it + 26 ? 26 : ot - it)); ot += b) rt > T(g / (nt = b - I)) && k("overflow"), rt *= nt;
              it = D(Lt - at, B = ft.length + 1, at == 0), T(Lt / B) > g - $ && k("overflow"), $ += T(Lt / B), Lt %= B, ft.splice(Lt++, 0, $);
            }
            return U(ft);
          }
          function S(x) {
            var B, W, lt, pt, at, rt, ot, X, I, nt, ft, dt, Lt, $, it, mt = [];
            for (dt = (x = v(x)).length, B = 128, W = 0, at = 72, rt = 0; rt < dt; ++rt) (ft = x[rt]) < 128 && mt.push(P(ft));
            for (lt = pt = mt.length, pt && mt.push("-"); lt < dt; ) {
              for (ot = g, rt = 0; rt < dt; ++rt) (ft = x[rt]) >= B && ft < ot && (ot = ft);
              for (ot - B > T((g - W) / (Lt = lt + 1)) && k("overflow"), W += (ot - B) * Lt, B = ot, rt = 0; rt < dt; ++rt) if ((ft = x[rt]) < B && ++W > g && k("overflow"), ft == B) {
                for (X = W, I = b; !(X < (nt = I <= at ? 1 : I >= at + 26 ? 26 : I - at)); I += b) it = X - nt, $ = b - nt, mt.push(P(Z(nt + it % $, 0))), X = T(it / $);
                mt.push(P(Z(X, 0))), at = D(W, Lt, lt == pt), W = 0, ++lt;
              }
              ++W, ++B;
            }
            return mt.join("");
          }
          p = { version: "1.3.2", ucs2: { decode: v, encode: U }, decode: V, encode: S, toASCII: function(x) {
            return F(x, function(B) {
              return m.test(B) ? "xn--" + S(B) : B;
            });
          }, toUnicode: function(x) {
            return F(x, function(B) {
              return h.test(B) ? V(B.slice(4).toLowerCase()) : B;
            });
          } }, (d = (function() {
            return p;
          }).call(i, u, i, s)) === void 0 || (s.exports = d);
        }();
      }, 9353: (s) => {
        var i = Object.prototype.toString, u = Math.max, d = function(f, p) {
          for (var g = [], b = 0; b < f.length; b += 1) g[b] = f[b];
          for (var h = 0; h < p.length; h += 1) g[h + f.length] = p[h];
          return g;
        };
        s.exports = function(f) {
          var p = this;
          if (typeof p != "function" || i.apply(p) !== "[object Function]") throw new TypeError("Function.prototype.bind called on incompatible " + p);
          for (var g, b = function(T, P) {
            for (var k = [], R = P, F = 0; R < T.length; R += 1, F += 1) k[F] = T[R];
            return k;
          }(arguments, 1), h = u(0, p.length - b.length), m = [], c = 0; c < h; c++) m[c] = "$" + c;
          if (g = Function("binder", "return function (" + function(T, P) {
            for (var k = "", R = 0; R < T.length; R += 1) k += T[R], R + 1 < T.length && (k += P);
            return k;
          }(m, ",") + "){ return binder.apply(this,arguments); }")(function() {
            if (this instanceof g) {
              var T = p.apply(this, d(b, arguments));
              return Object(T) === T ? T : this;
            }
            return p.apply(f, d(b, arguments));
          }), p.prototype) {
            var w = function() {
            };
            w.prototype = p.prototype, g.prototype = new w(), w.prototype = null;
          }
          return g;
        };
      }, 9383: (s) => {
        s.exports = Error;
      }, 9538: (s) => {
        s.exports = ReferenceError;
      }, 9600: (s) => {
        var i, u, d = Function.prototype.toString, f = typeof Reflect == "object" && Reflect !== null && Reflect.apply;
        if (typeof f == "function" && typeof Object.defineProperty == "function") try {
          i = Object.defineProperty({}, "length", { get: function() {
            throw u;
          } }), u = {}, f(function() {
            throw 42;
          }, null, i);
        } catch (P) {
          P !== u && (f = null);
        }
        else f = null;
        var p = /^\s*class\b/, g = function(P) {
          try {
            var k = d.call(P);
            return p.test(k);
          } catch {
            return false;
          }
        }, b = function(P) {
          try {
            return !g(P) && (d.call(P), true);
          } catch {
            return false;
          }
        }, h = Object.prototype.toString, m = typeof Symbol == "function" && !!Symbol.toStringTag, c = !(0 in [,]), w = function() {
          return false;
        };
        if (typeof document == "object") {
          var T = document.all;
          h.call(T) === h.call(document.all) && (w = function(P) {
            if ((c || !P) && (P === void 0 || typeof P == "object")) try {
              var k = h.call(P);
              return (k === "[object HTMLAllCollection]" || k === "[object HTML document.all class]" || k === "[object HTMLCollection]" || k === "[object Object]") && P("") == null;
            } catch {
            }
            return false;
          });
        }
        s.exports = f ? function(P) {
          if (w(P)) return true;
          if (!P || typeof P != "function" && typeof P != "object") return false;
          try {
            f(P, null, i);
          } catch (k) {
            if (k !== u) return false;
          }
          return !g(P) && b(P);
        } : function(P) {
          if (w(P)) return true;
          if (!P || typeof P != "function" && typeof P != "object") return false;
          if (m) return b(P);
          if (g(P)) return false;
          var k = h.call(P);
          return !(k !== "[object Function]" && k !== "[object GeneratorFunction]" && !/^\[object HTML/.test(k)) && b(P);
        };
      }, 9612: (s) => {
        s.exports = Object;
      }, 9675: (s) => {
        s.exports = TypeError;
      }, 9721: (s, i, u) => {
        var d = u(6556), f = u(4035), p = d("RegExp.prototype.exec"), g = u(9675);
        s.exports = function(b) {
          if (!f(b)) throw new g("`regex` must be a RegExp");
          return function(h) {
            return p(b, h) !== null;
          };
        };
      }, 9838: () => {
      }, 9957: (s, i, u) => {
        var d = Function.prototype.call, f = Object.prototype.hasOwnProperty, p = u(6743);
        s.exports = p.call(d, f);
      }, 9983: (s, i, u) => {
        function d(T) {
          return d = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(P) {
            return typeof P;
          } : function(P) {
            return P && typeof Symbol == "function" && P.constructor === Symbol && P !== Symbol.prototype ? "symbol" : typeof P;
          }, d(T);
        }
        function f(T, P) {
          for (var k = 0; k < P.length; k++) {
            var R = P[k];
            R.enumerable = R.enumerable || false, R.configurable = true, "value" in R && (R.writable = true), Object.defineProperty(T, p(R.key), R);
          }
        }
        function p(T) {
          var P = function(k, R) {
            if (d(k) != "object" || !k) return k;
            var F = k[Symbol.toPrimitive];
            if (F !== void 0) {
              var v = F.call(k, R);
              if (d(v) != "object") return v;
              throw new TypeError("@@toPrimitive must return a primitive value.");
            }
            return String(k);
          }(T, "string");
          return d(P) == "symbol" ? P : P + "";
        }
        u.d(i, { vt: () => c, ok: () => m }), g = function T(P) {
          var k, R = this;
          (function(F, v) {
            if (!(F instanceof v)) throw new TypeError("Cannot call a class as a function");
          })(this, T), this.promise = new Promise(function(F) {
            k = F;
          }), P(function(F) {
            R.reason = F, k();
          });
        }, (b = [{ key: "throwIfRequested", value: function() {
          if (this.reason) throw new Error(this.reason);
        } }]) && f(g.prototype, b), h && f(g, h), Object.defineProperty(g, "prototype", { writable: false });
        var g, b, h, m, c, w = u(6121);
        m = w.axiosClient, c = w.create;
      } }, a = {};
      function l(s) {
        var i = a[s];
        if (i !== void 0) return i.exports;
        var u = a[s] = { id: s, loaded: false, exports: {} };
        return o[s].call(u.exports, u, u.exports, l), u.loaded = true, u.exports;
      }
      return l.n = (s) => {
        var i = s && s.__esModule ? () => s.default : () => s;
        return l.d(i, { a: i }), i;
      }, l.d = (s, i) => {
        for (var u in i) l.o(i, u) && !l.o(s, u) && Object.defineProperty(s, u, { enumerable: true, get: i[u] });
      }, l.g = function() {
        if (typeof globalThis == "object") return globalThis;
        try {
          return this || new Function("return this")();
        } catch {
          if (typeof window == "object") return window;
        }
      }(), l.hmd = (s) => ((s = Object.create(s)).children || (s.children = []), Object.defineProperty(s, "exports", { enumerable: true, set: () => {
        throw new Error("ES Modules may not assign module.exports or exports.*, Use ESM export syntax, instead: " + s.id);
      } }), s), l.o = (s, i) => Object.prototype.hasOwnProperty.call(s, i), l.r = (s) => {
        typeof Symbol < "u" && Symbol.toStringTag && Object.defineProperty(s, Symbol.toStringTag, { value: "Module" }), Object.defineProperty(s, "__esModule", { value: true });
      }, l.nmd = (s) => (s.paths = [], s.children || (s.children = []), s), l(1924);
    })());
  }(af)), af.exports;
}
var Ai = gm(), Pl = { exports: {} };
/*!
* jQuery JavaScript Library v3.7.1
* https://jquery.com/
*
* Copyright OpenJS Foundation and other contributors
* Released under the MIT license
* https://jquery.org/license
*
* Date: 2023-08-28T13:37Z
*/
var vm = Pl.exports, Ip;
function bm() {
  return Ip || (Ip = 1, function(E) {
    (function(t, e) {
      E.exports = t.document ? e(t, true) : function(o) {
        if (!o.document) throw new Error("jQuery requires a window with a document");
        return e(o);
      };
    })(typeof window < "u" ? window : vm, function(t, e) {
      var o = [], a = Object.getPrototypeOf, l = o.slice, s = o.flat ? function(C) {
        return o.flat.call(C);
      } : function(C) {
        return o.concat.apply([], C);
      }, i = o.push, u = o.indexOf, d = {}, f = d.toString, p = d.hasOwnProperty, g = p.toString, b = g.call(Object), h = {}, m = function(Y) {
        return typeof Y == "function" && typeof Y.nodeType != "number" && typeof Y.item != "function";
      }, c = function(Y) {
        return Y != null && Y === Y.window;
      }, w = t.document, T = { type: true, src: true, nonce: true, noModule: true };
      function P(C, Y, ht) {
        ht = ht || w;
        var Pt, Ft, jt = ht.createElement("script");
        if (jt.text = C, Y) for (Pt in T) Ft = Y[Pt] || Y.getAttribute && Y.getAttribute(Pt), Ft && jt.setAttribute(Pt, Ft);
        ht.head.appendChild(jt).parentNode.removeChild(jt);
      }
      function k(C) {
        return C == null ? C + "" : typeof C == "object" || typeof C == "function" ? d[f.call(C)] || "object" : typeof C;
      }
      var R = "3.7.1", F = /HTML$/i, v = function(C, Y) {
        return new v.fn.init(C, Y);
      };
      v.fn = v.prototype = { jquery: R, constructor: v, length: 0, toArray: function() {
        return l.call(this);
      }, get: function(C) {
        return C == null ? l.call(this) : C < 0 ? this[C + this.length] : this[C];
      }, pushStack: function(C) {
        var Y = v.merge(this.constructor(), C);
        return Y.prevObject = this, Y;
      }, each: function(C) {
        return v.each(this, C);
      }, map: function(C) {
        return this.pushStack(v.map(this, function(Y, ht) {
          return C.call(Y, ht, Y);
        }));
      }, slice: function() {
        return this.pushStack(l.apply(this, arguments));
      }, first: function() {
        return this.eq(0);
      }, last: function() {
        return this.eq(-1);
      }, even: function() {
        return this.pushStack(v.grep(this, function(C, Y) {
          return (Y + 1) % 2;
        }));
      }, odd: function() {
        return this.pushStack(v.grep(this, function(C, Y) {
          return Y % 2;
        }));
      }, eq: function(C) {
        var Y = this.length, ht = +C + (C < 0 ? Y : 0);
        return this.pushStack(ht >= 0 && ht < Y ? [this[ht]] : []);
      }, end: function() {
        return this.prevObject || this.constructor();
      }, push: i, sort: o.sort, splice: o.splice }, v.extend = v.fn.extend = function() {
        var C, Y, ht, Pt, Ft, jt, ne = arguments[0] || {}, Ie = 1, ve = arguments.length, ze = false;
        for (typeof ne == "boolean" && (ze = ne, ne = arguments[Ie] || {}, Ie++), typeof ne != "object" && !m(ne) && (ne = {}), Ie === ve && (ne = this, Ie--); Ie < ve; Ie++) if ((C = arguments[Ie]) != null) for (Y in C) Pt = C[Y], !(Y === "__proto__" || ne === Pt) && (ze && Pt && (v.isPlainObject(Pt) || (Ft = Array.isArray(Pt))) ? (ht = ne[Y], Ft && !Array.isArray(ht) ? jt = [] : !Ft && !v.isPlainObject(ht) ? jt = {} : jt = ht, Ft = false, ne[Y] = v.extend(ze, jt, Pt)) : Pt !== void 0 && (ne[Y] = Pt));
        return ne;
      }, v.extend({ expando: "jQuery" + (R + Math.random()).replace(/\D/g, ""), isReady: true, error: function(C) {
        throw new Error(C);
      }, noop: function() {
      }, isPlainObject: function(C) {
        var Y, ht;
        return !C || f.call(C) !== "[object Object]" ? false : (Y = a(C), Y ? (ht = p.call(Y, "constructor") && Y.constructor, typeof ht == "function" && g.call(ht) === b) : true);
      }, isEmptyObject: function(C) {
        var Y;
        for (Y in C) return false;
        return true;
      }, globalEval: function(C, Y, ht) {
        P(C, { nonce: Y && Y.nonce }, ht);
      }, each: function(C, Y) {
        var ht, Pt = 0;
        if (U(C)) for (ht = C.length; Pt < ht && Y.call(C[Pt], Pt, C[Pt]) !== false; Pt++) ;
        else for (Pt in C) if (Y.call(C[Pt], Pt, C[Pt]) === false) break;
        return C;
      }, text: function(C) {
        var Y, ht = "", Pt = 0, Ft = C.nodeType;
        if (!Ft) for (; Y = C[Pt++]; ) ht += v.text(Y);
        return Ft === 1 || Ft === 11 ? C.textContent : Ft === 9 ? C.documentElement.textContent : Ft === 3 || Ft === 4 ? C.nodeValue : ht;
      }, makeArray: function(C, Y) {
        var ht = Y || [];
        return C != null && (U(Object(C)) ? v.merge(ht, typeof C == "string" ? [C] : C) : i.call(ht, C)), ht;
      }, inArray: function(C, Y, ht) {
        return Y == null ? -1 : u.call(Y, C, ht);
      }, isXMLDoc: function(C) {
        var Y = C && C.namespaceURI, ht = C && (C.ownerDocument || C).documentElement;
        return !F.test(Y || ht && ht.nodeName || "HTML");
      }, merge: function(C, Y) {
        for (var ht = +Y.length, Pt = 0, Ft = C.length; Pt < ht; Pt++) C[Ft++] = Y[Pt];
        return C.length = Ft, C;
      }, grep: function(C, Y, ht) {
        for (var Pt, Ft = [], jt = 0, ne = C.length, Ie = !ht; jt < ne; jt++) Pt = !Y(C[jt], jt), Pt !== Ie && Ft.push(C[jt]);
        return Ft;
      }, map: function(C, Y, ht) {
        var Pt, Ft, jt = 0, ne = [];
        if (U(C)) for (Pt = C.length; jt < Pt; jt++) Ft = Y(C[jt], jt, ht), Ft != null && ne.push(Ft);
        else for (jt in C) Ft = Y(C[jt], jt, ht), Ft != null && ne.push(Ft);
        return s(ne);
      }, guid: 1, support: h }), typeof Symbol == "function" && (v.fn[Symbol.iterator] = o[Symbol.iterator]), v.each("Boolean Number String Function Array Date RegExp Object Error Symbol".split(" "), function(C, Y) {
        d["[object " + Y + "]"] = Y.toLowerCase();
      });
      function U(C) {
        var Y = !!C && "length" in C && C.length, ht = k(C);
        return m(C) || c(C) ? false : ht === "array" || Y === 0 || typeof Y == "number" && Y > 0 && Y - 1 in C;
      }
      function M(C, Y) {
        return C.nodeName && C.nodeName.toLowerCase() === Y.toLowerCase();
      }
      var Z = o.pop, D = o.sort, V = o.splice, S = "[\\x20\\t\\r\\n\\f]", x = new RegExp("^" + S + "+|((?:^|[^\\\\])(?:\\\\.)*)" + S + "+$", "g");
      v.contains = function(C, Y) {
        var ht = Y && Y.parentNode;
        return C === ht || !!(ht && ht.nodeType === 1 && (C.contains ? C.contains(ht) : C.compareDocumentPosition && C.compareDocumentPosition(ht) & 16));
      };
      var B = /([\0-\x1f\x7f]|^-?\d)|^-$|[^\x80-\uFFFF\w-]/g;
      function W(C, Y) {
        return Y ? C === "\0" ? "\uFFFD" : C.slice(0, -1) + "\\" + C.charCodeAt(C.length - 1).toString(16) + " " : "\\" + C;
      }
      v.escapeSelector = function(C) {
        return (C + "").replace(B, W);
      };
      var lt = w, pt = i;
      (function() {
        var C, Y, ht, Pt, Ft, jt = pt, ne, Ie, ve, ze, Ze, Ar = v.expando, It = 0, ie = 0, Ae = Wi(), ge = Wi(), we = Wi(), sr = Wi(), nr = function(me, Ke) {
          return me === Ke && (Ft = true), 0;
        }, gn = "checked|selected|async|autofocus|autoplay|controls|defer|disabled|hidden|ismap|loop|multiple|open|readonly|required|scoped", wn = "(?:\\\\[\\da-fA-F]{1,6}" + S + "?|\\\\[^\\r\\n\\f]|[\\w-]|[^\0-\\x7f])+", dn = "\\[" + S + "*(" + wn + ")(?:" + S + "*([*^$|!~]?=)" + S + `*(?:'((?:\\\\.|[^\\\\'])*)'|"((?:\\\\.|[^\\\\"])*)"|(` + wn + "))|)" + S + "*\\]", Vn = ":(" + wn + `)(?:\\((('((?:\\\\.|[^\\\\'])*)'|"((?:\\\\.|[^\\\\"])*)")|((?:\\\\.|[^\\\\()[\\]]|` + dn + ")*)|.*)\\)|)", ln = new RegExp(S + "+", "g"), Yr = new RegExp("^" + S + "*," + S + "*"), ao = new RegExp("^" + S + "*([>+~]|" + S + ")" + S + "*"), mo = new RegExp(S + "|>"), co = new RegExp(Vn), So = new RegExp("^" + wn + "$"), ho = { ID: new RegExp("^#(" + wn + ")"), CLASS: new RegExp("^\\.(" + wn + ")"), TAG: new RegExp("^(" + wn + "|[*])"), ATTR: new RegExp("^" + dn), PSEUDO: new RegExp("^" + Vn), CHILD: new RegExp("^:(only|first|last|nth|nth-last)-(child|of-type)(?:\\(" + S + "*(even|odd|(([+-]|)(\\d*)n|)" + S + "*(?:([+-]|)" + S + "*(\\d+)|))" + S + "*\\)|)", "i"), bool: new RegExp("^(?:" + gn + ")$", "i"), needsContext: new RegExp("^" + S + "*[>+~]|:(even|odd|eq|gt|lt|nth|first|last)(?:\\(" + S + "*((?:-\\d)?\\d*)" + S + "*\\)|)(?=[^-]|$)", "i") }, Lo = /^(?:input|select|textarea|button)$/i, Io = /^h\d$/i, Ko = /^(?:#([\w-]+)|(\w+)|\.([\w-]+))$/, ui = /[+~]/, yi = new RegExp("\\\\[\\da-fA-F]{1,6}" + S + "?|\\\\([^\\r\\n\\f])", "g"), Mi = function(me, Ke) {
          var br = "0x" + me.slice(1) - 65536;
          return Ke || (br < 0 ? String.fromCharCode(br + 65536) : String.fromCharCode(br >> 10 | 55296, br & 1023 | 56320));
        }, Qo = function() {
          Qr();
        }, Si = Do(function(me) {
          return me.disabled === true && M(me, "fieldset");
        }, { dir: "parentNode", next: "legend" });
        function ea() {
          try {
            return ne.activeElement;
          } catch {
          }
        }
        try {
          jt.apply(o = l.call(lt.childNodes), lt.childNodes), o[lt.childNodes.length].nodeType;
        } catch {
          jt = { apply: function(Ke, br) {
            pt.apply(Ke, l.call(br));
          }, call: function(Ke) {
            pt.apply(Ke, l.call(arguments, 1));
          } };
        }
        function _o(me, Ke, br, yr) {
          var xr, tn, xn, Or, vn, Kn, Qn, Tn = Ke && Ke.ownerDocument, In = Ke ? Ke.nodeType : 9;
          if (br = br || [], typeof me != "string" || !me || In !== 1 && In !== 9 && In !== 11) return br;
          if (!yr && (Qr(Ke), Ke = Ke || ne, ve)) {
            if (In !== 11 && (vn = Ko.exec(me))) if (xr = vn[1]) {
              if (In === 9) if (xn = Ke.getElementById(xr)) {
                if (xn.id === xr) return jt.call(br, xn), br;
              } else return br;
              else if (Tn && (xn = Tn.getElementById(xr)) && _o.contains(Ke, xn) && xn.id === xr) return jt.call(br, xn), br;
            } else {
              if (vn[2]) return jt.apply(br, Ke.getElementsByTagName(me)), br;
              if ((xr = vn[3]) && Ke.getElementsByClassName) return jt.apply(br, Ke.getElementsByClassName(xr)), br;
            }
            if (!sr[me + " "] && (!ze || !ze.test(me))) {
              if (Qn = me, Tn = Ke, In === 1 && (mo.test(me) || ao.test(me))) {
                for (Tn = ui.test(me) && ae(Ke.parentNode) || Ke, (Tn != Ke || !h.scope) && ((Or = Ke.getAttribute("id")) ? Or = v.escapeSelector(Or) : Ke.setAttribute("id", Or = Ar)), Kn = fn(me), tn = Kn.length; tn--; ) Kn[tn] = (Or ? "#" + Or : ":scope") + " " + Bn(Kn[tn]);
                Qn = Kn.join(",");
              }
              try {
                return jt.apply(br, Tn.querySelectorAll(Qn)), br;
              } catch {
                sr(me, true);
              } finally {
                Or === Ar && Ke.removeAttribute("id");
              }
            }
          }
          return ci(me.replace(x, "$1"), Ke, br, yr);
        }
        function Wi() {
          var me = [];
          function Ke(br, yr) {
            return me.push(br + " ") > Y.cacheLength && delete Ke[me.shift()], Ke[br + " "] = yr;
          }
          return Ke;
        }
        function Ui(me) {
          return me[Ar] = true, me;
        }
        function zt(me) {
          var Ke = ne.createElement("fieldset");
          try {
            return !!me(Ke);
          } catch {
            return false;
          } finally {
            Ke.parentNode && Ke.parentNode.removeChild(Ke), Ke = null;
          }
        }
        function Et(me) {
          return function(Ke) {
            return M(Ke, "input") && Ke.type === me;
          };
        }
        function vt(me) {
          return function(Ke) {
            return (M(Ke, "input") || M(Ke, "button")) && Ke.type === me;
          };
        }
        function Dt(me) {
          return function(Ke) {
            return "form" in Ke ? Ke.parentNode && Ke.disabled === false ? "label" in Ke ? "label" in Ke.parentNode ? Ke.parentNode.disabled === me : Ke.disabled === me : Ke.isDisabled === me || Ke.isDisabled !== !me && Si(Ke) === me : Ke.disabled === me : "label" in Ke ? Ke.disabled === me : false;
          };
        }
        function de(me) {
          return Ui(function(Ke) {
            return Ke = +Ke, Ui(function(br, yr) {
              for (var xr, tn = me([], br.length, Ke), xn = tn.length; xn--; ) br[xr = tn[xn]] && (br[xr] = !(yr[xr] = br[xr]));
            });
          });
        }
        function ae(me) {
          return me && typeof me.getElementsByTagName < "u" && me;
        }
        function Qr(me) {
          var Ke, br = me ? me.ownerDocument || me : lt;
          return br == ne || br.nodeType !== 9 || !br.documentElement || (ne = br, Ie = ne.documentElement, ve = !v.isXMLDoc(ne), Ze = Ie.matches || Ie.webkitMatchesSelector || Ie.msMatchesSelector, Ie.msMatchesSelector && lt != ne && (Ke = ne.defaultView) && Ke.top !== Ke && Ke.addEventListener("unload", Qo), h.getById = zt(function(yr) {
            return Ie.appendChild(yr).id = v.expando, !ne.getElementsByName || !ne.getElementsByName(v.expando).length;
          }), h.disconnectedMatch = zt(function(yr) {
            return Ze.call(yr, "*");
          }), h.scope = zt(function() {
            return ne.querySelectorAll(":scope");
          }), h.cssHas = zt(function() {
            try {
              return ne.querySelector(":has(*,:jqfake)"), false;
            } catch {
              return true;
            }
          }), h.getById ? (Y.filter.ID = function(yr) {
            var xr = yr.replace(yi, Mi);
            return function(tn) {
              return tn.getAttribute("id") === xr;
            };
          }, Y.find.ID = function(yr, xr) {
            if (typeof xr.getElementById < "u" && ve) {
              var tn = xr.getElementById(yr);
              return tn ? [tn] : [];
            }
          }) : (Y.filter.ID = function(yr) {
            var xr = yr.replace(yi, Mi);
            return function(tn) {
              var xn = typeof tn.getAttributeNode < "u" && tn.getAttributeNode("id");
              return xn && xn.value === xr;
            };
          }, Y.find.ID = function(yr, xr) {
            if (typeof xr.getElementById < "u" && ve) {
              var tn, xn, Or, vn = xr.getElementById(yr);
              if (vn) {
                if (tn = vn.getAttributeNode("id"), tn && tn.value === yr) return [vn];
                for (Or = xr.getElementsByName(yr), xn = 0; vn = Or[xn++]; ) if (tn = vn.getAttributeNode("id"), tn && tn.value === yr) return [vn];
              }
              return [];
            }
          }), Y.find.TAG = function(yr, xr) {
            return typeof xr.getElementsByTagName < "u" ? xr.getElementsByTagName(yr) : xr.querySelectorAll(yr);
          }, Y.find.CLASS = function(yr, xr) {
            if (typeof xr.getElementsByClassName < "u" && ve) return xr.getElementsByClassName(yr);
          }, ze = [], zt(function(yr) {
            var xr;
            Ie.appendChild(yr).innerHTML = "<a id='" + Ar + "' href='' disabled='disabled'></a><select id='" + Ar + "-\r\\' disabled='disabled'><option selected=''></option></select>", yr.querySelectorAll("[selected]").length || ze.push("\\[" + S + "*(?:value|" + gn + ")"), yr.querySelectorAll("[id~=" + Ar + "-]").length || ze.push("~="), yr.querySelectorAll("a#" + Ar + "+*").length || ze.push(".#.+[+~]"), yr.querySelectorAll(":checked").length || ze.push(":checked"), xr = ne.createElement("input"), xr.setAttribute("type", "hidden"), yr.appendChild(xr).setAttribute("name", "D"), Ie.appendChild(yr).disabled = true, yr.querySelectorAll(":disabled").length !== 2 && ze.push(":enabled", ":disabled"), xr = ne.createElement("input"), xr.setAttribute("name", ""), yr.appendChild(xr), yr.querySelectorAll("[name='']").length || ze.push("\\[" + S + "*name" + S + "*=" + S + `*(?:''|"")`);
          }), h.cssHas || ze.push(":has"), ze = ze.length && new RegExp(ze.join("|")), nr = function(yr, xr) {
            if (yr === xr) return Ft = true, 0;
            var tn = !yr.compareDocumentPosition - !xr.compareDocumentPosition;
            return tn || (tn = (yr.ownerDocument || yr) == (xr.ownerDocument || xr) ? yr.compareDocumentPosition(xr) : 1, tn & 1 || !h.sortDetached && xr.compareDocumentPosition(yr) === tn ? yr === ne || yr.ownerDocument == lt && _o.contains(lt, yr) ? -1 : xr === ne || xr.ownerDocument == lt && _o.contains(lt, xr) ? 1 : Pt ? u.call(Pt, yr) - u.call(Pt, xr) : 0 : tn & 4 ? -1 : 1);
          }), ne;
        }
        _o.matches = function(me, Ke) {
          return _o(me, null, null, Ke);
        }, _o.matchesSelector = function(me, Ke) {
          if (Qr(me), ve && !sr[Ke + " "] && (!ze || !ze.test(Ke))) try {
            var br = Ze.call(me, Ke);
            if (br || h.disconnectedMatch || me.document && me.document.nodeType !== 11) return br;
          } catch {
            sr(Ke, true);
          }
          return _o(Ke, ne, null, [me]).length > 0;
        }, _o.contains = function(me, Ke) {
          return (me.ownerDocument || me) != ne && Qr(me), v.contains(me, Ke);
        }, _o.attr = function(me, Ke) {
          (me.ownerDocument || me) != ne && Qr(me);
          var br = Y.attrHandle[Ke.toLowerCase()], yr = br && p.call(Y.attrHandle, Ke.toLowerCase()) ? br(me, Ke, !ve) : void 0;
          return yr !== void 0 ? yr : me.getAttribute(Ke);
        }, _o.error = function(me) {
          throw new Error("Syntax error, unrecognized expression: " + me);
        }, v.uniqueSort = function(me) {
          var Ke, br = [], yr = 0, xr = 0;
          if (Ft = !h.sortStable, Pt = !h.sortStable && l.call(me, 0), D.call(me, nr), Ft) {
            for (; Ke = me[xr++]; ) Ke === me[xr] && (yr = br.push(xr));
            for (; yr--; ) V.call(me, br[yr], 1);
          }
          return Pt = null, me;
        }, v.fn.uniqueSort = function() {
          return this.pushStack(v.uniqueSort(l.apply(this)));
        }, Y = v.expr = { cacheLength: 50, createPseudo: Ui, match: ho, attrHandle: {}, find: {}, relative: { ">": { dir: "parentNode", first: true }, " ": { dir: "parentNode" }, "+": { dir: "previousSibling", first: true }, "~": { dir: "previousSibling" } }, preFilter: { ATTR: function(me) {
          return me[1] = me[1].replace(yi, Mi), me[3] = (me[3] || me[4] || me[5] || "").replace(yi, Mi), me[2] === "~=" && (me[3] = " " + me[3] + " "), me.slice(0, 4);
        }, CHILD: function(me) {
          return me[1] = me[1].toLowerCase(), me[1].slice(0, 3) === "nth" ? (me[3] || _o.error(me[0]), me[4] = +(me[4] ? me[5] + (me[6] || 1) : 2 * (me[3] === "even" || me[3] === "odd")), me[5] = +(me[7] + me[8] || me[3] === "odd")) : me[3] && _o.error(me[0]), me;
        }, PSEUDO: function(me) {
          var Ke, br = !me[6] && me[2];
          return ho.CHILD.test(me[0]) ? null : (me[3] ? me[2] = me[4] || me[5] || "" : br && co.test(br) && (Ke = fn(br, true)) && (Ke = br.indexOf(")", br.length - Ke) - br.length) && (me[0] = me[0].slice(0, Ke), me[2] = br.slice(0, Ke)), me.slice(0, 3));
        } }, filter: { TAG: function(me) {
          var Ke = me.replace(yi, Mi).toLowerCase();
          return me === "*" ? function() {
            return true;
          } : function(br) {
            return M(br, Ke);
          };
        }, CLASS: function(me) {
          var Ke = Ae[me + " "];
          return Ke || (Ke = new RegExp("(^|" + S + ")" + me + "(" + S + "|$)")) && Ae(me, function(br) {
            return Ke.test(typeof br.className == "string" && br.className || typeof br.getAttribute < "u" && br.getAttribute("class") || "");
          });
        }, ATTR: function(me, Ke, br) {
          return function(yr) {
            var xr = _o.attr(yr, me);
            return xr == null ? Ke === "!=" : Ke ? (xr += "", Ke === "=" ? xr === br : Ke === "!=" ? xr !== br : Ke === "^=" ? br && xr.indexOf(br) === 0 : Ke === "*=" ? br && xr.indexOf(br) > -1 : Ke === "$=" ? br && xr.slice(-br.length) === br : Ke === "~=" ? (" " + xr.replace(ln, " ") + " ").indexOf(br) > -1 : Ke === "|=" ? xr === br || xr.slice(0, br.length + 1) === br + "-" : false) : true;
          };
        }, CHILD: function(me, Ke, br, yr, xr) {
          var tn = me.slice(0, 3) !== "nth", xn = me.slice(-4) !== "last", Or = Ke === "of-type";
          return yr === 1 && xr === 0 ? function(vn) {
            return !!vn.parentNode;
          } : function(vn, Kn, Qn) {
            var Tn, In, ce, be, Ye, _r = tn !== xn ? "nextSibling" : "previousSibling", or = vn.parentNode, dr = Or && vn.nodeName.toLowerCase(), Cr = !Qn && !Or, hr = false;
            if (or) {
              if (tn) {
                for (; _r; ) {
                  for (ce = vn; ce = ce[_r]; ) if (Or ? M(ce, dr) : ce.nodeType === 1) return false;
                  Ye = _r = me === "only" && !Ye && "nextSibling";
                }
                return true;
              }
              if (Ye = [xn ? or.firstChild : or.lastChild], xn && Cr) {
                for (In = or[Ar] || (or[Ar] = {}), Tn = In[me] || [], be = Tn[0] === It && Tn[1], hr = be && Tn[2], ce = be && or.childNodes[be]; ce = ++be && ce && ce[_r] || (hr = be = 0) || Ye.pop(); ) if (ce.nodeType === 1 && ++hr && ce === vn) {
                  In[me] = [It, be, hr];
                  break;
                }
              } else if (Cr && (In = vn[Ar] || (vn[Ar] = {}), Tn = In[me] || [], be = Tn[0] === It && Tn[1], hr = be), hr === false) for (; (ce = ++be && ce && ce[_r] || (hr = be = 0) || Ye.pop()) && !((Or ? M(ce, dr) : ce.nodeType === 1) && ++hr && (Cr && (In = ce[Ar] || (ce[Ar] = {}), In[me] = [It, hr]), ce === vn)); ) ;
              return hr -= xr, hr === yr || hr % yr === 0 && hr / yr >= 0;
            }
          };
        }, PSEUDO: function(me, Ke) {
          var br, yr = Y.pseudos[me] || Y.setFilters[me.toLowerCase()] || _o.error("unsupported pseudo: " + me);
          return yr[Ar] ? yr(Ke) : yr.length > 1 ? (br = [me, me, "", Ke], Y.setFilters.hasOwnProperty(me.toLowerCase()) ? Ui(function(xr, tn) {
            for (var xn, Or = yr(xr, Ke), vn = Or.length; vn--; ) xn = u.call(xr, Or[vn]), xr[xn] = !(tn[xn] = Or[vn]);
          }) : function(xr) {
            return yr(xr, 0, br);
          }) : yr;
        } }, pseudos: { not: Ui(function(me) {
          var Ke = [], br = [], yr = gi(me.replace(x, "$1"));
          return yr[Ar] ? Ui(function(xr, tn, xn, Or) {
            for (var vn, Kn = yr(xr, null, Or, []), Qn = xr.length; Qn--; ) (vn = Kn[Qn]) && (xr[Qn] = !(tn[Qn] = vn));
          }) : function(xr, tn, xn) {
            return Ke[0] = xr, yr(Ke, null, xn, br), Ke[0] = null, !br.pop();
          };
        }), has: Ui(function(me) {
          return function(Ke) {
            return _o(me, Ke).length > 0;
          };
        }), contains: Ui(function(me) {
          return me = me.replace(yi, Mi), function(Ke) {
            return (Ke.textContent || v.text(Ke)).indexOf(me) > -1;
          };
        }), lang: Ui(function(me) {
          return So.test(me || "") || _o.error("unsupported lang: " + me), me = me.replace(yi, Mi).toLowerCase(), function(Ke) {
            var br;
            do
              if (br = ve ? Ke.lang : Ke.getAttribute("xml:lang") || Ke.getAttribute("lang")) return br = br.toLowerCase(), br === me || br.indexOf(me + "-") === 0;
            while ((Ke = Ke.parentNode) && Ke.nodeType === 1);
            return false;
          };
        }), target: function(me) {
          var Ke = t.location && t.location.hash;
          return Ke && Ke.slice(1) === me.id;
        }, root: function(me) {
          return me === Ie;
        }, focus: function(me) {
          return me === ea() && ne.hasFocus() && !!(me.type || me.href || ~me.tabIndex);
        }, enabled: Dt(false), disabled: Dt(true), checked: function(me) {
          return M(me, "input") && !!me.checked || M(me, "option") && !!me.selected;
        }, selected: function(me) {
          return me.parentNode && me.parentNode.selectedIndex, me.selected === true;
        }, empty: function(me) {
          for (me = me.firstChild; me; me = me.nextSibling) if (me.nodeType < 6) return false;
          return true;
        }, parent: function(me) {
          return !Y.pseudos.empty(me);
        }, header: function(me) {
          return Io.test(me.nodeName);
        }, input: function(me) {
          return Lo.test(me.nodeName);
        }, button: function(me) {
          return M(me, "input") && me.type === "button" || M(me, "button");
        }, text: function(me) {
          var Ke;
          return M(me, "input") && me.type === "text" && ((Ke = me.getAttribute("type")) == null || Ke.toLowerCase() === "text");
        }, first: de(function() {
          return [0];
        }), last: de(function(me, Ke) {
          return [Ke - 1];
        }), eq: de(function(me, Ke, br) {
          return [br < 0 ? br + Ke : br];
        }), even: de(function(me, Ke) {
          for (var br = 0; br < Ke; br += 2) me.push(br);
          return me;
        }), odd: de(function(me, Ke) {
          for (var br = 1; br < Ke; br += 2) me.push(br);
          return me;
        }), lt: de(function(me, Ke, br) {
          var yr;
          for (br < 0 ? yr = br + Ke : br > Ke ? yr = Ke : yr = br; --yr >= 0; ) me.push(yr);
          return me;
        }), gt: de(function(me, Ke, br) {
          for (var yr = br < 0 ? br + Ke : br; ++yr < Ke; ) me.push(yr);
          return me;
        }) } }, Y.pseudos.nth = Y.pseudos.eq;
        for (C in { radio: true, checkbox: true, file: true, password: true, image: true }) Y.pseudos[C] = Et(C);
        for (C in { submit: true, reset: true }) Y.pseudos[C] = vt(C);
        function Sn() {
        }
        Sn.prototype = Y.filters = Y.pseudos, Y.setFilters = new Sn();
        function fn(me, Ke) {
          var br, yr, xr, tn, xn, Or, vn, Kn = ge[me + " "];
          if (Kn) return Ke ? 0 : Kn.slice(0);
          for (xn = me, Or = [], vn = Y.preFilter; xn; ) {
            (!br || (yr = Yr.exec(xn))) && (yr && (xn = xn.slice(yr[0].length) || xn), Or.push(xr = [])), br = false, (yr = ao.exec(xn)) && (br = yr.shift(), xr.push({ value: br, type: yr[0].replace(x, " ") }), xn = xn.slice(br.length));
            for (tn in Y.filter) (yr = ho[tn].exec(xn)) && (!vn[tn] || (yr = vn[tn](yr))) && (br = yr.shift(), xr.push({ value: br, type: tn, matches: yr }), xn = xn.slice(br.length));
            if (!br) break;
          }
          return Ke ? xn.length : xn ? _o.error(me) : ge(me, Or).slice(0);
        }
        function Bn(me) {
          for (var Ke = 0, br = me.length, yr = ""; Ke < br; Ke++) yr += me[Ke].value;
          return yr;
        }
        function Do(me, Ke, br) {
          var yr = Ke.dir, xr = Ke.next, tn = xr || yr, xn = br && tn === "parentNode", Or = ie++;
          return Ke.first ? function(vn, Kn, Qn) {
            for (; vn = vn[yr]; ) if (vn.nodeType === 1 || xn) return me(vn, Kn, Qn);
            return false;
          } : function(vn, Kn, Qn) {
            var Tn, In, ce = [It, Or];
            if (Qn) {
              for (; vn = vn[yr]; ) if ((vn.nodeType === 1 || xn) && me(vn, Kn, Qn)) return true;
            } else for (; vn = vn[yr]; ) if (vn.nodeType === 1 || xn) if (In = vn[Ar] || (vn[Ar] = {}), xr && M(vn, xr)) vn = vn[yr] || vn;
            else {
              if ((Tn = In[tn]) && Tn[0] === It && Tn[1] === Or) return ce[2] = Tn[2];
              if (In[tn] = ce, ce[2] = me(vn, Kn, Qn)) return true;
            }
            return false;
          };
        }
        function go(me) {
          return me.length > 1 ? function(Ke, br, yr) {
            for (var xr = me.length; xr--; ) if (!me[xr](Ke, br, yr)) return false;
            return true;
          } : me[0];
        }
        function Fn(me, Ke, br) {
          for (var yr = 0, xr = Ke.length; yr < xr; yr++) _o(me, Ke[yr], br);
          return br;
        }
        function No(me, Ke, br, yr, xr) {
          for (var tn, xn = [], Or = 0, vn = me.length, Kn = Ke != null; Or < vn; Or++) (tn = me[Or]) && (!br || br(tn, yr, xr)) && (xn.push(tn), Kn && Ke.push(Or));
          return xn;
        }
        function Fo(me, Ke, br, yr, xr, tn) {
          return yr && !yr[Ar] && (yr = Fo(yr)), xr && !xr[Ar] && (xr = Fo(xr, tn)), Ui(function(xn, Or, vn, Kn) {
            var Qn, Tn, In, ce, be = [], Ye = [], _r = Or.length, or = xn || Fn(Ke || "*", vn.nodeType ? [vn] : vn, []), dr = me && (xn || !Ke) ? No(or, be, me, vn, Kn) : or;
            if (br ? (ce = xr || (xn ? me : _r || yr) ? [] : Or, br(dr, ce, vn, Kn)) : ce = dr, yr) for (Qn = No(ce, Ye), yr(Qn, [], vn, Kn), Tn = Qn.length; Tn--; ) (In = Qn[Tn]) && (ce[Ye[Tn]] = !(dr[Ye[Tn]] = In));
            if (xn) {
              if (xr || me) {
                if (xr) {
                  for (Qn = [], Tn = ce.length; Tn--; ) (In = ce[Tn]) && Qn.push(dr[Tn] = In);
                  xr(null, ce = [], Qn, Kn);
                }
                for (Tn = ce.length; Tn--; ) (In = ce[Tn]) && (Qn = xr ? u.call(xn, In) : be[Tn]) > -1 && (xn[Qn] = !(Or[Qn] = In));
              }
            } else ce = No(ce === Or ? ce.splice(_r, ce.length) : ce), xr ? xr(null, Or, ce, Kn) : jt.apply(Or, ce);
          });
        }
        function Vo(me) {
          for (var Ke, br, yr, xr = me.length, tn = Y.relative[me[0].type], xn = tn || Y.relative[" "], Or = tn ? 1 : 0, vn = Do(function(Tn) {
            return Tn === Ke;
          }, xn, true), Kn = Do(function(Tn) {
            return u.call(Ke, Tn) > -1;
          }, xn, true), Qn = [function(Tn, In, ce) {
            var be = !tn && (ce || In != ht) || ((Ke = In).nodeType ? vn(Tn, In, ce) : Kn(Tn, In, ce));
            return Ke = null, be;
          }]; Or < xr; Or++) if (br = Y.relative[me[Or].type]) Qn = [Do(go(Qn), br)];
          else {
            if (br = Y.filter[me[Or].type].apply(null, me[Or].matches), br[Ar]) {
              for (yr = ++Or; yr < xr && !Y.relative[me[yr].type]; yr++) ;
              return Fo(Or > 1 && go(Qn), Or > 1 && Bn(me.slice(0, Or - 1).concat({ value: me[Or - 2].type === " " ? "*" : "" })).replace(x, "$1"), br, Or < yr && Vo(me.slice(Or, yr)), yr < xr && Vo(me = me.slice(yr)), yr < xr && Bn(me));
            }
            Qn.push(br);
          }
          return go(Qn);
        }
        function bi(me, Ke) {
          var br = Ke.length > 0, yr = me.length > 0, xr = function(tn, xn, Or, vn, Kn) {
            var Qn, Tn, In, ce = 0, be = "0", Ye = tn && [], _r = [], or = ht, dr = tn || yr && Y.find.TAG("*", Kn), Cr = It += or == null ? 1 : Math.random() || 0.1, hr = dr.length;
            for (Kn && (ht = xn == ne || xn || Kn); be !== hr && (Qn = dr[be]) != null; be++) {
              if (yr && Qn) {
                for (Tn = 0, !xn && Qn.ownerDocument != ne && (Qr(Qn), Or = !ve); In = me[Tn++]; ) if (In(Qn, xn || ne, Or)) {
                  jt.call(vn, Qn);
                  break;
                }
                Kn && (It = Cr);
              }
              br && ((Qn = !In && Qn) && ce--, tn && Ye.push(Qn));
            }
            if (ce += be, br && be !== ce) {
              for (Tn = 0; In = Ke[Tn++]; ) In(Ye, _r, xn, Or);
              if (tn) {
                if (ce > 0) for (; be--; ) Ye[be] || _r[be] || (_r[be] = Z.call(vn));
                _r = No(_r);
              }
              jt.apply(vn, _r), Kn && !tn && _r.length > 0 && ce + Ke.length > 1 && v.uniqueSort(vn);
            }
            return Kn && (It = Cr, ht = or), Ye;
          };
          return br ? Ui(xr) : xr;
        }
        function gi(me, Ke) {
          var br, yr = [], xr = [], tn = we[me + " "];
          if (!tn) {
            for (Ke || (Ke = fn(me)), br = Ke.length; br--; ) tn = Vo(Ke[br]), tn[Ar] ? yr.push(tn) : xr.push(tn);
            tn = we(me, bi(xr, yr)), tn.selector = me;
          }
          return tn;
        }
        function ci(me, Ke, br, yr) {
          var xr, tn, xn, Or, vn, Kn = typeof me == "function" && me, Qn = !yr && fn(me = Kn.selector || me);
          if (br = br || [], Qn.length === 1) {
            if (tn = Qn[0] = Qn[0].slice(0), tn.length > 2 && (xn = tn[0]).type === "ID" && Ke.nodeType === 9 && ve && Y.relative[tn[1].type]) {
              if (Ke = (Y.find.ID(xn.matches[0].replace(yi, Mi), Ke) || [])[0], Ke) Kn && (Ke = Ke.parentNode);
              else return br;
              me = me.slice(tn.shift().value.length);
            }
            for (xr = ho.needsContext.test(me) ? 0 : tn.length; xr-- && (xn = tn[xr], !Y.relative[Or = xn.type]); ) if ((vn = Y.find[Or]) && (yr = vn(xn.matches[0].replace(yi, Mi), ui.test(tn[0].type) && ae(Ke.parentNode) || Ke))) {
              if (tn.splice(xr, 1), me = yr.length && Bn(tn), !me) return jt.apply(br, yr), br;
              break;
            }
          }
          return (Kn || gi(me, Qn))(yr, Ke, !ve, br, !Ke || ui.test(me) && ae(Ke.parentNode) || Ke), br;
        }
        h.sortStable = Ar.split("").sort(nr).join("") === Ar, Qr(), h.sortDetached = zt(function(me) {
          return me.compareDocumentPosition(ne.createElement("fieldset")) & 1;
        }), v.find = _o, v.expr[":"] = v.expr.pseudos, v.unique = v.uniqueSort, _o.compile = gi, _o.select = ci, _o.setDocument = Qr, _o.tokenize = fn, _o.escape = v.escapeSelector, _o.getText = v.text, _o.isXML = v.isXMLDoc, _o.selectors = v.expr, _o.support = v.support, _o.uniqueSort = v.uniqueSort;
      })();
      var at = function(C, Y, ht) {
        for (var Pt = [], Ft = ht !== void 0; (C = C[Y]) && C.nodeType !== 9; ) if (C.nodeType === 1) {
          if (Ft && v(C).is(ht)) break;
          Pt.push(C);
        }
        return Pt;
      }, rt = function(C, Y) {
        for (var ht = []; C; C = C.nextSibling) C.nodeType === 1 && C !== Y && ht.push(C);
        return ht;
      }, ot = v.expr.match.needsContext, X = /^<([a-z][^\/\0>:\x20\t\r\n\f]*)[\x20\t\r\n\f]*\/?>(?:<\/\1>|)$/i;
      function I(C, Y, ht) {
        return m(Y) ? v.grep(C, function(Pt, Ft) {
          return !!Y.call(Pt, Ft, Pt) !== ht;
        }) : Y.nodeType ? v.grep(C, function(Pt) {
          return Pt === Y !== ht;
        }) : typeof Y != "string" ? v.grep(C, function(Pt) {
          return u.call(Y, Pt) > -1 !== ht;
        }) : v.filter(Y, C, ht);
      }
      v.filter = function(C, Y, ht) {
        var Pt = Y[0];
        return ht && (C = ":not(" + C + ")"), Y.length === 1 && Pt.nodeType === 1 ? v.find.matchesSelector(Pt, C) ? [Pt] : [] : v.find.matches(C, v.grep(Y, function(Ft) {
          return Ft.nodeType === 1;
        }));
      }, v.fn.extend({ find: function(C) {
        var Y, ht, Pt = this.length, Ft = this;
        if (typeof C != "string") return this.pushStack(v(C).filter(function() {
          for (Y = 0; Y < Pt; Y++) if (v.contains(Ft[Y], this)) return true;
        }));
        for (ht = this.pushStack([]), Y = 0; Y < Pt; Y++) v.find(C, Ft[Y], ht);
        return Pt > 1 ? v.uniqueSort(ht) : ht;
      }, filter: function(C) {
        return this.pushStack(I(this, C || [], false));
      }, not: function(C) {
        return this.pushStack(I(this, C || [], true));
      }, is: function(C) {
        return !!I(this, typeof C == "string" && ot.test(C) ? v(C) : C || [], false).length;
      } });
      var nt, ft = /^(?:\s*(<[\w\W]+>)[^>]*|#([\w-]+))$/, dt = v.fn.init = function(C, Y, ht) {
        var Pt, Ft;
        if (!C) return this;
        if (ht = ht || nt, typeof C == "string") if (C[0] === "<" && C[C.length - 1] === ">" && C.length >= 3 ? Pt = [null, C, null] : Pt = ft.exec(C), Pt && (Pt[1] || !Y)) if (Pt[1]) {
          if (Y = Y instanceof v ? Y[0] : Y, v.merge(this, v.parseHTML(Pt[1], Y && Y.nodeType ? Y.ownerDocument || Y : w, true)), X.test(Pt[1]) && v.isPlainObject(Y)) for (Pt in Y) m(this[Pt]) ? this[Pt](Y[Pt]) : this.attr(Pt, Y[Pt]);
          return this;
        } else return Ft = w.getElementById(Pt[2]), Ft && (this[0] = Ft, this.length = 1), this;
        else return !Y || Y.jquery ? (Y || ht).find(C) : this.constructor(Y).find(C);
        else {
          if (C.nodeType) return this[0] = C, this.length = 1, this;
          if (m(C)) return ht.ready !== void 0 ? ht.ready(C) : C(v);
        }
        return v.makeArray(C, this);
      };
      dt.prototype = v.fn, nt = v(w);
      var Lt = /^(?:parents|prev(?:Until|All))/, $ = { children: true, contents: true, next: true, prev: true };
      v.fn.extend({ has: function(C) {
        var Y = v(C, this), ht = Y.length;
        return this.filter(function() {
          for (var Pt = 0; Pt < ht; Pt++) if (v.contains(this, Y[Pt])) return true;
        });
      }, closest: function(C, Y) {
        var ht, Pt = 0, Ft = this.length, jt = [], ne = typeof C != "string" && v(C);
        if (!ot.test(C)) {
          for (; Pt < Ft; Pt++) for (ht = this[Pt]; ht && ht !== Y; ht = ht.parentNode) if (ht.nodeType < 11 && (ne ? ne.index(ht) > -1 : ht.nodeType === 1 && v.find.matchesSelector(ht, C))) {
            jt.push(ht);
            break;
          }
        }
        return this.pushStack(jt.length > 1 ? v.uniqueSort(jt) : jt);
      }, index: function(C) {
        return C ? typeof C == "string" ? u.call(v(C), this[0]) : u.call(this, C.jquery ? C[0] : C) : this[0] && this[0].parentNode ? this.first().prevAll().length : -1;
      }, add: function(C, Y) {
        return this.pushStack(v.uniqueSort(v.merge(this.get(), v(C, Y))));
      }, addBack: function(C) {
        return this.add(C == null ? this.prevObject : this.prevObject.filter(C));
      } });
      function it(C, Y) {
        for (; (C = C[Y]) && C.nodeType !== 1; ) ;
        return C;
      }
      v.each({ parent: function(C) {
        var Y = C.parentNode;
        return Y && Y.nodeType !== 11 ? Y : null;
      }, parents: function(C) {
        return at(C, "parentNode");
      }, parentsUntil: function(C, Y, ht) {
        return at(C, "parentNode", ht);
      }, next: function(C) {
        return it(C, "nextSibling");
      }, prev: function(C) {
        return it(C, "previousSibling");
      }, nextAll: function(C) {
        return at(C, "nextSibling");
      }, prevAll: function(C) {
        return at(C, "previousSibling");
      }, nextUntil: function(C, Y, ht) {
        return at(C, "nextSibling", ht);
      }, prevUntil: function(C, Y, ht) {
        return at(C, "previousSibling", ht);
      }, siblings: function(C) {
        return rt((C.parentNode || {}).firstChild, C);
      }, children: function(C) {
        return rt(C.firstChild);
      }, contents: function(C) {
        return C.contentDocument != null && a(C.contentDocument) ? C.contentDocument : (M(C, "template") && (C = C.content || C), v.merge([], C.childNodes));
      } }, function(C, Y) {
        v.fn[C] = function(ht, Pt) {
          var Ft = v.map(this, Y, ht);
          return C.slice(-5) !== "Until" && (Pt = ht), Pt && typeof Pt == "string" && (Ft = v.filter(Pt, Ft)), this.length > 1 && ($[C] || v.uniqueSort(Ft), Lt.test(C) && Ft.reverse()), this.pushStack(Ft);
        };
      });
      var mt = /[^\x20\t\r\n\f]+/g;
      function Ot(C) {
        var Y = {};
        return v.each(C.match(mt) || [], function(ht, Pt) {
          Y[Pt] = true;
        }), Y;
      }
      v.Callbacks = function(C) {
        C = typeof C == "string" ? Ot(C) : v.extend({}, C);
        var Y, ht, Pt, Ft, jt = [], ne = [], Ie = -1, ve = function() {
          for (Ft = Ft || C.once, Pt = Y = true; ne.length; Ie = -1) for (ht = ne.shift(); ++Ie < jt.length; ) jt[Ie].apply(ht[0], ht[1]) === false && C.stopOnFalse && (Ie = jt.length, ht = false);
          C.memory || (ht = false), Y = false, Ft && (ht ? jt = [] : jt = "");
        }, ze = { add: function() {
          return jt && (ht && !Y && (Ie = jt.length - 1, ne.push(ht)), function Ze(Ar) {
            v.each(Ar, function(It, ie) {
              m(ie) ? (!C.unique || !ze.has(ie)) && jt.push(ie) : ie && ie.length && k(ie) !== "string" && Ze(ie);
            });
          }(arguments), ht && !Y && ve()), this;
        }, remove: function() {
          return v.each(arguments, function(Ze, Ar) {
            for (var It; (It = v.inArray(Ar, jt, It)) > -1; ) jt.splice(It, 1), It <= Ie && Ie--;
          }), this;
        }, has: function(Ze) {
          return Ze ? v.inArray(Ze, jt) > -1 : jt.length > 0;
        }, empty: function() {
          return jt && (jt = []), this;
        }, disable: function() {
          return Ft = ne = [], jt = ht = "", this;
        }, disabled: function() {
          return !jt;
        }, lock: function() {
          return Ft = ne = [], !ht && !Y && (jt = ht = ""), this;
        }, locked: function() {
          return !!Ft;
        }, fireWith: function(Ze, Ar) {
          return Ft || (Ar = Ar || [], Ar = [Ze, Ar.slice ? Ar.slice() : Ar], ne.push(Ar), Y || ve()), this;
        }, fire: function() {
          return ze.fireWith(this, arguments), this;
        }, fired: function() {
          return !!Pt;
        } };
        return ze;
      };
      function bt(C) {
        return C;
      }
      function xt(C) {
        throw C;
      }
      function Ct(C, Y, ht, Pt) {
        var Ft;
        try {
          C && m(Ft = C.promise) ? Ft.call(C).done(Y).fail(ht) : C && m(Ft = C.then) ? Ft.call(C, Y, ht) : Y.apply(void 0, [C].slice(Pt));
        } catch (jt) {
          ht.apply(void 0, [jt]);
        }
      }
      v.extend({ Deferred: function(C) {
        var Y = [["notify", "progress", v.Callbacks("memory"), v.Callbacks("memory"), 2], ["resolve", "done", v.Callbacks("once memory"), v.Callbacks("once memory"), 0, "resolved"], ["reject", "fail", v.Callbacks("once memory"), v.Callbacks("once memory"), 1, "rejected"]], ht = "pending", Pt = { state: function() {
          return ht;
        }, always: function() {
          return Ft.done(arguments).fail(arguments), this;
        }, catch: function(jt) {
          return Pt.then(null, jt);
        }, pipe: function() {
          var jt = arguments;
          return v.Deferred(function(ne) {
            v.each(Y, function(Ie, ve) {
              var ze = m(jt[ve[4]]) && jt[ve[4]];
              Ft[ve[1]](function() {
                var Ze = ze && ze.apply(this, arguments);
                Ze && m(Ze.promise) ? Ze.promise().progress(ne.notify).done(ne.resolve).fail(ne.reject) : ne[ve[0] + "With"](this, ze ? [Ze] : arguments);
              });
            }), jt = null;
          }).promise();
        }, then: function(jt, ne, Ie) {
          var ve = 0;
          function ze(Ze, Ar, It, ie) {
            return function() {
              var Ae = this, ge = arguments, we = function() {
                var nr, gn;
                if (!(Ze < ve)) {
                  if (nr = It.apply(Ae, ge), nr === Ar.promise()) throw new TypeError("Thenable self-resolution");
                  gn = nr && (typeof nr == "object" || typeof nr == "function") && nr.then, m(gn) ? ie ? gn.call(nr, ze(ve, Ar, bt, ie), ze(ve, Ar, xt, ie)) : (ve++, gn.call(nr, ze(ve, Ar, bt, ie), ze(ve, Ar, xt, ie), ze(ve, Ar, bt, Ar.notifyWith))) : (It !== bt && (Ae = void 0, ge = [nr]), (ie || Ar.resolveWith)(Ae, ge));
                }
              }, sr = ie ? we : function() {
                try {
                  we();
                } catch (nr) {
                  v.Deferred.exceptionHook && v.Deferred.exceptionHook(nr, sr.error), Ze + 1 >= ve && (It !== xt && (Ae = void 0, ge = [nr]), Ar.rejectWith(Ae, ge));
                }
              };
              Ze ? sr() : (v.Deferred.getErrorHook ? sr.error = v.Deferred.getErrorHook() : v.Deferred.getStackHook && (sr.error = v.Deferred.getStackHook()), t.setTimeout(sr));
            };
          }
          return v.Deferred(function(Ze) {
            Y[0][3].add(ze(0, Ze, m(Ie) ? Ie : bt, Ze.notifyWith)), Y[1][3].add(ze(0, Ze, m(jt) ? jt : bt)), Y[2][3].add(ze(0, Ze, m(ne) ? ne : xt));
          }).promise();
        }, promise: function(jt) {
          return jt != null ? v.extend(jt, Pt) : Pt;
        } }, Ft = {};
        return v.each(Y, function(jt, ne) {
          var Ie = ne[2], ve = ne[5];
          Pt[ne[1]] = Ie.add, ve && Ie.add(function() {
            ht = ve;
          }, Y[3 - jt][2].disable, Y[3 - jt][3].disable, Y[0][2].lock, Y[0][3].lock), Ie.add(ne[3].fire), Ft[ne[0]] = function() {
            return Ft[ne[0] + "With"](this === Ft ? void 0 : this, arguments), this;
          }, Ft[ne[0] + "With"] = Ie.fireWith;
        }), Pt.promise(Ft), C && C.call(Ft, Ft), Ft;
      }, when: function(C) {
        var Y = arguments.length, ht = Y, Pt = Array(ht), Ft = l.call(arguments), jt = v.Deferred(), ne = function(Ie) {
          return function(ve) {
            Pt[Ie] = this, Ft[Ie] = arguments.length > 1 ? l.call(arguments) : ve, --Y || jt.resolveWith(Pt, Ft);
          };
        };
        if (Y <= 1 && (Ct(C, jt.done(ne(ht)).resolve, jt.reject, !Y), jt.state() === "pending" || m(Ft[ht] && Ft[ht].then))) return jt.then();
        for (; ht--; ) Ct(Ft[ht], ne(ht), jt.reject);
        return jt.promise();
      } });
      var Tt = /^(Eval|Internal|Range|Reference|Syntax|Type|URI)Error$/;
      v.Deferred.exceptionHook = function(C, Y) {
        t.console && t.console.warn && C && Tt.test(C.name) && t.console.warn("jQuery.Deferred exception: " + C.message, C.stack, Y);
      }, v.readyException = function(C) {
        t.setTimeout(function() {
          throw C;
        });
      };
      var Bt = v.Deferred();
      v.fn.ready = function(C) {
        return Bt.then(C).catch(function(Y) {
          v.readyException(Y);
        }), this;
      }, v.extend({ isReady: false, readyWait: 1, ready: function(C) {
        (C === true ? --v.readyWait : v.isReady) || (v.isReady = true, !(C !== true && --v.readyWait > 0) && Bt.resolveWith(w, [v]));
      } }), v.ready.then = Bt.then;
      function At() {
        w.removeEventListener("DOMContentLoaded", At), t.removeEventListener("load", At), v.ready();
      }
      w.readyState === "complete" || w.readyState !== "loading" && !w.documentElement.doScroll ? t.setTimeout(v.ready) : (w.addEventListener("DOMContentLoaded", At), t.addEventListener("load", At));
      var Ut = function(C, Y, ht, Pt, Ft, jt, ne) {
        var Ie = 0, ve = C.length, ze = ht == null;
        if (k(ht) === "object") {
          Ft = true;
          for (Ie in ht) Ut(C, Y, Ie, ht[Ie], true, jt, ne);
        } else if (Pt !== void 0 && (Ft = true, m(Pt) || (ne = true), ze && (ne ? (Y.call(C, Pt), Y = null) : (ze = Y, Y = function(Ze, Ar, It) {
          return ze.call(v(Ze), It);
        })), Y)) for (; Ie < ve; Ie++) Y(C[Ie], ht, ne ? Pt : Pt.call(C[Ie], Ie, Y(C[Ie], ht)));
        return Ft ? C : ze ? Y.call(C) : ve ? Y(C[0], ht) : jt;
      }, Vt = /^-ms-/, oe = /-([a-z])/g;
      function te(C, Y) {
        return Y.toUpperCase();
      }
      function yt(C) {
        return C.replace(Vt, "ms-").replace(oe, te);
      }
      var Mt = function(C) {
        return C.nodeType === 1 || C.nodeType === 9 || !+C.nodeType;
      };
      function O() {
        this.expando = v.expando + O.uid++;
      }
      O.uid = 1, O.prototype = { cache: function(C) {
        var Y = C[this.expando];
        return Y || (Y = {}, Mt(C) && (C.nodeType ? C[this.expando] = Y : Object.defineProperty(C, this.expando, { value: Y, configurable: true }))), Y;
      }, set: function(C, Y, ht) {
        var Pt, Ft = this.cache(C);
        if (typeof Y == "string") Ft[yt(Y)] = ht;
        else for (Pt in Y) Ft[yt(Pt)] = Y[Pt];
        return Ft;
      }, get: function(C, Y) {
        return Y === void 0 ? this.cache(C) : C[this.expando] && C[this.expando][yt(Y)];
      }, access: function(C, Y, ht) {
        return Y === void 0 || Y && typeof Y == "string" && ht === void 0 ? this.get(C, Y) : (this.set(C, Y, ht), ht !== void 0 ? ht : Y);
      }, remove: function(C, Y) {
        var ht, Pt = C[this.expando];
        if (Pt !== void 0) {
          if (Y !== void 0) for (Array.isArray(Y) ? Y = Y.map(yt) : (Y = yt(Y), Y = Y in Pt ? [Y] : Y.match(mt) || []), ht = Y.length; ht--; ) delete Pt[Y[ht]];
          (Y === void 0 || v.isEmptyObject(Pt)) && (C.nodeType ? C[this.expando] = void 0 : delete C[this.expando]);
        }
      }, hasData: function(C) {
        var Y = C[this.expando];
        return Y !== void 0 && !v.isEmptyObject(Y);
      } };
      var z = new O(), J = new O(), tt = /^(?:\{[\w\W]*\}|\[[\w\W]*\])$/, H = /[A-Z]/g;
      function K(C) {
        return C === "true" ? true : C === "false" ? false : C === "null" ? null : C === +C + "" ? +C : tt.test(C) ? JSON.parse(C) : C;
      }
      function q(C, Y, ht) {
        var Pt;
        if (ht === void 0 && C.nodeType === 1) if (Pt = "data-" + Y.replace(H, "-$&").toLowerCase(), ht = C.getAttribute(Pt), typeof ht == "string") {
          try {
            ht = K(ht);
          } catch {
          }
          J.set(C, Y, ht);
        } else ht = void 0;
        return ht;
      }
      v.extend({ hasData: function(C) {
        return J.hasData(C) || z.hasData(C);
      }, data: function(C, Y, ht) {
        return J.access(C, Y, ht);
      }, removeData: function(C, Y) {
        J.remove(C, Y);
      }, _data: function(C, Y, ht) {
        return z.access(C, Y, ht);
      }, _removeData: function(C, Y) {
        z.remove(C, Y);
      } }), v.fn.extend({ data: function(C, Y) {
        var ht, Pt, Ft, jt = this[0], ne = jt && jt.attributes;
        if (C === void 0) {
          if (this.length && (Ft = J.get(jt), jt.nodeType === 1 && !z.get(jt, "hasDataAttrs"))) {
            for (ht = ne.length; ht--; ) ne[ht] && (Pt = ne[ht].name, Pt.indexOf("data-") === 0 && (Pt = yt(Pt.slice(5)), q(jt, Pt, Ft[Pt])));
            z.set(jt, "hasDataAttrs", true);
          }
          return Ft;
        }
        return typeof C == "object" ? this.each(function() {
          J.set(this, C);
        }) : Ut(this, function(Ie) {
          var ve;
          if (jt && Ie === void 0) return ve = J.get(jt, C), ve !== void 0 || (ve = q(jt, C), ve !== void 0) ? ve : void 0;
          this.each(function() {
            J.set(this, C, Ie);
          });
        }, null, Y, arguments.length > 1, null, true);
      }, removeData: function(C) {
        return this.each(function() {
          J.remove(this, C);
        });
      } }), v.extend({ queue: function(C, Y, ht) {
        var Pt;
        if (C) return Y = (Y || "fx") + "queue", Pt = z.get(C, Y), ht && (!Pt || Array.isArray(ht) ? Pt = z.access(C, Y, v.makeArray(ht)) : Pt.push(ht)), Pt || [];
      }, dequeue: function(C, Y) {
        Y = Y || "fx";
        var ht = v.queue(C, Y), Pt = ht.length, Ft = ht.shift(), jt = v._queueHooks(C, Y), ne = function() {
          v.dequeue(C, Y);
        };
        Ft === "inprogress" && (Ft = ht.shift(), Pt--), Ft && (Y === "fx" && ht.unshift("inprogress"), delete jt.stop, Ft.call(C, ne, jt)), !Pt && jt && jt.empty.fire();
      }, _queueHooks: function(C, Y) {
        var ht = Y + "queueHooks";
        return z.get(C, ht) || z.access(C, ht, { empty: v.Callbacks("once memory").add(function() {
          z.remove(C, [Y + "queue", ht]);
        }) });
      } }), v.fn.extend({ queue: function(C, Y) {
        var ht = 2;
        return typeof C != "string" && (Y = C, C = "fx", ht--), arguments.length < ht ? v.queue(this[0], C) : Y === void 0 ? this : this.each(function() {
          var Pt = v.queue(this, C, Y);
          v._queueHooks(this, C), C === "fx" && Pt[0] !== "inprogress" && v.dequeue(this, C);
        });
      }, dequeue: function(C) {
        return this.each(function() {
          v.dequeue(this, C);
        });
      }, clearQueue: function(C) {
        return this.queue(C || "fx", []);
      }, promise: function(C, Y) {
        var ht, Pt = 1, Ft = v.Deferred(), jt = this, ne = this.length, Ie = function() {
          --Pt || Ft.resolveWith(jt, [jt]);
        };
        for (typeof C != "string" && (Y = C, C = void 0), C = C || "fx"; ne--; ) ht = z.get(jt[ne], C + "queueHooks"), ht && ht.empty && (Pt++, ht.empty.add(Ie));
        return Ie(), Ft.promise(Y);
      } });
      var _ = /[+-]?(?:\d*\.|)\d+(?:[eE][+-]?\d+|)/.source, L = new RegExp("^(?:([+-])=|)(" + _ + ")([a-z%]*)$", "i"), et = ["Top", "Right", "Bottom", "Left"], St = w.documentElement, kt = function(C) {
        return v.contains(C.ownerDocument, C);
      }, ct = { composed: true };
      St.getRootNode && (kt = function(C) {
        return v.contains(C.ownerDocument, C) || C.getRootNode(ct) === C.ownerDocument;
      });
      var j = function(C, Y) {
        return C = Y || C, C.style.display === "none" || C.style.display === "" && kt(C) && v.css(C, "display") === "none";
      };
      function ut(C, Y, ht, Pt) {
        var Ft, jt, ne = 20, Ie = Pt ? function() {
          return Pt.cur();
        } : function() {
          return v.css(C, Y, "");
        }, ve = Ie(), ze = ht && ht[3] || (v.cssNumber[Y] ? "" : "px"), Ze = C.nodeType && (v.cssNumber[Y] || ze !== "px" && +ve) && L.exec(v.css(C, Y));
        if (Ze && Ze[3] !== ze) {
          for (ve = ve / 2, ze = ze || Ze[3], Ze = +ve || 1; ne--; ) v.style(C, Y, Ze + ze), (1 - jt) * (1 - (jt = Ie() / ve || 0.5)) <= 0 && (ne = 0), Ze = Ze / jt;
          Ze = Ze * 2, v.style(C, Y, Ze + ze), ht = ht || [];
        }
        return ht && (Ze = +Ze || +ve || 0, Ft = ht[1] ? Ze + (ht[1] + 1) * ht[2] : +ht[2], Pt && (Pt.unit = ze, Pt.start = Ze, Pt.end = Ft)), Ft;
      }
      var gt = {};
      function $t(C) {
        var Y, ht = C.ownerDocument, Pt = C.nodeName, Ft = gt[Pt];
        return Ft || (Y = ht.body.appendChild(ht.createElement(Pt)), Ft = v.css(Y, "display"), Y.parentNode.removeChild(Y), Ft === "none" && (Ft = "block"), gt[Pt] = Ft, Ft);
      }
      function Ht(C, Y) {
        for (var ht, Pt, Ft = [], jt = 0, ne = C.length; jt < ne; jt++) Pt = C[jt], Pt.style && (ht = Pt.style.display, Y ? (ht === "none" && (Ft[jt] = z.get(Pt, "display") || null, Ft[jt] || (Pt.style.display = "")), Pt.style.display === "" && j(Pt) && (Ft[jt] = $t(Pt))) : ht !== "none" && (Ft[jt] = "none", z.set(Pt, "display", ht)));
        for (jt = 0; jt < ne; jt++) Ft[jt] != null && (C[jt].style.display = Ft[jt]);
        return C;
      }
      v.fn.extend({ show: function() {
        return Ht(this, true);
      }, hide: function() {
        return Ht(this);
      }, toggle: function(C) {
        return typeof C == "boolean" ? C ? this.show() : this.hide() : this.each(function() {
          j(this) ? v(this).show() : v(this).hide();
        });
      } });
      var wt = /^(?:checkbox|radio)$/i, Jt = /<([a-z][^\/\0>\x20\t\r\n\f]*)/i, Ee = /^$|^module$|\/(?:java|ecma)script/i;
      (function() {
        var C = w.createDocumentFragment(), Y = C.appendChild(w.createElement("div")), ht = w.createElement("input");
        ht.setAttribute("type", "radio"), ht.setAttribute("checked", "checked"), ht.setAttribute("name", "t"), Y.appendChild(ht), h.checkClone = Y.cloneNode(true).cloneNode(true).lastChild.checked, Y.innerHTML = "<textarea>x</textarea>", h.noCloneChecked = !!Y.cloneNode(true).lastChild.defaultValue, Y.innerHTML = "<option></option>", h.option = !!Y.lastChild;
      })();
      var cr = { thead: [1, "<table>", "</table>"], col: [2, "<table><colgroup>", "</colgroup></table>"], tr: [2, "<table><tbody>", "</tbody></table>"], td: [3, "<table><tbody><tr>", "</tr></tbody></table>"], _default: [0, "", ""] };
      cr.tbody = cr.tfoot = cr.colgroup = cr.caption = cr.thead, cr.th = cr.td, h.option || (cr.optgroup = cr.option = [1, "<select multiple='multiple'>", "</select>"]);
      function Lr(C, Y) {
        var ht;
        return typeof C.getElementsByTagName < "u" ? ht = C.getElementsByTagName(Y || "*") : typeof C.querySelectorAll < "u" ? ht = C.querySelectorAll(Y || "*") : ht = [], Y === void 0 || Y && M(C, Y) ? v.merge([C], ht) : ht;
      }
      function on(C, Y) {
        for (var ht = 0, Pt = C.length; ht < Pt; ht++) z.set(C[ht], "globalEval", !Y || z.get(Y[ht], "globalEval"));
      }
      var Zr = /<|&#?\w+;/;
      function to(C, Y, ht, Pt, Ft) {
        for (var jt, ne, Ie, ve, ze, Ze, Ar = Y.createDocumentFragment(), It = [], ie = 0, Ae = C.length; ie < Ae; ie++) if (jt = C[ie], jt || jt === 0) if (k(jt) === "object") v.merge(It, jt.nodeType ? [jt] : jt);
        else if (!Zr.test(jt)) It.push(Y.createTextNode(jt));
        else {
          for (ne = ne || Ar.appendChild(Y.createElement("div")), Ie = (Jt.exec(jt) || ["", ""])[1].toLowerCase(), ve = cr[Ie] || cr._default, ne.innerHTML = ve[1] + v.htmlPrefilter(jt) + ve[2], Ze = ve[0]; Ze--; ) ne = ne.lastChild;
          v.merge(It, ne.childNodes), ne = Ar.firstChild, ne.textContent = "";
        }
        for (Ar.textContent = "", ie = 0; jt = It[ie++]; ) {
          if (Pt && v.inArray(jt, Pt) > -1) {
            Ft && Ft.push(jt);
            continue;
          }
          if (ze = kt(jt), ne = Lr(Ar.appendChild(jt), "script"), ze && on(ne), ht) for (Ze = 0; jt = ne[Ze++]; ) Ee.test(jt.type || "") && ht.push(jt);
        }
        return Ar;
      }
      var qn = /^([^.]*)(?:\.(.+)|)/;
      function jn() {
        return true;
      }
      function eo() {
        return false;
      }
      function no(C, Y, ht, Pt, Ft, jt) {
        var ne, Ie;
        if (typeof Y == "object") {
          typeof ht != "string" && (Pt = Pt || ht, ht = void 0);
          for (Ie in Y) no(C, Ie, ht, Pt, Y[Ie], jt);
          return C;
        }
        if (Pt == null && Ft == null ? (Ft = ht, Pt = ht = void 0) : Ft == null && (typeof ht == "string" ? (Ft = Pt, Pt = void 0) : (Ft = Pt, Pt = ht, ht = void 0)), Ft === false) Ft = eo;
        else if (!Ft) return C;
        return jt === 1 && (ne = Ft, Ft = function(ve) {
          return v().off(ve), ne.apply(this, arguments);
        }, Ft.guid = ne.guid || (ne.guid = v.guid++)), C.each(function() {
          v.event.add(this, Y, Ft, Pt, ht);
        });
      }
      v.event = { global: {}, add: function(C, Y, ht, Pt, Ft) {
        var jt, ne, Ie, ve, ze, Ze, Ar, It, ie, Ae, ge, we = z.get(C);
        if (Mt(C)) for (ht.handler && (jt = ht, ht = jt.handler, Ft = jt.selector), Ft && v.find.matchesSelector(St, Ft), ht.guid || (ht.guid = v.guid++), (ve = we.events) || (ve = we.events = /* @__PURE__ */ Object.create(null)), (ne = we.handle) || (ne = we.handle = function(sr) {
          return typeof v < "u" && v.event.triggered !== sr.type ? v.event.dispatch.apply(C, arguments) : void 0;
        }), Y = (Y || "").match(mt) || [""], ze = Y.length; ze--; ) Ie = qn.exec(Y[ze]) || [], ie = ge = Ie[1], Ae = (Ie[2] || "").split(".").sort(), ie && (Ar = v.event.special[ie] || {}, ie = (Ft ? Ar.delegateType : Ar.bindType) || ie, Ar = v.event.special[ie] || {}, Ze = v.extend({ type: ie, origType: ge, data: Pt, handler: ht, guid: ht.guid, selector: Ft, needsContext: Ft && v.expr.match.needsContext.test(Ft), namespace: Ae.join(".") }, jt), (It = ve[ie]) || (It = ve[ie] = [], It.delegateCount = 0, (!Ar.setup || Ar.setup.call(C, Pt, Ae, ne) === false) && C.addEventListener && C.addEventListener(ie, ne)), Ar.add && (Ar.add.call(C, Ze), Ze.handler.guid || (Ze.handler.guid = ht.guid)), Ft ? It.splice(It.delegateCount++, 0, Ze) : It.push(Ze), v.event.global[ie] = true);
      }, remove: function(C, Y, ht, Pt, Ft) {
        var jt, ne, Ie, ve, ze, Ze, Ar, It, ie, Ae, ge, we = z.hasData(C) && z.get(C);
        if (!(!we || !(ve = we.events))) {
          for (Y = (Y || "").match(mt) || [""], ze = Y.length; ze--; ) {
            if (Ie = qn.exec(Y[ze]) || [], ie = ge = Ie[1], Ae = (Ie[2] || "").split(".").sort(), !ie) {
              for (ie in ve) v.event.remove(C, ie + Y[ze], ht, Pt, true);
              continue;
            }
            for (Ar = v.event.special[ie] || {}, ie = (Pt ? Ar.delegateType : Ar.bindType) || ie, It = ve[ie] || [], Ie = Ie[2] && new RegExp("(^|\\.)" + Ae.join("\\.(?:.*\\.|)") + "(\\.|$)"), ne = jt = It.length; jt--; ) Ze = It[jt], (Ft || ge === Ze.origType) && (!ht || ht.guid === Ze.guid) && (!Ie || Ie.test(Ze.namespace)) && (!Pt || Pt === Ze.selector || Pt === "**" && Ze.selector) && (It.splice(jt, 1), Ze.selector && It.delegateCount--, Ar.remove && Ar.remove.call(C, Ze));
            ne && !It.length && ((!Ar.teardown || Ar.teardown.call(C, Ae, we.handle) === false) && v.removeEvent(C, ie, we.handle), delete ve[ie]);
          }
          v.isEmptyObject(ve) && z.remove(C, "handle events");
        }
      }, dispatch: function(C) {
        var Y, ht, Pt, Ft, jt, ne, Ie = new Array(arguments.length), ve = v.event.fix(C), ze = (z.get(this, "events") || /* @__PURE__ */ Object.create(null))[ve.type] || [], Ze = v.event.special[ve.type] || {};
        for (Ie[0] = ve, Y = 1; Y < arguments.length; Y++) Ie[Y] = arguments[Y];
        if (ve.delegateTarget = this, !(Ze.preDispatch && Ze.preDispatch.call(this, ve) === false)) {
          for (ne = v.event.handlers.call(this, ve, ze), Y = 0; (Ft = ne[Y++]) && !ve.isPropagationStopped(); ) for (ve.currentTarget = Ft.elem, ht = 0; (jt = Ft.handlers[ht++]) && !ve.isImmediatePropagationStopped(); ) (!ve.rnamespace || jt.namespace === false || ve.rnamespace.test(jt.namespace)) && (ve.handleObj = jt, ve.data = jt.data, Pt = ((v.event.special[jt.origType] || {}).handle || jt.handler).apply(Ft.elem, Ie), Pt !== void 0 && (ve.result = Pt) === false && (ve.preventDefault(), ve.stopPropagation()));
          return Ze.postDispatch && Ze.postDispatch.call(this, ve), ve.result;
        }
      }, handlers: function(C, Y) {
        var ht, Pt, Ft, jt, ne, Ie = [], ve = Y.delegateCount, ze = C.target;
        if (ve && ze.nodeType && !(C.type === "click" && C.button >= 1)) {
          for (; ze !== this; ze = ze.parentNode || this) if (ze.nodeType === 1 && !(C.type === "click" && ze.disabled === true)) {
            for (jt = [], ne = {}, ht = 0; ht < ve; ht++) Pt = Y[ht], Ft = Pt.selector + " ", ne[Ft] === void 0 && (ne[Ft] = Pt.needsContext ? v(Ft, this).index(ze) > -1 : v.find(Ft, this, null, [ze]).length), ne[Ft] && jt.push(Pt);
            jt.length && Ie.push({ elem: ze, handlers: jt });
          }
        }
        return ze = this, ve < Y.length && Ie.push({ elem: ze, handlers: Y.slice(ve) }), Ie;
      }, addProp: function(C, Y) {
        Object.defineProperty(v.Event.prototype, C, { enumerable: true, configurable: true, get: m(Y) ? function() {
          if (this.originalEvent) return Y(this.originalEvent);
        } : function() {
          if (this.originalEvent) return this.originalEvent[C];
        }, set: function(ht) {
          Object.defineProperty(this, C, { enumerable: true, configurable: true, writable: true, value: ht });
        } });
      }, fix: function(C) {
        return C[v.expando] ? C : new v.Event(C);
      }, special: { load: { noBubble: true }, click: { setup: function(C) {
        var Y = this || C;
        return wt.test(Y.type) && Y.click && M(Y, "input") && Dn(Y, "click", true), false;
      }, trigger: function(C) {
        var Y = this || C;
        return wt.test(Y.type) && Y.click && M(Y, "input") && Dn(Y, "click"), true;
      }, _default: function(C) {
        var Y = C.target;
        return wt.test(Y.type) && Y.click && M(Y, "input") && z.get(Y, "click") || M(Y, "a");
      } }, beforeunload: { postDispatch: function(C) {
        C.result !== void 0 && C.originalEvent && (C.originalEvent.returnValue = C.result);
      } } } };
      function Dn(C, Y, ht) {
        if (!ht) {
          z.get(C, Y) === void 0 && v.event.add(C, Y, jn);
          return;
        }
        z.set(C, Y, false), v.event.add(C, Y, { namespace: false, handler: function(Pt) {
          var Ft, jt = z.get(this, Y);
          if (Pt.isTrigger & 1 && this[Y]) {
            if (jt) (v.event.special[Y] || {}).delegateType && Pt.stopPropagation();
            else if (jt = l.call(arguments), z.set(this, Y, jt), this[Y](), Ft = z.get(this, Y), z.set(this, Y, false), jt !== Ft) return Pt.stopImmediatePropagation(), Pt.preventDefault(), Ft;
          } else jt && (z.set(this, Y, v.event.trigger(jt[0], jt.slice(1), this)), Pt.stopPropagation(), Pt.isImmediatePropagationStopped = jn);
        } });
      }
      v.removeEvent = function(C, Y, ht) {
        C.removeEventListener && C.removeEventListener(Y, ht);
      }, v.Event = function(C, Y) {
        if (!(this instanceof v.Event)) return new v.Event(C, Y);
        C && C.type ? (this.originalEvent = C, this.type = C.type, this.isDefaultPrevented = C.defaultPrevented || C.defaultPrevented === void 0 && C.returnValue === false ? jn : eo, this.target = C.target && C.target.nodeType === 3 ? C.target.parentNode : C.target, this.currentTarget = C.currentTarget, this.relatedTarget = C.relatedTarget) : this.type = C, Y && v.extend(this, Y), this.timeStamp = C && C.timeStamp || Date.now(), this[v.expando] = true;
      }, v.Event.prototype = { constructor: v.Event, isDefaultPrevented: eo, isPropagationStopped: eo, isImmediatePropagationStopped: eo, isSimulated: false, preventDefault: function() {
        var C = this.originalEvent;
        this.isDefaultPrevented = jn, C && !this.isSimulated && C.preventDefault();
      }, stopPropagation: function() {
        var C = this.originalEvent;
        this.isPropagationStopped = jn, C && !this.isSimulated && C.stopPropagation();
      }, stopImmediatePropagation: function() {
        var C = this.originalEvent;
        this.isImmediatePropagationStopped = jn, C && !this.isSimulated && C.stopImmediatePropagation(), this.stopPropagation();
      } }, v.each({ altKey: true, bubbles: true, cancelable: true, changedTouches: true, ctrlKey: true, detail: true, eventPhase: true, metaKey: true, pageX: true, pageY: true, shiftKey: true, view: true, char: true, code: true, charCode: true, key: true, keyCode: true, button: true, buttons: true, clientX: true, clientY: true, offsetX: true, offsetY: true, pointerId: true, pointerType: true, screenX: true, screenY: true, targetTouches: true, toElement: true, touches: true, which: true }, v.event.addProp), v.each({ focus: "focusin", blur: "focusout" }, function(C, Y) {
        function ht(Pt) {
          if (w.documentMode) {
            var Ft = z.get(this, "handle"), jt = v.event.fix(Pt);
            jt.type = Pt.type === "focusin" ? "focus" : "blur", jt.isSimulated = true, Ft(Pt), jt.target === jt.currentTarget && Ft(jt);
          } else v.event.simulate(Y, Pt.target, v.event.fix(Pt));
        }
        v.event.special[C] = { setup: function() {
          var Pt;
          if (Dn(this, C, true), w.documentMode) Pt = z.get(this, Y), Pt || this.addEventListener(Y, ht), z.set(this, Y, (Pt || 0) + 1);
          else return false;
        }, trigger: function() {
          return Dn(this, C), true;
        }, teardown: function() {
          var Pt;
          if (w.documentMode) Pt = z.get(this, Y) - 1, Pt ? z.set(this, Y, Pt) : (this.removeEventListener(Y, ht), z.remove(this, Y));
          else return false;
        }, _default: function(Pt) {
          return z.get(Pt.target, C);
        }, delegateType: Y }, v.event.special[Y] = { setup: function() {
          var Pt = this.ownerDocument || this.document || this, Ft = w.documentMode ? this : Pt, jt = z.get(Ft, Y);
          jt || (w.documentMode ? this.addEventListener(Y, ht) : Pt.addEventListener(C, ht, true)), z.set(Ft, Y, (jt || 0) + 1);
        }, teardown: function() {
          var Pt = this.ownerDocument || this.document || this, Ft = w.documentMode ? this : Pt, jt = z.get(Ft, Y) - 1;
          jt ? z.set(Ft, Y, jt) : (w.documentMode ? this.removeEventListener(Y, ht) : Pt.removeEventListener(C, ht, true), z.remove(Ft, Y));
        } };
      }), v.each({ mouseenter: "mouseover", mouseleave: "mouseout", pointerenter: "pointerover", pointerleave: "pointerout" }, function(C, Y) {
        v.event.special[C] = { delegateType: Y, bindType: Y, handle: function(ht) {
          var Pt, Ft = this, jt = ht.relatedTarget, ne = ht.handleObj;
          return (!jt || jt !== Ft && !v.contains(Ft, jt)) && (ht.type = ne.origType, Pt = ne.handler.apply(this, arguments), ht.type = Y), Pt;
        } };
      }), v.fn.extend({ on: function(C, Y, ht, Pt) {
        return no(this, C, Y, ht, Pt);
      }, one: function(C, Y, ht, Pt) {
        return no(this, C, Y, ht, Pt, 1);
      }, off: function(C, Y, ht) {
        var Pt, Ft;
        if (C && C.preventDefault && C.handleObj) return Pt = C.handleObj, v(C.delegateTarget).off(Pt.namespace ? Pt.origType + "." + Pt.namespace : Pt.origType, Pt.selector, Pt.handler), this;
        if (typeof C == "object") {
          for (Ft in C) this.off(Ft, Y, C[Ft]);
          return this;
        }
        return (Y === false || typeof Y == "function") && (ht = Y, Y = void 0), ht === false && (ht = eo), this.each(function() {
          v.event.remove(this, C, ht, Y);
        });
      } });
      var se = /<script|<style|<link/i, rr = /checked\s*(?:[^=]|=\s*.checked.)/i, Tr = /^\s*<!\[CDATA\[|\]\]>\s*$/g;
      function mr(C, Y) {
        return M(C, "table") && M(Y.nodeType !== 11 ? Y : Y.firstChild, "tr") && v(C).children("tbody")[0] || C;
      }
      function Ir(C) {
        return C.type = (C.getAttribute("type") !== null) + "/" + C.type, C;
      }
      function En(C) {
        return (C.type || "").slice(0, 5) === "true/" ? C.type = C.type.slice(5) : C.removeAttribute("type"), C;
      }
      function An(C, Y) {
        var ht, Pt, Ft, jt, ne, Ie, ve;
        if (Y.nodeType === 1) {
          if (z.hasData(C) && (jt = z.get(C), ve = jt.events, ve)) {
            z.remove(Y, "handle events");
            for (Ft in ve) for (ht = 0, Pt = ve[Ft].length; ht < Pt; ht++) v.event.add(Y, Ft, ve[Ft][ht]);
          }
          J.hasData(C) && (ne = J.access(C), Ie = v.extend({}, ne), J.set(Y, Ie));
        }
      }
      function _n(C, Y) {
        var ht = Y.nodeName.toLowerCase();
        ht === "input" && wt.test(C.type) ? Y.checked = C.checked : (ht === "input" || ht === "textarea") && (Y.defaultValue = C.defaultValue);
      }
      function Nn(C, Y, ht, Pt) {
        Y = s(Y);
        var Ft, jt, ne, Ie, ve, ze, Ze = 0, Ar = C.length, It = Ar - 1, ie = Y[0], Ae = m(ie);
        if (Ae || Ar > 1 && typeof ie == "string" && !h.checkClone && rr.test(ie)) return C.each(function(ge) {
          var we = C.eq(ge);
          Ae && (Y[0] = ie.call(this, ge, we.html())), Nn(we, Y, ht, Pt);
        });
        if (Ar && (Ft = to(Y, C[0].ownerDocument, false, C, Pt), jt = Ft.firstChild, Ft.childNodes.length === 1 && (Ft = jt), jt || Pt)) {
          for (ne = v.map(Lr(Ft, "script"), Ir), Ie = ne.length; Ze < Ar; Ze++) ve = Ft, Ze !== It && (ve = v.clone(ve, true, true), Ie && v.merge(ne, Lr(ve, "script"))), ht.call(C[Ze], ve, Ze);
          if (Ie) for (ze = ne[ne.length - 1].ownerDocument, v.map(ne, En), Ze = 0; Ze < Ie; Ze++) ve = ne[Ze], Ee.test(ve.type || "") && !z.access(ve, "globalEval") && v.contains(ze, ve) && (ve.src && (ve.type || "").toLowerCase() !== "module" ? v._evalUrl && !ve.noModule && v._evalUrl(ve.src, { nonce: ve.nonce || ve.getAttribute("nonce") }, ze) : P(ve.textContent.replace(Tr, ""), ve, ze));
        }
        return C;
      }
      function Zn(C, Y, ht) {
        for (var Pt, Ft = Y ? v.filter(Y, C) : C, jt = 0; (Pt = Ft[jt]) != null; jt++) !ht && Pt.nodeType === 1 && v.cleanData(Lr(Pt)), Pt.parentNode && (ht && kt(Pt) && on(Lr(Pt, "script")), Pt.parentNode.removeChild(Pt));
        return C;
      }
      v.extend({ htmlPrefilter: function(C) {
        return C;
      }, clone: function(C, Y, ht) {
        var Pt, Ft, jt, ne, Ie = C.cloneNode(true), ve = kt(C);
        if (!h.noCloneChecked && (C.nodeType === 1 || C.nodeType === 11) && !v.isXMLDoc(C)) for (ne = Lr(Ie), jt = Lr(C), Pt = 0, Ft = jt.length; Pt < Ft; Pt++) _n(jt[Pt], ne[Pt]);
        if (Y) if (ht) for (jt = jt || Lr(C), ne = ne || Lr(Ie), Pt = 0, Ft = jt.length; Pt < Ft; Pt++) An(jt[Pt], ne[Pt]);
        else An(C, Ie);
        return ne = Lr(Ie, "script"), ne.length > 0 && on(ne, !ve && Lr(C, "script")), Ie;
      }, cleanData: function(C) {
        for (var Y, ht, Pt, Ft = v.event.special, jt = 0; (ht = C[jt]) !== void 0; jt++) if (Mt(ht)) {
          if (Y = ht[z.expando]) {
            if (Y.events) for (Pt in Y.events) Ft[Pt] ? v.event.remove(ht, Pt) : v.removeEvent(ht, Pt, Y.handle);
            ht[z.expando] = void 0;
          }
          ht[J.expando] && (ht[J.expando] = void 0);
        }
      } }), v.fn.extend({ detach: function(C) {
        return Zn(this, C, true);
      }, remove: function(C) {
        return Zn(this, C);
      }, text: function(C) {
        return Ut(this, function(Y) {
          return Y === void 0 ? v.text(this) : this.empty().each(function() {
            (this.nodeType === 1 || this.nodeType === 11 || this.nodeType === 9) && (this.textContent = Y);
          });
        }, null, C, arguments.length);
      }, append: function() {
        return Nn(this, arguments, function(C) {
          if (this.nodeType === 1 || this.nodeType === 11 || this.nodeType === 9) {
            var Y = mr(this, C);
            Y.appendChild(C);
          }
        });
      }, prepend: function() {
        return Nn(this, arguments, function(C) {
          if (this.nodeType === 1 || this.nodeType === 11 || this.nodeType === 9) {
            var Y = mr(this, C);
            Y.insertBefore(C, Y.firstChild);
          }
        });
      }, before: function() {
        return Nn(this, arguments, function(C) {
          this.parentNode && this.parentNode.insertBefore(C, this);
        });
      }, after: function() {
        return Nn(this, arguments, function(C) {
          this.parentNode && this.parentNode.insertBefore(C, this.nextSibling);
        });
      }, empty: function() {
        for (var C, Y = 0; (C = this[Y]) != null; Y++) C.nodeType === 1 && (v.cleanData(Lr(C, false)), C.textContent = "");
        return this;
      }, clone: function(C, Y) {
        return C = C ?? false, Y = Y ?? C, this.map(function() {
          return v.clone(this, C, Y);
        });
      }, html: function(C) {
        return Ut(this, function(Y) {
          var ht = this[0] || {}, Pt = 0, Ft = this.length;
          if (Y === void 0 && ht.nodeType === 1) return ht.innerHTML;
          if (typeof Y == "string" && !se.test(Y) && !cr[(Jt.exec(Y) || ["", ""])[1].toLowerCase()]) {
            Y = v.htmlPrefilter(Y);
            try {
              for (; Pt < Ft; Pt++) ht = this[Pt] || {}, ht.nodeType === 1 && (v.cleanData(Lr(ht, false)), ht.innerHTML = Y);
              ht = 0;
            } catch {
            }
          }
          ht && this.empty().append(Y);
        }, null, C, arguments.length);
      }, replaceWith: function() {
        var C = [];
        return Nn(this, arguments, function(Y) {
          var ht = this.parentNode;
          v.inArray(this, C) < 0 && (v.cleanData(Lr(this)), ht && ht.replaceChild(Y, this));
        }, C);
      } }), v.each({ appendTo: "append", prependTo: "prepend", insertBefore: "before", insertAfter: "after", replaceAll: "replaceWith" }, function(C, Y) {
        v.fn[C] = function(ht) {
          for (var Pt, Ft = [], jt = v(ht), ne = jt.length - 1, Ie = 0; Ie <= ne; Ie++) Pt = Ie === ne ? this : this.clone(true), v(jt[Ie])[Y](Pt), i.apply(Ft, Pt.get());
          return this.pushStack(Ft);
        };
      });
      var Jn = new RegExp("^(" + _ + ")(?!px)[a-z%]+$", "i"), Hn = /^--/, uo = function(C) {
        var Y = C.ownerDocument.defaultView;
        return (!Y || !Y.opener) && (Y = t), Y.getComputedStyle(C);
      }, Oo = function(C, Y, ht) {
        var Pt, Ft, jt = {};
        for (Ft in Y) jt[Ft] = C.style[Ft], C.style[Ft] = Y[Ft];
        Pt = ht.call(C);
        for (Ft in Y) C.style[Ft] = jt[Ft];
        return Pt;
      }, jo = new RegExp(et.join("|"), "i");
      (function() {
        function C() {
          if (ze) {
            ve.style.cssText = "position:absolute;left:-11111px;width:60px;margin-top:1px;padding:0;border:0", ze.style.cssText = "position:relative;display:block;box-sizing:border-box;overflow:scroll;margin:auto;border:1px;padding:1px;width:60%;top:1%", St.appendChild(ve).appendChild(ze);
            var Ze = t.getComputedStyle(ze);
            ht = Ze.top !== "1%", Ie = Y(Ze.marginLeft) === 12, ze.style.right = "60%", jt = Y(Ze.right) === 36, Pt = Y(Ze.width) === 36, ze.style.position = "absolute", Ft = Y(ze.offsetWidth / 3) === 12, St.removeChild(ve), ze = null;
          }
        }
        function Y(Ze) {
          return Math.round(parseFloat(Ze));
        }
        var ht, Pt, Ft, jt, ne, Ie, ve = w.createElement("div"), ze = w.createElement("div");
        ze.style && (ze.style.backgroundClip = "content-box", ze.cloneNode(true).style.backgroundClip = "", h.clearCloneStyle = ze.style.backgroundClip === "content-box", v.extend(h, { boxSizingReliable: function() {
          return C(), Pt;
        }, pixelBoxStyles: function() {
          return C(), jt;
        }, pixelPosition: function() {
          return C(), ht;
        }, reliableMarginLeft: function() {
          return C(), Ie;
        }, scrollboxSize: function() {
          return C(), Ft;
        }, reliableTrDimensions: function() {
          var Ze, Ar, It, ie;
          return ne == null && (Ze = w.createElement("table"), Ar = w.createElement("tr"), It = w.createElement("div"), Ze.style.cssText = "position:absolute;left:-11111px;border-collapse:separate", Ar.style.cssText = "box-sizing:content-box;border:1px solid", Ar.style.height = "1px", It.style.height = "9px", It.style.display = "block", St.appendChild(Ze).appendChild(Ar).appendChild(It), ie = t.getComputedStyle(Ar), ne = parseInt(ie.height, 10) + parseInt(ie.borderTopWidth, 10) + parseInt(ie.borderBottomWidth, 10) === Ar.offsetHeight, St.removeChild(Ze)), ne;
        } }));
      })();
      function Bo(C, Y, ht) {
        var Pt, Ft, jt, ne, Ie = Hn.test(Y), ve = C.style;
        return ht = ht || uo(C), ht && (ne = ht.getPropertyValue(Y) || ht[Y], Ie && ne && (ne = ne.replace(x, "$1") || void 0), ne === "" && !kt(C) && (ne = v.style(C, Y)), !h.pixelBoxStyles() && Jn.test(ne) && jo.test(Y) && (Pt = ve.width, Ft = ve.minWidth, jt = ve.maxWidth, ve.minWidth = ve.maxWidth = ve.width = ne, ne = ht.width, ve.width = Pt, ve.minWidth = Ft, ve.maxWidth = jt)), ne !== void 0 ? ne + "" : ne;
      }
      function Po(C, Y) {
        return { get: function() {
          if (C()) {
            delete this.get;
            return;
          }
          return (this.get = Y).apply(this, arguments);
        } };
      }
      var yo = ["Webkit", "Moz", "ms"], ri = w.createElement("div").style, Eo = {};
      function Ao(C) {
        for (var Y = C[0].toUpperCase() + C.slice(1), ht = yo.length; ht--; ) if (C = yo[ht] + Y, C in ri) return C;
      }
      function ti(C) {
        var Y = v.cssProps[C] || Eo[C];
        return Y || (C in ri ? C : Eo[C] = Ao(C) || C);
      }
      var li = /^(none|table(?!-c[ea]).+)/, pi = { position: "absolute", visibility: "hidden", display: "block" }, Ho = { letterSpacing: "0", fontWeight: "400" };
      function ai(C, Y, ht) {
        var Pt = L.exec(Y);
        return Pt ? Math.max(0, Pt[2] - (ht || 0)) + (Pt[3] || "px") : Y;
      }
      function hi(C, Y, ht, Pt, Ft, jt) {
        var ne = Y === "width" ? 1 : 0, Ie = 0, ve = 0, ze = 0;
        if (ht === (Pt ? "border" : "content")) return 0;
        for (; ne < 4; ne += 2) ht === "margin" && (ze += v.css(C, ht + et[ne], true, Ft)), Pt ? (ht === "content" && (ve -= v.css(C, "padding" + et[ne], true, Ft)), ht !== "margin" && (ve -= v.css(C, "border" + et[ne] + "Width", true, Ft))) : (ve += v.css(C, "padding" + et[ne], true, Ft), ht !== "padding" ? ve += v.css(C, "border" + et[ne] + "Width", true, Ft) : Ie += v.css(C, "border" + et[ne] + "Width", true, Ft));
        return !Pt && jt >= 0 && (ve += Math.max(0, Math.ceil(C["offset" + Y[0].toUpperCase() + Y.slice(1)] - jt - ve - Ie - 0.5)) || 0), ve + ze;
      }
      function Co(C, Y, ht) {
        var Pt = uo(C), Ft = !h.boxSizingReliable() || ht, jt = Ft && v.css(C, "boxSizing", false, Pt) === "border-box", ne = jt, Ie = Bo(C, Y, Pt), ve = "offset" + Y[0].toUpperCase() + Y.slice(1);
        if (Jn.test(Ie)) {
          if (!ht) return Ie;
          Ie = "auto";
        }
        return (!h.boxSizingReliable() && jt || !h.reliableTrDimensions() && M(C, "tr") || Ie === "auto" || !parseFloat(Ie) && v.css(C, "display", false, Pt) === "inline") && C.getClientRects().length && (jt = v.css(C, "boxSizing", false, Pt) === "border-box", ne = ve in C, ne && (Ie = C[ve])), Ie = parseFloat(Ie) || 0, Ie + hi(C, Y, ht || (jt ? "border" : "content"), ne, Pt, Ie) + "px";
      }
      v.extend({ cssHooks: { opacity: { get: function(C, Y) {
        if (Y) {
          var ht = Bo(C, "opacity");
          return ht === "" ? "1" : ht;
        }
      } } }, cssNumber: { animationIterationCount: true, aspectRatio: true, borderImageSlice: true, columnCount: true, flexGrow: true, flexShrink: true, fontWeight: true, gridArea: true, gridColumn: true, gridColumnEnd: true, gridColumnStart: true, gridRow: true, gridRowEnd: true, gridRowStart: true, lineHeight: true, opacity: true, order: true, orphans: true, scale: true, widows: true, zIndex: true, zoom: true, fillOpacity: true, floodOpacity: true, stopOpacity: true, strokeMiterlimit: true, strokeOpacity: true }, cssProps: {}, style: function(C, Y, ht, Pt) {
        if (!(!C || C.nodeType === 3 || C.nodeType === 8 || !C.style)) {
          var Ft, jt, ne, Ie = yt(Y), ve = Hn.test(Y), ze = C.style;
          if (ve || (Y = ti(Ie)), ne = v.cssHooks[Y] || v.cssHooks[Ie], ht !== void 0) {
            if (jt = typeof ht, jt === "string" && (Ft = L.exec(ht)) && Ft[1] && (ht = ut(C, Y, Ft), jt = "number"), ht == null || ht !== ht) return;
            jt === "number" && !ve && (ht += Ft && Ft[3] || (v.cssNumber[Ie] ? "" : "px")), !h.clearCloneStyle && ht === "" && Y.indexOf("background") === 0 && (ze[Y] = "inherit"), (!ne || !("set" in ne) || (ht = ne.set(C, ht, Pt)) !== void 0) && (ve ? ze.setProperty(Y, ht) : ze[Y] = ht);
          } else return ne && "get" in ne && (Ft = ne.get(C, false, Pt)) !== void 0 ? Ft : ze[Y];
        }
      }, css: function(C, Y, ht, Pt) {
        var Ft, jt, ne, Ie = yt(Y), ve = Hn.test(Y);
        return ve || (Y = ti(Ie)), ne = v.cssHooks[Y] || v.cssHooks[Ie], ne && "get" in ne && (Ft = ne.get(C, true, ht)), Ft === void 0 && (Ft = Bo(C, Y, Pt)), Ft === "normal" && Y in Ho && (Ft = Ho[Y]), ht === "" || ht ? (jt = parseFloat(Ft), ht === true || isFinite(jt) ? jt || 0 : Ft) : Ft;
      } }), v.each(["height", "width"], function(C, Y) {
        v.cssHooks[Y] = { get: function(ht, Pt, Ft) {
          if (Pt) return li.test(v.css(ht, "display")) && (!ht.getClientRects().length || !ht.getBoundingClientRect().width) ? Oo(ht, pi, function() {
            return Co(ht, Y, Ft);
          }) : Co(ht, Y, Ft);
        }, set: function(ht, Pt, Ft) {
          var jt, ne = uo(ht), Ie = !h.scrollboxSize() && ne.position === "absolute", ve = Ie || Ft, ze = ve && v.css(ht, "boxSizing", false, ne) === "border-box", Ze = Ft ? hi(ht, Y, Ft, ze, ne) : 0;
          return ze && Ie && (Ze -= Math.ceil(ht["offset" + Y[0].toUpperCase() + Y.slice(1)] - parseFloat(ne[Y]) - hi(ht, Y, "border", false, ne) - 0.5)), Ze && (jt = L.exec(Pt)) && (jt[3] || "px") !== "px" && (ht.style[Y] = Pt, Pt = v.css(ht, Y)), ai(ht, Pt, Ze);
        } };
      }), v.cssHooks.marginLeft = Po(h.reliableMarginLeft, function(C, Y) {
        if (Y) return (parseFloat(Bo(C, "marginLeft")) || C.getBoundingClientRect().left - Oo(C, { marginLeft: 0 }, function() {
          return C.getBoundingClientRect().left;
        })) + "px";
      }), v.each({ margin: "", padding: "", border: "Width" }, function(C, Y) {
        v.cssHooks[C + Y] = { expand: function(ht) {
          for (var Pt = 0, Ft = {}, jt = typeof ht == "string" ? ht.split(" ") : [ht]; Pt < 4; Pt++) Ft[C + et[Pt] + Y] = jt[Pt] || jt[Pt - 2] || jt[0];
          return Ft;
        } }, C !== "margin" && (v.cssHooks[C + Y].set = ai);
      }), v.fn.extend({ css: function(C, Y) {
        return Ut(this, function(ht, Pt, Ft) {
          var jt, ne, Ie = {}, ve = 0;
          if (Array.isArray(Pt)) {
            for (jt = uo(ht), ne = Pt.length; ve < ne; ve++) Ie[Pt[ve]] = v.css(ht, Pt[ve], false, jt);
            return Ie;
          }
          return Ft !== void 0 ? v.style(ht, Pt, Ft) : v.css(ht, Pt);
        }, C, Y, arguments.length > 1);
      } });
      function Wo(C, Y, ht, Pt, Ft) {
        return new Wo.prototype.init(C, Y, ht, Pt, Ft);
      }
      v.Tween = Wo, Wo.prototype = { constructor: Wo, init: function(C, Y, ht, Pt, Ft, jt) {
        this.elem = C, this.prop = ht, this.easing = Ft || v.easing._default, this.options = Y, this.start = this.now = this.cur(), this.end = Pt, this.unit = jt || (v.cssNumber[ht] ? "" : "px");
      }, cur: function() {
        var C = Wo.propHooks[this.prop];
        return C && C.get ? C.get(this) : Wo.propHooks._default.get(this);
      }, run: function(C) {
        var Y, ht = Wo.propHooks[this.prop];
        return this.options.duration ? this.pos = Y = v.easing[this.easing](C, this.options.duration * C, 0, 1, this.options.duration) : this.pos = Y = C, this.now = (this.end - this.start) * Y + this.start, this.options.step && this.options.step.call(this.elem, this.now, this), ht && ht.set ? ht.set(this) : Wo.propHooks._default.set(this), this;
      } }, Wo.prototype.init.prototype = Wo.prototype, Wo.propHooks = { _default: { get: function(C) {
        var Y;
        return C.elem.nodeType !== 1 || C.elem[C.prop] != null && C.elem.style[C.prop] == null ? C.elem[C.prop] : (Y = v.css(C.elem, C.prop, ""), !Y || Y === "auto" ? 0 : Y);
      }, set: function(C) {
        v.fx.step[C.prop] ? v.fx.step[C.prop](C) : C.elem.nodeType === 1 && (v.cssHooks[C.prop] || C.elem.style[ti(C.prop)] != null) ? v.style(C.elem, C.prop, C.now + C.unit) : C.elem[C.prop] = C.now;
      } } }, Wo.propHooks.scrollTop = Wo.propHooks.scrollLeft = { set: function(C) {
        C.elem.nodeType && C.elem.parentNode && (C.elem[C.prop] = C.now);
      } }, v.easing = { linear: function(C) {
        return C;
      }, swing: function(C) {
        return 0.5 - Math.cos(C * Math.PI) / 2;
      }, _default: "swing" }, v.fx = Wo.prototype.init, v.fx.step = {};
      var qt, Nt, he = /^(?:toggle|show|hide)$/, _e = /queueHooks$/;
      function Ve() {
        Nt && (w.hidden === false && t.requestAnimationFrame ? t.requestAnimationFrame(Ve) : t.setTimeout(Ve, v.fx.interval), v.fx.tick());
      }
      function qe() {
        return t.setTimeout(function() {
          qt = void 0;
        }), qt = Date.now();
      }
      function Ge(C, Y) {
        var ht, Pt = 0, Ft = { height: C };
        for (Y = Y ? 1 : 0; Pt < 4; Pt += 2 - Y) ht = et[Pt], Ft["margin" + ht] = Ft["padding" + ht] = C;
        return Y && (Ft.opacity = Ft.width = C), Ft;
      }
      function Je(C, Y, ht) {
        for (var Pt, Ft = (Fr.tweeners[Y] || []).concat(Fr.tweeners["*"]), jt = 0, ne = Ft.length; jt < ne; jt++) if (Pt = Ft[jt].call(ht, Y, C)) return Pt;
      }
      function Oe(C, Y, ht) {
        var Pt, Ft, jt, ne, Ie, ve, ze, Ze, Ar = "width" in Y || "height" in Y, It = this, ie = {}, Ae = C.style, ge = C.nodeType && j(C), we = z.get(C, "fxshow");
        ht.queue || (ne = v._queueHooks(C, "fx"), ne.unqueued == null && (ne.unqueued = 0, Ie = ne.empty.fire, ne.empty.fire = function() {
          ne.unqueued || Ie();
        }), ne.unqueued++, It.always(function() {
          It.always(function() {
            ne.unqueued--, v.queue(C, "fx").length || ne.empty.fire();
          });
        }));
        for (Pt in Y) if (Ft = Y[Pt], he.test(Ft)) {
          if (delete Y[Pt], jt = jt || Ft === "toggle", Ft === (ge ? "hide" : "show")) if (Ft === "show" && we && we[Pt] !== void 0) ge = true;
          else continue;
          ie[Pt] = we && we[Pt] || v.style(C, Pt);
        }
        if (ve = !v.isEmptyObject(Y), !(!ve && v.isEmptyObject(ie))) {
          Ar && C.nodeType === 1 && (ht.overflow = [Ae.overflow, Ae.overflowX, Ae.overflowY], ze = we && we.display, ze == null && (ze = z.get(C, "display")), Ze = v.css(C, "display"), Ze === "none" && (ze ? Ze = ze : (Ht([C], true), ze = C.style.display || ze, Ze = v.css(C, "display"), Ht([C]))), (Ze === "inline" || Ze === "inline-block" && ze != null) && v.css(C, "float") === "none" && (ve || (It.done(function() {
            Ae.display = ze;
          }), ze == null && (Ze = Ae.display, ze = Ze === "none" ? "" : Ze)), Ae.display = "inline-block")), ht.overflow && (Ae.overflow = "hidden", It.always(function() {
            Ae.overflow = ht.overflow[0], Ae.overflowX = ht.overflow[1], Ae.overflowY = ht.overflow[2];
          })), ve = false;
          for (Pt in ie) ve || (we ? "hidden" in we && (ge = we.hidden) : we = z.access(C, "fxshow", { display: ze }), jt && (we.hidden = !ge), ge && Ht([C], true), It.done(function() {
            ge || Ht([C]), z.remove(C, "fxshow");
            for (Pt in ie) v.style(C, Pt, ie[Pt]);
          })), ve = Je(ge ? we[Pt] : 0, Pt, It), Pt in we || (we[Pt] = ve.start, ge && (ve.end = ve.start, ve.start = 0));
        }
      }
      function lr(C, Y) {
        var ht, Pt, Ft, jt, ne;
        for (ht in C) if (Pt = yt(ht), Ft = Y[Pt], jt = C[ht], Array.isArray(jt) && (Ft = jt[1], jt = C[ht] = jt[0]), ht !== Pt && (C[Pt] = jt, delete C[ht]), ne = v.cssHooks[Pt], ne && "expand" in ne) {
          jt = ne.expand(jt), delete C[Pt];
          for (ht in jt) ht in C || (C[ht] = jt[ht], Y[ht] = Ft);
        } else Y[Pt] = Ft;
      }
      function Fr(C, Y, ht) {
        var Pt, Ft, jt = 0, ne = Fr.prefilters.length, Ie = v.Deferred().always(function() {
          delete ve.elem;
        }), ve = function() {
          if (Ft) return false;
          for (var Ar = qt || qe(), It = Math.max(0, ze.startTime + ze.duration - Ar), ie = It / ze.duration || 0, Ae = 1 - ie, ge = 0, we = ze.tweens.length; ge < we; ge++) ze.tweens[ge].run(Ae);
          return Ie.notifyWith(C, [ze, Ae, It]), Ae < 1 && we ? It : (we || Ie.notifyWith(C, [ze, 1, 0]), Ie.resolveWith(C, [ze]), false);
        }, ze = Ie.promise({ elem: C, props: v.extend({}, Y), opts: v.extend(true, { specialEasing: {}, easing: v.easing._default }, ht), originalProperties: Y, originalOptions: ht, startTime: qt || qe(), duration: ht.duration, tweens: [], createTween: function(Ar, It) {
          var ie = v.Tween(C, ze.opts, Ar, It, ze.opts.specialEasing[Ar] || ze.opts.easing);
          return ze.tweens.push(ie), ie;
        }, stop: function(Ar) {
          var It = 0, ie = Ar ? ze.tweens.length : 0;
          if (Ft) return this;
          for (Ft = true; It < ie; It++) ze.tweens[It].run(1);
          return Ar ? (Ie.notifyWith(C, [ze, 1, 0]), Ie.resolveWith(C, [ze, Ar])) : Ie.rejectWith(C, [ze, Ar]), this;
        } }), Ze = ze.props;
        for (lr(Ze, ze.opts.specialEasing); jt < ne; jt++) if (Pt = Fr.prefilters[jt].call(ze, C, Ze, ze.opts), Pt) return m(Pt.stop) && (v._queueHooks(ze.elem, ze.opts.queue).stop = Pt.stop.bind(Pt)), Pt;
        return v.map(Ze, Je, ze), m(ze.opts.start) && ze.opts.start.call(C, ze), ze.progress(ze.opts.progress).done(ze.opts.done, ze.opts.complete).fail(ze.opts.fail).always(ze.opts.always), v.fx.timer(v.extend(ve, { elem: C, anim: ze, queue: ze.opts.queue })), ze;
      }
      v.Animation = v.extend(Fr, { tweeners: { "*": [function(C, Y) {
        var ht = this.createTween(C, Y);
        return ut(ht.elem, C, L.exec(Y), ht), ht;
      }] }, tweener: function(C, Y) {
        m(C) ? (Y = C, C = ["*"]) : C = C.match(mt);
        for (var ht, Pt = 0, Ft = C.length; Pt < Ft; Pt++) ht = C[Pt], Fr.tweeners[ht] = Fr.tweeners[ht] || [], Fr.tweeners[ht].unshift(Y);
      }, prefilters: [Oe], prefilter: function(C, Y) {
        Y ? Fr.prefilters.unshift(C) : Fr.prefilters.push(C);
      } }), v.speed = function(C, Y, ht) {
        var Pt = C && typeof C == "object" ? v.extend({}, C) : { complete: ht || !ht && Y || m(C) && C, duration: C, easing: ht && Y || Y && !m(Y) && Y };
        return v.fx.off ? Pt.duration = 0 : typeof Pt.duration != "number" && (Pt.duration in v.fx.speeds ? Pt.duration = v.fx.speeds[Pt.duration] : Pt.duration = v.fx.speeds._default), (Pt.queue == null || Pt.queue === true) && (Pt.queue = "fx"), Pt.old = Pt.complete, Pt.complete = function() {
          m(Pt.old) && Pt.old.call(this), Pt.queue && v.dequeue(this, Pt.queue);
        }, Pt;
      }, v.fn.extend({ fadeTo: function(C, Y, ht, Pt) {
        return this.filter(j).css("opacity", 0).show().end().animate({ opacity: Y }, C, ht, Pt);
      }, animate: function(C, Y, ht, Pt) {
        var Ft = v.isEmptyObject(C), jt = v.speed(Y, ht, Pt), ne = function() {
          var Ie = Fr(this, v.extend({}, C), jt);
          (Ft || z.get(this, "finish")) && Ie.stop(true);
        };
        return ne.finish = ne, Ft || jt.queue === false ? this.each(ne) : this.queue(jt.queue, ne);
      }, stop: function(C, Y, ht) {
        var Pt = function(Ft) {
          var jt = Ft.stop;
          delete Ft.stop, jt(ht);
        };
        return typeof C != "string" && (ht = Y, Y = C, C = void 0), Y && this.queue(C || "fx", []), this.each(function() {
          var Ft = true, jt = C != null && C + "queueHooks", ne = v.timers, Ie = z.get(this);
          if (jt) Ie[jt] && Ie[jt].stop && Pt(Ie[jt]);
          else for (jt in Ie) Ie[jt] && Ie[jt].stop && _e.test(jt) && Pt(Ie[jt]);
          for (jt = ne.length; jt--; ) ne[jt].elem === this && (C == null || ne[jt].queue === C) && (ne[jt].anim.stop(ht), Ft = false, ne.splice(jt, 1));
          (Ft || !ht) && v.dequeue(this, C);
        });
      }, finish: function(C) {
        return C !== false && (C = C || "fx"), this.each(function() {
          var Y, ht = z.get(this), Pt = ht[C + "queue"], Ft = ht[C + "queueHooks"], jt = v.timers, ne = Pt ? Pt.length : 0;
          for (ht.finish = true, v.queue(this, C, []), Ft && Ft.stop && Ft.stop.call(this, true), Y = jt.length; Y--; ) jt[Y].elem === this && jt[Y].queue === C && (jt[Y].anim.stop(true), jt.splice(Y, 1));
          for (Y = 0; Y < ne; Y++) Pt[Y] && Pt[Y].finish && Pt[Y].finish.call(this);
          delete ht.finish;
        });
      } }), v.each(["toggle", "show", "hide"], function(C, Y) {
        var ht = v.fn[Y];
        v.fn[Y] = function(Pt, Ft, jt) {
          return Pt == null || typeof Pt == "boolean" ? ht.apply(this, arguments) : this.animate(Ge(Y, true), Pt, Ft, jt);
        };
      }), v.each({ slideDown: Ge("show"), slideUp: Ge("hide"), slideToggle: Ge("toggle"), fadeIn: { opacity: "show" }, fadeOut: { opacity: "hide" }, fadeToggle: { opacity: "toggle" } }, function(C, Y) {
        v.fn[C] = function(ht, Pt, Ft) {
          return this.animate(Y, ht, Pt, Ft);
        };
      }), v.timers = [], v.fx.tick = function() {
        var C, Y = 0, ht = v.timers;
        for (qt = Date.now(); Y < ht.length; Y++) C = ht[Y], !C() && ht[Y] === C && ht.splice(Y--, 1);
        ht.length || v.fx.stop(), qt = void 0;
      }, v.fx.timer = function(C) {
        v.timers.push(C), v.fx.start();
      }, v.fx.interval = 13, v.fx.start = function() {
        Nt || (Nt = true, Ve());
      }, v.fx.stop = function() {
        Nt = null;
      }, v.fx.speeds = { slow: 600, fast: 200, _default: 400 }, v.fn.delay = function(C, Y) {
        return C = v.fx && v.fx.speeds[C] || C, Y = Y || "fx", this.queue(Y, function(ht, Pt) {
          var Ft = t.setTimeout(ht, C);
          Pt.stop = function() {
            t.clearTimeout(Ft);
          };
        });
      }, function() {
        var C = w.createElement("input"), Y = w.createElement("select"), ht = Y.appendChild(w.createElement("option"));
        C.type = "checkbox", h.checkOn = C.value !== "", h.optSelected = ht.selected, C = w.createElement("input"), C.value = "t", C.type = "radio", h.radioValue = C.value === "t";
      }();
      var Dr, gr = v.expr.attrHandle;
      v.fn.extend({ attr: function(C, Y) {
        return Ut(this, v.attr, C, Y, arguments.length > 1);
      }, removeAttr: function(C) {
        return this.each(function() {
          v.removeAttr(this, C);
        });
      } }), v.extend({ attr: function(C, Y, ht) {
        var Pt, Ft, jt = C.nodeType;
        if (!(jt === 3 || jt === 8 || jt === 2)) {
          if (typeof C.getAttribute > "u") return v.prop(C, Y, ht);
          if ((jt !== 1 || !v.isXMLDoc(C)) && (Ft = v.attrHooks[Y.toLowerCase()] || (v.expr.match.bool.test(Y) ? Dr : void 0)), ht !== void 0) {
            if (ht === null) {
              v.removeAttr(C, Y);
              return;
            }
            return Ft && "set" in Ft && (Pt = Ft.set(C, ht, Y)) !== void 0 ? Pt : (C.setAttribute(Y, ht + ""), ht);
          }
          return Ft && "get" in Ft && (Pt = Ft.get(C, Y)) !== null ? Pt : (Pt = v.find.attr(C, Y), Pt ?? void 0);
        }
      }, attrHooks: { type: { set: function(C, Y) {
        if (!h.radioValue && Y === "radio" && M(C, "input")) {
          var ht = C.value;
          return C.setAttribute("type", Y), ht && (C.value = ht), Y;
        }
      } } }, removeAttr: function(C, Y) {
        var ht, Pt = 0, Ft = Y && Y.match(mt);
        if (Ft && C.nodeType === 1) for (; ht = Ft[Pt++]; ) C.removeAttribute(ht);
      } }), Dr = { set: function(C, Y, ht) {
        return Y === false ? v.removeAttr(C, ht) : C.setAttribute(ht, ht), ht;
      } }, v.each(v.expr.match.bool.source.match(/\w+/g), function(C, Y) {
        var ht = gr[Y] || v.find.attr;
        gr[Y] = function(Pt, Ft, jt) {
          var ne, Ie, ve = Ft.toLowerCase();
          return jt || (Ie = gr[ve], gr[ve] = ne, ne = ht(Pt, Ft, jt) != null ? ve : null, gr[ve] = Ie), ne;
        };
      });
      var an = /^(?:input|select|textarea|button)$/i, pn = /^(?:a|area)$/i;
      v.fn.extend({ prop: function(C, Y) {
        return Ut(this, v.prop, C, Y, arguments.length > 1);
      }, removeProp: function(C) {
        return this.each(function() {
          delete this[v.propFix[C] || C];
        });
      } }), v.extend({ prop: function(C, Y, ht) {
        var Pt, Ft, jt = C.nodeType;
        if (!(jt === 3 || jt === 8 || jt === 2)) return (jt !== 1 || !v.isXMLDoc(C)) && (Y = v.propFix[Y] || Y, Ft = v.propHooks[Y]), ht !== void 0 ? Ft && "set" in Ft && (Pt = Ft.set(C, ht, Y)) !== void 0 ? Pt : C[Y] = ht : Ft && "get" in Ft && (Pt = Ft.get(C, Y)) !== null ? Pt : C[Y];
      }, propHooks: { tabIndex: { get: function(C) {
        var Y = v.find.attr(C, "tabindex");
        return Y ? parseInt(Y, 10) : an.test(C.nodeName) || pn.test(C.nodeName) && C.href ? 0 : -1;
      } } }, propFix: { for: "htmlFor", class: "className" } }), h.optSelected || (v.propHooks.selected = { get: function(C) {
        var Y = C.parentNode;
        return Y && Y.parentNode && Y.parentNode.selectedIndex, null;
      }, set: function(C) {
        var Y = C.parentNode;
        Y && (Y.selectedIndex, Y.parentNode && Y.parentNode.selectedIndex);
      } }), v.each(["tabIndex", "readOnly", "maxLength", "cellSpacing", "cellPadding", "rowSpan", "colSpan", "useMap", "frameBorder", "contentEditable"], function() {
        v.propFix[this.toLowerCase()] = this;
      });
      function yn(C) {
        var Y = C.match(mt) || [];
        return Y.join(" ");
      }
      function Rt(C) {
        return C.getAttribute && C.getAttribute("class") || "";
      }
      function jr(C) {
        return Array.isArray(C) ? C : typeof C == "string" ? C.match(mt) || [] : [];
      }
      v.fn.extend({ addClass: function(C) {
        var Y, ht, Pt, Ft, jt, ne;
        return m(C) ? this.each(function(Ie) {
          v(this).addClass(C.call(this, Ie, Rt(this)));
        }) : (Y = jr(C), Y.length ? this.each(function() {
          if (Pt = Rt(this), ht = this.nodeType === 1 && " " + yn(Pt) + " ", ht) {
            for (jt = 0; jt < Y.length; jt++) Ft = Y[jt], ht.indexOf(" " + Ft + " ") < 0 && (ht += Ft + " ");
            ne = yn(ht), Pt !== ne && this.setAttribute("class", ne);
          }
        }) : this);
      }, removeClass: function(C) {
        var Y, ht, Pt, Ft, jt, ne;
        return m(C) ? this.each(function(Ie) {
          v(this).removeClass(C.call(this, Ie, Rt(this)));
        }) : arguments.length ? (Y = jr(C), Y.length ? this.each(function() {
          if (Pt = Rt(this), ht = this.nodeType === 1 && " " + yn(Pt) + " ", ht) {
            for (jt = 0; jt < Y.length; jt++) for (Ft = Y[jt]; ht.indexOf(" " + Ft + " ") > -1; ) ht = ht.replace(" " + Ft + " ", " ");
            ne = yn(ht), Pt !== ne && this.setAttribute("class", ne);
          }
        }) : this) : this.attr("class", "");
      }, toggleClass: function(C, Y) {
        var ht, Pt, Ft, jt, ne = typeof C, Ie = ne === "string" || Array.isArray(C);
        return m(C) ? this.each(function(ve) {
          v(this).toggleClass(C.call(this, ve, Rt(this), Y), Y);
        }) : typeof Y == "boolean" && Ie ? Y ? this.addClass(C) : this.removeClass(C) : (ht = jr(C), this.each(function() {
          if (Ie) for (jt = v(this), Ft = 0; Ft < ht.length; Ft++) Pt = ht[Ft], jt.hasClass(Pt) ? jt.removeClass(Pt) : jt.addClass(Pt);
          else (C === void 0 || ne === "boolean") && (Pt = Rt(this), Pt && z.set(this, "__className__", Pt), this.setAttribute && this.setAttribute("class", Pt || C === false ? "" : z.get(this, "__className__") || ""));
        }));
      }, hasClass: function(C) {
        var Y, ht, Pt = 0;
        for (Y = " " + C + " "; ht = this[Pt++]; ) if (ht.nodeType === 1 && (" " + yn(Rt(ht)) + " ").indexOf(Y) > -1) return true;
        return false;
      } });
      var Ln = /\r/g;
      v.fn.extend({ val: function(C) {
        var Y, ht, Pt, Ft = this[0];
        return arguments.length ? (Pt = m(C), this.each(function(jt) {
          var ne;
          this.nodeType === 1 && (Pt ? ne = C.call(this, jt, v(this).val()) : ne = C, ne == null ? ne = "" : typeof ne == "number" ? ne += "" : Array.isArray(ne) && (ne = v.map(ne, function(Ie) {
            return Ie == null ? "" : Ie + "";
          })), Y = v.valHooks[this.type] || v.valHooks[this.nodeName.toLowerCase()], (!Y || !("set" in Y) || Y.set(this, ne, "value") === void 0) && (this.value = ne));
        })) : Ft ? (Y = v.valHooks[Ft.type] || v.valHooks[Ft.nodeName.toLowerCase()], Y && "get" in Y && (ht = Y.get(Ft, "value")) !== void 0 ? ht : (ht = Ft.value, typeof ht == "string" ? ht.replace(Ln, "") : ht ?? "")) : void 0;
      } }), v.extend({ valHooks: { option: { get: function(C) {
        var Y = v.find.attr(C, "value");
        return Y ?? yn(v.text(C));
      } }, select: { get: function(C) {
        var Y, ht, Pt, Ft = C.options, jt = C.selectedIndex, ne = C.type === "select-one", Ie = ne ? null : [], ve = ne ? jt + 1 : Ft.length;
        for (jt < 0 ? Pt = ve : Pt = ne ? jt : 0; Pt < ve; Pt++) if (ht = Ft[Pt], (ht.selected || Pt === jt) && !ht.disabled && (!ht.parentNode.disabled || !M(ht.parentNode, "optgroup"))) {
          if (Y = v(ht).val(), ne) return Y;
          Ie.push(Y);
        }
        return Ie;
      }, set: function(C, Y) {
        for (var ht, Pt, Ft = C.options, jt = v.makeArray(Y), ne = Ft.length; ne--; ) Pt = Ft[ne], (Pt.selected = v.inArray(v.valHooks.option.get(Pt), jt) > -1) && (ht = true);
        return ht || (C.selectedIndex = -1), jt;
      } } } }), v.each(["radio", "checkbox"], function() {
        v.valHooks[this] = { set: function(C, Y) {
          if (Array.isArray(Y)) return C.checked = v.inArray(v(C).val(), Y) > -1;
        } }, h.checkOn || (v.valHooks[this].get = function(C) {
          return C.getAttribute("value") === null ? "on" : C.value;
        });
      });
      var fo = t.location, Wt = { guid: Date.now() }, ue = /\?/;
      v.parseXML = function(C) {
        var Y, ht;
        if (!C || typeof C != "string") return null;
        try {
          Y = new t.DOMParser().parseFromString(C, "text/xml");
        } catch {
        }
        return ht = Y && Y.getElementsByTagName("parsererror")[0], (!Y || ht) && v.error("Invalid XML: " + (ht ? v.map(ht.childNodes, function(Pt) {
          return Pt.textContent;
        }).join(`
`) : C)), Y;
      };
      var Zt = /^(?:focusinfocus|focusoutblur)$/, Xt = function(C) {
        C.stopPropagation();
      };
      v.extend(v.event, { trigger: function(C, Y, ht, Pt) {
        var Ft, jt, ne, Ie, ve, ze, Ze, Ar, It = [ht || w], ie = p.call(C, "type") ? C.type : C, Ae = p.call(C, "namespace") ? C.namespace.split(".") : [];
        if (jt = Ar = ne = ht = ht || w, !(ht.nodeType === 3 || ht.nodeType === 8) && !Zt.test(ie + v.event.triggered) && (ie.indexOf(".") > -1 && (Ae = ie.split("."), ie = Ae.shift(), Ae.sort()), ve = ie.indexOf(":") < 0 && "on" + ie, C = C[v.expando] ? C : new v.Event(ie, typeof C == "object" && C), C.isTrigger = Pt ? 2 : 3, C.namespace = Ae.join("."), C.rnamespace = C.namespace ? new RegExp("(^|\\.)" + Ae.join("\\.(?:.*\\.|)") + "(\\.|$)") : null, C.result = void 0, C.target || (C.target = ht), Y = Y == null ? [C] : v.makeArray(Y, [C]), Ze = v.event.special[ie] || {}, !(!Pt && Ze.trigger && Ze.trigger.apply(ht, Y) === false))) {
          if (!Pt && !Ze.noBubble && !c(ht)) {
            for (Ie = Ze.delegateType || ie, Zt.test(Ie + ie) || (jt = jt.parentNode); jt; jt = jt.parentNode) It.push(jt), ne = jt;
            ne === (ht.ownerDocument || w) && It.push(ne.defaultView || ne.parentWindow || t);
          }
          for (Ft = 0; (jt = It[Ft++]) && !C.isPropagationStopped(); ) Ar = jt, C.type = Ft > 1 ? Ie : Ze.bindType || ie, ze = (z.get(jt, "events") || /* @__PURE__ */ Object.create(null))[C.type] && z.get(jt, "handle"), ze && ze.apply(jt, Y), ze = ve && jt[ve], ze && ze.apply && Mt(jt) && (C.result = ze.apply(jt, Y), C.result === false && C.preventDefault());
          return C.type = ie, !Pt && !C.isDefaultPrevented() && (!Ze._default || Ze._default.apply(It.pop(), Y) === false) && Mt(ht) && ve && m(ht[ie]) && !c(ht) && (ne = ht[ve], ne && (ht[ve] = null), v.event.triggered = ie, C.isPropagationStopped() && Ar.addEventListener(ie, Xt), ht[ie](), C.isPropagationStopped() && Ar.removeEventListener(ie, Xt), v.event.triggered = void 0, ne && (ht[ve] = ne)), C.result;
        }
      }, simulate: function(C, Y, ht) {
        var Pt = v.extend(new v.Event(), ht, { type: C, isSimulated: true });
        v.event.trigger(Pt, null, Y);
      } }), v.fn.extend({ trigger: function(C, Y) {
        return this.each(function() {
          v.event.trigger(C, Y, this);
        });
      }, triggerHandler: function(C, Y) {
        var ht = this[0];
        if (ht) return v.event.trigger(C, Y, ht, true);
      } });
      var pe = /\[\]$/, $e = /\r?\n/g, je = /^(?:submit|button|image|reset|file)$/i, Me = /^(?:input|select|textarea|keygen)/i;
      function fr(C, Y, ht, Pt) {
        var Ft;
        if (Array.isArray(Y)) v.each(Y, function(jt, ne) {
          ht || pe.test(C) ? Pt(C, ne) : fr(C + "[" + (typeof ne == "object" && ne != null ? jt : "") + "]", ne, ht, Pt);
        });
        else if (!ht && k(Y) === "object") for (Ft in Y) fr(C + "[" + Ft + "]", Y[Ft], ht, Pt);
        else Pt(C, Y);
      }
      v.param = function(C, Y) {
        var ht, Pt = [], Ft = function(jt, ne) {
          var Ie = m(ne) ? ne() : ne;
          Pt[Pt.length] = encodeURIComponent(jt) + "=" + encodeURIComponent(Ie ?? "");
        };
        if (C == null) return "";
        if (Array.isArray(C) || C.jquery && !v.isPlainObject(C)) v.each(C, function() {
          Ft(this.name, this.value);
        });
        else for (ht in C) fr(ht, C[ht], Y, Ft);
        return Pt.join("&");
      }, v.fn.extend({ serialize: function() {
        return v.param(this.serializeArray());
      }, serializeArray: function() {
        return this.map(function() {
          var C = v.prop(this, "elements");
          return C ? v.makeArray(C) : this;
        }).filter(function() {
          var C = this.type;
          return this.name && !v(this).is(":disabled") && Me.test(this.nodeName) && !je.test(C) && (this.checked || !wt.test(C));
        }).map(function(C, Y) {
          var ht = v(this).val();
          return ht == null ? null : Array.isArray(ht) ? v.map(ht, function(Pt) {
            return { name: Y.name, value: Pt.replace($e, `\r
`) };
          }) : { name: Y.name, value: ht.replace($e, `\r
`) };
        }).get();
      } });
      var Nr = /%20/g, wr = /#.*$/, Vr = /([?&])_=[^&]*/, $r = /^(.*?):[ \t]*([^\r\n]*)$/mg, Xr = /^(?:about|app|app-storage|.+-extension|file|res|widget):$/, Cn = /^(?:GET|HEAD)$/, sn = /^\/\//, To = {}, Ro = {}, Rn = "*/".concat("*"), bo = w.createElement("a");
      bo.href = fo.href;
      function si(C) {
        return function(Y, ht) {
          typeof Y != "string" && (ht = Y, Y = "*");
          var Pt, Ft = 0, jt = Y.toLowerCase().match(mt) || [];
          if (m(ht)) for (; Pt = jt[Ft++]; ) Pt[0] === "+" ? (Pt = Pt.slice(1) || "*", (C[Pt] = C[Pt] || []).unshift(ht)) : (C[Pt] = C[Pt] || []).push(ht);
        };
      }
      function Xo(C, Y, ht, Pt) {
        var Ft = {}, jt = C === Ro;
        function ne(Ie) {
          var ve;
          return Ft[Ie] = true, v.each(C[Ie] || [], function(ze, Ze) {
            var Ar = Ze(Y, ht, Pt);
            if (typeof Ar == "string" && !jt && !Ft[Ar]) return Y.dataTypes.unshift(Ar), ne(Ar), false;
            if (jt) return !(ve = Ar);
          }), ve;
        }
        return ne(Y.dataTypes[0]) || !Ft["*"] && ne("*");
      }
      function Xn(C, Y) {
        var ht, Pt, Ft = v.ajaxSettings.flatOptions || {};
        for (ht in Y) Y[ht] !== void 0 && ((Ft[ht] ? C : Pt || (Pt = {}))[ht] = Y[ht]);
        return Pt && v.extend(true, C, Pt), C;
      }
      function ki(C, Y, ht) {
        for (var Pt, Ft, jt, ne, Ie = C.contents, ve = C.dataTypes; ve[0] === "*"; ) ve.shift(), Pt === void 0 && (Pt = C.mimeType || Y.getResponseHeader("Content-Type"));
        if (Pt) {
          for (Ft in Ie) if (Ie[Ft] && Ie[Ft].test(Pt)) {
            ve.unshift(Ft);
            break;
          }
        }
        if (ve[0] in ht) jt = ve[0];
        else {
          for (Ft in ht) {
            if (!ve[0] || C.converters[Ft + " " + ve[0]]) {
              jt = Ft;
              break;
            }
            ne || (ne = Ft);
          }
          jt = jt || ne;
        }
        if (jt) return jt !== ve[0] && ve.unshift(jt), ht[jt];
      }
      function ii(C, Y, ht, Pt) {
        var Ft, jt, ne, Ie, ve, ze = {}, Ze = C.dataTypes.slice();
        if (Ze[1]) for (ne in C.converters) ze[ne.toLowerCase()] = C.converters[ne];
        for (jt = Ze.shift(); jt; ) if (C.responseFields[jt] && (ht[C.responseFields[jt]] = Y), !ve && Pt && C.dataFilter && (Y = C.dataFilter(Y, C.dataType)), ve = jt, jt = Ze.shift(), jt) {
          if (jt === "*") jt = ve;
          else if (ve !== "*" && ve !== jt) {
            if (ne = ze[ve + " " + jt] || ze["* " + jt], !ne) {
              for (Ft in ze) if (Ie = Ft.split(" "), Ie[1] === jt && (ne = ze[ve + " " + Ie[0]] || ze["* " + Ie[0]], ne)) {
                ne === true ? ne = ze[Ft] : ze[Ft] !== true && (jt = Ie[0], Ze.unshift(Ie[1]));
                break;
              }
            }
            if (ne !== true) if (ne && C.throws) Y = ne(Y);
            else try {
              Y = ne(Y);
            } catch (Ar) {
              return { state: "parsererror", error: ne ? Ar : "No conversion from " + ve + " to " + jt };
            }
          }
        }
        return { state: "success", data: Y };
      }
      v.extend({ active: 0, lastModified: {}, etag: {}, ajaxSettings: { url: fo.href, type: "GET", isLocal: Xr.test(fo.protocol), global: true, processData: true, async: true, contentType: "application/x-www-form-urlencoded; charset=UTF-8", accepts: { "*": Rn, text: "text/plain", html: "text/html", xml: "application/xml, text/xml", json: "application/json, text/javascript" }, contents: { xml: /\bxml\b/, html: /\bhtml/, json: /\bjson\b/ }, responseFields: { xml: "responseXML", text: "responseText", json: "responseJSON" }, converters: { "* text": String, "text html": true, "text json": JSON.parse, "text xml": v.parseXML }, flatOptions: { url: true, context: true } }, ajaxSetup: function(C, Y) {
        return Y ? Xn(Xn(C, v.ajaxSettings), Y) : Xn(v.ajaxSettings, C);
      }, ajaxPrefilter: si(To), ajaxTransport: si(Ro), ajax: function(C, Y) {
        typeof C == "object" && (Y = C, C = void 0), Y = Y || {};
        var ht, Pt, Ft, jt, ne, Ie, ve, ze, Ze, Ar, It = v.ajaxSetup({}, Y), ie = It.context || It, Ae = It.context && (ie.nodeType || ie.jquery) ? v(ie) : v.event, ge = v.Deferred(), we = v.Callbacks("once memory"), sr = It.statusCode || {}, nr = {}, gn = {}, wn = "canceled", dn = { readyState: 0, getResponseHeader: function(ln) {
          var Yr;
          if (ve) {
            if (!jt) for (jt = {}; Yr = $r.exec(Ft); ) jt[Yr[1].toLowerCase() + " "] = (jt[Yr[1].toLowerCase() + " "] || []).concat(Yr[2]);
            Yr = jt[ln.toLowerCase() + " "];
          }
          return Yr == null ? null : Yr.join(", ");
        }, getAllResponseHeaders: function() {
          return ve ? Ft : null;
        }, setRequestHeader: function(ln, Yr) {
          return ve == null && (ln = gn[ln.toLowerCase()] = gn[ln.toLowerCase()] || ln, nr[ln] = Yr), this;
        }, overrideMimeType: function(ln) {
          return ve == null && (It.mimeType = ln), this;
        }, statusCode: function(ln) {
          var Yr;
          if (ln) if (ve) dn.always(ln[dn.status]);
          else for (Yr in ln) sr[Yr] = [sr[Yr], ln[Yr]];
          return this;
        }, abort: function(ln) {
          var Yr = ln || wn;
          return ht && ht.abort(Yr), Vn(0, Yr), this;
        } };
        if (ge.promise(dn), It.url = ((C || It.url || fo.href) + "").replace(sn, fo.protocol + "//"), It.type = Y.method || Y.type || It.method || It.type, It.dataTypes = (It.dataType || "*").toLowerCase().match(mt) || [""], It.crossDomain == null) {
          Ie = w.createElement("a");
          try {
            Ie.href = It.url, Ie.href = Ie.href, It.crossDomain = bo.protocol + "//" + bo.host != Ie.protocol + "//" + Ie.host;
          } catch {
            It.crossDomain = true;
          }
        }
        if (It.data && It.processData && typeof It.data != "string" && (It.data = v.param(It.data, It.traditional)), Xo(To, It, Y, dn), ve) return dn;
        ze = v.event && It.global, ze && v.active++ === 0 && v.event.trigger("ajaxStart"), It.type = It.type.toUpperCase(), It.hasContent = !Cn.test(It.type), Pt = It.url.replace(wr, ""), It.hasContent ? It.data && It.processData && (It.contentType || "").indexOf("application/x-www-form-urlencoded") === 0 && (It.data = It.data.replace(Nr, "+")) : (Ar = It.url.slice(Pt.length), It.data && (It.processData || typeof It.data == "string") && (Pt += (ue.test(Pt) ? "&" : "?") + It.data, delete It.data), It.cache === false && (Pt = Pt.replace(Vr, "$1"), Ar = (ue.test(Pt) ? "&" : "?") + "_=" + Wt.guid++ + Ar), It.url = Pt + Ar), It.ifModified && (v.lastModified[Pt] && dn.setRequestHeader("If-Modified-Since", v.lastModified[Pt]), v.etag[Pt] && dn.setRequestHeader("If-None-Match", v.etag[Pt])), (It.data && It.hasContent && It.contentType !== false || Y.contentType) && dn.setRequestHeader("Content-Type", It.contentType), dn.setRequestHeader("Accept", It.dataTypes[0] && It.accepts[It.dataTypes[0]] ? It.accepts[It.dataTypes[0]] + (It.dataTypes[0] !== "*" ? ", " + Rn + "; q=0.01" : "") : It.accepts["*"]);
        for (Ze in It.headers) dn.setRequestHeader(Ze, It.headers[Ze]);
        if (It.beforeSend && (It.beforeSend.call(ie, dn, It) === false || ve)) return dn.abort();
        if (wn = "abort", we.add(It.complete), dn.done(It.success), dn.fail(It.error), ht = Xo(Ro, It, Y, dn), !ht) Vn(-1, "No Transport");
        else {
          if (dn.readyState = 1, ze && Ae.trigger("ajaxSend", [dn, It]), ve) return dn;
          It.async && It.timeout > 0 && (ne = t.setTimeout(function() {
            dn.abort("timeout");
          }, It.timeout));
          try {
            ve = false, ht.send(nr, Vn);
          } catch (ln) {
            if (ve) throw ln;
            Vn(-1, ln);
          }
        }
        function Vn(ln, Yr, ao, mo) {
          var co, So, ho, Lo, Io, Ko = Yr;
          ve || (ve = true, ne && t.clearTimeout(ne), ht = void 0, Ft = mo || "", dn.readyState = ln > 0 ? 4 : 0, co = ln >= 200 && ln < 300 || ln === 304, ao && (Lo = ki(It, dn, ao)), !co && v.inArray("script", It.dataTypes) > -1 && v.inArray("json", It.dataTypes) < 0 && (It.converters["text script"] = function() {
          }), Lo = ii(It, Lo, dn, co), co ? (It.ifModified && (Io = dn.getResponseHeader("Last-Modified"), Io && (v.lastModified[Pt] = Io), Io = dn.getResponseHeader("etag"), Io && (v.etag[Pt] = Io)), ln === 204 || It.type === "HEAD" ? Ko = "nocontent" : ln === 304 ? Ko = "notmodified" : (Ko = Lo.state, So = Lo.data, ho = Lo.error, co = !ho)) : (ho = Ko, (ln || !Ko) && (Ko = "error", ln < 0 && (ln = 0))), dn.status = ln, dn.statusText = (Yr || Ko) + "", co ? ge.resolveWith(ie, [So, Ko, dn]) : ge.rejectWith(ie, [dn, Ko, ho]), dn.statusCode(sr), sr = void 0, ze && Ae.trigger(co ? "ajaxSuccess" : "ajaxError", [dn, It, co ? So : ho]), we.fireWith(ie, [dn, Ko]), ze && (Ae.trigger("ajaxComplete", [dn, It]), --v.active || v.event.trigger("ajaxStop")));
        }
        return dn;
      }, getJSON: function(C, Y, ht) {
        return v.get(C, Y, ht, "json");
      }, getScript: function(C, Y) {
        return v.get(C, void 0, Y, "script");
      } }), v.each(["get", "post"], function(C, Y) {
        v[Y] = function(ht, Pt, Ft, jt) {
          return m(Pt) && (jt = jt || Ft, Ft = Pt, Pt = void 0), v.ajax(v.extend({ url: ht, type: Y, dataType: jt, data: Pt, success: Ft }, v.isPlainObject(ht) && ht));
        };
      }), v.ajaxPrefilter(function(C) {
        var Y;
        for (Y in C.headers) Y.toLowerCase() === "content-type" && (C.contentType = C.headers[Y] || "");
      }), v._evalUrl = function(C, Y, ht) {
        return v.ajax({ url: C, type: "GET", dataType: "script", cache: true, async: false, global: false, converters: { "text script": function() {
        } }, dataFilter: function(Pt) {
          v.globalEval(Pt, Y, ht);
        } });
      }, v.fn.extend({ wrapAll: function(C) {
        var Y;
        return this[0] && (m(C) && (C = C.call(this[0])), Y = v(C, this[0].ownerDocument).eq(0).clone(true), this[0].parentNode && Y.insertBefore(this[0]), Y.map(function() {
          for (var ht = this; ht.firstElementChild; ) ht = ht.firstElementChild;
          return ht;
        }).append(this)), this;
      }, wrapInner: function(C) {
        return m(C) ? this.each(function(Y) {
          v(this).wrapInner(C.call(this, Y));
        }) : this.each(function() {
          var Y = v(this), ht = Y.contents();
          ht.length ? ht.wrapAll(C) : Y.append(C);
        });
      }, wrap: function(C) {
        var Y = m(C);
        return this.each(function(ht) {
          v(this).wrapAll(Y ? C.call(this, ht) : C);
        });
      }, unwrap: function(C) {
        return this.parent(C).not("body").each(function() {
          v(this).replaceWith(this.childNodes);
        }), this;
      } }), v.expr.pseudos.hidden = function(C) {
        return !v.expr.pseudos.visible(C);
      }, v.expr.pseudos.visible = function(C) {
        return !!(C.offsetWidth || C.offsetHeight || C.getClientRects().length);
      }, v.ajaxSettings.xhr = function() {
        try {
          return new t.XMLHttpRequest();
        } catch {
        }
      };
      var wo = { 0: 200, 1223: 204 }, Yt = v.ajaxSettings.xhr();
      h.cors = !!Yt && "withCredentials" in Yt, h.ajax = Yt = !!Yt, v.ajaxTransport(function(C) {
        var Y, ht;
        if (h.cors || Yt && !C.crossDomain) return { send: function(Pt, Ft) {
          var jt, ne = C.xhr();
          if (ne.open(C.type, C.url, C.async, C.username, C.password), C.xhrFields) for (jt in C.xhrFields) ne[jt] = C.xhrFields[jt];
          C.mimeType && ne.overrideMimeType && ne.overrideMimeType(C.mimeType), !C.crossDomain && !Pt["X-Requested-With"] && (Pt["X-Requested-With"] = "XMLHttpRequest");
          for (jt in Pt) ne.setRequestHeader(jt, Pt[jt]);
          Y = function(Ie) {
            return function() {
              Y && (Y = ht = ne.onload = ne.onerror = ne.onabort = ne.ontimeout = ne.onreadystatechange = null, Ie === "abort" ? ne.abort() : Ie === "error" ? typeof ne.status != "number" ? Ft(0, "error") : Ft(ne.status, ne.statusText) : Ft(wo[ne.status] || ne.status, ne.statusText, (ne.responseType || "text") !== "text" || typeof ne.responseText != "string" ? { binary: ne.response } : { text: ne.responseText }, ne.getAllResponseHeaders()));
            };
          }, ne.onload = Y(), ht = ne.onerror = ne.ontimeout = Y("error"), ne.onabort !== void 0 ? ne.onabort = ht : ne.onreadystatechange = function() {
            ne.readyState === 4 && t.setTimeout(function() {
              Y && ht();
            });
          }, Y = Y("abort");
          try {
            ne.send(C.hasContent && C.data || null);
          } catch (Ie) {
            if (Y) throw Ie;
          }
        }, abort: function() {
          Y && Y();
        } };
      }), v.ajaxPrefilter(function(C) {
        C.crossDomain && (C.contents.script = false);
      }), v.ajaxSetup({ accepts: { script: "text/javascript, application/javascript, application/ecmascript, application/x-ecmascript" }, contents: { script: /\b(?:java|ecma)script\b/ }, converters: { "text script": function(C) {
        return v.globalEval(C), C;
      } } }), v.ajaxPrefilter("script", function(C) {
        C.cache === void 0 && (C.cache = false), C.crossDomain && (C.type = "GET");
      }), v.ajaxTransport("script", function(C) {
        if (C.crossDomain || C.scriptAttrs) {
          var Y, ht;
          return { send: function(Pt, Ft) {
            Y = v("<script>").attr(C.scriptAttrs || {}).prop({ charset: C.scriptCharset, src: C.url }).on("load error", ht = function(jt) {
              Y.remove(), ht = null, jt && Ft(jt.type === "error" ? 404 : 200, jt.type);
            }), w.head.appendChild(Y[0]);
          }, abort: function() {
            ht && ht();
          } };
        }
      });
      var ee = [], ye = /(=)\?(?=&|$)|\?\?/;
      v.ajaxSetup({ jsonp: "callback", jsonpCallback: function() {
        var C = ee.pop() || v.expando + "_" + Wt.guid++;
        return this[C] = true, C;
      } }), v.ajaxPrefilter("json jsonp", function(C, Y, ht) {
        var Pt, Ft, jt, ne = C.jsonp !== false && (ye.test(C.url) ? "url" : typeof C.data == "string" && (C.contentType || "").indexOf("application/x-www-form-urlencoded") === 0 && ye.test(C.data) && "data");
        if (ne || C.dataTypes[0] === "jsonp") return Pt = C.jsonpCallback = m(C.jsonpCallback) ? C.jsonpCallback() : C.jsonpCallback, ne ? C[ne] = C[ne].replace(ye, "$1" + Pt) : C.jsonp !== false && (C.url += (ue.test(C.url) ? "&" : "?") + C.jsonp + "=" + Pt), C.converters["script json"] = function() {
          return jt || v.error(Pt + " was not called"), jt[0];
        }, C.dataTypes[0] = "json", Ft = t[Pt], t[Pt] = function() {
          jt = arguments;
        }, ht.always(function() {
          Ft === void 0 ? v(t).removeProp(Pt) : t[Pt] = Ft, C[Pt] && (C.jsonpCallback = Y.jsonpCallback, ee.push(Pt)), jt && m(Ft) && Ft(jt[0]), jt = Ft = void 0;
        }), "script";
      }), h.createHTMLDocument = function() {
        var C = w.implementation.createHTMLDocument("").body;
        return C.innerHTML = "<form></form><form></form>", C.childNodes.length === 2;
      }(), v.parseHTML = function(C, Y, ht) {
        if (typeof C != "string") return [];
        typeof Y == "boolean" && (ht = Y, Y = false);
        var Pt, Ft, jt;
        return Y || (h.createHTMLDocument ? (Y = w.implementation.createHTMLDocument(""), Pt = Y.createElement("base"), Pt.href = w.location.href, Y.head.appendChild(Pt)) : Y = w), Ft = X.exec(C), jt = !ht && [], Ft ? [Y.createElement(Ft[1])] : (Ft = to([C], Y, jt), jt && jt.length && v(jt).remove(), v.merge([], Ft.childNodes));
      }, v.fn.load = function(C, Y, ht) {
        var Pt, Ft, jt, ne = this, Ie = C.indexOf(" ");
        return Ie > -1 && (Pt = yn(C.slice(Ie)), C = C.slice(0, Ie)), m(Y) ? (ht = Y, Y = void 0) : Y && typeof Y == "object" && (Ft = "POST"), ne.length > 0 && v.ajax({ url: C, type: Ft || "GET", dataType: "html", data: Y }).done(function(ve) {
          jt = arguments, ne.html(Pt ? v("<div>").append(v.parseHTML(ve)).find(Pt) : ve);
        }).always(ht && function(ve, ze) {
          ne.each(function() {
            ht.apply(this, jt || [ve.responseText, ze, ve]);
          });
        }), this;
      }, v.expr.pseudos.animated = function(C) {
        return v.grep(v.timers, function(Y) {
          return C === Y.elem;
        }).length;
      }, v.offset = { setOffset: function(C, Y, ht) {
        var Pt, Ft, jt, ne, Ie, ve, ze, Ze = v.css(C, "position"), Ar = v(C), It = {};
        Ze === "static" && (C.style.position = "relative"), Ie = Ar.offset(), jt = v.css(C, "top"), ve = v.css(C, "left"), ze = (Ze === "absolute" || Ze === "fixed") && (jt + ve).indexOf("auto") > -1, ze ? (Pt = Ar.position(), ne = Pt.top, Ft = Pt.left) : (ne = parseFloat(jt) || 0, Ft = parseFloat(ve) || 0), m(Y) && (Y = Y.call(C, ht, v.extend({}, Ie))), Y.top != null && (It.top = Y.top - Ie.top + ne), Y.left != null && (It.left = Y.left - Ie.left + Ft), "using" in Y ? Y.using.call(C, It) : Ar.css(It);
      } }, v.fn.extend({ offset: function(C) {
        if (arguments.length) return C === void 0 ? this : this.each(function(Ft) {
          v.offset.setOffset(this, C, Ft);
        });
        var Y, ht, Pt = this[0];
        if (Pt) return Pt.getClientRects().length ? (Y = Pt.getBoundingClientRect(), ht = Pt.ownerDocument.defaultView, { top: Y.top + ht.pageYOffset, left: Y.left + ht.pageXOffset }) : { top: 0, left: 0 };
      }, position: function() {
        if (this[0]) {
          var C, Y, ht, Pt = this[0], Ft = { top: 0, left: 0 };
          if (v.css(Pt, "position") === "fixed") Y = Pt.getBoundingClientRect();
          else {
            for (Y = this.offset(), ht = Pt.ownerDocument, C = Pt.offsetParent || ht.documentElement; C && (C === ht.body || C === ht.documentElement) && v.css(C, "position") === "static"; ) C = C.parentNode;
            C && C !== Pt && C.nodeType === 1 && (Ft = v(C).offset(), Ft.top += v.css(C, "borderTopWidth", true), Ft.left += v.css(C, "borderLeftWidth", true));
          }
          return { top: Y.top - Ft.top - v.css(Pt, "marginTop", true), left: Y.left - Ft.left - v.css(Pt, "marginLeft", true) };
        }
      }, offsetParent: function() {
        return this.map(function() {
          for (var C = this.offsetParent; C && v.css(C, "position") === "static"; ) C = C.offsetParent;
          return C || St;
        });
      } }), v.each({ scrollLeft: "pageXOffset", scrollTop: "pageYOffset" }, function(C, Y) {
        var ht = Y === "pageYOffset";
        v.fn[C] = function(Pt) {
          return Ut(this, function(Ft, jt, ne) {
            var Ie;
            if (c(Ft) ? Ie = Ft : Ft.nodeType === 9 && (Ie = Ft.defaultView), ne === void 0) return Ie ? Ie[Y] : Ft[jt];
            Ie ? Ie.scrollTo(ht ? Ie.pageXOffset : ne, ht ? ne : Ie.pageYOffset) : Ft[jt] = ne;
          }, C, Pt, arguments.length);
        };
      }), v.each(["top", "left"], function(C, Y) {
        v.cssHooks[Y] = Po(h.pixelPosition, function(ht, Pt) {
          if (Pt) return Pt = Bo(ht, Y), Jn.test(Pt) ? v(ht).position()[Y] + "px" : Pt;
        });
      }), v.each({ Height: "height", Width: "width" }, function(C, Y) {
        v.each({ padding: "inner" + C, content: Y, "": "outer" + C }, function(ht, Pt) {
          v.fn[Pt] = function(Ft, jt) {
            var ne = arguments.length && (ht || typeof Ft != "boolean"), Ie = ht || (Ft === true || jt === true ? "margin" : "border");
            return Ut(this, function(ve, ze, Ze) {
              var Ar;
              return c(ve) ? Pt.indexOf("outer") === 0 ? ve["inner" + C] : ve.document.documentElement["client" + C] : ve.nodeType === 9 ? (Ar = ve.documentElement, Math.max(ve.body["scroll" + C], Ar["scroll" + C], ve.body["offset" + C], Ar["offset" + C], Ar["client" + C])) : Ze === void 0 ? v.css(ve, ze, Ie) : v.style(ve, ze, Ze, Ie);
            }, Y, ne ? Ft : void 0, ne);
          };
        });
      }), v.each(["ajaxStart", "ajaxStop", "ajaxComplete", "ajaxError", "ajaxSuccess", "ajaxSend"], function(C, Y) {
        v.fn[Y] = function(ht) {
          return this.on(Y, ht);
        };
      }), v.fn.extend({ bind: function(C, Y, ht) {
        return this.on(C, null, Y, ht);
      }, unbind: function(C, Y) {
        return this.off(C, null, Y);
      }, delegate: function(C, Y, ht, Pt) {
        return this.on(Y, C, ht, Pt);
      }, undelegate: function(C, Y, ht) {
        return arguments.length === 1 ? this.off(C, "**") : this.off(Y, C || "**", ht);
      }, hover: function(C, Y) {
        return this.on("mouseenter", C).on("mouseleave", Y || C);
      } }), v.each("blur focus focusin focusout resize scroll click dblclick mousedown mouseup mousemove mouseover mouseout mouseenter mouseleave change select submit keydown keypress keyup contextmenu".split(" "), function(C, Y) {
        v.fn[Y] = function(ht, Pt) {
          return arguments.length > 0 ? this.on(Y, null, ht, Pt) : this.trigger(Y);
        };
      });
      var Se = /^[\s\uFEFF\xA0]+|([^\s\uFEFF\xA0])[\s\uFEFF\xA0]+$/g;
      v.proxy = function(C, Y) {
        var ht, Pt, Ft;
        if (typeof Y == "string" && (ht = C[Y], Y = C, C = ht), !!m(C)) return Pt = l.call(arguments, 2), Ft = function() {
          return C.apply(Y || this, Pt.concat(l.call(arguments)));
        }, Ft.guid = C.guid = C.guid || v.guid++, Ft;
      }, v.holdReady = function(C) {
        C ? v.readyWait++ : v.ready(true);
      }, v.isArray = Array.isArray, v.parseJSON = JSON.parse, v.nodeName = M, v.isFunction = m, v.isWindow = c, v.camelCase = yt, v.type = k, v.now = Date.now, v.isNumeric = function(C) {
        var Y = v.type(C);
        return (Y === "number" || Y === "string") && !isNaN(C - parseFloat(C));
      }, v.trim = function(C) {
        return C == null ? "" : (C + "").replace(Se, "$1");
      };
      var De = t.jQuery, ar = t.$;
      return v.noConflict = function(C) {
        return t.$ === v && (t.$ = ar), C && t.jQuery === v && (t.jQuery = De), v;
      }, typeof e > "u" && (t.jQuery = t.$ = v), v;
    });
  }(Pl)), Pl.exports;
}
var wm = bm();
const bn = Ad(wm);
var sf = {}, tc = {}, Mp;
function Sm() {
  if (Mp) return tc;
  Mp = 1, tc.byteLength = i, tc.toByteArray = d, tc.fromByteArray = g;
  for (var E = [], t = [], e = typeof Uint8Array < "u" ? Uint8Array : Array, o = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/", a = 0, l = o.length; a < l; ++a) E[a] = o[a], t[o.charCodeAt(a)] = a;
  t[45] = 62, t[95] = 63;
  function s(b) {
    var h = b.length;
    if (h % 4 > 0) throw new Error("Invalid string. Length must be a multiple of 4");
    var m = b.indexOf("=");
    m === -1 && (m = h);
    var c = m === h ? 0 : 4 - m % 4;
    return [m, c];
  }
  function i(b) {
    var h = s(b), m = h[0], c = h[1];
    return (m + c) * 3 / 4 - c;
  }
  function u(b, h, m) {
    return (h + m) * 3 / 4 - m;
  }
  function d(b) {
    var h, m = s(b), c = m[0], w = m[1], T = new e(u(b, c, w)), P = 0, k = w > 0 ? c - 4 : c, R;
    for (R = 0; R < k; R += 4) h = t[b.charCodeAt(R)] << 18 | t[b.charCodeAt(R + 1)] << 12 | t[b.charCodeAt(R + 2)] << 6 | t[b.charCodeAt(R + 3)], T[P++] = h >> 16 & 255, T[P++] = h >> 8 & 255, T[P++] = h & 255;
    return w === 2 && (h = t[b.charCodeAt(R)] << 2 | t[b.charCodeAt(R + 1)] >> 4, T[P++] = h & 255), w === 1 && (h = t[b.charCodeAt(R)] << 10 | t[b.charCodeAt(R + 1)] << 4 | t[b.charCodeAt(R + 2)] >> 2, T[P++] = h >> 8 & 255, T[P++] = h & 255), T;
  }
  function f(b) {
    return E[b >> 18 & 63] + E[b >> 12 & 63] + E[b >> 6 & 63] + E[b & 63];
  }
  function p(b, h, m) {
    for (var c, w = [], T = h; T < m; T += 3) c = (b[T] << 16 & 16711680) + (b[T + 1] << 8 & 65280) + (b[T + 2] & 255), w.push(f(c));
    return w.join("");
  }
  function g(b) {
    for (var h, m = b.length, c = m % 3, w = [], T = 16383, P = 0, k = m - c; P < k; P += T) w.push(p(b, P, P + T > k ? k : P + T));
    return c === 1 ? (h = b[m - 1], w.push(E[h >> 2] + E[h << 4 & 63] + "==")) : c === 2 && (h = (b[m - 2] << 8) + b[m - 1], w.push(E[h >> 10] + E[h >> 4 & 63] + E[h << 2 & 63] + "=")), w.join("");
  }
  return tc;
}
var Kc = {};
/*! ieee754. BSD-3-Clause License. Feross Aboukhadijeh <https://feross.org/opensource> */
var Bp;
function xm() {
  return Bp || (Bp = 1, Kc.read = function(E, t, e, o, a) {
    var l, s, i = a * 8 - o - 1, u = (1 << i) - 1, d = u >> 1, f = -7, p = e ? a - 1 : 0, g = e ? -1 : 1, b = E[t + p];
    for (p += g, l = b & (1 << -f) - 1, b >>= -f, f += i; f > 0; l = l * 256 + E[t + p], p += g, f -= 8) ;
    for (s = l & (1 << -f) - 1, l >>= -f, f += o; f > 0; s = s * 256 + E[t + p], p += g, f -= 8) ;
    if (l === 0) l = 1 - d;
    else {
      if (l === u) return s ? NaN : (b ? -1 : 1) * (1 / 0);
      s = s + Math.pow(2, o), l = l - d;
    }
    return (b ? -1 : 1) * s * Math.pow(2, l - o);
  }, Kc.write = function(E, t, e, o, a, l) {
    var s, i, u, d = l * 8 - a - 1, f = (1 << d) - 1, p = f >> 1, g = a === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0, b = o ? 0 : l - 1, h = o ? 1 : -1, m = t < 0 || t === 0 && 1 / t < 0 ? 1 : 0;
    for (t = Math.abs(t), isNaN(t) || t === 1 / 0 ? (i = isNaN(t) ? 1 : 0, s = f) : (s = Math.floor(Math.log(t) / Math.LN2), t * (u = Math.pow(2, -s)) < 1 && (s--, u *= 2), s + p >= 1 ? t += g / u : t += g * Math.pow(2, 1 - p), t * u >= 2 && (s++, u /= 2), s + p >= f ? (i = 0, s = f) : s + p >= 1 ? (i = (t * u - 1) * Math.pow(2, a), s = s + p) : (i = t * Math.pow(2, p - 1) * Math.pow(2, a), s = 0)); a >= 8; E[e + b] = i & 255, b += h, i /= 256, a -= 8) ;
    for (s = s << a | i, d += a; d > 0; E[e + b] = s & 255, b += h, s /= 256, d -= 8) ;
    E[e + b - h] |= m * 128;
  }), Kc;
}
/*!
* The buffer module from node.js, for the browser.
*
* @author   Feross Aboukhadijeh <https://feross.org>
* @license  MIT
*/
var Lp;
function _m() {
  return Lp || (Lp = 1, function(E) {
    const t = Sm(), e = xm(), o = typeof Symbol == "function" && typeof Symbol.for == "function" ? Symbol.for("nodejs.util.inspect.custom") : null;
    E.Buffer = i, E.SlowBuffer = T, E.INSPECT_MAX_BYTES = 50;
    const a = 2147483647;
    E.kMaxLength = a, i.TYPED_ARRAY_SUPPORT = l(), !i.TYPED_ARRAY_SUPPORT && typeof console < "u" && typeof console.error == "function" && console.error("This browser lacks typed array (Uint8Array) support which is required by `buffer` v5.x. Use `buffer` v4.x if you require old browser support.");
    function l() {
      try {
        const tt = new Uint8Array(1), H = { foo: function() {
          return 42;
        } };
        return Object.setPrototypeOf(H, Uint8Array.prototype), Object.setPrototypeOf(tt, H), tt.foo() === 42;
      } catch {
        return false;
      }
    }
    Object.defineProperty(i.prototype, "parent", { enumerable: true, get: function() {
      if (i.isBuffer(this)) return this.buffer;
    } }), Object.defineProperty(i.prototype, "offset", { enumerable: true, get: function() {
      if (i.isBuffer(this)) return this.byteOffset;
    } });
    function s(tt) {
      if (tt > a) throw new RangeError('The value "' + tt + '" is invalid for option "size"');
      const H = new Uint8Array(tt);
      return Object.setPrototypeOf(H, i.prototype), H;
    }
    function i(tt, H, K) {
      if (typeof tt == "number") {
        if (typeof H == "string") throw new TypeError('The "string" argument must be of type string. Received type number');
        return p(tt);
      }
      return u(tt, H, K);
    }
    i.poolSize = 8192;
    function u(tt, H, K) {
      if (typeof tt == "string") return g(tt, H);
      if (ArrayBuffer.isView(tt)) return h(tt);
      if (tt == null) throw new TypeError("The first argument must be one of type string, Buffer, ArrayBuffer, Array, or Array-like Object. Received type " + typeof tt);
      if (yt(tt, ArrayBuffer) || tt && yt(tt.buffer, ArrayBuffer) || typeof SharedArrayBuffer < "u" && (yt(tt, SharedArrayBuffer) || tt && yt(tt.buffer, SharedArrayBuffer))) return m(tt, H, K);
      if (typeof tt == "number") throw new TypeError('The "value" argument must not be of type number. Received type number');
      const q = tt.valueOf && tt.valueOf();
      if (q != null && q !== tt) return i.from(q, H, K);
      const _ = c(tt);
      if (_) return _;
      if (typeof Symbol < "u" && Symbol.toPrimitive != null && typeof tt[Symbol.toPrimitive] == "function") return i.from(tt[Symbol.toPrimitive]("string"), H, K);
      throw new TypeError("The first argument must be one of type string, Buffer, ArrayBuffer, Array, or Array-like Object. Received type " + typeof tt);
    }
    i.from = function(tt, H, K) {
      return u(tt, H, K);
    }, Object.setPrototypeOf(i.prototype, Uint8Array.prototype), Object.setPrototypeOf(i, Uint8Array);
    function d(tt) {
      if (typeof tt != "number") throw new TypeError('"size" argument must be of type number');
      if (tt < 0) throw new RangeError('The value "' + tt + '" is invalid for option "size"');
    }
    function f(tt, H, K) {
      return d(tt), tt <= 0 ? s(tt) : H !== void 0 ? typeof K == "string" ? s(tt).fill(H, K) : s(tt).fill(H) : s(tt);
    }
    i.alloc = function(tt, H, K) {
      return f(tt, H, K);
    };
    function p(tt) {
      return d(tt), s(tt < 0 ? 0 : w(tt) | 0);
    }
    i.allocUnsafe = function(tt) {
      return p(tt);
    }, i.allocUnsafeSlow = function(tt) {
      return p(tt);
    };
    function g(tt, H) {
      if ((typeof H != "string" || H === "") && (H = "utf8"), !i.isEncoding(H)) throw new TypeError("Unknown encoding: " + H);
      const K = P(tt, H) | 0;
      let q = s(K);
      const _ = q.write(tt, H);
      return _ !== K && (q = q.slice(0, _)), q;
    }
    function b(tt) {
      const H = tt.length < 0 ? 0 : w(tt.length) | 0, K = s(H);
      for (let q = 0; q < H; q += 1) K[q] = tt[q] & 255;
      return K;
    }
    function h(tt) {
      if (yt(tt, Uint8Array)) {
        const H = new Uint8Array(tt);
        return m(H.buffer, H.byteOffset, H.byteLength);
      }
      return b(tt);
    }
    function m(tt, H, K) {
      if (H < 0 || tt.byteLength < H) throw new RangeError('"offset" is outside of buffer bounds');
      if (tt.byteLength < H + (K || 0)) throw new RangeError('"length" is outside of buffer bounds');
      let q;
      return H === void 0 && K === void 0 ? q = new Uint8Array(tt) : K === void 0 ? q = new Uint8Array(tt, H) : q = new Uint8Array(tt, H, K), Object.setPrototypeOf(q, i.prototype), q;
    }
    function c(tt) {
      if (i.isBuffer(tt)) {
        const H = w(tt.length) | 0, K = s(H);
        return K.length === 0 || tt.copy(K, 0, 0, H), K;
      }
      if (tt.length !== void 0) return typeof tt.length != "number" || Mt(tt.length) ? s(0) : b(tt);
      if (tt.type === "Buffer" && Array.isArray(tt.data)) return b(tt.data);
    }
    function w(tt) {
      if (tt >= a) throw new RangeError("Attempt to allocate Buffer larger than maximum size: 0x" + a.toString(16) + " bytes");
      return tt | 0;
    }
    function T(tt) {
      return +tt != tt && (tt = 0), i.alloc(+tt);
    }
    i.isBuffer = function(H) {
      return H != null && H._isBuffer === true && H !== i.prototype;
    }, i.compare = function(H, K) {
      if (yt(H, Uint8Array) && (H = i.from(H, H.offset, H.byteLength)), yt(K, Uint8Array) && (K = i.from(K, K.offset, K.byteLength)), !i.isBuffer(H) || !i.isBuffer(K)) throw new TypeError('The "buf1", "buf2" arguments must be one of type Buffer or Uint8Array');
      if (H === K) return 0;
      let q = H.length, _ = K.length;
      for (let L = 0, et = Math.min(q, _); L < et; ++L) if (H[L] !== K[L]) {
        q = H[L], _ = K[L];
        break;
      }
      return q < _ ? -1 : _ < q ? 1 : 0;
    }, i.isEncoding = function(H) {
      switch (String(H).toLowerCase()) {
        case "hex":
        case "utf8":
        case "utf-8":
        case "ascii":
        case "latin1":
        case "binary":
        case "base64":
        case "ucs2":
        case "ucs-2":
        case "utf16le":
        case "utf-16le":
          return true;
        default:
          return false;
      }
    }, i.concat = function(H, K) {
      if (!Array.isArray(H)) throw new TypeError('"list" argument must be an Array of Buffers');
      if (H.length === 0) return i.alloc(0);
      let q;
      if (K === void 0) for (K = 0, q = 0; q < H.length; ++q) K += H[q].length;
      const _ = i.allocUnsafe(K);
      let L = 0;
      for (q = 0; q < H.length; ++q) {
        let et = H[q];
        if (yt(et, Uint8Array)) L + et.length > _.length ? (i.isBuffer(et) || (et = i.from(et)), et.copy(_, L)) : Uint8Array.prototype.set.call(_, et, L);
        else if (i.isBuffer(et)) et.copy(_, L);
        else throw new TypeError('"list" argument must be an Array of Buffers');
        L += et.length;
      }
      return _;
    };
    function P(tt, H) {
      if (i.isBuffer(tt)) return tt.length;
      if (ArrayBuffer.isView(tt) || yt(tt, ArrayBuffer)) return tt.byteLength;
      if (typeof tt != "string") throw new TypeError('The "string" argument must be one of type string, Buffer, or ArrayBuffer. Received type ' + typeof tt);
      const K = tt.length, q = arguments.length > 2 && arguments[2] === true;
      if (!q && K === 0) return 0;
      let _ = false;
      for (; ; ) switch (H) {
        case "ascii":
        case "latin1":
        case "binary":
          return K;
        case "utf8":
        case "utf-8":
          return At(tt).length;
        case "ucs2":
        case "ucs-2":
        case "utf16le":
        case "utf-16le":
          return K * 2;
        case "hex":
          return K >>> 1;
        case "base64":
          return oe(tt).length;
        default:
          if (_) return q ? -1 : At(tt).length;
          H = ("" + H).toLowerCase(), _ = true;
      }
    }
    i.byteLength = P;
    function k(tt, H, K) {
      let q = false;
      if ((H === void 0 || H < 0) && (H = 0), H > this.length || ((K === void 0 || K > this.length) && (K = this.length), K <= 0) || (K >>>= 0, H >>>= 0, K <= H)) return "";
      for (tt || (tt = "utf8"); ; ) switch (tt) {
        case "hex":
          return at(this, H, K);
        case "utf8":
        case "utf-8":
          return x(this, H, K);
        case "ascii":
          return lt(this, H, K);
        case "latin1":
        case "binary":
          return pt(this, H, K);
        case "base64":
          return S(this, H, K);
        case "ucs2":
        case "ucs-2":
        case "utf16le":
        case "utf-16le":
          return rt(this, H, K);
        default:
          if (q) throw new TypeError("Unknown encoding: " + tt);
          tt = (tt + "").toLowerCase(), q = true;
      }
    }
    i.prototype._isBuffer = true;
    function R(tt, H, K) {
      const q = tt[H];
      tt[H] = tt[K], tt[K] = q;
    }
    i.prototype.swap16 = function() {
      const H = this.length;
      if (H % 2 !== 0) throw new RangeError("Buffer size must be a multiple of 16-bits");
      for (let K = 0; K < H; K += 2) R(this, K, K + 1);
      return this;
    }, i.prototype.swap32 = function() {
      const H = this.length;
      if (H % 4 !== 0) throw new RangeError("Buffer size must be a multiple of 32-bits");
      for (let K = 0; K < H; K += 4) R(this, K, K + 3), R(this, K + 1, K + 2);
      return this;
    }, i.prototype.swap64 = function() {
      const H = this.length;
      if (H % 8 !== 0) throw new RangeError("Buffer size must be a multiple of 64-bits");
      for (let K = 0; K < H; K += 8) R(this, K, K + 7), R(this, K + 1, K + 6), R(this, K + 2, K + 5), R(this, K + 3, K + 4);
      return this;
    }, i.prototype.toString = function() {
      const H = this.length;
      return H === 0 ? "" : arguments.length === 0 ? x(this, 0, H) : k.apply(this, arguments);
    }, i.prototype.toLocaleString = i.prototype.toString, i.prototype.equals = function(H) {
      if (!i.isBuffer(H)) throw new TypeError("Argument must be a Buffer");
      return this === H ? true : i.compare(this, H) === 0;
    }, i.prototype.inspect = function() {
      let H = "";
      const K = E.INSPECT_MAX_BYTES;
      return H = this.toString("hex", 0, K).replace(/(.{2})/g, "$1 ").trim(), this.length > K && (H += " ... "), "<Buffer " + H + ">";
    }, o && (i.prototype[o] = i.prototype.inspect), i.prototype.compare = function(H, K, q, _, L) {
      if (yt(H, Uint8Array) && (H = i.from(H, H.offset, H.byteLength)), !i.isBuffer(H)) throw new TypeError('The "target" argument must be one of type Buffer or Uint8Array. Received type ' + typeof H);
      if (K === void 0 && (K = 0), q === void 0 && (q = H ? H.length : 0), _ === void 0 && (_ = 0), L === void 0 && (L = this.length), K < 0 || q > H.length || _ < 0 || L > this.length) throw new RangeError("out of range index");
      if (_ >= L && K >= q) return 0;
      if (_ >= L) return -1;
      if (K >= q) return 1;
      if (K >>>= 0, q >>>= 0, _ >>>= 0, L >>>= 0, this === H) return 0;
      let et = L - _, St = q - K;
      const kt = Math.min(et, St), ct = this.slice(_, L), j = H.slice(K, q);
      for (let ut = 0; ut < kt; ++ut) if (ct[ut] !== j[ut]) {
        et = ct[ut], St = j[ut];
        break;
      }
      return et < St ? -1 : St < et ? 1 : 0;
    };
    function F(tt, H, K, q, _) {
      if (tt.length === 0) return -1;
      if (typeof K == "string" ? (q = K, K = 0) : K > 2147483647 ? K = 2147483647 : K < -2147483648 && (K = -2147483648), K = +K, Mt(K) && (K = _ ? 0 : tt.length - 1), K < 0 && (K = tt.length + K), K >= tt.length) {
        if (_) return -1;
        K = tt.length - 1;
      } else if (K < 0) if (_) K = 0;
      else return -1;
      if (typeof H == "string" && (H = i.from(H, q)), i.isBuffer(H)) return H.length === 0 ? -1 : v(tt, H, K, q, _);
      if (typeof H == "number") return H = H & 255, typeof Uint8Array.prototype.indexOf == "function" ? _ ? Uint8Array.prototype.indexOf.call(tt, H, K) : Uint8Array.prototype.lastIndexOf.call(tt, H, K) : v(tt, [H], K, q, _);
      throw new TypeError("val must be string, number or Buffer");
    }
    function v(tt, H, K, q, _) {
      let L = 1, et = tt.length, St = H.length;
      if (q !== void 0 && (q = String(q).toLowerCase(), q === "ucs2" || q === "ucs-2" || q === "utf16le" || q === "utf-16le")) {
        if (tt.length < 2 || H.length < 2) return -1;
        L = 2, et /= 2, St /= 2, K /= 2;
      }
      function kt(j, ut) {
        return L === 1 ? j[ut] : j.readUInt16BE(ut * L);
      }
      let ct;
      if (_) {
        let j = -1;
        for (ct = K; ct < et; ct++) if (kt(tt, ct) === kt(H, j === -1 ? 0 : ct - j)) {
          if (j === -1 && (j = ct), ct - j + 1 === St) return j * L;
        } else j !== -1 && (ct -= ct - j), j = -1;
      } else for (K + St > et && (K = et - St), ct = K; ct >= 0; ct--) {
        let j = true;
        for (let ut = 0; ut < St; ut++) if (kt(tt, ct + ut) !== kt(H, ut)) {
          j = false;
          break;
        }
        if (j) return ct;
      }
      return -1;
    }
    i.prototype.includes = function(H, K, q) {
      return this.indexOf(H, K, q) !== -1;
    }, i.prototype.indexOf = function(H, K, q) {
      return F(this, H, K, q, true);
    }, i.prototype.lastIndexOf = function(H, K, q) {
      return F(this, H, K, q, false);
    };
    function U(tt, H, K, q) {
      K = Number(K) || 0;
      const _ = tt.length - K;
      q ? (q = Number(q), q > _ && (q = _)) : q = _;
      const L = H.length;
      q > L / 2 && (q = L / 2);
      let et;
      for (et = 0; et < q; ++et) {
        const St = parseInt(H.substr(et * 2, 2), 16);
        if (Mt(St)) return et;
        tt[K + et] = St;
      }
      return et;
    }
    function M(tt, H, K, q) {
      return te(At(H, tt.length - K), tt, K, q);
    }
    function Z(tt, H, K, q) {
      return te(Ut(H), tt, K, q);
    }
    function D(tt, H, K, q) {
      return te(oe(H), tt, K, q);
    }
    function V(tt, H, K, q) {
      return te(Vt(H, tt.length - K), tt, K, q);
    }
    i.prototype.write = function(H, K, q, _) {
      if (K === void 0) _ = "utf8", q = this.length, K = 0;
      else if (q === void 0 && typeof K == "string") _ = K, q = this.length, K = 0;
      else if (isFinite(K)) K = K >>> 0, isFinite(q) ? (q = q >>> 0, _ === void 0 && (_ = "utf8")) : (_ = q, q = void 0);
      else throw new Error("Buffer.write(string, encoding, offset[, length]) is no longer supported");
      const L = this.length - K;
      if ((q === void 0 || q > L) && (q = L), H.length > 0 && (q < 0 || K < 0) || K > this.length) throw new RangeError("Attempt to write outside buffer bounds");
      _ || (_ = "utf8");
      let et = false;
      for (; ; ) switch (_) {
        case "hex":
          return U(this, H, K, q);
        case "utf8":
        case "utf-8":
          return M(this, H, K, q);
        case "ascii":
        case "latin1":
        case "binary":
          return Z(this, H, K, q);
        case "base64":
          return D(this, H, K, q);
        case "ucs2":
        case "ucs-2":
        case "utf16le":
        case "utf-16le":
          return V(this, H, K, q);
        default:
          if (et) throw new TypeError("Unknown encoding: " + _);
          _ = ("" + _).toLowerCase(), et = true;
      }
    }, i.prototype.toJSON = function() {
      return { type: "Buffer", data: Array.prototype.slice.call(this._arr || this, 0) };
    };
    function S(tt, H, K) {
      return H === 0 && K === tt.length ? t.fromByteArray(tt) : t.fromByteArray(tt.slice(H, K));
    }
    function x(tt, H, K) {
      K = Math.min(tt.length, K);
      const q = [];
      let _ = H;
      for (; _ < K; ) {
        const L = tt[_];
        let et = null, St = L > 239 ? 4 : L > 223 ? 3 : L > 191 ? 2 : 1;
        if (_ + St <= K) {
          let kt, ct, j, ut;
          switch (St) {
            case 1:
              L < 128 && (et = L);
              break;
            case 2:
              kt = tt[_ + 1], (kt & 192) === 128 && (ut = (L & 31) << 6 | kt & 63, ut > 127 && (et = ut));
              break;
            case 3:
              kt = tt[_ + 1], ct = tt[_ + 2], (kt & 192) === 128 && (ct & 192) === 128 && (ut = (L & 15) << 12 | (kt & 63) << 6 | ct & 63, ut > 2047 && (ut < 55296 || ut > 57343) && (et = ut));
              break;
            case 4:
              kt = tt[_ + 1], ct = tt[_ + 2], j = tt[_ + 3], (kt & 192) === 128 && (ct & 192) === 128 && (j & 192) === 128 && (ut = (L & 15) << 18 | (kt & 63) << 12 | (ct & 63) << 6 | j & 63, ut > 65535 && ut < 1114112 && (et = ut));
          }
        }
        et === null ? (et = 65533, St = 1) : et > 65535 && (et -= 65536, q.push(et >>> 10 & 1023 | 55296), et = 56320 | et & 1023), q.push(et), _ += St;
      }
      return W(q);
    }
    const B = 4096;
    function W(tt) {
      const H = tt.length;
      if (H <= B) return String.fromCharCode.apply(String, tt);
      let K = "", q = 0;
      for (; q < H; ) K += String.fromCharCode.apply(String, tt.slice(q, q += B));
      return K;
    }
    function lt(tt, H, K) {
      let q = "";
      K = Math.min(tt.length, K);
      for (let _ = H; _ < K; ++_) q += String.fromCharCode(tt[_] & 127);
      return q;
    }
    function pt(tt, H, K) {
      let q = "";
      K = Math.min(tt.length, K);
      for (let _ = H; _ < K; ++_) q += String.fromCharCode(tt[_]);
      return q;
    }
    function at(tt, H, K) {
      const q = tt.length;
      (!H || H < 0) && (H = 0), (!K || K < 0 || K > q) && (K = q);
      let _ = "";
      for (let L = H; L < K; ++L) _ += O[tt[L]];
      return _;
    }
    function rt(tt, H, K) {
      const q = tt.slice(H, K);
      let _ = "";
      for (let L = 0; L < q.length - 1; L += 2) _ += String.fromCharCode(q[L] + q[L + 1] * 256);
      return _;
    }
    i.prototype.slice = function(H, K) {
      const q = this.length;
      H = ~~H, K = K === void 0 ? q : ~~K, H < 0 ? (H += q, H < 0 && (H = 0)) : H > q && (H = q), K < 0 ? (K += q, K < 0 && (K = 0)) : K > q && (K = q), K < H && (K = H);
      const _ = this.subarray(H, K);
      return Object.setPrototypeOf(_, i.prototype), _;
    };
    function ot(tt, H, K) {
      if (tt % 1 !== 0 || tt < 0) throw new RangeError("offset is not uint");
      if (tt + H > K) throw new RangeError("Trying to access beyond buffer length");
    }
    i.prototype.readUintLE = i.prototype.readUIntLE = function(H, K, q) {
      H = H >>> 0, K = K >>> 0, q || ot(H, K, this.length);
      let _ = this[H], L = 1, et = 0;
      for (; ++et < K && (L *= 256); ) _ += this[H + et] * L;
      return _;
    }, i.prototype.readUintBE = i.prototype.readUIntBE = function(H, K, q) {
      H = H >>> 0, K = K >>> 0, q || ot(H, K, this.length);
      let _ = this[H + --K], L = 1;
      for (; K > 0 && (L *= 256); ) _ += this[H + --K] * L;
      return _;
    }, i.prototype.readUint8 = i.prototype.readUInt8 = function(H, K) {
      return H = H >>> 0, K || ot(H, 1, this.length), this[H];
    }, i.prototype.readUint16LE = i.prototype.readUInt16LE = function(H, K) {
      return H = H >>> 0, K || ot(H, 2, this.length), this[H] | this[H + 1] << 8;
    }, i.prototype.readUint16BE = i.prototype.readUInt16BE = function(H, K) {
      return H = H >>> 0, K || ot(H, 2, this.length), this[H] << 8 | this[H + 1];
    }, i.prototype.readUint32LE = i.prototype.readUInt32LE = function(H, K) {
      return H = H >>> 0, K || ot(H, 4, this.length), (this[H] | this[H + 1] << 8 | this[H + 2] << 16) + this[H + 3] * 16777216;
    }, i.prototype.readUint32BE = i.prototype.readUInt32BE = function(H, K) {
      return H = H >>> 0, K || ot(H, 4, this.length), this[H] * 16777216 + (this[H + 1] << 16 | this[H + 2] << 8 | this[H + 3]);
    }, i.prototype.readBigUInt64LE = z(function(H) {
      H = H >>> 0, xt(H, "offset");
      const K = this[H], q = this[H + 7];
      (K === void 0 || q === void 0) && Ct(H, this.length - 8);
      const _ = K + this[++H] * 2 ** 8 + this[++H] * 2 ** 16 + this[++H] * 2 ** 24, L = this[++H] + this[++H] * 2 ** 8 + this[++H] * 2 ** 16 + q * 2 ** 24;
      return BigInt(_) + (BigInt(L) << BigInt(32));
    }), i.prototype.readBigUInt64BE = z(function(H) {
      H = H >>> 0, xt(H, "offset");
      const K = this[H], q = this[H + 7];
      (K === void 0 || q === void 0) && Ct(H, this.length - 8);
      const _ = K * 2 ** 24 + this[++H] * 2 ** 16 + this[++H] * 2 ** 8 + this[++H], L = this[++H] * 2 ** 24 + this[++H] * 2 ** 16 + this[++H] * 2 ** 8 + q;
      return (BigInt(_) << BigInt(32)) + BigInt(L);
    }), i.prototype.readIntLE = function(H, K, q) {
      H = H >>> 0, K = K >>> 0, q || ot(H, K, this.length);
      let _ = this[H], L = 1, et = 0;
      for (; ++et < K && (L *= 256); ) _ += this[H + et] * L;
      return L *= 128, _ >= L && (_ -= Math.pow(2, 8 * K)), _;
    }, i.prototype.readIntBE = function(H, K, q) {
      H = H >>> 0, K = K >>> 0, q || ot(H, K, this.length);
      let _ = K, L = 1, et = this[H + --_];
      for (; _ > 0 && (L *= 256); ) et += this[H + --_] * L;
      return L *= 128, et >= L && (et -= Math.pow(2, 8 * K)), et;
    }, i.prototype.readInt8 = function(H, K) {
      return H = H >>> 0, K || ot(H, 1, this.length), this[H] & 128 ? (255 - this[H] + 1) * -1 : this[H];
    }, i.prototype.readInt16LE = function(H, K) {
      H = H >>> 0, K || ot(H, 2, this.length);
      const q = this[H] | this[H + 1] << 8;
      return q & 32768 ? q | 4294901760 : q;
    }, i.prototype.readInt16BE = function(H, K) {
      H = H >>> 0, K || ot(H, 2, this.length);
      const q = this[H + 1] | this[H] << 8;
      return q & 32768 ? q | 4294901760 : q;
    }, i.prototype.readInt32LE = function(H, K) {
      return H = H >>> 0, K || ot(H, 4, this.length), this[H] | this[H + 1] << 8 | this[H + 2] << 16 | this[H + 3] << 24;
    }, i.prototype.readInt32BE = function(H, K) {
      return H = H >>> 0, K || ot(H, 4, this.length), this[H] << 24 | this[H + 1] << 16 | this[H + 2] << 8 | this[H + 3];
    }, i.prototype.readBigInt64LE = z(function(H) {
      H = H >>> 0, xt(H, "offset");
      const K = this[H], q = this[H + 7];
      (K === void 0 || q === void 0) && Ct(H, this.length - 8);
      const _ = this[H + 4] + this[H + 5] * 2 ** 8 + this[H + 6] * 2 ** 16 + (q << 24);
      return (BigInt(_) << BigInt(32)) + BigInt(K + this[++H] * 2 ** 8 + this[++H] * 2 ** 16 + this[++H] * 2 ** 24);
    }), i.prototype.readBigInt64BE = z(function(H) {
      H = H >>> 0, xt(H, "offset");
      const K = this[H], q = this[H + 7];
      (K === void 0 || q === void 0) && Ct(H, this.length - 8);
      const _ = (K << 24) + this[++H] * 2 ** 16 + this[++H] * 2 ** 8 + this[++H];
      return (BigInt(_) << BigInt(32)) + BigInt(this[++H] * 2 ** 24 + this[++H] * 2 ** 16 + this[++H] * 2 ** 8 + q);
    }), i.prototype.readFloatLE = function(H, K) {
      return H = H >>> 0, K || ot(H, 4, this.length), e.read(this, H, true, 23, 4);
    }, i.prototype.readFloatBE = function(H, K) {
      return H = H >>> 0, K || ot(H, 4, this.length), e.read(this, H, false, 23, 4);
    }, i.prototype.readDoubleLE = function(H, K) {
      return H = H >>> 0, K || ot(H, 8, this.length), e.read(this, H, true, 52, 8);
    }, i.prototype.readDoubleBE = function(H, K) {
      return H = H >>> 0, K || ot(H, 8, this.length), e.read(this, H, false, 52, 8);
    };
    function X(tt, H, K, q, _, L) {
      if (!i.isBuffer(tt)) throw new TypeError('"buffer" argument must be a Buffer instance');
      if (H > _ || H < L) throw new RangeError('"value" argument is out of bounds');
      if (K + q > tt.length) throw new RangeError("Index out of range");
    }
    i.prototype.writeUintLE = i.prototype.writeUIntLE = function(H, K, q, _) {
      if (H = +H, K = K >>> 0, q = q >>> 0, !_) {
        const St = Math.pow(2, 8 * q) - 1;
        X(this, H, K, q, St, 0);
      }
      let L = 1, et = 0;
      for (this[K] = H & 255; ++et < q && (L *= 256); ) this[K + et] = H / L & 255;
      return K + q;
    }, i.prototype.writeUintBE = i.prototype.writeUIntBE = function(H, K, q, _) {
      if (H = +H, K = K >>> 0, q = q >>> 0, !_) {
        const St = Math.pow(2, 8 * q) - 1;
        X(this, H, K, q, St, 0);
      }
      let L = q - 1, et = 1;
      for (this[K + L] = H & 255; --L >= 0 && (et *= 256); ) this[K + L] = H / et & 255;
      return K + q;
    }, i.prototype.writeUint8 = i.prototype.writeUInt8 = function(H, K, q) {
      return H = +H, K = K >>> 0, q || X(this, H, K, 1, 255, 0), this[K] = H & 255, K + 1;
    }, i.prototype.writeUint16LE = i.prototype.writeUInt16LE = function(H, K, q) {
      return H = +H, K = K >>> 0, q || X(this, H, K, 2, 65535, 0), this[K] = H & 255, this[K + 1] = H >>> 8, K + 2;
    }, i.prototype.writeUint16BE = i.prototype.writeUInt16BE = function(H, K, q) {
      return H = +H, K = K >>> 0, q || X(this, H, K, 2, 65535, 0), this[K] = H >>> 8, this[K + 1] = H & 255, K + 2;
    }, i.prototype.writeUint32LE = i.prototype.writeUInt32LE = function(H, K, q) {
      return H = +H, K = K >>> 0, q || X(this, H, K, 4, 4294967295, 0), this[K + 3] = H >>> 24, this[K + 2] = H >>> 16, this[K + 1] = H >>> 8, this[K] = H & 255, K + 4;
    }, i.prototype.writeUint32BE = i.prototype.writeUInt32BE = function(H, K, q) {
      return H = +H, K = K >>> 0, q || X(this, H, K, 4, 4294967295, 0), this[K] = H >>> 24, this[K + 1] = H >>> 16, this[K + 2] = H >>> 8, this[K + 3] = H & 255, K + 4;
    };
    function I(tt, H, K, q, _) {
      bt(H, q, _, tt, K, 7);
      let L = Number(H & BigInt(4294967295));
      tt[K++] = L, L = L >> 8, tt[K++] = L, L = L >> 8, tt[K++] = L, L = L >> 8, tt[K++] = L;
      let et = Number(H >> BigInt(32) & BigInt(4294967295));
      return tt[K++] = et, et = et >> 8, tt[K++] = et, et = et >> 8, tt[K++] = et, et = et >> 8, tt[K++] = et, K;
    }
    function nt(tt, H, K, q, _) {
      bt(H, q, _, tt, K, 7);
      let L = Number(H & BigInt(4294967295));
      tt[K + 7] = L, L = L >> 8, tt[K + 6] = L, L = L >> 8, tt[K + 5] = L, L = L >> 8, tt[K + 4] = L;
      let et = Number(H >> BigInt(32) & BigInt(4294967295));
      return tt[K + 3] = et, et = et >> 8, tt[K + 2] = et, et = et >> 8, tt[K + 1] = et, et = et >> 8, tt[K] = et, K + 8;
    }
    i.prototype.writeBigUInt64LE = z(function(H, K = 0) {
      return I(this, H, K, BigInt(0), BigInt("0xffffffffffffffff"));
    }), i.prototype.writeBigUInt64BE = z(function(H, K = 0) {
      return nt(this, H, K, BigInt(0), BigInt("0xffffffffffffffff"));
    }), i.prototype.writeIntLE = function(H, K, q, _) {
      if (H = +H, K = K >>> 0, !_) {
        const kt = Math.pow(2, 8 * q - 1);
        X(this, H, K, q, kt - 1, -kt);
      }
      let L = 0, et = 1, St = 0;
      for (this[K] = H & 255; ++L < q && (et *= 256); ) H < 0 && St === 0 && this[K + L - 1] !== 0 && (St = 1), this[K + L] = (H / et >> 0) - St & 255;
      return K + q;
    }, i.prototype.writeIntBE = function(H, K, q, _) {
      if (H = +H, K = K >>> 0, !_) {
        const kt = Math.pow(2, 8 * q - 1);
        X(this, H, K, q, kt - 1, -kt);
      }
      let L = q - 1, et = 1, St = 0;
      for (this[K + L] = H & 255; --L >= 0 && (et *= 256); ) H < 0 && St === 0 && this[K + L + 1] !== 0 && (St = 1), this[K + L] = (H / et >> 0) - St & 255;
      return K + q;
    }, i.prototype.writeInt8 = function(H, K, q) {
      return H = +H, K = K >>> 0, q || X(this, H, K, 1, 127, -128), H < 0 && (H = 255 + H + 1), this[K] = H & 255, K + 1;
    }, i.prototype.writeInt16LE = function(H, K, q) {
      return H = +H, K = K >>> 0, q || X(this, H, K, 2, 32767, -32768), this[K] = H & 255, this[K + 1] = H >>> 8, K + 2;
    }, i.prototype.writeInt16BE = function(H, K, q) {
      return H = +H, K = K >>> 0, q || X(this, H, K, 2, 32767, -32768), this[K] = H >>> 8, this[K + 1] = H & 255, K + 2;
    }, i.prototype.writeInt32LE = function(H, K, q) {
      return H = +H, K = K >>> 0, q || X(this, H, K, 4, 2147483647, -2147483648), this[K] = H & 255, this[K + 1] = H >>> 8, this[K + 2] = H >>> 16, this[K + 3] = H >>> 24, K + 4;
    }, i.prototype.writeInt32BE = function(H, K, q) {
      return H = +H, K = K >>> 0, q || X(this, H, K, 4, 2147483647, -2147483648), H < 0 && (H = 4294967295 + H + 1), this[K] = H >>> 24, this[K + 1] = H >>> 16, this[K + 2] = H >>> 8, this[K + 3] = H & 255, K + 4;
    }, i.prototype.writeBigInt64LE = z(function(H, K = 0) {
      return I(this, H, K, -BigInt("0x8000000000000000"), BigInt("0x7fffffffffffffff"));
    }), i.prototype.writeBigInt64BE = z(function(H, K = 0) {
      return nt(this, H, K, -BigInt("0x8000000000000000"), BigInt("0x7fffffffffffffff"));
    });
    function ft(tt, H, K, q, _, L) {
      if (K + q > tt.length) throw new RangeError("Index out of range");
      if (K < 0) throw new RangeError("Index out of range");
    }
    function dt(tt, H, K, q, _) {
      return H = +H, K = K >>> 0, _ || ft(tt, H, K, 4), e.write(tt, H, K, q, 23, 4), K + 4;
    }
    i.prototype.writeFloatLE = function(H, K, q) {
      return dt(this, H, K, true, q);
    }, i.prototype.writeFloatBE = function(H, K, q) {
      return dt(this, H, K, false, q);
    };
    function Lt(tt, H, K, q, _) {
      return H = +H, K = K >>> 0, _ || ft(tt, H, K, 8), e.write(tt, H, K, q, 52, 8), K + 8;
    }
    i.prototype.writeDoubleLE = function(H, K, q) {
      return Lt(this, H, K, true, q);
    }, i.prototype.writeDoubleBE = function(H, K, q) {
      return Lt(this, H, K, false, q);
    }, i.prototype.copy = function(H, K, q, _) {
      if (!i.isBuffer(H)) throw new TypeError("argument should be a Buffer");
      if (q || (q = 0), !_ && _ !== 0 && (_ = this.length), K >= H.length && (K = H.length), K || (K = 0), _ > 0 && _ < q && (_ = q), _ === q || H.length === 0 || this.length === 0) return 0;
      if (K < 0) throw new RangeError("targetStart out of bounds");
      if (q < 0 || q >= this.length) throw new RangeError("Index out of range");
      if (_ < 0) throw new RangeError("sourceEnd out of bounds");
      _ > this.length && (_ = this.length), H.length - K < _ - q && (_ = H.length - K + q);
      const L = _ - q;
      return this === H && typeof Uint8Array.prototype.copyWithin == "function" ? this.copyWithin(K, q, _) : Uint8Array.prototype.set.call(H, this.subarray(q, _), K), L;
    }, i.prototype.fill = function(H, K, q, _) {
      if (typeof H == "string") {
        if (typeof K == "string" ? (_ = K, K = 0, q = this.length) : typeof q == "string" && (_ = q, q = this.length), _ !== void 0 && typeof _ != "string") throw new TypeError("encoding must be a string");
        if (typeof _ == "string" && !i.isEncoding(_)) throw new TypeError("Unknown encoding: " + _);
        if (H.length === 1) {
          const et = H.charCodeAt(0);
          (_ === "utf8" && et < 128 || _ === "latin1") && (H = et);
        }
      } else typeof H == "number" ? H = H & 255 : typeof H == "boolean" && (H = Number(H));
      if (K < 0 || this.length < K || this.length < q) throw new RangeError("Out of range index");
      if (q <= K) return this;
      K = K >>> 0, q = q === void 0 ? this.length : q >>> 0, H || (H = 0);
      let L;
      if (typeof H == "number") for (L = K; L < q; ++L) this[L] = H;
      else {
        const et = i.isBuffer(H) ? H : i.from(H, _), St = et.length;
        if (St === 0) throw new TypeError('The value "' + H + '" is invalid for argument "value"');
        for (L = 0; L < q - K; ++L) this[L + K] = et[L % St];
      }
      return this;
    };
    const $ = {};
    function it(tt, H, K) {
      $[tt] = class extends K {
        constructor() {
          super(), Object.defineProperty(this, "message", { value: H.apply(this, arguments), writable: true, configurable: true }), this.name = `${this.name} [${tt}]`, this.stack, delete this.name;
        }
        get code() {
          return tt;
        }
        set code(_) {
          Object.defineProperty(this, "code", { configurable: true, enumerable: true, value: _, writable: true });
        }
        toString() {
          return `${this.name} [${tt}]: ${this.message}`;
        }
      };
    }
    it("ERR_BUFFER_OUT_OF_BOUNDS", function(tt) {
      return tt ? `${tt} is outside of buffer bounds` : "Attempt to access memory outside buffer bounds";
    }, RangeError), it("ERR_INVALID_ARG_TYPE", function(tt, H) {
      return `The "${tt}" argument must be of type number. Received type ${typeof H}`;
    }, TypeError), it("ERR_OUT_OF_RANGE", function(tt, H, K) {
      let q = `The value of "${tt}" is out of range.`, _ = K;
      return Number.isInteger(K) && Math.abs(K) > 2 ** 32 ? _ = mt(String(K)) : typeof K == "bigint" && (_ = String(K), (K > BigInt(2) ** BigInt(32) || K < -(BigInt(2) ** BigInt(32))) && (_ = mt(_)), _ += "n"), q += ` It must be ${H}. Received ${_}`, q;
    }, RangeError);
    function mt(tt) {
      let H = "", K = tt.length;
      const q = tt[0] === "-" ? 1 : 0;
      for (; K >= q + 4; K -= 3) H = `_${tt.slice(K - 3, K)}${H}`;
      return `${tt.slice(0, K)}${H}`;
    }
    function Ot(tt, H, K) {
      xt(H, "offset"), (tt[H] === void 0 || tt[H + K] === void 0) && Ct(H, tt.length - (K + 1));
    }
    function bt(tt, H, K, q, _, L) {
      if (tt > K || tt < H) {
        const et = typeof H == "bigint" ? "n" : "";
        let St;
        throw H === 0 || H === BigInt(0) ? St = `>= 0${et} and < 2${et} ** ${(L + 1) * 8}${et}` : St = `>= -(2${et} ** ${(L + 1) * 8 - 1}${et}) and < 2 ** ${(L + 1) * 8 - 1}${et}`, new $.ERR_OUT_OF_RANGE("value", St, tt);
      }
      Ot(q, _, L);
    }
    function xt(tt, H) {
      if (typeof tt != "number") throw new $.ERR_INVALID_ARG_TYPE(H, "number", tt);
    }
    function Ct(tt, H, K) {
      throw Math.floor(tt) !== tt ? (xt(tt, K), new $.ERR_OUT_OF_RANGE("offset", "an integer", tt)) : H < 0 ? new $.ERR_BUFFER_OUT_OF_BOUNDS() : new $.ERR_OUT_OF_RANGE("offset", `>= 0 and <= ${H}`, tt);
    }
    const Tt = /[^+/0-9A-Za-z-_]/g;
    function Bt(tt) {
      if (tt = tt.split("=")[0], tt = tt.trim().replace(Tt, ""), tt.length < 2) return "";
      for (; tt.length % 4 !== 0; ) tt = tt + "=";
      return tt;
    }
    function At(tt, H) {
      H = H || 1 / 0;
      let K;
      const q = tt.length;
      let _ = null;
      const L = [];
      for (let et = 0; et < q; ++et) {
        if (K = tt.charCodeAt(et), K > 55295 && K < 57344) {
          if (!_) {
            if (K > 56319) {
              (H -= 3) > -1 && L.push(239, 191, 189);
              continue;
            } else if (et + 1 === q) {
              (H -= 3) > -1 && L.push(239, 191, 189);
              continue;
            }
            _ = K;
            continue;
          }
          if (K < 56320) {
            (H -= 3) > -1 && L.push(239, 191, 189), _ = K;
            continue;
          }
          K = (_ - 55296 << 10 | K - 56320) + 65536;
        } else _ && (H -= 3) > -1 && L.push(239, 191, 189);
        if (_ = null, K < 128) {
          if ((H -= 1) < 0) break;
          L.push(K);
        } else if (K < 2048) {
          if ((H -= 2) < 0) break;
          L.push(K >> 6 | 192, K & 63 | 128);
        } else if (K < 65536) {
          if ((H -= 3) < 0) break;
          L.push(K >> 12 | 224, K >> 6 & 63 | 128, K & 63 | 128);
        } else if (K < 1114112) {
          if ((H -= 4) < 0) break;
          L.push(K >> 18 | 240, K >> 12 & 63 | 128, K >> 6 & 63 | 128, K & 63 | 128);
        } else throw new Error("Invalid code point");
      }
      return L;
    }
    function Ut(tt) {
      const H = [];
      for (let K = 0; K < tt.length; ++K) H.push(tt.charCodeAt(K) & 255);
      return H;
    }
    function Vt(tt, H) {
      let K, q, _;
      const L = [];
      for (let et = 0; et < tt.length && !((H -= 2) < 0); ++et) K = tt.charCodeAt(et), q = K >> 8, _ = K % 256, L.push(_), L.push(q);
      return L;
    }
    function oe(tt) {
      return t.toByteArray(Bt(tt));
    }
    function te(tt, H, K, q) {
      let _;
      for (_ = 0; _ < q && !(_ + K >= H.length || _ >= tt.length); ++_) H[_ + K] = tt[_];
      return _;
    }
    function yt(tt, H) {
      return tt instanceof H || tt != null && tt.constructor != null && tt.constructor.name != null && tt.constructor.name === H.name;
    }
    function Mt(tt) {
      return tt !== tt;
    }
    const O = function() {
      const tt = "0123456789abcdef", H = new Array(256);
      for (let K = 0; K < 16; ++K) {
        const q = K * 16;
        for (let _ = 0; _ < 16; ++_) H[q + _] = tt[K] + tt[_];
      }
      return H;
    }();
    function z(tt) {
      return typeof BigInt > "u" ? J : tt;
    }
    function J() {
      throw new Error("BigInt not supported");
    }
  }(sf)), sf;
}
var up = _m(), $c = { exports: {} }, ec = {}, Np;
function Bu() {
  if (Np) return ec;
  Np = 1, Object.defineProperty(ec, "__esModule", { value: true }), ec.Api = void 0;
  var E;
  return function(t) {
    var e = function(i) {
      return i.SUCCESS = "SUCCESS", i.NOT_FOUND = "NOT_FOUND", i.FAILED = "FAILED", i;
    }({});
    t.GetTransactionStatus = e;
    function o(i) {
      return "error" in i;
    }
    t.isSimulationError = o;
    function a(i) {
      return "transactionData" in i;
    }
    t.isSimulationSuccess = a;
    function l(i) {
      return a(i) && "restorePreamble" in i && !!i.restorePreamble.transactionData;
    }
    t.isSimulationRestore = l;
    function s(i) {
      return !i._parsed;
    }
    t.isSimulationRaw = s;
  }(E || (ec.Api = E = {})), ec;
}
var oa = {}, Cl = { exports: {} }, bc = { exports: {} };
/*! https://mths.be/punycode v1.4.0 by @mathias */
var Em = bc.exports, Dp;
function Am() {
  return Dp || (Dp = 1, function(E, t) {
    (function(e) {
      var o = t && !t.nodeType && t, a = E && !E.nodeType && E, l = typeof zl == "object" && zl;
      (l.global === l || l.window === l || l.self === l) && (e = l);
      var s, i = 2147483647, u = 36, d = 1, f = 26, p = 38, g = 700, b = 72, h = 128, m = "-", c = /^xn--/, w = /[^\x20-\x7E]/, T = /[\x2E\u3002\uFF0E\uFF61]/g, P = { overflow: "Overflow: input needs wider integers to process", "not-basic": "Illegal input >= 0x80 (not a basic code point)", "invalid-input": "Invalid input" }, k = u - d, R = Math.floor, F = String.fromCharCode, v;
      function U(rt) {
        throw new RangeError(P[rt]);
      }
      function M(rt, ot) {
        for (var X = rt.length, I = []; X--; ) I[X] = ot(rt[X]);
        return I;
      }
      function Z(rt, ot) {
        var X = rt.split("@"), I = "";
        X.length > 1 && (I = X[0] + "@", rt = X[1]), rt = rt.replace(T, ".");
        var nt = rt.split("."), ft = M(nt, ot).join(".");
        return I + ft;
      }
      function D(rt) {
        for (var ot = [], X = 0, I = rt.length, nt, ft; X < I; ) nt = rt.charCodeAt(X++), nt >= 55296 && nt <= 56319 && X < I ? (ft = rt.charCodeAt(X++), (ft & 64512) == 56320 ? ot.push(((nt & 1023) << 10) + (ft & 1023) + 65536) : (ot.push(nt), X--)) : ot.push(nt);
        return ot;
      }
      function V(rt) {
        return M(rt, function(ot) {
          var X = "";
          return ot > 65535 && (ot -= 65536, X += F(ot >>> 10 & 1023 | 55296), ot = 56320 | ot & 1023), X += F(ot), X;
        }).join("");
      }
      function S(rt) {
        return rt - 48 < 10 ? rt - 22 : rt - 65 < 26 ? rt - 65 : rt - 97 < 26 ? rt - 97 : u;
      }
      function x(rt, ot) {
        return rt + 22 + 75 * (rt < 26) - ((ot != 0) << 5);
      }
      function B(rt, ot, X) {
        var I = 0;
        for (rt = X ? R(rt / g) : rt >> 1, rt += R(rt / ot); rt > k * f >> 1; I += u) rt = R(rt / k);
        return R(I + (k + 1) * rt / (rt + p));
      }
      function W(rt) {
        var ot = [], X = rt.length, I, nt = 0, ft = h, dt = b, Lt, $, it, mt, Ot, bt, xt, Ct, Tt;
        for (Lt = rt.lastIndexOf(m), Lt < 0 && (Lt = 0), $ = 0; $ < Lt; ++$) rt.charCodeAt($) >= 128 && U("not-basic"), ot.push(rt.charCodeAt($));
        for (it = Lt > 0 ? Lt + 1 : 0; it < X; ) {
          for (mt = nt, Ot = 1, bt = u; it >= X && U("invalid-input"), xt = S(rt.charCodeAt(it++)), (xt >= u || xt > R((i - nt) / Ot)) && U("overflow"), nt += xt * Ot, Ct = bt <= dt ? d : bt >= dt + f ? f : bt - dt, !(xt < Ct); bt += u) Tt = u - Ct, Ot > R(i / Tt) && U("overflow"), Ot *= Tt;
          I = ot.length + 1, dt = B(nt - mt, I, mt == 0), R(nt / I) > i - ft && U("overflow"), ft += R(nt / I), nt %= I, ot.splice(nt++, 0, ft);
        }
        return V(ot);
      }
      function lt(rt) {
        var ot, X, I, nt, ft, dt, Lt, $, it, mt, Ot, bt = [], xt, Ct, Tt, Bt;
        for (rt = D(rt), xt = rt.length, ot = h, X = 0, ft = b, dt = 0; dt < xt; ++dt) Ot = rt[dt], Ot < 128 && bt.push(F(Ot));
        for (I = nt = bt.length, nt && bt.push(m); I < xt; ) {
          for (Lt = i, dt = 0; dt < xt; ++dt) Ot = rt[dt], Ot >= ot && Ot < Lt && (Lt = Ot);
          for (Ct = I + 1, Lt - ot > R((i - X) / Ct) && U("overflow"), X += (Lt - ot) * Ct, ot = Lt, dt = 0; dt < xt; ++dt) if (Ot = rt[dt], Ot < ot && ++X > i && U("overflow"), Ot == ot) {
            for ($ = X, it = u; mt = it <= ft ? d : it >= ft + f ? f : it - ft, !($ < mt); it += u) Bt = $ - mt, Tt = u - mt, bt.push(F(x(mt + Bt % Tt, 0))), $ = R(Bt / Tt);
            bt.push(F(x($, 0))), ft = B(X, Ct, I == nt), X = 0, ++I;
          }
          ++X, ++ot;
        }
        return bt.join("");
      }
      function pt(rt) {
        return Z(rt, function(ot) {
          return c.test(ot) ? W(ot.slice(4).toLowerCase()) : ot;
        });
      }
      function at(rt) {
        return Z(rt, function(ot) {
          return w.test(ot) ? "xn--" + lt(ot) : ot;
        });
      }
      if (s = { version: "1.3.2", ucs2: { decode: D, encode: V }, decode: W, encode: lt, toASCII: at, toUnicode: pt }, o && a) if (E.exports == o) a.exports = s;
      else for (v in s) s.hasOwnProperty(v) && (o[v] = s[v]);
      else e.punycode = s;
    })(Em);
  }(bc, bc.exports)), bc.exports;
}
var Rl = { exports: {} };
/*!
* URI.js - Mutating URLs
* IPv6 Support
*
* Version: 1.19.11
*
* Author: Rodney Rehm
* Web: http://medialize.github.io/URI.js/
*
* Licensed under
*   MIT License http://www.opensource.org/licenses/mit-license
*
*/
var Tm = Rl.exports, Fp;
function km() {
  return Fp || (Fp = 1, function(E) {
    (function(t, e) {
      E.exports ? E.exports = e() : t.IPv6 = e(t);
    })(Tm, function(t) {
      var e = t && t.IPv6;
      function o(l) {
        var s = l.toLowerCase(), i = s.split(":"), u = i.length, d = 8;
        i[0] === "" && i[1] === "" && i[2] === "" ? (i.shift(), i.shift()) : i[0] === "" && i[1] === "" ? i.shift() : i[u - 1] === "" && i[u - 2] === "" && i.pop(), u = i.length, i[u - 1].indexOf(".") !== -1 && (d = 7);
        var f;
        for (f = 0; f < u && i[f] !== ""; f++) ;
        if (f < d) for (i.splice(f, 1, "0000"); i.length < d; ) i.splice(f, 0, "0000");
        for (var p, g = 0; g < d; g++) {
          p = i[g].split("");
          for (var b = 0; b < 3 && (p[0] === "0" && p.length > 1); b++) p.splice(0, 1);
          i[g] = p.join("");
        }
        var h = -1, m = 0, c = 0, w = -1, T = false;
        for (g = 0; g < d; g++) T ? i[g] === "0" ? c += 1 : (T = false, c > m && (h = w, m = c)) : i[g] === "0" && (T = true, w = g, c = 1);
        c > m && (h = w, m = c), m > 1 && i.splice(h, m, ""), u = i.length;
        var P = "";
        for (i[0] === "" && (P = ":"), g = 0; g < u && (P += i[g], g !== u - 1); g++) P += ":";
        return i[u - 1] === "" && (P += ":"), P;
      }
      function a() {
        return t.IPv6 === this && (t.IPv6 = e), this;
      }
      return { best: o, noConflict: a };
    });
  }(Rl)), Rl.exports;
}
var Il = { exports: {} };
/*!
* URI.js - Mutating URLs
* Second Level Domain (SLD) Support
*
* Version: 1.19.11
*
* Author: Rodney Rehm
* Web: http://medialize.github.io/URI.js/
*
* Licensed under
*   MIT License http://www.opensource.org/licenses/mit-license
*
*/
var Om = Il.exports, Up;
function Pm() {
  return Up || (Up = 1, function(E) {
    (function(t, e) {
      E.exports ? E.exports = e() : t.SecondLevelDomains = e(t);
    })(Om, function(t) {
      var e = t && t.SecondLevelDomains, o = { list: { ac: " com gov mil net org ", ae: " ac co gov mil name net org pro sch ", af: " com edu gov net org ", al: " com edu gov mil net org ", ao: " co ed gv it og pb ", ar: " com edu gob gov int mil net org tur ", at: " ac co gv or ", au: " asn com csiro edu gov id net org ", ba: " co com edu gov mil net org rs unbi unmo unsa untz unze ", bb: " biz co com edu gov info net org store tv ", bh: " biz cc com edu gov info net org ", bn: " com edu gov net org ", bo: " com edu gob gov int mil net org tv ", br: " adm adv agr am arq art ato b bio blog bmd cim cng cnt com coop ecn edu eng esp etc eti far flog fm fnd fot fst g12 ggf gov imb ind inf jor jus lel mat med mil mus net nom not ntr odo org ppg pro psc psi qsl rec slg srv tmp trd tur tv vet vlog wiki zlg ", bs: " com edu gov net org ", bz: " du et om ov rg ", ca: " ab bc mb nb nf nl ns nt nu on pe qc sk yk ", ck: " biz co edu gen gov info net org ", cn: " ac ah bj com cq edu fj gd gov gs gx gz ha hb he hi hl hn jl js jx ln mil net nm nx org qh sc sd sh sn sx tj tw xj xz yn zj ", co: " com edu gov mil net nom org ", cr: " ac c co ed fi go or sa ", cy: " ac biz com ekloges gov ltd name net org parliament press pro tm ", do: " art com edu gob gov mil net org sld web ", dz: " art asso com edu gov net org pol ", ec: " com edu fin gov info med mil net org pro ", eg: " com edu eun gov mil name net org sci ", er: " com edu gov ind mil net org rochest w ", es: " com edu gob nom org ", et: " biz com edu gov info name net org ", fj: " ac biz com info mil name net org pro ", fk: " ac co gov net nom org ", fr: " asso com f gouv nom prd presse tm ", gg: " co net org ", gh: " com edu gov mil org ", gn: " ac com gov net org ", gr: " com edu gov mil net org ", gt: " com edu gob ind mil net org ", gu: " com edu gov net org ", hk: " com edu gov idv net org ", hu: " 2000 agrar bolt casino city co erotica erotika film forum games hotel info ingatlan jogasz konyvelo lakas media news org priv reklam sex shop sport suli szex tm tozsde utazas video ", id: " ac co go mil net or sch web ", il: " ac co gov idf k12 muni net org ", in: " ac co edu ernet firm gen gov i ind mil net nic org res ", iq: " com edu gov i mil net org ", ir: " ac co dnssec gov i id net org sch ", it: " edu gov ", je: " co net org ", jo: " com edu gov mil name net org sch ", jp: " ac ad co ed go gr lg ne or ", ke: " ac co go info me mobi ne or sc ", kh: " com edu gov mil net org per ", ki: " biz com de edu gov info mob net org tel ", km: " asso com coop edu gouv k medecin mil nom notaires pharmaciens presse tm veterinaire ", kn: " edu gov net org ", kr: " ac busan chungbuk chungnam co daegu daejeon es gangwon go gwangju gyeongbuk gyeonggi gyeongnam hs incheon jeju jeonbuk jeonnam k kg mil ms ne or pe re sc seoul ulsan ", kw: " com edu gov net org ", ky: " com edu gov net org ", kz: " com edu gov mil net org ", lb: " com edu gov net org ", lk: " assn com edu gov grp hotel int ltd net ngo org sch soc web ", lr: " com edu gov net org ", lv: " asn com conf edu gov id mil net org ", ly: " com edu gov id med net org plc sch ", ma: " ac co gov m net org press ", mc: " asso tm ", me: " ac co edu gov its net org priv ", mg: " com edu gov mil nom org prd tm ", mk: " com edu gov inf name net org pro ", ml: " com edu gov net org presse ", mn: " edu gov org ", mo: " com edu gov net org ", mt: " com edu gov net org ", mv: " aero biz com coop edu gov info int mil museum name net org pro ", mw: " ac co com coop edu gov int museum net org ", mx: " com edu gob net org ", my: " com edu gov mil name net org sch ", nf: " arts com firm info net other per rec store web ", ng: " biz com edu gov mil mobi name net org sch ", ni: " ac co com edu gob mil net nom org ", np: " com edu gov mil net org ", nr: " biz com edu gov info net org ", om: " ac biz co com edu gov med mil museum net org pro sch ", pe: " com edu gob mil net nom org sld ", ph: " com edu gov i mil net ngo org ", pk: " biz com edu fam gob gok gon gop gos gov net org web ", pl: " art bialystok biz com edu gda gdansk gorzow gov info katowice krakow lodz lublin mil net ngo olsztyn org poznan pwr radom slupsk szczecin torun warszawa waw wroc wroclaw zgora ", pr: " ac biz com edu est gov info isla name net org pro prof ", ps: " com edu gov net org plo sec ", pw: " belau co ed go ne or ", ro: " arts com firm info nom nt org rec store tm www ", rs: " ac co edu gov in org ", sb: " com edu gov net org ", sc: " com edu gov net org ", sh: " co com edu gov net nom org ", sl: " com edu gov net org ", st: " co com consulado edu embaixada gov mil net org principe saotome store ", sv: " com edu gob org red ", sz: " ac co org ", tr: " av bbs bel biz com dr edu gen gov info k12 name net org pol tel tsk tv web ", tt: " aero biz cat co com coop edu gov info int jobs mil mobi museum name net org pro tel travel ", tw: " club com ebiz edu game gov idv mil net org ", mu: " ac co com gov net or org ", mz: " ac co edu gov org ", na: " co com ", nz: " ac co cri geek gen govt health iwi maori mil net org parliament school ", pa: " abo ac com edu gob ing med net nom org sld ", pt: " com edu gov int net nome org publ ", py: " com edu gov mil net org ", qa: " com edu gov mil net org ", re: " asso com nom ", ru: " ac adygeya altai amur arkhangelsk astrakhan bashkiria belgorod bir bryansk buryatia cbg chel chelyabinsk chita chukotka chuvashia com dagestan e-burg edu gov grozny int irkutsk ivanovo izhevsk jar joshkar-ola kalmykia kaluga kamchatka karelia kazan kchr kemerovo khabarovsk khakassia khv kirov koenig komi kostroma kranoyarsk kuban kurgan kursk lipetsk magadan mari mari-el marine mil mordovia mosreg msk murmansk nalchik net nnov nov novosibirsk nsk omsk orenburg org oryol penza perm pp pskov ptz rnd ryazan sakhalin samara saratov simbirsk smolensk spb stavropol stv surgut tambov tatarstan tom tomsk tsaritsyn tsk tula tuva tver tyumen udm udmurtia ulan-ude vladikavkaz vladimir vladivostok volgograd vologda voronezh vrn vyatka yakutia yamal yekaterinburg yuzhno-sakhalinsk ", rw: " ac co com edu gouv gov int mil net ", sa: " com edu gov med net org pub sch ", sd: " com edu gov info med net org tv ", se: " a ac b bd c d e f g h i k l m n o org p parti pp press r s t tm u w x y z ", sg: " com edu gov idn net org per ", sn: " art com edu gouv org perso univ ", sy: " com edu gov mil net news org ", th: " ac co go in mi net or ", tj: " ac biz co com edu go gov info int mil name net nic org test web ", tn: " agrinet com defense edunet ens fin gov ind info intl mincom nat net org perso rnrt rns rnu tourism ", tz: " ac co go ne or ", ua: " biz cherkassy chernigov chernovtsy ck cn co com crimea cv dn dnepropetrovsk donetsk dp edu gov if in ivano-frankivsk kh kharkov kherson khmelnitskiy kiev kirovograd km kr ks kv lg lugansk lutsk lviv me mk net nikolaev od odessa org pl poltava pp rovno rv sebastopol sumy te ternopil uzhgorod vinnica vn zaporizhzhe zhitomir zp zt ", ug: " ac co go ne or org sc ", uk: " ac bl british-library co cym gov govt icnet jet lea ltd me mil mod national-library-scotland nel net nhs nic nls org orgn parliament plc police sch scot soc ", us: " dni fed isa kids nsn ", uy: " com edu gub mil net org ", ve: " co com edu gob info mil net org web ", vi: " co com k12 net org ", vn: " ac biz com edu gov health info int name net org pro ", ye: " co com gov ltd me net org plc ", yu: " ac co edu gov org ", za: " ac agric alt bourse city co cybernet db edu gov grondar iaccess imt inca landesign law mil net ngo nis nom olivetti org pix school tm web ", zm: " ac co com edu gov net org sch ", com: "ar br cn de eu gb gr hu jpn kr no qc ru sa se uk us uy za ", net: "gb jp se uk ", org: "ae", de: "com " }, has: function(a) {
        var l = a.lastIndexOf(".");
        if (l <= 0 || l >= a.length - 1) return false;
        var s = a.lastIndexOf(".", l - 1);
        if (s <= 0 || s >= l - 1) return false;
        var i = o.list[a.slice(l + 1)];
        return i ? i.indexOf(" " + a.slice(s + 1, l) + " ") >= 0 : false;
      }, is: function(a) {
        var l = a.lastIndexOf(".");
        if (l <= 0 || l >= a.length - 1) return false;
        var s = a.lastIndexOf(".", l - 1);
        if (s >= 0) return false;
        var i = o.list[a.slice(l + 1)];
        return i ? i.indexOf(" " + a.slice(0, l) + " ") >= 0 : false;
      }, get: function(a) {
        var l = a.lastIndexOf(".");
        if (l <= 0 || l >= a.length - 1) return null;
        var s = a.lastIndexOf(".", l - 1);
        if (s <= 0 || s >= l - 1) return null;
        var i = o.list[a.slice(l + 1)];
        return !i || i.indexOf(" " + a.slice(s + 1, l) + " ") < 0 ? null : a.slice(s + 1);
      }, noConflict: function() {
        return t.SecondLevelDomains === this && (t.SecondLevelDomains = e), this;
      } };
      return o;
    });
  }(Il)), Il.exports;
}
/*!
* URI.js - Mutating URLs
*
* Version: 1.19.11
*
* Author: Rodney Rehm
* Web: http://medialize.github.io/URI.js/
*
* Licensed under
*   MIT License http://www.opensource.org/licenses/mit-license
*
*/
var Cm = Cl.exports, jp;
function Rm() {
  return jp || (jp = 1, function(E) {
    (function(t, e) {
      E.exports ? E.exports = e(Am(), km(), Pm()) : t.URI = e(t.punycode, t.IPv6, t.SecondLevelDomains, t);
    })(Cm, function(t, e, o, a) {
      var l = a && a.URI;
      function s(S, x) {
        var B = arguments.length >= 1, W = arguments.length >= 2;
        if (!(this instanceof s)) return B ? W ? new s(S, x) : new s(S) : new s();
        if (S === void 0) {
          if (B) throw new TypeError("undefined is not a valid argument for URI");
          typeof location < "u" ? S = location.href + "" : S = "";
        }
        if (S === null && B) throw new TypeError("null is not a valid argument for URI");
        return this.href(S), x !== void 0 ? this.absoluteTo(x) : this;
      }
      function i(S) {
        return /^[0-9]+$/.test(S);
      }
      s.version = "1.19.11";
      var u = s.prototype, d = Object.prototype.hasOwnProperty;
      function f(S) {
        return S.replace(/([.*+?^=!:${}()|[\]\/\\])/g, "\\$1");
      }
      function p(S) {
        return S === void 0 ? "Undefined" : String(Object.prototype.toString.call(S)).slice(8, -1);
      }
      function g(S) {
        return p(S) === "Array";
      }
      function b(S, x) {
        var B = {}, W, lt;
        if (p(x) === "RegExp") B = null;
        else if (g(x)) for (W = 0, lt = x.length; W < lt; W++) B[x[W]] = true;
        else B[x] = true;
        for (W = 0, lt = S.length; W < lt; W++) {
          var pt = B && B[S[W]] !== void 0 || !B && x.test(S[W]);
          pt && (S.splice(W, 1), lt--, W--);
        }
        return S;
      }
      function h(S, x) {
        var B, W;
        if (g(x)) {
          for (B = 0, W = x.length; B < W; B++) if (!h(S, x[B])) return false;
          return true;
        }
        var lt = p(x);
        for (B = 0, W = S.length; B < W; B++) if (lt === "RegExp") {
          if (typeof S[B] == "string" && S[B].match(x)) return true;
        } else if (S[B] === x) return true;
        return false;
      }
      function m(S, x) {
        if (!g(S) || !g(x) || S.length !== x.length) return false;
        S.sort(), x.sort();
        for (var B = 0, W = S.length; B < W; B++) if (S[B] !== x[B]) return false;
        return true;
      }
      function c(S) {
        var x = /^\/+|\/+$/g;
        return S.replace(x, "");
      }
      s._parts = function() {
        return { protocol: null, username: null, password: null, hostname: null, urn: null, port: null, path: null, query: null, fragment: null, preventInvalidHostname: s.preventInvalidHostname, duplicateQueryParameters: s.duplicateQueryParameters, escapeQuerySpace: s.escapeQuerySpace };
      }, s.preventInvalidHostname = false, s.duplicateQueryParameters = false, s.escapeQuerySpace = true, s.protocol_expression = /^[a-z][a-z0-9.+-]*$/i, s.idn_expression = /[^a-z0-9\._-]/i, s.punycode_expression = /(xn--)/i, s.ip4_expression = /^\d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3}$/, s.ip6_expression = /^\s*((([0-9A-Fa-f]{1,4}:){7}([0-9A-Fa-f]{1,4}|:))|(([0-9A-Fa-f]{1,4}:){6}(:[0-9A-Fa-f]{1,4}|((25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)(\.(25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)){3})|:))|(([0-9A-Fa-f]{1,4}:){5}(((:[0-9A-Fa-f]{1,4}){1,2})|:((25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)(\.(25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)){3})|:))|(([0-9A-Fa-f]{1,4}:){4}(((:[0-9A-Fa-f]{1,4}){1,3})|((:[0-9A-Fa-f]{1,4})?:((25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)(\.(25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)){3}))|:))|(([0-9A-Fa-f]{1,4}:){3}(((:[0-9A-Fa-f]{1,4}){1,4})|((:[0-9A-Fa-f]{1,4}){0,2}:((25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)(\.(25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)){3}))|:))|(([0-9A-Fa-f]{1,4}:){2}(((:[0-9A-Fa-f]{1,4}){1,5})|((:[0-9A-Fa-f]{1,4}){0,3}:((25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)(\.(25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)){3}))|:))|(([0-9A-Fa-f]{1,4}:){1}(((:[0-9A-Fa-f]{1,4}){1,6})|((:[0-9A-Fa-f]{1,4}){0,4}:((25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)(\.(25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)){3}))|:))|(:(((:[0-9A-Fa-f]{1,4}){1,7})|((:[0-9A-Fa-f]{1,4}){0,5}:((25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)(\.(25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)){3}))|:)))(%.+)?\s*$/, s.find_uri_expression = /\b((?:[a-z][\w-]+:(?:\/{1,3}|[a-z0-9%])|www\d{0,3}[.]|[a-z0-9.\-]+[.][a-z]{2,4}\/)(?:[^\s()<>]+|\(([^\s()<>]+|(\([^\s()<>]+\)))*\))+(?:\(([^\s()<>]+|(\([^\s()<>]+\)))*\)|[^\s`!()\[\]{};:'".,<>?«»“”‘’]))/ig, s.findUri = { start: /\b(?:([a-z][a-z0-9.+-]*:\/\/)|www\.)/gi, end: /[\s\r\n]|$/, trim: /[`!()\[\]{};:'".,<>?«»“”„‘’]+$/, parens: /(\([^\)]*\)|\[[^\]]*\]|\{[^}]*\}|<[^>]*>)/g }, s.leading_whitespace_expression = /^[\x00-\x20\u00a0\u1680\u2000-\u200a\u2028\u2029\u202f\u205f\u3000\ufeff]+/, s.ascii_tab_whitespace = /[\u0009\u000A\u000D]+/g, s.defaultPorts = { http: "80", https: "443", ftp: "21", gopher: "70", ws: "80", wss: "443" }, s.hostProtocols = ["http", "https"], s.invalid_hostname_characters = /[^a-zA-Z0-9\.\-:_]/, s.domAttributes = { a: "href", blockquote: "cite", link: "href", base: "href", script: "src", form: "action", img: "src", area: "href", iframe: "src", embed: "src", source: "src", track: "src", input: "src", audio: "src", video: "src" }, s.getDomAttribute = function(S) {
        if (!(!S || !S.nodeName)) {
          var x = S.nodeName.toLowerCase();
          if (!(x === "input" && S.type !== "image")) return s.domAttributes[x];
        }
      };
      function w(S) {
        return escape(S);
      }
      function T(S) {
        return encodeURIComponent(S).replace(/[!'()*]/g, w).replace(/\*/g, "%2A");
      }
      s.encode = T, s.decode = decodeURIComponent, s.iso8859 = function() {
        s.encode = escape, s.decode = unescape;
      }, s.unicode = function() {
        s.encode = T, s.decode = decodeURIComponent;
      }, s.characters = { pathname: { encode: { expression: /%(24|26|2B|2C|3B|3D|3A|40)/ig, map: { "%24": "$", "%26": "&", "%2B": "+", "%2C": ",", "%3B": ";", "%3D": "=", "%3A": ":", "%40": "@" } }, decode: { expression: /[\/\?#]/g, map: { "/": "%2F", "?": "%3F", "#": "%23" } } }, reserved: { encode: { expression: /%(21|23|24|26|27|28|29|2A|2B|2C|2F|3A|3B|3D|3F|40|5B|5D)/ig, map: { "%3A": ":", "%2F": "/", "%3F": "?", "%23": "#", "%5B": "[", "%5D": "]", "%40": "@", "%21": "!", "%24": "$", "%26": "&", "%27": "'", "%28": "(", "%29": ")", "%2A": "*", "%2B": "+", "%2C": ",", "%3B": ";", "%3D": "=" } } }, urnpath: { encode: { expression: /%(21|24|27|28|29|2A|2B|2C|3B|3D|40)/ig, map: { "%21": "!", "%24": "$", "%27": "'", "%28": "(", "%29": ")", "%2A": "*", "%2B": "+", "%2C": ",", "%3B": ";", "%3D": "=", "%40": "@" } }, decode: { expression: /[\/\?#:]/g, map: { "/": "%2F", "?": "%3F", "#": "%23", ":": "%3A" } } } }, s.encodeQuery = function(S, x) {
        var B = s.encode(S + "");
        return x === void 0 && (x = s.escapeQuerySpace), x ? B.replace(/%20/g, "+") : B;
      }, s.decodeQuery = function(S, x) {
        S += "", x === void 0 && (x = s.escapeQuerySpace);
        try {
          return s.decode(x ? S.replace(/\+/g, "%20") : S);
        } catch {
          return S;
        }
      };
      var P = { encode: "encode", decode: "decode" }, k, R = function(S, x) {
        return function(B) {
          try {
            return s[x](B + "").replace(s.characters[S][x].expression, function(W) {
              return s.characters[S][x].map[W];
            });
          } catch {
            return B;
          }
        };
      };
      for (k in P) s[k + "PathSegment"] = R("pathname", P[k]), s[k + "UrnPathSegment"] = R("urnpath", P[k]);
      var F = function(S, x, B) {
        return function(W) {
          var lt;
          B ? lt = function(ot) {
            return s[x](s[B](ot));
          } : lt = s[x];
          for (var pt = (W + "").split(S), at = 0, rt = pt.length; at < rt; at++) pt[at] = lt(pt[at]);
          return pt.join(S);
        };
      };
      s.decodePath = F("/", "decodePathSegment"), s.decodeUrnPath = F(":", "decodeUrnPathSegment"), s.recodePath = F("/", "encodePathSegment", "decode"), s.recodeUrnPath = F(":", "encodeUrnPathSegment", "decode"), s.encodeReserved = R("reserved", "encode"), s.parse = function(S, x) {
        var B;
        return x || (x = { preventInvalidHostname: s.preventInvalidHostname }), S = S.replace(s.leading_whitespace_expression, ""), S = S.replace(s.ascii_tab_whitespace, ""), B = S.indexOf("#"), B > -1 && (x.fragment = S.substring(B + 1) || null, S = S.substring(0, B)), B = S.indexOf("?"), B > -1 && (x.query = S.substring(B + 1) || null, S = S.substring(0, B)), S = S.replace(/^(https?|ftp|wss?)?:+[/\\]*/i, "$1://"), S = S.replace(/^[/\\]{2,}/i, "//"), S.substring(0, 2) === "//" ? (x.protocol = null, S = S.substring(2), S = s.parseAuthority(S, x)) : (B = S.indexOf(":"), B > -1 && (x.protocol = S.substring(0, B) || null, x.protocol && !x.protocol.match(s.protocol_expression) ? x.protocol = void 0 : S.substring(B + 1, B + 3).replace(/\\/g, "/") === "//" ? (S = S.substring(B + 3), S = s.parseAuthority(S, x)) : (S = S.substring(B + 1), x.urn = true))), x.path = S, x;
      }, s.parseHost = function(S, x) {
        S || (S = ""), S = S.replace(/\\/g, "/");
        var B = S.indexOf("/"), W, lt;
        if (B === -1 && (B = S.length), S.charAt(0) === "[") W = S.indexOf("]"), x.hostname = S.substring(1, W) || null, x.port = S.substring(W + 2, B) || null, x.port === "/" && (x.port = null);
        else {
          var pt = S.indexOf(":"), at = S.indexOf("/"), rt = S.indexOf(":", pt + 1);
          rt !== -1 && (at === -1 || rt < at) ? (x.hostname = S.substring(0, B) || null, x.port = null) : (lt = S.substring(0, B).split(":"), x.hostname = lt[0] || null, x.port = lt[1] || null);
        }
        return x.hostname && S.substring(B).charAt(0) !== "/" && (B++, S = "/" + S), x.preventInvalidHostname && s.ensureValidHostname(x.hostname, x.protocol), x.port && s.ensureValidPort(x.port), S.substring(B) || "/";
      }, s.parseAuthority = function(S, x) {
        return S = s.parseUserinfo(S, x), s.parseHost(S, x);
      }, s.parseUserinfo = function(S, x) {
        var B = S, W = S.indexOf("\\");
        W !== -1 && (S = S.replace(/\\/g, "/"));
        var lt = S.indexOf("/"), pt = S.lastIndexOf("@", lt > -1 ? lt : S.length - 1), at;
        return pt > -1 && (lt === -1 || pt < lt) ? (at = S.substring(0, pt).split(":"), x.username = at[0] ? s.decode(at[0]) : null, at.shift(), x.password = at[0] ? s.decode(at.join(":")) : null, S = B.substring(pt + 1)) : (x.username = null, x.password = null), S;
      }, s.parseQuery = function(S, x) {
        if (!S) return {};
        if (S = S.replace(/&+/g, "&").replace(/^\?*&*|&+$/g, ""), !S) return {};
        for (var B = {}, W = S.split("&"), lt = W.length, pt, at, rt, ot = 0; ot < lt; ot++) pt = W[ot].split("="), at = s.decodeQuery(pt.shift(), x), rt = pt.length ? s.decodeQuery(pt.join("="), x) : null, at !== "__proto__" && (d.call(B, at) ? ((typeof B[at] == "string" || B[at] === null) && (B[at] = [B[at]]), B[at].push(rt)) : B[at] = rt);
        return B;
      }, s.build = function(S) {
        var x = "", B = false;
        return S.protocol && (x += S.protocol + ":"), !S.urn && (x || S.hostname) && (x += "//", B = true), x += s.buildAuthority(S) || "", typeof S.path == "string" && (S.path.charAt(0) !== "/" && B && (x += "/"), x += S.path), typeof S.query == "string" && S.query && (x += "?" + S.query), typeof S.fragment == "string" && S.fragment && (x += "#" + S.fragment), x;
      }, s.buildHost = function(S) {
        var x = "";
        if (S.hostname) s.ip6_expression.test(S.hostname) ? x += "[" + S.hostname + "]" : x += S.hostname;
        else return "";
        return S.port && (x += ":" + S.port), x;
      }, s.buildAuthority = function(S) {
        return s.buildUserinfo(S) + s.buildHost(S);
      }, s.buildUserinfo = function(S) {
        var x = "";
        return S.username && (x += s.encode(S.username)), S.password && (x += ":" + s.encode(S.password)), x && (x += "@"), x;
      }, s.buildQuery = function(S, x, B) {
        var W = "", lt, pt, at, rt;
        for (pt in S) if (pt !== "__proto__" && d.call(S, pt)) if (g(S[pt])) for (lt = {}, at = 0, rt = S[pt].length; at < rt; at++) S[pt][at] !== void 0 && lt[S[pt][at] + ""] === void 0 && (W += "&" + s.buildQueryParameter(pt, S[pt][at], B), x !== true && (lt[S[pt][at] + ""] = true));
        else S[pt] !== void 0 && (W += "&" + s.buildQueryParameter(pt, S[pt], B));
        return W.substring(1);
      }, s.buildQueryParameter = function(S, x, B) {
        return s.encodeQuery(S, B) + (x !== null ? "=" + s.encodeQuery(x, B) : "");
      }, s.addQuery = function(S, x, B) {
        if (typeof x == "object") for (var W in x) d.call(x, W) && s.addQuery(S, W, x[W]);
        else if (typeof x == "string") {
          if (S[x] === void 0) {
            S[x] = B;
            return;
          } else typeof S[x] == "string" && (S[x] = [S[x]]);
          g(B) || (B = [B]), S[x] = (S[x] || []).concat(B);
        } else throw new TypeError("URI.addQuery() accepts an object, string as the name parameter");
      }, s.setQuery = function(S, x, B) {
        if (typeof x == "object") for (var W in x) d.call(x, W) && s.setQuery(S, W, x[W]);
        else if (typeof x == "string") S[x] = B === void 0 ? null : B;
        else throw new TypeError("URI.setQuery() accepts an object, string as the name parameter");
      }, s.removeQuery = function(S, x, B) {
        var W, lt, pt;
        if (g(x)) for (W = 0, lt = x.length; W < lt; W++) S[x[W]] = void 0;
        else if (p(x) === "RegExp") for (pt in S) x.test(pt) && (S[pt] = void 0);
        else if (typeof x == "object") for (pt in x) d.call(x, pt) && s.removeQuery(S, pt, x[pt]);
        else if (typeof x == "string") B !== void 0 ? p(B) === "RegExp" ? !g(S[x]) && B.test(S[x]) ? S[x] = void 0 : S[x] = b(S[x], B) : S[x] === String(B) && (!g(B) || B.length === 1) ? S[x] = void 0 : g(S[x]) && (S[x] = b(S[x], B)) : S[x] = void 0;
        else throw new TypeError("URI.removeQuery() accepts an object, string, RegExp as the first parameter");
      }, s.hasQuery = function(S, x, B, W) {
        switch (p(x)) {
          case "String":
            break;
          case "RegExp":
            for (var lt in S) if (d.call(S, lt) && x.test(lt) && (B === void 0 || s.hasQuery(S, lt, B))) return true;
            return false;
          case "Object":
            for (var pt in x) if (d.call(x, pt) && !s.hasQuery(S, pt, x[pt])) return false;
            return true;
          default:
            throw new TypeError("URI.hasQuery() accepts a string, regular expression or object as the name parameter");
        }
        switch (p(B)) {
          case "Undefined":
            return x in S;
          case "Boolean":
            var at = !!(g(S[x]) ? S[x].length : S[x]);
            return B === at;
          case "Function":
            return !!B(S[x], x, S);
          case "Array":
            if (!g(S[x])) return false;
            var rt = W ? h : m;
            return rt(S[x], B);
          case "RegExp":
            return g(S[x]) ? W ? h(S[x], B) : false : !!(S[x] && S[x].match(B));
          case "Number":
            B = String(B);
          case "String":
            return g(S[x]) ? W ? h(S[x], B) : false : S[x] === B;
          default:
            throw new TypeError("URI.hasQuery() accepts undefined, boolean, string, number, RegExp, Function as the value parameter");
        }
      }, s.joinPaths = function() {
        for (var S = [], x = [], B = 0, W = 0; W < arguments.length; W++) {
          var lt = new s(arguments[W]);
          S.push(lt);
          for (var pt = lt.segment(), at = 0; at < pt.length; at++) typeof pt[at] == "string" && x.push(pt[at]), pt[at] && B++;
        }
        if (!x.length || !B) return new s("");
        var rt = new s("").segment(x);
        return (S[0].path() === "" || S[0].path().slice(0, 1) === "/") && rt.path("/" + rt.path()), rt.normalize();
      }, s.commonPath = function(S, x) {
        var B = Math.min(S.length, x.length), W;
        for (W = 0; W < B; W++) if (S.charAt(W) !== x.charAt(W)) {
          W--;
          break;
        }
        return W < 1 ? S.charAt(0) === x.charAt(0) && S.charAt(0) === "/" ? "/" : "" : ((S.charAt(W) !== "/" || x.charAt(W) !== "/") && (W = S.substring(0, W).lastIndexOf("/")), S.substring(0, W + 1));
      }, s.withinString = function(S, x, B) {
        B || (B = {});
        var W = B.start || s.findUri.start, lt = B.end || s.findUri.end, pt = B.trim || s.findUri.trim, at = B.parens || s.findUri.parens, rt = /[a-z0-9-]=["']?$/i;
        for (W.lastIndex = 0; ; ) {
          var ot = W.exec(S);
          if (!ot) break;
          var X = ot.index;
          if (B.ignoreHtml) {
            var I = S.slice(Math.max(X - 3, 0), X);
            if (I && rt.test(I)) continue;
          }
          for (var nt = X + S.slice(X).search(lt), ft = S.slice(X, nt), dt = -1; ; ) {
            var Lt = at.exec(ft);
            if (!Lt) break;
            var $ = Lt.index + Lt[0].length;
            dt = Math.max(dt, $);
          }
          if (dt > -1 ? ft = ft.slice(0, dt) + ft.slice(dt).replace(pt, "") : ft = ft.replace(pt, ""), !(ft.length <= ot[0].length) && !(B.ignore && B.ignore.test(ft))) {
            nt = X + ft.length;
            var it = x(ft, X, nt, S);
            if (it === void 0) {
              W.lastIndex = nt;
              continue;
            }
            it = String(it), S = S.slice(0, X) + it + S.slice(nt), W.lastIndex = X + it.length;
          }
        }
        return W.lastIndex = 0, S;
      }, s.ensureValidHostname = function(S, x) {
        var B = !!S, W = !!x, lt = false;
        if (W && (lt = h(s.hostProtocols, x)), lt && !B) throw new TypeError("Hostname cannot be empty, if protocol is " + x);
        if (S && S.match(s.invalid_hostname_characters)) {
          if (!t) throw new TypeError('Hostname "' + S + '" contains characters other than [A-Z0-9.-:_] and Punycode.js is not available');
          if (t.toASCII(S).match(s.invalid_hostname_characters)) throw new TypeError('Hostname "' + S + '" contains characters other than [A-Z0-9.-:_]');
        }
      }, s.ensureValidPort = function(S) {
        if (S) {
          var x = Number(S);
          if (!(i(x) && x > 0 && x < 65536)) throw new TypeError('Port "' + S + '" is not a valid port');
        }
      }, s.noConflict = function(S) {
        if (S) {
          var x = { URI: this.noConflict() };
          return a.URITemplate && typeof a.URITemplate.noConflict == "function" && (x.URITemplate = a.URITemplate.noConflict()), a.IPv6 && typeof a.IPv6.noConflict == "function" && (x.IPv6 = a.IPv6.noConflict()), a.SecondLevelDomains && typeof a.SecondLevelDomains.noConflict == "function" && (x.SecondLevelDomains = a.SecondLevelDomains.noConflict()), x;
        } else a.URI === this && (a.URI = l);
        return this;
      }, u.build = function(S) {
        return S === true ? this._deferred_build = true : (S === void 0 || this._deferred_build) && (this._string = s.build(this._parts), this._deferred_build = false), this;
      }, u.clone = function() {
        return new s(this);
      }, u.valueOf = u.toString = function() {
        return this.build(false)._string;
      };
      function v(S) {
        return function(x, B) {
          return x === void 0 ? this._parts[S] || "" : (this._parts[S] = x || null, this.build(!B), this);
        };
      }
      function U(S, x) {
        return function(B, W) {
          return B === void 0 ? this._parts[S] || "" : (B !== null && (B = B + "", B.charAt(0) === x && (B = B.substring(1))), this._parts[S] = B, this.build(!W), this);
        };
      }
      u.protocol = v("protocol"), u.username = v("username"), u.password = v("password"), u.hostname = v("hostname"), u.port = v("port"), u.query = U("query", "?"), u.fragment = U("fragment", "#"), u.search = function(S, x) {
        var B = this.query(S, x);
        return typeof B == "string" && B.length ? "?" + B : B;
      }, u.hash = function(S, x) {
        var B = this.fragment(S, x);
        return typeof B == "string" && B.length ? "#" + B : B;
      }, u.pathname = function(S, x) {
        if (S === void 0 || S === true) {
          var B = this._parts.path || (this._parts.hostname ? "/" : "");
          return S ? (this._parts.urn ? s.decodeUrnPath : s.decodePath)(B) : B;
        } else return this._parts.urn ? this._parts.path = S ? s.recodeUrnPath(S) : "" : this._parts.path = S ? s.recodePath(S) : "/", this.build(!x), this;
      }, u.path = u.pathname, u.href = function(S, x) {
        var B;
        if (S === void 0) return this.toString();
        this._string = "", this._parts = s._parts();
        var W = S instanceof s, lt = typeof S == "object" && (S.hostname || S.path || S.pathname);
        if (S.nodeName) {
          var pt = s.getDomAttribute(S);
          S = S[pt] || "", lt = false;
        }
        if (!W && lt && S.pathname !== void 0 && (S = S.toString()), typeof S == "string" || S instanceof String) this._parts = s.parse(String(S), this._parts);
        else if (W || lt) {
          var at = W ? S._parts : S;
          for (B in at) B !== "query" && d.call(this._parts, B) && (this._parts[B] = at[B]);
          at.query && this.query(at.query, false);
        } else throw new TypeError("invalid input");
        return this.build(!x), this;
      }, u.is = function(S) {
        var x = false, B = false, W = false, lt = false, pt = false, at = false, rt = false, ot = !this._parts.urn;
        switch (this._parts.hostname && (ot = false, B = s.ip4_expression.test(this._parts.hostname), W = s.ip6_expression.test(this._parts.hostname), x = B || W, lt = !x, pt = lt && o && o.has(this._parts.hostname), at = lt && s.idn_expression.test(this._parts.hostname), rt = lt && s.punycode_expression.test(this._parts.hostname)), S.toLowerCase()) {
          case "relative":
            return ot;
          case "absolute":
            return !ot;
          case "domain":
          case "name":
            return lt;
          case "sld":
            return pt;
          case "ip":
            return x;
          case "ip4":
          case "ipv4":
          case "inet4":
            return B;
          case "ip6":
          case "ipv6":
          case "inet6":
            return W;
          case "idn":
            return at;
          case "url":
            return !this._parts.urn;
          case "urn":
            return !!this._parts.urn;
          case "punycode":
            return rt;
        }
        return null;
      };
      var M = u.protocol, Z = u.port, D = u.hostname;
      u.protocol = function(S, x) {
        if (S && (S = S.replace(/:(\/\/)?$/, ""), !S.match(s.protocol_expression))) throw new TypeError('Protocol "' + S + `" contains characters other than [A-Z0-9.+-] or doesn't start with [A-Z]`);
        return M.call(this, S, x);
      }, u.scheme = u.protocol, u.port = function(S, x) {
        return this._parts.urn ? S === void 0 ? "" : this : (S !== void 0 && (S === 0 && (S = null), S && (S += "", S.charAt(0) === ":" && (S = S.substring(1)), s.ensureValidPort(S))), Z.call(this, S, x));
      }, u.hostname = function(S, x) {
        if (this._parts.urn) return S === void 0 ? "" : this;
        if (S !== void 0) {
          var B = { preventInvalidHostname: this._parts.preventInvalidHostname }, W = s.parseHost(S, B);
          if (W !== "/") throw new TypeError('Hostname "' + S + '" contains characters other than [A-Z0-9.-]');
          S = B.hostname, this._parts.preventInvalidHostname && s.ensureValidHostname(S, this._parts.protocol);
        }
        return D.call(this, S, x);
      }, u.origin = function(S, x) {
        if (this._parts.urn) return S === void 0 ? "" : this;
        if (S === void 0) {
          var B = this.protocol(), W = this.authority();
          return W ? (B ? B + "://" : "") + this.authority() : "";
        } else {
          var lt = s(S);
          return this.protocol(lt.protocol()).authority(lt.authority()).build(!x), this;
        }
      }, u.host = function(S, x) {
        if (this._parts.urn) return S === void 0 ? "" : this;
        if (S === void 0) return this._parts.hostname ? s.buildHost(this._parts) : "";
        var B = s.parseHost(S, this._parts);
        if (B !== "/") throw new TypeError('Hostname "' + S + '" contains characters other than [A-Z0-9.-]');
        return this.build(!x), this;
      }, u.authority = function(S, x) {
        if (this._parts.urn) return S === void 0 ? "" : this;
        if (S === void 0) return this._parts.hostname ? s.buildAuthority(this._parts) : "";
        var B = s.parseAuthority(S, this._parts);
        if (B !== "/") throw new TypeError('Hostname "' + S + '" contains characters other than [A-Z0-9.-]');
        return this.build(!x), this;
      }, u.userinfo = function(S, x) {
        if (this._parts.urn) return S === void 0 ? "" : this;
        if (S === void 0) {
          var B = s.buildUserinfo(this._parts);
          return B && B.substring(0, B.length - 1);
        } else return S[S.length - 1] !== "@" && (S += "@"), s.parseUserinfo(S, this._parts), this.build(!x), this;
      }, u.resource = function(S, x) {
        var B;
        return S === void 0 ? this.path() + this.search() + this.hash() : (B = s.parse(S), this._parts.path = B.path, this._parts.query = B.query, this._parts.fragment = B.fragment, this.build(!x), this);
      }, u.subdomain = function(S, x) {
        if (this._parts.urn) return S === void 0 ? "" : this;
        if (S === void 0) {
          if (!this._parts.hostname || this.is("IP")) return "";
          var B = this._parts.hostname.length - this.domain().length - 1;
          return this._parts.hostname.substring(0, B) || "";
        } else {
          var W = this._parts.hostname.length - this.domain().length, lt = this._parts.hostname.substring(0, W), pt = new RegExp("^" + f(lt));
          if (S && S.charAt(S.length - 1) !== "." && (S += "."), S.indexOf(":") !== -1) throw new TypeError("Domains cannot contain colons");
          return S && s.ensureValidHostname(S, this._parts.protocol), this._parts.hostname = this._parts.hostname.replace(pt, S), this.build(!x), this;
        }
      }, u.domain = function(S, x) {
        if (this._parts.urn) return S === void 0 ? "" : this;
        if (typeof S == "boolean" && (x = S, S = void 0), S === void 0) {
          if (!this._parts.hostname || this.is("IP")) return "";
          var B = this._parts.hostname.match(/\./g);
          if (B && B.length < 2) return this._parts.hostname;
          var W = this._parts.hostname.length - this.tld(x).length - 1;
          return W = this._parts.hostname.lastIndexOf(".", W - 1) + 1, this._parts.hostname.substring(W) || "";
        } else {
          if (!S) throw new TypeError("cannot set domain empty");
          if (S.indexOf(":") !== -1) throw new TypeError("Domains cannot contain colons");
          if (s.ensureValidHostname(S, this._parts.protocol), !this._parts.hostname || this.is("IP")) this._parts.hostname = S;
          else {
            var lt = new RegExp(f(this.domain()) + "$");
            this._parts.hostname = this._parts.hostname.replace(lt, S);
          }
          return this.build(!x), this;
        }
      }, u.tld = function(S, x) {
        if (this._parts.urn) return S === void 0 ? "" : this;
        if (typeof S == "boolean" && (x = S, S = void 0), S === void 0) {
          if (!this._parts.hostname || this.is("IP")) return "";
          var B = this._parts.hostname.lastIndexOf("."), W = this._parts.hostname.substring(B + 1);
          return x !== true && o && o.list[W.toLowerCase()] && o.get(this._parts.hostname) || W;
        } else {
          var lt;
          if (S) if (S.match(/[^a-zA-Z0-9-]/)) if (o && o.is(S)) lt = new RegExp(f(this.tld()) + "$"), this._parts.hostname = this._parts.hostname.replace(lt, S);
          else throw new TypeError('TLD "' + S + '" contains characters other than [A-Z0-9]');
          else {
            if (!this._parts.hostname || this.is("IP")) throw new ReferenceError("cannot set TLD on non-domain host");
            lt = new RegExp(f(this.tld()) + "$"), this._parts.hostname = this._parts.hostname.replace(lt, S);
          }
          else throw new TypeError("cannot set TLD empty");
          return this.build(!x), this;
        }
      }, u.directory = function(S, x) {
        if (this._parts.urn) return S === void 0 ? "" : this;
        if (S === void 0 || S === true) {
          if (!this._parts.path && !this._parts.hostname) return "";
          if (this._parts.path === "/") return "/";
          var B = this._parts.path.length - this.filename().length - 1, W = this._parts.path.substring(0, B) || (this._parts.hostname ? "/" : "");
          return S ? s.decodePath(W) : W;
        } else {
          var lt = this._parts.path.length - this.filename().length, pt = this._parts.path.substring(0, lt), at = new RegExp("^" + f(pt));
          return this.is("relative") || (S || (S = "/"), S.charAt(0) !== "/" && (S = "/" + S)), S && S.charAt(S.length - 1) !== "/" && (S += "/"), S = s.recodePath(S), this._parts.path = this._parts.path.replace(at, S), this.build(!x), this;
        }
      }, u.filename = function(S, x) {
        if (this._parts.urn) return S === void 0 ? "" : this;
        if (typeof S != "string") {
          if (!this._parts.path || this._parts.path === "/") return "";
          var B = this._parts.path.lastIndexOf("/"), W = this._parts.path.substring(B + 1);
          return S ? s.decodePathSegment(W) : W;
        } else {
          var lt = false;
          S.charAt(0) === "/" && (S = S.substring(1)), S.match(/\.?\//) && (lt = true);
          var pt = new RegExp(f(this.filename()) + "$");
          return S = s.recodePath(S), this._parts.path = this._parts.path.replace(pt, S), lt ? this.normalizePath(x) : this.build(!x), this;
        }
      }, u.suffix = function(S, x) {
        if (this._parts.urn) return S === void 0 ? "" : this;
        if (S === void 0 || S === true) {
          if (!this._parts.path || this._parts.path === "/") return "";
          var B = this.filename(), W = B.lastIndexOf("."), lt, pt;
          return W === -1 ? "" : (lt = B.substring(W + 1), pt = /^[a-z0-9%]+$/i.test(lt) ? lt : "", S ? s.decodePathSegment(pt) : pt);
        } else {
          S.charAt(0) === "." && (S = S.substring(1));
          var at = this.suffix(), rt;
          if (at) S ? rt = new RegExp(f(at) + "$") : rt = new RegExp(f("." + at) + "$");
          else {
            if (!S) return this;
            this._parts.path += "." + s.recodePath(S);
          }
          return rt && (S = s.recodePath(S), this._parts.path = this._parts.path.replace(rt, S)), this.build(!x), this;
        }
      }, u.segment = function(S, x, B) {
        var W = this._parts.urn ? ":" : "/", lt = this.path(), pt = lt.substring(0, 1) === "/", at = lt.split(W);
        if (S !== void 0 && typeof S != "number" && (B = x, x = S, S = void 0), S !== void 0 && typeof S != "number") throw new Error('Bad segment "' + S + '", must be 0-based integer');
        if (pt && at.shift(), S < 0 && (S = Math.max(at.length + S, 0)), x === void 0) return S === void 0 ? at : at[S];
        if (S === null || at[S] === void 0) if (g(x)) {
          at = [];
          for (var rt = 0, ot = x.length; rt < ot; rt++) !x[rt].length && (!at.length || !at[at.length - 1].length) || (at.length && !at[at.length - 1].length && at.pop(), at.push(c(x[rt])));
        } else (x || typeof x == "string") && (x = c(x), at[at.length - 1] === "" ? at[at.length - 1] = x : at.push(x));
        else x ? at[S] = c(x) : at.splice(S, 1);
        return pt && at.unshift(""), this.path(at.join(W), B);
      }, u.segmentCoded = function(S, x, B) {
        var W, lt, pt;
        if (typeof S != "number" && (B = x, x = S, S = void 0), x === void 0) {
          if (W = this.segment(S, x, B), !g(W)) W = W !== void 0 ? s.decode(W) : void 0;
          else for (lt = 0, pt = W.length; lt < pt; lt++) W[lt] = s.decode(W[lt]);
          return W;
        }
        if (!g(x)) x = typeof x == "string" || x instanceof String ? s.encode(x) : x;
        else for (lt = 0, pt = x.length; lt < pt; lt++) x[lt] = s.encode(x[lt]);
        return this.segment(S, x, B);
      };
      var V = u.query;
      return u.query = function(S, x) {
        if (S === true) return s.parseQuery(this._parts.query, this._parts.escapeQuerySpace);
        if (typeof S == "function") {
          var B = s.parseQuery(this._parts.query, this._parts.escapeQuerySpace), W = S.call(this, B);
          return this._parts.query = s.buildQuery(W || B, this._parts.duplicateQueryParameters, this._parts.escapeQuerySpace), this.build(!x), this;
        } else return S !== void 0 && typeof S != "string" ? (this._parts.query = s.buildQuery(S, this._parts.duplicateQueryParameters, this._parts.escapeQuerySpace), this.build(!x), this) : V.call(this, S, x);
      }, u.setQuery = function(S, x, B) {
        var W = s.parseQuery(this._parts.query, this._parts.escapeQuerySpace);
        if (typeof S == "string" || S instanceof String) W[S] = x !== void 0 ? x : null;
        else if (typeof S == "object") for (var lt in S) d.call(S, lt) && (W[lt] = S[lt]);
        else throw new TypeError("URI.addQuery() accepts an object, string as the name parameter");
        return this._parts.query = s.buildQuery(W, this._parts.duplicateQueryParameters, this._parts.escapeQuerySpace), typeof S != "string" && (B = x), this.build(!B), this;
      }, u.addQuery = function(S, x, B) {
        var W = s.parseQuery(this._parts.query, this._parts.escapeQuerySpace);
        return s.addQuery(W, S, x === void 0 ? null : x), this._parts.query = s.buildQuery(W, this._parts.duplicateQueryParameters, this._parts.escapeQuerySpace), typeof S != "string" && (B = x), this.build(!B), this;
      }, u.removeQuery = function(S, x, B) {
        var W = s.parseQuery(this._parts.query, this._parts.escapeQuerySpace);
        return s.removeQuery(W, S, x), this._parts.query = s.buildQuery(W, this._parts.duplicateQueryParameters, this._parts.escapeQuerySpace), typeof S != "string" && (B = x), this.build(!B), this;
      }, u.hasQuery = function(S, x, B) {
        var W = s.parseQuery(this._parts.query, this._parts.escapeQuerySpace);
        return s.hasQuery(W, S, x, B);
      }, u.setSearch = u.setQuery, u.addSearch = u.addQuery, u.removeSearch = u.removeQuery, u.hasSearch = u.hasQuery, u.normalize = function() {
        return this._parts.urn ? this.normalizeProtocol(false).normalizePath(false).normalizeQuery(false).normalizeFragment(false).build() : this.normalizeProtocol(false).normalizeHostname(false).normalizePort(false).normalizePath(false).normalizeQuery(false).normalizeFragment(false).build();
      }, u.normalizeProtocol = function(S) {
        return typeof this._parts.protocol == "string" && (this._parts.protocol = this._parts.protocol.toLowerCase(), this.build(!S)), this;
      }, u.normalizeHostname = function(S) {
        return this._parts.hostname && (this.is("IDN") && t ? this._parts.hostname = t.toASCII(this._parts.hostname) : this.is("IPv6") && e && (this._parts.hostname = e.best(this._parts.hostname)), this._parts.hostname = this._parts.hostname.toLowerCase(), this.build(!S)), this;
      }, u.normalizePort = function(S) {
        return typeof this._parts.protocol == "string" && this._parts.port === s.defaultPorts[this._parts.protocol] && (this._parts.port = null, this.build(!S)), this;
      }, u.normalizePath = function(S) {
        var x = this._parts.path;
        if (!x) return this;
        if (this._parts.urn) return this._parts.path = s.recodeUrnPath(this._parts.path), this.build(!S), this;
        if (this._parts.path === "/") return this;
        x = s.recodePath(x);
        var B, W = "", lt, pt;
        for (x.charAt(0) !== "/" && (B = true, x = "/" + x), (x.slice(-3) === "/.." || x.slice(-2) === "/.") && (x += "/"), x = x.replace(/(\/(\.\/)+)|(\/\.$)/g, "/").replace(/\/{2,}/g, "/"), B && (W = x.substring(1).match(/^(\.\.\/)+/) || "", W && (W = W[0])); lt = x.search(/\/\.\.(\/|$)/), lt !== -1; ) {
          if (lt === 0) {
            x = x.substring(3);
            continue;
          }
          pt = x.substring(0, lt).lastIndexOf("/"), pt === -1 && (pt = lt), x = x.substring(0, pt) + x.substring(lt + 3);
        }
        return B && this.is("relative") && (x = W + x.substring(1)), this._parts.path = x, this.build(!S), this;
      }, u.normalizePathname = u.normalizePath, u.normalizeQuery = function(S) {
        return typeof this._parts.query == "string" && (this._parts.query.length ? this.query(s.parseQuery(this._parts.query, this._parts.escapeQuerySpace)) : this._parts.query = null, this.build(!S)), this;
      }, u.normalizeFragment = function(S) {
        return this._parts.fragment || (this._parts.fragment = null, this.build(!S)), this;
      }, u.normalizeSearch = u.normalizeQuery, u.normalizeHash = u.normalizeFragment, u.iso8859 = function() {
        var S = s.encode, x = s.decode;
        s.encode = escape, s.decode = decodeURIComponent;
        try {
          this.normalize();
        } finally {
          s.encode = S, s.decode = x;
        }
        return this;
      }, u.unicode = function() {
        var S = s.encode, x = s.decode;
        s.encode = T, s.decode = unescape;
        try {
          this.normalize();
        } finally {
          s.encode = S, s.decode = x;
        }
        return this;
      }, u.readable = function() {
        var S = this.clone();
        S.username("").password("").normalize();
        var x = "";
        if (S._parts.protocol && (x += S._parts.protocol + "://"), S._parts.hostname && (S.is("punycode") && t ? (x += t.toUnicode(S._parts.hostname), S._parts.port && (x += ":" + S._parts.port)) : x += S.host()), S._parts.hostname && S._parts.path && S._parts.path.charAt(0) !== "/" && (x += "/"), x += S.path(true), S._parts.query) {
          for (var B = "", W = 0, lt = S._parts.query.split("&"), pt = lt.length; W < pt; W++) {
            var at = (lt[W] || "").split("=");
            B += "&" + s.decodeQuery(at[0], this._parts.escapeQuerySpace).replace(/&/g, "%26"), at[1] !== void 0 && (B += "=" + s.decodeQuery(at[1], this._parts.escapeQuerySpace).replace(/&/g, "%26"));
          }
          x += "?" + B.substring(1);
        }
        return x += s.decodeQuery(S.hash(), true), x;
      }, u.absoluteTo = function(S) {
        var x = this.clone(), B = ["protocol", "username", "password", "hostname", "port"], W, lt, pt;
        if (this._parts.urn) throw new Error("URNs do not have any generally defined hierarchical components");
        if (S instanceof s || (S = new s(S)), x._parts.protocol || (x._parts.protocol = S._parts.protocol, this._parts.hostname)) return x;
        for (lt = 0; pt = B[lt]; lt++) x._parts[pt] = S._parts[pt];
        return x._parts.path ? (x._parts.path.substring(-2) === ".." && (x._parts.path += "/"), x.path().charAt(0) !== "/" && (W = S.directory(), W = W || (S.path().indexOf("/") === 0 ? "/" : ""), x._parts.path = (W ? W + "/" : "") + x._parts.path, x.normalizePath())) : (x._parts.path = S._parts.path, x._parts.query || (x._parts.query = S._parts.query)), x.build(), x;
      }, u.relativeTo = function(S) {
        var x = this.clone().normalize(), B, W, lt, pt, at;
        if (x._parts.urn) throw new Error("URNs do not have any generally defined hierarchical components");
        if (S = new s(S).normalize(), B = x._parts, W = S._parts, pt = x.path(), at = S.path(), pt.charAt(0) !== "/") throw new Error("URI is already relative");
        if (at.charAt(0) !== "/") throw new Error("Cannot calculate a URI relative to another relative URI");
        if (B.protocol === W.protocol && (B.protocol = null), B.username !== W.username || B.password !== W.password || B.protocol !== null || B.username !== null || B.password !== null) return x.build();
        if (B.hostname === W.hostname && B.port === W.port) B.hostname = null, B.port = null;
        else return x.build();
        if (pt === at) return B.path = "", x.build();
        if (lt = s.commonPath(pt, at), !lt) return x.build();
        var rt = W.path.substring(lt.length).replace(/[^\/]*$/, "").replace(/.*?\//g, "../");
        return B.path = rt + B.path.substring(lt.length) || "./", x.build();
      }, u.equals = function(S) {
        var x = this.clone(), B = new s(S), W = {}, lt = {}, pt = {}, at, rt, ot;
        if (x.normalize(), B.normalize(), x.toString() === B.toString()) return true;
        if (at = x.query(), rt = B.query(), x.query(""), B.query(""), x.toString() !== B.toString() || at.length !== rt.length) return false;
        W = s.parseQuery(at, this._parts.escapeQuerySpace), lt = s.parseQuery(rt, this._parts.escapeQuerySpace);
        for (ot in W) if (d.call(W, ot)) {
          if (g(W[ot])) {
            if (!m(W[ot], lt[ot])) return false;
          } else if (W[ot] !== lt[ot]) return false;
          pt[ot] = true;
        }
        for (ot in lt) if (d.call(lt, ot) && !pt[ot]) return false;
        return true;
      }, u.preventInvalidHostname = function(S) {
        return this._parts.preventInvalidHostname = !!S, this;
      }, u.duplicateQueryParameters = function(S) {
        return this._parts.duplicateQueryParameters = !!S, this;
      }, u.escapeQuerySpace = function(S) {
        return this._parts.escapeQuerySpace = !!S, this;
      }, s;
    });
  }(Cl)), Cl.exports;
}
var uf = { exports: {} };
/*! For license information please see stellar-base.min.js.LICENSE.txt */
var Vp;
function ps() {
  return Vp || (Vp = 1, function(E, t) {
    (function(e, o) {
      E.exports = o();
    })(self, () => (() => {
      var e = { 41: (l, s, i) => {
        var u = i(655), d = i(8068), f = i(9675), p = i(5795);
        l.exports = function(g, b, h) {
          if (!g || typeof g != "object" && typeof g != "function") throw new f("`obj` must be an object or a function`");
          if (typeof b != "string" && typeof b != "symbol") throw new f("`property` must be a string or a symbol`");
          if (arguments.length > 3 && typeof arguments[3] != "boolean" && arguments[3] !== null) throw new f("`nonEnumerable`, if provided, must be a boolean or null");
          if (arguments.length > 4 && typeof arguments[4] != "boolean" && arguments[4] !== null) throw new f("`nonWritable`, if provided, must be a boolean or null");
          if (arguments.length > 5 && typeof arguments[5] != "boolean" && arguments[5] !== null) throw new f("`nonConfigurable`, if provided, must be a boolean or null");
          if (arguments.length > 6 && typeof arguments[6] != "boolean") throw new f("`loose`, if provided, must be a boolean");
          var m = arguments.length > 3 ? arguments[3] : null, c = arguments.length > 4 ? arguments[4] : null, w = arguments.length > 5 ? arguments[5] : null, T = arguments.length > 6 && arguments[6], P = !!p && p(g, b);
          if (u) u(g, b, { configurable: w === null && P ? P.configurable : !w, enumerable: m === null && P ? P.enumerable : !m, value: h, writable: c === null && P ? P.writable : !c });
          else {
            if (!T && (m || c || w)) throw new d("This environment does not support defining a property as non-configurable, non-writable, or non-enumerable.");
            g[b] = h;
          }
        };
      }, 76: (l) => {
        l.exports = Function.prototype.call;
      }, 251: (l, s) => {
        s.read = function(i, u, d, f, p) {
          var g, b, h = 8 * p - f - 1, m = (1 << h) - 1, c = m >> 1, w = -7, T = d ? p - 1 : 0, P = d ? -1 : 1, k = i[u + T];
          for (T += P, g = k & (1 << -w) - 1, k >>= -w, w += h; w > 0; g = 256 * g + i[u + T], T += P, w -= 8) ;
          for (b = g & (1 << -w) - 1, g >>= -w, w += f; w > 0; b = 256 * b + i[u + T], T += P, w -= 8) ;
          if (g === 0) g = 1 - c;
          else {
            if (g === m) return b ? NaN : 1 / 0 * (k ? -1 : 1);
            b += Math.pow(2, f), g -= c;
          }
          return (k ? -1 : 1) * b * Math.pow(2, g - f);
        }, s.write = function(i, u, d, f, p, g) {
          var b, h, m, c = 8 * g - p - 1, w = (1 << c) - 1, T = w >> 1, P = p === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0, k = f ? 0 : g - 1, R = f ? 1 : -1, F = u < 0 || u === 0 && 1 / u < 0 ? 1 : 0;
          for (u = Math.abs(u), isNaN(u) || u === 1 / 0 ? (h = isNaN(u) ? 1 : 0, b = w) : (b = Math.floor(Math.log(u) / Math.LN2), u * (m = Math.pow(2, -b)) < 1 && (b--, m *= 2), (u += b + T >= 1 ? P / m : P * Math.pow(2, 1 - T)) * m >= 2 && (b++, m /= 2), b + T >= w ? (h = 0, b = w) : b + T >= 1 ? (h = (u * m - 1) * Math.pow(2, p), b += T) : (h = u * Math.pow(2, T - 1) * Math.pow(2, p), b = 0)); p >= 8; i[d + k] = 255 & h, k += R, h /= 256, p -= 8) ;
          for (b = b << p | h, c += p; c > 0; i[d + k] = 255 & b, k += R, b /= 256, c -= 8) ;
          i[d + k - R] |= 128 * F;
        };
      }, 392: (l, s, i) => {
        var u = i(2861).Buffer;
        function d(f, p) {
          this._block = u.alloc(f), this._finalSize = p, this._blockSize = f, this._len = 0;
        }
        d.prototype.update = function(f, p) {
          typeof f == "string" && (p = p || "utf8", f = u.from(f, p));
          for (var g = this._block, b = this._blockSize, h = f.length, m = this._len, c = 0; c < h; ) {
            for (var w = m % b, T = Math.min(h - c, b - w), P = 0; P < T; P++) g[w + P] = f[c + P];
            c += T, (m += T) % b === 0 && this._update(g);
          }
          return this._len += h, this;
        }, d.prototype.digest = function(f) {
          var p = this._len % this._blockSize;
          this._block[p] = 128, this._block.fill(0, p + 1), p >= this._finalSize && (this._update(this._block), this._block.fill(0));
          var g = 8 * this._len;
          if (g <= 4294967295) this._block.writeUInt32BE(g, this._blockSize - 4);
          else {
            var b = (4294967295 & g) >>> 0, h = (g - b) / 4294967296;
            this._block.writeUInt32BE(h, this._blockSize - 8), this._block.writeUInt32BE(b, this._blockSize - 4);
          }
          this._update(this._block);
          var m = this._hash();
          return f ? m.toString(f) : m;
        }, d.prototype._update = function() {
          throw new Error("_update must be implemented by subclass");
        }, l.exports = d;
      }, 414: (l) => {
        l.exports = Math.round;
      }, 453: (l, s, i) => {
        var u, d = i(9612), f = i(9383), p = i(1237), g = i(9290), b = i(9538), h = i(8068), m = i(9675), c = i(5345), w = i(1514), T = i(8968), P = i(6188), k = i(8002), R = i(5880), F = i(414), v = i(3093), U = Function, M = function(Bt) {
          try {
            return U('"use strict"; return (' + Bt + ").constructor;")();
          } catch {
          }
        }, Z = i(5795), D = i(655), V = function() {
          throw new m();
        }, S = Z ? function() {
          try {
            return V;
          } catch {
            try {
              return Z(arguments, "callee").get;
            } catch {
              return V;
            }
          }
        }() : V, x = i(4039)(), B = i(3628), W = i(1064), lt = i(8648), pt = i(1002), at = i(76), rt = {}, ot = typeof Uint8Array < "u" && B ? B(Uint8Array) : u, X = { __proto__: null, "%AggregateError%": typeof AggregateError > "u" ? u : AggregateError, "%Array%": Array, "%ArrayBuffer%": typeof ArrayBuffer > "u" ? u : ArrayBuffer, "%ArrayIteratorPrototype%": x && B ? B([][Symbol.iterator]()) : u, "%AsyncFromSyncIteratorPrototype%": u, "%AsyncFunction%": rt, "%AsyncGenerator%": rt, "%AsyncGeneratorFunction%": rt, "%AsyncIteratorPrototype%": rt, "%Atomics%": typeof Atomics > "u" ? u : Atomics, "%BigInt%": typeof BigInt > "u" ? u : BigInt, "%BigInt64Array%": typeof BigInt64Array > "u" ? u : BigInt64Array, "%BigUint64Array%": typeof BigUint64Array > "u" ? u : BigUint64Array, "%Boolean%": Boolean, "%DataView%": typeof DataView > "u" ? u : DataView, "%Date%": Date, "%decodeURI%": decodeURI, "%decodeURIComponent%": decodeURIComponent, "%encodeURI%": encodeURI, "%encodeURIComponent%": encodeURIComponent, "%Error%": f, "%eval%": eval, "%EvalError%": p, "%Float16Array%": typeof Float16Array > "u" ? u : Float16Array, "%Float32Array%": typeof Float32Array > "u" ? u : Float32Array, "%Float64Array%": typeof Float64Array > "u" ? u : Float64Array, "%FinalizationRegistry%": typeof FinalizationRegistry > "u" ? u : FinalizationRegistry, "%Function%": U, "%GeneratorFunction%": rt, "%Int8Array%": typeof Int8Array > "u" ? u : Int8Array, "%Int16Array%": typeof Int16Array > "u" ? u : Int16Array, "%Int32Array%": typeof Int32Array > "u" ? u : Int32Array, "%isFinite%": isFinite, "%isNaN%": isNaN, "%IteratorPrototype%": x && B ? B(B([][Symbol.iterator]())) : u, "%JSON%": typeof JSON == "object" ? JSON : u, "%Map%": typeof Map > "u" ? u : Map, "%MapIteratorPrototype%": typeof Map < "u" && x && B ? B((/* @__PURE__ */ new Map())[Symbol.iterator]()) : u, "%Math%": Math, "%Number%": Number, "%Object%": d, "%Object.getOwnPropertyDescriptor%": Z, "%parseFloat%": parseFloat, "%parseInt%": parseInt, "%Promise%": typeof Promise > "u" ? u : Promise, "%Proxy%": typeof Proxy > "u" ? u : Proxy, "%RangeError%": g, "%ReferenceError%": b, "%Reflect%": typeof Reflect > "u" ? u : Reflect, "%RegExp%": RegExp, "%Set%": typeof Set > "u" ? u : Set, "%SetIteratorPrototype%": typeof Set < "u" && x && B ? B((/* @__PURE__ */ new Set())[Symbol.iterator]()) : u, "%SharedArrayBuffer%": typeof SharedArrayBuffer > "u" ? u : SharedArrayBuffer, "%String%": String, "%StringIteratorPrototype%": x && B ? B(""[Symbol.iterator]()) : u, "%Symbol%": x ? Symbol : u, "%SyntaxError%": h, "%ThrowTypeError%": S, "%TypedArray%": ot, "%TypeError%": m, "%Uint8Array%": typeof Uint8Array > "u" ? u : Uint8Array, "%Uint8ClampedArray%": typeof Uint8ClampedArray > "u" ? u : Uint8ClampedArray, "%Uint16Array%": typeof Uint16Array > "u" ? u : Uint16Array, "%Uint32Array%": typeof Uint32Array > "u" ? u : Uint32Array, "%URIError%": c, "%WeakMap%": typeof WeakMap > "u" ? u : WeakMap, "%WeakRef%": typeof WeakRef > "u" ? u : WeakRef, "%WeakSet%": typeof WeakSet > "u" ? u : WeakSet, "%Function.prototype.call%": at, "%Function.prototype.apply%": pt, "%Object.defineProperty%": D, "%Object.getPrototypeOf%": W, "%Math.abs%": w, "%Math.floor%": T, "%Math.max%": P, "%Math.min%": k, "%Math.pow%": R, "%Math.round%": F, "%Math.sign%": v, "%Reflect.getPrototypeOf%": lt };
        if (B) try {
          null.error;
        } catch (Bt) {
          var I = B(B(Bt));
          X["%Error.prototype%"] = I;
        }
        var nt = function Bt(At) {
          var Ut;
          if (At === "%AsyncFunction%") Ut = M("async function () {}");
          else if (At === "%GeneratorFunction%") Ut = M("function* () {}");
          else if (At === "%AsyncGeneratorFunction%") Ut = M("async function* () {}");
          else if (At === "%AsyncGenerator%") {
            var Vt = Bt("%AsyncGeneratorFunction%");
            Vt && (Ut = Vt.prototype);
          } else if (At === "%AsyncIteratorPrototype%") {
            var oe = Bt("%AsyncGenerator%");
            oe && B && (Ut = B(oe.prototype));
          }
          return X[At] = Ut, Ut;
        }, ft = { __proto__: null, "%ArrayBufferPrototype%": ["ArrayBuffer", "prototype"], "%ArrayPrototype%": ["Array", "prototype"], "%ArrayProto_entries%": ["Array", "prototype", "entries"], "%ArrayProto_forEach%": ["Array", "prototype", "forEach"], "%ArrayProto_keys%": ["Array", "prototype", "keys"], "%ArrayProto_values%": ["Array", "prototype", "values"], "%AsyncFunctionPrototype%": ["AsyncFunction", "prototype"], "%AsyncGenerator%": ["AsyncGeneratorFunction", "prototype"], "%AsyncGeneratorPrototype%": ["AsyncGeneratorFunction", "prototype", "prototype"], "%BooleanPrototype%": ["Boolean", "prototype"], "%DataViewPrototype%": ["DataView", "prototype"], "%DatePrototype%": ["Date", "prototype"], "%ErrorPrototype%": ["Error", "prototype"], "%EvalErrorPrototype%": ["EvalError", "prototype"], "%Float32ArrayPrototype%": ["Float32Array", "prototype"], "%Float64ArrayPrototype%": ["Float64Array", "prototype"], "%FunctionPrototype%": ["Function", "prototype"], "%Generator%": ["GeneratorFunction", "prototype"], "%GeneratorPrototype%": ["GeneratorFunction", "prototype", "prototype"], "%Int8ArrayPrototype%": ["Int8Array", "prototype"], "%Int16ArrayPrototype%": ["Int16Array", "prototype"], "%Int32ArrayPrototype%": ["Int32Array", "prototype"], "%JSONParse%": ["JSON", "parse"], "%JSONStringify%": ["JSON", "stringify"], "%MapPrototype%": ["Map", "prototype"], "%NumberPrototype%": ["Number", "prototype"], "%ObjectPrototype%": ["Object", "prototype"], "%ObjProto_toString%": ["Object", "prototype", "toString"], "%ObjProto_valueOf%": ["Object", "prototype", "valueOf"], "%PromisePrototype%": ["Promise", "prototype"], "%PromiseProto_then%": ["Promise", "prototype", "then"], "%Promise_all%": ["Promise", "all"], "%Promise_reject%": ["Promise", "reject"], "%Promise_resolve%": ["Promise", "resolve"], "%RangeErrorPrototype%": ["RangeError", "prototype"], "%ReferenceErrorPrototype%": ["ReferenceError", "prototype"], "%RegExpPrototype%": ["RegExp", "prototype"], "%SetPrototype%": ["Set", "prototype"], "%SharedArrayBufferPrototype%": ["SharedArrayBuffer", "prototype"], "%StringPrototype%": ["String", "prototype"], "%SymbolPrototype%": ["Symbol", "prototype"], "%SyntaxErrorPrototype%": ["SyntaxError", "prototype"], "%TypedArrayPrototype%": ["TypedArray", "prototype"], "%TypeErrorPrototype%": ["TypeError", "prototype"], "%Uint8ArrayPrototype%": ["Uint8Array", "prototype"], "%Uint8ClampedArrayPrototype%": ["Uint8ClampedArray", "prototype"], "%Uint16ArrayPrototype%": ["Uint16Array", "prototype"], "%Uint32ArrayPrototype%": ["Uint32Array", "prototype"], "%URIErrorPrototype%": ["URIError", "prototype"], "%WeakMapPrototype%": ["WeakMap", "prototype"], "%WeakSetPrototype%": ["WeakSet", "prototype"] }, dt = i(6743), Lt = i(9957), $ = dt.call(at, Array.prototype.concat), it = dt.call(pt, Array.prototype.splice), mt = dt.call(at, String.prototype.replace), Ot = dt.call(at, String.prototype.slice), bt = dt.call(at, RegExp.prototype.exec), xt = /[^%.[\]]+|\[(?:(-?\d+(?:\.\d+)?)|(["'])((?:(?!\2)[^\\]|\\.)*?)\2)\]|(?=(?:\.|\[\])(?:\.|\[\]|%$))/g, Ct = /\\(\\)?/g, Tt = function(Bt, At) {
          var Ut, Vt = Bt;
          if (Lt(ft, Vt) && (Vt = "%" + (Ut = ft[Vt])[0] + "%"), Lt(X, Vt)) {
            var oe = X[Vt];
            if (oe === rt && (oe = nt(Vt)), oe === void 0 && !At) throw new m("intrinsic " + Bt + " exists, but is not available. Please file an issue!");
            return { alias: Ut, name: Vt, value: oe };
          }
          throw new h("intrinsic " + Bt + " does not exist!");
        };
        l.exports = function(Bt, At) {
          if (typeof Bt != "string" || Bt.length === 0) throw new m("intrinsic name must be a non-empty string");
          if (arguments.length > 1 && typeof At != "boolean") throw new m('"allowMissing" argument must be a boolean');
          if (bt(/^%?[^%]*%?$/, Bt) === null) throw new h("`%` may not be present anywhere but at the beginning and end of the intrinsic name");
          var Ut = function(_) {
            var L = Ot(_, 0, 1), et = Ot(_, -1);
            if (L === "%" && et !== "%") throw new h("invalid intrinsic syntax, expected closing `%`");
            if (et === "%" && L !== "%") throw new h("invalid intrinsic syntax, expected opening `%`");
            var St = [];
            return mt(_, xt, function(kt, ct, j, ut) {
              St[St.length] = j ? mt(ut, Ct, "$1") : ct || kt;
            }), St;
          }(Bt), Vt = Ut.length > 0 ? Ut[0] : "", oe = Tt("%" + Vt + "%", At), te = oe.name, yt = oe.value, Mt = false, O = oe.alias;
          O && (Vt = O[0], it(Ut, $([0, 1], O)));
          for (var z = 1, J = true; z < Ut.length; z += 1) {
            var tt = Ut[z], H = Ot(tt, 0, 1), K = Ot(tt, -1);
            if ((H === '"' || H === "'" || H === "`" || K === '"' || K === "'" || K === "`") && H !== K) throw new h("property names with quotes must have matching quotes");
            if (tt !== "constructor" && J || (Mt = true), Lt(X, te = "%" + (Vt += "." + tt) + "%")) yt = X[te];
            else if (yt != null) {
              if (!(tt in yt)) {
                if (!At) throw new m("base intrinsic for " + Bt + " exists, but the property is not available.");
                return;
              }
              if (Z && z + 1 >= Ut.length) {
                var q = Z(yt, tt);
                yt = (J = !!q) && "get" in q && !("originalValue" in q.get) ? q.get : yt[tt];
              } else J = Lt(yt, tt), yt = yt[tt];
              J && !Mt && (X[te] = yt);
            }
          }
          return yt;
        };
      }, 487: (l, s, i) => {
        var u = i(6897), d = i(655), f = i(3126), p = i(2205);
        l.exports = function(g) {
          var b = f(arguments), h = g.length - (arguments.length - 1);
          return u(b, 1 + (h > 0 ? h : 0), true);
        }, d ? d(l.exports, "apply", { value: p }) : l.exports.apply = p;
      }, 537: (l, s, i) => {
        var u = i(5606), d = i(6763), f = Object.getOwnPropertyDescriptors || function(X) {
          for (var I = Object.keys(X), nt = {}, ft = 0; ft < I.length; ft++) nt[I[ft]] = Object.getOwnPropertyDescriptor(X, I[ft]);
          return nt;
        }, p = /%[sdj%]/g;
        s.format = function(X) {
          if (!M(X)) {
            for (var I = [], nt = 0; nt < arguments.length; nt++) I.push(m(arguments[nt]));
            return I.join(" ");
          }
          nt = 1;
          for (var ft = arguments, dt = ft.length, Lt = String(X).replace(p, function(it) {
            if (it === "%%") return "%";
            if (nt >= dt) return it;
            switch (it) {
              case "%s":
                return String(ft[nt++]);
              case "%d":
                return Number(ft[nt++]);
              case "%j":
                try {
                  return JSON.stringify(ft[nt++]);
                } catch {
                  return "[Circular]";
                }
              default:
                return it;
            }
          }), $ = ft[nt]; nt < dt; $ = ft[++nt]) v($) || !V($) ? Lt += " " + $ : Lt += " " + m($);
          return Lt;
        }, s.deprecate = function(X, I) {
          if (u !== void 0 && u.noDeprecation === true) return X;
          if (u === void 0) return function() {
            return s.deprecate(X, I).apply(this, arguments);
          };
          var nt = false;
          return function() {
            if (!nt) {
              if (u.throwDeprecation) throw new Error(I);
              u.traceDeprecation ? d.trace(I) : d.error(I), nt = true;
            }
            return X.apply(this, arguments);
          };
        };
        var g = {}, b = /^$/;
        if (u.env.NODE_DEBUG) {
          var h = u.env.NODE_DEBUG;
          h = h.replace(/[|\\{}()[\]^$+?.]/g, "\\$&").replace(/\*/g, ".*").replace(/,/g, "$|^").toUpperCase(), b = new RegExp("^" + h + "$", "i");
        }
        function m(X, I) {
          var nt = { seen: [], stylize: w };
          return arguments.length >= 3 && (nt.depth = arguments[2]), arguments.length >= 4 && (nt.colors = arguments[3]), F(I) ? nt.showHidden = I : I && s._extend(nt, I), Z(nt.showHidden) && (nt.showHidden = false), Z(nt.depth) && (nt.depth = 2), Z(nt.colors) && (nt.colors = false), Z(nt.customInspect) && (nt.customInspect = true), nt.colors && (nt.stylize = c), T(nt, X, nt.depth);
        }
        function c(X, I) {
          var nt = m.styles[I];
          return nt ? "\x1B[" + m.colors[nt][0] + "m" + X + "\x1B[" + m.colors[nt][1] + "m" : X;
        }
        function w(X, I) {
          return X;
        }
        function T(X, I, nt) {
          if (X.customInspect && I && B(I.inspect) && I.inspect !== s.inspect && (!I.constructor || I.constructor.prototype !== I)) {
            var ft = I.inspect(nt, X);
            return M(ft) || (ft = T(X, ft, nt)), ft;
          }
          var dt = function(Ct, Tt) {
            if (Z(Tt)) return Ct.stylize("undefined", "undefined");
            if (M(Tt)) {
              var Bt = "'" + JSON.stringify(Tt).replace(/^"|"$/g, "").replace(/'/g, "\\'").replace(/\\"/g, '"') + "'";
              return Ct.stylize(Bt, "string");
            }
            if (U(Tt)) return Ct.stylize("" + Tt, "number");
            if (F(Tt)) return Ct.stylize("" + Tt, "boolean");
            if (v(Tt)) return Ct.stylize("null", "null");
          }(X, I);
          if (dt) return dt;
          var Lt = Object.keys(I), $ = function(Ct) {
            var Tt = {};
            return Ct.forEach(function(Bt, At) {
              Tt[Bt] = true;
            }), Tt;
          }(Lt);
          if (X.showHidden && (Lt = Object.getOwnPropertyNames(I)), x(I) && (Lt.indexOf("message") >= 0 || Lt.indexOf("description") >= 0)) return P(I);
          if (Lt.length === 0) {
            if (B(I)) {
              var it = I.name ? ": " + I.name : "";
              return X.stylize("[Function" + it + "]", "special");
            }
            if (D(I)) return X.stylize(RegExp.prototype.toString.call(I), "regexp");
            if (S(I)) return X.stylize(Date.prototype.toString.call(I), "date");
            if (x(I)) return P(I);
          }
          var mt, Ot = "", bt = false, xt = ["{", "}"];
          return R(I) && (bt = true, xt = ["[", "]"]), B(I) && (Ot = " [Function" + (I.name ? ": " + I.name : "") + "]"), D(I) && (Ot = " " + RegExp.prototype.toString.call(I)), S(I) && (Ot = " " + Date.prototype.toUTCString.call(I)), x(I) && (Ot = " " + P(I)), Lt.length !== 0 || bt && I.length != 0 ? nt < 0 ? D(I) ? X.stylize(RegExp.prototype.toString.call(I), "regexp") : X.stylize("[Object]", "special") : (X.seen.push(I), mt = bt ? function(Ct, Tt, Bt, At, Ut) {
            for (var Vt = [], oe = 0, te = Tt.length; oe < te; ++oe) at(Tt, String(oe)) ? Vt.push(k(Ct, Tt, Bt, At, String(oe), true)) : Vt.push("");
            return Ut.forEach(function(yt) {
              yt.match(/^\d+$/) || Vt.push(k(Ct, Tt, Bt, At, yt, true));
            }), Vt;
          }(X, I, nt, $, Lt) : Lt.map(function(Ct) {
            return k(X, I, nt, $, Ct, bt);
          }), X.seen.pop(), function(Ct, Tt, Bt) {
            var At = Ct.reduce(function(Ut, Vt) {
              return Vt.indexOf(`
`) >= 0, Ut + Vt.replace(/\u001b\[\d\d?m/g, "").length + 1;
            }, 0);
            return At > 60 ? Bt[0] + (Tt === "" ? "" : Tt + `
 `) + " " + Ct.join(`,
  `) + " " + Bt[1] : Bt[0] + Tt + " " + Ct.join(", ") + " " + Bt[1];
          }(mt, Ot, xt)) : xt[0] + Ot + xt[1];
        }
        function P(X) {
          return "[" + Error.prototype.toString.call(X) + "]";
        }
        function k(X, I, nt, ft, dt, Lt) {
          var $, it, mt;
          if ((mt = Object.getOwnPropertyDescriptor(I, dt) || { value: I[dt] }).get ? it = mt.set ? X.stylize("[Getter/Setter]", "special") : X.stylize("[Getter]", "special") : mt.set && (it = X.stylize("[Setter]", "special")), at(ft, dt) || ($ = "[" + dt + "]"), it || (X.seen.indexOf(mt.value) < 0 ? (it = v(nt) ? T(X, mt.value, null) : T(X, mt.value, nt - 1)).indexOf(`
`) > -1 && (it = Lt ? it.split(`
`).map(function(Ot) {
            return "  " + Ot;
          }).join(`
`).slice(2) : `
` + it.split(`
`).map(function(Ot) {
            return "   " + Ot;
          }).join(`
`)) : it = X.stylize("[Circular]", "special")), Z($)) {
            if (Lt && dt.match(/^\d+$/)) return it;
            ($ = JSON.stringify("" + dt)).match(/^"([a-zA-Z_][a-zA-Z_0-9]*)"$/) ? ($ = $.slice(1, -1), $ = X.stylize($, "name")) : ($ = $.replace(/'/g, "\\'").replace(/\\"/g, '"').replace(/(^"|"$)/g, "'"), $ = X.stylize($, "string"));
          }
          return $ + ": " + it;
        }
        function R(X) {
          return Array.isArray(X);
        }
        function F(X) {
          return typeof X == "boolean";
        }
        function v(X) {
          return X === null;
        }
        function U(X) {
          return typeof X == "number";
        }
        function M(X) {
          return typeof X == "string";
        }
        function Z(X) {
          return X === void 0;
        }
        function D(X) {
          return V(X) && W(X) === "[object RegExp]";
        }
        function V(X) {
          return typeof X == "object" && X !== null;
        }
        function S(X) {
          return V(X) && W(X) === "[object Date]";
        }
        function x(X) {
          return V(X) && (W(X) === "[object Error]" || X instanceof Error);
        }
        function B(X) {
          return typeof X == "function";
        }
        function W(X) {
          return Object.prototype.toString.call(X);
        }
        function lt(X) {
          return X < 10 ? "0" + X.toString(10) : X.toString(10);
        }
        s.debuglog = function(X) {
          if (X = X.toUpperCase(), !g[X]) if (b.test(X)) {
            var I = u.pid;
            g[X] = function() {
              var nt = s.format.apply(s, arguments);
              d.error("%s %d: %s", X, I, nt);
            };
          } else g[X] = function() {
          };
          return g[X];
        }, s.inspect = m, m.colors = { bold: [1, 22], italic: [3, 23], underline: [4, 24], inverse: [7, 27], white: [37, 39], grey: [90, 39], black: [30, 39], blue: [34, 39], cyan: [36, 39], green: [32, 39], magenta: [35, 39], red: [31, 39], yellow: [33, 39] }, m.styles = { special: "cyan", number: "yellow", boolean: "yellow", undefined: "grey", null: "bold", string: "green", date: "magenta", regexp: "red" }, s.types = i(9032), s.isArray = R, s.isBoolean = F, s.isNull = v, s.isNullOrUndefined = function(X) {
          return X == null;
        }, s.isNumber = U, s.isString = M, s.isSymbol = function(X) {
          return typeof X == "symbol";
        }, s.isUndefined = Z, s.isRegExp = D, s.types.isRegExp = D, s.isObject = V, s.isDate = S, s.types.isDate = S, s.isError = x, s.types.isNativeError = x, s.isFunction = B, s.isPrimitive = function(X) {
          return X === null || typeof X == "boolean" || typeof X == "number" || typeof X == "string" || typeof X == "symbol" || X === void 0;
        }, s.isBuffer = i(1135);
        var pt = ["Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec"];
        function at(X, I) {
          return Object.prototype.hasOwnProperty.call(X, I);
        }
        s.log = function() {
          var X, I;
          d.log("%s - %s", (X = /* @__PURE__ */ new Date(), I = [lt(X.getHours()), lt(X.getMinutes()), lt(X.getSeconds())].join(":"), [X.getDate(), pt[X.getMonth()], I].join(" ")), s.format.apply(s, arguments));
        }, s.inherits = i(6698), s._extend = function(X, I) {
          if (!I || !V(I)) return X;
          for (var nt = Object.keys(I), ft = nt.length; ft--; ) X[nt[ft]] = I[nt[ft]];
          return X;
        };
        var rt = typeof Symbol < "u" ? Symbol("util.promisify.custom") : void 0;
        function ot(X, I) {
          if (!X) {
            var nt = new Error("Promise was rejected with a falsy value");
            nt.reason = X, X = nt;
          }
          return I(X);
        }
        s.promisify = function(X) {
          if (typeof X != "function") throw new TypeError('The "original" argument must be of type Function');
          if (rt && X[rt]) {
            var I;
            if (typeof (I = X[rt]) != "function") throw new TypeError('The "util.promisify.custom" argument must be of type Function');
            return Object.defineProperty(I, rt, { value: I, enumerable: false, writable: false, configurable: true }), I;
          }
          function I() {
            for (var nt, ft, dt = new Promise(function(it, mt) {
              nt = it, ft = mt;
            }), Lt = [], $ = 0; $ < arguments.length; $++) Lt.push(arguments[$]);
            Lt.push(function(it, mt) {
              it ? ft(it) : nt(mt);
            });
            try {
              X.apply(this, Lt);
            } catch (it) {
              ft(it);
            }
            return dt;
          }
          return Object.setPrototypeOf(I, Object.getPrototypeOf(X)), rt && Object.defineProperty(I, rt, { value: I, enumerable: false, writable: false, configurable: true }), Object.defineProperties(I, f(X));
        }, s.promisify.custom = rt, s.callbackify = function(X) {
          if (typeof X != "function") throw new TypeError('The "original" argument must be of type Function');
          function I() {
            for (var nt = [], ft = 0; ft < arguments.length; ft++) nt.push(arguments[ft]);
            var dt = nt.pop();
            if (typeof dt != "function") throw new TypeError("The last argument must be of type Function");
            var Lt = this, $ = function() {
              return dt.apply(Lt, arguments);
            };
            X.apply(this, nt).then(function(it) {
              u.nextTick($.bind(null, null, it));
            }, function(it) {
              u.nextTick(ot.bind(null, it, $));
            });
          }
          return Object.setPrototypeOf(I, Object.getPrototypeOf(X)), Object.defineProperties(I, f(X)), I;
        };
      }, 592: (l, s, i) => {
        var u = i(655), d = function() {
          return !!u;
        };
        d.hasArrayLengthDefineBug = function() {
          if (!u) return null;
          try {
            return u([], "length", { value: 1 }).length !== 1;
          } catch {
            return true;
          }
        }, l.exports = d;
      }, 655: (l) => {
        var s = Object.defineProperty || false;
        if (s) try {
          s({}, "a", { value: 1 });
        } catch {
          s = false;
        }
        l.exports = s;
      }, 1002: (l) => {
        l.exports = Function.prototype.apply;
      }, 1064: (l, s, i) => {
        var u = i(9612);
        l.exports = u.getPrototypeOf || null;
      }, 1093: (l) => {
        var s = Object.prototype.toString;
        l.exports = function(i) {
          var u = s.call(i), d = u === "[object Arguments]";
          return d || (d = u !== "[object Array]" && i !== null && typeof i == "object" && typeof i.length == "number" && i.length >= 0 && s.call(i.callee) === "[object Function]"), d;
        };
      }, 1135: (l) => {
        l.exports = function(s) {
          return s && typeof s == "object" && typeof s.copy == "function" && typeof s.fill == "function" && typeof s.readUInt8 == "function";
        };
      }, 1189: (l, s, i) => {
        var u = Array.prototype.slice, d = i(1093), f = Object.keys, p = f ? function(b) {
          return f(b);
        } : i(8875), g = Object.keys;
        p.shim = function() {
          if (Object.keys) {
            var b = function() {
              var h = Object.keys(arguments);
              return h && h.length === arguments.length;
            }(1, 2);
            b || (Object.keys = function(h) {
              return d(h) ? g(u.call(h)) : g(h);
            });
          } else Object.keys = p;
          return Object.keys || p;
        }, l.exports = p;
      }, 1237: (l) => {
        l.exports = EvalError;
      }, 1333: (l) => {
        l.exports = function() {
          if (typeof Symbol != "function" || typeof Object.getOwnPropertySymbols != "function") return false;
          if (typeof Symbol.iterator == "symbol") return true;
          var s = {}, i = Symbol("test"), u = Object(i);
          if (typeof i == "string" || Object.prototype.toString.call(i) !== "[object Symbol]" || Object.prototype.toString.call(u) !== "[object Symbol]") return false;
          for (var d in s[i] = 42, s) return false;
          if (typeof Object.keys == "function" && Object.keys(s).length !== 0 || typeof Object.getOwnPropertyNames == "function" && Object.getOwnPropertyNames(s).length !== 0) return false;
          var f = Object.getOwnPropertySymbols(s);
          if (f.length !== 1 || f[0] !== i || !Object.prototype.propertyIsEnumerable.call(s, i)) return false;
          if (typeof Object.getOwnPropertyDescriptor == "function") {
            var p = Object.getOwnPropertyDescriptor(s, i);
            if (p.value !== 42 || p.enumerable !== true) return false;
          }
          return true;
        };
      }, 1514: (l) => {
        l.exports = Math.abs;
      }, 2205: (l, s, i) => {
        var u = i(6743), d = i(1002), f = i(3144);
        l.exports = function() {
          return f(u, d, arguments);
        };
      }, 2299: (l, s, i) => {
        function u(bt, xt) {
          return function(Ct) {
            if (Array.isArray(Ct)) return Ct;
          }(bt) || function(Ct, Tt) {
            var Bt = Ct == null ? null : typeof Symbol < "u" && Ct[Symbol.iterator] || Ct["@@iterator"];
            if (Bt != null) {
              var At, Ut, Vt, oe, te = [], yt = true, Mt = false;
              try {
                if (Vt = (Bt = Bt.call(Ct)).next, Tt !== 0) for (; !(yt = (At = Vt.call(Bt)).done) && (te.push(At.value), te.length !== Tt); yt = true) ;
              } catch (O) {
                Mt = true, Ut = O;
              } finally {
                try {
                  if (!yt && Bt.return != null && (oe = Bt.return(), Object(oe) !== oe)) return;
                } finally {
                  if (Mt) throw Ut;
                }
              }
              return te;
            }
          }(bt, xt) || function(Ct, Tt) {
            if (Ct) {
              if (typeof Ct == "string") return d(Ct, Tt);
              var Bt = Object.prototype.toString.call(Ct).slice(8, -1);
              if (Bt === "Object" && Ct.constructor && (Bt = Ct.constructor.name), Bt === "Map" || Bt === "Set") return Array.from(Ct);
              if (Bt === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(Bt)) return d(Ct, Tt);
            }
          }(bt, xt) || function() {
            throw new TypeError(`Invalid attempt to destructure non-iterable instance.
In order to be iterable, non-array objects must have a [Symbol.iterator]() method.`);
          }();
        }
        function d(bt, xt) {
          (xt == null || xt > bt.length) && (xt = bt.length);
          for (var Ct = 0, Tt = new Array(xt); Ct < xt; Ct++) Tt[Ct] = bt[Ct];
          return Tt;
        }
        function f(bt) {
          return f = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(xt) {
            return typeof xt;
          } : function(xt) {
            return xt && typeof Symbol == "function" && xt.constructor === Symbol && xt !== Symbol.prototype ? "symbol" : typeof xt;
          }, f(bt);
        }
        var p = /a/g.flags !== void 0, g = function(bt) {
          var xt = [];
          return bt.forEach(function(Ct) {
            return xt.push(Ct);
          }), xt;
        }, b = function(bt) {
          var xt = [];
          return bt.forEach(function(Ct, Tt) {
            return xt.push([Tt, Ct]);
          }), xt;
        }, h = Object.is ? Object.is : i(7653), m = Object.getOwnPropertySymbols ? Object.getOwnPropertySymbols : function() {
          return [];
        }, c = Number.isNaN ? Number.isNaN : i(4133);
        function w(bt) {
          return bt.call.bind(bt);
        }
        var T = w(Object.prototype.hasOwnProperty), P = w(Object.prototype.propertyIsEnumerable), k = w(Object.prototype.toString), R = i(537).types, F = R.isAnyArrayBuffer, v = R.isArrayBufferView, U = R.isDate, M = R.isMap, Z = R.isRegExp, D = R.isSet, V = R.isNativeError, S = R.isBoxedPrimitive, x = R.isNumberObject, B = R.isStringObject, W = R.isBooleanObject, lt = R.isBigIntObject, pt = R.isSymbolObject, at = R.isFloat32Array, rt = R.isFloat64Array;
        function ot(bt) {
          if (bt.length === 0 || bt.length > 10) return true;
          for (var xt = 0; xt < bt.length; xt++) {
            var Ct = bt.charCodeAt(xt);
            if (Ct < 48 || Ct > 57) return true;
          }
          return bt.length === 10 && bt >= Math.pow(2, 32);
        }
        function X(bt) {
          return Object.keys(bt).filter(ot).concat(m(bt).filter(Object.prototype.propertyIsEnumerable.bind(bt)));
        }
        function I(bt, xt) {
          if (bt === xt) return 0;
          for (var Ct = bt.length, Tt = xt.length, Bt = 0, At = Math.min(Ct, Tt); Bt < At; ++Bt) if (bt[Bt] !== xt[Bt]) {
            Ct = bt[Bt], Tt = xt[Bt];
            break;
          }
          return Ct < Tt ? -1 : Tt < Ct ? 1 : 0;
        }
        function nt(bt, xt, Ct, Tt) {
          if (bt === xt) return bt !== 0 || !Ct || h(bt, xt);
          if (Ct) {
            if (f(bt) !== "object") return typeof bt == "number" && c(bt) && c(xt);
            if (f(xt) !== "object" || bt === null || xt === null || Object.getPrototypeOf(bt) !== Object.getPrototypeOf(xt)) return false;
          } else {
            if (bt === null || f(bt) !== "object") return (xt === null || f(xt) !== "object") && bt == xt;
            if (xt === null || f(xt) !== "object") return false;
          }
          var Bt, At, Ut, Vt, oe = k(bt);
          if (oe !== k(xt)) return false;
          if (Array.isArray(bt)) {
            if (bt.length !== xt.length) return false;
            var te = X(bt), yt = X(xt);
            return te.length === yt.length && dt(bt, xt, Ct, Tt, 1, te);
          }
          if (oe === "[object Object]" && (!M(bt) && M(xt) || !D(bt) && D(xt))) return false;
          if (U(bt)) {
            if (!U(xt) || Date.prototype.getTime.call(bt) !== Date.prototype.getTime.call(xt)) return false;
          } else if (Z(bt)) {
            if (!Z(xt) || (Ut = bt, Vt = xt, !(p ? Ut.source === Vt.source && Ut.flags === Vt.flags : RegExp.prototype.toString.call(Ut) === RegExp.prototype.toString.call(Vt)))) return false;
          } else if (V(bt) || bt instanceof Error) {
            if (bt.message !== xt.message || bt.name !== xt.name) return false;
          } else {
            if (v(bt)) {
              if (Ct || !at(bt) && !rt(bt)) {
                if (!function(z, J) {
                  return z.byteLength === J.byteLength && I(new Uint8Array(z.buffer, z.byteOffset, z.byteLength), new Uint8Array(J.buffer, J.byteOffset, J.byteLength)) === 0;
                }(bt, xt)) return false;
              } else if (!function(z, J) {
                if (z.byteLength !== J.byteLength) return false;
                for (var tt = 0; tt < z.byteLength; tt++) if (z[tt] !== J[tt]) return false;
                return true;
              }(bt, xt)) return false;
              var Mt = X(bt), O = X(xt);
              return Mt.length === O.length && dt(bt, xt, Ct, Tt, 0, Mt);
            }
            if (D(bt)) return !(!D(xt) || bt.size !== xt.size) && dt(bt, xt, Ct, Tt, 2);
            if (M(bt)) return !(!M(xt) || bt.size !== xt.size) && dt(bt, xt, Ct, Tt, 3);
            if (F(bt)) {
              if (At = xt, (Bt = bt).byteLength !== At.byteLength || I(new Uint8Array(Bt), new Uint8Array(At)) !== 0) return false;
            } else if (S(bt) && !function(z, J) {
              return x(z) ? x(J) && h(Number.prototype.valueOf.call(z), Number.prototype.valueOf.call(J)) : B(z) ? B(J) && String.prototype.valueOf.call(z) === String.prototype.valueOf.call(J) : W(z) ? W(J) && Boolean.prototype.valueOf.call(z) === Boolean.prototype.valueOf.call(J) : lt(z) ? lt(J) && BigInt.prototype.valueOf.call(z) === BigInt.prototype.valueOf.call(J) : pt(J) && Symbol.prototype.valueOf.call(z) === Symbol.prototype.valueOf.call(J);
            }(bt, xt)) return false;
          }
          return dt(bt, xt, Ct, Tt, 0);
        }
        function ft(bt, xt) {
          return xt.filter(function(Ct) {
            return P(bt, Ct);
          });
        }
        function dt(bt, xt, Ct, Tt, Bt, At) {
          if (arguments.length === 5) {
            At = Object.keys(bt);
            var Ut = Object.keys(xt);
            if (At.length !== Ut.length) return false;
          }
          for (var Vt = 0; Vt < At.length; Vt++) if (!T(xt, At[Vt])) return false;
          if (Ct && arguments.length === 5) {
            var oe = m(bt);
            if (oe.length !== 0) {
              var te = 0;
              for (Vt = 0; Vt < oe.length; Vt++) {
                var yt = oe[Vt];
                if (P(bt, yt)) {
                  if (!P(xt, yt)) return false;
                  At.push(yt), te++;
                } else if (P(xt, yt)) return false;
              }
              var Mt = m(xt);
              if (oe.length !== Mt.length && ft(xt, Mt).length !== te) return false;
            } else {
              var O = m(xt);
              if (O.length !== 0 && ft(xt, O).length !== 0) return false;
            }
          }
          if (At.length === 0 && (Bt === 0 || Bt === 1 && bt.length === 0 || bt.size === 0)) return true;
          if (Tt === void 0) Tt = { val1: /* @__PURE__ */ new Map(), val2: /* @__PURE__ */ new Map(), position: 0 };
          else {
            var z = Tt.val1.get(bt);
            if (z !== void 0) {
              var J = Tt.val2.get(xt);
              if (J !== void 0) return z === J;
            }
            Tt.position++;
          }
          Tt.val1.set(bt, Tt.position), Tt.val2.set(xt, Tt.position);
          var tt = function(H, K, q, _, L, et) {
            var St = 0;
            if (et === 2) {
              if (!function(ut, gt, $t, Ht) {
                for (var wt = null, Jt = g(ut), Ee = 0; Ee < Jt.length; Ee++) {
                  var cr = Jt[Ee];
                  if (f(cr) === "object" && cr !== null) wt === null && (wt = /* @__PURE__ */ new Set()), wt.add(cr);
                  else if (!gt.has(cr)) {
                    if ($t || !it(ut, gt, cr)) return false;
                    wt === null && (wt = /* @__PURE__ */ new Set()), wt.add(cr);
                  }
                }
                if (wt !== null) {
                  for (var Lr = g(gt), on = 0; on < Lr.length; on++) {
                    var Zr = Lr[on];
                    if (f(Zr) === "object" && Zr !== null) {
                      if (!Lt(wt, Zr, $t, Ht)) return false;
                    } else if (!$t && !ut.has(Zr) && !Lt(wt, Zr, $t, Ht)) return false;
                  }
                  return wt.size === 0;
                }
                return true;
              }(H, K, q, L)) return false;
            } else if (et === 3) {
              if (!function(ut, gt, $t, Ht) {
                for (var wt = null, Jt = b(ut), Ee = 0; Ee < Jt.length; Ee++) {
                  var cr = u(Jt[Ee], 2), Lr = cr[0], on = cr[1];
                  if (f(Lr) === "object" && Lr !== null) wt === null && (wt = /* @__PURE__ */ new Set()), wt.add(Lr);
                  else {
                    var Zr = gt.get(Lr);
                    if (Zr === void 0 && !gt.has(Lr) || !nt(on, Zr, $t, Ht)) {
                      if ($t || !mt(ut, gt, Lr, on, Ht)) return false;
                      wt === null && (wt = /* @__PURE__ */ new Set()), wt.add(Lr);
                    }
                  }
                }
                if (wt !== null) {
                  for (var to = b(gt), qn = 0; qn < to.length; qn++) {
                    var jn = u(to[qn], 2), eo = jn[0], no = jn[1];
                    if (f(eo) === "object" && eo !== null) {
                      if (!Ot(wt, ut, eo, no, $t, Ht)) return false;
                    } else if (!($t || ut.has(eo) && nt(ut.get(eo), no, false, Ht) || Ot(wt, ut, eo, no, false, Ht))) return false;
                  }
                  return wt.size === 0;
                }
                return true;
              }(H, K, q, L)) return false;
            } else if (et === 1) for (; St < H.length; St++) {
              if (!T(H, St)) {
                if (T(K, St)) return false;
                for (var kt = Object.keys(H); St < kt.length; St++) {
                  var ct = kt[St];
                  if (!T(K, ct) || !nt(H[ct], K[ct], q, L)) return false;
                }
                return kt.length === Object.keys(K).length;
              }
              if (!T(K, St) || !nt(H[St], K[St], q, L)) return false;
            }
            for (St = 0; St < _.length; St++) {
              var j = _[St];
              if (!nt(H[j], K[j], q, L)) return false;
            }
            return true;
          }(bt, xt, Ct, At, Tt, Bt);
          return Tt.val1.delete(bt), Tt.val2.delete(xt), tt;
        }
        function Lt(bt, xt, Ct, Tt) {
          for (var Bt = g(bt), At = 0; At < Bt.length; At++) {
            var Ut = Bt[At];
            if (nt(xt, Ut, Ct, Tt)) return bt.delete(Ut), true;
          }
          return false;
        }
        function $(bt) {
          switch (f(bt)) {
            case "undefined":
              return null;
            case "object":
              return;
            case "symbol":
              return false;
            case "string":
              bt = +bt;
            case "number":
              if (c(bt)) return false;
          }
          return true;
        }
        function it(bt, xt, Ct) {
          var Tt = $(Ct);
          return Tt ?? (xt.has(Tt) && !bt.has(Tt));
        }
        function mt(bt, xt, Ct, Tt, Bt) {
          var At = $(Ct);
          if (At != null) return At;
          var Ut = xt.get(At);
          return !(Ut === void 0 && !xt.has(At) || !nt(Tt, Ut, false, Bt)) && !bt.has(At) && nt(Tt, Ut, false, Bt);
        }
        function Ot(bt, xt, Ct, Tt, Bt, At) {
          for (var Ut = g(bt), Vt = 0; Vt < Ut.length; Vt++) {
            var oe = Ut[Vt];
            if (nt(Ct, oe, Bt, At) && nt(Tt, xt.get(oe), Bt, At)) return bt.delete(oe), true;
          }
          return false;
        }
        l.exports = { isDeepEqual: function(bt, xt) {
          return nt(bt, xt, false);
        }, isDeepStrictEqual: function(bt, xt) {
          return nt(bt, xt, true);
        } };
      }, 2464: (l, s, i) => {
        var u = i(8452), d = i(6642);
        l.exports = function() {
          var f = d();
          return u(Number, { isNaN: f }, { isNaN: function() {
            return Number.isNaN !== f;
          } }), f;
        };
      }, 2682: (l, s, i) => {
        var u = i(9600), d = Object.prototype.toString, f = Object.prototype.hasOwnProperty;
        l.exports = function(p, g, b) {
          if (!u(g)) throw new TypeError("iterator must be a function");
          var h, m;
          arguments.length >= 3 && (h = b), m = p, d.call(m) === "[object Array]" ? function(c, w, T) {
            for (var P = 0, k = c.length; P < k; P++) f.call(c, P) && (T == null ? w(c[P], P, c) : w.call(T, c[P], P, c));
          }(p, g, h) : typeof p == "string" ? function(c, w, T) {
            for (var P = 0, k = c.length; P < k; P++) T == null ? w(c.charAt(P), P, c) : w.call(T, c.charAt(P), P, c);
          }(p, g, h) : function(c, w, T) {
            for (var P in c) f.call(c, P) && (T == null ? w(c[P], P, c) : w.call(T, c[P], P, c));
          }(p, g, h);
        };
      }, 2802: (l, s, i) => {
        var u = l.exports = function(d) {
          d = d.toLowerCase();
          var f = u[d];
          if (!f) throw new Error(d + " is not supported (we accept pull requests)");
          return new f();
        };
        u.sha = i(7816), u.sha1 = i(3737), u.sha224 = i(6710), u.sha256 = i(4107), u.sha384 = i(2827), u.sha512 = i(2890);
      }, 2827: (l, s, i) => {
        var u = i(6698), d = i(2890), f = i(392), p = i(2861).Buffer, g = new Array(160);
        function b() {
          this.init(), this._w = g, f.call(this, 128, 112);
        }
        u(b, d), b.prototype.init = function() {
          return this._ah = 3418070365, this._bh = 1654270250, this._ch = 2438529370, this._dh = 355462360, this._eh = 1731405415, this._fh = 2394180231, this._gh = 3675008525, this._hh = 1203062813, this._al = 3238371032, this._bl = 914150663, this._cl = 812702999, this._dl = 4144912697, this._el = 4290775857, this._fl = 1750603025, this._gl = 1694076839, this._hl = 3204075428, this;
        }, b.prototype._hash = function() {
          var h = p.allocUnsafe(48);
          function m(c, w, T) {
            h.writeInt32BE(c, T), h.writeInt32BE(w, T + 4);
          }
          return m(this._ah, this._al, 0), m(this._bh, this._bl, 8), m(this._ch, this._cl, 16), m(this._dh, this._dl, 24), m(this._eh, this._el, 32), m(this._fh, this._fl, 40), h;
        }, l.exports = b;
      }, 2861: (l, s, i) => {
        var u = i(8287), d = u.Buffer;
        function f(g, b) {
          for (var h in g) b[h] = g[h];
        }
        function p(g, b, h) {
          return d(g, b, h);
        }
        d.from && d.alloc && d.allocUnsafe && d.allocUnsafeSlow ? l.exports = u : (f(u, s), s.Buffer = p), p.prototype = Object.create(d.prototype), f(d, p), p.from = function(g, b, h) {
          if (typeof g == "number") throw new TypeError("Argument must not be a number");
          return d(g, b, h);
        }, p.alloc = function(g, b, h) {
          if (typeof g != "number") throw new TypeError("Argument must be a number");
          var m = d(g);
          return b !== void 0 ? typeof h == "string" ? m.fill(b, h) : m.fill(b) : m.fill(0), m;
        }, p.allocUnsafe = function(g) {
          if (typeof g != "number") throw new TypeError("Argument must be a number");
          return d(g);
        }, p.allocUnsafeSlow = function(g) {
          if (typeof g != "number") throw new TypeError("Argument must be a number");
          return u.SlowBuffer(g);
        };
      }, 2890: (l, s, i) => {
        var u = i(6698), d = i(392), f = i(2861).Buffer, p = [1116352408, 3609767458, 1899447441, 602891725, 3049323471, 3964484399, 3921009573, 2173295548, 961987163, 4081628472, 1508970993, 3053834265, 2453635748, 2937671579, 2870763221, 3664609560, 3624381080, 2734883394, 310598401, 1164996542, 607225278, 1323610764, 1426881987, 3590304994, 1925078388, 4068182383, 2162078206, 991336113, 2614888103, 633803317, 3248222580, 3479774868, 3835390401, 2666613458, 4022224774, 944711139, 264347078, 2341262773, 604807628, 2007800933, 770255983, 1495990901, 1249150122, 1856431235, 1555081692, 3175218132, 1996064986, 2198950837, 2554220882, 3999719339, 2821834349, 766784016, 2952996808, 2566594879, 3210313671, 3203337956, 3336571891, 1034457026, 3584528711, 2466948901, 113926993, 3758326383, 338241895, 168717936, 666307205, 1188179964, 773529912, 1546045734, 1294757372, 1522805485, 1396182291, 2643833823, 1695183700, 2343527390, 1986661051, 1014477480, 2177026350, 1206759142, 2456956037, 344077627, 2730485921, 1290863460, 2820302411, 3158454273, 3259730800, 3505952657, 3345764771, 106217008, 3516065817, 3606008344, 3600352804, 1432725776, 4094571909, 1467031594, 275423344, 851169720, 430227734, 3100823752, 506948616, 1363258195, 659060556, 3750685593, 883997877, 3785050280, 958139571, 3318307427, 1322822218, 3812723403, 1537002063, 2003034995, 1747873779, 3602036899, 1955562222, 1575990012, 2024104815, 1125592928, 2227730452, 2716904306, 2361852424, 442776044, 2428436474, 593698344, 2756734187, 3733110249, 3204031479, 2999351573, 3329325298, 3815920427, 3391569614, 3928383900, 3515267271, 566280711, 3940187606, 3454069534, 4118630271, 4000239992, 116418474, 1914138554, 174292421, 2731055270, 289380356, 3203993006, 460393269, 320620315, 685471733, 587496836, 852142971, 1086792851, 1017036298, 365543100, 1126000580, 2618297676, 1288033470, 3409855158, 1501505948, 4234509866, 1607167915, 987167468, 1816402316, 1246189591], g = new Array(160);
        function b() {
          this.init(), this._w = g, d.call(this, 128, 112);
        }
        function h(v, U, M) {
          return M ^ v & (U ^ M);
        }
        function m(v, U, M) {
          return v & U | M & (v | U);
        }
        function c(v, U) {
          return (v >>> 28 | U << 4) ^ (U >>> 2 | v << 30) ^ (U >>> 7 | v << 25);
        }
        function w(v, U) {
          return (v >>> 14 | U << 18) ^ (v >>> 18 | U << 14) ^ (U >>> 9 | v << 23);
        }
        function T(v, U) {
          return (v >>> 1 | U << 31) ^ (v >>> 8 | U << 24) ^ v >>> 7;
        }
        function P(v, U) {
          return (v >>> 1 | U << 31) ^ (v >>> 8 | U << 24) ^ (v >>> 7 | U << 25);
        }
        function k(v, U) {
          return (v >>> 19 | U << 13) ^ (U >>> 29 | v << 3) ^ v >>> 6;
        }
        function R(v, U) {
          return (v >>> 19 | U << 13) ^ (U >>> 29 | v << 3) ^ (v >>> 6 | U << 26);
        }
        function F(v, U) {
          return v >>> 0 < U >>> 0 ? 1 : 0;
        }
        u(b, d), b.prototype.init = function() {
          return this._ah = 1779033703, this._bh = 3144134277, this._ch = 1013904242, this._dh = 2773480762, this._eh = 1359893119, this._fh = 2600822924, this._gh = 528734635, this._hh = 1541459225, this._al = 4089235720, this._bl = 2227873595, this._cl = 4271175723, this._dl = 1595750129, this._el = 2917565137, this._fl = 725511199, this._gl = 4215389547, this._hl = 327033209, this;
        }, b.prototype._update = function(v) {
          for (var U = this._w, M = 0 | this._ah, Z = 0 | this._bh, D = 0 | this._ch, V = 0 | this._dh, S = 0 | this._eh, x = 0 | this._fh, B = 0 | this._gh, W = 0 | this._hh, lt = 0 | this._al, pt = 0 | this._bl, at = 0 | this._cl, rt = 0 | this._dl, ot = 0 | this._el, X = 0 | this._fl, I = 0 | this._gl, nt = 0 | this._hl, ft = 0; ft < 32; ft += 2) U[ft] = v.readInt32BE(4 * ft), U[ft + 1] = v.readInt32BE(4 * ft + 4);
          for (; ft < 160; ft += 2) {
            var dt = U[ft - 30], Lt = U[ft - 30 + 1], $ = T(dt, Lt), it = P(Lt, dt), mt = k(dt = U[ft - 4], Lt = U[ft - 4 + 1]), Ot = R(Lt, dt), bt = U[ft - 14], xt = U[ft - 14 + 1], Ct = U[ft - 32], Tt = U[ft - 32 + 1], Bt = it + xt | 0, At = $ + bt + F(Bt, it) | 0;
            At = (At = At + mt + F(Bt = Bt + Ot | 0, Ot) | 0) + Ct + F(Bt = Bt + Tt | 0, Tt) | 0, U[ft] = At, U[ft + 1] = Bt;
          }
          for (var Ut = 0; Ut < 160; Ut += 2) {
            At = U[Ut], Bt = U[Ut + 1];
            var Vt = m(M, Z, D), oe = m(lt, pt, at), te = c(M, lt), yt = c(lt, M), Mt = w(S, ot), O = w(ot, S), z = p[Ut], J = p[Ut + 1], tt = h(S, x, B), H = h(ot, X, I), K = nt + O | 0, q = W + Mt + F(K, nt) | 0;
            q = (q = (q = q + tt + F(K = K + H | 0, H) | 0) + z + F(K = K + J | 0, J) | 0) + At + F(K = K + Bt | 0, Bt) | 0;
            var _ = yt + oe | 0, L = te + Vt + F(_, yt) | 0;
            W = B, nt = I, B = x, I = X, x = S, X = ot, S = V + q + F(ot = rt + K | 0, rt) | 0, V = D, rt = at, D = Z, at = pt, Z = M, pt = lt, M = q + L + F(lt = K + _ | 0, K) | 0;
          }
          this._al = this._al + lt | 0, this._bl = this._bl + pt | 0, this._cl = this._cl + at | 0, this._dl = this._dl + rt | 0, this._el = this._el + ot | 0, this._fl = this._fl + X | 0, this._gl = this._gl + I | 0, this._hl = this._hl + nt | 0, this._ah = this._ah + M + F(this._al, lt) | 0, this._bh = this._bh + Z + F(this._bl, pt) | 0, this._ch = this._ch + D + F(this._cl, at) | 0, this._dh = this._dh + V + F(this._dl, rt) | 0, this._eh = this._eh + S + F(this._el, ot) | 0, this._fh = this._fh + x + F(this._fl, X) | 0, this._gh = this._gh + B + F(this._gl, I) | 0, this._hh = this._hh + W + F(this._hl, nt) | 0;
        }, b.prototype._hash = function() {
          var v = f.allocUnsafe(64);
          function U(M, Z, D) {
            v.writeInt32BE(M, D), v.writeInt32BE(Z, D + 4);
          }
          return U(this._ah, this._al, 0), U(this._bh, this._bl, 8), U(this._ch, this._cl, 16), U(this._dh, this._dl, 24), U(this._eh, this._el, 32), U(this._fh, this._fl, 40), U(this._gh, this._gl, 48), U(this._hh, this._hl, 56), v;
        }, l.exports = b;
      }, 3003: (l) => {
        l.exports = function(s) {
          return s != s;
        };
      }, 3093: (l, s, i) => {
        var u = i(4459);
        l.exports = function(d) {
          return u(d) || d === 0 ? d : d < 0 ? -1 : 1;
        };
      }, 3126: (l, s, i) => {
        var u = i(6743), d = i(9675), f = i(76), p = i(3144);
        l.exports = function(g) {
          if (g.length < 1 || typeof g[0] != "function") throw new d("a function is required");
          return p(u, f, g);
        };
      }, 3144: (l, s, i) => {
        var u = i(6743), d = i(1002), f = i(76), p = i(7119);
        l.exports = p || u.call(f, d);
      }, 3628: (l, s, i) => {
        var u = i(8648), d = i(1064), f = i(7176);
        l.exports = u ? function(p) {
          return u(p);
        } : d ? function(p) {
          if (!p || typeof p != "object" && typeof p != "function") throw new TypeError("getProto: not an object");
          return d(p);
        } : f ? function(p) {
          return f(p);
        } : null;
      }, 3737: (l, s, i) => {
        var u = i(6698), d = i(392), f = i(2861).Buffer, p = [1518500249, 1859775393, -1894007588, -899497514], g = new Array(80);
        function b() {
          this.init(), this._w = g, d.call(this, 64, 56);
        }
        function h(T) {
          return T << 1 | T >>> 31;
        }
        function m(T) {
          return T << 5 | T >>> 27;
        }
        function c(T) {
          return T << 30 | T >>> 2;
        }
        function w(T, P, k, R) {
          return T === 0 ? P & k | ~P & R : T === 2 ? P & k | P & R | k & R : P ^ k ^ R;
        }
        u(b, d), b.prototype.init = function() {
          return this._a = 1732584193, this._b = 4023233417, this._c = 2562383102, this._d = 271733878, this._e = 3285377520, this;
        }, b.prototype._update = function(T) {
          for (var P = this._w, k = 0 | this._a, R = 0 | this._b, F = 0 | this._c, v = 0 | this._d, U = 0 | this._e, M = 0; M < 16; ++M) P[M] = T.readInt32BE(4 * M);
          for (; M < 80; ++M) P[M] = h(P[M - 3] ^ P[M - 8] ^ P[M - 14] ^ P[M - 16]);
          for (var Z = 0; Z < 80; ++Z) {
            var D = ~~(Z / 20), V = m(k) + w(D, R, F, v) + U + P[Z] + p[D] | 0;
            U = v, v = F, F = c(R), R = k, k = V;
          }
          this._a = k + this._a | 0, this._b = R + this._b | 0, this._c = F + this._c | 0, this._d = v + this._d | 0, this._e = U + this._e | 0;
        }, b.prototype._hash = function() {
          var T = f.allocUnsafe(20);
          return T.writeInt32BE(0 | this._a, 0), T.writeInt32BE(0 | this._b, 4), T.writeInt32BE(0 | this._c, 8), T.writeInt32BE(0 | this._d, 12), T.writeInt32BE(0 | this._e, 16), T;
        }, l.exports = b;
      }, 3740: function(l, s, i) {
        var u, d = i(6763);
        u = () => (() => {
          var f = { 616: (b, h, m) => {
            m.d(h, { A: () => w });
            var c = m(287);
            c.hp.alloc(1).subarray(0, 1) instanceof c.hp || (c.hp.prototype.subarray = function(T, P) {
              const k = Uint8Array.prototype.subarray.call(this, T, P);
              return Object.setPrototypeOf(k, c.hp.prototype), k;
            });
            const w = c.hp;
          }, 281: (b, h, m) => {
            const c = m(164);
            b.exports = c;
          }, 164: (b, h, m) => {
            m.r(h), m.d(h, { Array: () => At, Bool: () => mt, Double: () => $, Enum: () => te, Float: () => Lt, Hyper: () => I, Int: () => at, LargeInt: () => X, Opaque: () => Ct, Option: () => Vt, Quadruple: () => it, Reference: () => yt, String: () => bt, Struct: () => Mt, Union: () => z, UnsignedHyper: () => dt, UnsignedInt: () => ft, VarArray: () => Ut, VarOpaque: () => Bt, Void: () => oe, XdrReader: () => R, XdrWriter: () => U, config: () => St });
            class c extends TypeError {
              constructor(ct) {
                super(`XDR Write Error: ${ct}`);
              }
            }
            class w extends TypeError {
              constructor(ct) {
                super(`XDR Read Error: ${ct}`);
              }
            }
            class T extends TypeError {
              constructor(ct) {
                super(`XDR Type Definition Error: ${ct}`);
              }
            }
            class P extends T {
              constructor() {
                super("method not implemented, it should be overloaded in the descendant class.");
              }
            }
            var k = m(616).A;
            class R {
              constructor(ct) {
                __publicField(this, "_buffer");
                __publicField(this, "_length");
                __publicField(this, "_index");
                if (!k.isBuffer(ct)) {
                  if (!(ct instanceof Array || Array.isArray(ct) || ArrayBuffer.isView(ct))) throw new w(`source invalid: ${ct}`);
                  ct = k.from(ct);
                }
                this._buffer = ct, this._length = ct.length, this._index = 0;
              }
              get eof() {
                return this._index === this._length;
              }
              advance(ct) {
                const j = this._index;
                if (this._index += ct, this._length < this._index) throw new w("attempt to read outside the boundary of the buffer");
                const ut = 4 - (ct % 4 || 4);
                if (ut > 0) {
                  for (let gt = 0; gt < ut; gt++) if (this._buffer[this._index + gt] !== 0) throw new w("invalid padding");
                  this._index += ut;
                }
                return j;
              }
              rewind() {
                this._index = 0;
              }
              read(ct) {
                const j = this.advance(ct);
                return this._buffer.subarray(j, j + ct);
              }
              readInt32BE() {
                return this._buffer.readInt32BE(this.advance(4));
              }
              readUInt32BE() {
                return this._buffer.readUInt32BE(this.advance(4));
              }
              readBigInt64BE() {
                return this._buffer.readBigInt64BE(this.advance(8));
              }
              readBigUInt64BE() {
                return this._buffer.readBigUInt64BE(this.advance(8));
              }
              readFloatBE() {
                return this._buffer.readFloatBE(this.advance(4));
              }
              readDoubleBE() {
                return this._buffer.readDoubleBE(this.advance(8));
              }
              ensureInputConsumed() {
                if (this._index !== this._length) throw new w("invalid XDR contract typecast - source buffer not entirely consumed");
              }
            }
            var F = m(616).A;
            const v = 8192;
            class U {
              constructor(ct) {
                __publicField(this, "_buffer");
                __publicField(this, "_length");
                __publicField(this, "_index", 0);
                typeof ct == "number" ? ct = F.allocUnsafe(ct) : ct instanceof F || (ct = F.allocUnsafe(v)), this._buffer = ct, this._length = ct.length;
              }
              alloc(ct) {
                const j = this._index;
                return this._index += ct, this._length < this._index && this.resize(this._index), j;
              }
              resize(ct) {
                const j = Math.ceil(ct / v) * v, ut = F.allocUnsafe(j);
                this._buffer.copy(ut, 0, 0, this._length), this._buffer = ut, this._length = j;
              }
              finalize() {
                return this._buffer.subarray(0, this._index);
              }
              toArray() {
                return [...this.finalize()];
              }
              write(ct, j) {
                if (typeof ct == "string") {
                  const gt = this.alloc(j);
                  this._buffer.write(ct, gt, "utf8");
                } else {
                  ct instanceof F || (ct = F.from(ct));
                  const gt = this.alloc(j);
                  ct.copy(this._buffer, gt, 0, j);
                }
                const ut = 4 - (j % 4 || 4);
                if (ut > 0) {
                  const gt = this.alloc(ut);
                  this._buffer.fill(0, gt, this._index);
                }
              }
              writeInt32BE(ct) {
                const j = this.alloc(4);
                this._buffer.writeInt32BE(ct, j);
              }
              writeUInt32BE(ct) {
                const j = this.alloc(4);
                this._buffer.writeUInt32BE(ct, j);
              }
              writeBigInt64BE(ct) {
                const j = this.alloc(8);
                this._buffer.writeBigInt64BE(ct, j);
              }
              writeBigUInt64BE(ct) {
                const j = this.alloc(8);
                this._buffer.writeBigUInt64BE(ct, j);
              }
              writeFloatBE(ct) {
                const j = this.alloc(4);
                this._buffer.writeFloatBE(ct, j);
              }
              writeDoubleBE(ct) {
                const j = this.alloc(8);
                this._buffer.writeDoubleBE(ct, j);
              }
            }
            __publicField(U, "bufferChunkSize", v);
            var M = m(616).A;
            class Z {
              toXDR(ct = "raw") {
                if (!this.write) return this.constructor.toXDR(this, ct);
                const j = new U();
                return this.write(this, j), x(j.finalize(), ct);
              }
              fromXDR(ct, j = "raw") {
                if (!this.read) return this.constructor.fromXDR(ct, j);
                const ut = new R(B(ct, j)), gt = this.read(ut);
                return ut.ensureInputConsumed(), gt;
              }
              validateXDR(ct, j = "raw") {
                try {
                  return this.fromXDR(ct, j), true;
                } catch {
                  return false;
                }
              }
              static toXDR(ct, j = "raw") {
                const ut = new U();
                return this.write(ct, ut), x(ut.finalize(), j);
              }
              static fromXDR(ct, j = "raw") {
                const ut = new R(B(ct, j)), gt = this.read(ut);
                return ut.ensureInputConsumed(), gt;
              }
              static validateXDR(ct, j = "raw") {
                try {
                  return this.fromXDR(ct, j), true;
                } catch {
                  return false;
                }
              }
            }
            class D extends Z {
              static read(ct) {
                throw new P();
              }
              static write(ct, j) {
                throw new P();
              }
              static isValid(ct) {
                return false;
              }
            }
            class V extends Z {
              isValid(ct) {
                return false;
              }
            }
            class S extends TypeError {
              constructor(ct) {
                super(`Invalid format ${ct}, must be one of "raw", "hex", "base64"`);
              }
            }
            function x(kt, ct) {
              switch (ct) {
                case "raw":
                  return kt;
                case "hex":
                  return kt.toString("hex");
                case "base64":
                  return kt.toString("base64");
                default:
                  throw new S(ct);
              }
            }
            function B(kt, ct) {
              switch (ct) {
                case "raw":
                  return kt;
                case "hex":
                  return M.from(kt, "hex");
                case "base64":
                  return M.from(kt, "base64");
                default:
                  throw new S(ct);
              }
            }
            function W(kt, ct) {
              return kt != null && (kt instanceof ct || lt(kt, ct) && typeof kt.constructor.read == "function" && typeof kt.constructor.write == "function" && lt(kt, "XdrType"));
            }
            function lt(kt, ct) {
              do
                if (kt.constructor.name === ct) return true;
              while (kt = Object.getPrototypeOf(kt));
              return false;
            }
            const pt = 2147483647;
            class at extends D {
              static read(ct) {
                return ct.readInt32BE();
              }
              static write(ct, j) {
                if (typeof ct != "number") throw new c("not a number");
                if ((0 | ct) !== ct) throw new c("invalid i32 value");
                j.writeInt32BE(ct);
              }
              static isValid(ct) {
                return typeof ct == "number" && (0 | ct) === ct && ct >= -2147483648 && ct <= pt;
              }
            }
            function rt(kt, ct, j) {
              if (typeof kt != "bigint") throw new TypeError("Expected bigint 'value', got " + typeof kt);
              const ut = ct / j;
              if (ut === 1) return [kt];
              if (j < 32 || j > 128 || ut !== 2 && ut !== 4 && ut !== 8) throw new TypeError(`invalid bigint (${kt}) and slice size (${ct} -> ${j}) combination`);
              const gt = BigInt(j), $t = new Array(ut);
              for (let Ht = 0; Ht < ut; Ht++) $t[Ht] = BigInt.asIntN(j, kt), kt >>= gt;
              return $t;
            }
            function ot(kt, ct) {
              if (ct) return [0n, (1n << BigInt(kt)) - 1n];
              const j = 1n << BigInt(kt - 1);
              return [0n - j, j - 1n];
            }
            at.MAX_VALUE = pt, at.MIN_VALUE = 2147483648;
            class X extends D {
              constructor(ct) {
                super(), this._value = function(j, ut, gt) {
                  j instanceof Array ? j.length && j[0] instanceof Array && (j = j[0]) : j = [j];
                  const $t = ut / j.length;
                  switch ($t) {
                    case 32:
                    case 64:
                    case 128:
                    case 256:
                      break;
                    default:
                      throw new RangeError(`expected slices to fit in 32/64/128/256 bits, got ${j}`);
                  }
                  try {
                    for (let Ee = 0; Ee < j.length; Ee++) typeof j[Ee] != "bigint" && (j[Ee] = BigInt(j[Ee].valueOf()));
                  } catch (Ee) {
                    throw new TypeError(`expected bigint-like values, got: ${j} (${Ee})`);
                  }
                  if (gt && j.length === 1 && j[0] < 0n) throw new RangeError(`expected a positive value, got: ${j}`);
                  let Ht = BigInt.asUintN($t, j[0]);
                  for (let Ee = 1; Ee < j.length; Ee++) Ht |= BigInt.asUintN($t, j[Ee]) << BigInt(Ee * $t);
                  gt || (Ht = BigInt.asIntN(ut, Ht));
                  const [wt, Jt] = ot(ut, gt);
                  if (Ht >= wt && Ht <= Jt) return Ht;
                  throw new TypeError(`bigint values [${j}] for ${function(Ee, cr) {
                    return `${cr ? "u" : "i"}${Ee}`;
                  }(ut, gt)} out of range [${wt}, ${Jt}]: ${Ht}`);
                }(ct, this.size, this.unsigned);
              }
              get unsigned() {
                throw new P();
              }
              get size() {
                throw new P();
              }
              slice(ct) {
                return rt(this._value, this.size, ct);
              }
              toString() {
                return this._value.toString();
              }
              toJSON() {
                return { _value: this._value.toString() };
              }
              toBigInt() {
                return BigInt(this._value);
              }
              static read(ct) {
                const { size: j } = this.prototype;
                return j === 64 ? new this(ct.readBigUInt64BE()) : new this(...Array.from({ length: j / 64 }, () => ct.readBigUInt64BE()).reverse());
              }
              static write(ct, j) {
                if (ct instanceof this) ct = ct._value;
                else if (typeof ct != "bigint" || ct > this.MAX_VALUE || ct < this.MIN_VALUE) throw new c(`${ct} is not a ${this.name}`);
                const { unsigned: ut, size: gt } = this.prototype;
                if (gt === 64) ut ? j.writeBigUInt64BE(ct) : j.writeBigInt64BE(ct);
                else for (const $t of rt(ct, gt, 64).reverse()) ut ? j.writeBigUInt64BE($t) : j.writeBigInt64BE($t);
              }
              static isValid(ct) {
                return typeof ct == "bigint" || ct instanceof this;
              }
              static fromString(ct) {
                return new this(ct);
              }
              static defineIntBoundaries() {
                const [ct, j] = ot(this.prototype.size, this.prototype.unsigned);
                this.MIN_VALUE = ct, this.MAX_VALUE = j;
              }
            }
            __publicField(X, "MAX_VALUE", 0n);
            __publicField(X, "MIN_VALUE", 0n);
            class I extends X {
              constructor(...ct) {
                super(ct);
              }
              get low() {
                return 0 | Number(0xffffffffn & this._value);
              }
              get high() {
                return 0 | Number(this._value >> 32n);
              }
              get size() {
                return 64;
              }
              get unsigned() {
                return false;
              }
              static fromBits(ct, j) {
                return new this(ct, j);
              }
            }
            I.defineIntBoundaries();
            const nt = 4294967295;
            class ft extends D {
              static read(ct) {
                return ct.readUInt32BE();
              }
              static write(ct, j) {
                if (typeof ct != "number" || !(ct >= 0 && ct <= nt) || ct % 1 != 0) throw new c("invalid u32 value");
                j.writeUInt32BE(ct);
              }
              static isValid(ct) {
                return typeof ct == "number" && ct % 1 == 0 && ct >= 0 && ct <= nt;
              }
            }
            ft.MAX_VALUE = nt, ft.MIN_VALUE = 0;
            class dt extends X {
              constructor(...ct) {
                super(ct);
              }
              get low() {
                return 0 | Number(0xffffffffn & this._value);
              }
              get high() {
                return 0 | Number(this._value >> 32n);
              }
              get size() {
                return 64;
              }
              get unsigned() {
                return true;
              }
              static fromBits(ct, j) {
                return new this(ct, j);
              }
            }
            dt.defineIntBoundaries();
            class Lt extends D {
              static read(ct) {
                return ct.readFloatBE();
              }
              static write(ct, j) {
                if (typeof ct != "number") throw new c("not a number");
                j.writeFloatBE(ct);
              }
              static isValid(ct) {
                return typeof ct == "number";
              }
            }
            class $ extends D {
              static read(ct) {
                return ct.readDoubleBE();
              }
              static write(ct, j) {
                if (typeof ct != "number") throw new c("not a number");
                j.writeDoubleBE(ct);
              }
              static isValid(ct) {
                return typeof ct == "number";
              }
            }
            class it extends D {
              static read() {
                throw new T("quadruple not supported");
              }
              static write() {
                throw new T("quadruple not supported");
              }
              static isValid() {
                return false;
              }
            }
            class mt extends D {
              static read(ct) {
                const j = at.read(ct);
                switch (j) {
                  case 0:
                    return false;
                  case 1:
                    return true;
                  default:
                    throw new w(`got ${j} when trying to read a bool`);
                }
              }
              static write(ct, j) {
                const ut = ct ? 1 : 0;
                at.write(ut, j);
              }
              static isValid(ct) {
                return typeof ct == "boolean";
              }
            }
            var Ot = m(616).A;
            class bt extends V {
              constructor(ct = ft.MAX_VALUE) {
                super(), this._maxLength = ct;
              }
              read(ct) {
                const j = ft.read(ct);
                if (j > this._maxLength) throw new w(`saw ${j} length String, max allowed is ${this._maxLength}`);
                return ct.read(j);
              }
              readString(ct) {
                return this.read(ct).toString("utf8");
              }
              write(ct, j) {
                const ut = typeof ct == "string" ? Ot.byteLength(ct, "utf8") : ct.length;
                if (ut > this._maxLength) throw new c(`got ${ct.length} bytes, max allowed is ${this._maxLength}`);
                ft.write(ut, j), j.write(ct, ut);
              }
              isValid(ct) {
                return typeof ct == "string" ? Ot.byteLength(ct, "utf8") <= this._maxLength : !!(ct instanceof Array || Ot.isBuffer(ct)) && ct.length <= this._maxLength;
              }
            }
            var xt = m(616).A;
            class Ct extends V {
              constructor(ct) {
                super(), this._length = ct;
              }
              read(ct) {
                return ct.read(this._length);
              }
              write(ct, j) {
                const { length: ut } = ct;
                if (ut !== this._length) throw new c(`got ${ct.length} bytes, expected ${this._length}`);
                j.write(ct, ut);
              }
              isValid(ct) {
                return xt.isBuffer(ct) && ct.length === this._length;
              }
            }
            var Tt = m(616).A;
            class Bt extends V {
              constructor(ct = ft.MAX_VALUE) {
                super(), this._maxLength = ct;
              }
              read(ct) {
                const j = ft.read(ct);
                if (j > this._maxLength) throw new w(`saw ${j} length VarOpaque, max allowed is ${this._maxLength}`);
                return ct.read(j);
              }
              write(ct, j) {
                const { length: ut } = ct;
                if (ct.length > this._maxLength) throw new c(`got ${ct.length} bytes, max allowed is ${this._maxLength}`);
                ft.write(ut, j), j.write(ct, ut);
              }
              isValid(ct) {
                return Tt.isBuffer(ct) && ct.length <= this._maxLength;
              }
            }
            class At extends V {
              constructor(ct, j) {
                super(), this._childType = ct, this._length = j;
              }
              read(ct) {
                const j = new m.g.Array(this._length);
                for (let ut = 0; ut < this._length; ut++) j[ut] = this._childType.read(ct);
                return j;
              }
              write(ct, j) {
                if (!m.g.Array.isArray(ct)) throw new c("value is not array");
                if (ct.length !== this._length) throw new c(`got array of size ${ct.length}, expected ${this._length}`);
                for (const ut of ct) this._childType.write(ut, j);
              }
              isValid(ct) {
                if (!(ct instanceof m.g.Array) || ct.length !== this._length) return false;
                for (const j of ct) if (!this._childType.isValid(j)) return false;
                return true;
              }
            }
            class Ut extends V {
              constructor(ct, j = ft.MAX_VALUE) {
                super(), this._childType = ct, this._maxLength = j;
              }
              read(ct) {
                const j = ft.read(ct);
                if (j > this._maxLength) throw new w(`saw ${j} length VarArray, max allowed is ${this._maxLength}`);
                const ut = new Array(j);
                for (let gt = 0; gt < j; gt++) ut[gt] = this._childType.read(ct);
                return ut;
              }
              write(ct, j) {
                if (!(ct instanceof Array)) throw new c("value is not array");
                if (ct.length > this._maxLength) throw new c(`got array of size ${ct.length}, max allowed is ${this._maxLength}`);
                ft.write(ct.length, j);
                for (const ut of ct) this._childType.write(ut, j);
              }
              isValid(ct) {
                if (!(ct instanceof Array) || ct.length > this._maxLength) return false;
                for (const j of ct) if (!this._childType.isValid(j)) return false;
                return true;
              }
            }
            class Vt extends D {
              constructor(ct) {
                super(), this._childType = ct;
              }
              read(ct) {
                if (mt.read(ct)) return this._childType.read(ct);
              }
              write(ct, j) {
                const ut = ct != null;
                mt.write(ut, j), ut && this._childType.write(ct, j);
              }
              isValid(ct) {
                return ct == null || this._childType.isValid(ct);
              }
            }
            class oe extends D {
              static read() {
              }
              static write(ct) {
                if (ct !== void 0) throw new c("trying to write value to a void slot");
              }
              static isValid(ct) {
                return ct === void 0;
              }
            }
            class te extends D {
              constructor(ct, j) {
                super(), this.name = ct, this.value = j;
              }
              static read(ct) {
                const j = at.read(ct), ut = this._byValue[j];
                if (ut === void 0) throw new w(`unknown ${this.enumName} member for value ${j}`);
                return ut;
              }
              static write(ct, j) {
                if (!this.isValid(ct)) throw new c(`${ct} has enum name ${ct == null ? void 0 : ct.enumName}, not ${this.enumName}: ${JSON.stringify(ct)}`);
                at.write(ct.value, j);
              }
              static isValid(ct) {
                var _a2;
                return ((_a2 = ct == null ? void 0 : ct.constructor) == null ? void 0 : _a2.enumName) === this.enumName || W(ct, this);
              }
              static members() {
                return this._members;
              }
              static values() {
                return Object.values(this._members);
              }
              static fromName(ct) {
                const j = this._members[ct];
                if (!j) throw new TypeError(`${ct} is not a member of ${this.enumName}`);
                return j;
              }
              static fromValue(ct) {
                const j = this._byValue[ct];
                if (j === void 0) throw new TypeError(`${ct} is not a value of any member of ${this.enumName}`);
                return j;
              }
              static create(ct, j, ut) {
                const gt = class extends te {
                };
                gt.enumName = j, ct.results[j] = gt, gt._members = {}, gt._byValue = {};
                for (const [$t, Ht] of Object.entries(ut)) {
                  const wt = new gt($t, Ht);
                  gt._members[$t] = wt, gt._byValue[Ht] = wt, gt[$t] = () => wt;
                }
                return gt;
              }
            }
            class yt extends D {
              resolve() {
                throw new T('"resolve" method should be implemented in the descendant class');
              }
            }
            class Mt extends V {
              constructor(ct) {
                super(), this._attributes = ct || {};
              }
              static read(ct) {
                const j = {};
                for (const [ut, gt] of this._fields) j[ut] = gt.read(ct);
                return new this(j);
              }
              static write(ct, j) {
                var _a2;
                if (!this.isValid(ct)) throw new c(`${ct} has struct name ${(_a2 = ct == null ? void 0 : ct.constructor) == null ? void 0 : _a2.structName}, not ${this.structName}: ${JSON.stringify(ct)}`);
                for (const [ut, gt] of this._fields) {
                  const $t = ct._attributes[ut];
                  gt.write($t, j);
                }
              }
              static isValid(ct) {
                var _a2;
                return ((_a2 = ct == null ? void 0 : ct.constructor) == null ? void 0 : _a2.structName) === this.structName || W(ct, this);
              }
              static create(ct, j, ut) {
                const gt = class extends Mt {
                };
                gt.structName = j, ct.results[j] = gt;
                const $t = new Array(ut.length);
                for (let Ht = 0; Ht < ut.length; Ht++) {
                  const wt = ut[Ht], Jt = wt[0];
                  let Ee = wt[1];
                  Ee instanceof yt && (Ee = Ee.resolve(ct)), $t[Ht] = [Jt, Ee], gt.prototype[Jt] = O(Jt);
                }
                return gt._fields = $t, gt;
              }
            }
            function O(kt) {
              return function(ct) {
                return ct !== void 0 && (this._attributes[kt] = ct), this._attributes[kt];
              };
            }
            class z extends V {
              constructor(ct, j) {
                super(), this.set(ct, j);
              }
              set(ct, j) {
                typeof ct == "string" && (ct = this.constructor._switchOn.fromName(ct)), this._switch = ct;
                const ut = this.constructor.armForSwitch(this._switch);
                this._arm = ut, this._armType = ut === oe ? oe : this.constructor._arms[ut], this._value = j;
              }
              get(ct = this._arm) {
                if (this._arm !== oe && this._arm !== ct) throw new TypeError(`${ct} not set`);
                return this._value;
              }
              switch() {
                return this._switch;
              }
              arm() {
                return this._arm;
              }
              armType() {
                return this._armType;
              }
              value() {
                return this._value;
              }
              static armForSwitch(ct) {
                const j = this._switches.get(ct);
                if (j !== void 0) return j;
                if (this._defaultArm) return this._defaultArm;
                throw new TypeError(`Bad union switch: ${ct}`);
              }
              static armTypeForArm(ct) {
                return ct === oe ? oe : this._arms[ct];
              }
              static read(ct) {
                const j = this._switchOn.read(ct), ut = this.armForSwitch(j), gt = ut === oe ? oe : this._arms[ut];
                let $t;
                return $t = gt !== void 0 ? gt.read(ct) : ut.read(ct), new this(j, $t);
              }
              static write(ct, j) {
                if (!this.isValid(ct)) throw new c(`${ct} has union name ${ct == null ? void 0 : ct.unionName}, not ${this.unionName}: ${JSON.stringify(ct)}`);
                this._switchOn.write(ct.switch(), j), ct.armType().write(ct.value(), j);
              }
              static isValid(ct) {
                var _a2;
                return ((_a2 = ct == null ? void 0 : ct.constructor) == null ? void 0 : _a2.unionName) === this.unionName || W(ct, this);
              }
              static create(ct, j, ut) {
                const gt = class extends z {
                };
                gt.unionName = j, ct.results[j] = gt, ut.switchOn instanceof yt ? gt._switchOn = ut.switchOn.resolve(ct) : gt._switchOn = ut.switchOn, gt._switches = /* @__PURE__ */ new Map(), gt._arms = {};
                let $t = ut.defaultArm;
                $t instanceof yt && ($t = $t.resolve(ct)), gt._defaultArm = $t;
                for (const [Ht, wt] of ut.switches) {
                  const Jt = typeof Ht == "string" ? gt._switchOn.fromName(Ht) : Ht;
                  gt._switches.set(Jt, wt);
                }
                if (gt._switchOn.values !== void 0) for (const Ht of gt._switchOn.values()) gt[Ht.name] = function(wt) {
                  return new gt(Ht, wt);
                }, gt.prototype[Ht.name] = function(wt) {
                  return this.set(Ht, wt);
                };
                if (ut.arms) for (const [Ht, wt] of Object.entries(ut.arms)) gt._arms[Ht] = wt instanceof yt ? wt.resolve(ct) : wt, wt !== oe && (gt.prototype[Ht] = function() {
                  return this.get(Ht);
                });
                return gt;
              }
            }
            class J extends yt {
              constructor(ct) {
                super(), this.name = ct;
              }
              resolve(ct) {
                return ct.definitions[this.name].resolve(ct);
              }
            }
            class tt extends yt {
              constructor(ct, j, ut = false) {
                super(), this.childReference = ct, this.length = j, this.variable = ut;
              }
              resolve(ct) {
                let j = this.childReference, ut = this.length;
                return j instanceof yt && (j = j.resolve(ct)), ut instanceof yt && (ut = ut.resolve(ct)), this.variable ? new Ut(j, ut) : new At(j, ut);
              }
            }
            class H extends yt {
              constructor(ct) {
                super(), this.childReference = ct, this.name = ct.name;
              }
              resolve(ct) {
                let j = this.childReference;
                return j instanceof yt && (j = j.resolve(ct)), new Vt(j);
              }
            }
            class K extends yt {
              constructor(ct, j) {
                super(), this.sizedType = ct, this.length = j;
              }
              resolve(ct) {
                let j = this.length;
                return j instanceof yt && (j = j.resolve(ct)), new this.sizedType(j);
              }
            }
            class q {
              constructor(ct, j, ut) {
                this.constructor = ct, this.name = j, this.config = ut;
              }
              resolve(ct) {
                return this.name in ct.results ? ct.results[this.name] : this.constructor(ct, this.name, this.config);
              }
            }
            function _(kt, ct, j) {
              return j instanceof yt && (j = j.resolve(kt)), kt.results[ct] = j, j;
            }
            function L(kt, ct, j) {
              return kt.results[ct] = j, j;
            }
            class et {
              constructor(ct) {
                this._destination = ct, this._definitions = {};
              }
              enum(ct, j) {
                const ut = new q(te.create, ct, j);
                this.define(ct, ut);
              }
              struct(ct, j) {
                const ut = new q(Mt.create, ct, j);
                this.define(ct, ut);
              }
              union(ct, j) {
                const ut = new q(z.create, ct, j);
                this.define(ct, ut);
              }
              typedef(ct, j) {
                const ut = new q(_, ct, j);
                this.define(ct, ut);
              }
              const(ct, j) {
                const ut = new q(L, ct, j);
                this.define(ct, ut);
              }
              void() {
                return oe;
              }
              bool() {
                return mt;
              }
              int() {
                return at;
              }
              hyper() {
                return I;
              }
              uint() {
                return ft;
              }
              uhyper() {
                return dt;
              }
              float() {
                return Lt;
              }
              double() {
                return $;
              }
              quadruple() {
                return it;
              }
              string(ct) {
                return new K(bt, ct);
              }
              opaque(ct) {
                return new K(Ct, ct);
              }
              varOpaque(ct) {
                return new K(Bt, ct);
              }
              array(ct, j) {
                return new tt(ct, j);
              }
              varArray(ct, j) {
                return new tt(ct, j, true);
              }
              option(ct) {
                return new H(ct);
              }
              define(ct, j) {
                if (this._destination[ct] !== void 0) throw new T(`${ct} is already defined`);
                this._definitions[ct] = j;
              }
              lookup(ct) {
                return new J(ct);
              }
              resolve() {
                for (const ct of Object.values(this._definitions)) ct.resolve({ definitions: this._definitions, results: this._destination });
              }
            }
            function St(kt, ct = {}) {
              if (kt) {
                const j = new et(ct);
                kt(j), j.resolve();
              }
              return ct;
            }
          }, 526: (b, h) => {
            h.byteLength = function(F) {
              var v = k(F), U = v[0], M = v[1];
              return 3 * (U + M) / 4 - M;
            }, h.toByteArray = function(F) {
              var v, U, M = k(F), Z = M[0], D = M[1], V = new w(function(B, W, lt) {
                return 3 * (W + lt) / 4 - lt;
              }(0, Z, D)), S = 0, x = D > 0 ? Z - 4 : Z;
              for (U = 0; U < x; U += 4) v = c[F.charCodeAt(U)] << 18 | c[F.charCodeAt(U + 1)] << 12 | c[F.charCodeAt(U + 2)] << 6 | c[F.charCodeAt(U + 3)], V[S++] = v >> 16 & 255, V[S++] = v >> 8 & 255, V[S++] = 255 & v;
              return D === 2 && (v = c[F.charCodeAt(U)] << 2 | c[F.charCodeAt(U + 1)] >> 4, V[S++] = 255 & v), D === 1 && (v = c[F.charCodeAt(U)] << 10 | c[F.charCodeAt(U + 1)] << 4 | c[F.charCodeAt(U + 2)] >> 2, V[S++] = v >> 8 & 255, V[S++] = 255 & v), V;
            }, h.fromByteArray = function(F) {
              for (var v, U = F.length, M = U % 3, Z = [], D = 16383, V = 0, S = U - M; V < S; V += D) Z.push(R(F, V, V + D > S ? S : V + D));
              return M === 1 ? (v = F[U - 1], Z.push(m[v >> 2] + m[v << 4 & 63] + "==")) : M === 2 && (v = (F[U - 2] << 8) + F[U - 1], Z.push(m[v >> 10] + m[v >> 4 & 63] + m[v << 2 & 63] + "=")), Z.join("");
            };
            for (var m = [], c = [], w = typeof Uint8Array < "u" ? Uint8Array : Array, T = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/", P = 0; P < 64; ++P) m[P] = T[P], c[T.charCodeAt(P)] = P;
            function k(F) {
              var v = F.length;
              if (v % 4 > 0) throw new Error("Invalid string. Length must be a multiple of 4");
              var U = F.indexOf("=");
              return U === -1 && (U = v), [U, U === v ? 0 : 4 - U % 4];
            }
            function R(F, v, U) {
              for (var M, Z, D = [], V = v; V < U; V += 3) M = (F[V] << 16 & 16711680) + (F[V + 1] << 8 & 65280) + (255 & F[V + 2]), D.push(m[(Z = M) >> 18 & 63] + m[Z >> 12 & 63] + m[Z >> 6 & 63] + m[63 & Z]);
              return D.join("");
            }
            c[45] = 62, c[95] = 63;
          }, 287: (b, h, m) => {
            const c = m(526), w = m(251), T = typeof Symbol == "function" && typeof Symbol.for == "function" ? Symbol.for("nodejs.util.inspect.custom") : null;
            h.hp = R, h.IS = 50;
            const P = 2147483647;
            function k(_) {
              if (_ > P) throw new RangeError('The value "' + _ + '" is invalid for option "size"');
              const L = new Uint8Array(_);
              return Object.setPrototypeOf(L, R.prototype), L;
            }
            function R(_, L, et) {
              if (typeof _ == "number") {
                if (typeof L == "string") throw new TypeError('The "string" argument must be of type string. Received type number');
                return U(_);
              }
              return F(_, L, et);
            }
            function F(_, L, et) {
              if (typeof _ == "string") return function(ct, j) {
                if (typeof j == "string" && j !== "" || (j = "utf8"), !R.isEncoding(j)) throw new TypeError("Unknown encoding: " + j);
                const ut = 0 | V(ct, j);
                let gt = k(ut);
                const $t = gt.write(ct, j);
                return $t !== ut && (gt = gt.slice(0, $t)), gt;
              }(_, L);
              if (ArrayBuffer.isView(_)) return function(ct) {
                if (J(ct, Uint8Array)) {
                  const j = new Uint8Array(ct);
                  return Z(j.buffer, j.byteOffset, j.byteLength);
                }
                return M(ct);
              }(_);
              if (_ == null) throw new TypeError("The first argument must be one of type string, Buffer, ArrayBuffer, Array, or Array-like Object. Received type " + typeof _);
              if (J(_, ArrayBuffer) || _ && J(_.buffer, ArrayBuffer) || typeof SharedArrayBuffer < "u" && (J(_, SharedArrayBuffer) || _ && J(_.buffer, SharedArrayBuffer))) return Z(_, L, et);
              if (typeof _ == "number") throw new TypeError('The "value" argument must not be of type number. Received type number');
              const St = _.valueOf && _.valueOf();
              if (St != null && St !== _) return R.from(St, L, et);
              const kt = function(ct) {
                if (R.isBuffer(ct)) {
                  const j = 0 | D(ct.length), ut = k(j);
                  return ut.length === 0 || ct.copy(ut, 0, 0, j), ut;
                }
                return ct.length !== void 0 ? typeof ct.length != "number" || tt(ct.length) ? k(0) : M(ct) : ct.type === "Buffer" && Array.isArray(ct.data) ? M(ct.data) : void 0;
              }(_);
              if (kt) return kt;
              if (typeof Symbol < "u" && Symbol.toPrimitive != null && typeof _[Symbol.toPrimitive] == "function") return R.from(_[Symbol.toPrimitive]("string"), L, et);
              throw new TypeError("The first argument must be one of type string, Buffer, ArrayBuffer, Array, or Array-like Object. Received type " + typeof _);
            }
            function v(_) {
              if (typeof _ != "number") throw new TypeError('"size" argument must be of type number');
              if (_ < 0) throw new RangeError('The value "' + _ + '" is invalid for option "size"');
            }
            function U(_) {
              return v(_), k(_ < 0 ? 0 : 0 | D(_));
            }
            function M(_) {
              const L = _.length < 0 ? 0 : 0 | D(_.length), et = k(L);
              for (let St = 0; St < L; St += 1) et[St] = 255 & _[St];
              return et;
            }
            function Z(_, L, et) {
              if (L < 0 || _.byteLength < L) throw new RangeError('"offset" is outside of buffer bounds');
              if (_.byteLength < L + (et || 0)) throw new RangeError('"length" is outside of buffer bounds');
              let St;
              return St = L === void 0 && et === void 0 ? new Uint8Array(_) : et === void 0 ? new Uint8Array(_, L) : new Uint8Array(_, L, et), Object.setPrototypeOf(St, R.prototype), St;
            }
            function D(_) {
              if (_ >= P) throw new RangeError("Attempt to allocate Buffer larger than maximum size: 0x" + P.toString(16) + " bytes");
              return 0 | _;
            }
            function V(_, L) {
              if (R.isBuffer(_)) return _.length;
              if (ArrayBuffer.isView(_) || J(_, ArrayBuffer)) return _.byteLength;
              if (typeof _ != "string") throw new TypeError('The "string" argument must be one of type string, Buffer, or ArrayBuffer. Received type ' + typeof _);
              const et = _.length, St = arguments.length > 2 && arguments[2] === true;
              if (!St && et === 0) return 0;
              let kt = false;
              for (; ; ) switch (L) {
                case "ascii":
                case "latin1":
                case "binary":
                  return et;
                case "utf8":
                case "utf-8":
                  return Mt(_).length;
                case "ucs2":
                case "ucs-2":
                case "utf16le":
                case "utf-16le":
                  return 2 * et;
                case "hex":
                  return et >>> 1;
                case "base64":
                  return O(_).length;
                default:
                  if (kt) return St ? -1 : Mt(_).length;
                  L = ("" + L).toLowerCase(), kt = true;
              }
            }
            function S(_, L, et) {
              let St = false;
              if ((L === void 0 || L < 0) && (L = 0), L > this.length || ((et === void 0 || et > this.length) && (et = this.length), et <= 0) || (et >>>= 0) <= (L >>>= 0)) return "";
              for (_ || (_ = "utf8"); ; ) switch (_) {
                case "hex":
                  return Lt(this, L, et);
                case "utf8":
                case "utf-8":
                  return I(this, L, et);
                case "ascii":
                  return ft(this, L, et);
                case "latin1":
                case "binary":
                  return dt(this, L, et);
                case "base64":
                  return X(this, L, et);
                case "ucs2":
                case "ucs-2":
                case "utf16le":
                case "utf-16le":
                  return $(this, L, et);
                default:
                  if (St) throw new TypeError("Unknown encoding: " + _);
                  _ = (_ + "").toLowerCase(), St = true;
              }
            }
            function x(_, L, et) {
              const St = _[L];
              _[L] = _[et], _[et] = St;
            }
            function B(_, L, et, St, kt) {
              if (_.length === 0) return -1;
              if (typeof et == "string" ? (St = et, et = 0) : et > 2147483647 ? et = 2147483647 : et < -2147483648 && (et = -2147483648), tt(et = +et) && (et = kt ? 0 : _.length - 1), et < 0 && (et = _.length + et), et >= _.length) {
                if (kt) return -1;
                et = _.length - 1;
              } else if (et < 0) {
                if (!kt) return -1;
                et = 0;
              }
              if (typeof L == "string" && (L = R.from(L, St)), R.isBuffer(L)) return L.length === 0 ? -1 : W(_, L, et, St, kt);
              if (typeof L == "number") return L &= 255, typeof Uint8Array.prototype.indexOf == "function" ? kt ? Uint8Array.prototype.indexOf.call(_, L, et) : Uint8Array.prototype.lastIndexOf.call(_, L, et) : W(_, [L], et, St, kt);
              throw new TypeError("val must be string, number or Buffer");
            }
            function W(_, L, et, St, kt) {
              let ct, j = 1, ut = _.length, gt = L.length;
              if (St !== void 0 && ((St = String(St).toLowerCase()) === "ucs2" || St === "ucs-2" || St === "utf16le" || St === "utf-16le")) {
                if (_.length < 2 || L.length < 2) return -1;
                j = 2, ut /= 2, gt /= 2, et /= 2;
              }
              function $t(Ht, wt) {
                return j === 1 ? Ht[wt] : Ht.readUInt16BE(wt * j);
              }
              if (kt) {
                let Ht = -1;
                for (ct = et; ct < ut; ct++) if ($t(_, ct) === $t(L, Ht === -1 ? 0 : ct - Ht)) {
                  if (Ht === -1 && (Ht = ct), ct - Ht + 1 === gt) return Ht * j;
                } else Ht !== -1 && (ct -= ct - Ht), Ht = -1;
              } else for (et + gt > ut && (et = ut - gt), ct = et; ct >= 0; ct--) {
                let Ht = true;
                for (let wt = 0; wt < gt; wt++) if ($t(_, ct + wt) !== $t(L, wt)) {
                  Ht = false;
                  break;
                }
                if (Ht) return ct;
              }
              return -1;
            }
            function lt(_, L, et, St) {
              et = Number(et) || 0;
              const kt = _.length - et;
              St ? (St = Number(St)) > kt && (St = kt) : St = kt;
              const ct = L.length;
              let j;
              for (St > ct / 2 && (St = ct / 2), j = 0; j < St; ++j) {
                const ut = parseInt(L.substr(2 * j, 2), 16);
                if (tt(ut)) return j;
                _[et + j] = ut;
              }
              return j;
            }
            function pt(_, L, et, St) {
              return z(Mt(L, _.length - et), _, et, St);
            }
            function at(_, L, et, St) {
              return z(function(kt) {
                const ct = [];
                for (let j = 0; j < kt.length; ++j) ct.push(255 & kt.charCodeAt(j));
                return ct;
              }(L), _, et, St);
            }
            function rt(_, L, et, St) {
              return z(O(L), _, et, St);
            }
            function ot(_, L, et, St) {
              return z(function(kt, ct) {
                let j, ut, gt;
                const $t = [];
                for (let Ht = 0; Ht < kt.length && !((ct -= 2) < 0); ++Ht) j = kt.charCodeAt(Ht), ut = j >> 8, gt = j % 256, $t.push(gt), $t.push(ut);
                return $t;
              }(L, _.length - et), _, et, St);
            }
            function X(_, L, et) {
              return L === 0 && et === _.length ? c.fromByteArray(_) : c.fromByteArray(_.slice(L, et));
            }
            function I(_, L, et) {
              et = Math.min(_.length, et);
              const St = [];
              let kt = L;
              for (; kt < et; ) {
                const ct = _[kt];
                let j = null, ut = ct > 239 ? 4 : ct > 223 ? 3 : ct > 191 ? 2 : 1;
                if (kt + ut <= et) {
                  let gt, $t, Ht, wt;
                  switch (ut) {
                    case 1:
                      ct < 128 && (j = ct);
                      break;
                    case 2:
                      gt = _[kt + 1], (192 & gt) == 128 && (wt = (31 & ct) << 6 | 63 & gt, wt > 127 && (j = wt));
                      break;
                    case 3:
                      gt = _[kt + 1], $t = _[kt + 2], (192 & gt) == 128 && (192 & $t) == 128 && (wt = (15 & ct) << 12 | (63 & gt) << 6 | 63 & $t, wt > 2047 && (wt < 55296 || wt > 57343) && (j = wt));
                      break;
                    case 4:
                      gt = _[kt + 1], $t = _[kt + 2], Ht = _[kt + 3], (192 & gt) == 128 && (192 & $t) == 128 && (192 & Ht) == 128 && (wt = (15 & ct) << 18 | (63 & gt) << 12 | (63 & $t) << 6 | 63 & Ht, wt > 65535 && wt < 1114112 && (j = wt));
                  }
                }
                j === null ? (j = 65533, ut = 1) : j > 65535 && (j -= 65536, St.push(j >>> 10 & 1023 | 55296), j = 56320 | 1023 & j), St.push(j), kt += ut;
              }
              return function(ct) {
                const j = ct.length;
                if (j <= nt) return String.fromCharCode.apply(String, ct);
                let ut = "", gt = 0;
                for (; gt < j; ) ut += String.fromCharCode.apply(String, ct.slice(gt, gt += nt));
                return ut;
              }(St);
            }
            R.TYPED_ARRAY_SUPPORT = function() {
              try {
                const _ = new Uint8Array(1), L = { foo: function() {
                  return 42;
                } };
                return Object.setPrototypeOf(L, Uint8Array.prototype), Object.setPrototypeOf(_, L), _.foo() === 42;
              } catch {
                return false;
              }
            }(), R.TYPED_ARRAY_SUPPORT || d === void 0 || typeof d.error != "function" || d.error("This browser lacks typed array (Uint8Array) support which is required by `buffer` v5.x. Use `buffer` v4.x if you require old browser support."), Object.defineProperty(R.prototype, "parent", { enumerable: true, get: function() {
              if (R.isBuffer(this)) return this.buffer;
            } }), Object.defineProperty(R.prototype, "offset", { enumerable: true, get: function() {
              if (R.isBuffer(this)) return this.byteOffset;
            } }), R.poolSize = 8192, R.from = function(_, L, et) {
              return F(_, L, et);
            }, Object.setPrototypeOf(R.prototype, Uint8Array.prototype), Object.setPrototypeOf(R, Uint8Array), R.alloc = function(_, L, et) {
              return function(St, kt, ct) {
                return v(St), St <= 0 ? k(St) : kt !== void 0 ? typeof ct == "string" ? k(St).fill(kt, ct) : k(St).fill(kt) : k(St);
              }(_, L, et);
            }, R.allocUnsafe = function(_) {
              return U(_);
            }, R.allocUnsafeSlow = function(_) {
              return U(_);
            }, R.isBuffer = function(_) {
              return _ != null && _._isBuffer === true && _ !== R.prototype;
            }, R.compare = function(_, L) {
              if (J(_, Uint8Array) && (_ = R.from(_, _.offset, _.byteLength)), J(L, Uint8Array) && (L = R.from(L, L.offset, L.byteLength)), !R.isBuffer(_) || !R.isBuffer(L)) throw new TypeError('The "buf1", "buf2" arguments must be one of type Buffer or Uint8Array');
              if (_ === L) return 0;
              let et = _.length, St = L.length;
              for (let kt = 0, ct = Math.min(et, St); kt < ct; ++kt) if (_[kt] !== L[kt]) {
                et = _[kt], St = L[kt];
                break;
              }
              return et < St ? -1 : St < et ? 1 : 0;
            }, R.isEncoding = function(_) {
              switch (String(_).toLowerCase()) {
                case "hex":
                case "utf8":
                case "utf-8":
                case "ascii":
                case "latin1":
                case "binary":
                case "base64":
                case "ucs2":
                case "ucs-2":
                case "utf16le":
                case "utf-16le":
                  return true;
                default:
                  return false;
              }
            }, R.concat = function(_, L) {
              if (!Array.isArray(_)) throw new TypeError('"list" argument must be an Array of Buffers');
              if (_.length === 0) return R.alloc(0);
              let et;
              if (L === void 0) for (L = 0, et = 0; et < _.length; ++et) L += _[et].length;
              const St = R.allocUnsafe(L);
              let kt = 0;
              for (et = 0; et < _.length; ++et) {
                let ct = _[et];
                if (J(ct, Uint8Array)) kt + ct.length > St.length ? (R.isBuffer(ct) || (ct = R.from(ct)), ct.copy(St, kt)) : Uint8Array.prototype.set.call(St, ct, kt);
                else {
                  if (!R.isBuffer(ct)) throw new TypeError('"list" argument must be an Array of Buffers');
                  ct.copy(St, kt);
                }
                kt += ct.length;
              }
              return St;
            }, R.byteLength = V, R.prototype._isBuffer = true, R.prototype.swap16 = function() {
              const _ = this.length;
              if (_ % 2 != 0) throw new RangeError("Buffer size must be a multiple of 16-bits");
              for (let L = 0; L < _; L += 2) x(this, L, L + 1);
              return this;
            }, R.prototype.swap32 = function() {
              const _ = this.length;
              if (_ % 4 != 0) throw new RangeError("Buffer size must be a multiple of 32-bits");
              for (let L = 0; L < _; L += 4) x(this, L, L + 3), x(this, L + 1, L + 2);
              return this;
            }, R.prototype.swap64 = function() {
              const _ = this.length;
              if (_ % 8 != 0) throw new RangeError("Buffer size must be a multiple of 64-bits");
              for (let L = 0; L < _; L += 8) x(this, L, L + 7), x(this, L + 1, L + 6), x(this, L + 2, L + 5), x(this, L + 3, L + 4);
              return this;
            }, R.prototype.toString = function() {
              const _ = this.length;
              return _ === 0 ? "" : arguments.length === 0 ? I(this, 0, _) : S.apply(this, arguments);
            }, R.prototype.toLocaleString = R.prototype.toString, R.prototype.equals = function(_) {
              if (!R.isBuffer(_)) throw new TypeError("Argument must be a Buffer");
              return this === _ || R.compare(this, _) === 0;
            }, R.prototype.inspect = function() {
              let _ = "";
              const L = h.IS;
              return _ = this.toString("hex", 0, L).replace(/(.{2})/g, "$1 ").trim(), this.length > L && (_ += " ... "), "<Buffer " + _ + ">";
            }, T && (R.prototype[T] = R.prototype.inspect), R.prototype.compare = function(_, L, et, St, kt) {
              if (J(_, Uint8Array) && (_ = R.from(_, _.offset, _.byteLength)), !R.isBuffer(_)) throw new TypeError('The "target" argument must be one of type Buffer or Uint8Array. Received type ' + typeof _);
              if (L === void 0 && (L = 0), et === void 0 && (et = _ ? _.length : 0), St === void 0 && (St = 0), kt === void 0 && (kt = this.length), L < 0 || et > _.length || St < 0 || kt > this.length) throw new RangeError("out of range index");
              if (St >= kt && L >= et) return 0;
              if (St >= kt) return -1;
              if (L >= et) return 1;
              if (this === _) return 0;
              let ct = (kt >>>= 0) - (St >>>= 0), j = (et >>>= 0) - (L >>>= 0);
              const ut = Math.min(ct, j), gt = this.slice(St, kt), $t = _.slice(L, et);
              for (let Ht = 0; Ht < ut; ++Ht) if (gt[Ht] !== $t[Ht]) {
                ct = gt[Ht], j = $t[Ht];
                break;
              }
              return ct < j ? -1 : j < ct ? 1 : 0;
            }, R.prototype.includes = function(_, L, et) {
              return this.indexOf(_, L, et) !== -1;
            }, R.prototype.indexOf = function(_, L, et) {
              return B(this, _, L, et, true);
            }, R.prototype.lastIndexOf = function(_, L, et) {
              return B(this, _, L, et, false);
            }, R.prototype.write = function(_, L, et, St) {
              if (L === void 0) St = "utf8", et = this.length, L = 0;
              else if (et === void 0 && typeof L == "string") St = L, et = this.length, L = 0;
              else {
                if (!isFinite(L)) throw new Error("Buffer.write(string, encoding, offset[, length]) is no longer supported");
                L >>>= 0, isFinite(et) ? (et >>>= 0, St === void 0 && (St = "utf8")) : (St = et, et = void 0);
              }
              const kt = this.length - L;
              if ((et === void 0 || et > kt) && (et = kt), _.length > 0 && (et < 0 || L < 0) || L > this.length) throw new RangeError("Attempt to write outside buffer bounds");
              St || (St = "utf8");
              let ct = false;
              for (; ; ) switch (St) {
                case "hex":
                  return lt(this, _, L, et);
                case "utf8":
                case "utf-8":
                  return pt(this, _, L, et);
                case "ascii":
                case "latin1":
                case "binary":
                  return at(this, _, L, et);
                case "base64":
                  return rt(this, _, L, et);
                case "ucs2":
                case "ucs-2":
                case "utf16le":
                case "utf-16le":
                  return ot(this, _, L, et);
                default:
                  if (ct) throw new TypeError("Unknown encoding: " + St);
                  St = ("" + St).toLowerCase(), ct = true;
              }
            }, R.prototype.toJSON = function() {
              return { type: "Buffer", data: Array.prototype.slice.call(this._arr || this, 0) };
            };
            const nt = 4096;
            function ft(_, L, et) {
              let St = "";
              et = Math.min(_.length, et);
              for (let kt = L; kt < et; ++kt) St += String.fromCharCode(127 & _[kt]);
              return St;
            }
            function dt(_, L, et) {
              let St = "";
              et = Math.min(_.length, et);
              for (let kt = L; kt < et; ++kt) St += String.fromCharCode(_[kt]);
              return St;
            }
            function Lt(_, L, et) {
              const St = _.length;
              (!L || L < 0) && (L = 0), (!et || et < 0 || et > St) && (et = St);
              let kt = "";
              for (let ct = L; ct < et; ++ct) kt += H[_[ct]];
              return kt;
            }
            function $(_, L, et) {
              const St = _.slice(L, et);
              let kt = "";
              for (let ct = 0; ct < St.length - 1; ct += 2) kt += String.fromCharCode(St[ct] + 256 * St[ct + 1]);
              return kt;
            }
            function it(_, L, et) {
              if (_ % 1 != 0 || _ < 0) throw new RangeError("offset is not uint");
              if (_ + L > et) throw new RangeError("Trying to access beyond buffer length");
            }
            function mt(_, L, et, St, kt, ct) {
              if (!R.isBuffer(_)) throw new TypeError('"buffer" argument must be a Buffer instance');
              if (L > kt || L < ct) throw new RangeError('"value" argument is out of bounds');
              if (et + St > _.length) throw new RangeError("Index out of range");
            }
            function Ot(_, L, et, St, kt) {
              Vt(L, St, kt, _, et, 7);
              let ct = Number(L & BigInt(4294967295));
              _[et++] = ct, ct >>= 8, _[et++] = ct, ct >>= 8, _[et++] = ct, ct >>= 8, _[et++] = ct;
              let j = Number(L >> BigInt(32) & BigInt(4294967295));
              return _[et++] = j, j >>= 8, _[et++] = j, j >>= 8, _[et++] = j, j >>= 8, _[et++] = j, et;
            }
            function bt(_, L, et, St, kt) {
              Vt(L, St, kt, _, et, 7);
              let ct = Number(L & BigInt(4294967295));
              _[et + 7] = ct, ct >>= 8, _[et + 6] = ct, ct >>= 8, _[et + 5] = ct, ct >>= 8, _[et + 4] = ct;
              let j = Number(L >> BigInt(32) & BigInt(4294967295));
              return _[et + 3] = j, j >>= 8, _[et + 2] = j, j >>= 8, _[et + 1] = j, j >>= 8, _[et] = j, et + 8;
            }
            function xt(_, L, et, St, kt, ct) {
              if (et + St > _.length) throw new RangeError("Index out of range");
              if (et < 0) throw new RangeError("Index out of range");
            }
            function Ct(_, L, et, St, kt) {
              return L = +L, et >>>= 0, kt || xt(_, 0, et, 4), w.write(_, L, et, St, 23, 4), et + 4;
            }
            function Tt(_, L, et, St, kt) {
              return L = +L, et >>>= 0, kt || xt(_, 0, et, 8), w.write(_, L, et, St, 52, 8), et + 8;
            }
            R.prototype.slice = function(_, L) {
              const et = this.length;
              (_ = ~~_) < 0 ? (_ += et) < 0 && (_ = 0) : _ > et && (_ = et), (L = L === void 0 ? et : ~~L) < 0 ? (L += et) < 0 && (L = 0) : L > et && (L = et), L < _ && (L = _);
              const St = this.subarray(_, L);
              return Object.setPrototypeOf(St, R.prototype), St;
            }, R.prototype.readUintLE = R.prototype.readUIntLE = function(_, L, et) {
              _ >>>= 0, L >>>= 0, et || it(_, L, this.length);
              let St = this[_], kt = 1, ct = 0;
              for (; ++ct < L && (kt *= 256); ) St += this[_ + ct] * kt;
              return St;
            }, R.prototype.readUintBE = R.prototype.readUIntBE = function(_, L, et) {
              _ >>>= 0, L >>>= 0, et || it(_, L, this.length);
              let St = this[_ + --L], kt = 1;
              for (; L > 0 && (kt *= 256); ) St += this[_ + --L] * kt;
              return St;
            }, R.prototype.readUint8 = R.prototype.readUInt8 = function(_, L) {
              return _ >>>= 0, L || it(_, 1, this.length), this[_];
            }, R.prototype.readUint16LE = R.prototype.readUInt16LE = function(_, L) {
              return _ >>>= 0, L || it(_, 2, this.length), this[_] | this[_ + 1] << 8;
            }, R.prototype.readUint16BE = R.prototype.readUInt16BE = function(_, L) {
              return _ >>>= 0, L || it(_, 2, this.length), this[_] << 8 | this[_ + 1];
            }, R.prototype.readUint32LE = R.prototype.readUInt32LE = function(_, L) {
              return _ >>>= 0, L || it(_, 4, this.length), (this[_] | this[_ + 1] << 8 | this[_ + 2] << 16) + 16777216 * this[_ + 3];
            }, R.prototype.readUint32BE = R.prototype.readUInt32BE = function(_, L) {
              return _ >>>= 0, L || it(_, 4, this.length), 16777216 * this[_] + (this[_ + 1] << 16 | this[_ + 2] << 8 | this[_ + 3]);
            }, R.prototype.readBigUInt64LE = K(function(_) {
              oe(_ >>>= 0, "offset");
              const L = this[_], et = this[_ + 7];
              L !== void 0 && et !== void 0 || te(_, this.length - 8);
              const St = L + 256 * this[++_] + 65536 * this[++_] + this[++_] * 2 ** 24, kt = this[++_] + 256 * this[++_] + 65536 * this[++_] + et * 2 ** 24;
              return BigInt(St) + (BigInt(kt) << BigInt(32));
            }), R.prototype.readBigUInt64BE = K(function(_) {
              oe(_ >>>= 0, "offset");
              const L = this[_], et = this[_ + 7];
              L !== void 0 && et !== void 0 || te(_, this.length - 8);
              const St = L * 2 ** 24 + 65536 * this[++_] + 256 * this[++_] + this[++_], kt = this[++_] * 2 ** 24 + 65536 * this[++_] + 256 * this[++_] + et;
              return (BigInt(St) << BigInt(32)) + BigInt(kt);
            }), R.prototype.readIntLE = function(_, L, et) {
              _ >>>= 0, L >>>= 0, et || it(_, L, this.length);
              let St = this[_], kt = 1, ct = 0;
              for (; ++ct < L && (kt *= 256); ) St += this[_ + ct] * kt;
              return kt *= 128, St >= kt && (St -= Math.pow(2, 8 * L)), St;
            }, R.prototype.readIntBE = function(_, L, et) {
              _ >>>= 0, L >>>= 0, et || it(_, L, this.length);
              let St = L, kt = 1, ct = this[_ + --St];
              for (; St > 0 && (kt *= 256); ) ct += this[_ + --St] * kt;
              return kt *= 128, ct >= kt && (ct -= Math.pow(2, 8 * L)), ct;
            }, R.prototype.readInt8 = function(_, L) {
              return _ >>>= 0, L || it(_, 1, this.length), 128 & this[_] ? -1 * (255 - this[_] + 1) : this[_];
            }, R.prototype.readInt16LE = function(_, L) {
              _ >>>= 0, L || it(_, 2, this.length);
              const et = this[_] | this[_ + 1] << 8;
              return 32768 & et ? 4294901760 | et : et;
            }, R.prototype.readInt16BE = function(_, L) {
              _ >>>= 0, L || it(_, 2, this.length);
              const et = this[_ + 1] | this[_] << 8;
              return 32768 & et ? 4294901760 | et : et;
            }, R.prototype.readInt32LE = function(_, L) {
              return _ >>>= 0, L || it(_, 4, this.length), this[_] | this[_ + 1] << 8 | this[_ + 2] << 16 | this[_ + 3] << 24;
            }, R.prototype.readInt32BE = function(_, L) {
              return _ >>>= 0, L || it(_, 4, this.length), this[_] << 24 | this[_ + 1] << 16 | this[_ + 2] << 8 | this[_ + 3];
            }, R.prototype.readBigInt64LE = K(function(_) {
              oe(_ >>>= 0, "offset");
              const L = this[_], et = this[_ + 7];
              L !== void 0 && et !== void 0 || te(_, this.length - 8);
              const St = this[_ + 4] + 256 * this[_ + 5] + 65536 * this[_ + 6] + (et << 24);
              return (BigInt(St) << BigInt(32)) + BigInt(L + 256 * this[++_] + 65536 * this[++_] + this[++_] * 16777216);
            }), R.prototype.readBigInt64BE = K(function(_) {
              oe(_ >>>= 0, "offset");
              const L = this[_], et = this[_ + 7];
              L !== void 0 && et !== void 0 || te(_, this.length - 8);
              const St = (L << 24) + 65536 * this[++_] + 256 * this[++_] + this[++_];
              return (BigInt(St) << BigInt(32)) + BigInt(this[++_] * 16777216 + 65536 * this[++_] + 256 * this[++_] + et);
            }), R.prototype.readFloatLE = function(_, L) {
              return _ >>>= 0, L || it(_, 4, this.length), w.read(this, _, true, 23, 4);
            }, R.prototype.readFloatBE = function(_, L) {
              return _ >>>= 0, L || it(_, 4, this.length), w.read(this, _, false, 23, 4);
            }, R.prototype.readDoubleLE = function(_, L) {
              return _ >>>= 0, L || it(_, 8, this.length), w.read(this, _, true, 52, 8);
            }, R.prototype.readDoubleBE = function(_, L) {
              return _ >>>= 0, L || it(_, 8, this.length), w.read(this, _, false, 52, 8);
            }, R.prototype.writeUintLE = R.prototype.writeUIntLE = function(_, L, et, St) {
              _ = +_, L >>>= 0, et >>>= 0, St || mt(this, _, L, et, Math.pow(2, 8 * et) - 1, 0);
              let kt = 1, ct = 0;
              for (this[L] = 255 & _; ++ct < et && (kt *= 256); ) this[L + ct] = _ / kt & 255;
              return L + et;
            }, R.prototype.writeUintBE = R.prototype.writeUIntBE = function(_, L, et, St) {
              _ = +_, L >>>= 0, et >>>= 0, St || mt(this, _, L, et, Math.pow(2, 8 * et) - 1, 0);
              let kt = et - 1, ct = 1;
              for (this[L + kt] = 255 & _; --kt >= 0 && (ct *= 256); ) this[L + kt] = _ / ct & 255;
              return L + et;
            }, R.prototype.writeUint8 = R.prototype.writeUInt8 = function(_, L, et) {
              return _ = +_, L >>>= 0, et || mt(this, _, L, 1, 255, 0), this[L] = 255 & _, L + 1;
            }, R.prototype.writeUint16LE = R.prototype.writeUInt16LE = function(_, L, et) {
              return _ = +_, L >>>= 0, et || mt(this, _, L, 2, 65535, 0), this[L] = 255 & _, this[L + 1] = _ >>> 8, L + 2;
            }, R.prototype.writeUint16BE = R.prototype.writeUInt16BE = function(_, L, et) {
              return _ = +_, L >>>= 0, et || mt(this, _, L, 2, 65535, 0), this[L] = _ >>> 8, this[L + 1] = 255 & _, L + 2;
            }, R.prototype.writeUint32LE = R.prototype.writeUInt32LE = function(_, L, et) {
              return _ = +_, L >>>= 0, et || mt(this, _, L, 4, 4294967295, 0), this[L + 3] = _ >>> 24, this[L + 2] = _ >>> 16, this[L + 1] = _ >>> 8, this[L] = 255 & _, L + 4;
            }, R.prototype.writeUint32BE = R.prototype.writeUInt32BE = function(_, L, et) {
              return _ = +_, L >>>= 0, et || mt(this, _, L, 4, 4294967295, 0), this[L] = _ >>> 24, this[L + 1] = _ >>> 16, this[L + 2] = _ >>> 8, this[L + 3] = 255 & _, L + 4;
            }, R.prototype.writeBigUInt64LE = K(function(_, L = 0) {
              return Ot(this, _, L, BigInt(0), BigInt("0xffffffffffffffff"));
            }), R.prototype.writeBigUInt64BE = K(function(_, L = 0) {
              return bt(this, _, L, BigInt(0), BigInt("0xffffffffffffffff"));
            }), R.prototype.writeIntLE = function(_, L, et, St) {
              if (_ = +_, L >>>= 0, !St) {
                const ut = Math.pow(2, 8 * et - 1);
                mt(this, _, L, et, ut - 1, -ut);
              }
              let kt = 0, ct = 1, j = 0;
              for (this[L] = 255 & _; ++kt < et && (ct *= 256); ) _ < 0 && j === 0 && this[L + kt - 1] !== 0 && (j = 1), this[L + kt] = (_ / ct | 0) - j & 255;
              return L + et;
            }, R.prototype.writeIntBE = function(_, L, et, St) {
              if (_ = +_, L >>>= 0, !St) {
                const ut = Math.pow(2, 8 * et - 1);
                mt(this, _, L, et, ut - 1, -ut);
              }
              let kt = et - 1, ct = 1, j = 0;
              for (this[L + kt] = 255 & _; --kt >= 0 && (ct *= 256); ) _ < 0 && j === 0 && this[L + kt + 1] !== 0 && (j = 1), this[L + kt] = (_ / ct | 0) - j & 255;
              return L + et;
            }, R.prototype.writeInt8 = function(_, L, et) {
              return _ = +_, L >>>= 0, et || mt(this, _, L, 1, 127, -128), _ < 0 && (_ = 255 + _ + 1), this[L] = 255 & _, L + 1;
            }, R.prototype.writeInt16LE = function(_, L, et) {
              return _ = +_, L >>>= 0, et || mt(this, _, L, 2, 32767, -32768), this[L] = 255 & _, this[L + 1] = _ >>> 8, L + 2;
            }, R.prototype.writeInt16BE = function(_, L, et) {
              return _ = +_, L >>>= 0, et || mt(this, _, L, 2, 32767, -32768), this[L] = _ >>> 8, this[L + 1] = 255 & _, L + 2;
            }, R.prototype.writeInt32LE = function(_, L, et) {
              return _ = +_, L >>>= 0, et || mt(this, _, L, 4, 2147483647, -2147483648), this[L] = 255 & _, this[L + 1] = _ >>> 8, this[L + 2] = _ >>> 16, this[L + 3] = _ >>> 24, L + 4;
            }, R.prototype.writeInt32BE = function(_, L, et) {
              return _ = +_, L >>>= 0, et || mt(this, _, L, 4, 2147483647, -2147483648), _ < 0 && (_ = 4294967295 + _ + 1), this[L] = _ >>> 24, this[L + 1] = _ >>> 16, this[L + 2] = _ >>> 8, this[L + 3] = 255 & _, L + 4;
            }, R.prototype.writeBigInt64LE = K(function(_, L = 0) {
              return Ot(this, _, L, -BigInt("0x8000000000000000"), BigInt("0x7fffffffffffffff"));
            }), R.prototype.writeBigInt64BE = K(function(_, L = 0) {
              return bt(this, _, L, -BigInt("0x8000000000000000"), BigInt("0x7fffffffffffffff"));
            }), R.prototype.writeFloatLE = function(_, L, et) {
              return Ct(this, _, L, true, et);
            }, R.prototype.writeFloatBE = function(_, L, et) {
              return Ct(this, _, L, false, et);
            }, R.prototype.writeDoubleLE = function(_, L, et) {
              return Tt(this, _, L, true, et);
            }, R.prototype.writeDoubleBE = function(_, L, et) {
              return Tt(this, _, L, false, et);
            }, R.prototype.copy = function(_, L, et, St) {
              if (!R.isBuffer(_)) throw new TypeError("argument should be a Buffer");
              if (et || (et = 0), St || St === 0 || (St = this.length), L >= _.length && (L = _.length), L || (L = 0), St > 0 && St < et && (St = et), St === et || _.length === 0 || this.length === 0) return 0;
              if (L < 0) throw new RangeError("targetStart out of bounds");
              if (et < 0 || et >= this.length) throw new RangeError("Index out of range");
              if (St < 0) throw new RangeError("sourceEnd out of bounds");
              St > this.length && (St = this.length), _.length - L < St - et && (St = _.length - L + et);
              const kt = St - et;
              return this === _ && typeof Uint8Array.prototype.copyWithin == "function" ? this.copyWithin(L, et, St) : Uint8Array.prototype.set.call(_, this.subarray(et, St), L), kt;
            }, R.prototype.fill = function(_, L, et, St) {
              if (typeof _ == "string") {
                if (typeof L == "string" ? (St = L, L = 0, et = this.length) : typeof et == "string" && (St = et, et = this.length), St !== void 0 && typeof St != "string") throw new TypeError("encoding must be a string");
                if (typeof St == "string" && !R.isEncoding(St)) throw new TypeError("Unknown encoding: " + St);
                if (_.length === 1) {
                  const ct = _.charCodeAt(0);
                  (St === "utf8" && ct < 128 || St === "latin1") && (_ = ct);
                }
              } else typeof _ == "number" ? _ &= 255 : typeof _ == "boolean" && (_ = Number(_));
              if (L < 0 || this.length < L || this.length < et) throw new RangeError("Out of range index");
              if (et <= L) return this;
              let kt;
              if (L >>>= 0, et = et === void 0 ? this.length : et >>> 0, _ || (_ = 0), typeof _ == "number") for (kt = L; kt < et; ++kt) this[kt] = _;
              else {
                const ct = R.isBuffer(_) ? _ : R.from(_, St), j = ct.length;
                if (j === 0) throw new TypeError('The value "' + _ + '" is invalid for argument "value"');
                for (kt = 0; kt < et - L; ++kt) this[kt + L] = ct[kt % j];
              }
              return this;
            };
            const Bt = {};
            function At(_, L, et) {
              Bt[_] = class extends et {
                constructor() {
                  super(), Object.defineProperty(this, "message", { value: L.apply(this, arguments), writable: true, configurable: true }), this.name = `${this.name} [${_}]`, this.stack, delete this.name;
                }
                get code() {
                  return _;
                }
                set code(St) {
                  Object.defineProperty(this, "code", { configurable: true, enumerable: true, value: St, writable: true });
                }
                toString() {
                  return `${this.name} [${_}]: ${this.message}`;
                }
              };
            }
            function Ut(_) {
              let L = "", et = _.length;
              const St = _[0] === "-" ? 1 : 0;
              for (; et >= St + 4; et -= 3) L = `_${_.slice(et - 3, et)}${L}`;
              return `${_.slice(0, et)}${L}`;
            }
            function Vt(_, L, et, St, kt, ct) {
              if (_ > et || _ < L) {
                const j = typeof L == "bigint" ? "n" : "";
                let ut;
                throw ut = L === 0 || L === BigInt(0) ? `>= 0${j} and < 2${j} ** ${8 * (ct + 1)}${j}` : `>= -(2${j} ** ${8 * (ct + 1) - 1}${j}) and < 2 ** ${8 * (ct + 1) - 1}${j}`, new Bt.ERR_OUT_OF_RANGE("value", ut, _);
              }
              (function(j, ut, gt) {
                oe(ut, "offset"), j[ut] !== void 0 && j[ut + gt] !== void 0 || te(ut, j.length - (gt + 1));
              })(St, kt, ct);
            }
            function oe(_, L) {
              if (typeof _ != "number") throw new Bt.ERR_INVALID_ARG_TYPE(L, "number", _);
            }
            function te(_, L, et) {
              throw Math.floor(_) !== _ ? (oe(_, et), new Bt.ERR_OUT_OF_RANGE("offset", "an integer", _)) : L < 0 ? new Bt.ERR_BUFFER_OUT_OF_BOUNDS() : new Bt.ERR_OUT_OF_RANGE("offset", `>= 0 and <= ${L}`, _);
            }
            At("ERR_BUFFER_OUT_OF_BOUNDS", function(_) {
              return _ ? `${_} is outside of buffer bounds` : "Attempt to access memory outside buffer bounds";
            }, RangeError), At("ERR_INVALID_ARG_TYPE", function(_, L) {
              return `The "${_}" argument must be of type number. Received type ${typeof L}`;
            }, TypeError), At("ERR_OUT_OF_RANGE", function(_, L, et) {
              let St = `The value of "${_}" is out of range.`, kt = et;
              return Number.isInteger(et) && Math.abs(et) > 4294967296 ? kt = Ut(String(et)) : typeof et == "bigint" && (kt = String(et), (et > BigInt(2) ** BigInt(32) || et < -(BigInt(2) ** BigInt(32))) && (kt = Ut(kt)), kt += "n"), St += ` It must be ${L}. Received ${kt}`, St;
            }, RangeError);
            const yt = /[^+/0-9A-Za-z-_]/g;
            function Mt(_, L) {
              let et;
              L = L || 1 / 0;
              const St = _.length;
              let kt = null;
              const ct = [];
              for (let j = 0; j < St; ++j) {
                if (et = _.charCodeAt(j), et > 55295 && et < 57344) {
                  if (!kt) {
                    if (et > 56319) {
                      (L -= 3) > -1 && ct.push(239, 191, 189);
                      continue;
                    }
                    if (j + 1 === St) {
                      (L -= 3) > -1 && ct.push(239, 191, 189);
                      continue;
                    }
                    kt = et;
                    continue;
                  }
                  if (et < 56320) {
                    (L -= 3) > -1 && ct.push(239, 191, 189), kt = et;
                    continue;
                  }
                  et = 65536 + (kt - 55296 << 10 | et - 56320);
                } else kt && (L -= 3) > -1 && ct.push(239, 191, 189);
                if (kt = null, et < 128) {
                  if ((L -= 1) < 0) break;
                  ct.push(et);
                } else if (et < 2048) {
                  if ((L -= 2) < 0) break;
                  ct.push(et >> 6 | 192, 63 & et | 128);
                } else if (et < 65536) {
                  if ((L -= 3) < 0) break;
                  ct.push(et >> 12 | 224, et >> 6 & 63 | 128, 63 & et | 128);
                } else {
                  if (!(et < 1114112)) throw new Error("Invalid code point");
                  if ((L -= 4) < 0) break;
                  ct.push(et >> 18 | 240, et >> 12 & 63 | 128, et >> 6 & 63 | 128, 63 & et | 128);
                }
              }
              return ct;
            }
            function O(_) {
              return c.toByteArray(function(L) {
                if ((L = (L = L.split("=")[0]).trim().replace(yt, "")).length < 2) return "";
                for (; L.length % 4 != 0; ) L += "=";
                return L;
              }(_));
            }
            function z(_, L, et, St) {
              let kt;
              for (kt = 0; kt < St && !(kt + et >= L.length || kt >= _.length); ++kt) L[kt + et] = _[kt];
              return kt;
            }
            function J(_, L) {
              return _ instanceof L || _ != null && _.constructor != null && _.constructor.name != null && _.constructor.name === L.name;
            }
            function tt(_) {
              return _ != _;
            }
            const H = function() {
              const _ = "0123456789abcdef", L = new Array(256);
              for (let et = 0; et < 16; ++et) {
                const St = 16 * et;
                for (let kt = 0; kt < 16; ++kt) L[St + kt] = _[et] + _[kt];
              }
              return L;
            }();
            function K(_) {
              return typeof BigInt > "u" ? q : _;
            }
            function q() {
              throw new Error("BigInt not supported");
            }
          }, 251: (b, h) => {
            h.read = function(m, c, w, T, P) {
              var k, R, F = 8 * P - T - 1, v = (1 << F) - 1, U = v >> 1, M = -7, Z = w ? P - 1 : 0, D = w ? -1 : 1, V = m[c + Z];
              for (Z += D, k = V & (1 << -M) - 1, V >>= -M, M += F; M > 0; k = 256 * k + m[c + Z], Z += D, M -= 8) ;
              for (R = k & (1 << -M) - 1, k >>= -M, M += T; M > 0; R = 256 * R + m[c + Z], Z += D, M -= 8) ;
              if (k === 0) k = 1 - U;
              else {
                if (k === v) return R ? NaN : 1 / 0 * (V ? -1 : 1);
                R += Math.pow(2, T), k -= U;
              }
              return (V ? -1 : 1) * R * Math.pow(2, k - T);
            }, h.write = function(m, c, w, T, P, k) {
              var R, F, v, U = 8 * k - P - 1, M = (1 << U) - 1, Z = M >> 1, D = P === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0, V = T ? 0 : k - 1, S = T ? 1 : -1, x = c < 0 || c === 0 && 1 / c < 0 ? 1 : 0;
              for (c = Math.abs(c), isNaN(c) || c === 1 / 0 ? (F = isNaN(c) ? 1 : 0, R = M) : (R = Math.floor(Math.log(c) / Math.LN2), c * (v = Math.pow(2, -R)) < 1 && (R--, v *= 2), (c += R + Z >= 1 ? D / v : D * Math.pow(2, 1 - Z)) * v >= 2 && (R++, v /= 2), R + Z >= M ? (F = 0, R = M) : R + Z >= 1 ? (F = (c * v - 1) * Math.pow(2, P), R += Z) : (F = c * Math.pow(2, Z - 1) * Math.pow(2, P), R = 0)); P >= 8; m[w + V] = 255 & F, V += S, F /= 256, P -= 8) ;
              for (R = R << P | F, U += P; U > 0; m[w + V] = 255 & R, V += S, R /= 256, U -= 8) ;
              m[w + V - S] |= 128 * x;
            };
          } }, p = {};
          function g(b) {
            var h = p[b];
            if (h !== void 0) return h.exports;
            var m = p[b] = { exports: {} };
            return f[b](m, m.exports, g), m.exports;
          }
          return g.d = (b, h) => {
            for (var m in h) g.o(h, m) && !g.o(b, m) && Object.defineProperty(b, m, { enumerable: true, get: h[m] });
          }, g.g = function() {
            if (typeof globalThis == "object") return globalThis;
            try {
              return this || new Function("return this")();
            } catch {
              if (typeof window == "object") return window;
            }
          }(), g.o = (b, h) => Object.prototype.hasOwnProperty.call(b, h), g.r = (b) => {
            typeof Symbol < "u" && Symbol.toStringTag && Object.defineProperty(b, Symbol.toStringTag, { value: "Module" }), Object.defineProperty(b, "__esModule", { value: true });
          }, g(281);
        })(), l.exports = u();
      }, 3918: (l, s, i) => {
        var u = i(5606);
        function d(pt, at) {
          var rt = Object.keys(pt);
          if (Object.getOwnPropertySymbols) {
            var ot = Object.getOwnPropertySymbols(pt);
            at && (ot = ot.filter(function(X) {
              return Object.getOwnPropertyDescriptor(pt, X).enumerable;
            })), rt.push.apply(rt, ot);
          }
          return rt;
        }
        function f(pt) {
          for (var at = 1; at < arguments.length; at++) {
            var rt = arguments[at] != null ? arguments[at] : {};
            at % 2 ? d(Object(rt), true).forEach(function(ot) {
              p(pt, ot, rt[ot]);
            }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(pt, Object.getOwnPropertyDescriptors(rt)) : d(Object(rt)).forEach(function(ot) {
              Object.defineProperty(pt, ot, Object.getOwnPropertyDescriptor(rt, ot));
            });
          }
          return pt;
        }
        function p(pt, at, rt) {
          return (at = b(at)) in pt ? Object.defineProperty(pt, at, { value: rt, enumerable: true, configurable: true, writable: true }) : pt[at] = rt, pt;
        }
        function g(pt, at) {
          for (var rt = 0; rt < at.length; rt++) {
            var ot = at[rt];
            ot.enumerable = ot.enumerable || false, ot.configurable = true, "value" in ot && (ot.writable = true), Object.defineProperty(pt, b(ot.key), ot);
          }
        }
        function b(pt) {
          var at = function(rt, ot) {
            if (R(rt) !== "object" || rt === null) return rt;
            var X = rt[Symbol.toPrimitive];
            if (X !== void 0) {
              var I = X.call(rt, ot);
              if (R(I) !== "object") return I;
              throw new TypeError("@@toPrimitive must return a primitive value.");
            }
            return (ot === "string" ? String : Number)(rt);
          }(pt, "string");
          return R(at) === "symbol" ? at : String(at);
        }
        function h(pt, at) {
          if (at && (R(at) === "object" || typeof at == "function")) return at;
          if (at !== void 0) throw new TypeError("Derived constructors may only return object or undefined");
          return m(pt);
        }
        function m(pt) {
          if (pt === void 0) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
          return pt;
        }
        function c(pt) {
          var at = typeof Map == "function" ? /* @__PURE__ */ new Map() : void 0;
          return c = function(rt) {
            if (rt === null || (ot = rt, Function.toString.call(ot).indexOf("[native code]") === -1)) return rt;
            var ot;
            if (typeof rt != "function") throw new TypeError("Super expression must either be null or a function");
            if (at !== void 0) {
              if (at.has(rt)) return at.get(rt);
              at.set(rt, X);
            }
            function X() {
              return w(rt, arguments, k(this).constructor);
            }
            return X.prototype = Object.create(rt.prototype, { constructor: { value: X, enumerable: false, writable: true, configurable: true } }), P(X, rt);
          }, c(pt);
        }
        function w(pt, at, rt) {
          return w = T() ? Reflect.construct.bind() : function(ot, X, I) {
            var nt = [null];
            nt.push.apply(nt, X);
            var ft = new (Function.bind.apply(ot, nt))();
            return I && P(ft, I.prototype), ft;
          }, w.apply(null, arguments);
        }
        function T() {
          if (typeof Reflect > "u" || !Reflect.construct || Reflect.construct.sham) return false;
          if (typeof Proxy == "function") return true;
          try {
            return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
            })), true;
          } catch {
            return false;
          }
        }
        function P(pt, at) {
          return P = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function(rt, ot) {
            return rt.__proto__ = ot, rt;
          }, P(pt, at);
        }
        function k(pt) {
          return k = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function(at) {
            return at.__proto__ || Object.getPrototypeOf(at);
          }, k(pt);
        }
        function R(pt) {
          return R = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(at) {
            return typeof at;
          } : function(at) {
            return at && typeof Symbol == "function" && at.constructor === Symbol && at !== Symbol.prototype ? "symbol" : typeof at;
          }, R(pt);
        }
        var F = i(537).inspect, v = i(9597).codes.ERR_INVALID_ARG_TYPE;
        function U(pt, at, rt) {
          return (rt === void 0 || rt > pt.length) && (rt = pt.length), pt.substring(rt - at.length, rt) === at;
        }
        var M = "", Z = "", D = "", V = "", S = { deepStrictEqual: "Expected values to be strictly deep-equal:", strictEqual: "Expected values to be strictly equal:", strictEqualObject: 'Expected "actual" to be reference-equal to "expected":', deepEqual: "Expected values to be loosely deep-equal:", equal: "Expected values to be loosely equal:", notDeepStrictEqual: 'Expected "actual" not to be strictly deep-equal to:', notStrictEqual: 'Expected "actual" to be strictly unequal to:', notStrictEqualObject: 'Expected "actual" not to be reference-equal to "expected":', notDeepEqual: 'Expected "actual" not to be loosely deep-equal to:', notEqual: 'Expected "actual" to be loosely unequal to:', notIdentical: "Values identical but not reference-equal:" };
        function x(pt) {
          var at = Object.keys(pt), rt = Object.create(Object.getPrototypeOf(pt));
          return at.forEach(function(ot) {
            rt[ot] = pt[ot];
          }), Object.defineProperty(rt, "message", { value: pt.message }), rt;
        }
        function B(pt) {
          return F(pt, { compact: false, customInspect: false, depth: 1e3, maxArrayLength: 1 / 0, showHidden: false, breakLength: 1 / 0, showProxy: false, sorted: true, getters: true });
        }
        function W(pt, at, rt) {
          var ot = "", X = "", I = 0, nt = "", ft = false, dt = B(pt), Lt = dt.split(`
`), $ = B(at).split(`
`), it = 0, mt = "";
          if (rt === "strictEqual" && R(pt) === "object" && R(at) === "object" && pt !== null && at !== null && (rt = "strictEqualObject"), Lt.length === 1 && $.length === 1 && Lt[0] !== $[0]) {
            var Ot = Lt[0].length + $[0].length;
            if (Ot <= 10) {
              if (!(R(pt) === "object" && pt !== null || R(at) === "object" && at !== null || pt === 0 && at === 0)) return "".concat(S[rt], `

`) + "".concat(Lt[0], " !== ").concat($[0], `
`);
            } else if (rt !== "strictEqualObject" && Ot < (u.stderr && u.stderr.isTTY ? u.stderr.columns : 80)) {
              for (; Lt[0][it] === $[0][it]; ) it++;
              it > 2 && (mt = `
  `.concat(function(Mt, O) {
                if (O = Math.floor(O), Mt.length == 0 || O == 0) return "";
                var z = Mt.length * O;
                for (O = Math.floor(Math.log(O) / Math.log(2)); O; ) Mt += Mt, O--;
                return Mt + Mt.substring(0, z - Mt.length);
              }(" ", it), "^"), it = 0);
            }
          }
          for (var bt = Lt[Lt.length - 1], xt = $[$.length - 1]; bt === xt && (it++ < 2 ? nt = `
  `.concat(bt).concat(nt) : ot = bt, Lt.pop(), $.pop(), Lt.length !== 0 && $.length !== 0); ) bt = Lt[Lt.length - 1], xt = $[$.length - 1];
          var Ct = Math.max(Lt.length, $.length);
          if (Ct === 0) {
            var Tt = dt.split(`
`);
            if (Tt.length > 30) for (Tt[26] = "".concat(M, "...").concat(V); Tt.length > 27; ) Tt.pop();
            return "".concat(S.notIdentical, `

`).concat(Tt.join(`
`), `
`);
          }
          it > 3 && (nt = `
`.concat(M, "...").concat(V).concat(nt), ft = true), ot !== "" && (nt = `
  `.concat(ot).concat(nt), ot = "");
          var Bt = 0, At = S[rt] + `
`.concat(Z, "+ actual").concat(V, " ").concat(D, "- expected").concat(V), Ut = " ".concat(M, "...").concat(V, " Lines skipped");
          for (it = 0; it < Ct; it++) {
            var Vt = it - I;
            if (Lt.length < it + 1) Vt > 1 && it > 2 && (Vt > 4 ? (X += `
`.concat(M, "...").concat(V), ft = true) : Vt > 3 && (X += `
  `.concat($[it - 2]), Bt++), X += `
  `.concat($[it - 1]), Bt++), I = it, ot += `
`.concat(D, "-").concat(V, " ").concat($[it]), Bt++;
            else if ($.length < it + 1) Vt > 1 && it > 2 && (Vt > 4 ? (X += `
`.concat(M, "...").concat(V), ft = true) : Vt > 3 && (X += `
  `.concat(Lt[it - 2]), Bt++), X += `
  `.concat(Lt[it - 1]), Bt++), I = it, X += `
`.concat(Z, "+").concat(V, " ").concat(Lt[it]), Bt++;
            else {
              var oe = $[it], te = Lt[it], yt = te !== oe && (!U(te, ",") || te.slice(0, -1) !== oe);
              yt && U(oe, ",") && oe.slice(0, -1) === te && (yt = false, te += ","), yt ? (Vt > 1 && it > 2 && (Vt > 4 ? (X += `
`.concat(M, "...").concat(V), ft = true) : Vt > 3 && (X += `
  `.concat(Lt[it - 2]), Bt++), X += `
  `.concat(Lt[it - 1]), Bt++), I = it, X += `
`.concat(Z, "+").concat(V, " ").concat(te), ot += `
`.concat(D, "-").concat(V, " ").concat(oe), Bt += 2) : (X += ot, ot = "", Vt !== 1 && it !== 0 || (X += `
  `.concat(te), Bt++));
            }
            if (Bt > 20 && it < Ct - 2) return "".concat(At).concat(Ut, `
`).concat(X, `
`).concat(M, "...").concat(V).concat(ot, `
`) + "".concat(M, "...").concat(V);
          }
          return "".concat(At).concat(ft ? Ut : "", `
`).concat(X).concat(ot).concat(nt).concat(mt);
        }
        var lt = function(pt, at) {
          (function(dt, Lt) {
            if (typeof Lt != "function" && Lt !== null) throw new TypeError("Super expression must either be null or a function");
            dt.prototype = Object.create(Lt && Lt.prototype, { constructor: { value: dt, writable: true, configurable: true } }), Object.defineProperty(dt, "prototype", { writable: false }), Lt && P(dt, Lt);
          })(ft, pt);
          var rt, ot, X, I, nt = (rt = ft, ot = T(), function() {
            var dt, Lt = k(rt);
            if (ot) {
              var $ = k(this).constructor;
              dt = Reflect.construct(Lt, arguments, $);
            } else dt = Lt.apply(this, arguments);
            return h(this, dt);
          });
          function ft(dt) {
            var Lt;
            if (function(Vt, oe) {
              if (!(Vt instanceof oe)) throw new TypeError("Cannot call a class as a function");
            }(this, ft), R(dt) !== "object" || dt === null) throw new v("options", "Object", dt);
            var $ = dt.message, it = dt.operator, mt = dt.stackStartFn, Ot = dt.actual, bt = dt.expected, xt = Error.stackTraceLimit;
            if (Error.stackTraceLimit = 0, $ != null) Lt = nt.call(this, String($));
            else if (u.stderr && u.stderr.isTTY && (u.stderr && u.stderr.getColorDepth && u.stderr.getColorDepth() !== 1 ? (M = "\x1B[34m", Z = "\x1B[32m", V = "\x1B[39m", D = "\x1B[31m") : (M = "", Z = "", V = "", D = "")), R(Ot) === "object" && Ot !== null && R(bt) === "object" && bt !== null && "stack" in Ot && Ot instanceof Error && "stack" in bt && bt instanceof Error && (Ot = x(Ot), bt = x(bt)), it === "deepStrictEqual" || it === "strictEqual") Lt = nt.call(this, W(Ot, bt, it));
            else if (it === "notDeepStrictEqual" || it === "notStrictEqual") {
              var Ct = S[it], Tt = B(Ot).split(`
`);
              if (it === "notStrictEqual" && R(Ot) === "object" && Ot !== null && (Ct = S.notStrictEqualObject), Tt.length > 30) for (Tt[26] = "".concat(M, "...").concat(V); Tt.length > 27; ) Tt.pop();
              Lt = Tt.length === 1 ? nt.call(this, "".concat(Ct, " ").concat(Tt[0])) : nt.call(this, "".concat(Ct, `

`).concat(Tt.join(`
`), `
`));
            } else {
              var Bt = B(Ot), At = "", Ut = S[it];
              it === "notDeepEqual" || it === "notEqual" ? (Bt = "".concat(S[it], `

`).concat(Bt)).length > 1024 && (Bt = "".concat(Bt.slice(0, 1021), "...")) : (At = "".concat(B(bt)), Bt.length > 512 && (Bt = "".concat(Bt.slice(0, 509), "...")), At.length > 512 && (At = "".concat(At.slice(0, 509), "...")), it === "deepEqual" || it === "equal" ? Bt = "".concat(Ut, `

`).concat(Bt, `

should equal

`) : At = " ".concat(it, " ").concat(At)), Lt = nt.call(this, "".concat(Bt).concat(At));
            }
            return Error.stackTraceLimit = xt, Lt.generatedMessage = !$, Object.defineProperty(m(Lt), "name", { value: "AssertionError [ERR_ASSERTION]", enumerable: false, writable: true, configurable: true }), Lt.code = "ERR_ASSERTION", Lt.actual = Ot, Lt.expected = bt, Lt.operator = it, Error.captureStackTrace && Error.captureStackTrace(m(Lt), mt), Lt.stack, Lt.name = "AssertionError", h(Lt);
          }
          return X = ft, (I = [{ key: "toString", value: function() {
            return "".concat(this.name, " [").concat(this.code, "]: ").concat(this.message);
          } }, { key: at, value: function(dt, Lt) {
            return F(this, f(f({}, Lt), {}, { customInspect: false, depth: 0 }));
          } }]) && g(X.prototype, I), Object.defineProperty(X, "prototype", { writable: false }), ft;
        }(c(Error), F.custom);
        l.exports = lt;
      }, 4035: (l, s, i) => {
        var u, d = i(6556), f = i(9092)(), p = i(9957), g = i(5795);
        if (f) {
          var b = d("RegExp.prototype.exec"), h = {}, m = function() {
            throw h;
          }, c = { toString: m, valueOf: m };
          typeof Symbol.toPrimitive == "symbol" && (c[Symbol.toPrimitive] = m), u = function(T) {
            if (!T || typeof T != "object") return false;
            var P = g(T, "lastIndex");
            if (!(P && p(P, "value"))) return false;
            try {
              b(T, c);
            } catch (k) {
              return k === h;
            }
          };
        } else {
          var w = d("Object.prototype.toString");
          u = function(T) {
            return !(!T || typeof T != "object" && typeof T != "function") && w(T) === "[object RegExp]";
          };
        }
        l.exports = u;
      }, 4039: (l, s, i) => {
        var u = typeof Symbol < "u" && Symbol, d = i(1333);
        l.exports = function() {
          return typeof u == "function" && typeof Symbol == "function" && typeof u("foo") == "symbol" && typeof Symbol("bar") == "symbol" && d();
        };
      }, 4107: (l, s, i) => {
        var u = i(6698), d = i(392), f = i(2861).Buffer, p = [1116352408, 1899447441, 3049323471, 3921009573, 961987163, 1508970993, 2453635748, 2870763221, 3624381080, 310598401, 607225278, 1426881987, 1925078388, 2162078206, 2614888103, 3248222580, 3835390401, 4022224774, 264347078, 604807628, 770255983, 1249150122, 1555081692, 1996064986, 2554220882, 2821834349, 2952996808, 3210313671, 3336571891, 3584528711, 113926993, 338241895, 666307205, 773529912, 1294757372, 1396182291, 1695183700, 1986661051, 2177026350, 2456956037, 2730485921, 2820302411, 3259730800, 3345764771, 3516065817, 3600352804, 4094571909, 275423344, 430227734, 506948616, 659060556, 883997877, 958139571, 1322822218, 1537002063, 1747873779, 1955562222, 2024104815, 2227730452, 2361852424, 2428436474, 2756734187, 3204031479, 3329325298], g = new Array(64);
        function b() {
          this.init(), this._w = g, d.call(this, 64, 56);
        }
        function h(k, R, F) {
          return F ^ k & (R ^ F);
        }
        function m(k, R, F) {
          return k & R | F & (k | R);
        }
        function c(k) {
          return (k >>> 2 | k << 30) ^ (k >>> 13 | k << 19) ^ (k >>> 22 | k << 10);
        }
        function w(k) {
          return (k >>> 6 | k << 26) ^ (k >>> 11 | k << 21) ^ (k >>> 25 | k << 7);
        }
        function T(k) {
          return (k >>> 7 | k << 25) ^ (k >>> 18 | k << 14) ^ k >>> 3;
        }
        function P(k) {
          return (k >>> 17 | k << 15) ^ (k >>> 19 | k << 13) ^ k >>> 10;
        }
        u(b, d), b.prototype.init = function() {
          return this._a = 1779033703, this._b = 3144134277, this._c = 1013904242, this._d = 2773480762, this._e = 1359893119, this._f = 2600822924, this._g = 528734635, this._h = 1541459225, this;
        }, b.prototype._update = function(k) {
          for (var R = this._w, F = 0 | this._a, v = 0 | this._b, U = 0 | this._c, M = 0 | this._d, Z = 0 | this._e, D = 0 | this._f, V = 0 | this._g, S = 0 | this._h, x = 0; x < 16; ++x) R[x] = k.readInt32BE(4 * x);
          for (; x < 64; ++x) R[x] = P(R[x - 2]) + R[x - 7] + T(R[x - 15]) + R[x - 16] | 0;
          for (var B = 0; B < 64; ++B) {
            var W = S + w(Z) + h(Z, D, V) + p[B] + R[B] | 0, lt = c(F) + m(F, v, U) | 0;
            S = V, V = D, D = Z, Z = M + W | 0, M = U, U = v, v = F, F = W + lt | 0;
          }
          this._a = F + this._a | 0, this._b = v + this._b | 0, this._c = U + this._c | 0, this._d = M + this._d | 0, this._e = Z + this._e | 0, this._f = D + this._f | 0, this._g = V + this._g | 0, this._h = S + this._h | 0;
        }, b.prototype._hash = function() {
          var k = f.allocUnsafe(32);
          return k.writeInt32BE(this._a, 0), k.writeInt32BE(this._b, 4), k.writeInt32BE(this._c, 8), k.writeInt32BE(this._d, 12), k.writeInt32BE(this._e, 16), k.writeInt32BE(this._f, 20), k.writeInt32BE(this._g, 24), k.writeInt32BE(this._h, 28), k;
        }, l.exports = b;
      }, 4133: (l, s, i) => {
        var u = i(487), d = i(8452), f = i(3003), p = i(6642), g = i(2464), b = u(p(), Number);
        d(b, { getPolyfill: p, implementation: f, shim: g }), l.exports = b;
      }, 4148: (l, s, i) => {
        var u = i(5606), d = i(6763);
        function f($) {
          return f = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(it) {
            return typeof it;
          } : function(it) {
            return it && typeof Symbol == "function" && it.constructor === Symbol && it !== Symbol.prototype ? "symbol" : typeof it;
          }, f($);
        }
        function p($, it, mt) {
          return Object.defineProperty($, "prototype", { writable: false }), $;
        }
        var g, b, h = i(9597).codes, m = h.ERR_AMBIGUOUS_ARGUMENT, c = h.ERR_INVALID_ARG_TYPE, w = h.ERR_INVALID_ARG_VALUE, T = h.ERR_INVALID_RETURN_VALUE, P = h.ERR_MISSING_ARGS, k = i(3918), R = i(537).inspect, F = i(537).types, v = F.isPromise, U = F.isRegExp, M = i(9133)(), Z = i(9394)(), D = i(8075)("RegExp.prototype.test");
        function V() {
          var $ = i(2299);
          g = $.isDeepEqual, b = $.isDeepStrictEqual;
        }
        var S = false, x = l.exports = pt, B = {};
        function W($) {
          throw $.message instanceof Error ? $.message : new k($);
        }
        function lt($, it, mt, Ot) {
          if (!mt) {
            var bt = false;
            if (it === 0) bt = true, Ot = "No value argument passed to `assert.ok()`";
            else if (Ot instanceof Error) throw Ot;
            var xt = new k({ actual: mt, expected: true, message: Ot, operator: "==", stackStartFn: $ });
            throw xt.generatedMessage = bt, xt;
          }
        }
        function pt() {
          for (var $ = arguments.length, it = new Array($), mt = 0; mt < $; mt++) it[mt] = arguments[mt];
          lt.apply(void 0, [pt, it.length].concat(it));
        }
        x.fail = function $(it, mt, Ot, bt, xt) {
          var Ct, Tt = arguments.length;
          if (Tt === 0 ? Ct = "Failed" : Tt === 1 ? (Ot = it, it = void 0) : (S === false && (S = true, (u.emitWarning ? u.emitWarning : d.warn.bind(d))("assert.fail() with more than one argument is deprecated. Please use assert.strictEqual() instead or only pass a message.", "DeprecationWarning", "DEP0094")), Tt === 2 && (bt = "!=")), Ot instanceof Error) throw Ot;
          var Bt = { actual: it, expected: mt, operator: bt === void 0 ? "fail" : bt, stackStartFn: xt || $ };
          Ot !== void 0 && (Bt.message = Ot);
          var At = new k(Bt);
          throw Ct && (At.message = Ct, At.generatedMessage = true), At;
        }, x.AssertionError = k, x.ok = pt, x.equal = function $(it, mt, Ot) {
          if (arguments.length < 2) throw new P("actual", "expected");
          it != mt && W({ actual: it, expected: mt, message: Ot, operator: "==", stackStartFn: $ });
        }, x.notEqual = function $(it, mt, Ot) {
          if (arguments.length < 2) throw new P("actual", "expected");
          it == mt && W({ actual: it, expected: mt, message: Ot, operator: "!=", stackStartFn: $ });
        }, x.deepEqual = function $(it, mt, Ot) {
          if (arguments.length < 2) throw new P("actual", "expected");
          g === void 0 && V(), g(it, mt) || W({ actual: it, expected: mt, message: Ot, operator: "deepEqual", stackStartFn: $ });
        }, x.notDeepEqual = function $(it, mt, Ot) {
          if (arguments.length < 2) throw new P("actual", "expected");
          g === void 0 && V(), g(it, mt) && W({ actual: it, expected: mt, message: Ot, operator: "notDeepEqual", stackStartFn: $ });
        }, x.deepStrictEqual = function $(it, mt, Ot) {
          if (arguments.length < 2) throw new P("actual", "expected");
          g === void 0 && V(), b(it, mt) || W({ actual: it, expected: mt, message: Ot, operator: "deepStrictEqual", stackStartFn: $ });
        }, x.notDeepStrictEqual = function $(it, mt, Ot) {
          if (arguments.length < 2) throw new P("actual", "expected");
          g === void 0 && V(), b(it, mt) && W({ actual: it, expected: mt, message: Ot, operator: "notDeepStrictEqual", stackStartFn: $ });
        }, x.strictEqual = function $(it, mt, Ot) {
          if (arguments.length < 2) throw new P("actual", "expected");
          Z(it, mt) || W({ actual: it, expected: mt, message: Ot, operator: "strictEqual", stackStartFn: $ });
        }, x.notStrictEqual = function $(it, mt, Ot) {
          if (arguments.length < 2) throw new P("actual", "expected");
          Z(it, mt) && W({ actual: it, expected: mt, message: Ot, operator: "notStrictEqual", stackStartFn: $ });
        };
        var at = p(function $(it, mt, Ot) {
          var bt = this;
          (function(xt, Ct) {
            if (!(xt instanceof Ct)) throw new TypeError("Cannot call a class as a function");
          })(this, $), mt.forEach(function(xt) {
            xt in it && (Ot !== void 0 && typeof Ot[xt] == "string" && U(it[xt]) && D(it[xt], Ot[xt]) ? bt[xt] = Ot[xt] : bt[xt] = it[xt]);
          });
        });
        function rt($, it, mt, Ot) {
          if (typeof it != "function") {
            if (U(it)) return D(it, $);
            if (arguments.length === 2) throw new c("expected", ["Function", "RegExp"], it);
            if (f($) !== "object" || $ === null) {
              var bt = new k({ actual: $, expected: it, message: mt, operator: "deepStrictEqual", stackStartFn: Ot });
              throw bt.operator = Ot.name, bt;
            }
            var xt = Object.keys(it);
            if (it instanceof Error) xt.push("name", "message");
            else if (xt.length === 0) throw new w("error", it, "may not be an empty object");
            return g === void 0 && V(), xt.forEach(function(Ct) {
              typeof $[Ct] == "string" && U(it[Ct]) && D(it[Ct], $[Ct]) || function(Tt, Bt, At, Ut, Vt, oe) {
                if (!(At in Tt) || !b(Tt[At], Bt[At])) {
                  if (!Ut) {
                    var te = new at(Tt, Vt), yt = new at(Bt, Vt, Tt), Mt = new k({ actual: te, expected: yt, operator: "deepStrictEqual", stackStartFn: oe });
                    throw Mt.actual = Tt, Mt.expected = Bt, Mt.operator = oe.name, Mt;
                  }
                  W({ actual: Tt, expected: Bt, message: Ut, operator: oe.name, stackStartFn: oe });
                }
              }($, it, Ct, mt, xt, Ot);
            }), true;
          }
          return it.prototype !== void 0 && $ instanceof it || !Error.isPrototypeOf(it) && it.call({}, $) === true;
        }
        function ot($) {
          if (typeof $ != "function") throw new c("fn", "Function", $);
          try {
            $();
          } catch (it) {
            return it;
          }
          return B;
        }
        function X($) {
          return v($) || $ !== null && f($) === "object" && typeof $.then == "function" && typeof $.catch == "function";
        }
        function I($) {
          return Promise.resolve().then(function() {
            var it;
            if (typeof $ == "function") {
              if (!X(it = $())) throw new T("instance of Promise", "promiseFn", it);
            } else {
              if (!X($)) throw new c("promiseFn", ["Function", "Promise"], $);
              it = $;
            }
            return Promise.resolve().then(function() {
              return it;
            }).then(function() {
              return B;
            }).catch(function(mt) {
              return mt;
            });
          });
        }
        function nt($, it, mt, Ot) {
          if (typeof mt == "string") {
            if (arguments.length === 4) throw new c("error", ["Object", "Error", "Function", "RegExp"], mt);
            if (f(it) === "object" && it !== null) {
              if (it.message === mt) throw new m("error/message", 'The error message "'.concat(it.message, '" is identical to the message.'));
            } else if (it === mt) throw new m("error/message", 'The error "'.concat(it, '" is identical to the message.'));
            Ot = mt, mt = void 0;
          } else if (mt != null && f(mt) !== "object" && typeof mt != "function") throw new c("error", ["Object", "Error", "Function", "RegExp"], mt);
          if (it === B) {
            var bt = "";
            mt && mt.name && (bt += " (".concat(mt.name, ")")), bt += Ot ? ": ".concat(Ot) : ".";
            var xt = $.name === "rejects" ? "rejection" : "exception";
            W({ actual: void 0, expected: mt, operator: $.name, message: "Missing expected ".concat(xt).concat(bt), stackStartFn: $ });
          }
          if (mt && !rt(it, mt, Ot, $)) throw it;
        }
        function ft($, it, mt, Ot) {
          if (it !== B) {
            if (typeof mt == "string" && (Ot = mt, mt = void 0), !mt || rt(it, mt)) {
              var bt = Ot ? ": ".concat(Ot) : ".", xt = $.name === "doesNotReject" ? "rejection" : "exception";
              W({ actual: it, expected: mt, operator: $.name, message: "Got unwanted ".concat(xt).concat(bt, `
`) + 'Actual message: "'.concat(it && it.message, '"'), stackStartFn: $ });
            }
            throw it;
          }
        }
        function dt($, it, mt, Ot, bt) {
          if (!U(it)) throw new c("regexp", "RegExp", it);
          var xt = bt === "match";
          if (typeof $ != "string" || D(it, $) !== xt) {
            if (mt instanceof Error) throw mt;
            var Ct = !mt;
            mt = mt || (typeof $ != "string" ? 'The "string" argument must be of type string. Received type ' + "".concat(f($), " (").concat(R($), ")") : (xt ? "The input did not match the regular expression " : "The input was expected to not match the regular expression ") + "".concat(R(it), `. Input:

`).concat(R($), `
`));
            var Tt = new k({ actual: $, expected: it, message: mt, operator: bt, stackStartFn: Ot });
            throw Tt.generatedMessage = Ct, Tt;
          }
        }
        function Lt() {
          for (var $ = arguments.length, it = new Array($), mt = 0; mt < $; mt++) it[mt] = arguments[mt];
          lt.apply(void 0, [Lt, it.length].concat(it));
        }
        x.throws = function $(it) {
          for (var mt = arguments.length, Ot = new Array(mt > 1 ? mt - 1 : 0), bt = 1; bt < mt; bt++) Ot[bt - 1] = arguments[bt];
          nt.apply(void 0, [$, ot(it)].concat(Ot));
        }, x.rejects = function $(it) {
          for (var mt = arguments.length, Ot = new Array(mt > 1 ? mt - 1 : 0), bt = 1; bt < mt; bt++) Ot[bt - 1] = arguments[bt];
          return I(it).then(function(xt) {
            return nt.apply(void 0, [$, xt].concat(Ot));
          });
        }, x.doesNotThrow = function $(it) {
          for (var mt = arguments.length, Ot = new Array(mt > 1 ? mt - 1 : 0), bt = 1; bt < mt; bt++) Ot[bt - 1] = arguments[bt];
          ft.apply(void 0, [$, ot(it)].concat(Ot));
        }, x.doesNotReject = function $(it) {
          for (var mt = arguments.length, Ot = new Array(mt > 1 ? mt - 1 : 0), bt = 1; bt < mt; bt++) Ot[bt - 1] = arguments[bt];
          return I(it).then(function(xt) {
            return ft.apply(void 0, [$, xt].concat(Ot));
          });
        }, x.ifError = function $(it) {
          if (it != null) {
            var mt = "ifError got unwanted exception: ";
            f(it) === "object" && typeof it.message == "string" ? it.message.length === 0 && it.constructor ? mt += it.constructor.name : mt += it.message : mt += R(it);
            var Ot = new k({ actual: it, expected: null, operator: "ifError", message: mt, stackStartFn: $ }), bt = it.stack;
            if (typeof bt == "string") {
              var xt = bt.split(`
`);
              xt.shift();
              for (var Ct = Ot.stack.split(`
`), Tt = 0; Tt < xt.length; Tt++) {
                var Bt = Ct.indexOf(xt[Tt]);
                if (Bt !== -1) {
                  Ct = Ct.slice(0, Bt);
                  break;
                }
              }
              Ot.stack = "".concat(Ct.join(`
`), `
`).concat(xt.join(`
`));
            }
            throw Ot;
          }
        }, x.match = function $(it, mt, Ot) {
          dt(it, mt, Ot, $, "match");
        }, x.doesNotMatch = function $(it, mt, Ot) {
          dt(it, mt, Ot, $, "doesNotMatch");
        }, x.strict = M(Lt, x, { equal: x.strictEqual, deepEqual: x.deepStrictEqual, notEqual: x.notStrictEqual, notDeepEqual: x.notDeepStrictEqual }), x.strict.strict = x.strict;
      }, 4459: (l) => {
        l.exports = Number.isNaN || function(s) {
          return s != s;
        };
      }, 5345: (l) => {
        l.exports = URIError;
      }, 5360: (l, s) => {
        var i = function(b, h) {
          return h || (h = {}), b.split("").forEach(function(m, c) {
            m in h || (h[m] = c);
          }), h;
        }, u = { alphabet: "ABCDEFGHIJKLMNOPQRSTUVWXYZ234567", charmap: { 0: 14, 1: 8 } };
        u.charmap = i(u.alphabet, u.charmap);
        var d = { alphabet: "0123456789ABCDEFGHJKMNPQRSTVWXYZ", charmap: { O: 0, I: 1, L: 1 } };
        d.charmap = i(d.alphabet, d.charmap);
        var f = { alphabet: "0123456789ABCDEFGHIJKLMNOPQRSTUV", charmap: {} };
        function p(b) {
          if (this.buf = [], this.shift = 8, this.carry = 0, b) {
            switch (b.type) {
              case "rfc4648":
                this.charmap = s.rfc4648.charmap;
                break;
              case "crockford":
                this.charmap = s.crockford.charmap;
                break;
              case "base32hex":
                this.charmap = s.base32hex.charmap;
                break;
              default:
                throw new Error("invalid type");
            }
            b.charmap && (this.charmap = b.charmap);
          }
        }
        function g(b) {
          if (this.buf = "", this.shift = 3, this.carry = 0, b) {
            switch (b.type) {
              case "rfc4648":
                this.alphabet = s.rfc4648.alphabet;
                break;
              case "crockford":
                this.alphabet = s.crockford.alphabet;
                break;
              case "base32hex":
                this.alphabet = s.base32hex.alphabet;
                break;
              default:
                throw new Error("invalid type");
            }
            b.alphabet ? this.alphabet = b.alphabet : b.lc && (this.alphabet = this.alphabet.toLowerCase());
          }
        }
        f.charmap = i(f.alphabet, f.charmap), p.prototype.charmap = u.charmap, p.prototype.write = function(b) {
          var h = this.charmap, m = this.buf, c = this.shift, w = this.carry;
          return b.toUpperCase().split("").forEach(function(T) {
            if (T != "=") {
              var P = 255 & h[T];
              (c -= 5) > 0 ? w |= P << c : c < 0 ? (m.push(w | P >> -c), w = P << (c += 8) & 255) : (m.push(w | P), c = 8, w = 0);
            }
          }), this.shift = c, this.carry = w, this;
        }, p.prototype.finalize = function(b) {
          return b && this.write(b), this.shift !== 8 && this.carry !== 0 && (this.buf.push(this.carry), this.shift = 8, this.carry = 0), this.buf;
        }, g.prototype.alphabet = u.alphabet, g.prototype.write = function(b) {
          var h, m, c, w = this.shift, T = this.carry;
          for (c = 0; c < b.length; c++) h = T | (m = b[c]) >> w, this.buf += this.alphabet[31 & h], w > 5 && (h = m >> (w -= 5), this.buf += this.alphabet[31 & h]), T = m << (w = 5 - w), w = 8 - w;
          return this.shift = w, this.carry = T, this;
        }, g.prototype.finalize = function(b) {
          return b && this.write(b), this.shift !== 3 && (this.buf += this.alphabet[31 & this.carry], this.shift = 3, this.carry = 0), this.buf;
        }, s.encode = function(b, h) {
          return new g(h).finalize(b);
        }, s.decode = function(b, h) {
          return new p(h).finalize(b);
        }, s.Decoder = p, s.Encoder = g, s.charmap = i, s.crockford = d, s.rfc4648 = u, s.base32hex = f;
      }, 5606: (l) => {
        var s, i, u = l.exports = {};
        function d() {
          throw new Error("setTimeout has not been defined");
        }
        function f() {
          throw new Error("clearTimeout has not been defined");
        }
        function p(k) {
          if (s === setTimeout) return setTimeout(k, 0);
          if ((s === d || !s) && setTimeout) return s = setTimeout, setTimeout(k, 0);
          try {
            return s(k, 0);
          } catch {
            try {
              return s.call(null, k, 0);
            } catch {
              return s.call(this, k, 0);
            }
          }
        }
        (function() {
          try {
            s = typeof setTimeout == "function" ? setTimeout : d;
          } catch {
            s = d;
          }
          try {
            i = typeof clearTimeout == "function" ? clearTimeout : f;
          } catch {
            i = f;
          }
        })();
        var g, b = [], h = false, m = -1;
        function c() {
          h && g && (h = false, g.length ? b = g.concat(b) : m = -1, b.length && w());
        }
        function w() {
          if (!h) {
            var k = p(c);
            h = true;
            for (var R = b.length; R; ) {
              for (g = b, b = []; ++m < R; ) g && g[m].run();
              m = -1, R = b.length;
            }
            g = null, h = false, function(F) {
              if (i === clearTimeout) return clearTimeout(F);
              if ((i === f || !i) && clearTimeout) return i = clearTimeout, clearTimeout(F);
              try {
                return i(F);
              } catch {
                try {
                  return i.call(null, F);
                } catch {
                  return i.call(this, F);
                }
              }
            }(k);
          }
        }
        function T(k, R) {
          this.fun = k, this.array = R;
        }
        function P() {
        }
        u.nextTick = function(k) {
          var R = new Array(arguments.length - 1);
          if (arguments.length > 1) for (var F = 1; F < arguments.length; F++) R[F - 1] = arguments[F];
          b.push(new T(k, R)), b.length !== 1 || h || p(w);
        }, T.prototype.run = function() {
          this.fun.apply(null, this.array);
        }, u.title = "browser", u.browser = true, u.env = {}, u.argv = [], u.version = "", u.versions = {}, u.on = P, u.addListener = P, u.once = P, u.off = P, u.removeListener = P, u.removeAllListeners = P, u.emit = P, u.prependListener = P, u.prependOnceListener = P, u.listeners = function(k) {
          return [];
        }, u.binding = function(k) {
          throw new Error("process.binding is not supported");
        }, u.cwd = function() {
          return "/";
        }, u.chdir = function(k) {
          throw new Error("process.chdir is not supported");
        }, u.umask = function() {
          return 0;
        };
      }, 5680: (l, s, i) => {
        var u = i(5767);
        l.exports = function(d) {
          return !!u(d);
        };
      }, 5767: (l, s, i) => {
        var u = i(2682), d = i(9209), f = i(487), p = i(6556), g = i(5795), b = i(3628), h = p("Object.prototype.toString"), m = i(9092)(), c = typeof globalThis > "u" ? i.g : globalThis, w = d(), T = p("String.prototype.slice"), P = p("Array.prototype.indexOf", true) || function(R, F) {
          for (var v = 0; v < R.length; v += 1) if (R[v] === F) return v;
          return -1;
        }, k = { __proto__: null };
        u(w, m && g && b ? function(R) {
          var F = new c[R]();
          if (Symbol.toStringTag in F && b) {
            var v = b(F), U = g(v, Symbol.toStringTag);
            if (!U && v) {
              var M = b(v);
              U = g(M, Symbol.toStringTag);
            }
            k["$" + R] = f(U.get);
          }
        } : function(R) {
          var F = new c[R](), v = F.slice || F.set;
          v && (k["$" + R] = f(v));
        }), l.exports = function(R) {
          if (!R || typeof R != "object") return false;
          if (!m) {
            var F = T(h(R), 8, -1);
            return P(w, F) > -1 ? F : F === "Object" && function(v) {
              var U = false;
              return u(k, function(M, Z) {
                if (!U) try {
                  M(v), U = T(Z, 1);
                } catch {
                }
              }), U;
            }(R);
          }
          return g ? function(v) {
            var U = false;
            return u(k, function(M, Z) {
              if (!U) try {
                "$" + M(v) === Z && (U = T(Z, 1));
              } catch {
              }
            }), U;
          }(R) : null;
        };
      }, 5795: (l, s, i) => {
        var u = i(6549);
        if (u) try {
          u([], "length");
        } catch {
          u = null;
        }
        l.exports = u;
      }, 5880: (l) => {
        l.exports = Math.pow;
      }, 6188: (l) => {
        l.exports = Math.max;
      }, 6549: (l) => {
        l.exports = Object.getOwnPropertyDescriptor;
      }, 6556: (l, s, i) => {
        var u = i(453), d = i(3126), f = d([u("%String.prototype.indexOf%")]);
        l.exports = function(p, g) {
          var b = u(p, !!g);
          return typeof b == "function" && f(p, ".prototype.") > -1 ? d([b]) : b;
        };
      }, 6576: (l, s, i) => {
        var u = i(9394), d = i(8452);
        l.exports = function() {
          var f = u();
          return d(Object, { is: f }, { is: function() {
            return Object.is !== f;
          } }), f;
        };
      }, 6578: (l) => {
        l.exports = ["Float16Array", "Float32Array", "Float64Array", "Int8Array", "Int16Array", "Int32Array", "Uint8Array", "Uint8ClampedArray", "Uint16Array", "Uint32Array", "BigInt64Array", "BigUint64Array"];
      }, 6642: (l, s, i) => {
        var u = i(3003);
        l.exports = function() {
          return Number.isNaN && Number.isNaN(NaN) && !Number.isNaN("a") ? Number.isNaN : u;
        };
      }, 6698: (l) => {
        typeof Object.create == "function" ? l.exports = function(s, i) {
          i && (s.super_ = i, s.prototype = Object.create(i.prototype, { constructor: { value: s, enumerable: false, writable: true, configurable: true } }));
        } : l.exports = function(s, i) {
          if (i) {
            s.super_ = i;
            var u = function() {
            };
            u.prototype = i.prototype, s.prototype = new u(), s.prototype.constructor = s;
          }
        };
      }, 6710: (l, s, i) => {
        var u = i(6698), d = i(4107), f = i(392), p = i(2861).Buffer, g = new Array(64);
        function b() {
          this.init(), this._w = g, f.call(this, 64, 56);
        }
        u(b, d), b.prototype.init = function() {
          return this._a = 3238371032, this._b = 914150663, this._c = 812702999, this._d = 4144912697, this._e = 4290775857, this._f = 1750603025, this._g = 1694076839, this._h = 3204075428, this;
        }, b.prototype._hash = function() {
          var h = p.allocUnsafe(28);
          return h.writeInt32BE(this._a, 0), h.writeInt32BE(this._b, 4), h.writeInt32BE(this._c, 8), h.writeInt32BE(this._d, 12), h.writeInt32BE(this._e, 16), h.writeInt32BE(this._f, 20), h.writeInt32BE(this._g, 24), h;
        }, l.exports = b;
      }, 6743: (l, s, i) => {
        var u = i(9353);
        l.exports = Function.prototype.bind || u;
      }, 6763: (l, s, i) => {
        var u = i(537), d = i(4148);
        function f() {
          return (/* @__PURE__ */ new Date()).getTime();
        }
        var p, g = Array.prototype.slice, b = {};
        p = i.g !== void 0 && i.g.console ? i.g.console : typeof window < "u" && window.console ? window.console : {};
        for (var h = [[function() {
        }, "log"], [function() {
          p.log.apply(p, arguments);
        }, "info"], [function() {
          p.log.apply(p, arguments);
        }, "warn"], [function() {
          p.warn.apply(p, arguments);
        }, "error"], [function(P) {
          b[P] = f();
        }, "time"], [function(P) {
          var k = b[P];
          if (!k) throw new Error("No such label: " + P);
          delete b[P];
          var R = f() - k;
          p.log(P + ": " + R + "ms");
        }, "timeEnd"], [function() {
          var P = new Error();
          P.name = "Trace", P.message = u.format.apply(null, arguments), p.error(P.stack);
        }, "trace"], [function(P) {
          p.log(u.inspect(P) + `
`);
        }, "dir"], [function(P) {
          if (!P) {
            var k = g.call(arguments, 1);
            d.ok(false, u.format.apply(null, k));
          }
        }, "assert"]], m = 0; m < h.length; m++) {
          var c = h[m], w = c[0], T = c[1];
          p[T] || (p[T] = w);
        }
        l.exports = p;
      }, 6897: (l, s, i) => {
        var u = i(453), d = i(41), f = i(592)(), p = i(5795), g = i(9675), b = u("%Math.floor%");
        l.exports = function(h, m) {
          if (typeof h != "function") throw new g("`fn` is not a function");
          if (typeof m != "number" || m < 0 || m > 4294967295 || b(m) !== m) throw new g("`length` must be a positive 32-bit integer");
          var c = arguments.length > 2 && !!arguments[2], w = true, T = true;
          if ("length" in h && p) {
            var P = p(h, "length");
            P && !P.configurable && (w = false), P && !P.writable && (T = false);
          }
          return (w || T || !c) && (f ? d(h, "length", m, true, true) : d(h, "length", m)), h;
        };
      }, 7119: (l) => {
        l.exports = typeof Reflect < "u" && Reflect && Reflect.apply;
      }, 7175: (l, s, i) => {
        i.r(s), i.d(s, { Account: () => va, Address: () => Sn, Asset: () => Rn, AuthClawbackEnabledFlag: () => ci, AuthImmutableFlag: () => gi, AuthRequiredFlag: () => Vo, AuthRevocableFlag: () => bi, BASE_FEE: () => Uu, Claimant: () => Lo, Contract: () => Uc, FeeBumpTransaction: () => vi, Hyper: () => u.Hyper, Int128: () => ms, Int256: () => fu, Keypair: () => Xr, LiquidityPoolAsset: () => mo, LiquidityPoolFeeV18: () => Xo, LiquidityPoolId: () => yi, Memo: () => Tn, MemoHash: () => Kn, MemoID: () => Or, MemoNone: () => xn, MemoReturn: () => Qn, MemoText: () => vn, MuxedAccount: () => ba, Networks: () => Ps, Operation: () => me, ScInt: () => Hc, SignerKey: () => Rc, Soroban: () => ju, SorobanDataBuilder: () => eu, StrKey: () => pe, TimeoutInfinite: () => Nc, Transaction: () => hr, TransactionBase: () => ee, TransactionBuilder: () => ru, Uint128: () => su, Uint256: () => pa, UnsignedHyper: () => u.UnsignedHyper, XdrLargeInt: () => na, authorizeEntry: () => Er, authorizeInvocation: () => cn, buildInvocationTree: () => so, cereal: () => p, decodeAddressToMuxedAccount: () => Qo, default: () => On, encodeMuxedAccount: () => ea, encodeMuxedAccountToAddress: () => Si, extractBaseAddress: () => _o, getLiquidityPoolId: () => Xn, hash: () => b, humanizeEvents: () => We, nativeToScVal: () => n, scValToBigInt: () => gs, scValToNative: () => A, sign: () => Dr, verify: () => gr, walkInvocationTree: () => Mn, xdr: () => f });
        var u = i(3740), d = u.config(function(r) {
          var y = 1024;
          r.typedef("Value", r.varOpaque()), r.struct("ScpBallot", [["counter", r.lookup("Uint32")], ["value", r.lookup("Value")]]), r.enum("ScpStatementType", { scpStPrepare: 0, scpStConfirm: 1, scpStExternalize: 2, scpStNominate: 3 }), r.struct("ScpNomination", [["quorumSetHash", r.lookup("Hash")], ["votes", r.varArray(r.lookup("Value"), 2147483647)], ["accepted", r.varArray(r.lookup("Value"), 2147483647)]]), r.struct("ScpStatementPrepare", [["quorumSetHash", r.lookup("Hash")], ["ballot", r.lookup("ScpBallot")], ["prepared", r.option(r.lookup("ScpBallot"))], ["preparedPrime", r.option(r.lookup("ScpBallot"))], ["nC", r.lookup("Uint32")], ["nH", r.lookup("Uint32")]]), r.struct("ScpStatementConfirm", [["ballot", r.lookup("ScpBallot")], ["nPrepared", r.lookup("Uint32")], ["nCommit", r.lookup("Uint32")], ["nH", r.lookup("Uint32")], ["quorumSetHash", r.lookup("Hash")]]), r.struct("ScpStatementExternalize", [["commit", r.lookup("ScpBallot")], ["nH", r.lookup("Uint32")], ["commitQuorumSetHash", r.lookup("Hash")]]), r.union("ScpStatementPledges", { switchOn: r.lookup("ScpStatementType"), switchName: "type", switches: [["scpStPrepare", "prepare"], ["scpStConfirm", "confirm"], ["scpStExternalize", "externalize"], ["scpStNominate", "nominate"]], arms: { prepare: r.lookup("ScpStatementPrepare"), confirm: r.lookup("ScpStatementConfirm"), externalize: r.lookup("ScpStatementExternalize"), nominate: r.lookup("ScpNomination") } }), r.struct("ScpStatement", [["nodeId", r.lookup("NodeId")], ["slotIndex", r.lookup("Uint64")], ["pledges", r.lookup("ScpStatementPledges")]]), r.struct("ScpEnvelope", [["statement", r.lookup("ScpStatement")], ["signature", r.lookup("Signature")]]), r.struct("ScpQuorumSet", [["threshold", r.lookup("Uint32")], ["validators", r.varArray(r.lookup("NodeId"), 2147483647)], ["innerSets", r.varArray(r.lookup("ScpQuorumSet"), 2147483647)]]), r.typedef("Thresholds", r.opaque(4)), r.typedef("String32", r.string(32)), r.typedef("String64", r.string(64)), r.typedef("SequenceNumber", r.lookup("Int64")), r.typedef("DataValue", r.varOpaque(64)), r.typedef("AssetCode4", r.opaque(4)), r.typedef("AssetCode12", r.opaque(12)), r.enum("AssetType", { assetTypeNative: 0, assetTypeCreditAlphanum4: 1, assetTypeCreditAlphanum12: 2, assetTypePoolShare: 3 }), r.union("AssetCode", { switchOn: r.lookup("AssetType"), switchName: "type", switches: [["assetTypeCreditAlphanum4", "assetCode4"], ["assetTypeCreditAlphanum12", "assetCode12"]], arms: { assetCode4: r.lookup("AssetCode4"), assetCode12: r.lookup("AssetCode12") } }), r.struct("AlphaNum4", [["assetCode", r.lookup("AssetCode4")], ["issuer", r.lookup("AccountId")]]), r.struct("AlphaNum12", [["assetCode", r.lookup("AssetCode12")], ["issuer", r.lookup("AccountId")]]), r.union("Asset", { switchOn: r.lookup("AssetType"), switchName: "type", switches: [["assetTypeNative", r.void()], ["assetTypeCreditAlphanum4", "alphaNum4"], ["assetTypeCreditAlphanum12", "alphaNum12"]], arms: { alphaNum4: r.lookup("AlphaNum4"), alphaNum12: r.lookup("AlphaNum12") } }), r.struct("Price", [["n", r.lookup("Int32")], ["d", r.lookup("Int32")]]), r.struct("Liabilities", [["buying", r.lookup("Int64")], ["selling", r.lookup("Int64")]]), r.enum("ThresholdIndices", { thresholdMasterWeight: 0, thresholdLow: 1, thresholdMed: 2, thresholdHigh: 3 }), r.enum("LedgerEntryType", { account: 0, trustline: 1, offer: 2, data: 3, claimableBalance: 4, liquidityPool: 5, contractData: 6, contractCode: 7, configSetting: 8, ttl: 9 }), r.struct("Signer", [["key", r.lookup("SignerKey")], ["weight", r.lookup("Uint32")]]), r.enum("AccountFlags", { authRequiredFlag: 1, authRevocableFlag: 2, authImmutableFlag: 4, authClawbackEnabledFlag: 8 }), r.const("MASK_ACCOUNT_FLAGS", 7), r.const("MASK_ACCOUNT_FLAGS_V17", 15), r.const("MAX_SIGNERS", 20), r.typedef("SponsorshipDescriptor", r.option(r.lookup("AccountId"))), r.struct("AccountEntryExtensionV3", [["ext", r.lookup("ExtensionPoint")], ["seqLedger", r.lookup("Uint32")], ["seqTime", r.lookup("TimePoint")]]), r.union("AccountEntryExtensionV2Ext", { switchOn: r.int(), switchName: "v", switches: [[0, r.void()], [3, "v3"]], arms: { v3: r.lookup("AccountEntryExtensionV3") } }), r.struct("AccountEntryExtensionV2", [["numSponsored", r.lookup("Uint32")], ["numSponsoring", r.lookup("Uint32")], ["signerSponsoringIDs", r.varArray(r.lookup("SponsorshipDescriptor"), r.lookup("MAX_SIGNERS"))], ["ext", r.lookup("AccountEntryExtensionV2Ext")]]), r.union("AccountEntryExtensionV1Ext", { switchOn: r.int(), switchName: "v", switches: [[0, r.void()], [2, "v2"]], arms: { v2: r.lookup("AccountEntryExtensionV2") } }), r.struct("AccountEntryExtensionV1", [["liabilities", r.lookup("Liabilities")], ["ext", r.lookup("AccountEntryExtensionV1Ext")]]), r.union("AccountEntryExt", { switchOn: r.int(), switchName: "v", switches: [[0, r.void()], [1, "v1"]], arms: { v1: r.lookup("AccountEntryExtensionV1") } }), r.struct("AccountEntry", [["accountId", r.lookup("AccountId")], ["balance", r.lookup("Int64")], ["seqNum", r.lookup("SequenceNumber")], ["numSubEntries", r.lookup("Uint32")], ["inflationDest", r.option(r.lookup("AccountId"))], ["flags", r.lookup("Uint32")], ["homeDomain", r.lookup("String32")], ["thresholds", r.lookup("Thresholds")], ["signers", r.varArray(r.lookup("Signer"), r.lookup("MAX_SIGNERS"))], ["ext", r.lookup("AccountEntryExt")]]), r.enum("TrustLineFlags", { authorizedFlag: 1, authorizedToMaintainLiabilitiesFlag: 2, trustlineClawbackEnabledFlag: 4 }), r.const("MASK_TRUSTLINE_FLAGS", 1), r.const("MASK_TRUSTLINE_FLAGS_V13", 3), r.const("MASK_TRUSTLINE_FLAGS_V17", 7), r.enum("LiquidityPoolType", { liquidityPoolConstantProduct: 0 }), r.union("TrustLineAsset", { switchOn: r.lookup("AssetType"), switchName: "type", switches: [["assetTypeNative", r.void()], ["assetTypeCreditAlphanum4", "alphaNum4"], ["assetTypeCreditAlphanum12", "alphaNum12"], ["assetTypePoolShare", "liquidityPoolId"]], arms: { alphaNum4: r.lookup("AlphaNum4"), alphaNum12: r.lookup("AlphaNum12"), liquidityPoolId: r.lookup("PoolId") } }), r.union("TrustLineEntryExtensionV2Ext", { switchOn: r.int(), switchName: "v", switches: [[0, r.void()]], arms: {} }), r.struct("TrustLineEntryExtensionV2", [["liquidityPoolUseCount", r.lookup("Int32")], ["ext", r.lookup("TrustLineEntryExtensionV2Ext")]]), r.union("TrustLineEntryV1Ext", { switchOn: r.int(), switchName: "v", switches: [[0, r.void()], [2, "v2"]], arms: { v2: r.lookup("TrustLineEntryExtensionV2") } }), r.struct("TrustLineEntryV1", [["liabilities", r.lookup("Liabilities")], ["ext", r.lookup("TrustLineEntryV1Ext")]]), r.union("TrustLineEntryExt", { switchOn: r.int(), switchName: "v", switches: [[0, r.void()], [1, "v1"]], arms: { v1: r.lookup("TrustLineEntryV1") } }), r.struct("TrustLineEntry", [["accountId", r.lookup("AccountId")], ["asset", r.lookup("TrustLineAsset")], ["balance", r.lookup("Int64")], ["limit", r.lookup("Int64")], ["flags", r.lookup("Uint32")], ["ext", r.lookup("TrustLineEntryExt")]]), r.enum("OfferEntryFlags", { passiveFlag: 1 }), r.const("MASK_OFFERENTRY_FLAGS", 1), r.union("OfferEntryExt", { switchOn: r.int(), switchName: "v", switches: [[0, r.void()]], arms: {} }), r.struct("OfferEntry", [["sellerId", r.lookup("AccountId")], ["offerId", r.lookup("Int64")], ["selling", r.lookup("Asset")], ["buying", r.lookup("Asset")], ["amount", r.lookup("Int64")], ["price", r.lookup("Price")], ["flags", r.lookup("Uint32")], ["ext", r.lookup("OfferEntryExt")]]), r.union("DataEntryExt", { switchOn: r.int(), switchName: "v", switches: [[0, r.void()]], arms: {} }), r.struct("DataEntry", [["accountId", r.lookup("AccountId")], ["dataName", r.lookup("String64")], ["dataValue", r.lookup("DataValue")], ["ext", r.lookup("DataEntryExt")]]), r.enum("ClaimPredicateType", { claimPredicateUnconditional: 0, claimPredicateAnd: 1, claimPredicateOr: 2, claimPredicateNot: 3, claimPredicateBeforeAbsoluteTime: 4, claimPredicateBeforeRelativeTime: 5 }), r.union("ClaimPredicate", { switchOn: r.lookup("ClaimPredicateType"), switchName: "type", switches: [["claimPredicateUnconditional", r.void()], ["claimPredicateAnd", "andPredicates"], ["claimPredicateOr", "orPredicates"], ["claimPredicateNot", "notPredicate"], ["claimPredicateBeforeAbsoluteTime", "absBefore"], ["claimPredicateBeforeRelativeTime", "relBefore"]], arms: { andPredicates: r.varArray(r.lookup("ClaimPredicate"), 2), orPredicates: r.varArray(r.lookup("ClaimPredicate"), 2), notPredicate: r.option(r.lookup("ClaimPredicate")), absBefore: r.lookup("Int64"), relBefore: r.lookup("Int64") } }), r.enum("ClaimantType", { claimantTypeV0: 0 }), r.struct("ClaimantV0", [["destination", r.lookup("AccountId")], ["predicate", r.lookup("ClaimPredicate")]]), r.union("Claimant", { switchOn: r.lookup("ClaimantType"), switchName: "type", switches: [["claimantTypeV0", "v0"]], arms: { v0: r.lookup("ClaimantV0") } }), r.enum("ClaimableBalanceFlags", { claimableBalanceClawbackEnabledFlag: 1 }), r.const("MASK_CLAIMABLE_BALANCE_FLAGS", 1), r.union("ClaimableBalanceEntryExtensionV1Ext", { switchOn: r.int(), switchName: "v", switches: [[0, r.void()]], arms: {} }), r.struct("ClaimableBalanceEntryExtensionV1", [["ext", r.lookup("ClaimableBalanceEntryExtensionV1Ext")], ["flags", r.lookup("Uint32")]]), r.union("ClaimableBalanceEntryExt", { switchOn: r.int(), switchName: "v", switches: [[0, r.void()], [1, "v1"]], arms: { v1: r.lookup("ClaimableBalanceEntryExtensionV1") } }), r.struct("ClaimableBalanceEntry", [["balanceId", r.lookup("ClaimableBalanceId")], ["claimants", r.varArray(r.lookup("Claimant"), 10)], ["asset", r.lookup("Asset")], ["amount", r.lookup("Int64")], ["ext", r.lookup("ClaimableBalanceEntryExt")]]), r.struct("LiquidityPoolConstantProductParameters", [["assetA", r.lookup("Asset")], ["assetB", r.lookup("Asset")], ["fee", r.lookup("Int32")]]), r.struct("LiquidityPoolEntryConstantProduct", [["params", r.lookup("LiquidityPoolConstantProductParameters")], ["reserveA", r.lookup("Int64")], ["reserveB", r.lookup("Int64")], ["totalPoolShares", r.lookup("Int64")], ["poolSharesTrustLineCount", r.lookup("Int64")]]), r.union("LiquidityPoolEntryBody", { switchOn: r.lookup("LiquidityPoolType"), switchName: "type", switches: [["liquidityPoolConstantProduct", "constantProduct"]], arms: { constantProduct: r.lookup("LiquidityPoolEntryConstantProduct") } }), r.struct("LiquidityPoolEntry", [["liquidityPoolId", r.lookup("PoolId")], ["body", r.lookup("LiquidityPoolEntryBody")]]), r.enum("ContractDataDurability", { temporary: 0, persistent: 1 }), r.struct("ContractDataEntry", [["ext", r.lookup("ExtensionPoint")], ["contract", r.lookup("ScAddress")], ["key", r.lookup("ScVal")], ["durability", r.lookup("ContractDataDurability")], ["val", r.lookup("ScVal")]]), r.struct("ContractCodeCostInputs", [["ext", r.lookup("ExtensionPoint")], ["nInstructions", r.lookup("Uint32")], ["nFunctions", r.lookup("Uint32")], ["nGlobals", r.lookup("Uint32")], ["nTableEntries", r.lookup("Uint32")], ["nTypes", r.lookup("Uint32")], ["nDataSegments", r.lookup("Uint32")], ["nElemSegments", r.lookup("Uint32")], ["nImports", r.lookup("Uint32")], ["nExports", r.lookup("Uint32")], ["nDataSegmentBytes", r.lookup("Uint32")]]), r.struct("ContractCodeEntryV1", [["ext", r.lookup("ExtensionPoint")], ["costInputs", r.lookup("ContractCodeCostInputs")]]), r.union("ContractCodeEntryExt", { switchOn: r.int(), switchName: "v", switches: [[0, r.void()], [1, "v1"]], arms: { v1: r.lookup("ContractCodeEntryV1") } }), r.struct("ContractCodeEntry", [["ext", r.lookup("ContractCodeEntryExt")], ["hash", r.lookup("Hash")], ["code", r.varOpaque()]]), r.struct("TtlEntry", [["keyHash", r.lookup("Hash")], ["liveUntilLedgerSeq", r.lookup("Uint32")]]), r.union("LedgerEntryExtensionV1Ext", { switchOn: r.int(), switchName: "v", switches: [[0, r.void()]], arms: {} }), r.struct("LedgerEntryExtensionV1", [["sponsoringId", r.lookup("SponsorshipDescriptor")], ["ext", r.lookup("LedgerEntryExtensionV1Ext")]]), r.union("LedgerEntryData", { switchOn: r.lookup("LedgerEntryType"), switchName: "type", switches: [["account", "account"], ["trustline", "trustLine"], ["offer", "offer"], ["data", "data"], ["claimableBalance", "claimableBalance"], ["liquidityPool", "liquidityPool"], ["contractData", "contractData"], ["contractCode", "contractCode"], ["configSetting", "configSetting"], ["ttl", "ttl"]], arms: { account: r.lookup("AccountEntry"), trustLine: r.lookup("TrustLineEntry"), offer: r.lookup("OfferEntry"), data: r.lookup("DataEntry"), claimableBalance: r.lookup("ClaimableBalanceEntry"), liquidityPool: r.lookup("LiquidityPoolEntry"), contractData: r.lookup("ContractDataEntry"), contractCode: r.lookup("ContractCodeEntry"), configSetting: r.lookup("ConfigSettingEntry"), ttl: r.lookup("TtlEntry") } }), r.union("LedgerEntryExt", { switchOn: r.int(), switchName: "v", switches: [[0, r.void()], [1, "v1"]], arms: { v1: r.lookup("LedgerEntryExtensionV1") } }), r.struct("LedgerEntry", [["lastModifiedLedgerSeq", r.lookup("Uint32")], ["data", r.lookup("LedgerEntryData")], ["ext", r.lookup("LedgerEntryExt")]]), r.struct("LedgerKeyAccount", [["accountId", r.lookup("AccountId")]]), r.struct("LedgerKeyTrustLine", [["accountId", r.lookup("AccountId")], ["asset", r.lookup("TrustLineAsset")]]), r.struct("LedgerKeyOffer", [["sellerId", r.lookup("AccountId")], ["offerId", r.lookup("Int64")]]), r.struct("LedgerKeyData", [["accountId", r.lookup("AccountId")], ["dataName", r.lookup("String64")]]), r.struct("LedgerKeyClaimableBalance", [["balanceId", r.lookup("ClaimableBalanceId")]]), r.struct("LedgerKeyLiquidityPool", [["liquidityPoolId", r.lookup("PoolId")]]), r.struct("LedgerKeyContractData", [["contract", r.lookup("ScAddress")], ["key", r.lookup("ScVal")], ["durability", r.lookup("ContractDataDurability")]]), r.struct("LedgerKeyContractCode", [["hash", r.lookup("Hash")]]), r.struct("LedgerKeyConfigSetting", [["configSettingId", r.lookup("ConfigSettingId")]]), r.struct("LedgerKeyTtl", [["keyHash", r.lookup("Hash")]]), r.union("LedgerKey", { switchOn: r.lookup("LedgerEntryType"), switchName: "type", switches: [["account", "account"], ["trustline", "trustLine"], ["offer", "offer"], ["data", "data"], ["claimableBalance", "claimableBalance"], ["liquidityPool", "liquidityPool"], ["contractData", "contractData"], ["contractCode", "contractCode"], ["configSetting", "configSetting"], ["ttl", "ttl"]], arms: { account: r.lookup("LedgerKeyAccount"), trustLine: r.lookup("LedgerKeyTrustLine"), offer: r.lookup("LedgerKeyOffer"), data: r.lookup("LedgerKeyData"), claimableBalance: r.lookup("LedgerKeyClaimableBalance"), liquidityPool: r.lookup("LedgerKeyLiquidityPool"), contractData: r.lookup("LedgerKeyContractData"), contractCode: r.lookup("LedgerKeyContractCode"), configSetting: r.lookup("LedgerKeyConfigSetting"), ttl: r.lookup("LedgerKeyTtl") } }), r.enum("EnvelopeType", { envelopeTypeTxV0: 0, envelopeTypeScp: 1, envelopeTypeTx: 2, envelopeTypeAuth: 3, envelopeTypeScpvalue: 4, envelopeTypeTxFeeBump: 5, envelopeTypeOpId: 6, envelopeTypePoolRevokeOpId: 7, envelopeTypeContractId: 8, envelopeTypeSorobanAuthorization: 9 }), r.enum("BucketListType", { live: 0, hotArchive: 1 }), r.enum("BucketEntryType", { metaentry: -1, liveentry: 0, deadentry: 1, initentry: 2 }), r.enum("HotArchiveBucketEntryType", { hotArchiveMetaentry: -1, hotArchiveArchived: 0, hotArchiveLive: 1 }), r.union("BucketMetadataExt", { switchOn: r.int(), switchName: "v", switches: [[0, r.void()], [1, "bucketListType"]], arms: { bucketListType: r.lookup("BucketListType") } }), r.struct("BucketMetadata", [["ledgerVersion", r.lookup("Uint32")], ["ext", r.lookup("BucketMetadataExt")]]), r.union("BucketEntry", { switchOn: r.lookup("BucketEntryType"), switchName: "type", switches: [["liveentry", "liveEntry"], ["initentry", "liveEntry"], ["deadentry", "deadEntry"], ["metaentry", "metaEntry"]], arms: { liveEntry: r.lookup("LedgerEntry"), deadEntry: r.lookup("LedgerKey"), metaEntry: r.lookup("BucketMetadata") } }), r.union("HotArchiveBucketEntry", { switchOn: r.lookup("HotArchiveBucketEntryType"), switchName: "type", switches: [["hotArchiveArchived", "archivedEntry"], ["hotArchiveLive", "key"], ["hotArchiveMetaentry", "metaEntry"]], arms: { archivedEntry: r.lookup("LedgerEntry"), key: r.lookup("LedgerKey"), metaEntry: r.lookup("BucketMetadata") } }), r.typedef("UpgradeType", r.varOpaque(128)), r.enum("StellarValueType", { stellarValueBasic: 0, stellarValueSigned: 1 }), r.struct("LedgerCloseValueSignature", [["nodeId", r.lookup("NodeId")], ["signature", r.lookup("Signature")]]), r.union("StellarValueExt", { switchOn: r.lookup("StellarValueType"), switchName: "v", switches: [["stellarValueBasic", r.void()], ["stellarValueSigned", "lcValueSignature"]], arms: { lcValueSignature: r.lookup("LedgerCloseValueSignature") } }), r.struct("StellarValue", [["txSetHash", r.lookup("Hash")], ["closeTime", r.lookup("TimePoint")], ["upgrades", r.varArray(r.lookup("UpgradeType"), 6)], ["ext", r.lookup("StellarValueExt")]]), r.const("MASK_LEDGER_HEADER_FLAGS", 7), r.enum("LedgerHeaderFlags", { disableLiquidityPoolTradingFlag: 1, disableLiquidityPoolDepositFlag: 2, disableLiquidityPoolWithdrawalFlag: 4 }), r.union("LedgerHeaderExtensionV1Ext", { switchOn: r.int(), switchName: "v", switches: [[0, r.void()]], arms: {} }), r.struct("LedgerHeaderExtensionV1", [["flags", r.lookup("Uint32")], ["ext", r.lookup("LedgerHeaderExtensionV1Ext")]]), r.union("LedgerHeaderExt", { switchOn: r.int(), switchName: "v", switches: [[0, r.void()], [1, "v1"]], arms: { v1: r.lookup("LedgerHeaderExtensionV1") } }), r.struct("LedgerHeader", [["ledgerVersion", r.lookup("Uint32")], ["previousLedgerHash", r.lookup("Hash")], ["scpValue", r.lookup("StellarValue")], ["txSetResultHash", r.lookup("Hash")], ["bucketListHash", r.lookup("Hash")], ["ledgerSeq", r.lookup("Uint32")], ["totalCoins", r.lookup("Int64")], ["feePool", r.lookup("Int64")], ["inflationSeq", r.lookup("Uint32")], ["idPool", r.lookup("Uint64")], ["baseFee", r.lookup("Uint32")], ["baseReserve", r.lookup("Uint32")], ["maxTxSetSize", r.lookup("Uint32")], ["skipList", r.array(r.lookup("Hash"), 4)], ["ext", r.lookup("LedgerHeaderExt")]]), r.enum("LedgerUpgradeType", { ledgerUpgradeVersion: 1, ledgerUpgradeBaseFee: 2, ledgerUpgradeMaxTxSetSize: 3, ledgerUpgradeBaseReserve: 4, ledgerUpgradeFlags: 5, ledgerUpgradeConfig: 6, ledgerUpgradeMaxSorobanTxSetSize: 7 }), r.struct("ConfigUpgradeSetKey", [["contractId", r.lookup("ContractId")], ["contentHash", r.lookup("Hash")]]), r.union("LedgerUpgrade", { switchOn: r.lookup("LedgerUpgradeType"), switchName: "type", switches: [["ledgerUpgradeVersion", "newLedgerVersion"], ["ledgerUpgradeBaseFee", "newBaseFee"], ["ledgerUpgradeMaxTxSetSize", "newMaxTxSetSize"], ["ledgerUpgradeBaseReserve", "newBaseReserve"], ["ledgerUpgradeFlags", "newFlags"], ["ledgerUpgradeConfig", "newConfig"], ["ledgerUpgradeMaxSorobanTxSetSize", "newMaxSorobanTxSetSize"]], arms: { newLedgerVersion: r.lookup("Uint32"), newBaseFee: r.lookup("Uint32"), newMaxTxSetSize: r.lookup("Uint32"), newBaseReserve: r.lookup("Uint32"), newFlags: r.lookup("Uint32"), newConfig: r.lookup("ConfigUpgradeSetKey"), newMaxSorobanTxSetSize: r.lookup("Uint32") } }), r.struct("ConfigUpgradeSet", [["updatedEntry", r.varArray(r.lookup("ConfigSettingEntry"), 2147483647)]]), r.enum("TxSetComponentType", { txsetCompTxsMaybeDiscountedFee: 0 }), r.typedef("DependentTxCluster", r.varArray(r.lookup("TransactionEnvelope"), 2147483647)), r.typedef("ParallelTxExecutionStage", r.varArray(r.lookup("DependentTxCluster"), 2147483647)), r.struct("ParallelTxsComponent", [["baseFee", r.option(r.lookup("Int64"))], ["executionStages", r.varArray(r.lookup("ParallelTxExecutionStage"), 2147483647)]]), r.struct("TxSetComponentTxsMaybeDiscountedFee", [["baseFee", r.option(r.lookup("Int64"))], ["txes", r.varArray(r.lookup("TransactionEnvelope"), 2147483647)]]), r.union("TxSetComponent", { switchOn: r.lookup("TxSetComponentType"), switchName: "type", switches: [["txsetCompTxsMaybeDiscountedFee", "txsMaybeDiscountedFee"]], arms: { txsMaybeDiscountedFee: r.lookup("TxSetComponentTxsMaybeDiscountedFee") } }), r.union("TransactionPhase", { switchOn: r.int(), switchName: "v", switches: [[0, "v0Components"], [1, "parallelTxsComponent"]], arms: { v0Components: r.varArray(r.lookup("TxSetComponent"), 2147483647), parallelTxsComponent: r.lookup("ParallelTxsComponent") } }), r.struct("TransactionSet", [["previousLedgerHash", r.lookup("Hash")], ["txes", r.varArray(r.lookup("TransactionEnvelope"), 2147483647)]]), r.struct("TransactionSetV1", [["previousLedgerHash", r.lookup("Hash")], ["phases", r.varArray(r.lookup("TransactionPhase"), 2147483647)]]), r.union("GeneralizedTransactionSet", { switchOn: r.int(), switchName: "v", switches: [[1, "v1TxSet"]], arms: { v1TxSet: r.lookup("TransactionSetV1") } }), r.struct("TransactionResultPair", [["transactionHash", r.lookup("Hash")], ["result", r.lookup("TransactionResult")]]), r.struct("TransactionResultSet", [["results", r.varArray(r.lookup("TransactionResultPair"), 2147483647)]]), r.union("TransactionHistoryEntryExt", { switchOn: r.int(), switchName: "v", switches: [[0, r.void()], [1, "generalizedTxSet"]], arms: { generalizedTxSet: r.lookup("GeneralizedTransactionSet") } }), r.struct("TransactionHistoryEntry", [["ledgerSeq", r.lookup("Uint32")], ["txSet", r.lookup("TransactionSet")], ["ext", r.lookup("TransactionHistoryEntryExt")]]), r.union("TransactionHistoryResultEntryExt", { switchOn: r.int(), switchName: "v", switches: [[0, r.void()]], arms: {} }), r.struct("TransactionHistoryResultEntry", [["ledgerSeq", r.lookup("Uint32")], ["txResultSet", r.lookup("TransactionResultSet")], ["ext", r.lookup("TransactionHistoryResultEntryExt")]]), r.union("LedgerHeaderHistoryEntryExt", { switchOn: r.int(), switchName: "v", switches: [[0, r.void()]], arms: {} }), r.struct("LedgerHeaderHistoryEntry", [["hash", r.lookup("Hash")], ["header", r.lookup("LedgerHeader")], ["ext", r.lookup("LedgerHeaderHistoryEntryExt")]]), r.struct("LedgerScpMessages", [["ledgerSeq", r.lookup("Uint32")], ["messages", r.varArray(r.lookup("ScpEnvelope"), 2147483647)]]), r.struct("ScpHistoryEntryV0", [["quorumSets", r.varArray(r.lookup("ScpQuorumSet"), 2147483647)], ["ledgerMessages", r.lookup("LedgerScpMessages")]]), r.union("ScpHistoryEntry", { switchOn: r.int(), switchName: "v", switches: [[0, "v0"]], arms: { v0: r.lookup("ScpHistoryEntryV0") } }), r.enum("LedgerEntryChangeType", { ledgerEntryCreated: 0, ledgerEntryUpdated: 1, ledgerEntryRemoved: 2, ledgerEntryState: 3, ledgerEntryRestored: 4 }), r.union("LedgerEntryChange", { switchOn: r.lookup("LedgerEntryChangeType"), switchName: "type", switches: [["ledgerEntryCreated", "created"], ["ledgerEntryUpdated", "updated"], ["ledgerEntryRemoved", "removed"], ["ledgerEntryState", "state"], ["ledgerEntryRestored", "restored"]], arms: { created: r.lookup("LedgerEntry"), updated: r.lookup("LedgerEntry"), removed: r.lookup("LedgerKey"), state: r.lookup("LedgerEntry"), restored: r.lookup("LedgerEntry") } }), r.typedef("LedgerEntryChanges", r.varArray(r.lookup("LedgerEntryChange"), 2147483647)), r.struct("OperationMeta", [["changes", r.lookup("LedgerEntryChanges")]]), r.struct("TransactionMetaV1", [["txChanges", r.lookup("LedgerEntryChanges")], ["operations", r.varArray(r.lookup("OperationMeta"), 2147483647)]]), r.struct("TransactionMetaV2", [["txChangesBefore", r.lookup("LedgerEntryChanges")], ["operations", r.varArray(r.lookup("OperationMeta"), 2147483647)], ["txChangesAfter", r.lookup("LedgerEntryChanges")]]), r.enum("ContractEventType", { system: 0, contract: 1, diagnostic: 2 }), r.struct("ContractEventV0", [["topics", r.varArray(r.lookup("ScVal"), 2147483647)], ["data", r.lookup("ScVal")]]), r.union("ContractEventBody", { switchOn: r.int(), switchName: "v", switches: [[0, "v0"]], arms: { v0: r.lookup("ContractEventV0") } }), r.struct("ContractEvent", [["ext", r.lookup("ExtensionPoint")], ["contractId", r.option(r.lookup("ContractId"))], ["type", r.lookup("ContractEventType")], ["body", r.lookup("ContractEventBody")]]), r.struct("DiagnosticEvent", [["inSuccessfulContractCall", r.bool()], ["event", r.lookup("ContractEvent")]]), r.struct("SorobanTransactionMetaExtV1", [["ext", r.lookup("ExtensionPoint")], ["totalNonRefundableResourceFeeCharged", r.lookup("Int64")], ["totalRefundableResourceFeeCharged", r.lookup("Int64")], ["rentFeeCharged", r.lookup("Int64")]]), r.union("SorobanTransactionMetaExt", { switchOn: r.int(), switchName: "v", switches: [[0, r.void()], [1, "v1"]], arms: { v1: r.lookup("SorobanTransactionMetaExtV1") } }), r.struct("SorobanTransactionMeta", [["ext", r.lookup("SorobanTransactionMetaExt")], ["events", r.varArray(r.lookup("ContractEvent"), 2147483647)], ["returnValue", r.lookup("ScVal")], ["diagnosticEvents", r.varArray(r.lookup("DiagnosticEvent"), 2147483647)]]), r.struct("TransactionMetaV3", [["ext", r.lookup("ExtensionPoint")], ["txChangesBefore", r.lookup("LedgerEntryChanges")], ["operations", r.varArray(r.lookup("OperationMeta"), 2147483647)], ["txChangesAfter", r.lookup("LedgerEntryChanges")], ["sorobanMeta", r.option(r.lookup("SorobanTransactionMeta"))]]), r.struct("OperationMetaV2", [["ext", r.lookup("ExtensionPoint")], ["changes", r.lookup("LedgerEntryChanges")], ["events", r.varArray(r.lookup("ContractEvent"), 2147483647)]]), r.struct("SorobanTransactionMetaV2", [["ext", r.lookup("SorobanTransactionMetaExt")], ["returnValue", r.option(r.lookup("ScVal"))]]), r.enum("TransactionEventStage", { transactionEventStageBeforeAllTxes: 0, transactionEventStageAfterTx: 1, transactionEventStageAfterAllTxes: 2 }), r.struct("TransactionEvent", [["stage", r.lookup("TransactionEventStage")], ["event", r.lookup("ContractEvent")]]), r.struct("TransactionMetaV4", [["ext", r.lookup("ExtensionPoint")], ["txChangesBefore", r.lookup("LedgerEntryChanges")], ["operations", r.varArray(r.lookup("OperationMetaV2"), 2147483647)], ["txChangesAfter", r.lookup("LedgerEntryChanges")], ["sorobanMeta", r.option(r.lookup("SorobanTransactionMetaV2"))], ["events", r.varArray(r.lookup("TransactionEvent"), 2147483647)], ["diagnosticEvents", r.varArray(r.lookup("DiagnosticEvent"), 2147483647)]]), r.struct("InvokeHostFunctionSuccessPreImage", [["returnValue", r.lookup("ScVal")], ["events", r.varArray(r.lookup("ContractEvent"), 2147483647)]]), r.union("TransactionMeta", { switchOn: r.int(), switchName: "v", switches: [[0, "operations"], [1, "v1"], [2, "v2"], [3, "v3"], [4, "v4"]], arms: { operations: r.varArray(r.lookup("OperationMeta"), 2147483647), v1: r.lookup("TransactionMetaV1"), v2: r.lookup("TransactionMetaV2"), v3: r.lookup("TransactionMetaV3"), v4: r.lookup("TransactionMetaV4") } }), r.struct("TransactionResultMeta", [["result", r.lookup("TransactionResultPair")], ["feeProcessing", r.lookup("LedgerEntryChanges")], ["txApplyProcessing", r.lookup("TransactionMeta")]]), r.struct("TransactionResultMetaV1", [["ext", r.lookup("ExtensionPoint")], ["result", r.lookup("TransactionResultPair")], ["feeProcessing", r.lookup("LedgerEntryChanges")], ["txApplyProcessing", r.lookup("TransactionMeta")], ["postTxApplyFeeProcessing", r.lookup("LedgerEntryChanges")]]), r.struct("UpgradeEntryMeta", [["upgrade", r.lookup("LedgerUpgrade")], ["changes", r.lookup("LedgerEntryChanges")]]), r.struct("LedgerCloseMetaV0", [["ledgerHeader", r.lookup("LedgerHeaderHistoryEntry")], ["txSet", r.lookup("TransactionSet")], ["txProcessing", r.varArray(r.lookup("TransactionResultMeta"), 2147483647)], ["upgradesProcessing", r.varArray(r.lookup("UpgradeEntryMeta"), 2147483647)], ["scpInfo", r.varArray(r.lookup("ScpHistoryEntry"), 2147483647)]]), r.struct("LedgerCloseMetaExtV1", [["ext", r.lookup("ExtensionPoint")], ["sorobanFeeWrite1Kb", r.lookup("Int64")]]), r.union("LedgerCloseMetaExt", { switchOn: r.int(), switchName: "v", switches: [[0, r.void()], [1, "v1"]], arms: { v1: r.lookup("LedgerCloseMetaExtV1") } }), r.struct("LedgerCloseMetaV1", [["ext", r.lookup("LedgerCloseMetaExt")], ["ledgerHeader", r.lookup("LedgerHeaderHistoryEntry")], ["txSet", r.lookup("GeneralizedTransactionSet")], ["txProcessing", r.varArray(r.lookup("TransactionResultMeta"), 2147483647)], ["upgradesProcessing", r.varArray(r.lookup("UpgradeEntryMeta"), 2147483647)], ["scpInfo", r.varArray(r.lookup("ScpHistoryEntry"), 2147483647)], ["totalByteSizeOfLiveSorobanState", r.lookup("Uint64")], ["evictedKeys", r.varArray(r.lookup("LedgerKey"), 2147483647)], ["unused", r.varArray(r.lookup("LedgerEntry"), 2147483647)]]), r.struct("LedgerCloseMetaV2", [["ext", r.lookup("LedgerCloseMetaExt")], ["ledgerHeader", r.lookup("LedgerHeaderHistoryEntry")], ["txSet", r.lookup("GeneralizedTransactionSet")], ["txProcessing", r.varArray(r.lookup("TransactionResultMetaV1"), 2147483647)], ["upgradesProcessing", r.varArray(r.lookup("UpgradeEntryMeta"), 2147483647)], ["scpInfo", r.varArray(r.lookup("ScpHistoryEntry"), 2147483647)], ["totalByteSizeOfLiveSorobanState", r.lookup("Uint64")], ["evictedKeys", r.varArray(r.lookup("LedgerKey"), 2147483647)]]), r.union("LedgerCloseMeta", { switchOn: r.int(), switchName: "v", switches: [[0, "v0"], [1, "v1"], [2, "v2"]], arms: { v0: r.lookup("LedgerCloseMetaV0"), v1: r.lookup("LedgerCloseMetaV1"), v2: r.lookup("LedgerCloseMetaV2") } }), r.enum("ErrorCode", { errMisc: 0, errData: 1, errConf: 2, errAuth: 3, errLoad: 4 }), r.struct("Error", [["code", r.lookup("ErrorCode")], ["msg", r.string(100)]]), r.struct("SendMore", [["numMessages", r.lookup("Uint32")]]), r.struct("SendMoreExtended", [["numMessages", r.lookup("Uint32")], ["numBytes", r.lookup("Uint32")]]), r.struct("AuthCert", [["pubkey", r.lookup("Curve25519Public")], ["expiration", r.lookup("Uint64")], ["sig", r.lookup("Signature")]]), r.struct("Hello", [["ledgerVersion", r.lookup("Uint32")], ["overlayVersion", r.lookup("Uint32")], ["overlayMinVersion", r.lookup("Uint32")], ["networkId", r.lookup("Hash")], ["versionStr", r.string(100)], ["listeningPort", r.int()], ["peerId", r.lookup("NodeId")], ["cert", r.lookup("AuthCert")], ["nonce", r.lookup("Uint256")]]), r.const("AUTH_MSG_FLAG_FLOW_CONTROL_BYTES_REQUESTED", 200), r.struct("Auth", [["flags", r.int()]]), r.enum("IpAddrType", { iPv4: 0, iPv6: 1 }), r.union("PeerAddressIp", { switchOn: r.lookup("IpAddrType"), switchName: "type", switches: [["iPv4", "ipv4"], ["iPv6", "ipv6"]], arms: { ipv4: r.opaque(4), ipv6: r.opaque(16) } }), r.struct("PeerAddress", [["ip", r.lookup("PeerAddressIp")], ["port", r.lookup("Uint32")], ["numFailures", r.lookup("Uint32")]]), r.enum("MessageType", { errorMsg: 0, auth: 2, dontHave: 3, peers: 5, getTxSet: 6, txSet: 7, generalizedTxSet: 17, transaction: 8, getScpQuorumset: 9, scpQuorumset: 10, scpMessage: 11, getScpState: 12, hello: 13, sendMore: 16, sendMoreExtended: 20, floodAdvert: 18, floodDemand: 19, timeSlicedSurveyRequest: 21, timeSlicedSurveyResponse: 22, timeSlicedSurveyStartCollecting: 23, timeSlicedSurveyStopCollecting: 24 }), r.struct("DontHave", [["type", r.lookup("MessageType")], ["reqHash", r.lookup("Uint256")]]), r.enum("SurveyMessageCommandType", { timeSlicedSurveyTopology: 1 }), r.enum("SurveyMessageResponseType", { surveyTopologyResponseV2: 2 }), r.struct("TimeSlicedSurveyStartCollectingMessage", [["surveyorId", r.lookup("NodeId")], ["nonce", r.lookup("Uint32")], ["ledgerNum", r.lookup("Uint32")]]), r.struct("SignedTimeSlicedSurveyStartCollectingMessage", [["signature", r.lookup("Signature")], ["startCollecting", r.lookup("TimeSlicedSurveyStartCollectingMessage")]]), r.struct("TimeSlicedSurveyStopCollectingMessage", [["surveyorId", r.lookup("NodeId")], ["nonce", r.lookup("Uint32")], ["ledgerNum", r.lookup("Uint32")]]), r.struct("SignedTimeSlicedSurveyStopCollectingMessage", [["signature", r.lookup("Signature")], ["stopCollecting", r.lookup("TimeSlicedSurveyStopCollectingMessage")]]), r.struct("SurveyRequestMessage", [["surveyorPeerId", r.lookup("NodeId")], ["surveyedPeerId", r.lookup("NodeId")], ["ledgerNum", r.lookup("Uint32")], ["encryptionKey", r.lookup("Curve25519Public")], ["commandType", r.lookup("SurveyMessageCommandType")]]), r.struct("TimeSlicedSurveyRequestMessage", [["request", r.lookup("SurveyRequestMessage")], ["nonce", r.lookup("Uint32")], ["inboundPeersIndex", r.lookup("Uint32")], ["outboundPeersIndex", r.lookup("Uint32")]]), r.struct("SignedTimeSlicedSurveyRequestMessage", [["requestSignature", r.lookup("Signature")], ["request", r.lookup("TimeSlicedSurveyRequestMessage")]]), r.typedef("EncryptedBody", r.varOpaque(64e3)), r.struct("SurveyResponseMessage", [["surveyorPeerId", r.lookup("NodeId")], ["surveyedPeerId", r.lookup("NodeId")], ["ledgerNum", r.lookup("Uint32")], ["commandType", r.lookup("SurveyMessageCommandType")], ["encryptedBody", r.lookup("EncryptedBody")]]), r.struct("TimeSlicedSurveyResponseMessage", [["response", r.lookup("SurveyResponseMessage")], ["nonce", r.lookup("Uint32")]]), r.struct("SignedTimeSlicedSurveyResponseMessage", [["responseSignature", r.lookup("Signature")], ["response", r.lookup("TimeSlicedSurveyResponseMessage")]]), r.struct("PeerStats", [["id", r.lookup("NodeId")], ["versionStr", r.string(100)], ["messagesRead", r.lookup("Uint64")], ["messagesWritten", r.lookup("Uint64")], ["bytesRead", r.lookup("Uint64")], ["bytesWritten", r.lookup("Uint64")], ["secondsConnected", r.lookup("Uint64")], ["uniqueFloodBytesRecv", r.lookup("Uint64")], ["duplicateFloodBytesRecv", r.lookup("Uint64")], ["uniqueFetchBytesRecv", r.lookup("Uint64")], ["duplicateFetchBytesRecv", r.lookup("Uint64")], ["uniqueFloodMessageRecv", r.lookup("Uint64")], ["duplicateFloodMessageRecv", r.lookup("Uint64")], ["uniqueFetchMessageRecv", r.lookup("Uint64")], ["duplicateFetchMessageRecv", r.lookup("Uint64")]]), r.struct("TimeSlicedNodeData", [["addedAuthenticatedPeers", r.lookup("Uint32")], ["droppedAuthenticatedPeers", r.lookup("Uint32")], ["totalInboundPeerCount", r.lookup("Uint32")], ["totalOutboundPeerCount", r.lookup("Uint32")], ["p75ScpFirstToSelfLatencyMs", r.lookup("Uint32")], ["p75ScpSelfToOtherLatencyMs", r.lookup("Uint32")], ["lostSyncCount", r.lookup("Uint32")], ["isValidator", r.bool()], ["maxInboundPeerCount", r.lookup("Uint32")], ["maxOutboundPeerCount", r.lookup("Uint32")]]), r.struct("TimeSlicedPeerData", [["peerStats", r.lookup("PeerStats")], ["averageLatencyMs", r.lookup("Uint32")]]), r.typedef("TimeSlicedPeerDataList", r.varArray(r.lookup("TimeSlicedPeerData"), 25)), r.struct("TopologyResponseBodyV2", [["inboundPeers", r.lookup("TimeSlicedPeerDataList")], ["outboundPeers", r.lookup("TimeSlicedPeerDataList")], ["nodeData", r.lookup("TimeSlicedNodeData")]]), r.union("SurveyResponseBody", { switchOn: r.lookup("SurveyMessageResponseType"), switchName: "type", switches: [["surveyTopologyResponseV2", "topologyResponseBodyV2"]], arms: { topologyResponseBodyV2: r.lookup("TopologyResponseBodyV2") } }), r.const("TX_ADVERT_VECTOR_MAX_SIZE", 1e3), r.typedef("TxAdvertVector", r.varArray(r.lookup("Hash"), r.lookup("TX_ADVERT_VECTOR_MAX_SIZE"))), r.struct("FloodAdvert", [["txHashes", r.lookup("TxAdvertVector")]]), r.const("TX_DEMAND_VECTOR_MAX_SIZE", 1e3), r.typedef("TxDemandVector", r.varArray(r.lookup("Hash"), r.lookup("TX_DEMAND_VECTOR_MAX_SIZE"))), r.struct("FloodDemand", [["txHashes", r.lookup("TxDemandVector")]]), r.union("StellarMessage", { switchOn: r.lookup("MessageType"), switchName: "type", switches: [["errorMsg", "error"], ["hello", "hello"], ["auth", "auth"], ["dontHave", "dontHave"], ["peers", "peers"], ["getTxSet", "txSetHash"], ["txSet", "txSet"], ["generalizedTxSet", "generalizedTxSet"], ["transaction", "transaction"], ["timeSlicedSurveyRequest", "signedTimeSlicedSurveyRequestMessage"], ["timeSlicedSurveyResponse", "signedTimeSlicedSurveyResponseMessage"], ["timeSlicedSurveyStartCollecting", "signedTimeSlicedSurveyStartCollectingMessage"], ["timeSlicedSurveyStopCollecting", "signedTimeSlicedSurveyStopCollectingMessage"], ["getScpQuorumset", "qSetHash"], ["scpQuorumset", "qSet"], ["scpMessage", "envelope"], ["getScpState", "getScpLedgerSeq"], ["sendMore", "sendMoreMessage"], ["sendMoreExtended", "sendMoreExtendedMessage"], ["floodAdvert", "floodAdvert"], ["floodDemand", "floodDemand"]], arms: { error: r.lookup("Error"), hello: r.lookup("Hello"), auth: r.lookup("Auth"), dontHave: r.lookup("DontHave"), peers: r.varArray(r.lookup("PeerAddress"), 100), txSetHash: r.lookup("Uint256"), txSet: r.lookup("TransactionSet"), generalizedTxSet: r.lookup("GeneralizedTransactionSet"), transaction: r.lookup("TransactionEnvelope"), signedTimeSlicedSurveyRequestMessage: r.lookup("SignedTimeSlicedSurveyRequestMessage"), signedTimeSlicedSurveyResponseMessage: r.lookup("SignedTimeSlicedSurveyResponseMessage"), signedTimeSlicedSurveyStartCollectingMessage: r.lookup("SignedTimeSlicedSurveyStartCollectingMessage"), signedTimeSlicedSurveyStopCollectingMessage: r.lookup("SignedTimeSlicedSurveyStopCollectingMessage"), qSetHash: r.lookup("Uint256"), qSet: r.lookup("ScpQuorumSet"), envelope: r.lookup("ScpEnvelope"), getScpLedgerSeq: r.lookup("Uint32"), sendMoreMessage: r.lookup("SendMore"), sendMoreExtendedMessage: r.lookup("SendMoreExtended"), floodAdvert: r.lookup("FloodAdvert"), floodDemand: r.lookup("FloodDemand") } }), r.struct("AuthenticatedMessageV0", [["sequence", r.lookup("Uint64")], ["message", r.lookup("StellarMessage")], ["mac", r.lookup("HmacSha256Mac")]]), r.union("AuthenticatedMessage", { switchOn: r.lookup("Uint32"), switchName: "v", switches: [[0, "v0"]], arms: { v0: r.lookup("AuthenticatedMessageV0") } }), r.const("MAX_OPS_PER_TX", 100), r.union("LiquidityPoolParameters", { switchOn: r.lookup("LiquidityPoolType"), switchName: "type", switches: [["liquidityPoolConstantProduct", "constantProduct"]], arms: { constantProduct: r.lookup("LiquidityPoolConstantProductParameters") } }), r.struct("MuxedAccountMed25519", [["id", r.lookup("Uint64")], ["ed25519", r.lookup("Uint256")]]), r.union("MuxedAccount", { switchOn: r.lookup("CryptoKeyType"), switchName: "type", switches: [["keyTypeEd25519", "ed25519"], ["keyTypeMuxedEd25519", "med25519"]], arms: { ed25519: r.lookup("Uint256"), med25519: r.lookup("MuxedAccountMed25519") } }), r.struct("DecoratedSignature", [["hint", r.lookup("SignatureHint")], ["signature", r.lookup("Signature")]]), r.enum("OperationType", { createAccount: 0, payment: 1, pathPaymentStrictReceive: 2, manageSellOffer: 3, createPassiveSellOffer: 4, setOptions: 5, changeTrust: 6, allowTrust: 7, accountMerge: 8, inflation: 9, manageData: 10, bumpSequence: 11, manageBuyOffer: 12, pathPaymentStrictSend: 13, createClaimableBalance: 14, claimClaimableBalance: 15, beginSponsoringFutureReserves: 16, endSponsoringFutureReserves: 17, revokeSponsorship: 18, clawback: 19, clawbackClaimableBalance: 20, setTrustLineFlags: 21, liquidityPoolDeposit: 22, liquidityPoolWithdraw: 23, invokeHostFunction: 24, extendFootprintTtl: 25, restoreFootprint: 26 }), r.struct("CreateAccountOp", [["destination", r.lookup("AccountId")], ["startingBalance", r.lookup("Int64")]]), r.struct("PaymentOp", [["destination", r.lookup("MuxedAccount")], ["asset", r.lookup("Asset")], ["amount", r.lookup("Int64")]]), r.struct("PathPaymentStrictReceiveOp", [["sendAsset", r.lookup("Asset")], ["sendMax", r.lookup("Int64")], ["destination", r.lookup("MuxedAccount")], ["destAsset", r.lookup("Asset")], ["destAmount", r.lookup("Int64")], ["path", r.varArray(r.lookup("Asset"), 5)]]), r.struct("PathPaymentStrictSendOp", [["sendAsset", r.lookup("Asset")], ["sendAmount", r.lookup("Int64")], ["destination", r.lookup("MuxedAccount")], ["destAsset", r.lookup("Asset")], ["destMin", r.lookup("Int64")], ["path", r.varArray(r.lookup("Asset"), 5)]]), r.struct("ManageSellOfferOp", [["selling", r.lookup("Asset")], ["buying", r.lookup("Asset")], ["amount", r.lookup("Int64")], ["price", r.lookup("Price")], ["offerId", r.lookup("Int64")]]), r.struct("ManageBuyOfferOp", [["selling", r.lookup("Asset")], ["buying", r.lookup("Asset")], ["buyAmount", r.lookup("Int64")], ["price", r.lookup("Price")], ["offerId", r.lookup("Int64")]]), r.struct("CreatePassiveSellOfferOp", [["selling", r.lookup("Asset")], ["buying", r.lookup("Asset")], ["amount", r.lookup("Int64")], ["price", r.lookup("Price")]]), r.struct("SetOptionsOp", [["inflationDest", r.option(r.lookup("AccountId"))], ["clearFlags", r.option(r.lookup("Uint32"))], ["setFlags", r.option(r.lookup("Uint32"))], ["masterWeight", r.option(r.lookup("Uint32"))], ["lowThreshold", r.option(r.lookup("Uint32"))], ["medThreshold", r.option(r.lookup("Uint32"))], ["highThreshold", r.option(r.lookup("Uint32"))], ["homeDomain", r.option(r.lookup("String32"))], ["signer", r.option(r.lookup("Signer"))]]), r.union("ChangeTrustAsset", { switchOn: r.lookup("AssetType"), switchName: "type", switches: [["assetTypeNative", r.void()], ["assetTypeCreditAlphanum4", "alphaNum4"], ["assetTypeCreditAlphanum12", "alphaNum12"], ["assetTypePoolShare", "liquidityPool"]], arms: { alphaNum4: r.lookup("AlphaNum4"), alphaNum12: r.lookup("AlphaNum12"), liquidityPool: r.lookup("LiquidityPoolParameters") } }), r.struct("ChangeTrustOp", [["line", r.lookup("ChangeTrustAsset")], ["limit", r.lookup("Int64")]]), r.struct("AllowTrustOp", [["trustor", r.lookup("AccountId")], ["asset", r.lookup("AssetCode")], ["authorize", r.lookup("Uint32")]]), r.struct("ManageDataOp", [["dataName", r.lookup("String64")], ["dataValue", r.option(r.lookup("DataValue"))]]), r.struct("BumpSequenceOp", [["bumpTo", r.lookup("SequenceNumber")]]), r.struct("CreateClaimableBalanceOp", [["asset", r.lookup("Asset")], ["amount", r.lookup("Int64")], ["claimants", r.varArray(r.lookup("Claimant"), 10)]]), r.struct("ClaimClaimableBalanceOp", [["balanceId", r.lookup("ClaimableBalanceId")]]), r.struct("BeginSponsoringFutureReservesOp", [["sponsoredId", r.lookup("AccountId")]]), r.enum("RevokeSponsorshipType", { revokeSponsorshipLedgerEntry: 0, revokeSponsorshipSigner: 1 }), r.struct("RevokeSponsorshipOpSigner", [["accountId", r.lookup("AccountId")], ["signerKey", r.lookup("SignerKey")]]), r.union("RevokeSponsorshipOp", { switchOn: r.lookup("RevokeSponsorshipType"), switchName: "type", switches: [["revokeSponsorshipLedgerEntry", "ledgerKey"], ["revokeSponsorshipSigner", "signer"]], arms: { ledgerKey: r.lookup("LedgerKey"), signer: r.lookup("RevokeSponsorshipOpSigner") } }), r.struct("ClawbackOp", [["asset", r.lookup("Asset")], ["from", r.lookup("MuxedAccount")], ["amount", r.lookup("Int64")]]), r.struct("ClawbackClaimableBalanceOp", [["balanceId", r.lookup("ClaimableBalanceId")]]), r.struct("SetTrustLineFlagsOp", [["trustor", r.lookup("AccountId")], ["asset", r.lookup("Asset")], ["clearFlags", r.lookup("Uint32")], ["setFlags", r.lookup("Uint32")]]), r.const("LIQUIDITY_POOL_FEE_V18", 30), r.struct("LiquidityPoolDepositOp", [["liquidityPoolId", r.lookup("PoolId")], ["maxAmountA", r.lookup("Int64")], ["maxAmountB", r.lookup("Int64")], ["minPrice", r.lookup("Price")], ["maxPrice", r.lookup("Price")]]), r.struct("LiquidityPoolWithdrawOp", [["liquidityPoolId", r.lookup("PoolId")], ["amount", r.lookup("Int64")], ["minAmountA", r.lookup("Int64")], ["minAmountB", r.lookup("Int64")]]), r.enum("HostFunctionType", { hostFunctionTypeInvokeContract: 0, hostFunctionTypeCreateContract: 1, hostFunctionTypeUploadContractWasm: 2, hostFunctionTypeCreateContractV2: 3 }), r.enum("ContractIdPreimageType", { contractIdPreimageFromAddress: 0, contractIdPreimageFromAsset: 1 }), r.struct("ContractIdPreimageFromAddress", [["address", r.lookup("ScAddress")], ["salt", r.lookup("Uint256")]]), r.union("ContractIdPreimage", { switchOn: r.lookup("ContractIdPreimageType"), switchName: "type", switches: [["contractIdPreimageFromAddress", "fromAddress"], ["contractIdPreimageFromAsset", "fromAsset"]], arms: { fromAddress: r.lookup("ContractIdPreimageFromAddress"), fromAsset: r.lookup("Asset") } }), r.struct("CreateContractArgs", [["contractIdPreimage", r.lookup("ContractIdPreimage")], ["executable", r.lookup("ContractExecutable")]]), r.struct("CreateContractArgsV2", [["contractIdPreimage", r.lookup("ContractIdPreimage")], ["executable", r.lookup("ContractExecutable")], ["constructorArgs", r.varArray(r.lookup("ScVal"), 2147483647)]]), r.struct("InvokeContractArgs", [["contractAddress", r.lookup("ScAddress")], ["functionName", r.lookup("ScSymbol")], ["args", r.varArray(r.lookup("ScVal"), 2147483647)]]), r.union("HostFunction", { switchOn: r.lookup("HostFunctionType"), switchName: "type", switches: [["hostFunctionTypeInvokeContract", "invokeContract"], ["hostFunctionTypeCreateContract", "createContract"], ["hostFunctionTypeUploadContractWasm", "wasm"], ["hostFunctionTypeCreateContractV2", "createContractV2"]], arms: { invokeContract: r.lookup("InvokeContractArgs"), createContract: r.lookup("CreateContractArgs"), wasm: r.varOpaque(), createContractV2: r.lookup("CreateContractArgsV2") } }), r.enum("SorobanAuthorizedFunctionType", { sorobanAuthorizedFunctionTypeContractFn: 0, sorobanAuthorizedFunctionTypeCreateContractHostFn: 1, sorobanAuthorizedFunctionTypeCreateContractV2HostFn: 2 }), r.union("SorobanAuthorizedFunction", { switchOn: r.lookup("SorobanAuthorizedFunctionType"), switchName: "type", switches: [["sorobanAuthorizedFunctionTypeContractFn", "contractFn"], ["sorobanAuthorizedFunctionTypeCreateContractHostFn", "createContractHostFn"], ["sorobanAuthorizedFunctionTypeCreateContractV2HostFn", "createContractV2HostFn"]], arms: { contractFn: r.lookup("InvokeContractArgs"), createContractHostFn: r.lookup("CreateContractArgs"), createContractV2HostFn: r.lookup("CreateContractArgsV2") } }), r.struct("SorobanAuthorizedInvocation", [["function", r.lookup("SorobanAuthorizedFunction")], ["subInvocations", r.varArray(r.lookup("SorobanAuthorizedInvocation"), 2147483647)]]), r.struct("SorobanAddressCredentials", [["address", r.lookup("ScAddress")], ["nonce", r.lookup("Int64")], ["signatureExpirationLedger", r.lookup("Uint32")], ["signature", r.lookup("ScVal")]]), r.enum("SorobanCredentialsType", { sorobanCredentialsSourceAccount: 0, sorobanCredentialsAddress: 1 }), r.union("SorobanCredentials", { switchOn: r.lookup("SorobanCredentialsType"), switchName: "type", switches: [["sorobanCredentialsSourceAccount", r.void()], ["sorobanCredentialsAddress", "address"]], arms: { address: r.lookup("SorobanAddressCredentials") } }), r.struct("SorobanAuthorizationEntry", [["credentials", r.lookup("SorobanCredentials")], ["rootInvocation", r.lookup("SorobanAuthorizedInvocation")]]), r.typedef("SorobanAuthorizationEntries", r.varArray(r.lookup("SorobanAuthorizationEntry"), 2147483647)), r.struct("InvokeHostFunctionOp", [["hostFunction", r.lookup("HostFunction")], ["auth", r.varArray(r.lookup("SorobanAuthorizationEntry"), 2147483647)]]), r.struct("ExtendFootprintTtlOp", [["ext", r.lookup("ExtensionPoint")], ["extendTo", r.lookup("Uint32")]]), r.struct("RestoreFootprintOp", [["ext", r.lookup("ExtensionPoint")]]), r.union("OperationBody", { switchOn: r.lookup("OperationType"), switchName: "type", switches: [["createAccount", "createAccountOp"], ["payment", "paymentOp"], ["pathPaymentStrictReceive", "pathPaymentStrictReceiveOp"], ["manageSellOffer", "manageSellOfferOp"], ["createPassiveSellOffer", "createPassiveSellOfferOp"], ["setOptions", "setOptionsOp"], ["changeTrust", "changeTrustOp"], ["allowTrust", "allowTrustOp"], ["accountMerge", "destination"], ["inflation", r.void()], ["manageData", "manageDataOp"], ["bumpSequence", "bumpSequenceOp"], ["manageBuyOffer", "manageBuyOfferOp"], ["pathPaymentStrictSend", "pathPaymentStrictSendOp"], ["createClaimableBalance", "createClaimableBalanceOp"], ["claimClaimableBalance", "claimClaimableBalanceOp"], ["beginSponsoringFutureReserves", "beginSponsoringFutureReservesOp"], ["endSponsoringFutureReserves", r.void()], ["revokeSponsorship", "revokeSponsorshipOp"], ["clawback", "clawbackOp"], ["clawbackClaimableBalance", "clawbackClaimableBalanceOp"], ["setTrustLineFlags", "setTrustLineFlagsOp"], ["liquidityPoolDeposit", "liquidityPoolDepositOp"], ["liquidityPoolWithdraw", "liquidityPoolWithdrawOp"], ["invokeHostFunction", "invokeHostFunctionOp"], ["extendFootprintTtl", "extendFootprintTtlOp"], ["restoreFootprint", "restoreFootprintOp"]], arms: { createAccountOp: r.lookup("CreateAccountOp"), paymentOp: r.lookup("PaymentOp"), pathPaymentStrictReceiveOp: r.lookup("PathPaymentStrictReceiveOp"), manageSellOfferOp: r.lookup("ManageSellOfferOp"), createPassiveSellOfferOp: r.lookup("CreatePassiveSellOfferOp"), setOptionsOp: r.lookup("SetOptionsOp"), changeTrustOp: r.lookup("ChangeTrustOp"), allowTrustOp: r.lookup("AllowTrustOp"), destination: r.lookup("MuxedAccount"), manageDataOp: r.lookup("ManageDataOp"), bumpSequenceOp: r.lookup("BumpSequenceOp"), manageBuyOfferOp: r.lookup("ManageBuyOfferOp"), pathPaymentStrictSendOp: r.lookup("PathPaymentStrictSendOp"), createClaimableBalanceOp: r.lookup("CreateClaimableBalanceOp"), claimClaimableBalanceOp: r.lookup("ClaimClaimableBalanceOp"), beginSponsoringFutureReservesOp: r.lookup("BeginSponsoringFutureReservesOp"), revokeSponsorshipOp: r.lookup("RevokeSponsorshipOp"), clawbackOp: r.lookup("ClawbackOp"), clawbackClaimableBalanceOp: r.lookup("ClawbackClaimableBalanceOp"), setTrustLineFlagsOp: r.lookup("SetTrustLineFlagsOp"), liquidityPoolDepositOp: r.lookup("LiquidityPoolDepositOp"), liquidityPoolWithdrawOp: r.lookup("LiquidityPoolWithdrawOp"), invokeHostFunctionOp: r.lookup("InvokeHostFunctionOp"), extendFootprintTtlOp: r.lookup("ExtendFootprintTtlOp"), restoreFootprintOp: r.lookup("RestoreFootprintOp") } }), r.struct("Operation", [["sourceAccount", r.option(r.lookup("MuxedAccount"))], ["body", r.lookup("OperationBody")]]), r.struct("HashIdPreimageOperationId", [["sourceAccount", r.lookup("AccountId")], ["seqNum", r.lookup("SequenceNumber")], ["opNum", r.lookup("Uint32")]]), r.struct("HashIdPreimageRevokeId", [["sourceAccount", r.lookup("AccountId")], ["seqNum", r.lookup("SequenceNumber")], ["opNum", r.lookup("Uint32")], ["liquidityPoolId", r.lookup("PoolId")], ["asset", r.lookup("Asset")]]), r.struct("HashIdPreimageContractId", [["networkId", r.lookup("Hash")], ["contractIdPreimage", r.lookup("ContractIdPreimage")]]), r.struct("HashIdPreimageSorobanAuthorization", [["networkId", r.lookup("Hash")], ["nonce", r.lookup("Int64")], ["signatureExpirationLedger", r.lookup("Uint32")], ["invocation", r.lookup("SorobanAuthorizedInvocation")]]), r.union("HashIdPreimage", { switchOn: r.lookup("EnvelopeType"), switchName: "type", switches: [["envelopeTypeOpId", "operationId"], ["envelopeTypePoolRevokeOpId", "revokeId"], ["envelopeTypeContractId", "contractId"], ["envelopeTypeSorobanAuthorization", "sorobanAuthorization"]], arms: { operationId: r.lookup("HashIdPreimageOperationId"), revokeId: r.lookup("HashIdPreimageRevokeId"), contractId: r.lookup("HashIdPreimageContractId"), sorobanAuthorization: r.lookup("HashIdPreimageSorobanAuthorization") } }), r.enum("MemoType", { memoNone: 0, memoText: 1, memoId: 2, memoHash: 3, memoReturn: 4 }), r.union("Memo", { switchOn: r.lookup("MemoType"), switchName: "type", switches: [["memoNone", r.void()], ["memoText", "text"], ["memoId", "id"], ["memoHash", "hash"], ["memoReturn", "retHash"]], arms: { text: r.string(28), id: r.lookup("Uint64"), hash: r.lookup("Hash"), retHash: r.lookup("Hash") } }), r.struct("TimeBounds", [["minTime", r.lookup("TimePoint")], ["maxTime", r.lookup("TimePoint")]]), r.struct("LedgerBounds", [["minLedger", r.lookup("Uint32")], ["maxLedger", r.lookup("Uint32")]]), r.struct("PreconditionsV2", [["timeBounds", r.option(r.lookup("TimeBounds"))], ["ledgerBounds", r.option(r.lookup("LedgerBounds"))], ["minSeqNum", r.option(r.lookup("SequenceNumber"))], ["minSeqAge", r.lookup("Duration")], ["minSeqLedgerGap", r.lookup("Uint32")], ["extraSigners", r.varArray(r.lookup("SignerKey"), 2)]]), r.enum("PreconditionType", { precondNone: 0, precondTime: 1, precondV2: 2 }), r.union("Preconditions", { switchOn: r.lookup("PreconditionType"), switchName: "type", switches: [["precondNone", r.void()], ["precondTime", "timeBounds"], ["precondV2", "v2"]], arms: { timeBounds: r.lookup("TimeBounds"), v2: r.lookup("PreconditionsV2") } }), r.struct("LedgerFootprint", [["readOnly", r.varArray(r.lookup("LedgerKey"), 2147483647)], ["readWrite", r.varArray(r.lookup("LedgerKey"), 2147483647)]]), r.struct("SorobanResources", [["footprint", r.lookup("LedgerFootprint")], ["instructions", r.lookup("Uint32")], ["diskReadBytes", r.lookup("Uint32")], ["writeBytes", r.lookup("Uint32")]]), r.struct("SorobanResourcesExtV0", [["archivedSorobanEntries", r.varArray(r.lookup("Uint32"), 2147483647)]]), r.union("SorobanTransactionDataExt", { switchOn: r.int(), switchName: "v", switches: [[0, r.void()], [1, "resourceExt"]], arms: { resourceExt: r.lookup("SorobanResourcesExtV0") } }), r.struct("SorobanTransactionData", [["ext", r.lookup("SorobanTransactionDataExt")], ["resources", r.lookup("SorobanResources")], ["resourceFee", r.lookup("Int64")]]), r.union("TransactionV0Ext", { switchOn: r.int(), switchName: "v", switches: [[0, r.void()]], arms: {} }), r.struct("TransactionV0", [["sourceAccountEd25519", r.lookup("Uint256")], ["fee", r.lookup("Uint32")], ["seqNum", r.lookup("SequenceNumber")], ["timeBounds", r.option(r.lookup("TimeBounds"))], ["memo", r.lookup("Memo")], ["operations", r.varArray(r.lookup("Operation"), r.lookup("MAX_OPS_PER_TX"))], ["ext", r.lookup("TransactionV0Ext")]]), r.struct("TransactionV0Envelope", [["tx", r.lookup("TransactionV0")], ["signatures", r.varArray(r.lookup("DecoratedSignature"), 20)]]), r.union("TransactionExt", { switchOn: r.int(), switchName: "v", switches: [[0, r.void()], [1, "sorobanData"]], arms: { sorobanData: r.lookup("SorobanTransactionData") } }), r.struct("Transaction", [["sourceAccount", r.lookup("MuxedAccount")], ["fee", r.lookup("Uint32")], ["seqNum", r.lookup("SequenceNumber")], ["cond", r.lookup("Preconditions")], ["memo", r.lookup("Memo")], ["operations", r.varArray(r.lookup("Operation"), r.lookup("MAX_OPS_PER_TX"))], ["ext", r.lookup("TransactionExt")]]), r.struct("TransactionV1Envelope", [["tx", r.lookup("Transaction")], ["signatures", r.varArray(r.lookup("DecoratedSignature"), 20)]]), r.union("FeeBumpTransactionInnerTx", { switchOn: r.lookup("EnvelopeType"), switchName: "type", switches: [["envelopeTypeTx", "v1"]], arms: { v1: r.lookup("TransactionV1Envelope") } }), r.union("FeeBumpTransactionExt", { switchOn: r.int(), switchName: "v", switches: [[0, r.void()]], arms: {} }), r.struct("FeeBumpTransaction", [["feeSource", r.lookup("MuxedAccount")], ["fee", r.lookup("Int64")], ["innerTx", r.lookup("FeeBumpTransactionInnerTx")], ["ext", r.lookup("FeeBumpTransactionExt")]]), r.struct("FeeBumpTransactionEnvelope", [["tx", r.lookup("FeeBumpTransaction")], ["signatures", r.varArray(r.lookup("DecoratedSignature"), 20)]]), r.union("TransactionEnvelope", { switchOn: r.lookup("EnvelopeType"), switchName: "type", switches: [["envelopeTypeTxV0", "v0"], ["envelopeTypeTx", "v1"], ["envelopeTypeTxFeeBump", "feeBump"]], arms: { v0: r.lookup("TransactionV0Envelope"), v1: r.lookup("TransactionV1Envelope"), feeBump: r.lookup("FeeBumpTransactionEnvelope") } }), r.union("TransactionSignaturePayloadTaggedTransaction", { switchOn: r.lookup("EnvelopeType"), switchName: "type", switches: [["envelopeTypeTx", "tx"], ["envelopeTypeTxFeeBump", "feeBump"]], arms: { tx: r.lookup("Transaction"), feeBump: r.lookup("FeeBumpTransaction") } }), r.struct("TransactionSignaturePayload", [["networkId", r.lookup("Hash")], ["taggedTransaction", r.lookup("TransactionSignaturePayloadTaggedTransaction")]]), r.enum("ClaimAtomType", { claimAtomTypeV0: 0, claimAtomTypeOrderBook: 1, claimAtomTypeLiquidityPool: 2 }), r.struct("ClaimOfferAtomV0", [["sellerEd25519", r.lookup("Uint256")], ["offerId", r.lookup("Int64")], ["assetSold", r.lookup("Asset")], ["amountSold", r.lookup("Int64")], ["assetBought", r.lookup("Asset")], ["amountBought", r.lookup("Int64")]]), r.struct("ClaimOfferAtom", [["sellerId", r.lookup("AccountId")], ["offerId", r.lookup("Int64")], ["assetSold", r.lookup("Asset")], ["amountSold", r.lookup("Int64")], ["assetBought", r.lookup("Asset")], ["amountBought", r.lookup("Int64")]]), r.struct("ClaimLiquidityAtom", [["liquidityPoolId", r.lookup("PoolId")], ["assetSold", r.lookup("Asset")], ["amountSold", r.lookup("Int64")], ["assetBought", r.lookup("Asset")], ["amountBought", r.lookup("Int64")]]), r.union("ClaimAtom", { switchOn: r.lookup("ClaimAtomType"), switchName: "type", switches: [["claimAtomTypeV0", "v0"], ["claimAtomTypeOrderBook", "orderBook"], ["claimAtomTypeLiquidityPool", "liquidityPool"]], arms: { v0: r.lookup("ClaimOfferAtomV0"), orderBook: r.lookup("ClaimOfferAtom"), liquidityPool: r.lookup("ClaimLiquidityAtom") } }), r.enum("CreateAccountResultCode", { createAccountSuccess: 0, createAccountMalformed: -1, createAccountUnderfunded: -2, createAccountLowReserve: -3, createAccountAlreadyExist: -4 }), r.union("CreateAccountResult", { switchOn: r.lookup("CreateAccountResultCode"), switchName: "code", switches: [["createAccountSuccess", r.void()], ["createAccountMalformed", r.void()], ["createAccountUnderfunded", r.void()], ["createAccountLowReserve", r.void()], ["createAccountAlreadyExist", r.void()]], arms: {} }), r.enum("PaymentResultCode", { paymentSuccess: 0, paymentMalformed: -1, paymentUnderfunded: -2, paymentSrcNoTrust: -3, paymentSrcNotAuthorized: -4, paymentNoDestination: -5, paymentNoTrust: -6, paymentNotAuthorized: -7, paymentLineFull: -8, paymentNoIssuer: -9 }), r.union("PaymentResult", { switchOn: r.lookup("PaymentResultCode"), switchName: "code", switches: [["paymentSuccess", r.void()], ["paymentMalformed", r.void()], ["paymentUnderfunded", r.void()], ["paymentSrcNoTrust", r.void()], ["paymentSrcNotAuthorized", r.void()], ["paymentNoDestination", r.void()], ["paymentNoTrust", r.void()], ["paymentNotAuthorized", r.void()], ["paymentLineFull", r.void()], ["paymentNoIssuer", r.void()]], arms: {} }), r.enum("PathPaymentStrictReceiveResultCode", { pathPaymentStrictReceiveSuccess: 0, pathPaymentStrictReceiveMalformed: -1, pathPaymentStrictReceiveUnderfunded: -2, pathPaymentStrictReceiveSrcNoTrust: -3, pathPaymentStrictReceiveSrcNotAuthorized: -4, pathPaymentStrictReceiveNoDestination: -5, pathPaymentStrictReceiveNoTrust: -6, pathPaymentStrictReceiveNotAuthorized: -7, pathPaymentStrictReceiveLineFull: -8, pathPaymentStrictReceiveNoIssuer: -9, pathPaymentStrictReceiveTooFewOffers: -10, pathPaymentStrictReceiveOfferCrossSelf: -11, pathPaymentStrictReceiveOverSendmax: -12 }), r.struct("SimplePaymentResult", [["destination", r.lookup("AccountId")], ["asset", r.lookup("Asset")], ["amount", r.lookup("Int64")]]), r.struct("PathPaymentStrictReceiveResultSuccess", [["offers", r.varArray(r.lookup("ClaimAtom"), 2147483647)], ["last", r.lookup("SimplePaymentResult")]]), r.union("PathPaymentStrictReceiveResult", { switchOn: r.lookup("PathPaymentStrictReceiveResultCode"), switchName: "code", switches: [["pathPaymentStrictReceiveSuccess", "success"], ["pathPaymentStrictReceiveMalformed", r.void()], ["pathPaymentStrictReceiveUnderfunded", r.void()], ["pathPaymentStrictReceiveSrcNoTrust", r.void()], ["pathPaymentStrictReceiveSrcNotAuthorized", r.void()], ["pathPaymentStrictReceiveNoDestination", r.void()], ["pathPaymentStrictReceiveNoTrust", r.void()], ["pathPaymentStrictReceiveNotAuthorized", r.void()], ["pathPaymentStrictReceiveLineFull", r.void()], ["pathPaymentStrictReceiveNoIssuer", "noIssuer"], ["pathPaymentStrictReceiveTooFewOffers", r.void()], ["pathPaymentStrictReceiveOfferCrossSelf", r.void()], ["pathPaymentStrictReceiveOverSendmax", r.void()]], arms: { success: r.lookup("PathPaymentStrictReceiveResultSuccess"), noIssuer: r.lookup("Asset") } }), r.enum("PathPaymentStrictSendResultCode", { pathPaymentStrictSendSuccess: 0, pathPaymentStrictSendMalformed: -1, pathPaymentStrictSendUnderfunded: -2, pathPaymentStrictSendSrcNoTrust: -3, pathPaymentStrictSendSrcNotAuthorized: -4, pathPaymentStrictSendNoDestination: -5, pathPaymentStrictSendNoTrust: -6, pathPaymentStrictSendNotAuthorized: -7, pathPaymentStrictSendLineFull: -8, pathPaymentStrictSendNoIssuer: -9, pathPaymentStrictSendTooFewOffers: -10, pathPaymentStrictSendOfferCrossSelf: -11, pathPaymentStrictSendUnderDestmin: -12 }), r.struct("PathPaymentStrictSendResultSuccess", [["offers", r.varArray(r.lookup("ClaimAtom"), 2147483647)], ["last", r.lookup("SimplePaymentResult")]]), r.union("PathPaymentStrictSendResult", { switchOn: r.lookup("PathPaymentStrictSendResultCode"), switchName: "code", switches: [["pathPaymentStrictSendSuccess", "success"], ["pathPaymentStrictSendMalformed", r.void()], ["pathPaymentStrictSendUnderfunded", r.void()], ["pathPaymentStrictSendSrcNoTrust", r.void()], ["pathPaymentStrictSendSrcNotAuthorized", r.void()], ["pathPaymentStrictSendNoDestination", r.void()], ["pathPaymentStrictSendNoTrust", r.void()], ["pathPaymentStrictSendNotAuthorized", r.void()], ["pathPaymentStrictSendLineFull", r.void()], ["pathPaymentStrictSendNoIssuer", "noIssuer"], ["pathPaymentStrictSendTooFewOffers", r.void()], ["pathPaymentStrictSendOfferCrossSelf", r.void()], ["pathPaymentStrictSendUnderDestmin", r.void()]], arms: { success: r.lookup("PathPaymentStrictSendResultSuccess"), noIssuer: r.lookup("Asset") } }), r.enum("ManageSellOfferResultCode", { manageSellOfferSuccess: 0, manageSellOfferMalformed: -1, manageSellOfferSellNoTrust: -2, manageSellOfferBuyNoTrust: -3, manageSellOfferSellNotAuthorized: -4, manageSellOfferBuyNotAuthorized: -5, manageSellOfferLineFull: -6, manageSellOfferUnderfunded: -7, manageSellOfferCrossSelf: -8, manageSellOfferSellNoIssuer: -9, manageSellOfferBuyNoIssuer: -10, manageSellOfferNotFound: -11, manageSellOfferLowReserve: -12 }), r.enum("ManageOfferEffect", { manageOfferCreated: 0, manageOfferUpdated: 1, manageOfferDeleted: 2 }), r.union("ManageOfferSuccessResultOffer", { switchOn: r.lookup("ManageOfferEffect"), switchName: "effect", switches: [["manageOfferCreated", "offer"], ["manageOfferUpdated", "offer"], ["manageOfferDeleted", r.void()]], arms: { offer: r.lookup("OfferEntry") } }), r.struct("ManageOfferSuccessResult", [["offersClaimed", r.varArray(r.lookup("ClaimAtom"), 2147483647)], ["offer", r.lookup("ManageOfferSuccessResultOffer")]]), r.union("ManageSellOfferResult", { switchOn: r.lookup("ManageSellOfferResultCode"), switchName: "code", switches: [["manageSellOfferSuccess", "success"], ["manageSellOfferMalformed", r.void()], ["manageSellOfferSellNoTrust", r.void()], ["manageSellOfferBuyNoTrust", r.void()], ["manageSellOfferSellNotAuthorized", r.void()], ["manageSellOfferBuyNotAuthorized", r.void()], ["manageSellOfferLineFull", r.void()], ["manageSellOfferUnderfunded", r.void()], ["manageSellOfferCrossSelf", r.void()], ["manageSellOfferSellNoIssuer", r.void()], ["manageSellOfferBuyNoIssuer", r.void()], ["manageSellOfferNotFound", r.void()], ["manageSellOfferLowReserve", r.void()]], arms: { success: r.lookup("ManageOfferSuccessResult") } }), r.enum("ManageBuyOfferResultCode", { manageBuyOfferSuccess: 0, manageBuyOfferMalformed: -1, manageBuyOfferSellNoTrust: -2, manageBuyOfferBuyNoTrust: -3, manageBuyOfferSellNotAuthorized: -4, manageBuyOfferBuyNotAuthorized: -5, manageBuyOfferLineFull: -6, manageBuyOfferUnderfunded: -7, manageBuyOfferCrossSelf: -8, manageBuyOfferSellNoIssuer: -9, manageBuyOfferBuyNoIssuer: -10, manageBuyOfferNotFound: -11, manageBuyOfferLowReserve: -12 }), r.union("ManageBuyOfferResult", { switchOn: r.lookup("ManageBuyOfferResultCode"), switchName: "code", switches: [["manageBuyOfferSuccess", "success"], ["manageBuyOfferMalformed", r.void()], ["manageBuyOfferSellNoTrust", r.void()], ["manageBuyOfferBuyNoTrust", r.void()], ["manageBuyOfferSellNotAuthorized", r.void()], ["manageBuyOfferBuyNotAuthorized", r.void()], ["manageBuyOfferLineFull", r.void()], ["manageBuyOfferUnderfunded", r.void()], ["manageBuyOfferCrossSelf", r.void()], ["manageBuyOfferSellNoIssuer", r.void()], ["manageBuyOfferBuyNoIssuer", r.void()], ["manageBuyOfferNotFound", r.void()], ["manageBuyOfferLowReserve", r.void()]], arms: { success: r.lookup("ManageOfferSuccessResult") } }), r.enum("SetOptionsResultCode", { setOptionsSuccess: 0, setOptionsLowReserve: -1, setOptionsTooManySigners: -2, setOptionsBadFlags: -3, setOptionsInvalidInflation: -4, setOptionsCantChange: -5, setOptionsUnknownFlag: -6, setOptionsThresholdOutOfRange: -7, setOptionsBadSigner: -8, setOptionsInvalidHomeDomain: -9, setOptionsAuthRevocableRequired: -10 }), r.union("SetOptionsResult", { switchOn: r.lookup("SetOptionsResultCode"), switchName: "code", switches: [["setOptionsSuccess", r.void()], ["setOptionsLowReserve", r.void()], ["setOptionsTooManySigners", r.void()], ["setOptionsBadFlags", r.void()], ["setOptionsInvalidInflation", r.void()], ["setOptionsCantChange", r.void()], ["setOptionsUnknownFlag", r.void()], ["setOptionsThresholdOutOfRange", r.void()], ["setOptionsBadSigner", r.void()], ["setOptionsInvalidHomeDomain", r.void()], ["setOptionsAuthRevocableRequired", r.void()]], arms: {} }), r.enum("ChangeTrustResultCode", { changeTrustSuccess: 0, changeTrustMalformed: -1, changeTrustNoIssuer: -2, changeTrustInvalidLimit: -3, changeTrustLowReserve: -4, changeTrustSelfNotAllowed: -5, changeTrustTrustLineMissing: -6, changeTrustCannotDelete: -7, changeTrustNotAuthMaintainLiabilities: -8 }), r.union("ChangeTrustResult", { switchOn: r.lookup("ChangeTrustResultCode"), switchName: "code", switches: [["changeTrustSuccess", r.void()], ["changeTrustMalformed", r.void()], ["changeTrustNoIssuer", r.void()], ["changeTrustInvalidLimit", r.void()], ["changeTrustLowReserve", r.void()], ["changeTrustSelfNotAllowed", r.void()], ["changeTrustTrustLineMissing", r.void()], ["changeTrustCannotDelete", r.void()], ["changeTrustNotAuthMaintainLiabilities", r.void()]], arms: {} }), r.enum("AllowTrustResultCode", { allowTrustSuccess: 0, allowTrustMalformed: -1, allowTrustNoTrustLine: -2, allowTrustTrustNotRequired: -3, allowTrustCantRevoke: -4, allowTrustSelfNotAllowed: -5, allowTrustLowReserve: -6 }), r.union("AllowTrustResult", { switchOn: r.lookup("AllowTrustResultCode"), switchName: "code", switches: [["allowTrustSuccess", r.void()], ["allowTrustMalformed", r.void()], ["allowTrustNoTrustLine", r.void()], ["allowTrustTrustNotRequired", r.void()], ["allowTrustCantRevoke", r.void()], ["allowTrustSelfNotAllowed", r.void()], ["allowTrustLowReserve", r.void()]], arms: {} }), r.enum("AccountMergeResultCode", { accountMergeSuccess: 0, accountMergeMalformed: -1, accountMergeNoAccount: -2, accountMergeImmutableSet: -3, accountMergeHasSubEntries: -4, accountMergeSeqnumTooFar: -5, accountMergeDestFull: -6, accountMergeIsSponsor: -7 }), r.union("AccountMergeResult", { switchOn: r.lookup("AccountMergeResultCode"), switchName: "code", switches: [["accountMergeSuccess", "sourceAccountBalance"], ["accountMergeMalformed", r.void()], ["accountMergeNoAccount", r.void()], ["accountMergeImmutableSet", r.void()], ["accountMergeHasSubEntries", r.void()], ["accountMergeSeqnumTooFar", r.void()], ["accountMergeDestFull", r.void()], ["accountMergeIsSponsor", r.void()]], arms: { sourceAccountBalance: r.lookup("Int64") } }), r.enum("InflationResultCode", { inflationSuccess: 0, inflationNotTime: -1 }), r.struct("InflationPayout", [["destination", r.lookup("AccountId")], ["amount", r.lookup("Int64")]]), r.union("InflationResult", { switchOn: r.lookup("InflationResultCode"), switchName: "code", switches: [["inflationSuccess", "payouts"], ["inflationNotTime", r.void()]], arms: { payouts: r.varArray(r.lookup("InflationPayout"), 2147483647) } }), r.enum("ManageDataResultCode", { manageDataSuccess: 0, manageDataNotSupportedYet: -1, manageDataNameNotFound: -2, manageDataLowReserve: -3, manageDataInvalidName: -4 }), r.union("ManageDataResult", { switchOn: r.lookup("ManageDataResultCode"), switchName: "code", switches: [["manageDataSuccess", r.void()], ["manageDataNotSupportedYet", r.void()], ["manageDataNameNotFound", r.void()], ["manageDataLowReserve", r.void()], ["manageDataInvalidName", r.void()]], arms: {} }), r.enum("BumpSequenceResultCode", { bumpSequenceSuccess: 0, bumpSequenceBadSeq: -1 }), r.union("BumpSequenceResult", { switchOn: r.lookup("BumpSequenceResultCode"), switchName: "code", switches: [["bumpSequenceSuccess", r.void()], ["bumpSequenceBadSeq", r.void()]], arms: {} }), r.enum("CreateClaimableBalanceResultCode", { createClaimableBalanceSuccess: 0, createClaimableBalanceMalformed: -1, createClaimableBalanceLowReserve: -2, createClaimableBalanceNoTrust: -3, createClaimableBalanceNotAuthorized: -4, createClaimableBalanceUnderfunded: -5 }), r.union("CreateClaimableBalanceResult", { switchOn: r.lookup("CreateClaimableBalanceResultCode"), switchName: "code", switches: [["createClaimableBalanceSuccess", "balanceId"], ["createClaimableBalanceMalformed", r.void()], ["createClaimableBalanceLowReserve", r.void()], ["createClaimableBalanceNoTrust", r.void()], ["createClaimableBalanceNotAuthorized", r.void()], ["createClaimableBalanceUnderfunded", r.void()]], arms: { balanceId: r.lookup("ClaimableBalanceId") } }), r.enum("ClaimClaimableBalanceResultCode", { claimClaimableBalanceSuccess: 0, claimClaimableBalanceDoesNotExist: -1, claimClaimableBalanceCannotClaim: -2, claimClaimableBalanceLineFull: -3, claimClaimableBalanceNoTrust: -4, claimClaimableBalanceNotAuthorized: -5 }), r.union("ClaimClaimableBalanceResult", { switchOn: r.lookup("ClaimClaimableBalanceResultCode"), switchName: "code", switches: [["claimClaimableBalanceSuccess", r.void()], ["claimClaimableBalanceDoesNotExist", r.void()], ["claimClaimableBalanceCannotClaim", r.void()], ["claimClaimableBalanceLineFull", r.void()], ["claimClaimableBalanceNoTrust", r.void()], ["claimClaimableBalanceNotAuthorized", r.void()]], arms: {} }), r.enum("BeginSponsoringFutureReservesResultCode", { beginSponsoringFutureReservesSuccess: 0, beginSponsoringFutureReservesMalformed: -1, beginSponsoringFutureReservesAlreadySponsored: -2, beginSponsoringFutureReservesRecursive: -3 }), r.union("BeginSponsoringFutureReservesResult", { switchOn: r.lookup("BeginSponsoringFutureReservesResultCode"), switchName: "code", switches: [["beginSponsoringFutureReservesSuccess", r.void()], ["beginSponsoringFutureReservesMalformed", r.void()], ["beginSponsoringFutureReservesAlreadySponsored", r.void()], ["beginSponsoringFutureReservesRecursive", r.void()]], arms: {} }), r.enum("EndSponsoringFutureReservesResultCode", { endSponsoringFutureReservesSuccess: 0, endSponsoringFutureReservesNotSponsored: -1 }), r.union("EndSponsoringFutureReservesResult", { switchOn: r.lookup("EndSponsoringFutureReservesResultCode"), switchName: "code", switches: [["endSponsoringFutureReservesSuccess", r.void()], ["endSponsoringFutureReservesNotSponsored", r.void()]], arms: {} }), r.enum("RevokeSponsorshipResultCode", { revokeSponsorshipSuccess: 0, revokeSponsorshipDoesNotExist: -1, revokeSponsorshipNotSponsor: -2, revokeSponsorshipLowReserve: -3, revokeSponsorshipOnlyTransferable: -4, revokeSponsorshipMalformed: -5 }), r.union("RevokeSponsorshipResult", { switchOn: r.lookup("RevokeSponsorshipResultCode"), switchName: "code", switches: [["revokeSponsorshipSuccess", r.void()], ["revokeSponsorshipDoesNotExist", r.void()], ["revokeSponsorshipNotSponsor", r.void()], ["revokeSponsorshipLowReserve", r.void()], ["revokeSponsorshipOnlyTransferable", r.void()], ["revokeSponsorshipMalformed", r.void()]], arms: {} }), r.enum("ClawbackResultCode", { clawbackSuccess: 0, clawbackMalformed: -1, clawbackNotClawbackEnabled: -2, clawbackNoTrust: -3, clawbackUnderfunded: -4 }), r.union("ClawbackResult", { switchOn: r.lookup("ClawbackResultCode"), switchName: "code", switches: [["clawbackSuccess", r.void()], ["clawbackMalformed", r.void()], ["clawbackNotClawbackEnabled", r.void()], ["clawbackNoTrust", r.void()], ["clawbackUnderfunded", r.void()]], arms: {} }), r.enum("ClawbackClaimableBalanceResultCode", { clawbackClaimableBalanceSuccess: 0, clawbackClaimableBalanceDoesNotExist: -1, clawbackClaimableBalanceNotIssuer: -2, clawbackClaimableBalanceNotClawbackEnabled: -3 }), r.union("ClawbackClaimableBalanceResult", { switchOn: r.lookup("ClawbackClaimableBalanceResultCode"), switchName: "code", switches: [["clawbackClaimableBalanceSuccess", r.void()], ["clawbackClaimableBalanceDoesNotExist", r.void()], ["clawbackClaimableBalanceNotIssuer", r.void()], ["clawbackClaimableBalanceNotClawbackEnabled", r.void()]], arms: {} }), r.enum("SetTrustLineFlagsResultCode", { setTrustLineFlagsSuccess: 0, setTrustLineFlagsMalformed: -1, setTrustLineFlagsNoTrustLine: -2, setTrustLineFlagsCantRevoke: -3, setTrustLineFlagsInvalidState: -4, setTrustLineFlagsLowReserve: -5 }), r.union("SetTrustLineFlagsResult", { switchOn: r.lookup("SetTrustLineFlagsResultCode"), switchName: "code", switches: [["setTrustLineFlagsSuccess", r.void()], ["setTrustLineFlagsMalformed", r.void()], ["setTrustLineFlagsNoTrustLine", r.void()], ["setTrustLineFlagsCantRevoke", r.void()], ["setTrustLineFlagsInvalidState", r.void()], ["setTrustLineFlagsLowReserve", r.void()]], arms: {} }), r.enum("LiquidityPoolDepositResultCode", { liquidityPoolDepositSuccess: 0, liquidityPoolDepositMalformed: -1, liquidityPoolDepositNoTrust: -2, liquidityPoolDepositNotAuthorized: -3, liquidityPoolDepositUnderfunded: -4, liquidityPoolDepositLineFull: -5, liquidityPoolDepositBadPrice: -6, liquidityPoolDepositPoolFull: -7 }), r.union("LiquidityPoolDepositResult", { switchOn: r.lookup("LiquidityPoolDepositResultCode"), switchName: "code", switches: [["liquidityPoolDepositSuccess", r.void()], ["liquidityPoolDepositMalformed", r.void()], ["liquidityPoolDepositNoTrust", r.void()], ["liquidityPoolDepositNotAuthorized", r.void()], ["liquidityPoolDepositUnderfunded", r.void()], ["liquidityPoolDepositLineFull", r.void()], ["liquidityPoolDepositBadPrice", r.void()], ["liquidityPoolDepositPoolFull", r.void()]], arms: {} }), r.enum("LiquidityPoolWithdrawResultCode", { liquidityPoolWithdrawSuccess: 0, liquidityPoolWithdrawMalformed: -1, liquidityPoolWithdrawNoTrust: -2, liquidityPoolWithdrawUnderfunded: -3, liquidityPoolWithdrawLineFull: -4, liquidityPoolWithdrawUnderMinimum: -5 }), r.union("LiquidityPoolWithdrawResult", { switchOn: r.lookup("LiquidityPoolWithdrawResultCode"), switchName: "code", switches: [["liquidityPoolWithdrawSuccess", r.void()], ["liquidityPoolWithdrawMalformed", r.void()], ["liquidityPoolWithdrawNoTrust", r.void()], ["liquidityPoolWithdrawUnderfunded", r.void()], ["liquidityPoolWithdrawLineFull", r.void()], ["liquidityPoolWithdrawUnderMinimum", r.void()]], arms: {} }), r.enum("InvokeHostFunctionResultCode", { invokeHostFunctionSuccess: 0, invokeHostFunctionMalformed: -1, invokeHostFunctionTrapped: -2, invokeHostFunctionResourceLimitExceeded: -3, invokeHostFunctionEntryArchived: -4, invokeHostFunctionInsufficientRefundableFee: -5 }), r.union("InvokeHostFunctionResult", { switchOn: r.lookup("InvokeHostFunctionResultCode"), switchName: "code", switches: [["invokeHostFunctionSuccess", "success"], ["invokeHostFunctionMalformed", r.void()], ["invokeHostFunctionTrapped", r.void()], ["invokeHostFunctionResourceLimitExceeded", r.void()], ["invokeHostFunctionEntryArchived", r.void()], ["invokeHostFunctionInsufficientRefundableFee", r.void()]], arms: { success: r.lookup("Hash") } }), r.enum("ExtendFootprintTtlResultCode", { extendFootprintTtlSuccess: 0, extendFootprintTtlMalformed: -1, extendFootprintTtlResourceLimitExceeded: -2, extendFootprintTtlInsufficientRefundableFee: -3 }), r.union("ExtendFootprintTtlResult", { switchOn: r.lookup("ExtendFootprintTtlResultCode"), switchName: "code", switches: [["extendFootprintTtlSuccess", r.void()], ["extendFootprintTtlMalformed", r.void()], ["extendFootprintTtlResourceLimitExceeded", r.void()], ["extendFootprintTtlInsufficientRefundableFee", r.void()]], arms: {} }), r.enum("RestoreFootprintResultCode", { restoreFootprintSuccess: 0, restoreFootprintMalformed: -1, restoreFootprintResourceLimitExceeded: -2, restoreFootprintInsufficientRefundableFee: -3 }), r.union("RestoreFootprintResult", { switchOn: r.lookup("RestoreFootprintResultCode"), switchName: "code", switches: [["restoreFootprintSuccess", r.void()], ["restoreFootprintMalformed", r.void()], ["restoreFootprintResourceLimitExceeded", r.void()], ["restoreFootprintInsufficientRefundableFee", r.void()]], arms: {} }), r.enum("OperationResultCode", { opInner: 0, opBadAuth: -1, opNoAccount: -2, opNotSupported: -3, opTooManySubentries: -4, opExceededWorkLimit: -5, opTooManySponsoring: -6 }), r.union("OperationResultTr", { switchOn: r.lookup("OperationType"), switchName: "type", switches: [["createAccount", "createAccountResult"], ["payment", "paymentResult"], ["pathPaymentStrictReceive", "pathPaymentStrictReceiveResult"], ["manageSellOffer", "manageSellOfferResult"], ["createPassiveSellOffer", "createPassiveSellOfferResult"], ["setOptions", "setOptionsResult"], ["changeTrust", "changeTrustResult"], ["allowTrust", "allowTrustResult"], ["accountMerge", "accountMergeResult"], ["inflation", "inflationResult"], ["manageData", "manageDataResult"], ["bumpSequence", "bumpSeqResult"], ["manageBuyOffer", "manageBuyOfferResult"], ["pathPaymentStrictSend", "pathPaymentStrictSendResult"], ["createClaimableBalance", "createClaimableBalanceResult"], ["claimClaimableBalance", "claimClaimableBalanceResult"], ["beginSponsoringFutureReserves", "beginSponsoringFutureReservesResult"], ["endSponsoringFutureReserves", "endSponsoringFutureReservesResult"], ["revokeSponsorship", "revokeSponsorshipResult"], ["clawback", "clawbackResult"], ["clawbackClaimableBalance", "clawbackClaimableBalanceResult"], ["setTrustLineFlags", "setTrustLineFlagsResult"], ["liquidityPoolDeposit", "liquidityPoolDepositResult"], ["liquidityPoolWithdraw", "liquidityPoolWithdrawResult"], ["invokeHostFunction", "invokeHostFunctionResult"], ["extendFootprintTtl", "extendFootprintTtlResult"], ["restoreFootprint", "restoreFootprintResult"]], arms: { createAccountResult: r.lookup("CreateAccountResult"), paymentResult: r.lookup("PaymentResult"), pathPaymentStrictReceiveResult: r.lookup("PathPaymentStrictReceiveResult"), manageSellOfferResult: r.lookup("ManageSellOfferResult"), createPassiveSellOfferResult: r.lookup("ManageSellOfferResult"), setOptionsResult: r.lookup("SetOptionsResult"), changeTrustResult: r.lookup("ChangeTrustResult"), allowTrustResult: r.lookup("AllowTrustResult"), accountMergeResult: r.lookup("AccountMergeResult"), inflationResult: r.lookup("InflationResult"), manageDataResult: r.lookup("ManageDataResult"), bumpSeqResult: r.lookup("BumpSequenceResult"), manageBuyOfferResult: r.lookup("ManageBuyOfferResult"), pathPaymentStrictSendResult: r.lookup("PathPaymentStrictSendResult"), createClaimableBalanceResult: r.lookup("CreateClaimableBalanceResult"), claimClaimableBalanceResult: r.lookup("ClaimClaimableBalanceResult"), beginSponsoringFutureReservesResult: r.lookup("BeginSponsoringFutureReservesResult"), endSponsoringFutureReservesResult: r.lookup("EndSponsoringFutureReservesResult"), revokeSponsorshipResult: r.lookup("RevokeSponsorshipResult"), clawbackResult: r.lookup("ClawbackResult"), clawbackClaimableBalanceResult: r.lookup("ClawbackClaimableBalanceResult"), setTrustLineFlagsResult: r.lookup("SetTrustLineFlagsResult"), liquidityPoolDepositResult: r.lookup("LiquidityPoolDepositResult"), liquidityPoolWithdrawResult: r.lookup("LiquidityPoolWithdrawResult"), invokeHostFunctionResult: r.lookup("InvokeHostFunctionResult"), extendFootprintTtlResult: r.lookup("ExtendFootprintTtlResult"), restoreFootprintResult: r.lookup("RestoreFootprintResult") } }), r.union("OperationResult", { switchOn: r.lookup("OperationResultCode"), switchName: "code", switches: [["opInner", "tr"], ["opBadAuth", r.void()], ["opNoAccount", r.void()], ["opNotSupported", r.void()], ["opTooManySubentries", r.void()], ["opExceededWorkLimit", r.void()], ["opTooManySponsoring", r.void()]], arms: { tr: r.lookup("OperationResultTr") } }), r.enum("TransactionResultCode", { txFeeBumpInnerSuccess: 1, txSuccess: 0, txFailed: -1, txTooEarly: -2, txTooLate: -3, txMissingOperation: -4, txBadSeq: -5, txBadAuth: -6, txInsufficientBalance: -7, txNoAccount: -8, txInsufficientFee: -9, txBadAuthExtra: -10, txInternalError: -11, txNotSupported: -12, txFeeBumpInnerFailed: -13, txBadSponsorship: -14, txBadMinSeqAgeOrGap: -15, txMalformed: -16, txSorobanInvalid: -17 }), r.union("InnerTransactionResultResult", { switchOn: r.lookup("TransactionResultCode"), switchName: "code", switches: [["txSuccess", "results"], ["txFailed", "results"], ["txTooEarly", r.void()], ["txTooLate", r.void()], ["txMissingOperation", r.void()], ["txBadSeq", r.void()], ["txBadAuth", r.void()], ["txInsufficientBalance", r.void()], ["txNoAccount", r.void()], ["txInsufficientFee", r.void()], ["txBadAuthExtra", r.void()], ["txInternalError", r.void()], ["txNotSupported", r.void()], ["txBadSponsorship", r.void()], ["txBadMinSeqAgeOrGap", r.void()], ["txMalformed", r.void()], ["txSorobanInvalid", r.void()]], arms: { results: r.varArray(r.lookup("OperationResult"), 2147483647) } }), r.union("InnerTransactionResultExt", { switchOn: r.int(), switchName: "v", switches: [[0, r.void()]], arms: {} }), r.struct("InnerTransactionResult", [["feeCharged", r.lookup("Int64")], ["result", r.lookup("InnerTransactionResultResult")], ["ext", r.lookup("InnerTransactionResultExt")]]), r.struct("InnerTransactionResultPair", [["transactionHash", r.lookup("Hash")], ["result", r.lookup("InnerTransactionResult")]]), r.union("TransactionResultResult", { switchOn: r.lookup("TransactionResultCode"), switchName: "code", switches: [["txFeeBumpInnerSuccess", "innerResultPair"], ["txFeeBumpInnerFailed", "innerResultPair"], ["txSuccess", "results"], ["txFailed", "results"], ["txTooEarly", r.void()], ["txTooLate", r.void()], ["txMissingOperation", r.void()], ["txBadSeq", r.void()], ["txBadAuth", r.void()], ["txInsufficientBalance", r.void()], ["txNoAccount", r.void()], ["txInsufficientFee", r.void()], ["txBadAuthExtra", r.void()], ["txInternalError", r.void()], ["txNotSupported", r.void()], ["txBadSponsorship", r.void()], ["txBadMinSeqAgeOrGap", r.void()], ["txMalformed", r.void()], ["txSorobanInvalid", r.void()]], arms: { innerResultPair: r.lookup("InnerTransactionResultPair"), results: r.varArray(r.lookup("OperationResult"), 2147483647) } }), r.union("TransactionResultExt", { switchOn: r.int(), switchName: "v", switches: [[0, r.void()]], arms: {} }), r.struct("TransactionResult", [["feeCharged", r.lookup("Int64")], ["result", r.lookup("TransactionResultResult")], ["ext", r.lookup("TransactionResultExt")]]), r.typedef("Hash", r.opaque(32)), r.typedef("Uint256", r.opaque(32)), r.typedef("Uint32", r.uint()), r.typedef("Int32", r.int()), r.typedef("Uint64", r.uhyper()), r.typedef("Int64", r.hyper()), r.typedef("TimePoint", r.lookup("Uint64")), r.typedef("Duration", r.lookup("Uint64")), r.union("ExtensionPoint", { switchOn: r.int(), switchName: "v", switches: [[0, r.void()]], arms: {} }), r.enum("CryptoKeyType", { keyTypeEd25519: 0, keyTypePreAuthTx: 1, keyTypeHashX: 2, keyTypeEd25519SignedPayload: 3, keyTypeMuxedEd25519: 256 }), r.enum("PublicKeyType", { publicKeyTypeEd25519: 0 }), r.enum("SignerKeyType", { signerKeyTypeEd25519: 0, signerKeyTypePreAuthTx: 1, signerKeyTypeHashX: 2, signerKeyTypeEd25519SignedPayload: 3 }), r.union("PublicKey", { switchOn: r.lookup("PublicKeyType"), switchName: "type", switches: [["publicKeyTypeEd25519", "ed25519"]], arms: { ed25519: r.lookup("Uint256") } }), r.struct("SignerKeyEd25519SignedPayload", [["ed25519", r.lookup("Uint256")], ["payload", r.varOpaque(64)]]), r.union("SignerKey", { switchOn: r.lookup("SignerKeyType"), switchName: "type", switches: [["signerKeyTypeEd25519", "ed25519"], ["signerKeyTypePreAuthTx", "preAuthTx"], ["signerKeyTypeHashX", "hashX"], ["signerKeyTypeEd25519SignedPayload", "ed25519SignedPayload"]], arms: { ed25519: r.lookup("Uint256"), preAuthTx: r.lookup("Uint256"), hashX: r.lookup("Uint256"), ed25519SignedPayload: r.lookup("SignerKeyEd25519SignedPayload") } }), r.typedef("Signature", r.varOpaque(64)), r.typedef("SignatureHint", r.opaque(4)), r.typedef("NodeId", r.lookup("PublicKey")), r.typedef("AccountId", r.lookup("PublicKey")), r.typedef("ContractId", r.lookup("Hash")), r.struct("Curve25519Secret", [["key", r.opaque(32)]]), r.struct("Curve25519Public", [["key", r.opaque(32)]]), r.struct("HmacSha256Key", [["key", r.opaque(32)]]), r.struct("HmacSha256Mac", [["mac", r.opaque(32)]]), r.struct("ShortHashSeed", [["seed", r.opaque(16)]]), r.enum("BinaryFuseFilterType", { binaryFuseFilter8Bit: 0, binaryFuseFilter16Bit: 1, binaryFuseFilter32Bit: 2 }), r.struct("SerializedBinaryFuseFilter", [["type", r.lookup("BinaryFuseFilterType")], ["inputHashSeed", r.lookup("ShortHashSeed")], ["filterSeed", r.lookup("ShortHashSeed")], ["segmentLength", r.lookup("Uint32")], ["segementLengthMask", r.lookup("Uint32")], ["segmentCount", r.lookup("Uint32")], ["segmentCountLength", r.lookup("Uint32")], ["fingerprintLength", r.lookup("Uint32")], ["fingerprints", r.varOpaque()]]), r.typedef("PoolId", r.lookup("Hash")), r.enum("ClaimableBalanceIdType", { claimableBalanceIdTypeV0: 0 }), r.union("ClaimableBalanceId", { switchOn: r.lookup("ClaimableBalanceIdType"), switchName: "type", switches: [["claimableBalanceIdTypeV0", "v0"]], arms: { v0: r.lookup("Hash") } }), r.enum("ScValType", { scvBool: 0, scvVoid: 1, scvError: 2, scvU32: 3, scvI32: 4, scvU64: 5, scvI64: 6, scvTimepoint: 7, scvDuration: 8, scvU128: 9, scvI128: 10, scvU256: 11, scvI256: 12, scvBytes: 13, scvString: 14, scvSymbol: 15, scvVec: 16, scvMap: 17, scvAddress: 18, scvContractInstance: 19, scvLedgerKeyContractInstance: 20, scvLedgerKeyNonce: 21 }), r.enum("ScErrorType", { sceContract: 0, sceWasmVm: 1, sceContext: 2, sceStorage: 3, sceObject: 4, sceCrypto: 5, sceEvents: 6, sceBudget: 7, sceValue: 8, sceAuth: 9 }), r.enum("ScErrorCode", { scecArithDomain: 0, scecIndexBounds: 1, scecInvalidInput: 2, scecMissingValue: 3, scecExistingValue: 4, scecExceededLimit: 5, scecInvalidAction: 6, scecInternalError: 7, scecUnexpectedType: 8, scecUnexpectedSize: 9 }), r.union("ScError", { switchOn: r.lookup("ScErrorType"), switchName: "type", switches: [["sceContract", "contractCode"], ["sceWasmVm", "code"], ["sceContext", "code"], ["sceStorage", "code"], ["sceObject", "code"], ["sceCrypto", "code"], ["sceEvents", "code"], ["sceBudget", "code"], ["sceValue", "code"], ["sceAuth", "code"]], arms: { contractCode: r.lookup("Uint32"), code: r.lookup("ScErrorCode") } }), r.struct("UInt128Parts", [["hi", r.lookup("Uint64")], ["lo", r.lookup("Uint64")]]), r.struct("Int128Parts", [["hi", r.lookup("Int64")], ["lo", r.lookup("Uint64")]]), r.struct("UInt256Parts", [["hiHi", r.lookup("Uint64")], ["hiLo", r.lookup("Uint64")], ["loHi", r.lookup("Uint64")], ["loLo", r.lookup("Uint64")]]), r.struct("Int256Parts", [["hiHi", r.lookup("Int64")], ["hiLo", r.lookup("Uint64")], ["loHi", r.lookup("Uint64")], ["loLo", r.lookup("Uint64")]]), r.enum("ContractExecutableType", { contractExecutableWasm: 0, contractExecutableStellarAsset: 1 }), r.union("ContractExecutable", { switchOn: r.lookup("ContractExecutableType"), switchName: "type", switches: [["contractExecutableWasm", "wasmHash"], ["contractExecutableStellarAsset", r.void()]], arms: { wasmHash: r.lookup("Hash") } }), r.enum("ScAddressType", { scAddressTypeAccount: 0, scAddressTypeContract: 1, scAddressTypeMuxedAccount: 2, scAddressTypeClaimableBalance: 3, scAddressTypeLiquidityPool: 4 }), r.struct("MuxedEd25519Account", [["id", r.lookup("Uint64")], ["ed25519", r.lookup("Uint256")]]), r.union("ScAddress", { switchOn: r.lookup("ScAddressType"), switchName: "type", switches: [["scAddressTypeAccount", "accountId"], ["scAddressTypeContract", "contractId"], ["scAddressTypeMuxedAccount", "muxedAccount"], ["scAddressTypeClaimableBalance", "claimableBalanceId"], ["scAddressTypeLiquidityPool", "liquidityPoolId"]], arms: { accountId: r.lookup("AccountId"), contractId: r.lookup("ContractId"), muxedAccount: r.lookup("MuxedEd25519Account"), claimableBalanceId: r.lookup("ClaimableBalanceId"), liquidityPoolId: r.lookup("PoolId") } }), r.const("SCSYMBOL_LIMIT", 32), r.typedef("ScVec", r.varArray(r.lookup("ScVal"), 2147483647)), r.typedef("ScMap", r.varArray(r.lookup("ScMapEntry"), 2147483647)), r.typedef("ScBytes", r.varOpaque()), r.typedef("ScString", r.string()), r.typedef("ScSymbol", r.string(32)), r.struct("ScNonceKey", [["nonce", r.lookup("Int64")]]), r.struct("ScContractInstance", [["executable", r.lookup("ContractExecutable")], ["storage", r.option(r.lookup("ScMap"))]]), r.union("ScVal", { switchOn: r.lookup("ScValType"), switchName: "type", switches: [["scvBool", "b"], ["scvVoid", r.void()], ["scvError", "error"], ["scvU32", "u32"], ["scvI32", "i32"], ["scvU64", "u64"], ["scvI64", "i64"], ["scvTimepoint", "timepoint"], ["scvDuration", "duration"], ["scvU128", "u128"], ["scvI128", "i128"], ["scvU256", "u256"], ["scvI256", "i256"], ["scvBytes", "bytes"], ["scvString", "str"], ["scvSymbol", "sym"], ["scvVec", "vec"], ["scvMap", "map"], ["scvAddress", "address"], ["scvContractInstance", "instance"], ["scvLedgerKeyContractInstance", r.void()], ["scvLedgerKeyNonce", "nonceKey"]], arms: { b: r.bool(), error: r.lookup("ScError"), u32: r.lookup("Uint32"), i32: r.lookup("Int32"), u64: r.lookup("Uint64"), i64: r.lookup("Int64"), timepoint: r.lookup("TimePoint"), duration: r.lookup("Duration"), u128: r.lookup("UInt128Parts"), i128: r.lookup("Int128Parts"), u256: r.lookup("UInt256Parts"), i256: r.lookup("Int256Parts"), bytes: r.lookup("ScBytes"), str: r.lookup("ScString"), sym: r.lookup("ScSymbol"), vec: r.option(r.lookup("ScVec")), map: r.option(r.lookup("ScMap")), address: r.lookup("ScAddress"), instance: r.lookup("ScContractInstance"), nonceKey: r.lookup("ScNonceKey") } }), r.struct("ScMapEntry", [["key", r.lookup("ScVal")], ["val", r.lookup("ScVal")]]), r.enum("ScEnvMetaKind", { scEnvMetaKindInterfaceVersion: 0 }), r.struct("ScEnvMetaEntryInterfaceVersion", [["protocol", r.lookup("Uint32")], ["preRelease", r.lookup("Uint32")]]), r.union("ScEnvMetaEntry", { switchOn: r.lookup("ScEnvMetaKind"), switchName: "kind", switches: [["scEnvMetaKindInterfaceVersion", "interfaceVersion"]], arms: { interfaceVersion: r.lookup("ScEnvMetaEntryInterfaceVersion") } }), r.struct("ScMetaV0", [["key", r.string()], ["val", r.string()]]), r.enum("ScMetaKind", { scMetaV0: 0 }), r.union("ScMetaEntry", { switchOn: r.lookup("ScMetaKind"), switchName: "kind", switches: [["scMetaV0", "v0"]], arms: { v0: r.lookup("ScMetaV0") } }), r.const("SC_SPEC_DOC_LIMIT", 1024), r.enum("ScSpecType", { scSpecTypeVal: 0, scSpecTypeBool: 1, scSpecTypeVoid: 2, scSpecTypeError: 3, scSpecTypeU32: 4, scSpecTypeI32: 5, scSpecTypeU64: 6, scSpecTypeI64: 7, scSpecTypeTimepoint: 8, scSpecTypeDuration: 9, scSpecTypeU128: 10, scSpecTypeI128: 11, scSpecTypeU256: 12, scSpecTypeI256: 13, scSpecTypeBytes: 14, scSpecTypeString: 16, scSpecTypeSymbol: 17, scSpecTypeAddress: 19, scSpecTypeMuxedAddress: 20, scSpecTypeOption: 1e3, scSpecTypeResult: 1001, scSpecTypeVec: 1002, scSpecTypeMap: 1004, scSpecTypeTuple: 1005, scSpecTypeBytesN: 1006, scSpecTypeUdt: 2e3 }), r.struct("ScSpecTypeOption", [["valueType", r.lookup("ScSpecTypeDef")]]), r.struct("ScSpecTypeResult", [["okType", r.lookup("ScSpecTypeDef")], ["errorType", r.lookup("ScSpecTypeDef")]]), r.struct("ScSpecTypeVec", [["elementType", r.lookup("ScSpecTypeDef")]]), r.struct("ScSpecTypeMap", [["keyType", r.lookup("ScSpecTypeDef")], ["valueType", r.lookup("ScSpecTypeDef")]]), r.struct("ScSpecTypeTuple", [["valueTypes", r.varArray(r.lookup("ScSpecTypeDef"), 12)]]), r.struct("ScSpecTypeBytesN", [["n", r.lookup("Uint32")]]), r.struct("ScSpecTypeUdt", [["name", r.string(60)]]), r.union("ScSpecTypeDef", { switchOn: r.lookup("ScSpecType"), switchName: "type", switches: [["scSpecTypeVal", r.void()], ["scSpecTypeBool", r.void()], ["scSpecTypeVoid", r.void()], ["scSpecTypeError", r.void()], ["scSpecTypeU32", r.void()], ["scSpecTypeI32", r.void()], ["scSpecTypeU64", r.void()], ["scSpecTypeI64", r.void()], ["scSpecTypeTimepoint", r.void()], ["scSpecTypeDuration", r.void()], ["scSpecTypeU128", r.void()], ["scSpecTypeI128", r.void()], ["scSpecTypeU256", r.void()], ["scSpecTypeI256", r.void()], ["scSpecTypeBytes", r.void()], ["scSpecTypeString", r.void()], ["scSpecTypeSymbol", r.void()], ["scSpecTypeAddress", r.void()], ["scSpecTypeMuxedAddress", r.void()], ["scSpecTypeOption", "option"], ["scSpecTypeResult", "result"], ["scSpecTypeVec", "vec"], ["scSpecTypeMap", "map"], ["scSpecTypeTuple", "tuple"], ["scSpecTypeBytesN", "bytesN"], ["scSpecTypeUdt", "udt"]], arms: { option: r.lookup("ScSpecTypeOption"), result: r.lookup("ScSpecTypeResult"), vec: r.lookup("ScSpecTypeVec"), map: r.lookup("ScSpecTypeMap"), tuple: r.lookup("ScSpecTypeTuple"), bytesN: r.lookup("ScSpecTypeBytesN"), udt: r.lookup("ScSpecTypeUdt") } }), r.struct("ScSpecUdtStructFieldV0", [["doc", r.string(y)], ["name", r.string(30)], ["type", r.lookup("ScSpecTypeDef")]]), r.struct("ScSpecUdtStructV0", [["doc", r.string(y)], ["lib", r.string(80)], ["name", r.string(60)], ["fields", r.varArray(r.lookup("ScSpecUdtStructFieldV0"), 40)]]), r.struct("ScSpecUdtUnionCaseVoidV0", [["doc", r.string(y)], ["name", r.string(60)]]), r.struct("ScSpecUdtUnionCaseTupleV0", [["doc", r.string(y)], ["name", r.string(60)], ["type", r.varArray(r.lookup("ScSpecTypeDef"), 12)]]), r.enum("ScSpecUdtUnionCaseV0Kind", { scSpecUdtUnionCaseVoidV0: 0, scSpecUdtUnionCaseTupleV0: 1 }), r.union("ScSpecUdtUnionCaseV0", { switchOn: r.lookup("ScSpecUdtUnionCaseV0Kind"), switchName: "kind", switches: [["scSpecUdtUnionCaseVoidV0", "voidCase"], ["scSpecUdtUnionCaseTupleV0", "tupleCase"]], arms: { voidCase: r.lookup("ScSpecUdtUnionCaseVoidV0"), tupleCase: r.lookup("ScSpecUdtUnionCaseTupleV0") } }), r.struct("ScSpecUdtUnionV0", [["doc", r.string(y)], ["lib", r.string(80)], ["name", r.string(60)], ["cases", r.varArray(r.lookup("ScSpecUdtUnionCaseV0"), 50)]]), r.struct("ScSpecUdtEnumCaseV0", [["doc", r.string(y)], ["name", r.string(60)], ["value", r.lookup("Uint32")]]), r.struct("ScSpecUdtEnumV0", [["doc", r.string(y)], ["lib", r.string(80)], ["name", r.string(60)], ["cases", r.varArray(r.lookup("ScSpecUdtEnumCaseV0"), 50)]]), r.struct("ScSpecUdtErrorEnumCaseV0", [["doc", r.string(y)], ["name", r.string(60)], ["value", r.lookup("Uint32")]]), r.struct("ScSpecUdtErrorEnumV0", [["doc", r.string(y)], ["lib", r.string(80)], ["name", r.string(60)], ["cases", r.varArray(r.lookup("ScSpecUdtErrorEnumCaseV0"), 50)]]), r.struct("ScSpecFunctionInputV0", [["doc", r.string(y)], ["name", r.string(30)], ["type", r.lookup("ScSpecTypeDef")]]), r.struct("ScSpecFunctionV0", [["doc", r.string(y)], ["name", r.lookup("ScSymbol")], ["inputs", r.varArray(r.lookup("ScSpecFunctionInputV0"), 10)], ["outputs", r.varArray(r.lookup("ScSpecTypeDef"), 1)]]), r.enum("ScSpecEventParamLocationV0", { scSpecEventParamLocationData: 0, scSpecEventParamLocationTopicList: 1 }), r.struct("ScSpecEventParamV0", [["doc", r.string(y)], ["name", r.string(30)], ["type", r.lookup("ScSpecTypeDef")], ["location", r.lookup("ScSpecEventParamLocationV0")]]), r.enum("ScSpecEventDataFormat", { scSpecEventDataFormatSingleValue: 0, scSpecEventDataFormatVec: 1, scSpecEventDataFormatMap: 2 }), r.struct("ScSpecEventV0", [["doc", r.string(y)], ["lib", r.string(80)], ["name", r.lookup("ScSymbol")], ["prefixTopics", r.varArray(r.lookup("ScSymbol"), 2)], ["params", r.varArray(r.lookup("ScSpecEventParamV0"), 50)], ["dataFormat", r.lookup("ScSpecEventDataFormat")]]), r.enum("ScSpecEntryKind", { scSpecEntryFunctionV0: 0, scSpecEntryUdtStructV0: 1, scSpecEntryUdtUnionV0: 2, scSpecEntryUdtEnumV0: 3, scSpecEntryUdtErrorEnumV0: 4, scSpecEntryEventV0: 5 }), r.union("ScSpecEntry", { switchOn: r.lookup("ScSpecEntryKind"), switchName: "kind", switches: [["scSpecEntryFunctionV0", "functionV0"], ["scSpecEntryUdtStructV0", "udtStructV0"], ["scSpecEntryUdtUnionV0", "udtUnionV0"], ["scSpecEntryUdtEnumV0", "udtEnumV0"], ["scSpecEntryUdtErrorEnumV0", "udtErrorEnumV0"], ["scSpecEntryEventV0", "eventV0"]], arms: { functionV0: r.lookup("ScSpecFunctionV0"), udtStructV0: r.lookup("ScSpecUdtStructV0"), udtUnionV0: r.lookup("ScSpecUdtUnionV0"), udtEnumV0: r.lookup("ScSpecUdtEnumV0"), udtErrorEnumV0: r.lookup("ScSpecUdtErrorEnumV0"), eventV0: r.lookup("ScSpecEventV0") } }), r.struct("ConfigSettingContractExecutionLanesV0", [["ledgerMaxTxCount", r.lookup("Uint32")]]), r.struct("ConfigSettingContractComputeV0", [["ledgerMaxInstructions", r.lookup("Int64")], ["txMaxInstructions", r.lookup("Int64")], ["feeRatePerInstructionsIncrement", r.lookup("Int64")], ["txMemoryLimit", r.lookup("Uint32")]]), r.struct("ConfigSettingContractParallelComputeV0", [["ledgerMaxDependentTxClusters", r.lookup("Uint32")]]), r.struct("ConfigSettingContractLedgerCostV0", [["ledgerMaxDiskReadEntries", r.lookup("Uint32")], ["ledgerMaxDiskReadBytes", r.lookup("Uint32")], ["ledgerMaxWriteLedgerEntries", r.lookup("Uint32")], ["ledgerMaxWriteBytes", r.lookup("Uint32")], ["txMaxDiskReadEntries", r.lookup("Uint32")], ["txMaxDiskReadBytes", r.lookup("Uint32")], ["txMaxWriteLedgerEntries", r.lookup("Uint32")], ["txMaxWriteBytes", r.lookup("Uint32")], ["feeDiskReadLedgerEntry", r.lookup("Int64")], ["feeWriteLedgerEntry", r.lookup("Int64")], ["feeDiskRead1Kb", r.lookup("Int64")], ["sorobanStateTargetSizeBytes", r.lookup("Int64")], ["rentFee1KbSorobanStateSizeLow", r.lookup("Int64")], ["rentFee1KbSorobanStateSizeHigh", r.lookup("Int64")], ["sorobanStateRentFeeGrowthFactor", r.lookup("Uint32")]]), r.struct("ConfigSettingContractLedgerCostExtV0", [["txMaxFootprintEntries", r.lookup("Uint32")], ["feeWrite1Kb", r.lookup("Int64")]]), r.struct("ConfigSettingContractHistoricalDataV0", [["feeHistorical1Kb", r.lookup("Int64")]]), r.struct("ConfigSettingContractEventsV0", [["txMaxContractEventsSizeBytes", r.lookup("Uint32")], ["feeContractEvents1Kb", r.lookup("Int64")]]), r.struct("ConfigSettingContractBandwidthV0", [["ledgerMaxTxsSizeBytes", r.lookup("Uint32")], ["txMaxSizeBytes", r.lookup("Uint32")], ["feeTxSize1Kb", r.lookup("Int64")]]), r.enum("ContractCostType", { wasmInsnExec: 0, memAlloc: 1, memCpy: 2, memCmp: 3, dispatchHostFunction: 4, visitObject: 5, valSer: 6, valDeser: 7, computeSha256Hash: 8, computeEd25519PubKey: 9, verifyEd25519Sig: 10, vmInstantiation: 11, vmCachedInstantiation: 12, invokeVmFunction: 13, computeKeccak256Hash: 14, decodeEcdsaCurve256Sig: 15, recoverEcdsaSecp256k1Key: 16, int256AddSub: 17, int256Mul: 18, int256Div: 19, int256Pow: 20, int256Shift: 21, chaCha20DrawBytes: 22, parseWasmInstructions: 23, parseWasmFunctions: 24, parseWasmGlobals: 25, parseWasmTableEntries: 26, parseWasmTypes: 27, parseWasmDataSegments: 28, parseWasmElemSegments: 29, parseWasmImports: 30, parseWasmExports: 31, parseWasmDataSegmentBytes: 32, instantiateWasmInstructions: 33, instantiateWasmFunctions: 34, instantiateWasmGlobals: 35, instantiateWasmTableEntries: 36, instantiateWasmTypes: 37, instantiateWasmDataSegments: 38, instantiateWasmElemSegments: 39, instantiateWasmImports: 40, instantiateWasmExports: 41, instantiateWasmDataSegmentBytes: 42, sec1DecodePointUncompressed: 43, verifyEcdsaSecp256r1Sig: 44, bls12381EncodeFp: 45, bls12381DecodeFp: 46, bls12381G1CheckPointOnCurve: 47, bls12381G1CheckPointInSubgroup: 48, bls12381G2CheckPointOnCurve: 49, bls12381G2CheckPointInSubgroup: 50, bls12381G1ProjectiveToAffine: 51, bls12381G2ProjectiveToAffine: 52, bls12381G1Add: 53, bls12381G1Mul: 54, bls12381G1Msm: 55, bls12381MapFpToG1: 56, bls12381HashToG1: 57, bls12381G2Add: 58, bls12381G2Mul: 59, bls12381G2Msm: 60, bls12381MapFp2ToG2: 61, bls12381HashToG2: 62, bls12381Pairing: 63, bls12381FrFromU256: 64, bls12381FrToU256: 65, bls12381FrAddSub: 66, bls12381FrMul: 67, bls12381FrPow: 68, bls12381FrInv: 69 }), r.struct("ContractCostParamEntry", [["ext", r.lookup("ExtensionPoint")], ["constTerm", r.lookup("Int64")], ["linearTerm", r.lookup("Int64")]]), r.struct("StateArchivalSettings", [["maxEntryTtl", r.lookup("Uint32")], ["minTemporaryTtl", r.lookup("Uint32")], ["minPersistentTtl", r.lookup("Uint32")], ["persistentRentRateDenominator", r.lookup("Int64")], ["tempRentRateDenominator", r.lookup("Int64")], ["maxEntriesToArchive", r.lookup("Uint32")], ["liveSorobanStateSizeWindowSampleSize", r.lookup("Uint32")], ["liveSorobanStateSizeWindowSamplePeriod", r.lookup("Uint32")], ["evictionScanSize", r.lookup("Uint32")], ["startingEvictionScanLevel", r.lookup("Uint32")]]), r.struct("EvictionIterator", [["bucketListLevel", r.lookup("Uint32")], ["isCurrBucket", r.bool()], ["bucketFileOffset", r.lookup("Uint64")]]), r.struct("ConfigSettingScpTiming", [["ledgerTargetCloseTimeMilliseconds", r.lookup("Uint32")], ["nominationTimeoutInitialMilliseconds", r.lookup("Uint32")], ["nominationTimeoutIncrementMilliseconds", r.lookup("Uint32")], ["ballotTimeoutInitialMilliseconds", r.lookup("Uint32")], ["ballotTimeoutIncrementMilliseconds", r.lookup("Uint32")]]), r.const("CONTRACT_COST_COUNT_LIMIT", 1024), r.typedef("ContractCostParams", r.varArray(r.lookup("ContractCostParamEntry"), r.lookup("CONTRACT_COST_COUNT_LIMIT"))), r.enum("ConfigSettingId", { configSettingContractMaxSizeBytes: 0, configSettingContractComputeV0: 1, configSettingContractLedgerCostV0: 2, configSettingContractHistoricalDataV0: 3, configSettingContractEventsV0: 4, configSettingContractBandwidthV0: 5, configSettingContractCostParamsCpuInstructions: 6, configSettingContractCostParamsMemoryBytes: 7, configSettingContractDataKeySizeBytes: 8, configSettingContractDataEntrySizeBytes: 9, configSettingStateArchival: 10, configSettingContractExecutionLanes: 11, configSettingLiveSorobanStateSizeWindow: 12, configSettingEvictionIterator: 13, configSettingContractParallelComputeV0: 14, configSettingContractLedgerCostExtV0: 15, configSettingScpTiming: 16 }), r.union("ConfigSettingEntry", { switchOn: r.lookup("ConfigSettingId"), switchName: "configSettingId", switches: [["configSettingContractMaxSizeBytes", "contractMaxSizeBytes"], ["configSettingContractComputeV0", "contractCompute"], ["configSettingContractLedgerCostV0", "contractLedgerCost"], ["configSettingContractHistoricalDataV0", "contractHistoricalData"], ["configSettingContractEventsV0", "contractEvents"], ["configSettingContractBandwidthV0", "contractBandwidth"], ["configSettingContractCostParamsCpuInstructions", "contractCostParamsCpuInsns"], ["configSettingContractCostParamsMemoryBytes", "contractCostParamsMemBytes"], ["configSettingContractDataKeySizeBytes", "contractDataKeySizeBytes"], ["configSettingContractDataEntrySizeBytes", "contractDataEntrySizeBytes"], ["configSettingStateArchival", "stateArchivalSettings"], ["configSettingContractExecutionLanes", "contractExecutionLanes"], ["configSettingLiveSorobanStateSizeWindow", "liveSorobanStateSizeWindow"], ["configSettingEvictionIterator", "evictionIterator"], ["configSettingContractParallelComputeV0", "contractParallelCompute"], ["configSettingContractLedgerCostExtV0", "contractLedgerCostExt"], ["configSettingScpTiming", "contractScpTiming"]], arms: { contractMaxSizeBytes: r.lookup("Uint32"), contractCompute: r.lookup("ConfigSettingContractComputeV0"), contractLedgerCost: r.lookup("ConfigSettingContractLedgerCostV0"), contractHistoricalData: r.lookup("ConfigSettingContractHistoricalDataV0"), contractEvents: r.lookup("ConfigSettingContractEventsV0"), contractBandwidth: r.lookup("ConfigSettingContractBandwidthV0"), contractCostParamsCpuInsns: r.lookup("ContractCostParams"), contractCostParamsMemBytes: r.lookup("ContractCostParams"), contractDataKeySizeBytes: r.lookup("Uint32"), contractDataEntrySizeBytes: r.lookup("Uint32"), stateArchivalSettings: r.lookup("StateArchivalSettings"), contractExecutionLanes: r.lookup("ConfigSettingContractExecutionLanesV0"), liveSorobanStateSizeWindow: r.varArray(r.lookup("Uint64"), 2147483647), evictionIterator: r.lookup("EvictionIterator"), contractParallelCompute: r.lookup("ConfigSettingContractParallelComputeV0"), contractLedgerCostExt: r.lookup("ConfigSettingContractLedgerCostExtV0"), contractScpTiming: r.lookup("ConfigSettingScpTiming") } }), r.struct("LedgerCloseMetaBatch", [["startSequence", r.lookup("Uint32")], ["endSequence", r.lookup("Uint32")], ["ledgerCloseMeta", r.varArray(r.lookup("LedgerCloseMeta"), 2147483647)]]);
        });
        const f = d, p = { XdrWriter: u.XdrWriter, XdrReader: u.XdrReader };
        var g = i(2802);
        function b(r) {
          var y = new g.sha256();
          return y.update(r, "utf8"), y.digest();
        }
        const h = typeof globalThis == "object" && "crypto" in globalThis ? globalThis.crypto : void 0;
        function m(r) {
          return r instanceof Uint8Array || ArrayBuffer.isView(r) && r.constructor.name === "Uint8Array";
        }
        function c(r) {
          if (!Number.isSafeInteger(r) || r < 0) throw new Error("positive integer expected, got " + r);
        }
        function w(r, ...y) {
          if (!m(r)) throw new Error("Uint8Array expected");
          if (y.length > 0 && !y.includes(r.length)) throw new Error("Uint8Array expected of length " + y + ", got length=" + r.length);
        }
        function T(r, y = true) {
          if (r.destroyed) throw new Error("Hash instance has been destroyed");
          if (y && r.finished) throw new Error("Hash#digest() has already been called");
        }
        function P(...r) {
          for (let y = 0; y < r.length; y++) r[y].fill(0);
        }
        function k(r) {
          return new DataView(r.buffer, r.byteOffset, r.byteLength);
        }
        const R = typeof Uint8Array.from([]).toHex == "function" && typeof Uint8Array.fromHex == "function", F = Array.from({ length: 256 }, (r, y) => y.toString(16).padStart(2, "0"));
        function v(r) {
          if (w(r), R) return r.toHex();
          let y = "";
          for (let N = 0; N < r.length; N++) y += F[r[N]];
          return y;
        }
        const U = 48, M = 57, Z = 65, D = 70, V = 97, S = 102;
        function x(r) {
          return r >= U && r <= M ? r - U : r >= Z && r <= D ? r - (Z - 10) : r >= V && r <= S ? r - (V - 10) : void 0;
        }
        function B(r) {
          if (typeof r != "string") throw new Error("hex string expected, got " + typeof r);
          if (R) return Uint8Array.fromHex(r);
          const y = r.length, N = y / 2;
          if (y % 2) throw new Error("hex string expected, got unpadded hex of length " + y);
          const Q = new Uint8Array(N);
          for (let _t = 0, Qt = 0; _t < N; _t++, Qt += 2) {
            const Ce = x(r.charCodeAt(Qt)), Le = x(r.charCodeAt(Qt + 1));
            if (Ce === void 0 || Le === void 0) {
              const Qe = r[Qt] + r[Qt + 1];
              throw new Error('hex string expected, got non-hex character "' + Qe + '" at index ' + Qt);
            }
            Q[_t] = 16 * Ce + Le;
          }
          return Q;
        }
        function W(r) {
          if (typeof r != "string") throw new Error("string expected");
          return new Uint8Array(new TextEncoder().encode(r));
        }
        function lt(r) {
          return typeof r == "string" && (r = W(r)), w(r), r;
        }
        function pt(...r) {
          let y = 0;
          for (let Q = 0; Q < r.length; Q++) {
            const _t = r[Q];
            w(_t), y += _t.length;
          }
          const N = new Uint8Array(y);
          for (let Q = 0, _t = 0; Q < r.length; Q++) {
            const Qt = r[Q];
            N.set(Qt, _t), _t += Qt.length;
          }
          return N;
        }
        class at {
        }
        function rt(r) {
          const y = (Q) => r().update(lt(Q)).digest(), N = r();
          return y.outputLen = N.outputLen, y.blockLen = N.blockLen, y.create = () => r(), y;
        }
        function ot(r = 32) {
          if (h && typeof h.getRandomValues == "function") return h.getRandomValues(new Uint8Array(r));
          if (h && typeof h.randomBytes == "function") return Uint8Array.from(h.randomBytes(r));
          throw new Error("crypto.getRandomValues must be defined");
        }
        class X extends at {
          constructor(y, N, Q, _t) {
            super(), this.finished = false, this.length = 0, this.pos = 0, this.destroyed = false, this.blockLen = y, this.outputLen = N, this.padOffset = Q, this.isLE = _t, this.buffer = new Uint8Array(y), this.view = k(this.buffer);
          }
          update(y) {
            T(this), w(y = lt(y));
            const { view: N, buffer: Q, blockLen: _t } = this, Qt = y.length;
            for (let Ce = 0; Ce < Qt; ) {
              const Le = Math.min(_t - this.pos, Qt - Ce);
              if (Le === _t) {
                const Qe = k(y);
                for (; _t <= Qt - Ce; Ce += _t) this.process(Qe, Ce);
                continue;
              }
              Q.set(y.subarray(Ce, Ce + Le), this.pos), this.pos += Le, Ce += Le, this.pos === _t && (this.process(N, 0), this.pos = 0);
            }
            return this.length += y.length, this.roundClean(), this;
          }
          digestInto(y) {
            T(this), function(re, fe) {
              w(re);
              const Re = fe.outputLen;
              if (re.length < Re) throw new Error("digestInto() expects output buffer of length at least " + Re);
            }(y, this), this.finished = true;
            const { buffer: N, view: Q, blockLen: _t, isLE: Qt } = this;
            let { pos: Ce } = this;
            N[Ce++] = 128, P(this.buffer.subarray(Ce)), this.padOffset > _t - Ce && (this.process(Q, 0), Ce = 0);
            for (let re = Ce; re < _t; re++) N[re] = 0;
            (function(re, fe, Re, Te) {
              if (typeof re.setBigUint64 == "function") return re.setBigUint64(fe, Re, Te);
              const Fe = BigInt(32), Xe = BigInt(4294967295), Ne = Number(Re >> Fe & Xe), Be = Number(Re & Xe), Ue = Te ? 4 : 0, He = Te ? 0 : 4;
              re.setUint32(fe + Ue, Ne, Te), re.setUint32(fe + He, Be, Te);
            })(Q, _t - 8, BigInt(8 * this.length), Qt), this.process(Q, 0);
            const Le = k(y), Qe = this.outputLen;
            if (Qe % 4) throw new Error("_sha2: outputLen should be aligned to 32bit");
            const Sr = Qe / 4, Kt = this.get();
            if (Sr > Kt.length) throw new Error("_sha2: outputLen bigger than state");
            for (let re = 0; re < Sr; re++) Le.setUint32(4 * re, Kt[re], Qt);
          }
          digest() {
            const { buffer: y, outputLen: N } = this;
            this.digestInto(y);
            const Q = y.slice(0, N);
            return this.destroy(), Q;
          }
          _cloneInto(y) {
            y || (y = new this.constructor()), y.set(...this.get());
            const { blockLen: N, buffer: Q, length: _t, finished: Qt, destroyed: Ce, pos: Le } = this;
            return y.destroyed = Ce, y.finished = Qt, y.length = _t, y.pos = Le, _t % N && y.buffer.set(Q), y;
          }
          clone() {
            return this._cloneInto();
          }
        }
        const I = Uint32Array.from([1779033703, 4089235720, 3144134277, 2227873595, 1013904242, 4271175723, 2773480762, 1595750129, 1359893119, 2917565137, 2600822924, 725511199, 528734635, 4215389547, 1541459225, 327033209]), nt = BigInt(2 ** 32 - 1), ft = BigInt(32);
        function dt(r, y = false) {
          return y ? { h: Number(r & nt), l: Number(r >> ft & nt) } : { h: 0 | Number(r >> ft & nt), l: 0 | Number(r & nt) };
        }
        function Lt(r, y = false) {
          const N = r.length;
          let Q = new Uint32Array(N), _t = new Uint32Array(N);
          for (let Qt = 0; Qt < N; Qt++) {
            const { h: Ce, l: Le } = dt(r[Qt], y);
            [Q[Qt], _t[Qt]] = [Ce, Le];
          }
          return [Q, _t];
        }
        const $ = (r, y, N) => r >>> N, it = (r, y, N) => r << 32 - N | y >>> N, mt = (r, y, N) => r >>> N | y << 32 - N, Ot = (r, y, N) => r << 32 - N | y >>> N, bt = (r, y, N) => r << 64 - N | y >>> N - 32, xt = (r, y, N) => r >>> N - 32 | y << 64 - N;
        function Ct(r, y, N, Q) {
          const _t = (y >>> 0) + (Q >>> 0);
          return { h: r + N + (_t / 4294967296 | 0) | 0, l: 0 | _t };
        }
        const Tt = (r, y, N) => (r >>> 0) + (y >>> 0) + (N >>> 0), Bt = (r, y, N, Q) => y + N + Q + (r / 2 ** 32 | 0) | 0, At = (r, y, N, Q) => (r >>> 0) + (y >>> 0) + (N >>> 0) + (Q >>> 0), Ut = (r, y, N, Q, _t) => y + N + Q + _t + (r / 2 ** 32 | 0) | 0, Vt = (r, y, N, Q, _t) => (r >>> 0) + (y >>> 0) + (N >>> 0) + (Q >>> 0) + (_t >>> 0), oe = (r, y, N, Q, _t, Qt) => y + N + Q + _t + Qt + (r / 2 ** 32 | 0) | 0, te = Lt(["0x428a2f98d728ae22", "0x7137449123ef65cd", "0xb5c0fbcfec4d3b2f", "0xe9b5dba58189dbbc", "0x3956c25bf348b538", "0x59f111f1b605d019", "0x923f82a4af194f9b", "0xab1c5ed5da6d8118", "0xd807aa98a3030242", "0x12835b0145706fbe", "0x243185be4ee4b28c", "0x550c7dc3d5ffb4e2", "0x72be5d74f27b896f", "0x80deb1fe3b1696b1", "0x9bdc06a725c71235", "0xc19bf174cf692694", "0xe49b69c19ef14ad2", "0xefbe4786384f25e3", "0x0fc19dc68b8cd5b5", "0x240ca1cc77ac9c65", "0x2de92c6f592b0275", "0x4a7484aa6ea6e483", "0x5cb0a9dcbd41fbd4", "0x76f988da831153b5", "0x983e5152ee66dfab", "0xa831c66d2db43210", "0xb00327c898fb213f", "0xbf597fc7beef0ee4", "0xc6e00bf33da88fc2", "0xd5a79147930aa725", "0x06ca6351e003826f", "0x142929670a0e6e70", "0x27b70a8546d22ffc", "0x2e1b21385c26c926", "0x4d2c6dfc5ac42aed", "0x53380d139d95b3df", "0x650a73548baf63de", "0x766a0abb3c77b2a8", "0x81c2c92e47edaee6", "0x92722c851482353b", "0xa2bfe8a14cf10364", "0xa81a664bbc423001", "0xc24b8b70d0f89791", "0xc76c51a30654be30", "0xd192e819d6ef5218", "0xd69906245565a910", "0xf40e35855771202a", "0x106aa07032bbd1b8", "0x19a4c116b8d2d0c8", "0x1e376c085141ab53", "0x2748774cdf8eeb99", "0x34b0bcb5e19b48a8", "0x391c0cb3c5c95a63", "0x4ed8aa4ae3418acb", "0x5b9cca4f7763e373", "0x682e6ff3d6b2b8a3", "0x748f82ee5defb2fc", "0x78a5636f43172f60", "0x84c87814a1f0ab72", "0x8cc702081a6439ec", "0x90befffa23631e28", "0xa4506cebde82bde9", "0xbef9a3f7b2c67915", "0xc67178f2e372532b", "0xca273eceea26619c", "0xd186b8c721c0c207", "0xeada7dd6cde0eb1e", "0xf57d4f7fee6ed178", "0x06f067aa72176fba", "0x0a637dc5a2c898a6", "0x113f9804bef90dae", "0x1b710b35131c471b", "0x28db77f523047d84", "0x32caab7b40c72493", "0x3c9ebe0a15c9bebc", "0x431d67c49c100d4c", "0x4cc5d4becb3e42b6", "0x597f299cfc657e2a", "0x5fcb6fab3ad6faec", "0x6c44198c4a475817"].map((r) => BigInt(r))), yt = te[0], Mt = te[1], O = new Uint32Array(80), z = new Uint32Array(80);
        class J extends X {
          constructor(y = 64) {
            super(128, y, 16, false), this.Ah = 0 | I[0], this.Al = 0 | I[1], this.Bh = 0 | I[2], this.Bl = 0 | I[3], this.Ch = 0 | I[4], this.Cl = 0 | I[5], this.Dh = 0 | I[6], this.Dl = 0 | I[7], this.Eh = 0 | I[8], this.El = 0 | I[9], this.Fh = 0 | I[10], this.Fl = 0 | I[11], this.Gh = 0 | I[12], this.Gl = 0 | I[13], this.Hh = 0 | I[14], this.Hl = 0 | I[15];
          }
          get() {
            const { Ah: y, Al: N, Bh: Q, Bl: _t, Ch: Qt, Cl: Ce, Dh: Le, Dl: Qe, Eh: Sr, El: Kt, Fh: re, Fl: fe, Gh: Re, Gl: Te, Hh: Fe, Hl: Xe } = this;
            return [y, N, Q, _t, Qt, Ce, Le, Qe, Sr, Kt, re, fe, Re, Te, Fe, Xe];
          }
          set(y, N, Q, _t, Qt, Ce, Le, Qe, Sr, Kt, re, fe, Re, Te, Fe, Xe) {
            this.Ah = 0 | y, this.Al = 0 | N, this.Bh = 0 | Q, this.Bl = 0 | _t, this.Ch = 0 | Qt, this.Cl = 0 | Ce, this.Dh = 0 | Le, this.Dl = 0 | Qe, this.Eh = 0 | Sr, this.El = 0 | Kt, this.Fh = 0 | re, this.Fl = 0 | fe, this.Gh = 0 | Re, this.Gl = 0 | Te, this.Hh = 0 | Fe, this.Hl = 0 | Xe;
          }
          process(y, N) {
            for (let Ue = 0; Ue < 16; Ue++, N += 4) O[Ue] = y.getUint32(N), z[Ue] = y.getUint32(N += 4);
            for (let Ue = 16; Ue < 80; Ue++) {
              const He = 0 | O[Ue - 15], qr = 0 | z[Ue - 15], rn = mt(He, qr, 1) ^ mt(He, qr, 8) ^ $(He, 0, 7), nn = Ot(He, qr, 1) ^ Ot(He, qr, 8) ^ it(He, qr, 7), hn = 0 | O[Ue - 2], zn = 0 | z[Ue - 2], Jr = mt(hn, zn, 19) ^ bt(hn, zn, 61) ^ $(hn, 0, 6), ro = Ot(hn, zn, 19) ^ xt(hn, zn, 61) ^ it(hn, zn, 6), io = At(nn, ro, z[Ue - 7], z[Ue - 16]), Uo = Ut(io, rn, Jr, O[Ue - 7], O[Ue - 16]);
              O[Ue] = 0 | Uo, z[Ue] = 0 | io;
            }
            let { Ah: Q, Al: _t, Bh: Qt, Bl: Ce, Ch: Le, Cl: Qe, Dh: Sr, Dl: Kt, Eh: re, El: fe, Fh: Re, Fl: Te, Gh: Fe, Gl: Xe, Hh: Ne, Hl: Be } = this;
            for (let Ue = 0; Ue < 80; Ue++) {
              const He = mt(re, fe, 14) ^ mt(re, fe, 18) ^ bt(re, fe, 41), qr = Ot(re, fe, 14) ^ Ot(re, fe, 18) ^ xt(re, fe, 41), rn = re & Re ^ ~re & Fe, nn = Vt(Be, qr, fe & Te ^ ~fe & Xe, Mt[Ue], z[Ue]), hn = oe(nn, Ne, He, rn, yt[Ue], O[Ue]), zn = 0 | nn, Jr = mt(Q, _t, 28) ^ bt(Q, _t, 34) ^ bt(Q, _t, 39), ro = Ot(Q, _t, 28) ^ xt(Q, _t, 34) ^ xt(Q, _t, 39), io = Q & Qt ^ Q & Le ^ Qt & Le, Uo = _t & Ce ^ _t & Qe ^ Ce & Qe;
              Ne = 0 | Fe, Be = 0 | Xe, Fe = 0 | Re, Xe = 0 | Te, Re = 0 | re, Te = 0 | fe, { h: re, l: fe } = Ct(0 | Sr, 0 | Kt, 0 | hn, 0 | zn), Sr = 0 | Le, Kt = 0 | Qe, Le = 0 | Qt, Qe = 0 | Ce, Qt = 0 | Q, Ce = 0 | _t;
              const Mo = Tt(zn, ro, Uo);
              Q = Bt(Mo, hn, Jr, io), _t = 0 | Mo;
            }
            ({ h: Q, l: _t } = Ct(0 | this.Ah, 0 | this.Al, 0 | Q, 0 | _t)), { h: Qt, l: Ce } = Ct(0 | this.Bh, 0 | this.Bl, 0 | Qt, 0 | Ce), { h: Le, l: Qe } = Ct(0 | this.Ch, 0 | this.Cl, 0 | Le, 0 | Qe), { h: Sr, l: Kt } = Ct(0 | this.Dh, 0 | this.Dl, 0 | Sr, 0 | Kt), { h: re, l: fe } = Ct(0 | this.Eh, 0 | this.El, 0 | re, 0 | fe), { h: Re, l: Te } = Ct(0 | this.Fh, 0 | this.Fl, 0 | Re, 0 | Te), { h: Fe, l: Xe } = Ct(0 | this.Gh, 0 | this.Gl, 0 | Fe, 0 | Xe), { h: Ne, l: Be } = Ct(0 | this.Hh, 0 | this.Hl, 0 | Ne, 0 | Be), this.set(Q, _t, Qt, Ce, Le, Qe, Sr, Kt, re, fe, Re, Te, Fe, Xe, Ne, Be);
          }
          roundClean() {
            P(O, z);
          }
          destroy() {
            P(this.buffer), this.set(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0);
          }
        }
        const tt = rt(() => new J()), H = BigInt(0), K = BigInt(1);
        function q(r, y) {
          if (typeof y != "boolean") throw new Error(r + " boolean expected, got " + y);
        }
        function _(r) {
          if (typeof r != "string") throw new Error("hex string expected, got " + typeof r);
          return r === "" ? H : BigInt("0x" + r);
        }
        function L(r) {
          return w(r), _(v(Uint8Array.from(r).reverse()));
        }
        function et(r, y) {
          return B(r.toString(16).padStart(2 * y, "0"));
        }
        function St(r, y) {
          return et(r, y).reverse();
        }
        function kt(r, y, N) {
          let Q;
          if (typeof y == "string") try {
            Q = B(y);
          } catch (Qt) {
            throw new Error(r + " must be hex string or Uint8Array, cause: " + Qt);
          }
          else {
            if (!m(y)) throw new Error(r + " must be hex string or Uint8Array");
            Q = Uint8Array.from(y);
          }
          const _t = Q.length;
          if (typeof N == "number" && _t !== N) throw new Error(r + " of length " + N + " expected, got " + _t);
          return Q;
        }
        const ct = (r) => typeof r == "bigint" && H <= r;
        function j(r, y, N, Q) {
          if (!function(_t, Qt, Ce) {
            return ct(_t) && ct(Qt) && ct(Ce) && Qt <= _t && _t < Ce;
          }(y, N, Q)) throw new Error("expected valid " + r + ": " + N + " <= n < " + Q + ", got " + y);
        }
        const ut = (r) => (K << BigInt(r)) - K;
        function gt(r, y, N = {}) {
          if (!r || typeof r != "object") throw new Error("expected valid options object");
          function Q(_t, Qt, Ce) {
            const Le = r[_t];
            if (Ce && Le === void 0) return;
            const Qe = typeof Le;
            if (Qe !== Qt || Le === null) throw new Error(`param "${_t}" is invalid: expected ${Qt}, got ${Qe}`);
          }
          Object.entries(y).forEach(([_t, Qt]) => Q(_t, Qt, false)), Object.entries(N).forEach(([_t, Qt]) => Q(_t, Qt, true));
        }
        function $t(r) {
          const y = /* @__PURE__ */ new WeakMap();
          return (N, ...Q) => {
            const _t = y.get(N);
            if (_t !== void 0) return _t;
            const Qt = r(N, ...Q);
            return y.set(N, Qt), Qt;
          };
        }
        const Ht = BigInt(0), wt = BigInt(1), Jt = BigInt(2), Ee = BigInt(3), cr = BigInt(4), Lr = BigInt(5), on = BigInt(8);
        function Zr(r, y) {
          const N = r % y;
          return N >= Ht ? N : y + N;
        }
        function to(r, y, N) {
          let Q = r;
          for (; y-- > Ht; ) Q *= Q, Q %= N;
          return Q;
        }
        function qn(r, y) {
          if (r === Ht) throw new Error("invert: expected non-zero number");
          if (y <= Ht) throw new Error("invert: expected positive modulus, got " + y);
          let N = Zr(r, y), Q = y, _t = Ht, Qt = wt;
          for (; N !== Ht; ) {
            const Ce = Q / N, Le = Q % N, Qe = _t - Qt * Ce;
            Q = N, N = Le, _t = Qt, Qt = Qe;
          }
          if (Q !== wt) throw new Error("invert: does not exist");
          return Zr(_t, y);
        }
        function jn(r, y) {
          const N = (r.ORDER + wt) / cr, Q = r.pow(y, N);
          if (!r.eql(r.sqr(Q), y)) throw new Error("Cannot find square root");
          return Q;
        }
        function eo(r, y) {
          const N = (r.ORDER - Lr) / on, Q = r.mul(y, Jt), _t = r.pow(Q, N), Qt = r.mul(y, _t), Ce = r.mul(r.mul(Qt, Jt), _t), Le = r.mul(Qt, r.sub(Ce, r.ONE));
          if (!r.eql(r.sqr(Le), y)) throw new Error("Cannot find square root");
          return Le;
        }
        function no(r) {
          return r % cr === Ee ? jn : r % on === Lr ? eo : function(y) {
            if (y < BigInt(3)) throw new Error("sqrt is not defined for small field");
            let N = y - wt, Q = 0;
            for (; N % Jt === Ht; ) N /= Jt, Q++;
            let _t = Jt;
            const Qt = Ir(y);
            for (; Tr(Qt, _t) === 1; ) if (_t++ > 1e3) throw new Error("Cannot find square root: probably non-prime P");
            if (Q === 1) return jn;
            let Ce = Qt.pow(_t, N);
            const Le = (N + wt) / Jt;
            return function(Qe, Sr) {
              if (Qe.is0(Sr)) return Sr;
              if (Tr(Qe, Sr) !== 1) throw new Error("Cannot find square root");
              let Kt = Q, re = Qe.mul(Qe.ONE, Ce), fe = Qe.pow(Sr, N), Re = Qe.pow(Sr, Le);
              for (; !Qe.eql(fe, Qe.ONE); ) {
                if (Qe.is0(fe)) return Qe.ZERO;
                let Te = 1, Fe = Qe.sqr(fe);
                for (; !Qe.eql(Fe, Qe.ONE); ) if (Te++, Fe = Qe.sqr(Fe), Te === Kt) throw new Error("Cannot find square root");
                const Xe = wt << BigInt(Kt - Te - 1), Ne = Qe.pow(re, Xe);
                Kt = Te, re = Qe.sqr(Ne), fe = Qe.mul(fe, re), Re = Qe.mul(Re, Ne);
              }
              return Re;
            };
          }(r);
        }
        const Dn = ["create", "isValid", "is0", "neg", "inv", "sqrt", "sqr", "eql", "add", "sub", "mul", "pow", "div", "addN", "subN", "mulN", "sqrN"];
        function se(r, y, N) {
          if (N < Ht) throw new Error("invalid exponent, negatives unsupported");
          if (N === Ht) return r.ONE;
          if (N === wt) return y;
          let Q = r.ONE, _t = y;
          for (; N > Ht; ) N & wt && (Q = r.mul(Q, _t)), _t = r.sqr(_t), N >>= wt;
          return Q;
        }
        function rr(r, y, N = false) {
          const Q = new Array(y.length).fill(N ? r.ZERO : void 0), _t = y.reduce((Ce, Le, Qe) => r.is0(Le) ? Ce : (Q[Qe] = Ce, r.mul(Ce, Le)), r.ONE), Qt = r.inv(_t);
          return y.reduceRight((Ce, Le, Qe) => r.is0(Le) ? Ce : (Q[Qe] = r.mul(Ce, Q[Qe]), r.mul(Ce, Le)), Qt), Q;
        }
        function Tr(r, y) {
          const N = (r.ORDER - wt) / Jt, Q = r.pow(y, N), _t = r.eql(Q, r.ONE), Qt = r.eql(Q, r.ZERO), Ce = r.eql(Q, r.neg(r.ONE));
          if (!_t && !Qt && !Ce) throw new Error("invalid Legendre symbol result");
          return _t ? 1 : Qt ? 0 : -1;
        }
        function mr(r, y) {
          y !== void 0 && c(y);
          const N = y !== void 0 ? y : r.toString(2).length;
          return { nBitLength: N, nByteLength: Math.ceil(N / 8) };
        }
        function Ir(r, y, N = false, Q = {}) {
          if (r <= Ht) throw new Error("invalid field: expected ORDER > 0, got " + r);
          let _t, Qt;
          if (typeof y == "object" && y != null) {
            if (Q.sqrt || N) throw new Error("cannot specify opts in two arguments");
            const Kt = y;
            Kt.BITS && (_t = Kt.BITS), Kt.sqrt && (Qt = Kt.sqrt), typeof Kt.isLE == "boolean" && (N = Kt.isLE);
          } else typeof y == "number" && (_t = y), Q.sqrt && (Qt = Q.sqrt);
          const { nBitLength: Ce, nByteLength: Le } = mr(r, _t);
          if (Le > 2048) throw new Error("invalid field: expected ORDER of <= 2048 bytes");
          let Qe;
          const Sr = Object.freeze({ ORDER: r, isLE: N, BITS: Ce, BYTES: Le, MASK: ut(Ce), ZERO: Ht, ONE: wt, create: (Kt) => Zr(Kt, r), isValid: (Kt) => {
            if (typeof Kt != "bigint") throw new Error("invalid field element: expected bigint, got " + typeof Kt);
            return Ht <= Kt && Kt < r;
          }, is0: (Kt) => Kt === Ht, isValidNot0: (Kt) => !Sr.is0(Kt) && Sr.isValid(Kt), isOdd: (Kt) => (Kt & wt) === wt, neg: (Kt) => Zr(-Kt, r), eql: (Kt, re) => Kt === re, sqr: (Kt) => Zr(Kt * Kt, r), add: (Kt, re) => Zr(Kt + re, r), sub: (Kt, re) => Zr(Kt - re, r), mul: (Kt, re) => Zr(Kt * re, r), pow: (Kt, re) => se(Sr, Kt, re), div: (Kt, re) => Zr(Kt * qn(re, r), r), sqrN: (Kt) => Kt * Kt, addN: (Kt, re) => Kt + re, subN: (Kt, re) => Kt - re, mulN: (Kt, re) => Kt * re, inv: (Kt) => qn(Kt, r), sqrt: Qt || ((Kt) => (Qe || (Qe = no(r)), Qe(Sr, Kt))), toBytes: (Kt) => N ? St(Kt, Le) : et(Kt, Le), fromBytes: (Kt) => {
            if (Kt.length !== Le) throw new Error("Field.fromBytes: expected " + Le + " bytes, got " + Kt.length);
            return N ? L(Kt) : function(re) {
              return _(v(re));
            }(Kt);
          }, invertBatch: (Kt) => rr(Sr, Kt), cmov: (Kt, re, fe) => fe ? re : Kt });
          return Object.freeze(Sr);
        }
        const En = BigInt(0), An = BigInt(1);
        function _n(r, y) {
          const N = y.negate();
          return r ? N : y;
        }
        function Nn(r, y) {
          if (!Number.isSafeInteger(r) || r <= 0 || r > y) throw new Error("invalid window size, expected [1.." + y + "], got W=" + r);
        }
        function Zn(r, y) {
          Nn(r, y);
          const N = 2 ** r;
          return { windows: Math.ceil(y / r) + 1, windowSize: 2 ** (r - 1), mask: ut(r), maxNumber: N, shiftBy: BigInt(r) };
        }
        function Jn(r, y, N) {
          const { windowSize: Q, mask: _t, maxNumber: Qt, shiftBy: Ce } = N;
          let Le = Number(r & _t), Qe = r >> Ce;
          Le > Q && (Le -= Qt, Qe += An);
          const Sr = y * Q;
          return { nextN: Qe, offset: Sr + Math.abs(Le) - 1, isZero: Le === 0, isNeg: Le < 0, isNegF: y % 2 != 0, offsetF: Sr };
        }
        function Hn(r, y) {
          if (!Array.isArray(r)) throw new Error("array expected");
          r.forEach((N, Q) => {
            if (!(N instanceof y)) throw new Error("invalid point at index " + Q);
          });
        }
        function uo(r, y) {
          if (!Array.isArray(r)) throw new Error("array of scalars expected");
          r.forEach((N, Q) => {
            if (!y.isValid(N)) throw new Error("invalid scalar at index " + Q);
          });
        }
        const Oo = /* @__PURE__ */ new WeakMap(), jo = /* @__PURE__ */ new WeakMap();
        function Bo(r) {
          return jo.get(r) || 1;
        }
        function Po(r) {
          if (r !== En) throw new Error("invalid wNAF");
        }
        function yo(r, y, N, Q) {
          Hn(N, r), uo(Q, y);
          const _t = N.length, Qt = Q.length;
          if (_t !== Qt) throw new Error("arrays of points and scalars must have equal length");
          const Ce = r.ZERO, Le = function(fe) {
            let Re;
            for (Re = 0; fe > H; fe >>= K, Re += 1) ;
            return Re;
          }(BigInt(_t));
          let Qe = 1;
          Le > 12 ? Qe = Le - 3 : Le > 4 ? Qe = Le - 2 : Le > 0 && (Qe = 2);
          const Sr = ut(Qe), Kt = new Array(Number(Sr) + 1).fill(Ce);
          let re = Ce;
          for (let fe = Math.floor((y.BITS - 1) / Qe) * Qe; fe >= 0; fe -= Qe) {
            Kt.fill(Ce);
            for (let Te = 0; Te < Qt; Te++) {
              const Fe = Q[Te], Xe = Number(Fe >> BigInt(fe) & Sr);
              Kt[Xe] = Kt[Xe].add(N[Te]);
            }
            let Re = Ce;
            for (let Te = Kt.length - 1, Fe = Ce; Te > 0; Te--) Fe = Fe.add(Kt[Te]), Re = Re.add(Fe);
            if (re = re.add(Re), fe !== 0) for (let Te = 0; Te < Qe; Te++) re = re.double();
          }
          return re;
        }
        function ri(r, y) {
          if (y) {
            if (y.ORDER !== r) throw new Error("Field.ORDER must match order: Fp == p, Fn == n");
            return function(N) {
              gt(N, Dn.reduce((Q, _t) => (Q[_t] = "function", Q), { ORDER: "bigint", MASK: "bigint", BYTES: "number", BITS: "number" }));
            }(y), y;
          }
          return Ir(r);
        }
        const Eo = BigInt(0), Ao = BigInt(1), ti = BigInt(2), li = BigInt(8), pi = { zip215: true };
        function Ho(r, y = {}) {
          const { Fp: N, Fn: Q } = function(Ne, Be, Ue = {}) {
            if (!Be || typeof Be != "object") throw new Error(`expected valid ${Ne} CURVE object`);
            for (const nn of ["p", "n", "h"]) {
              const hn = Be[nn];
              if (!(typeof hn == "bigint" && hn > En)) throw new Error(`CURVE.${nn} must be positive bigint`);
            }
            const He = ri(Be.p, Ue.Fp), qr = ri(Be.n, Ue.Fn), rn = ["Gx", "Gy", "a", "d"];
            for (const nn of rn) if (!He.isValid(Be[nn])) throw new Error(`CURVE.${nn} must be valid field element of CURVE.Fp`);
            return { Fp: He, Fn: qr };
          }("edwards", r, y), { h: _t, n: Qt } = r;
          gt(y, {}, { uvRatio: "function" });
          const Ce = ti << BigInt(8 * Q.BYTES) - Ao, Le = (Ne) => N.create(Ne), Qe = y.uvRatio || ((Ne, Be) => {
            try {
              return { isValid: true, value: N.sqrt(N.div(Ne, Be)) };
            } catch {
              return { isValid: false, value: Eo };
            }
          });
          if (!function(Ne, Be, Ue, He) {
            const qr = Ne.sqr(Ue), rn = Ne.sqr(He), nn = Ne.add(Ne.mul(Be.a, qr), rn), hn = Ne.add(Ne.ONE, Ne.mul(Be.d, Ne.mul(qr, rn)));
            return Ne.eql(nn, hn);
          }(N, r, r.Gx, r.Gy)) throw new Error("bad curve params: generator point");
          function Sr(Ne, Be, Ue = false) {
            return j("coordinate " + Ne, Be, Ue ? Ao : Eo, Ce), Be;
          }
          function Kt(Ne) {
            if (!(Ne instanceof Re)) throw new Error("ExtendedPoint expected");
          }
          const re = $t((Ne, Be) => {
            const { ex: Ue, ey: He, ez: qr } = Ne, rn = Ne.is0();
            Be == null && (Be = rn ? li : N.inv(qr));
            const nn = Le(Ue * Be), hn = Le(He * Be), zn = Le(qr * Be);
            if (rn) return { x: Eo, y: Ao };
            if (zn !== Ao) throw new Error("invZ was invalid");
            return { x: nn, y: hn };
          }), fe = $t((Ne) => {
            const { a: Be, d: Ue } = r;
            if (Ne.is0()) throw new Error("bad point: ZERO");
            const { ex: He, ey: qr, ez: rn, et: nn } = Ne, hn = Le(He * He), zn = Le(qr * qr), Jr = Le(rn * rn), ro = Le(Jr * Jr), io = Le(hn * Be);
            if (Le(Jr * Le(io + zn)) !== Le(ro + Le(Ue * Le(hn * zn)))) throw new Error("bad point: equation left != right (1)");
            if (Le(He * qr) !== Le(rn * nn)) throw new Error("bad point: equation left != right (2)");
            return true;
          });
          class Re {
            constructor(Be, Ue, He, qr) {
              this.ex = Sr("x", Be), this.ey = Sr("y", Ue), this.ez = Sr("z", He, true), this.et = Sr("t", qr), Object.freeze(this);
            }
            get x() {
              return this.toAffine().x;
            }
            get y() {
              return this.toAffine().y;
            }
            static fromAffine(Be) {
              if (Be instanceof Re) throw new Error("extended point not allowed");
              const { x: Ue, y: He } = Be || {};
              return Sr("x", Ue), Sr("y", He), new Re(Ue, He, Ao, Le(Ue * He));
            }
            static normalizeZ(Be) {
              return function(Ue, He, qr) {
                const rn = (hn) => hn.ez, nn = rr(Ue.Fp, qr.map(rn));
                return qr.map((hn, zn) => hn.toAffine(nn[zn])).map(Ue.fromAffine);
              }(Re, "ez", Be);
            }
            static msm(Be, Ue) {
              return yo(Re, Q, Be, Ue);
            }
            _setWindowSize(Be) {
              this.precompute(Be);
            }
            precompute(Be = 8, Ue = true) {
              return Te.setWindowSize(this, Be), Ue || this.multiply(ti), this;
            }
            assertValidity() {
              fe(this);
            }
            equals(Be) {
              Kt(Be);
              const { ex: Ue, ey: He, ez: qr } = this, { ex: rn, ey: nn, ez: hn } = Be, zn = Le(Ue * hn), Jr = Le(rn * qr), ro = Le(He * hn), io = Le(nn * qr);
              return zn === Jr && ro === io;
            }
            is0() {
              return this.equals(Re.ZERO);
            }
            negate() {
              return new Re(Le(-this.ex), this.ey, this.ez, Le(-this.et));
            }
            double() {
              const { a: Be } = r, { ex: Ue, ey: He, ez: qr } = this, rn = Le(Ue * Ue), nn = Le(He * He), hn = Le(ti * Le(qr * qr)), zn = Le(Be * rn), Jr = Ue + He, ro = Le(Le(Jr * Jr) - rn - nn), io = zn + nn, Uo = io - hn, Mo = zn - nn, qo = Le(ro * Uo), xe = Le(io * Mo), ke = Le(ro * Mo), tr = Le(Uo * io);
              return new Re(qo, xe, tr, ke);
            }
            add(Be) {
              Kt(Be);
              const { a: Ue, d: He } = r, { ex: qr, ey: rn, ez: nn, et: hn } = this, { ex: zn, ey: Jr, ez: ro, et: io } = Be, Uo = Le(qr * zn), Mo = Le(rn * Jr), qo = Le(hn * He * io), xe = Le(nn * ro), ke = Le((qr + rn) * (zn + Jr) - Uo - Mo), tr = xe - qo, Mr = xe + qo, ir = Le(Mo - Ue * Uo), pr = Le(ke * tr), Ur = Le(Mr * ir), Pr = Le(ke * ir), Kr = Le(tr * Mr);
              return new Re(pr, Ur, Kr, Pr);
            }
            subtract(Be) {
              return this.add(Be.negate());
            }
            multiply(Be) {
              const Ue = Be;
              j("scalar", Ue, Ao, Qt);
              const { p: He, f: qr } = Te.wNAFCached(this, Ue, Re.normalizeZ);
              return Re.normalizeZ([He, qr])[0];
            }
            multiplyUnsafe(Be, Ue = Re.ZERO) {
              const He = Be;
              return j("scalar", He, Eo, Qt), He === Eo ? Re.ZERO : this.is0() || He === Ao ? this : Te.wNAFCachedUnsafe(this, He, Re.normalizeZ, Ue);
            }
            isSmallOrder() {
              return this.multiplyUnsafe(_t).is0();
            }
            isTorsionFree() {
              return Te.wNAFCachedUnsafe(this, Qt).is0();
            }
            toAffine(Be) {
              return re(this, Be);
            }
            clearCofactor() {
              return _t === Ao ? this : this.multiplyUnsafe(_t);
            }
            static fromBytes(Be, Ue = false) {
              return w(Be), this.fromHex(Be, Ue);
            }
            static fromHex(Be, Ue = false) {
              const { d: He, a: qr } = r, rn = N.BYTES;
              Be = kt("pointHex", Be, rn), q("zip215", Ue);
              const nn = Be.slice(), hn = Be[rn - 1];
              nn[rn - 1] = -129 & hn;
              const zn = L(nn), Jr = Ue ? Ce : N.ORDER;
              j("pointHex.y", zn, Eo, Jr);
              const ro = Le(zn * zn), io = Le(ro - Ao), Uo = Le(He * ro - qr);
              let { isValid: Mo, value: qo } = Qe(io, Uo);
              if (!Mo) throw new Error("Point.fromHex: invalid y coordinate");
              const xe = (qo & Ao) === Ao, ke = !!(128 & hn);
              if (!Ue && qo === Eo && ke) throw new Error("Point.fromHex: x=0 and x_0=1");
              return ke !== xe && (qo = Le(-qo)), Re.fromAffine({ x: qo, y: zn });
            }
            static fromPrivateScalar(Be) {
              return Re.BASE.multiply(Be);
            }
            toBytes() {
              const { x: Be, y: Ue } = this.toAffine(), He = St(Ue, N.BYTES);
              return He[He.length - 1] |= Be & Ao ? 128 : 0, He;
            }
            toRawBytes() {
              return this.toBytes();
            }
            toHex() {
              return v(this.toBytes());
            }
            toString() {
              return `<Point ${this.is0() ? "ZERO" : this.toHex()}>`;
            }
          }
          Re.BASE = new Re(r.Gx, r.Gy, Ao, Le(r.Gx * r.Gy)), Re.ZERO = new Re(Eo, Ao, Ao, Eo), Re.Fp = N, Re.Fn = Q;
          const Te = (Fe = Re, Xe = 8 * Q.BYTES, { constTimeNegate: _n, hasPrecomputes: (Ne) => Bo(Ne) !== 1, unsafeLadder(Ne, Be, Ue = Fe.ZERO) {
            let He = Ne;
            for (; Be > En; ) Be & An && (Ue = Ue.add(He)), He = He.double(), Be >>= An;
            return Ue;
          }, precomputeWindow(Ne, Be) {
            const { windows: Ue, windowSize: He } = Zn(Be, Xe), qr = [];
            let rn = Ne, nn = rn;
            for (let hn = 0; hn < Ue; hn++) {
              nn = rn, qr.push(nn);
              for (let zn = 1; zn < He; zn++) nn = nn.add(rn), qr.push(nn);
              rn = nn.double();
            }
            return qr;
          }, wNAF(Ne, Be, Ue) {
            let He = Fe.ZERO, qr = Fe.BASE;
            const rn = Zn(Ne, Xe);
            for (let nn = 0; nn < rn.windows; nn++) {
              const { nextN: hn, offset: zn, isZero: Jr, isNeg: ro, isNegF: io, offsetF: Uo } = Jn(Ue, nn, rn);
              Ue = hn, Jr ? qr = qr.add(_n(io, Be[Uo])) : He = He.add(_n(ro, Be[zn]));
            }
            return Po(Ue), { p: He, f: qr };
          }, wNAFUnsafe(Ne, Be, Ue, He = Fe.ZERO) {
            const qr = Zn(Ne, Xe);
            for (let rn = 0; rn < qr.windows && Ue !== En; rn++) {
              const { nextN: nn, offset: hn, isZero: zn, isNeg: Jr } = Jn(Ue, rn, qr);
              if (Ue = nn, !zn) {
                const ro = Be[hn];
                He = He.add(Jr ? ro.negate() : ro);
              }
            }
            return Po(Ue), He;
          }, getPrecomputes(Ne, Be, Ue) {
            let He = Oo.get(Be);
            return He || (He = this.precomputeWindow(Be, Ne), Ne !== 1 && (typeof Ue == "function" && (He = Ue(He)), Oo.set(Be, He))), He;
          }, wNAFCached(Ne, Be, Ue) {
            const He = Bo(Ne);
            return this.wNAF(He, this.getPrecomputes(He, Ne, Ue), Be);
          }, wNAFCachedUnsafe(Ne, Be, Ue, He) {
            const qr = Bo(Ne);
            return qr === 1 ? this.unsafeLadder(Ne, Be, He) : this.wNAFUnsafe(qr, this.getPrecomputes(qr, Ne, Ue), Be, He);
          }, setWindowSize(Ne, Be) {
            Nn(Be, Xe), jo.set(Ne, Be), Oo.delete(Ne);
          } });
          var Fe, Xe;
          return Re;
        }
        function ai(r, y) {
          gt(y, { hash: "function" }, { adjustScalarBytes: "function", randomBytes: "function", domain: "function", prehash: "function", mapToCurve: "function" });
          const { prehash: N, hash: Q } = y, { BASE: _t, Fp: Qt, Fn: Ce } = r, Le = Ce.ORDER, Qe = y.randomBytes || ot, Sr = y.adjustScalarBytes || ((Xe) => Xe), Kt = y.domain || ((Xe, Ne, Be) => {
            if (q("phflag", Be), Ne.length || Be) throw new Error("Contexts/pre-hash are not supported");
            return Xe;
          });
          function re(Xe) {
            return Ce.create(Xe);
          }
          function fe(Xe) {
            return re(L(Xe));
          }
          function Re(Xe) {
            const { head: Ne, prefix: Be, scalar: Ue } = function(rn) {
              const nn = Qt.BYTES;
              rn = kt("private key", rn, nn);
              const hn = kt("hashed private key", Q(rn), 2 * nn), zn = Sr(hn.slice(0, nn));
              return { head: zn, prefix: hn.slice(nn, 2 * nn), scalar: fe(zn) };
            }(Xe), He = _t.multiply(Ue), qr = He.toBytes();
            return { head: Ne, prefix: Be, scalar: Ue, point: He, pointBytes: qr };
          }
          function Te(Xe = Uint8Array.of(), ...Ne) {
            const Be = pt(...Ne);
            return fe(Q(Kt(Be, kt("context", Xe), !!N)));
          }
          const Fe = pi;
          return _t.precompute(8), { getPublicKey: function(Xe) {
            return Re(Xe).pointBytes;
          }, sign: function(Xe, Ne, Be = {}) {
            Xe = kt("message", Xe), N && (Xe = N(Xe));
            const { prefix: Ue, scalar: He, pointBytes: qr } = Re(Ne), rn = Te(Be.context, Ue, Xe), nn = _t.multiply(rn).toBytes(), hn = re(rn + Te(Be.context, nn, qr, Xe) * He);
            j("signature.s", hn, Eo, Le);
            const zn = Qt.BYTES;
            return kt("result", pt(nn, St(hn, zn)), 2 * zn);
          }, verify: function(Xe, Ne, Be, Ue = Fe) {
            const { context: He, zip215: qr } = Ue, rn = Qt.BYTES;
            Xe = kt("signature", Xe, 2 * rn), Ne = kt("message", Ne), Be = kt("publicKey", Be, rn), qr !== void 0 && q("zip215", qr), N && (Ne = N(Ne));
            const nn = L(Xe.slice(rn, 2 * rn));
            let hn, zn, Jr;
            try {
              hn = r.fromHex(Be, qr), zn = r.fromHex(Xe.slice(0, rn), qr), Jr = _t.multiplyUnsafe(nn);
            } catch {
              return false;
            }
            if (!qr && hn.isSmallOrder()) return false;
            const ro = Te(He, zn.toBytes(), hn.toBytes(), Ne);
            return zn.add(hn.multiplyUnsafe(ro)).subtract(Jr).clearCofactor().is0();
          }, utils: { getExtendedPublicKey: Re, randomPrivateKey: () => Qe(Qt.BYTES), precompute: (Xe = 8, Ne = r.BASE) => Ne.precompute(Xe, false) }, Point: r };
        }
        function hi(r) {
          const { CURVE: y, curveOpts: N, eddsaOpts: Q } = function(_t) {
            const Qt = { a: _t.a, d: _t.d, p: _t.Fp.ORDER, n: _t.n, h: _t.h, Gx: _t.Gx, Gy: _t.Gy };
            return { CURVE: Qt, curveOpts: { Fp: _t.Fp, Fn: Ir(Qt.n, _t.nBitLength, true), uvRatio: _t.uvRatio }, eddsaOpts: { hash: _t.hash, randomBytes: _t.randomBytes, adjustScalarBytes: _t.adjustScalarBytes, domain: _t.domain, prehash: _t.prehash, mapToCurve: _t.mapToCurve } };
          }(r);
          return function(_t, Qt) {
            return Object.assign({}, Qt, { ExtendedPoint: Qt.Point, CURVE: _t });
          }(r, ai(Ho(y, N), Q));
        }
        BigInt(0);
        const Co = BigInt(1), Wo = BigInt(2), qt = (BigInt(3), BigInt(5)), Nt = BigInt(8), he = { p: BigInt("0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffed"), n: BigInt("0x1000000000000000000000000000000014def9dea2f79cd65812631a5cf5d3ed"), h: Nt, a: BigInt("0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffec"), d: BigInt("0x52036cee2b6ffe738cc740797779e89800700a4d4141d8ab75eb4dca135978a3"), Gx: BigInt("0x216936d3cd6e53fec0a4e231fdd6dc5c692cc7609525a7b2c9562d608f25d51a"), Gy: BigInt("0x6666666666666666666666666666666666666666666666666666666666666658") };
        function _e(r) {
          const y = BigInt(10), N = BigInt(20), Q = BigInt(40), _t = BigInt(80), Qt = he.p, Ce = r * r % Qt * r % Qt, Le = to(Ce, Wo, Qt) * Ce % Qt, Qe = to(Le, Co, Qt) * r % Qt, Sr = to(Qe, qt, Qt) * Qe % Qt, Kt = to(Sr, y, Qt) * Sr % Qt, re = to(Kt, N, Qt) * Kt % Qt, fe = to(re, Q, Qt) * re % Qt, Re = to(fe, _t, Qt) * fe % Qt, Te = to(Re, _t, Qt) * fe % Qt, Fe = to(Te, y, Qt) * Sr % Qt;
          return { pow_p_5_8: to(Fe, Wo, Qt) * r % Qt, b2: Ce };
        }
        function Ve(r) {
          return r[0] &= 248, r[31] &= 127, r[31] |= 64, r;
        }
        const qe = BigInt("19681161376707505956807079304988542015446066515923890162744021073123829784752");
        function Ge(r, y) {
          const N = he.p, Q = Zr(y * y * y, N), _t = Zr(Q * Q * y, N);
          let Qt = Zr(r * Q * _e(r * _t).pow_p_5_8, N);
          const Ce = Zr(y * Qt * Qt, N), Le = Qt, Qe = Zr(Qt * qe, N), Sr = Ce === r, Kt = Ce === Zr(-r, N), re = Ce === Zr(-r * qe, N);
          return Sr && (Qt = Le), (Kt || re) && (Qt = Qe), (Zr(Qt, N) & wt) === wt && (Qt = Zr(-Qt, N)), { isValid: Sr || Kt, value: Qt };
        }
        const Je = Ir(he.p, void 0, true), Oe = { ...he, Fp: Je, hash: tt, adjustScalarBytes: Ve, uvRatio: Ge }, lr = hi(Oe);
        var Fr = i(8287).Buffer;
        function Dr(r, y) {
          return Fr.from(lr.sign(Fr.from(r), y));
        }
        function gr(r, y, N) {
          return lr.verify(Fr.from(y), Fr.from(r), Fr.from(N), { zip215: false });
        }
        var an = function(r, y) {
          for (var N = typeof r == "number", Q = String(r); Q.endsWith(y); ) Q = Q.slice(0, -1);
          return N ? Number(Q) : Q;
        }, pn = i(5360), yn = i(8287).Buffer;
        function Rt(r) {
          return Rt = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(y) {
            return typeof y;
          } : function(y) {
            return y && typeof Symbol == "function" && y.constructor === Symbol && y !== Symbol.prototype ? "symbol" : typeof y;
          }, Rt(r);
        }
        function jr(r, y) {
          for (var N = 0; N < y.length; N++) {
            var Q = y[N];
            Q.enumerable = Q.enumerable || false, Q.configurable = true, "value" in Q && (Q.writable = true), Object.defineProperty(r, Ln(Q.key), Q);
          }
        }
        function Ln(r) {
          var y = function(N, Q) {
            if (Rt(N) != "object" || !N) return N;
            var _t = N[Symbol.toPrimitive];
            if (_t !== void 0) {
              var Qt = _t.call(N, Q);
              if (Rt(Qt) != "object") return Qt;
              throw new TypeError("@@toPrimitive must return a primitive value.");
            }
            return (Q === "string" ? String : Number)(N);
          }(r, "string");
          return Rt(y) == "symbol" ? y : y + "";
        }
        var fo, Wt, ue, Zt = { ed25519PublicKey: 48, ed25519SecretSeed: 144, med25519PublicKey: 96, preAuthTx: 152, sha256Hash: 184, signedPayload: 120, contract: 16, liquidityPool: 88, claimableBalance: 8 }, Xt = { G: "ed25519PublicKey", S: "ed25519SecretSeed", M: "med25519PublicKey", T: "preAuthTx", X: "sha256Hash", P: "signedPayload", C: "contract", L: "liquidityPool", B: "claimableBalance" }, pe = function() {
          return r = function Q() {
            (function(_t, Qt) {
              if (!(_t instanceof Qt)) throw new TypeError("Cannot call a class as a function");
            })(this, Q);
          }, N = [{ key: "encodeEd25519PublicKey", value: function(Q) {
            return Me("ed25519PublicKey", Q);
          } }, { key: "decodeEd25519PublicKey", value: function(Q) {
            return je("ed25519PublicKey", Q);
          } }, { key: "isValidEd25519PublicKey", value: function(Q) {
            return $e("ed25519PublicKey", Q);
          } }, { key: "encodeEd25519SecretSeed", value: function(Q) {
            return Me("ed25519SecretSeed", Q);
          } }, { key: "decodeEd25519SecretSeed", value: function(Q) {
            return je("ed25519SecretSeed", Q);
          } }, { key: "isValidEd25519SecretSeed", value: function(Q) {
            return $e("ed25519SecretSeed", Q);
          } }, { key: "encodeMed25519PublicKey", value: function(Q) {
            return Me("med25519PublicKey", Q);
          } }, { key: "decodeMed25519PublicKey", value: function(Q) {
            return je("med25519PublicKey", Q);
          } }, { key: "isValidMed25519PublicKey", value: function(Q) {
            return $e("med25519PublicKey", Q);
          } }, { key: "encodePreAuthTx", value: function(Q) {
            return Me("preAuthTx", Q);
          } }, { key: "decodePreAuthTx", value: function(Q) {
            return je("preAuthTx", Q);
          } }, { key: "encodeSha256Hash", value: function(Q) {
            return Me("sha256Hash", Q);
          } }, { key: "decodeSha256Hash", value: function(Q) {
            return je("sha256Hash", Q);
          } }, { key: "encodeSignedPayload", value: function(Q) {
            return Me("signedPayload", Q);
          } }, { key: "decodeSignedPayload", value: function(Q) {
            return je("signedPayload", Q);
          } }, { key: "isValidSignedPayload", value: function(Q) {
            return $e("signedPayload", Q);
          } }, { key: "encodeContract", value: function(Q) {
            return Me("contract", Q);
          } }, { key: "decodeContract", value: function(Q) {
            return je("contract", Q);
          } }, { key: "isValidContract", value: function(Q) {
            return $e("contract", Q);
          } }, { key: "encodeClaimableBalance", value: function(Q) {
            return Me("claimableBalance", Q);
          } }, { key: "decodeClaimableBalance", value: function(Q) {
            return je("claimableBalance", Q);
          } }, { key: "isValidClaimableBalance", value: function(Q) {
            return $e("claimableBalance", Q);
          } }, { key: "encodeLiquidityPool", value: function(Q) {
            return Me("liquidityPool", Q);
          } }, { key: "decodeLiquidityPool", value: function(Q) {
            return je("liquidityPool", Q);
          } }, { key: "isValidLiquidityPool", value: function(Q) {
            return $e("liquidityPool", Q);
          } }, { key: "getVersionByteForPrefix", value: function(Q) {
            return Xt[Q[0]];
          } }], (y = null) && jr(r.prototype, y), N && jr(r, N), Object.defineProperty(r, "prototype", { writable: false }), r;
          var r, y, N;
        }();
        function $e(r, y) {
          if (typeof y != "string") return false;
          switch (r) {
            case "ed25519PublicKey":
            case "ed25519SecretSeed":
            case "preAuthTx":
            case "sha256Hash":
            case "contract":
            case "liquidityPool":
              if (y.length !== 56) return false;
              break;
            case "claimableBalance":
              if (y.length !== 58) return false;
              break;
            case "med25519PublicKey":
              if (y.length !== 69) return false;
              break;
            case "signedPayload":
              if (y.length < 56 || y.length > 165) return false;
              break;
            default:
              return false;
          }
          var N = "";
          try {
            N = je(r, y);
          } catch {
            return false;
          }
          switch (r) {
            case "ed25519PublicKey":
            case "ed25519SecretSeed":
            case "preAuthTx":
            case "sha256Hash":
            case "contract":
            case "liquidityPool":
              return N.length === 32;
            case "claimableBalance":
              return N.length === 33;
            case "med25519PublicKey":
              return N.length === 40;
            case "signedPayload":
              return N.length >= 40 && N.length <= 100;
            default:
              return false;
          }
        }
        function je(r, y) {
          if (typeof y != "string") throw new TypeError("encoded argument must be of type String");
          var N = pn.decode(y), Q = N[0], _t = N.slice(0, -2), Qt = _t.slice(1), Ce = N.slice(-2);
          if (y !== pn.encode(N)) throw new Error("invalid encoded string");
          var Le = Zt[r];
          if (Le === void 0) throw new Error("".concat(r, " is not a valid version byte name. ") + "Expected one of ".concat(Object.keys(Zt).join(", ")));
          if (Q !== Le) throw new Error("invalid version byte. expected ".concat(Le, ", got ").concat(Q));
          if (!function(Qe, Sr) {
            if (Qe.length !== Sr.length) return false;
            if (Qe.length === 0) return true;
            for (var Kt = 0; Kt < Qe.length; Kt += 1) if (Qe[Kt] !== Sr[Kt]) return false;
            return true;
          }(fr(_t), Ce)) throw new Error("invalid checksum");
          return yn.from(Qt);
        }
        function Me(r, y) {
          if (y == null) throw new Error("cannot encode null data");
          var N = Zt[r];
          if (N === void 0) throw new Error("".concat(r, " is not a valid version byte name. ") + "Expected one of ".concat(Object.keys(Zt).join(", ")));
          y = yn.from(y);
          var Q = yn.from([N]), _t = yn.concat([Q, y]), Qt = yn.from(fr(_t)), Ce = yn.concat([_t, Qt]);
          return pn.encode(Ce);
        }
        function fr(r) {
          for (var y = [0, 4129, 8258, 12387, 16516, 20645, 24774, 28903, 33032, 37161, 41290, 45419, 49548, 53677, 57806, 61935, 4657, 528, 12915, 8786, 21173, 17044, 29431, 25302, 37689, 33560, 45947, 41818, 54205, 50076, 62463, 58334, 9314, 13379, 1056, 5121, 25830, 29895, 17572, 21637, 42346, 46411, 34088, 38153, 58862, 62927, 50604, 54669, 13907, 9842, 5649, 1584, 30423, 26358, 22165, 18100, 46939, 42874, 38681, 34616, 63455, 59390, 55197, 51132, 18628, 22757, 26758, 30887, 2112, 6241, 10242, 14371, 51660, 55789, 59790, 63919, 35144, 39273, 43274, 47403, 23285, 19156, 31415, 27286, 6769, 2640, 14899, 10770, 56317, 52188, 64447, 60318, 39801, 35672, 47931, 43802, 27814, 31879, 19684, 23749, 11298, 15363, 3168, 7233, 60846, 64911, 52716, 56781, 44330, 48395, 36200, 40265, 32407, 28342, 24277, 20212, 15891, 11826, 7761, 3696, 65439, 61374, 57309, 53244, 48923, 44858, 40793, 36728, 37256, 33193, 45514, 41451, 53516, 49453, 61774, 57711, 4224, 161, 12482, 8419, 20484, 16421, 28742, 24679, 33721, 37784, 41979, 46042, 49981, 54044, 58239, 62302, 689, 4752, 8947, 13010, 16949, 21012, 25207, 29270, 46570, 42443, 38312, 34185, 62830, 58703, 54572, 50445, 13538, 9411, 5280, 1153, 29798, 25671, 21540, 17413, 42971, 47098, 34713, 38840, 59231, 63358, 50973, 55100, 9939, 14066, 1681, 5808, 26199, 30326, 17941, 22068, 55628, 51565, 63758, 59695, 39368, 35305, 47498, 43435, 22596, 18533, 30726, 26663, 6336, 2273, 14466, 10403, 52093, 56156, 60223, 64286, 35833, 39896, 43963, 48026, 19061, 23124, 27191, 31254, 2801, 6864, 10931, 14994, 64814, 60687, 56684, 52557, 48554, 44427, 40424, 36297, 31782, 27655, 23652, 19525, 15522, 11395, 7392, 3265, 61215, 65342, 53085, 57212, 44955, 49082, 36825, 40952, 28183, 32310, 20053, 24180, 11923, 16050, 3793, 7920], N = 0, Q = 0; Q < r.length; Q += 1) N = N << 8 ^ y[N >> 8 ^ r[Q]], N &= 65535;
          var _t = new Uint8Array(2);
          return _t[0] = 255 & N, _t[1] = N >> 8 & 255, _t;
        }
        fo = pe, ue = Xt, (Wt = Ln(Wt = "types")) in fo ? Object.defineProperty(fo, Wt, { value: ue, enumerable: true, configurable: true, writable: true }) : fo[Wt] = ue;
        var Nr = i(8287).Buffer;
        function wr(r) {
          return wr = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(y) {
            return typeof y;
          } : function(y) {
            return y && typeof Symbol == "function" && y.constructor === Symbol && y !== Symbol.prototype ? "symbol" : typeof y;
          }, wr(r);
        }
        function Vr(r, y) {
          for (var N = 0; N < y.length; N++) {
            var Q = y[N];
            Q.enumerable = Q.enumerable || false, Q.configurable = true, "value" in Q && (Q.writable = true), Object.defineProperty(r, $r(Q.key), Q);
          }
        }
        function $r(r) {
          var y = function(N, Q) {
            if (wr(N) != "object" || !N) return N;
            var _t = N[Symbol.toPrimitive];
            if (_t !== void 0) {
              var Qt = _t.call(N, Q);
              if (wr(Qt) != "object") return Qt;
              throw new TypeError("@@toPrimitive must return a primitive value.");
            }
            return String(N);
          }(r, "string");
          return wr(y) == "symbol" ? y : y + "";
        }
        var Xr = function() {
          return function(r, y, N) {
            return y && Vr(r.prototype, y), N && Vr(r, N), Object.defineProperty(r, "prototype", { writable: false }), r;
          }(function r(y) {
            if (function(Q, _t) {
              if (!(Q instanceof _t)) throw new TypeError("Cannot call a class as a function");
            }(this, r), y.type !== "ed25519") throw new Error("Invalid keys type");
            if (this.type = y.type, y.secretKey) {
              if (y.secretKey = Nr.from(y.secretKey), y.secretKey.length !== 32) throw new Error("secretKey length is invalid");
              if (this._secretSeed = y.secretKey, this._publicKey = (N = y.secretKey, Fr.from(lr.getPublicKey(N))), this._secretKey = y.secretKey, y.publicKey && !this._publicKey.equals(Nr.from(y.publicKey))) throw new Error("secretKey does not match publicKey");
            } else if (this._publicKey = Nr.from(y.publicKey), this._publicKey.length !== 32) throw new Error("publicKey length is invalid");
            var N;
          }, [{ key: "xdrAccountId", value: function() {
            return new f.AccountId.publicKeyTypeEd25519(this._publicKey);
          } }, { key: "xdrPublicKey", value: function() {
            return new f.PublicKey.publicKeyTypeEd25519(this._publicKey);
          } }, { key: "xdrMuxedAccount", value: function(r) {
            if (r !== void 0) {
              if (typeof r != "string") throw new TypeError("expected string for ID, got ".concat(wr(r)));
              return f.MuxedAccount.keyTypeMuxedEd25519(new f.MuxedAccountMed25519({ id: f.Uint64.fromString(r), ed25519: this._publicKey }));
            }
            return new f.MuxedAccount.keyTypeEd25519(this._publicKey);
          } }, { key: "rawPublicKey", value: function() {
            return this._publicKey;
          } }, { key: "signatureHint", value: function() {
            var r = this.xdrAccountId().toXDR();
            return r.slice(r.length - 4);
          } }, { key: "publicKey", value: function() {
            return pe.encodeEd25519PublicKey(this._publicKey);
          } }, { key: "secret", value: function() {
            if (!this._secretSeed) throw new Error("no secret key available");
            if (this.type === "ed25519") return pe.encodeEd25519SecretSeed(this._secretSeed);
            throw new Error("Invalid Keypair type");
          } }, { key: "rawSecretKey", value: function() {
            return this._secretSeed;
          } }, { key: "canSign", value: function() {
            return !!this._secretKey;
          } }, { key: "sign", value: function(r) {
            if (!this.canSign()) throw new Error("cannot sign: no secret key available");
            return Dr(r, this._secretKey);
          } }, { key: "verify", value: function(r, y) {
            return gr(r, y, this._publicKey);
          } }, { key: "signDecorated", value: function(r) {
            var y = this.sign(r), N = this.signatureHint();
            return new f.DecoratedSignature({ hint: N, signature: y });
          } }, { key: "signPayloadDecorated", value: function(r) {
            var y = this.sign(r), N = this.signatureHint(), Q = Nr.from(r.slice(-4));
            return Q.length < 4 && (Q = Nr.concat([Q, Nr.alloc(4 - r.length, 0)])), new f.DecoratedSignature({ hint: Q.map(function(_t, Qt) {
              return _t ^ N[Qt];
            }), signature: y });
          } }], [{ key: "fromSecret", value: function(r) {
            var y = pe.decodeEd25519SecretSeed(r);
            return this.fromRawEd25519Seed(y);
          } }, { key: "fromRawEd25519Seed", value: function(r) {
            return new this({ type: "ed25519", secretKey: r });
          } }, { key: "master", value: function(r) {
            if (!r) throw new Error("No network selected. Please pass a network argument, e.g. `Keypair.master(Networks.PUBLIC)`.");
            return this.fromRawEd25519Seed(b(r));
          } }, { key: "fromPublicKey", value: function(r) {
            if ((r = pe.decodeEd25519PublicKey(r)).length !== 32) throw new Error("Invalid Stellar public key");
            return new this({ type: "ed25519", publicKey: r });
          } }, { key: "random", value: function() {
            var r = lr.utils.randomPrivateKey();
            return this.fromRawEd25519Seed(r);
          } }]);
        }(), Cn = i(8287).Buffer;
        function sn(r) {
          return sn = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(y) {
            return typeof y;
          } : function(y) {
            return y && typeof Symbol == "function" && y.constructor === Symbol && y !== Symbol.prototype ? "symbol" : typeof y;
          }, sn(r);
        }
        function To(r, y) {
          for (var N = 0; N < y.length; N++) {
            var Q = y[N];
            Q.enumerable = Q.enumerable || false, Q.configurable = true, "value" in Q && (Q.writable = true), Object.defineProperty(r, Ro(Q.key), Q);
          }
        }
        function Ro(r) {
          var y = function(N, Q) {
            if (sn(N) != "object" || !N) return N;
            var _t = N[Symbol.toPrimitive];
            if (_t !== void 0) {
              var Qt = _t.call(N, Q);
              if (sn(Qt) != "object") return Qt;
              throw new TypeError("@@toPrimitive must return a primitive value.");
            }
            return String(N);
          }(r, "string");
          return sn(y) == "symbol" ? y : y + "";
        }
        var Rn = function() {
          function r(y, N) {
            if (function(Q, _t) {
              if (!(Q instanceof _t)) throw new TypeError("Cannot call a class as a function");
            }(this, r), !/^[a-zA-Z0-9]{1,12}$/.test(y)) throw new Error("Asset code is invalid (maximum alphanumeric, 12 characters at max)");
            if (String(y).toLowerCase() !== "xlm" && !N) throw new Error("Issuer cannot be null");
            if (N && !pe.isValidEd25519PublicKey(N)) throw new Error("Issuer is invalid");
            String(y).toLowerCase() === "xlm" ? this.code = "XLM" : this.code = y, this.issuer = N;
          }
          return function(y, N, Q) {
            return N && To(y.prototype, N), Q && To(y, Q), Object.defineProperty(y, "prototype", { writable: false }), y;
          }(r, [{ key: "toXDRObject", value: function() {
            return this._toXDRObject(f.Asset);
          } }, { key: "toChangeTrustXDRObject", value: function() {
            return this._toXDRObject(f.ChangeTrustAsset);
          } }, { key: "toTrustLineXDRObject", value: function() {
            return this._toXDRObject(f.TrustLineAsset);
          } }, { key: "contractId", value: function(y) {
            var N = b(Cn.from(y)), Q = f.HashIdPreimage.envelopeTypeContractId(new f.HashIdPreimageContractId({ networkId: N, contractIdPreimage: f.ContractIdPreimage.contractIdPreimageFromAsset(this.toXDRObject()) }));
            return pe.encodeContract(b(Q.toXDR()));
          } }, { key: "_toXDRObject", value: function() {
            var y, N, Q = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : f.Asset;
            if (this.isNative()) return Q.assetTypeNative();
            this.code.length <= 4 ? (y = f.AlphaNum4, N = "assetTypeCreditAlphanum4") : (y = f.AlphaNum12, N = "assetTypeCreditAlphanum12");
            var _t = this.code.length <= 4 ? 4 : 12;
            return new Q(N, new y({ assetCode: this.code.padEnd(_t, "\0"), issuer: Xr.fromPublicKey(this.issuer).xdrAccountId() }));
          } }, { key: "getCode", value: function() {
            if (this.code !== void 0) return String(this.code);
          } }, { key: "getIssuer", value: function() {
            if (this.issuer !== void 0) return String(this.issuer);
          } }, { key: "getAssetType", value: function() {
            switch (this.getRawAssetType().value) {
              case f.AssetType.assetTypeNative().value:
                return "native";
              case f.AssetType.assetTypeCreditAlphanum4().value:
                return "credit_alphanum4";
              case f.AssetType.assetTypeCreditAlphanum12().value:
                return "credit_alphanum12";
              default:
                return "unknown";
            }
          } }, { key: "getRawAssetType", value: function() {
            return this.isNative() ? f.AssetType.assetTypeNative() : this.code.length <= 4 ? f.AssetType.assetTypeCreditAlphanum4() : f.AssetType.assetTypeCreditAlphanum12();
          } }, { key: "isNative", value: function() {
            return !this.issuer;
          } }, { key: "equals", value: function(y) {
            return this.code === y.getCode() && this.issuer === y.getIssuer();
          } }, { key: "toString", value: function() {
            return this.isNative() ? "native" : "".concat(this.getCode(), ":").concat(this.getIssuer());
          } }], [{ key: "native", value: function() {
            return new r("XLM");
          } }, { key: "fromOperation", value: function(y) {
            var N, Q;
            switch (y.switch()) {
              case f.AssetType.assetTypeNative():
                return this.native();
              case f.AssetType.assetTypeCreditAlphanum4():
                N = y.alphaNum4();
              case f.AssetType.assetTypeCreditAlphanum12():
                return N = N || y.alphaNum12(), Q = pe.encodeEd25519PublicKey(N.issuer().ed25519()), new this(an(N.assetCode(), "\0"), Q);
              default:
                throw new Error("Invalid asset type: ".concat(y.switch().name));
            }
          } }, { key: "compare", value: function(y, N) {
            if (!(y && y instanceof r)) throw new Error("assetA is invalid");
            if (!(N && N instanceof r)) throw new Error("assetB is invalid");
            if (y.equals(N)) return 0;
            var Q = y.getRawAssetType().value, _t = N.getRawAssetType().value;
            if (Q !== _t) return Q < _t ? -1 : 1;
            var Qt = bo(y.getCode(), N.getCode());
            return Qt !== 0 ? Qt : bo(y.getIssuer(), N.getIssuer());
          } }]);
        }();
        function bo(r, y) {
          return Cn.compare(Cn.from(r, "ascii"), Cn.from(y, "ascii"));
        }
        var si = i(8287).Buffer, Xo = 30;
        function Xn(r) {
          var y = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};
          if (r !== "constant_product") throw new Error("liquidityPoolType is invalid");
          var N = y.assetA, Q = y.assetB, _t = y.fee;
          if (!(N && N instanceof Rn)) throw new Error("assetA is invalid");
          if (!(Q && Q instanceof Rn)) throw new Error("assetB is invalid");
          if (!_t || _t !== Xo) throw new Error("fee is invalid");
          if (Rn.compare(N, Q) !== -1) throw new Error("Assets are not in lexicographic order");
          var Qt = f.LiquidityPoolType.liquidityPoolConstantProduct().toXDR(), Ce = new f.LiquidityPoolConstantProductParameters({ assetA: N.toXDRObject(), assetB: Q.toXDRObject(), fee: _t }).toXDR();
          return b(si.concat([Qt, Ce]));
        }
        var ki = i(8287).Buffer;
        function ii(r) {
          return ii = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(y) {
            return typeof y;
          } : function(y) {
            return y && typeof Symbol == "function" && y.constructor === Symbol && y !== Symbol.prototype ? "symbol" : typeof y;
          }, ii(r);
        }
        function wo(r, y) {
          for (var N = 0; N < y.length; N++) {
            var Q = y[N];
            Q.enumerable = Q.enumerable || false, Q.configurable = true, "value" in Q && (Q.writable = true), Object.defineProperty(r, Yt(Q.key), Q);
          }
        }
        function Yt(r) {
          var y = function(N, Q) {
            if (ii(N) != "object" || !N) return N;
            var _t = N[Symbol.toPrimitive];
            if (_t !== void 0) {
              var Qt = _t.call(N, Q);
              if (ii(Qt) != "object") return Qt;
              throw new TypeError("@@toPrimitive must return a primitive value.");
            }
            return String(N);
          }(r, "string");
          return ii(y) == "symbol" ? y : y + "";
        }
        var ee = function() {
          return function(r, y, N) {
            return y && wo(r.prototype, y), Object.defineProperty(r, "prototype", { writable: false }), r;
          }(function r(y, N, Q, _t) {
            if (function(Qt, Ce) {
              if (!(Qt instanceof Ce)) throw new TypeError("Cannot call a class as a function");
            }(this, r), typeof _t != "string") throw new Error("Invalid passphrase provided to Transaction: expected a string but got a ".concat(ii(_t)));
            this._networkPassphrase = _t, this._tx = y, this._signatures = N, this._fee = Q;
          }, [{ key: "signatures", get: function() {
            return this._signatures;
          }, set: function(r) {
            throw new Error("Transaction is immutable");
          } }, { key: "tx", get: function() {
            return this._tx;
          }, set: function(r) {
            throw new Error("Transaction is immutable");
          } }, { key: "fee", get: function() {
            return this._fee;
          }, set: function(r) {
            throw new Error("Transaction is immutable");
          } }, { key: "networkPassphrase", get: function() {
            return this._networkPassphrase;
          }, set: function(r) {
            this._networkPassphrase = r;
          } }, { key: "sign", value: function() {
            for (var r = this, y = this.hash(), N = arguments.length, Q = new Array(N), _t = 0; _t < N; _t++) Q[_t] = arguments[_t];
            Q.forEach(function(Qt) {
              var Ce = Qt.signDecorated(y);
              r.signatures.push(Ce);
            });
          } }, { key: "getKeypairSignature", value: function(r) {
            return r.sign(this.hash()).toString("base64");
          } }, { key: "addSignature", value: function() {
            var r, y, N = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : "", Q = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : "";
            if (!Q || typeof Q != "string") throw new Error("Invalid signature");
            if (!N || typeof N != "string") throw new Error("Invalid publicKey");
            var _t = ki.from(Q, "base64");
            try {
              y = (r = Xr.fromPublicKey(N)).signatureHint();
            } catch {
              throw new Error("Invalid publicKey");
            }
            if (!r.verify(this.hash(), _t)) throw new Error("Invalid signature");
            this.signatures.push(new f.DecoratedSignature({ hint: y, signature: _t }));
          } }, { key: "addDecoratedSignature", value: function(r) {
            this.signatures.push(r);
          } }, { key: "signHashX", value: function(r) {
            if (typeof r == "string" && (r = ki.from(r, "hex")), r.length > 64) throw new Error("preimage cannnot be longer than 64 bytes");
            var y = r, N = b(r), Q = N.slice(N.length - 4);
            this.signatures.push(new f.DecoratedSignature({ hint: Q, signature: y }));
          } }, { key: "hash", value: function() {
            return b(this.signatureBase());
          } }, { key: "signatureBase", value: function() {
            throw new Error("Implement in subclass");
          } }, { key: "toEnvelope", value: function() {
            throw new Error("Implement in subclass");
          } }, { key: "toXDR", value: function() {
            return this.toEnvelope().toXDR().toString("base64");
          } }]);
        }(), ye = /^-?(?:\d+(?:\.\d*)?|\.\d+)(?:e[+-]?\d+)?$/i, Se = Math.ceil, De = Math.floor, ar = "[BigNumber Error] ", C = ar + "Number primitive has more than 15 significant digits: ", Y = 1e14, ht = 14, Pt = 9007199254740991, Ft = [1, 10, 100, 1e3, 1e4, 1e5, 1e6, 1e7, 1e8, 1e9, 1e10, 1e11, 1e12, 1e13], jt = 1e7, ne = 1e9;
        function Ie(r) {
          var y = 0 | r;
          return r > 0 || r === y ? y : y - 1;
        }
        function ve(r) {
          for (var y, N, Q = 1, _t = r.length, Qt = r[0] + ""; Q < _t; ) {
            for (y = r[Q++] + "", N = ht - y.length; N--; y = "0" + y) ;
            Qt += y;
          }
          for (_t = Qt.length; Qt.charCodeAt(--_t) === 48; ) ;
          return Qt.slice(0, _t + 1 || 1);
        }
        function ze(r, y) {
          var N, Q, _t = r.c, Qt = y.c, Ce = r.s, Le = y.s, Qe = r.e, Sr = y.e;
          if (!Ce || !Le) return null;
          if (N = _t && !_t[0], Q = Qt && !Qt[0], N || Q) return N ? Q ? 0 : -Le : Ce;
          if (Ce != Le) return Ce;
          if (N = Ce < 0, Q = Qe == Sr, !_t || !Qt) return Q ? 0 : !_t ^ N ? 1 : -1;
          if (!Q) return Qe > Sr ^ N ? 1 : -1;
          for (Le = (Qe = _t.length) < (Sr = Qt.length) ? Qe : Sr, Ce = 0; Ce < Le; Ce++) if (_t[Ce] != Qt[Ce]) return _t[Ce] > Qt[Ce] ^ N ? 1 : -1;
          return Qe == Sr ? 0 : Qe > Sr ^ N ? 1 : -1;
        }
        function Ze(r, y, N, Q) {
          if (r < y || r > N || r !== De(r)) throw Error(ar + (Q || "Argument") + (typeof r == "number" ? r < y || r > N ? " out of range: " : " not an integer: " : " not a primitive number: ") + String(r));
        }
        function Ar(r) {
          var y = r.c.length - 1;
          return Ie(r.e / ht) == y && r.c[y] % 2 != 0;
        }
        function It(r, y) {
          return (r.length > 1 ? r.charAt(0) + "." + r.slice(1) : r) + (y < 0 ? "e" : "e+") + y;
        }
        function ie(r, y, N) {
          var Q, _t;
          if (y < 0) {
            for (_t = N + "."; ++y; _t += N) ;
            r = _t + r;
          } else if (++y > (Q = r.length)) {
            for (_t = N, y -= Q; --y; _t += N) ;
            r += _t;
          } else y < Q && (r = r.slice(0, y) + "." + r.slice(y));
          return r;
        }
        var Ae = function r(y) {
          var N, Q, _t, Qt, Ce, Le, Qe, Sr, Kt, re, fe = Jr.prototype = { constructor: Jr, toString: null, valueOf: null }, Re = new Jr(1), Te = 20, Fe = 4, Xe = -7, Ne = 21, Be = -1e7, Ue = 1e7, He = false, qr = 1, rn = 0, nn = { prefix: "", groupSize: 3, secondaryGroupSize: 0, groupSeparator: ",", decimalSeparator: ".", fractionGroupSize: 0, fractionGroupSeparator: "\xA0", suffix: "" }, hn = "0123456789abcdefghijklmnopqrstuvwxyz", zn = true;
          function Jr(xe, ke) {
            var tr, Mr, ir, pr, Ur, Pr, Kr, en, Hr = this;
            if (!(Hr instanceof Jr)) return new Jr(xe, ke);
            if (ke == null) {
              if (xe && xe._isBigNumber === true) return Hr.s = xe.s, void (!xe.c || xe.e > Ue ? Hr.c = Hr.e = null : xe.e < Be ? Hr.c = [Hr.e = 0] : (Hr.e = xe.e, Hr.c = xe.c.slice()));
              if ((Pr = typeof xe == "number") && 0 * xe == 0) {
                if (Hr.s = 1 / xe < 0 ? (xe = -xe, -1) : 1, xe === ~~xe) {
                  for (pr = 0, Ur = xe; Ur >= 10; Ur /= 10, pr++) ;
                  return void (pr > Ue ? Hr.c = Hr.e = null : (Hr.e = pr, Hr.c = [xe]));
                }
                en = String(xe);
              } else {
                if (!ye.test(en = String(xe))) return _t(Hr, en, Pr);
                Hr.s = en.charCodeAt(0) == 45 ? (en = en.slice(1), -1) : 1;
              }
              (pr = en.indexOf(".")) > -1 && (en = en.replace(".", "")), (Ur = en.search(/e/i)) > 0 ? (pr < 0 && (pr = Ur), pr += +en.slice(Ur + 1), en = en.substring(0, Ur)) : pr < 0 && (pr = en.length);
            } else {
              if (Ze(ke, 2, hn.length, "Base"), ke == 10 && zn) return Mo(Hr = new Jr(xe), Te + Hr.e + 1, Fe);
              if (en = String(xe), Pr = typeof xe == "number") {
                if (0 * xe != 0) return _t(Hr, en, Pr, ke);
                if (Hr.s = 1 / xe < 0 ? (en = en.slice(1), -1) : 1, Jr.DEBUG && en.replace(/^0\.0*|\./, "").length > 15) throw Error(C + xe);
              } else Hr.s = en.charCodeAt(0) === 45 ? (en = en.slice(1), -1) : 1;
              for (tr = hn.slice(0, ke), pr = Ur = 0, Kr = en.length; Ur < Kr; Ur++) if (tr.indexOf(Mr = en.charAt(Ur)) < 0) {
                if (Mr == ".") {
                  if (Ur > pr) {
                    pr = Kr;
                    continue;
                  }
                } else if (!ir && (en == en.toUpperCase() && (en = en.toLowerCase()) || en == en.toLowerCase() && (en = en.toUpperCase()))) {
                  ir = true, Ur = -1, pr = 0;
                  continue;
                }
                return _t(Hr, String(xe), Pr, ke);
              }
              Pr = false, (pr = (en = Q(en, ke, 10, Hr.s)).indexOf(".")) > -1 ? en = en.replace(".", "") : pr = en.length;
            }
            for (Ur = 0; en.charCodeAt(Ur) === 48; Ur++) ;
            for (Kr = en.length; en.charCodeAt(--Kr) === 48; ) ;
            if (en = en.slice(Ur, ++Kr)) {
              if (Kr -= Ur, Pr && Jr.DEBUG && Kr > 15 && (xe > Pt || xe !== De(xe))) throw Error(C + Hr.s * xe);
              if ((pr = pr - Ur - 1) > Ue) Hr.c = Hr.e = null;
              else if (pr < Be) Hr.c = [Hr.e = 0];
              else {
                if (Hr.e = pr, Hr.c = [], Ur = (pr + 1) % ht, pr < 0 && (Ur += ht), Ur < Kr) {
                  for (Ur && Hr.c.push(+en.slice(0, Ur)), Kr -= ht; Ur < Kr; ) Hr.c.push(+en.slice(Ur, Ur += ht));
                  Ur = ht - (en = en.slice(Ur)).length;
                } else Ur -= Kr;
                for (; Ur--; en += "0") ;
                Hr.c.push(+en);
              }
            } else Hr.c = [Hr.e = 0];
          }
          function ro(xe, ke, tr, Mr) {
            var ir, pr, Ur, Pr, Kr;
            if (tr == null ? tr = Fe : Ze(tr, 0, 8), !xe.c) return xe.toString();
            if (ir = xe.c[0], Ur = xe.e, ke == null) Kr = ve(xe.c), Kr = Mr == 1 || Mr == 2 && (Ur <= Xe || Ur >= Ne) ? It(Kr, Ur) : ie(Kr, Ur, "0");
            else if (pr = (xe = Mo(new Jr(xe), ke, tr)).e, Pr = (Kr = ve(xe.c)).length, Mr == 1 || Mr == 2 && (ke <= pr || pr <= Xe)) {
              for (; Pr < ke; Kr += "0", Pr++) ;
              Kr = It(Kr, pr);
            } else if (ke -= Ur, Kr = ie(Kr, pr, "0"), pr + 1 > Pr) {
              if (--ke > 0) for (Kr += "."; ke--; Kr += "0") ;
            } else if ((ke += pr - Pr) > 0) for (pr + 1 == Pr && (Kr += "."); ke--; Kr += "0") ;
            return xe.s < 0 && ir ? "-" + Kr : Kr;
          }
          function io(xe, ke) {
            for (var tr, Mr, ir = 1, pr = new Jr(xe[0]); ir < xe.length; ir++) (!(Mr = new Jr(xe[ir])).s || (tr = ze(pr, Mr)) === ke || tr === 0 && pr.s === ke) && (pr = Mr);
            return pr;
          }
          function Uo(xe, ke, tr) {
            for (var Mr = 1, ir = ke.length; !ke[--ir]; ke.pop()) ;
            for (ir = ke[0]; ir >= 10; ir /= 10, Mr++) ;
            return (tr = Mr + tr * ht - 1) > Ue ? xe.c = xe.e = null : tr < Be ? xe.c = [xe.e = 0] : (xe.e = tr, xe.c = ke), xe;
          }
          function Mo(xe, ke, tr, Mr) {
            var ir, pr, Ur, Pr, Kr, en, Hr, Yn = xe.c, vo = Ft;
            if (Yn) {
              t: {
                for (ir = 1, Pr = Yn[0]; Pr >= 10; Pr /= 10, ir++) ;
                if ((pr = ke - ir) < 0) pr += ht, Ur = ke, Kr = Yn[en = 0], Hr = De(Kr / vo[ir - Ur - 1] % 10);
                else if ((en = Se((pr + 1) / ht)) >= Yn.length) {
                  if (!Mr) break t;
                  for (; Yn.length <= en; Yn.push(0)) ;
                  Kr = Hr = 0, ir = 1, Ur = (pr %= ht) - ht + 1;
                } else {
                  for (Kr = Pr = Yn[en], ir = 1; Pr >= 10; Pr /= 10, ir++) ;
                  Hr = (Ur = (pr %= ht) - ht + ir) < 0 ? 0 : De(Kr / vo[ir - Ur - 1] % 10);
                }
                if (Mr = Mr || ke < 0 || Yn[en + 1] != null || (Ur < 0 ? Kr : Kr % vo[ir - Ur - 1]), Mr = tr < 4 ? (Hr || Mr) && (tr == 0 || tr == (xe.s < 0 ? 3 : 2)) : Hr > 5 || Hr == 5 && (tr == 4 || Mr || tr == 6 && (pr > 0 ? Ur > 0 ? Kr / vo[ir - Ur] : 0 : Yn[en - 1]) % 10 & 1 || tr == (xe.s < 0 ? 8 : 7)), ke < 1 || !Yn[0]) return Yn.length = 0, Mr ? (ke -= xe.e + 1, Yn[0] = vo[(ht - ke % ht) % ht], xe.e = -ke || 0) : Yn[0] = xe.e = 0, xe;
                if (pr == 0 ? (Yn.length = en, Pr = 1, en--) : (Yn.length = en + 1, Pr = vo[ht - pr], Yn[en] = Ur > 0 ? De(Kr / vo[ir - Ur] % vo[Ur]) * Pr : 0), Mr) for (; ; ) {
                  if (en == 0) {
                    for (pr = 1, Ur = Yn[0]; Ur >= 10; Ur /= 10, pr++) ;
                    for (Ur = Yn[0] += Pr, Pr = 1; Ur >= 10; Ur /= 10, Pr++) ;
                    pr != Pr && (xe.e++, Yn[0] == Y && (Yn[0] = 1));
                    break;
                  }
                  if (Yn[en] += Pr, Yn[en] != Y) break;
                  Yn[en--] = 0, Pr = 1;
                }
                for (pr = Yn.length; Yn[--pr] === 0; Yn.pop()) ;
              }
              xe.e > Ue ? xe.c = xe.e = null : xe.e < Be && (xe.c = [xe.e = 0]);
            }
            return xe;
          }
          function qo(xe) {
            var ke, tr = xe.e;
            return tr === null ? xe.toString() : (ke = ve(xe.c), ke = tr <= Xe || tr >= Ne ? It(ke, tr) : ie(ke, tr, "0"), xe.s < 0 ? "-" + ke : ke);
          }
          return Jr.clone = r, Jr.ROUND_UP = 0, Jr.ROUND_DOWN = 1, Jr.ROUND_CEIL = 2, Jr.ROUND_FLOOR = 3, Jr.ROUND_HALF_UP = 4, Jr.ROUND_HALF_DOWN = 5, Jr.ROUND_HALF_EVEN = 6, Jr.ROUND_HALF_CEIL = 7, Jr.ROUND_HALF_FLOOR = 8, Jr.EUCLID = 9, Jr.config = Jr.set = function(xe) {
            var ke, tr;
            if (xe != null) {
              if (typeof xe != "object") throw Error(ar + "Object expected: " + xe);
              if (xe.hasOwnProperty(ke = "DECIMAL_PLACES") && (Ze(tr = xe[ke], 0, ne, ke), Te = tr), xe.hasOwnProperty(ke = "ROUNDING_MODE") && (Ze(tr = xe[ke], 0, 8, ke), Fe = tr), xe.hasOwnProperty(ke = "EXPONENTIAL_AT") && ((tr = xe[ke]) && tr.pop ? (Ze(tr[0], -1e9, 0, ke), Ze(tr[1], 0, ne, ke), Xe = tr[0], Ne = tr[1]) : (Ze(tr, -1e9, ne, ke), Xe = -(Ne = tr < 0 ? -tr : tr))), xe.hasOwnProperty(ke = "RANGE")) if ((tr = xe[ke]) && tr.pop) Ze(tr[0], -1e9, -1, ke), Ze(tr[1], 1, ne, ke), Be = tr[0], Ue = tr[1];
              else {
                if (Ze(tr, -1e9, ne, ke), !tr) throw Error(ar + ke + " cannot be zero: " + tr);
                Be = -(Ue = tr < 0 ? -tr : tr);
              }
              if (xe.hasOwnProperty(ke = "CRYPTO")) {
                if ((tr = xe[ke]) !== !!tr) throw Error(ar + ke + " not true or false: " + tr);
                if (tr) {
                  if (typeof crypto > "u" || !crypto || !crypto.getRandomValues && !crypto.randomBytes) throw He = !tr, Error(ar + "crypto unavailable");
                  He = tr;
                } else He = tr;
              }
              if (xe.hasOwnProperty(ke = "MODULO_MODE") && (Ze(tr = xe[ke], 0, 9, ke), qr = tr), xe.hasOwnProperty(ke = "POW_PRECISION") && (Ze(tr = xe[ke], 0, ne, ke), rn = tr), xe.hasOwnProperty(ke = "FORMAT")) {
                if (typeof (tr = xe[ke]) != "object") throw Error(ar + ke + " not an object: " + tr);
                nn = tr;
              }
              if (xe.hasOwnProperty(ke = "ALPHABET")) {
                if (typeof (tr = xe[ke]) != "string" || /^.?$|[+\-.\s]|(.).*\1/.test(tr)) throw Error(ar + ke + " invalid: " + tr);
                zn = tr.slice(0, 10) == "0123456789", hn = tr;
              }
            }
            return { DECIMAL_PLACES: Te, ROUNDING_MODE: Fe, EXPONENTIAL_AT: [Xe, Ne], RANGE: [Be, Ue], CRYPTO: He, MODULO_MODE: qr, POW_PRECISION: rn, FORMAT: nn, ALPHABET: hn };
          }, Jr.isBigNumber = function(xe) {
            if (!xe || xe._isBigNumber !== true) return false;
            if (!Jr.DEBUG) return true;
            var ke, tr, Mr = xe.c, ir = xe.e, pr = xe.s;
            t: if ({}.toString.call(Mr) == "[object Array]") {
              if ((pr === 1 || pr === -1) && ir >= -1e9 && ir <= ne && ir === De(ir)) {
                if (Mr[0] === 0) {
                  if (ir === 0 && Mr.length === 1) return true;
                  break t;
                }
                if ((ke = (ir + 1) % ht) < 1 && (ke += ht), String(Mr[0]).length == ke) {
                  for (ke = 0; ke < Mr.length; ke++) if ((tr = Mr[ke]) < 0 || tr >= Y || tr !== De(tr)) break t;
                  if (tr !== 0) return true;
                }
              }
            } else if (Mr === null && ir === null && (pr === null || pr === 1 || pr === -1)) return true;
            throw Error(ar + "Invalid BigNumber: " + xe);
          }, Jr.maximum = Jr.max = function() {
            return io(arguments, -1);
          }, Jr.minimum = Jr.min = function() {
            return io(arguments, 1);
          }, Jr.random = (Qt = 9007199254740992, Ce = Math.random() * Qt & 2097151 ? function() {
            return De(Math.random() * Qt);
          } : function() {
            return 8388608 * (1073741824 * Math.random() | 0) + (8388608 * Math.random() | 0);
          }, function(xe) {
            var ke, tr, Mr, ir, pr, Ur = 0, Pr = [], Kr = new Jr(Re);
            if (xe == null ? xe = Te : Ze(xe, 0, ne), ir = Se(xe / ht), He) if (crypto.getRandomValues) {
              for (ke = crypto.getRandomValues(new Uint32Array(ir *= 2)); Ur < ir; ) (pr = 131072 * ke[Ur] + (ke[Ur + 1] >>> 11)) >= 9e15 ? (tr = crypto.getRandomValues(new Uint32Array(2)), ke[Ur] = tr[0], ke[Ur + 1] = tr[1]) : (Pr.push(pr % 1e14), Ur += 2);
              Ur = ir / 2;
            } else {
              if (!crypto.randomBytes) throw He = false, Error(ar + "crypto unavailable");
              for (ke = crypto.randomBytes(ir *= 7); Ur < ir; ) (pr = 281474976710656 * (31 & ke[Ur]) + 1099511627776 * ke[Ur + 1] + 4294967296 * ke[Ur + 2] + 16777216 * ke[Ur + 3] + (ke[Ur + 4] << 16) + (ke[Ur + 5] << 8) + ke[Ur + 6]) >= 9e15 ? crypto.randomBytes(7).copy(ke, Ur) : (Pr.push(pr % 1e14), Ur += 7);
              Ur = ir / 7;
            }
            if (!He) for (; Ur < ir; ) (pr = Ce()) < 9e15 && (Pr[Ur++] = pr % 1e14);
            for (ir = Pr[--Ur], xe %= ht, ir && xe && (pr = Ft[ht - xe], Pr[Ur] = De(ir / pr) * pr); Pr[Ur] === 0; Pr.pop(), Ur--) ;
            if (Ur < 0) Pr = [Mr = 0];
            else {
              for (Mr = -1; Pr[0] === 0; Pr.splice(0, 1), Mr -= ht) ;
              for (Ur = 1, pr = Pr[0]; pr >= 10; pr /= 10, Ur++) ;
              Ur < ht && (Mr -= ht - Ur);
            }
            return Kr.e = Mr, Kr.c = Pr, Kr;
          }), Jr.sum = function() {
            for (var xe = 1, ke = arguments, tr = new Jr(ke[0]); xe < ke.length; ) tr = tr.plus(ke[xe++]);
            return tr;
          }, Q = /* @__PURE__ */ function() {
            var xe = "0123456789";
            function ke(tr, Mr, ir, pr) {
              for (var Ur, Pr, Kr = [0], en = 0, Hr = tr.length; en < Hr; ) {
                for (Pr = Kr.length; Pr--; Kr[Pr] *= Mr) ;
                for (Kr[0] += pr.indexOf(tr.charAt(en++)), Ur = 0; Ur < Kr.length; Ur++) Kr[Ur] > ir - 1 && (Kr[Ur + 1] == null && (Kr[Ur + 1] = 0), Kr[Ur + 1] += Kr[Ur] / ir | 0, Kr[Ur] %= ir);
              }
              return Kr.reverse();
            }
            return function(tr, Mr, ir, pr, Ur) {
              var Pr, Kr, en, Hr, Yn, vo, xo, ni, Ti = tr.indexOf("."), Bi = Te, ei = Fe;
              for (Ti >= 0 && (Hr = rn, rn = 0, tr = tr.replace(".", ""), vo = (ni = new Jr(Mr)).pow(tr.length - Ti), rn = Hr, ni.c = ke(ie(ve(vo.c), vo.e, "0"), 10, ir, xe), ni.e = ni.c.length), en = Hr = (xo = ke(tr, Mr, ir, Ur ? (Pr = hn, xe) : (Pr = xe, hn))).length; xo[--Hr] == 0; xo.pop()) ;
              if (!xo[0]) return Pr.charAt(0);
              if (Ti < 0 ? --en : (vo.c = xo, vo.e = en, vo.s = pr, xo = (vo = N(vo, ni, Bi, ei, ir)).c, Yn = vo.r, en = vo.e), Ti = xo[Kr = en + Bi + 1], Hr = ir / 2, Yn = Yn || Kr < 0 || xo[Kr + 1] != null, Yn = ei < 4 ? (Ti != null || Yn) && (ei == 0 || ei == (vo.s < 0 ? 3 : 2)) : Ti > Hr || Ti == Hr && (ei == 4 || Yn || ei == 6 && 1 & xo[Kr - 1] || ei == (vo.s < 0 ? 8 : 7)), Kr < 1 || !xo[0]) tr = Yn ? ie(Pr.charAt(1), -Bi, Pr.charAt(0)) : Pr.charAt(0);
              else {
                if (xo.length = Kr, Yn) for (--ir; ++xo[--Kr] > ir; ) xo[Kr] = 0, Kr || (++en, xo = [1].concat(xo));
                for (Hr = xo.length; !xo[--Hr]; ) ;
                for (Ti = 0, tr = ""; Ti <= Hr; tr += Pr.charAt(xo[Ti++])) ;
                tr = ie(tr, en, Pr.charAt(0));
              }
              return tr;
            };
          }(), N = /* @__PURE__ */ function() {
            function xe(Mr, ir, pr) {
              var Ur, Pr, Kr, en, Hr = 0, Yn = Mr.length, vo = ir % jt, xo = ir / jt | 0;
              for (Mr = Mr.slice(); Yn--; ) Hr = ((Pr = vo * (Kr = Mr[Yn] % jt) + (Ur = xo * Kr + (en = Mr[Yn] / jt | 0) * vo) % jt * jt + Hr) / pr | 0) + (Ur / jt | 0) + xo * en, Mr[Yn] = Pr % pr;
              return Hr && (Mr = [Hr].concat(Mr)), Mr;
            }
            function ke(Mr, ir, pr, Ur) {
              var Pr, Kr;
              if (pr != Ur) Kr = pr > Ur ? 1 : -1;
              else for (Pr = Kr = 0; Pr < pr; Pr++) if (Mr[Pr] != ir[Pr]) {
                Kr = Mr[Pr] > ir[Pr] ? 1 : -1;
                break;
              }
              return Kr;
            }
            function tr(Mr, ir, pr, Ur) {
              for (var Pr = 0; pr--; ) Mr[pr] -= Pr, Pr = Mr[pr] < ir[pr] ? 1 : 0, Mr[pr] = Pr * Ur + Mr[pr] - ir[pr];
              for (; !Mr[0] && Mr.length > 1; Mr.splice(0, 1)) ;
            }
            return function(Mr, ir, pr, Ur, Pr) {
              var Kr, en, Hr, Yn, vo, xo, ni, Ti, Bi, ei, fi, Vi, Xc, nf, of, Ia, Ju, ha = Mr.s == ir.s ? 1 : -1, Yi = Mr.c, Ei = ir.c;
              if (!(Yi && Yi[0] && Ei && Ei[0])) return new Jr(Mr.s && ir.s && (Yi ? !Ei || Yi[0] != Ei[0] : Ei) ? Yi && Yi[0] == 0 || !Ei ? 0 * ha : ha / 0 : NaN);
              for (Bi = (Ti = new Jr(ha)).c = [], ha = pr + (en = Mr.e - ir.e) + 1, Pr || (Pr = Y, en = Ie(Mr.e / ht) - Ie(ir.e / ht), ha = ha / ht | 0), Hr = 0; Ei[Hr] == (Yi[Hr] || 0); Hr++) ;
              if (Ei[Hr] > (Yi[Hr] || 0) && en--, ha < 0) Bi.push(1), Yn = true;
              else {
                for (nf = Yi.length, Ia = Ei.length, Hr = 0, ha += 2, (vo = De(Pr / (Ei[0] + 1))) > 1 && (Ei = xe(Ei, vo, Pr), Yi = xe(Yi, vo, Pr), Ia = Ei.length, nf = Yi.length), Xc = Ia, fi = (ei = Yi.slice(0, Ia)).length; fi < Ia; ei[fi++] = 0) ;
                Ju = Ei.slice(), Ju = [0].concat(Ju), of = Ei[0], Ei[1] >= Pr / 2 && of++;
                do {
                  if (vo = 0, (Kr = ke(Ei, ei, Ia, fi)) < 0) {
                    if (Vi = ei[0], Ia != fi && (Vi = Vi * Pr + (ei[1] || 0)), (vo = De(Vi / of)) > 1) for (vo >= Pr && (vo = Pr - 1), ni = (xo = xe(Ei, vo, Pr)).length, fi = ei.length; ke(xo, ei, ni, fi) == 1; ) vo--, tr(xo, Ia < ni ? Ju : Ei, ni, Pr), ni = xo.length, Kr = 1;
                    else vo == 0 && (Kr = vo = 1), ni = (xo = Ei.slice()).length;
                    if (ni < fi && (xo = [0].concat(xo)), tr(ei, xo, fi, Pr), fi = ei.length, Kr == -1) for (; ke(Ei, ei, Ia, fi) < 1; ) vo++, tr(ei, Ia < fi ? Ju : Ei, fi, Pr), fi = ei.length;
                  } else Kr === 0 && (vo++, ei = [0]);
                  Bi[Hr++] = vo, ei[0] ? ei[fi++] = Yi[Xc] || 0 : (ei = [Yi[Xc]], fi = 1);
                } while ((Xc++ < nf || ei[0] != null) && ha--);
                Yn = ei[0] != null, Bi[0] || Bi.splice(0, 1);
              }
              if (Pr == Y) {
                for (Hr = 1, ha = Bi[0]; ha >= 10; ha /= 10, Hr++) ;
                Mo(Ti, pr + (Ti.e = Hr + en * ht - 1) + 1, Ur, Yn);
              } else Ti.e = en, Ti.r = +Yn;
              return Ti;
            };
          }(), Le = /^(-?)0([xbo])(?=\w[\w.]*$)/i, Qe = /^([^.]+)\.$/, Sr = /^\.([^.]+)$/, Kt = /^-?(Infinity|NaN)$/, re = /^\s*\+(?=[\w.])|^\s+|\s+$/g, _t = function(xe, ke, tr, Mr) {
            var ir, pr = tr ? ke : ke.replace(re, "");
            if (Kt.test(pr)) xe.s = isNaN(pr) ? null : pr < 0 ? -1 : 1;
            else {
              if (!tr && (pr = pr.replace(Le, function(Ur, Pr, Kr) {
                return ir = (Kr = Kr.toLowerCase()) == "x" ? 16 : Kr == "b" ? 2 : 8, Mr && Mr != ir ? Ur : Pr;
              }), Mr && (ir = Mr, pr = pr.replace(Qe, "$1").replace(Sr, "0.$1")), ke != pr)) return new Jr(pr, ir);
              if (Jr.DEBUG) throw Error(ar + "Not a" + (Mr ? " base " + Mr : "") + " number: " + ke);
              xe.s = null;
            }
            xe.c = xe.e = null;
          }, fe.absoluteValue = fe.abs = function() {
            var xe = new Jr(this);
            return xe.s < 0 && (xe.s = 1), xe;
          }, fe.comparedTo = function(xe, ke) {
            return ze(this, new Jr(xe, ke));
          }, fe.decimalPlaces = fe.dp = function(xe, ke) {
            var tr, Mr, ir, pr = this;
            if (xe != null) return Ze(xe, 0, ne), ke == null ? ke = Fe : Ze(ke, 0, 8), Mo(new Jr(pr), xe + pr.e + 1, ke);
            if (!(tr = pr.c)) return null;
            if (Mr = ((ir = tr.length - 1) - Ie(this.e / ht)) * ht, ir = tr[ir]) for (; ir % 10 == 0; ir /= 10, Mr--) ;
            return Mr < 0 && (Mr = 0), Mr;
          }, fe.dividedBy = fe.div = function(xe, ke) {
            return N(this, new Jr(xe, ke), Te, Fe);
          }, fe.dividedToIntegerBy = fe.idiv = function(xe, ke) {
            return N(this, new Jr(xe, ke), 0, 1);
          }, fe.exponentiatedBy = fe.pow = function(xe, ke) {
            var tr, Mr, ir, pr, Ur, Pr, Kr, en, Hr = this;
            if ((xe = new Jr(xe)).c && !xe.isInteger()) throw Error(ar + "Exponent not an integer: " + qo(xe));
            if (ke != null && (ke = new Jr(ke)), Ur = xe.e > 14, !Hr.c || !Hr.c[0] || Hr.c[0] == 1 && !Hr.e && Hr.c.length == 1 || !xe.c || !xe.c[0]) return en = new Jr(Math.pow(+qo(Hr), Ur ? xe.s * (2 - Ar(xe)) : +qo(xe))), ke ? en.mod(ke) : en;
            if (Pr = xe.s < 0, ke) {
              if (ke.c ? !ke.c[0] : !ke.s) return new Jr(NaN);
              (Mr = !Pr && Hr.isInteger() && ke.isInteger()) && (Hr = Hr.mod(ke));
            } else {
              if (xe.e > 9 && (Hr.e > 0 || Hr.e < -1 || (Hr.e == 0 ? Hr.c[0] > 1 || Ur && Hr.c[1] >= 24e7 : Hr.c[0] < 8e13 || Ur && Hr.c[0] <= 9999975e7))) return pr = Hr.s < 0 && Ar(xe) ? -0 : 0, Hr.e > -1 && (pr = 1 / pr), new Jr(Pr ? 1 / pr : pr);
              rn && (pr = Se(rn / ht + 2));
            }
            for (Ur ? (tr = new Jr(0.5), Pr && (xe.s = 1), Kr = Ar(xe)) : Kr = (ir = Math.abs(+qo(xe))) % 2, en = new Jr(Re); ; ) {
              if (Kr) {
                if (!(en = en.times(Hr)).c) break;
                pr ? en.c.length > pr && (en.c.length = pr) : Mr && (en = en.mod(ke));
              }
              if (ir) {
                if ((ir = De(ir / 2)) === 0) break;
                Kr = ir % 2;
              } else if (Mo(xe = xe.times(tr), xe.e + 1, 1), xe.e > 14) Kr = Ar(xe);
              else {
                if ((ir = +qo(xe)) == 0) break;
                Kr = ir % 2;
              }
              Hr = Hr.times(Hr), pr ? Hr.c && Hr.c.length > pr && (Hr.c.length = pr) : Mr && (Hr = Hr.mod(ke));
            }
            return Mr ? en : (Pr && (en = Re.div(en)), ke ? en.mod(ke) : pr ? Mo(en, rn, Fe, void 0) : en);
          }, fe.integerValue = function(xe) {
            var ke = new Jr(this);
            return xe == null ? xe = Fe : Ze(xe, 0, 8), Mo(ke, ke.e + 1, xe);
          }, fe.isEqualTo = fe.eq = function(xe, ke) {
            return ze(this, new Jr(xe, ke)) === 0;
          }, fe.isFinite = function() {
            return !!this.c;
          }, fe.isGreaterThan = fe.gt = function(xe, ke) {
            return ze(this, new Jr(xe, ke)) > 0;
          }, fe.isGreaterThanOrEqualTo = fe.gte = function(xe, ke) {
            return (ke = ze(this, new Jr(xe, ke))) === 1 || ke === 0;
          }, fe.isInteger = function() {
            return !!this.c && Ie(this.e / ht) > this.c.length - 2;
          }, fe.isLessThan = fe.lt = function(xe, ke) {
            return ze(this, new Jr(xe, ke)) < 0;
          }, fe.isLessThanOrEqualTo = fe.lte = function(xe, ke) {
            return (ke = ze(this, new Jr(xe, ke))) === -1 || ke === 0;
          }, fe.isNaN = function() {
            return !this.s;
          }, fe.isNegative = function() {
            return this.s < 0;
          }, fe.isPositive = function() {
            return this.s > 0;
          }, fe.isZero = function() {
            return !!this.c && this.c[0] == 0;
          }, fe.minus = function(xe, ke) {
            var tr, Mr, ir, pr, Ur = this, Pr = Ur.s;
            if (ke = (xe = new Jr(xe, ke)).s, !Pr || !ke) return new Jr(NaN);
            if (Pr != ke) return xe.s = -ke, Ur.plus(xe);
            var Kr = Ur.e / ht, en = xe.e / ht, Hr = Ur.c, Yn = xe.c;
            if (!Kr || !en) {
              if (!Hr || !Yn) return Hr ? (xe.s = -ke, xe) : new Jr(Yn ? Ur : NaN);
              if (!Hr[0] || !Yn[0]) return Yn[0] ? (xe.s = -ke, xe) : new Jr(Hr[0] ? Ur : Fe == 3 ? -0 : 0);
            }
            if (Kr = Ie(Kr), en = Ie(en), Hr = Hr.slice(), Pr = Kr - en) {
              for ((pr = Pr < 0) ? (Pr = -Pr, ir = Hr) : (en = Kr, ir = Yn), ir.reverse(), ke = Pr; ke--; ir.push(0)) ;
              ir.reverse();
            } else for (Mr = (pr = (Pr = Hr.length) < (ke = Yn.length)) ? Pr : ke, Pr = ke = 0; ke < Mr; ke++) if (Hr[ke] != Yn[ke]) {
              pr = Hr[ke] < Yn[ke];
              break;
            }
            if (pr && (ir = Hr, Hr = Yn, Yn = ir, xe.s = -xe.s), (ke = (Mr = Yn.length) - (tr = Hr.length)) > 0) for (; ke--; Hr[tr++] = 0) ;
            for (ke = Y - 1; Mr > Pr; ) {
              if (Hr[--Mr] < Yn[Mr]) {
                for (tr = Mr; tr && !Hr[--tr]; Hr[tr] = ke) ;
                --Hr[tr], Hr[Mr] += Y;
              }
              Hr[Mr] -= Yn[Mr];
            }
            for (; Hr[0] == 0; Hr.splice(0, 1), --en) ;
            return Hr[0] ? Uo(xe, Hr, en) : (xe.s = Fe == 3 ? -1 : 1, xe.c = [xe.e = 0], xe);
          }, fe.modulo = fe.mod = function(xe, ke) {
            var tr, Mr, ir = this;
            return xe = new Jr(xe, ke), !ir.c || !xe.s || xe.c && !xe.c[0] ? new Jr(NaN) : !xe.c || ir.c && !ir.c[0] ? new Jr(ir) : (qr == 9 ? (Mr = xe.s, xe.s = 1, tr = N(ir, xe, 0, 3), xe.s = Mr, tr.s *= Mr) : tr = N(ir, xe, 0, qr), (xe = ir.minus(tr.times(xe))).c[0] || qr != 1 || (xe.s = ir.s), xe);
          }, fe.multipliedBy = fe.times = function(xe, ke) {
            var tr, Mr, ir, pr, Ur, Pr, Kr, en, Hr, Yn, vo, xo, ni, Ti, Bi, ei = this, fi = ei.c, Vi = (xe = new Jr(xe, ke)).c;
            if (!(fi && Vi && fi[0] && Vi[0])) return !ei.s || !xe.s || fi && !fi[0] && !Vi || Vi && !Vi[0] && !fi ? xe.c = xe.e = xe.s = null : (xe.s *= ei.s, fi && Vi ? (xe.c = [0], xe.e = 0) : xe.c = xe.e = null), xe;
            for (Mr = Ie(ei.e / ht) + Ie(xe.e / ht), xe.s *= ei.s, (Kr = fi.length) < (Yn = Vi.length) && (ni = fi, fi = Vi, Vi = ni, ir = Kr, Kr = Yn, Yn = ir), ir = Kr + Yn, ni = []; ir--; ni.push(0)) ;
            for (Ti = Y, Bi = jt, ir = Yn; --ir >= 0; ) {
              for (tr = 0, vo = Vi[ir] % Bi, xo = Vi[ir] / Bi | 0, pr = ir + (Ur = Kr); pr > ir; ) tr = ((en = vo * (en = fi[--Ur] % Bi) + (Pr = xo * en + (Hr = fi[Ur] / Bi | 0) * vo) % Bi * Bi + ni[pr] + tr) / Ti | 0) + (Pr / Bi | 0) + xo * Hr, ni[pr--] = en % Ti;
              ni[pr] = tr;
            }
            return tr ? ++Mr : ni.splice(0, 1), Uo(xe, ni, Mr);
          }, fe.negated = function() {
            var xe = new Jr(this);
            return xe.s = -xe.s || null, xe;
          }, fe.plus = function(xe, ke) {
            var tr, Mr = this, ir = Mr.s;
            if (ke = (xe = new Jr(xe, ke)).s, !ir || !ke) return new Jr(NaN);
            if (ir != ke) return xe.s = -ke, Mr.minus(xe);
            var pr = Mr.e / ht, Ur = xe.e / ht, Pr = Mr.c, Kr = xe.c;
            if (!pr || !Ur) {
              if (!Pr || !Kr) return new Jr(ir / 0);
              if (!Pr[0] || !Kr[0]) return Kr[0] ? xe : new Jr(Pr[0] ? Mr : 0 * ir);
            }
            if (pr = Ie(pr), Ur = Ie(Ur), Pr = Pr.slice(), ir = pr - Ur) {
              for (ir > 0 ? (Ur = pr, tr = Kr) : (ir = -ir, tr = Pr), tr.reverse(); ir--; tr.push(0)) ;
              tr.reverse();
            }
            for ((ir = Pr.length) - (ke = Kr.length) < 0 && (tr = Kr, Kr = Pr, Pr = tr, ke = ir), ir = 0; ke; ) ir = (Pr[--ke] = Pr[ke] + Kr[ke] + ir) / Y | 0, Pr[ke] = Y === Pr[ke] ? 0 : Pr[ke] % Y;
            return ir && (Pr = [ir].concat(Pr), ++Ur), Uo(xe, Pr, Ur);
          }, fe.precision = fe.sd = function(xe, ke) {
            var tr, Mr, ir, pr = this;
            if (xe != null && xe !== !!xe) return Ze(xe, 1, ne), ke == null ? ke = Fe : Ze(ke, 0, 8), Mo(new Jr(pr), xe, ke);
            if (!(tr = pr.c)) return null;
            if (Mr = (ir = tr.length - 1) * ht + 1, ir = tr[ir]) {
              for (; ir % 10 == 0; ir /= 10, Mr--) ;
              for (ir = tr[0]; ir >= 10; ir /= 10, Mr++) ;
            }
            return xe && pr.e + 1 > Mr && (Mr = pr.e + 1), Mr;
          }, fe.shiftedBy = function(xe) {
            return Ze(xe, -9007199254740991, Pt), this.times("1e" + xe);
          }, fe.squareRoot = fe.sqrt = function() {
            var xe, ke, tr, Mr, ir, pr = this, Ur = pr.c, Pr = pr.s, Kr = pr.e, en = Te + 4, Hr = new Jr("0.5");
            if (Pr !== 1 || !Ur || !Ur[0]) return new Jr(!Pr || Pr < 0 && (!Ur || Ur[0]) ? NaN : Ur ? pr : 1 / 0);
            if ((Pr = Math.sqrt(+qo(pr))) == 0 || Pr == 1 / 0 ? (((ke = ve(Ur)).length + Kr) % 2 == 0 && (ke += "0"), Pr = Math.sqrt(+ke), Kr = Ie((Kr + 1) / 2) - (Kr < 0 || Kr % 2), tr = new Jr(ke = Pr == 1 / 0 ? "5e" + Kr : (ke = Pr.toExponential()).slice(0, ke.indexOf("e") + 1) + Kr)) : tr = new Jr(Pr + ""), tr.c[0]) {
              for ((Pr = (Kr = tr.e) + en) < 3 && (Pr = 0); ; ) if (ir = tr, tr = Hr.times(ir.plus(N(pr, ir, en, 1))), ve(ir.c).slice(0, Pr) === (ke = ve(tr.c)).slice(0, Pr)) {
                if (tr.e < Kr && --Pr, (ke = ke.slice(Pr - 3, Pr + 1)) != "9999" && (Mr || ke != "4999")) {
                  +ke && (+ke.slice(1) || ke.charAt(0) != "5") || (Mo(tr, tr.e + Te + 2, 1), xe = !tr.times(tr).eq(pr));
                  break;
                }
                if (!Mr && (Mo(ir, ir.e + Te + 2, 0), ir.times(ir).eq(pr))) {
                  tr = ir;
                  break;
                }
                en += 4, Pr += 4, Mr = 1;
              }
            }
            return Mo(tr, tr.e + Te + 1, Fe, xe);
          }, fe.toExponential = function(xe, ke) {
            return xe != null && (Ze(xe, 0, ne), xe++), ro(this, xe, ke, 1);
          }, fe.toFixed = function(xe, ke) {
            return xe != null && (Ze(xe, 0, ne), xe = xe + this.e + 1), ro(this, xe, ke);
          }, fe.toFormat = function(xe, ke, tr) {
            var Mr, ir = this;
            if (tr == null) xe != null && ke && typeof ke == "object" ? (tr = ke, ke = null) : xe && typeof xe == "object" ? (tr = xe, xe = ke = null) : tr = nn;
            else if (typeof tr != "object") throw Error(ar + "Argument not an object: " + tr);
            if (Mr = ir.toFixed(xe, ke), ir.c) {
              var pr, Ur = Mr.split("."), Pr = +tr.groupSize, Kr = +tr.secondaryGroupSize, en = tr.groupSeparator || "", Hr = Ur[0], Yn = Ur[1], vo = ir.s < 0, xo = vo ? Hr.slice(1) : Hr, ni = xo.length;
              if (Kr && (pr = Pr, Pr = Kr, Kr = pr, ni -= pr), Pr > 0 && ni > 0) {
                for (pr = ni % Pr || Pr, Hr = xo.substr(0, pr); pr < ni; pr += Pr) Hr += en + xo.substr(pr, Pr);
                Kr > 0 && (Hr += en + xo.slice(pr)), vo && (Hr = "-" + Hr);
              }
              Mr = Yn ? Hr + (tr.decimalSeparator || "") + ((Kr = +tr.fractionGroupSize) ? Yn.replace(new RegExp("\\d{" + Kr + "}\\B", "g"), "$&" + (tr.fractionGroupSeparator || "")) : Yn) : Hr;
            }
            return (tr.prefix || "") + Mr + (tr.suffix || "");
          }, fe.toFraction = function(xe) {
            var ke, tr, Mr, ir, pr, Ur, Pr, Kr, en, Hr, Yn, vo, xo = this, ni = xo.c;
            if (xe != null && (!(Pr = new Jr(xe)).isInteger() && (Pr.c || Pr.s !== 1) || Pr.lt(Re))) throw Error(ar + "Argument " + (Pr.isInteger() ? "out of range: " : "not an integer: ") + qo(Pr));
            if (!ni) return new Jr(xo);
            for (ke = new Jr(Re), en = tr = new Jr(Re), Mr = Kr = new Jr(Re), vo = ve(ni), pr = ke.e = vo.length - xo.e - 1, ke.c[0] = Ft[(Ur = pr % ht) < 0 ? ht + Ur : Ur], xe = !xe || Pr.comparedTo(ke) > 0 ? pr > 0 ? ke : en : Pr, Ur = Ue, Ue = 1 / 0, Pr = new Jr(vo), Kr.c[0] = 0; Hr = N(Pr, ke, 0, 1), (ir = tr.plus(Hr.times(Mr))).comparedTo(xe) != 1; ) tr = Mr, Mr = ir, en = Kr.plus(Hr.times(ir = en)), Kr = ir, ke = Pr.minus(Hr.times(ir = ke)), Pr = ir;
            return ir = N(xe.minus(tr), Mr, 0, 1), Kr = Kr.plus(ir.times(en)), tr = tr.plus(ir.times(Mr)), Kr.s = en.s = xo.s, Yn = N(en, Mr, pr *= 2, Fe).minus(xo).abs().comparedTo(N(Kr, tr, pr, Fe).minus(xo).abs()) < 1 ? [en, Mr] : [Kr, tr], Ue = Ur, Yn;
          }, fe.toNumber = function() {
            return +qo(this);
          }, fe.toPrecision = function(xe, ke) {
            return xe != null && Ze(xe, 1, ne), ro(this, xe, ke, 2);
          }, fe.toString = function(xe) {
            var ke, tr = this, Mr = tr.s, ir = tr.e;
            return ir === null ? Mr ? (ke = "Infinity", Mr < 0 && (ke = "-" + ke)) : ke = "NaN" : (xe == null ? ke = ir <= Xe || ir >= Ne ? It(ve(tr.c), ir) : ie(ve(tr.c), ir, "0") : xe === 10 && zn ? ke = ie(ve((tr = Mo(new Jr(tr), Te + ir + 1, Fe)).c), tr.e, "0") : (Ze(xe, 2, hn.length, "Base"), ke = Q(ie(ve(tr.c), ir, "0"), 10, xe, Mr, true)), Mr < 0 && tr.c[0] && (ke = "-" + ke)), ke;
          }, fe.valueOf = fe.toJSON = function() {
            return qo(this);
          }, fe._isBigNumber = true, fe[Symbol.toStringTag] = "BigNumber", fe[Symbol.for("nodejs.util.inspect.custom")] = fe.valueOf, y != null && Jr.set(y), Jr;
        }(), ge = Ae.clone();
        ge.DEBUG = true;
        const we = ge;
        function sr(r, y) {
          return function(N) {
            if (Array.isArray(N)) return N;
          }(r) || function(N, Q) {
            var _t = N == null ? null : typeof Symbol < "u" && N[Symbol.iterator] || N["@@iterator"];
            if (_t != null) {
              var Qt, Ce, Le, Qe, Sr = [], Kt = true, re = false;
              try {
                if (Le = (_t = _t.call(N)).next, Q !== 0) for (; !(Kt = (Qt = Le.call(_t)).done) && (Sr.push(Qt.value), Sr.length !== Q); Kt = true) ;
              } catch (fe) {
                re = true, Ce = fe;
              } finally {
                try {
                  if (!Kt && _t.return != null && (Qe = _t.return(), Object(Qe) !== Qe)) return;
                } finally {
                  if (re) throw Ce;
                }
              }
              return Sr;
            }
          }(r, y) || function(N, Q) {
            if (N) {
              if (typeof N == "string") return nr(N, Q);
              var _t = {}.toString.call(N).slice(8, -1);
              return _t === "Object" && N.constructor && (_t = N.constructor.name), _t === "Map" || _t === "Set" ? Array.from(N) : _t === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(_t) ? nr(N, Q) : void 0;
            }
          }(r, y) || function() {
            throw new TypeError(`Invalid attempt to destructure non-iterable instance.
In order to be iterable, non-array objects must have a [Symbol.iterator]() method.`);
          }();
        }
        function nr(r, y) {
          (y == null || y > r.length) && (y = r.length);
          for (var N = 0, Q = Array(y); N < y; N++) Q[N] = r[N];
          return Q;
        }
        var gn = 2147483647;
        function wn(r) {
          return wn = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(y) {
            return typeof y;
          } : function(y) {
            return y && typeof Symbol == "function" && y.constructor === Symbol && y !== Symbol.prototype ? "symbol" : typeof y;
          }, wn(r);
        }
        function dn(r, y) {
          var N = Object.keys(r);
          if (Object.getOwnPropertySymbols) {
            var Q = Object.getOwnPropertySymbols(r);
            y && (Q = Q.filter(function(_t) {
              return Object.getOwnPropertyDescriptor(r, _t).enumerable;
            })), N.push.apply(N, Q);
          }
          return N;
        }
        function Vn(r) {
          for (var y = 1; y < arguments.length; y++) {
            var N = arguments[y] != null ? arguments[y] : {};
            y % 2 ? dn(Object(N), true).forEach(function(Q) {
              ln(r, Q, N[Q]);
            }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(r, Object.getOwnPropertyDescriptors(N)) : dn(Object(N)).forEach(function(Q) {
              Object.defineProperty(r, Q, Object.getOwnPropertyDescriptor(N, Q));
            });
          }
          return r;
        }
        function ln(r, y, N) {
          return (y = ao(y)) in r ? Object.defineProperty(r, y, { value: N, enumerable: true, configurable: true, writable: true }) : r[y] = N, r;
        }
        function Yr(r, y) {
          for (var N = 0; N < y.length; N++) {
            var Q = y[N];
            Q.enumerable = Q.enumerable || false, Q.configurable = true, "value" in Q && (Q.writable = true), Object.defineProperty(r, ao(Q.key), Q);
          }
        }
        function ao(r) {
          var y = function(N, Q) {
            if (wn(N) != "object" || !N) return N;
            var _t = N[Symbol.toPrimitive];
            if (_t !== void 0) {
              var Qt = _t.call(N, Q);
              if (wn(Qt) != "object") return Qt;
              throw new TypeError("@@toPrimitive must return a primitive value.");
            }
            return String(N);
          }(r, "string");
          return wn(y) == "symbol" ? y : y + "";
        }
        var mo = function() {
          return function(r, y, N) {
            return y && Yr(r.prototype, y), N && Yr(r, N), Object.defineProperty(r, "prototype", { writable: false }), r;
          }(function r(y, N, Q) {
            if (function(_t, Qt) {
              if (!(_t instanceof Qt)) throw new TypeError("Cannot call a class as a function");
            }(this, r), !(y && y instanceof Rn)) throw new Error("assetA is invalid");
            if (!(N && N instanceof Rn)) throw new Error("assetB is invalid");
            if (Rn.compare(y, N) !== -1) throw new Error("Assets are not in lexicographic order");
            if (!Q || Q !== Xo) throw new Error("fee is invalid");
            this.assetA = y, this.assetB = N, this.fee = Q;
          }, [{ key: "toXDRObject", value: function() {
            var r = new f.LiquidityPoolConstantProductParameters({ assetA: this.assetA.toXDRObject(), assetB: this.assetB.toXDRObject(), fee: this.fee }), y = new f.LiquidityPoolParameters("liquidityPoolConstantProduct", r);
            return new f.ChangeTrustAsset("assetTypePoolShare", y);
          } }, { key: "getLiquidityPoolParameters", value: function() {
            return Vn(Vn({}, this), {}, { assetA: this.assetA, assetB: this.assetB, fee: this.fee });
          } }, { key: "getAssetType", value: function() {
            return "liquidity_pool_shares";
          } }, { key: "equals", value: function(r) {
            return this.assetA.equals(r.assetA) && this.assetB.equals(r.assetB) && this.fee === r.fee;
          } }, { key: "toString", value: function() {
            var r = Xn("constant_product", this.getLiquidityPoolParameters()).toString("hex");
            return "liquidity_pool:".concat(r);
          } }], [{ key: "fromOperation", value: function(r) {
            var y = r.switch();
            if (y === f.AssetType.assetTypePoolShare()) {
              var N = r.liquidityPool().constantProduct();
              return new this(Rn.fromOperation(N.assetA()), Rn.fromOperation(N.assetB()), N.fee());
            }
            throw new Error("Invalid asset type: ".concat(y.name));
          } }]);
        }();
        function co(r) {
          return co = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(y) {
            return typeof y;
          } : function(y) {
            return y && typeof Symbol == "function" && y.constructor === Symbol && y !== Symbol.prototype ? "symbol" : typeof y;
          }, co(r);
        }
        function So(r, y) {
          for (var N = 0; N < y.length; N++) {
            var Q = y[N];
            Q.enumerable = Q.enumerable || false, Q.configurable = true, "value" in Q && (Q.writable = true), Object.defineProperty(r, ho(Q.key), Q);
          }
        }
        function ho(r) {
          var y = function(N, Q) {
            if (co(N) != "object" || !N) return N;
            var _t = N[Symbol.toPrimitive];
            if (_t !== void 0) {
              var Qt = _t.call(N, Q);
              if (co(Qt) != "object") return Qt;
              throw new TypeError("@@toPrimitive must return a primitive value.");
            }
            return String(N);
          }(r, "string");
          return co(y) == "symbol" ? y : y + "";
        }
        var Lo = function() {
          return function(r, y, N) {
            return y && So(r.prototype, y), N && So(r, N), Object.defineProperty(r, "prototype", { writable: false }), r;
          }(function r(y, N) {
            if (function(Q, _t) {
              if (!(Q instanceof _t)) throw new TypeError("Cannot call a class as a function");
            }(this, r), y && !pe.isValidEd25519PublicKey(y)) throw new Error("Destination is invalid");
            if (this._destination = y, N) {
              if (!(N instanceof f.ClaimPredicate)) throw new Error("Predicate should be an xdr.ClaimPredicate");
              this._predicate = N;
            } else this._predicate = f.ClaimPredicate.claimPredicateUnconditional();
          }, [{ key: "toXDRObject", value: function() {
            var r = new f.ClaimantV0({ destination: Xr.fromPublicKey(this._destination).xdrAccountId(), predicate: this._predicate });
            return f.Claimant.claimantTypeV0(r);
          } }, { key: "destination", get: function() {
            return this._destination;
          }, set: function(r) {
            throw new Error("Claimant is immutable");
          } }, { key: "predicate", get: function() {
            return this._predicate;
          }, set: function(r) {
            throw new Error("Claimant is immutable");
          } }], [{ key: "predicateUnconditional", value: function() {
            return f.ClaimPredicate.claimPredicateUnconditional();
          } }, { key: "predicateAnd", value: function(r, y) {
            if (!(r instanceof f.ClaimPredicate)) throw new Error("left Predicate should be an xdr.ClaimPredicate");
            if (!(y instanceof f.ClaimPredicate)) throw new Error("right Predicate should be an xdr.ClaimPredicate");
            return f.ClaimPredicate.claimPredicateAnd([r, y]);
          } }, { key: "predicateOr", value: function(r, y) {
            if (!(r instanceof f.ClaimPredicate)) throw new Error("left Predicate should be an xdr.ClaimPredicate");
            if (!(y instanceof f.ClaimPredicate)) throw new Error("right Predicate should be an xdr.ClaimPredicate");
            return f.ClaimPredicate.claimPredicateOr([r, y]);
          } }, { key: "predicateNot", value: function(r) {
            if (!(r instanceof f.ClaimPredicate)) throw new Error("right Predicate should be an xdr.ClaimPredicate");
            return f.ClaimPredicate.claimPredicateNot(r);
          } }, { key: "predicateBeforeAbsoluteTime", value: function(r) {
            return f.ClaimPredicate.claimPredicateBeforeAbsoluteTime(f.Int64.fromString(r));
          } }, { key: "predicateBeforeRelativeTime", value: function(r) {
            return f.ClaimPredicate.claimPredicateBeforeRelativeTime(f.Int64.fromString(r));
          } }, { key: "fromXDR", value: function(r) {
            var y;
            if (r.switch() === f.ClaimantType.claimantTypeV0()) return y = r.v0(), new this(pe.encodeEd25519PublicKey(y.destination().ed25519()), y.predicate());
            throw new Error("Invalid claimant type: ".concat(r.switch().name));
          } }]);
        }();
        function Io(r) {
          return Io = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(y) {
            return typeof y;
          } : function(y) {
            return y && typeof Symbol == "function" && y.constructor === Symbol && y !== Symbol.prototype ? "symbol" : typeof y;
          }, Io(r);
        }
        function Ko(r, y) {
          for (var N = 0; N < y.length; N++) {
            var Q = y[N];
            Q.enumerable = Q.enumerable || false, Q.configurable = true, "value" in Q && (Q.writable = true), Object.defineProperty(r, ui(Q.key), Q);
          }
        }
        function ui(r) {
          var y = function(N, Q) {
            if (Io(N) != "object" || !N) return N;
            var _t = N[Symbol.toPrimitive];
            if (_t !== void 0) {
              var Qt = _t.call(N, Q);
              if (Io(Qt) != "object") return Qt;
              throw new TypeError("@@toPrimitive must return a primitive value.");
            }
            return String(N);
          }(r, "string");
          return Io(y) == "symbol" ? y : y + "";
        }
        var yi = function() {
          return function(r, y, N) {
            return y && Ko(r.prototype, y), N && Ko(r, N), Object.defineProperty(r, "prototype", { writable: false }), r;
          }(function r(y) {
            if (function(N, Q) {
              if (!(N instanceof Q)) throw new TypeError("Cannot call a class as a function");
            }(this, r), !y) throw new Error("liquidityPoolId cannot be empty");
            if (!/^[a-f0-9]{64}$/.test(y)) throw new Error("Liquidity pool ID is not a valid hash");
            this.liquidityPoolId = y;
          }, [{ key: "toXDRObject", value: function() {
            var r = f.PoolId.fromXDR(this.liquidityPoolId, "hex");
            return new f.TrustLineAsset("assetTypePoolShare", r);
          } }, { key: "getLiquidityPoolId", value: function() {
            return String(this.liquidityPoolId);
          } }, { key: "getAssetType", value: function() {
            return "liquidity_pool_shares";
          } }, { key: "equals", value: function(r) {
            return this.liquidityPoolId === r.getLiquidityPoolId();
          } }, { key: "toString", value: function() {
            return "liquidity_pool:".concat(this.liquidityPoolId);
          } }], [{ key: "fromOperation", value: function(r) {
            var y = r.switch();
            if (y === f.AssetType.assetTypePoolShare()) return new this(r.liquidityPoolId().toString("hex"));
            throw new Error("Invalid asset type: ".concat(y.name));
          } }]);
        }(), Mi = i(8287).Buffer;
        function Qo(r) {
          return pe.isValidMed25519PublicKey(r) ? function(y) {
            var N = pe.decodeMed25519PublicKey(y);
            return f.MuxedAccount.keyTypeMuxedEd25519(new f.MuxedAccountMed25519({ id: f.Uint64.fromXDR(N.subarray(-8)), ed25519: N.subarray(0, -8) }));
          }(r) : f.MuxedAccount.keyTypeEd25519(pe.decodeEd25519PublicKey(r));
        }
        function Si(r) {
          return r.switch().value === f.CryptoKeyType.keyTypeMuxedEd25519().value ? function(y) {
            if (y.switch() === f.CryptoKeyType.keyTypeEd25519()) return Si(y);
            var N = y.med25519();
            return pe.encodeMed25519PublicKey(Mi.concat([N.ed25519(), N.id().toXDR("raw")]));
          }(r) : pe.encodeEd25519PublicKey(r.ed25519());
        }
        function ea(r, y) {
          if (!pe.isValidEd25519PublicKey(r)) throw new Error("address should be a Stellar account ID (G...)");
          if (typeof y != "string") throw new Error("id should be a string representing a number (uint64)");
          return f.MuxedAccount.keyTypeMuxedEd25519(new f.MuxedAccountMed25519({ id: f.Uint64.fromString(y), ed25519: pe.decodeEd25519PublicKey(r) }));
        }
        function _o(r) {
          if (pe.isValidEd25519PublicKey(r)) return r;
          if (!pe.isValidMed25519PublicKey(r)) throw new TypeError("expected muxed account (M...), got ".concat(r));
          var y = Qo(r);
          return pe.encodeEd25519PublicKey(y.med25519().ed25519());
        }
        function Wi(r) {
          if (typeof r != "string" || r.length !== 72) throw new Error("must provide a valid claimable balance id");
        }
        var Ui = i(8287).Buffer, zt = i(8287).Buffer;
        function Et(r, y) {
          if (r >= 0 && r <= 255) return true;
          throw new Error("".concat(y, " value must be between 0 and 255"));
        }
        var vt = i(8287).Buffer;
        function Dt(r) {
          return Dt = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(y) {
            return typeof y;
          } : function(y) {
            return y && typeof Symbol == "function" && y.constructor === Symbol && y !== Symbol.prototype ? "symbol" : typeof y;
          }, Dt(r);
        }
        function de(r) {
          return de = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(y) {
            return typeof y;
          } : function(y) {
            return y && typeof Symbol == "function" && y.constructor === Symbol && y !== Symbol.prototype ? "symbol" : typeof y;
          }, de(r);
        }
        function ae(r, y) {
          for (var N = 0; N < y.length; N++) {
            var Q = y[N];
            Q.enumerable = Q.enumerable || false, Q.configurable = true, "value" in Q && (Q.writable = true), Object.defineProperty(r, Qr(Q.key), Q);
          }
        }
        function Qr(r) {
          var y = function(N, Q) {
            if (de(N) != "object" || !N) return N;
            var _t = N[Symbol.toPrimitive];
            if (_t !== void 0) {
              var Qt = _t.call(N, Q);
              if (de(Qt) != "object") return Qt;
              throw new TypeError("@@toPrimitive must return a primitive value.");
            }
            return String(N);
          }(r, "string");
          return de(y) == "symbol" ? y : y + "";
        }
        var Sn = function() {
          function r(y) {
            if (function(N, Q) {
              if (!(N instanceof Q)) throw new TypeError("Cannot call a class as a function");
            }(this, r), pe.isValidEd25519PublicKey(y)) this._type = "account", this._key = pe.decodeEd25519PublicKey(y);
            else if (pe.isValidContract(y)) this._type = "contract", this._key = pe.decodeContract(y);
            else if (pe.isValidMed25519PublicKey(y)) this._type = "muxedAccount", this._key = pe.decodeMed25519PublicKey(y);
            else if (pe.isValidClaimableBalance(y)) this._type = "claimableBalance", this._key = pe.decodeClaimableBalance(y);
            else {
              if (!pe.isValidLiquidityPool(y)) throw new Error("Unsupported address type: ".concat(y));
              this._type = "liquidityPool", this._key = pe.decodeLiquidityPool(y);
            }
          }
          return function(y, N, Q) {
            return N && ae(y.prototype, N), Q && ae(y, Q), Object.defineProperty(y, "prototype", { writable: false }), y;
          }(r, [{ key: "toString", value: function() {
            switch (this._type) {
              case "account":
                return pe.encodeEd25519PublicKey(this._key);
              case "contract":
                return pe.encodeContract(this._key);
              case "claimableBalance":
                return pe.encodeClaimableBalance(this._key);
              case "liquidityPool":
                return pe.encodeLiquidityPool(this._key);
              case "muxedAccount":
                return pe.encodeMed25519PublicKey(this._key);
              default:
                throw new Error("Unsupported address type");
            }
          } }, { key: "toScVal", value: function() {
            return f.ScVal.scvAddress(this.toScAddress());
          } }, { key: "toScAddress", value: function() {
            switch (this._type) {
              case "account":
                return f.ScAddress.scAddressTypeAccount(f.PublicKey.publicKeyTypeEd25519(this._key));
              case "contract":
                return f.ScAddress.scAddressTypeContract(this._key);
              case "liquidityPool":
                return f.ScAddress.scAddressTypeLiquidityPool(this._key);
              case "claimableBalance":
                return f.ScAddress.scAddressTypeClaimableBalance(new f.ClaimableBalanceId("claimableBalanceIdTypeV".concat(this._key.at(0)), this._key.subarray(1)));
              case "muxedAccount":
                return f.ScAddress.scAddressTypeMuxedAccount(f.MuxedEd25519Account.fromXDR(this._key));
              default:
                throw new Error("Unsupported address type: ".concat(this._type));
            }
          } }, { key: "toBuffer", value: function() {
            return this._key;
          } }], [{ key: "fromString", value: function(y) {
            return new r(y);
          } }, { key: "account", value: function(y) {
            return new r(pe.encodeEd25519PublicKey(y));
          } }, { key: "contract", value: function(y) {
            return new r(pe.encodeContract(y));
          } }, { key: "claimableBalance", value: function(y) {
            return new r(pe.encodeClaimableBalance(y));
          } }, { key: "liquidityPool", value: function(y) {
            return new r(pe.encodeLiquidityPool(y));
          } }, { key: "muxedAccount", value: function(y) {
            return new r(pe.encodeMed25519PublicKey(y));
          } }, { key: "fromScVal", value: function(y) {
            return r.fromScAddress(y.address());
          } }, { key: "fromScAddress", value: function(y) {
            switch (y.switch().value) {
              case f.ScAddressType.scAddressTypeAccount().value:
                return r.account(y.accountId().ed25519());
              case f.ScAddressType.scAddressTypeContract().value:
                return r.contract(y.contractId());
              case f.ScAddressType.scAddressTypeMuxedAccount().value:
                return r.muxedAccount(y.muxedAccount());
              case f.ScAddressType.scAddressTypeClaimableBalance().value:
                return r.claimableBalance(y.claimableBalanceId());
              case f.ScAddressType.scAddressTypeLiquidityPool().value:
                return r.liquidityPool(y.liquidityPoolId());
              default:
                throw new Error("Unsupported address type: ".concat(y.switch().name));
            }
          } }]);
        }(), fn = i(8287).Buffer;
        function Bn(r, y) {
          return function(N) {
            if (Array.isArray(N)) return N;
          }(r) || function(N, Q) {
            var _t = N == null ? null : typeof Symbol < "u" && N[Symbol.iterator] || N["@@iterator"];
            if (_t != null) {
              var Qt, Ce, Le, Qe, Sr = [], Kt = true, re = false;
              try {
                if (Le = (_t = _t.call(N)).next, Q !== 0) for (; !(Kt = (Qt = Le.call(_t)).done) && (Sr.push(Qt.value), Sr.length !== Q); Kt = true) ;
              } catch (fe) {
                re = true, Ce = fe;
              } finally {
                try {
                  if (!Kt && _t.return != null && (Qe = _t.return(), Object(Qe) !== Qe)) return;
                } finally {
                  if (re) throw Ce;
                }
              }
              return Sr;
            }
          }(r, y) || function(N, Q) {
            if (N) {
              if (typeof N == "string") return Do(N, Q);
              var _t = {}.toString.call(N).slice(8, -1);
              return _t === "Object" && N.constructor && (_t = N.constructor.name), _t === "Map" || _t === "Set" ? Array.from(N) : _t === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(_t) ? Do(N, Q) : void 0;
            }
          }(r, y) || function() {
            throw new TypeError(`Invalid attempt to destructure non-iterable instance.
In order to be iterable, non-array objects must have a [Symbol.iterator]() method.`);
          }();
        }
        function Do(r, y) {
          (y == null || y > r.length) && (y = r.length);
          for (var N = 0, Q = Array(y); N < y; N++) Q[N] = r[N];
          return Q;
        }
        function go(r) {
          return go = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(y) {
            return typeof y;
          } : function(y) {
            return y && typeof Symbol == "function" && y.constructor === Symbol && y !== Symbol.prototype ? "symbol" : typeof y;
          }, go(r);
        }
        function Fn(r, y) {
          for (var N = 0; N < y.length; N++) {
            var Q = y[N];
            Q.enumerable = Q.enumerable || false, Q.configurable = true, "value" in Q && (Q.writable = true), Object.defineProperty(r, No(Q.key), Q);
          }
        }
        function No(r) {
          var y = function(N, Q) {
            if (go(N) != "object" || !N) return N;
            var _t = N[Symbol.toPrimitive];
            if (_t !== void 0) {
              var Qt = _t.call(N, Q);
              if (go(Qt) != "object") return Qt;
              throw new TypeError("@@toPrimitive must return a primitive value.");
            }
            return String(N);
          }(r, "string");
          return go(y) == "symbol" ? y : y + "";
        }
        var Fo = 1e7, Vo = 1, bi = 2, gi = 4, ci = 8, me = function() {
          return function(r, y, N) {
            return N && Fn(r, N), Object.defineProperty(r, "prototype", { writable: false }), r;
          }(function r() {
            (function(y, N) {
              if (!(y instanceof N)) throw new TypeError("Cannot call a class as a function");
            })(this, r);
          }, null, [{ key: "setSourceAccount", value: function(r, y) {
            if (y.source) try {
              r.sourceAccount = Qo(y.source);
            } catch {
              throw new Error("Source address is invalid");
            }
          } }, { key: "fromXDRObject", value: function(r) {
            var y = {};
            r.sourceAccount() && (y.source = Si(r.sourceAccount()));
            var N = r.body().value(), Q = r.body().switch().name;
            switch (Q) {
              case "createAccount":
                y.type = "createAccount", y.destination = Ke(N.destination()), y.startingBalance = this._fromXDRAmount(N.startingBalance());
                break;
              case "payment":
                y.type = "payment", y.destination = Si(N.destination()), y.asset = Rn.fromOperation(N.asset()), y.amount = this._fromXDRAmount(N.amount());
                break;
              case "pathPaymentStrictReceive":
                y.type = "pathPaymentStrictReceive", y.sendAsset = Rn.fromOperation(N.sendAsset()), y.sendMax = this._fromXDRAmount(N.sendMax()), y.destination = Si(N.destination()), y.destAsset = Rn.fromOperation(N.destAsset()), y.destAmount = this._fromXDRAmount(N.destAmount()), y.path = [];
                var _t = N.path();
                Object.keys(_t).forEach(function(Re) {
                  y.path.push(Rn.fromOperation(_t[Re]));
                });
                break;
              case "pathPaymentStrictSend":
                y.type = "pathPaymentStrictSend", y.sendAsset = Rn.fromOperation(N.sendAsset()), y.sendAmount = this._fromXDRAmount(N.sendAmount()), y.destination = Si(N.destination()), y.destAsset = Rn.fromOperation(N.destAsset()), y.destMin = this._fromXDRAmount(N.destMin()), y.path = [];
                var Qt = N.path();
                Object.keys(Qt).forEach(function(Re) {
                  y.path.push(Rn.fromOperation(Qt[Re]));
                });
                break;
              case "changeTrust":
                y.type = "changeTrust", N.line().switch() === f.AssetType.assetTypePoolShare() ? y.line = mo.fromOperation(N.line()) : y.line = Rn.fromOperation(N.line()), y.limit = this._fromXDRAmount(N.limit());
                break;
              case "allowTrust":
                y.type = "allowTrust", y.trustor = Ke(N.trustor()), y.assetCode = N.asset().value().toString(), y.assetCode = an(y.assetCode, "\0"), y.authorize = N.authorize();
                break;
              case "setOptions":
                if (y.type = "setOptions", N.inflationDest() && (y.inflationDest = Ke(N.inflationDest())), y.clearFlags = N.clearFlags(), y.setFlags = N.setFlags(), y.masterWeight = N.masterWeight(), y.lowThreshold = N.lowThreshold(), y.medThreshold = N.medThreshold(), y.highThreshold = N.highThreshold(), y.homeDomain = N.homeDomain() !== void 0 ? N.homeDomain().toString("ascii") : void 0, N.signer()) {
                  var Ce = {}, Le = N.signer().key().arm();
                  if (Le === "ed25519") Ce.ed25519PublicKey = Ke(N.signer().key());
                  else if (Le === "preAuthTx") Ce.preAuthTx = N.signer().key().preAuthTx();
                  else if (Le === "hashX") Ce.sha256Hash = N.signer().key().hashX();
                  else if (Le === "ed25519SignedPayload") {
                    var Qe = N.signer().key().ed25519SignedPayload();
                    Ce.ed25519SignedPayload = pe.encodeSignedPayload(Qe.toXDR());
                  }
                  Ce.weight = N.signer().weight(), y.signer = Ce;
                }
                break;
              case "manageOffer":
              case "manageSellOffer":
                y.type = "manageSellOffer", y.selling = Rn.fromOperation(N.selling()), y.buying = Rn.fromOperation(N.buying()), y.amount = this._fromXDRAmount(N.amount()), y.price = this._fromXDRPrice(N.price()), y.offerId = N.offerId().toString();
                break;
              case "manageBuyOffer":
                y.type = "manageBuyOffer", y.selling = Rn.fromOperation(N.selling()), y.buying = Rn.fromOperation(N.buying()), y.buyAmount = this._fromXDRAmount(N.buyAmount()), y.price = this._fromXDRPrice(N.price()), y.offerId = N.offerId().toString();
                break;
              case "createPassiveOffer":
              case "createPassiveSellOffer":
                y.type = "createPassiveSellOffer", y.selling = Rn.fromOperation(N.selling()), y.buying = Rn.fromOperation(N.buying()), y.amount = this._fromXDRAmount(N.amount()), y.price = this._fromXDRPrice(N.price());
                break;
              case "accountMerge":
                y.type = "accountMerge", y.destination = Si(N);
                break;
              case "manageData":
                y.type = "manageData", y.name = N.dataName().toString("ascii"), y.value = N.dataValue();
                break;
              case "inflation":
                y.type = "inflation";
                break;
              case "bumpSequence":
                y.type = "bumpSequence", y.bumpTo = N.bumpTo().toString();
                break;
              case "createClaimableBalance":
                y.type = "createClaimableBalance", y.asset = Rn.fromOperation(N.asset()), y.amount = this._fromXDRAmount(N.amount()), y.claimants = [], N.claimants().forEach(function(Re) {
                  y.claimants.push(Lo.fromXDR(Re));
                });
                break;
              case "claimClaimableBalance":
                y.type = "claimClaimableBalance", y.balanceId = N.toXDR("hex");
                break;
              case "beginSponsoringFutureReserves":
                y.type = "beginSponsoringFutureReserves", y.sponsoredId = Ke(N.sponsoredId());
                break;
              case "endSponsoringFutureReserves":
                y.type = "endSponsoringFutureReserves";
                break;
              case "revokeSponsorship":
                (function(Re, Te) {
                  switch (Re.switch().name) {
                    case "revokeSponsorshipLedgerEntry":
                      var Fe = Re.ledgerKey();
                      switch (Fe.switch().name) {
                        case f.LedgerEntryType.account().name:
                          Te.type = "revokeAccountSponsorship", Te.account = Ke(Fe.account().accountId());
                          break;
                        case f.LedgerEntryType.trustline().name:
                          Te.type = "revokeTrustlineSponsorship", Te.account = Ke(Fe.trustLine().accountId());
                          var Xe = Fe.trustLine().asset();
                          Xe.switch() === f.AssetType.assetTypePoolShare() ? Te.asset = yi.fromOperation(Xe) : Te.asset = Rn.fromOperation(Xe);
                          break;
                        case f.LedgerEntryType.offer().name:
                          Te.type = "revokeOfferSponsorship", Te.seller = Ke(Fe.offer().sellerId()), Te.offerId = Fe.offer().offerId().toString();
                          break;
                        case f.LedgerEntryType.data().name:
                          Te.type = "revokeDataSponsorship", Te.account = Ke(Fe.data().accountId()), Te.name = Fe.data().dataName().toString("ascii");
                          break;
                        case f.LedgerEntryType.claimableBalance().name:
                          Te.type = "revokeClaimableBalanceSponsorship", Te.balanceId = Fe.claimableBalance().balanceId().toXDR("hex");
                          break;
                        case f.LedgerEntryType.liquidityPool().name:
                          Te.type = "revokeLiquidityPoolSponsorship", Te.liquidityPoolId = Fe.liquidityPool().liquidityPoolId().toString("hex");
                          break;
                        default:
                          throw new Error("Unknown ledgerKey: ".concat(Re.switch().name));
                      }
                      break;
                    case "revokeSponsorshipSigner":
                      Te.type = "revokeSignerSponsorship", Te.account = Ke(Re.signer().accountId()), Te.signer = function(Ne) {
                        var Be = {};
                        switch (Ne.switch().name) {
                          case f.SignerKeyType.signerKeyTypeEd25519().name:
                            Be.ed25519PublicKey = pe.encodeEd25519PublicKey(Ne.ed25519());
                            break;
                          case f.SignerKeyType.signerKeyTypePreAuthTx().name:
                            Be.preAuthTx = Ne.preAuthTx().toString("hex");
                            break;
                          case f.SignerKeyType.signerKeyTypeHashX().name:
                            Be.sha256Hash = Ne.hashX().toString("hex");
                            break;
                          default:
                            throw new Error("Unknown signerKey: ".concat(Ne.switch().name));
                        }
                        return Be;
                      }(Re.signer().signerKey());
                      break;
                    default:
                      throw new Error("Unknown revokeSponsorship: ".concat(Re.switch().name));
                  }
                })(N, y);
                break;
              case "clawback":
                y.type = "clawback", y.amount = this._fromXDRAmount(N.amount()), y.from = Si(N.from()), y.asset = Rn.fromOperation(N.asset());
                break;
              case "clawbackClaimableBalance":
                y.type = "clawbackClaimableBalance", y.balanceId = N.toXDR("hex");
                break;
              case "setTrustLineFlags":
                y.type = "setTrustLineFlags", y.asset = Rn.fromOperation(N.asset()), y.trustor = Ke(N.trustor());
                var Sr = N.clearFlags(), Kt = N.setFlags(), re = { authorized: f.TrustLineFlags.authorizedFlag(), authorizedToMaintainLiabilities: f.TrustLineFlags.authorizedToMaintainLiabilitiesFlag(), clawbackEnabled: f.TrustLineFlags.trustlineClawbackEnabledFlag() };
                y.flags = {}, Object.keys(re).forEach(function(Re) {
                  var Te;
                  y.flags[Re] = (Te = re[Re].value, !!(Kt & Te) || !(Sr & Te) && void 0);
                });
                break;
              case "liquidityPoolDeposit":
                y.type = "liquidityPoolDeposit", y.liquidityPoolId = N.liquidityPoolId().toString("hex"), y.maxAmountA = this._fromXDRAmount(N.maxAmountA()), y.maxAmountB = this._fromXDRAmount(N.maxAmountB()), y.minPrice = this._fromXDRPrice(N.minPrice()), y.maxPrice = this._fromXDRPrice(N.maxPrice());
                break;
              case "liquidityPoolWithdraw":
                y.type = "liquidityPoolWithdraw", y.liquidityPoolId = N.liquidityPoolId().toString("hex"), y.amount = this._fromXDRAmount(N.amount()), y.minAmountA = this._fromXDRAmount(N.minAmountA()), y.minAmountB = this._fromXDRAmount(N.minAmountB());
                break;
              case "invokeHostFunction":
                var fe;
                y.type = "invokeHostFunction", y.func = N.hostFunction(), y.auth = (fe = N.auth()) !== null && fe !== void 0 ? fe : [];
                break;
              case "extendFootprintTtl":
                y.type = "extendFootprintTtl", y.extendTo = N.extendTo();
                break;
              case "restoreFootprint":
                y.type = "restoreFootprint";
                break;
              default:
                throw new Error("Unknown operation: ".concat(Q));
            }
            return y;
          } }, { key: "isValidAmount", value: function(r) {
            var y, N = arguments.length > 1 && arguments[1] !== void 0 && arguments[1];
            if (typeof r != "string") return false;
            try {
              y = new we(r);
            } catch {
              return false;
            }
            return !(!N && y.isZero() || y.isNegative() || y.times(Fo).gt(new we("9223372036854775807").toString()) || y.decimalPlaces() > 7 || y.isNaN() || !y.isFinite());
          } }, { key: "constructAmountRequirementsError", value: function(r) {
            return "".concat(r, " argument must be of type String, represent a positive number and have at most 7 digits after the decimal");
          } }, { key: "_checkUnsignedIntValue", value: function(r, y) {
            var N = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : null;
            if (y !== void 0) switch (typeof y == "string" && (y = parseFloat(y)), true) {
              case (typeof y != "number" || !Number.isFinite(y) || y % 1 != 0):
                throw new Error("".concat(r, " value is invalid"));
              case y < 0:
                throw new Error("".concat(r, " value must be unsigned"));
              case (!N || N && N(y, r)):
                return y;
              default:
                throw new Error("".concat(r, " value is invalid"));
            }
          } }, { key: "_toXDRAmount", value: function(r) {
            var y = new we(r).times(Fo);
            return u.Hyper.fromString(y.toString());
          } }, { key: "_fromXDRAmount", value: function(r) {
            return new we(r).div(Fo).toFixed(7);
          } }, { key: "_fromXDRPrice", value: function(r) {
            return new we(r.n()).div(new we(r.d())).toString();
          } }, { key: "_toXDRPrice", value: function(r) {
            var y;
            if (r.n && r.d) y = new f.Price(r);
            else {
              var N = function(Q) {
                for (var _t, Qt, Ce = new we(Q), Le = [[new we(0), new we(1)], [new we(1), new we(0)]], Qe = 2; !Ce.gt(gn); ) {
                  _t = Ce.integerValue(we.ROUND_FLOOR), Qt = Ce.minus(_t);
                  var Sr = _t.times(Le[Qe - 1][0]).plus(Le[Qe - 2][0]), Kt = _t.times(Le[Qe - 1][1]).plus(Le[Qe - 2][1]);
                  if (Sr.gt(gn) || Kt.gt(gn) || (Le.push([Sr, Kt]), Qt.eq(0))) break;
                  Ce = new we(1).div(Qt), Qe += 1;
                }
                var re = sr(Le[Le.length - 1], 2), fe = re[0], Re = re[1];
                if (fe.isZero() || Re.isZero()) throw new Error("Couldn't find approximation");
                return [fe.toNumber(), Re.toNumber()];
              }(r);
              y = new f.Price({ n: parseInt(N[0], 10), d: parseInt(N[1], 10) });
            }
            if (y.n() < 0 || y.d() < 0) throw new Error("price must be positive");
            return y;
          } }]);
        }();
        function Ke(r) {
          return pe.encodeEd25519PublicKey(r.ed25519());
        }
        me.accountMerge = function(r) {
          var y = {};
          try {
            y.body = f.OperationBody.accountMerge(Qo(r.destination));
          } catch {
            throw new Error("destination is invalid");
          }
          return this.setSourceAccount(y, r), new f.Operation(y);
        }, me.allowTrust = function(r) {
          if (!pe.isValidEd25519PublicKey(r.trustor)) throw new Error("trustor is invalid");
          var y = {};
          if (y.trustor = Xr.fromPublicKey(r.trustor).xdrAccountId(), r.assetCode.length <= 4) {
            var N = r.assetCode.padEnd(4, "\0");
            y.asset = f.AssetCode.assetTypeCreditAlphanum4(N);
          } else {
            if (!(r.assetCode.length <= 12)) throw new Error("Asset code must be 12 characters at max.");
            var Q = r.assetCode.padEnd(12, "\0");
            y.asset = f.AssetCode.assetTypeCreditAlphanum12(Q);
          }
          typeof r.authorize == "boolean" ? r.authorize ? y.authorize = f.TrustLineFlags.authorizedFlag().value : y.authorize = 0 : y.authorize = r.authorize;
          var _t = new f.AllowTrustOp(y), Qt = {};
          return Qt.body = f.OperationBody.allowTrust(_t), this.setSourceAccount(Qt, r), new f.Operation(Qt);
        }, me.bumpSequence = function(r) {
          var y = {};
          if (typeof r.bumpTo != "string") throw new Error("bumpTo must be a string");
          try {
            new we(r.bumpTo);
          } catch {
            throw new Error("bumpTo must be a stringified number");
          }
          y.bumpTo = u.Hyper.fromString(r.bumpTo);
          var N = new f.BumpSequenceOp(y), Q = {};
          return Q.body = f.OperationBody.bumpSequence(N), this.setSourceAccount(Q, r), new f.Operation(Q);
        }, me.changeTrust = function(r) {
          var y = {};
          if (r.asset instanceof Rn) y.line = r.asset.toChangeTrustXDRObject();
          else {
            if (!(r.asset instanceof mo)) throw new TypeError("asset must be Asset or LiquidityPoolAsset");
            y.line = r.asset.toXDRObject();
          }
          if (r.limit !== void 0 && !this.isValidAmount(r.limit, true)) throw new TypeError(this.constructAmountRequirementsError("limit"));
          r.limit ? y.limit = this._toXDRAmount(r.limit) : y.limit = u.Hyper.fromString(new we("9223372036854775807").toString()), r.source && (y.source = r.source.masterKeypair);
          var N = new f.ChangeTrustOp(y), Q = {};
          return Q.body = f.OperationBody.changeTrust(N), this.setSourceAccount(Q, r), new f.Operation(Q);
        }, me.createAccount = function(r) {
          if (!pe.isValidEd25519PublicKey(r.destination)) throw new Error("destination is invalid");
          if (!this.isValidAmount(r.startingBalance, true)) throw new TypeError(this.constructAmountRequirementsError("startingBalance"));
          var y = {};
          y.destination = Xr.fromPublicKey(r.destination).xdrAccountId(), y.startingBalance = this._toXDRAmount(r.startingBalance);
          var N = new f.CreateAccountOp(y), Q = {};
          return Q.body = f.OperationBody.createAccount(N), this.setSourceAccount(Q, r), new f.Operation(Q);
        }, me.createClaimableBalance = function(r) {
          if (!(r.asset instanceof Rn)) throw new Error("must provide an asset for create claimable balance operation");
          if (!this.isValidAmount(r.amount)) throw new TypeError(this.constructAmountRequirementsError("amount"));
          if (!Array.isArray(r.claimants) || r.claimants.length === 0) throw new Error("must provide at least one claimant");
          var y = {};
          y.asset = r.asset.toXDRObject(), y.amount = this._toXDRAmount(r.amount), y.claimants = Object.values(r.claimants).map(function(_t) {
            return _t.toXDRObject();
          });
          var N = new f.CreateClaimableBalanceOp(y), Q = {};
          return Q.body = f.OperationBody.createClaimableBalance(N), this.setSourceAccount(Q, r), new f.Operation(Q);
        }, me.claimClaimableBalance = function() {
          var r = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};
          Wi(r.balanceId);
          var y = {};
          y.balanceId = f.ClaimableBalanceId.fromXDR(r.balanceId, "hex");
          var N = new f.ClaimClaimableBalanceOp(y), Q = {};
          return Q.body = f.OperationBody.claimClaimableBalance(N), this.setSourceAccount(Q, r), new f.Operation(Q);
        }, me.clawbackClaimableBalance = function() {
          var r = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};
          Wi(r.balanceId);
          var y = { balanceId: f.ClaimableBalanceId.fromXDR(r.balanceId, "hex") }, N = { body: f.OperationBody.clawbackClaimableBalance(new f.ClawbackClaimableBalanceOp(y)) };
          return this.setSourceAccount(N, r), new f.Operation(N);
        }, me.createPassiveSellOffer = function(r) {
          var y = {};
          if (y.selling = r.selling.toXDRObject(), y.buying = r.buying.toXDRObject(), !this.isValidAmount(r.amount)) throw new TypeError(this.constructAmountRequirementsError("amount"));
          if (y.amount = this._toXDRAmount(r.amount), r.price === void 0) throw new TypeError("price argument is required");
          y.price = this._toXDRPrice(r.price);
          var N = new f.CreatePassiveSellOfferOp(y), Q = {};
          return Q.body = f.OperationBody.createPassiveSellOffer(N), this.setSourceAccount(Q, r), new f.Operation(Q);
        }, me.inflation = function() {
          var r = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {}, y = {};
          return y.body = f.OperationBody.inflation(), this.setSourceAccount(y, r), new f.Operation(y);
        }, me.manageData = function(r) {
          var y = {};
          if (!(typeof r.name == "string" && r.name.length <= 64)) throw new Error("name must be a string, up to 64 characters");
          if (y.dataName = r.name, typeof r.value != "string" && !Ui.isBuffer(r.value) && r.value !== null) throw new Error("value must be a string, Buffer or null");
          if (typeof r.value == "string" ? y.dataValue = Ui.from(r.value) : y.dataValue = r.value, y.dataValue !== null && y.dataValue.length > 64) throw new Error("value cannot be longer that 64 bytes");
          var N = new f.ManageDataOp(y), Q = {};
          return Q.body = f.OperationBody.manageData(N), this.setSourceAccount(Q, r), new f.Operation(Q);
        }, me.manageSellOffer = function(r) {
          var y = {};
          if (y.selling = r.selling.toXDRObject(), y.buying = r.buying.toXDRObject(), !this.isValidAmount(r.amount, true)) throw new TypeError(this.constructAmountRequirementsError("amount"));
          if (y.amount = this._toXDRAmount(r.amount), r.price === void 0) throw new TypeError("price argument is required");
          y.price = this._toXDRPrice(r.price), r.offerId !== void 0 ? r.offerId = r.offerId.toString() : r.offerId = "0", y.offerId = u.Hyper.fromString(r.offerId);
          var N = new f.ManageSellOfferOp(y), Q = {};
          return Q.body = f.OperationBody.manageSellOffer(N), this.setSourceAccount(Q, r), new f.Operation(Q);
        }, me.manageBuyOffer = function(r) {
          var y = {};
          if (y.selling = r.selling.toXDRObject(), y.buying = r.buying.toXDRObject(), !this.isValidAmount(r.buyAmount, true)) throw new TypeError(this.constructAmountRequirementsError("buyAmount"));
          if (y.buyAmount = this._toXDRAmount(r.buyAmount), r.price === void 0) throw new TypeError("price argument is required");
          y.price = this._toXDRPrice(r.price), r.offerId !== void 0 ? r.offerId = r.offerId.toString() : r.offerId = "0", y.offerId = u.Hyper.fromString(r.offerId);
          var N = new f.ManageBuyOfferOp(y), Q = {};
          return Q.body = f.OperationBody.manageBuyOffer(N), this.setSourceAccount(Q, r), new f.Operation(Q);
        }, me.pathPaymentStrictReceive = function(r) {
          switch (true) {
            case !r.sendAsset:
              throw new Error("Must specify a send asset");
            case !this.isValidAmount(r.sendMax):
              throw new TypeError(this.constructAmountRequirementsError("sendMax"));
            case !r.destAsset:
              throw new Error("Must provide a destAsset for a payment operation");
            case !this.isValidAmount(r.destAmount):
              throw new TypeError(this.constructAmountRequirementsError("destAmount"));
          }
          var y = {};
          y.sendAsset = r.sendAsset.toXDRObject(), y.sendMax = this._toXDRAmount(r.sendMax);
          try {
            y.destination = Qo(r.destination);
          } catch {
            throw new Error("destination is invalid");
          }
          y.destAsset = r.destAsset.toXDRObject(), y.destAmount = this._toXDRAmount(r.destAmount);
          var N = r.path ? r.path : [];
          y.path = N.map(function(Qt) {
            return Qt.toXDRObject();
          });
          var Q = new f.PathPaymentStrictReceiveOp(y), _t = {};
          return _t.body = f.OperationBody.pathPaymentStrictReceive(Q), this.setSourceAccount(_t, r), new f.Operation(_t);
        }, me.pathPaymentStrictSend = function(r) {
          switch (true) {
            case !r.sendAsset:
              throw new Error("Must specify a send asset");
            case !this.isValidAmount(r.sendAmount):
              throw new TypeError(this.constructAmountRequirementsError("sendAmount"));
            case !r.destAsset:
              throw new Error("Must provide a destAsset for a payment operation");
            case !this.isValidAmount(r.destMin):
              throw new TypeError(this.constructAmountRequirementsError("destMin"));
          }
          var y = {};
          y.sendAsset = r.sendAsset.toXDRObject(), y.sendAmount = this._toXDRAmount(r.sendAmount);
          try {
            y.destination = Qo(r.destination);
          } catch {
            throw new Error("destination is invalid");
          }
          y.destAsset = r.destAsset.toXDRObject(), y.destMin = this._toXDRAmount(r.destMin);
          var N = r.path ? r.path : [];
          y.path = N.map(function(Qt) {
            return Qt.toXDRObject();
          });
          var Q = new f.PathPaymentStrictSendOp(y), _t = {};
          return _t.body = f.OperationBody.pathPaymentStrictSend(Q), this.setSourceAccount(_t, r), new f.Operation(_t);
        }, me.payment = function(r) {
          if (!r.asset) throw new Error("Must provide an asset for a payment operation");
          if (!this.isValidAmount(r.amount)) throw new TypeError(this.constructAmountRequirementsError("amount"));
          var y = {};
          try {
            y.destination = Qo(r.destination);
          } catch {
            throw new Error("destination is invalid");
          }
          y.asset = r.asset.toXDRObject(), y.amount = this._toXDRAmount(r.amount);
          var N = new f.PaymentOp(y), Q = {};
          return Q.body = f.OperationBody.payment(N), this.setSourceAccount(Q, r), new f.Operation(Q);
        }, me.setOptions = function(r) {
          var y = {};
          if (r.inflationDest) {
            if (!pe.isValidEd25519PublicKey(r.inflationDest)) throw new Error("inflationDest is invalid");
            y.inflationDest = Xr.fromPublicKey(r.inflationDest).xdrAccountId();
          }
          if (y.clearFlags = this._checkUnsignedIntValue("clearFlags", r.clearFlags), y.setFlags = this._checkUnsignedIntValue("setFlags", r.setFlags), y.masterWeight = this._checkUnsignedIntValue("masterWeight", r.masterWeight, Et), y.lowThreshold = this._checkUnsignedIntValue("lowThreshold", r.lowThreshold, Et), y.medThreshold = this._checkUnsignedIntValue("medThreshold", r.medThreshold, Et), y.highThreshold = this._checkUnsignedIntValue("highThreshold", r.highThreshold, Et), r.homeDomain !== void 0 && typeof r.homeDomain != "string") throw new TypeError("homeDomain argument must be of type String");
          if (y.homeDomain = r.homeDomain, r.signer) {
            var N, Q = this._checkUnsignedIntValue("signer.weight", r.signer.weight, Et), _t = 0;
            if (r.signer.ed25519PublicKey) {
              if (!pe.isValidEd25519PublicKey(r.signer.ed25519PublicKey)) throw new Error("signer.ed25519PublicKey is invalid.");
              var Qt = pe.decodeEd25519PublicKey(r.signer.ed25519PublicKey);
              N = new f.SignerKey.signerKeyTypeEd25519(Qt), _t += 1;
            }
            if (r.signer.preAuthTx) {
              if (typeof r.signer.preAuthTx == "string" && (r.signer.preAuthTx = zt.from(r.signer.preAuthTx, "hex")), !zt.isBuffer(r.signer.preAuthTx) || r.signer.preAuthTx.length !== 32) throw new Error("signer.preAuthTx must be 32 bytes Buffer.");
              N = new f.SignerKey.signerKeyTypePreAuthTx(r.signer.preAuthTx), _t += 1;
            }
            if (r.signer.sha256Hash) {
              if (typeof r.signer.sha256Hash == "string" && (r.signer.sha256Hash = zt.from(r.signer.sha256Hash, "hex")), !zt.isBuffer(r.signer.sha256Hash) || r.signer.sha256Hash.length !== 32) throw new Error("signer.sha256Hash must be 32 bytes Buffer.");
              N = new f.SignerKey.signerKeyTypeHashX(r.signer.sha256Hash), _t += 1;
            }
            if (r.signer.ed25519SignedPayload) {
              if (!pe.isValidSignedPayload(r.signer.ed25519SignedPayload)) throw new Error("signer.ed25519SignedPayload is invalid.");
              var Ce = pe.decodeSignedPayload(r.signer.ed25519SignedPayload), Le = f.SignerKeyEd25519SignedPayload.fromXDR(Ce);
              N = f.SignerKey.signerKeyTypeEd25519SignedPayload(Le), _t += 1;
            }
            if (_t !== 1) throw new Error("Signer object must contain exactly one of signer.ed25519PublicKey, signer.sha256Hash, signer.preAuthTx.");
            y.signer = new f.Signer({ key: N, weight: Q });
          }
          var Qe = new f.SetOptionsOp(y), Sr = {};
          return Sr.body = f.OperationBody.setOptions(Qe), this.setSourceAccount(Sr, r), new f.Operation(Sr);
        }, me.beginSponsoringFutureReserves = function() {
          var r = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};
          if (!pe.isValidEd25519PublicKey(r.sponsoredId)) throw new Error("sponsoredId is invalid");
          var y = new f.BeginSponsoringFutureReservesOp({ sponsoredId: Xr.fromPublicKey(r.sponsoredId).xdrAccountId() }), N = {};
          return N.body = f.OperationBody.beginSponsoringFutureReserves(y), this.setSourceAccount(N, r), new f.Operation(N);
        }, me.endSponsoringFutureReserves = function() {
          var r = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {}, y = {};
          return y.body = f.OperationBody.endSponsoringFutureReserves(), this.setSourceAccount(y, r), new f.Operation(y);
        }, me.revokeAccountSponsorship = function() {
          var r = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};
          if (!pe.isValidEd25519PublicKey(r.account)) throw new Error("account is invalid");
          var y = f.LedgerKey.account(new f.LedgerKeyAccount({ accountId: Xr.fromPublicKey(r.account).xdrAccountId() })), N = f.RevokeSponsorshipOp.revokeSponsorshipLedgerEntry(y), Q = {};
          return Q.body = f.OperationBody.revokeSponsorship(N), this.setSourceAccount(Q, r), new f.Operation(Q);
        }, me.revokeTrustlineSponsorship = function() {
          var r, y = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};
          if (!pe.isValidEd25519PublicKey(y.account)) throw new Error("account is invalid");
          if (y.asset instanceof Rn) r = y.asset.toTrustLineXDRObject();
          else {
            if (!(y.asset instanceof yi)) throw new TypeError("asset must be an Asset or LiquidityPoolId");
            r = y.asset.toXDRObject();
          }
          var N = f.LedgerKey.trustline(new f.LedgerKeyTrustLine({ accountId: Xr.fromPublicKey(y.account).xdrAccountId(), asset: r })), Q = f.RevokeSponsorshipOp.revokeSponsorshipLedgerEntry(N), _t = {};
          return _t.body = f.OperationBody.revokeSponsorship(Q), this.setSourceAccount(_t, y), new f.Operation(_t);
        }, me.revokeOfferSponsorship = function() {
          var r = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};
          if (!pe.isValidEd25519PublicKey(r.seller)) throw new Error("seller is invalid");
          if (typeof r.offerId != "string") throw new Error("offerId is invalid");
          var y = f.LedgerKey.offer(new f.LedgerKeyOffer({ sellerId: Xr.fromPublicKey(r.seller).xdrAccountId(), offerId: f.Int64.fromString(r.offerId) })), N = f.RevokeSponsorshipOp.revokeSponsorshipLedgerEntry(y), Q = {};
          return Q.body = f.OperationBody.revokeSponsorship(N), this.setSourceAccount(Q, r), new f.Operation(Q);
        }, me.revokeDataSponsorship = function() {
          var r = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};
          if (!pe.isValidEd25519PublicKey(r.account)) throw new Error("account is invalid");
          if (typeof r.name != "string" || r.name.length > 64) throw new Error("name must be a string, up to 64 characters");
          var y = f.LedgerKey.data(new f.LedgerKeyData({ accountId: Xr.fromPublicKey(r.account).xdrAccountId(), dataName: r.name })), N = f.RevokeSponsorshipOp.revokeSponsorshipLedgerEntry(y), Q = {};
          return Q.body = f.OperationBody.revokeSponsorship(N), this.setSourceAccount(Q, r), new f.Operation(Q);
        }, me.revokeClaimableBalanceSponsorship = function() {
          var r = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};
          if (typeof r.balanceId != "string") throw new Error("balanceId is invalid");
          var y = f.LedgerKey.claimableBalance(new f.LedgerKeyClaimableBalance({ balanceId: f.ClaimableBalanceId.fromXDR(r.balanceId, "hex") })), N = f.RevokeSponsorshipOp.revokeSponsorshipLedgerEntry(y), Q = {};
          return Q.body = f.OperationBody.revokeSponsorship(N), this.setSourceAccount(Q, r), new f.Operation(Q);
        }, me.revokeLiquidityPoolSponsorship = function() {
          var r = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};
          if (typeof r.liquidityPoolId != "string") throw new Error("liquidityPoolId is invalid");
          var y = f.LedgerKey.liquidityPool(new f.LedgerKeyLiquidityPool({ liquidityPoolId: f.PoolId.fromXDR(r.liquidityPoolId, "hex") })), N = f.RevokeSponsorshipOp.revokeSponsorshipLedgerEntry(y), Q = { body: f.OperationBody.revokeSponsorship(N) };
          return this.setSourceAccount(Q, r), new f.Operation(Q);
        }, me.revokeSignerSponsorship = function() {
          var r, y = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};
          if (!pe.isValidEd25519PublicKey(y.account)) throw new Error("account is invalid");
          if (y.signer.ed25519PublicKey) {
            if (!pe.isValidEd25519PublicKey(y.signer.ed25519PublicKey)) throw new Error("signer.ed25519PublicKey is invalid.");
            var N = pe.decodeEd25519PublicKey(y.signer.ed25519PublicKey);
            r = new f.SignerKey.signerKeyTypeEd25519(N);
          } else if (y.signer.preAuthTx) {
            var Q;
            if (Q = typeof y.signer.preAuthTx == "string" ? vt.from(y.signer.preAuthTx, "hex") : y.signer.preAuthTx, !vt.isBuffer(Q) || Q.length !== 32) throw new Error("signer.preAuthTx must be 32 bytes Buffer.");
            r = new f.SignerKey.signerKeyTypePreAuthTx(Q);
          } else {
            if (!y.signer.sha256Hash) throw new Error("signer is invalid");
            var _t;
            if (_t = typeof y.signer.sha256Hash == "string" ? vt.from(y.signer.sha256Hash, "hex") : y.signer.sha256Hash, !vt.isBuffer(_t) || _t.length !== 32) throw new Error("signer.sha256Hash must be 32 bytes Buffer.");
            r = new f.SignerKey.signerKeyTypeHashX(_t);
          }
          var Qt = new f.RevokeSponsorshipOpSigner({ accountId: Xr.fromPublicKey(y.account).xdrAccountId(), signerKey: r }), Ce = f.RevokeSponsorshipOp.revokeSponsorshipSigner(Qt), Le = {};
          return Le.body = f.OperationBody.revokeSponsorship(Ce), this.setSourceAccount(Le, y), new f.Operation(Le);
        }, me.clawback = function(r) {
          var y = {};
          if (!this.isValidAmount(r.amount)) throw new TypeError(this.constructAmountRequirementsError("amount"));
          y.amount = this._toXDRAmount(r.amount), y.asset = r.asset.toXDRObject();
          try {
            y.from = Qo(r.from);
          } catch {
            throw new Error("from address is invalid");
          }
          var N = { body: f.OperationBody.clawback(new f.ClawbackOp(y)) };
          return this.setSourceAccount(N, r), new f.Operation(N);
        }, me.setTrustLineFlags = function() {
          var r = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {}, y = {};
          if (Dt(r.flags) !== "object" || Object.keys(r.flags).length === 0) throw new Error("opts.flags must be a map of boolean flags to modify");
          var N = { authorized: f.TrustLineFlags.authorizedFlag(), authorizedToMaintainLiabilities: f.TrustLineFlags.authorizedToMaintainLiabilitiesFlag(), clawbackEnabled: f.TrustLineFlags.trustlineClawbackEnabledFlag() }, Q = 0, _t = 0;
          Object.keys(r.flags).forEach(function(Ce) {
            if (!Object.prototype.hasOwnProperty.call(N, Ce)) throw new Error("unsupported flag name specified: ".concat(Ce));
            var Le = r.flags[Ce], Qe = N[Ce].value;
            Le === true ? _t |= Qe : Le === false && (Q |= Qe);
          }), y.trustor = Xr.fromPublicKey(r.trustor).xdrAccountId(), y.asset = r.asset.toXDRObject(), y.clearFlags = Q, y.setFlags = _t;
          var Qt = { body: f.OperationBody.setTrustLineFlags(new f.SetTrustLineFlagsOp(y)) };
          return this.setSourceAccount(Qt, r), new f.Operation(Qt);
        }, me.liquidityPoolDeposit = function() {
          var r = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {}, y = r.liquidityPoolId, N = r.maxAmountA, Q = r.maxAmountB, _t = r.minPrice, Qt = r.maxPrice, Ce = {};
          if (!y) throw new TypeError("liquidityPoolId argument is required");
          if (Ce.liquidityPoolId = f.PoolId.fromXDR(y, "hex"), !this.isValidAmount(N, true)) throw new TypeError(this.constructAmountRequirementsError("maxAmountA"));
          if (Ce.maxAmountA = this._toXDRAmount(N), !this.isValidAmount(Q, true)) throw new TypeError(this.constructAmountRequirementsError("maxAmountB"));
          if (Ce.maxAmountB = this._toXDRAmount(Q), _t === void 0) throw new TypeError("minPrice argument is required");
          if (Ce.minPrice = this._toXDRPrice(_t), Qt === void 0) throw new TypeError("maxPrice argument is required");
          Ce.maxPrice = this._toXDRPrice(Qt);
          var Le = new f.LiquidityPoolDepositOp(Ce), Qe = { body: f.OperationBody.liquidityPoolDeposit(Le) };
          return this.setSourceAccount(Qe, r), new f.Operation(Qe);
        }, me.liquidityPoolWithdraw = function() {
          var r = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {}, y = {};
          if (!r.liquidityPoolId) throw new TypeError("liquidityPoolId argument is required");
          if (y.liquidityPoolId = f.PoolId.fromXDR(r.liquidityPoolId, "hex"), !this.isValidAmount(r.amount)) throw new TypeError(this.constructAmountRequirementsError("amount"));
          if (y.amount = this._toXDRAmount(r.amount), !this.isValidAmount(r.minAmountA, true)) throw new TypeError(this.constructAmountRequirementsError("minAmountA"));
          if (y.minAmountA = this._toXDRAmount(r.minAmountA), !this.isValidAmount(r.minAmountB, true)) throw new TypeError(this.constructAmountRequirementsError("minAmountB"));
          y.minAmountB = this._toXDRAmount(r.minAmountB);
          var N = new f.LiquidityPoolWithdrawOp(y), Q = { body: f.OperationBody.liquidityPoolWithdraw(N) };
          return this.setSourceAccount(Q, r), new f.Operation(Q);
        }, me.invokeHostFunction = function(r) {
          if (!r.func) throw new TypeError("host function invocation ('func') required (got ".concat(JSON.stringify(r), ")"));
          r.func.switch().value === f.HostFunctionType.hostFunctionTypeInvokeContract().value && r.func.invokeContract().args().forEach(function(Q) {
            var _t;
            try {
              _t = Sn.fromScVal(Q);
            } catch {
              return;
            }
            switch (_t._type) {
              case "claimableBalance":
              case "liquidityPool":
                throw new TypeError("claimable balances and liquidity pools cannot be arguments to invokeHostFunction");
            }
          });
          var y = new f.InvokeHostFunctionOp({ hostFunction: r.func, auth: r.auth || [] }), N = { body: f.OperationBody.invokeHostFunction(y) };
          return this.setSourceAccount(N, r), new f.Operation(N);
        }, me.extendFootprintTtl = function(r) {
          var y;
          if (((y = r.extendTo) !== null && y !== void 0 ? y : -1) <= 0) throw new RangeError("extendTo has to be positive");
          var N = new f.ExtendFootprintTtlOp({ ext: new f.ExtensionPoint(0), extendTo: r.extendTo }), Q = { body: f.OperationBody.extendFootprintTtl(N) };
          return this.setSourceAccount(Q, r), new f.Operation(Q);
        }, me.restoreFootprint = function() {
          var r = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {}, y = new f.RestoreFootprintOp({ ext: new f.ExtensionPoint(0) }), N = { body: f.OperationBody.restoreFootprint(y) };
          return this.setSourceAccount(N, r ?? {}), new f.Operation(N);
        }, me.createStellarAssetContract = function(r) {
          var y = r.asset;
          if (typeof y == "string") {
            var N = Bn(y.split(":"), 2), Q = N[0], _t = N[1];
            y = new Rn(Q, _t);
          }
          if (!(y instanceof Rn)) throw new TypeError("expected Asset in 'opts.asset', got ".concat(y));
          return this.invokeHostFunction({ source: r.source, auth: r.auth, func: f.HostFunction.hostFunctionTypeCreateContract(new f.CreateContractArgs({ executable: f.ContractExecutable.contractExecutableStellarAsset(), contractIdPreimage: f.ContractIdPreimage.contractIdPreimageFromAsset(y.toXDRObject()) })) });
        }, me.invokeContractFunction = function(r) {
          var y = new Sn(r.contract);
          if (y._type !== "contract") throw new TypeError("expected contract strkey instance, got ".concat(y));
          return this.invokeHostFunction({ source: r.source, auth: r.auth, func: f.HostFunction.hostFunctionTypeInvokeContract(new f.InvokeContractArgs({ contractAddress: y.toScAddress(), functionName: r.function, args: r.args })) });
        }, me.createCustomContract = function(r) {
          var y, N = fn.from(r.salt || Xr.random().xdrPublicKey().value());
          if (!r.wasmHash || r.wasmHash.length !== 32) throw new TypeError("expected hash(contract WASM) in 'opts.wasmHash', got ".concat(r.wasmHash));
          if (N.length !== 32) throw new TypeError("expected 32-byte salt in 'opts.salt', got ".concat(r.wasmHash));
          return this.invokeHostFunction({ source: r.source, auth: r.auth, func: f.HostFunction.hostFunctionTypeCreateContractV2(new f.CreateContractArgsV2({ executable: f.ContractExecutable.contractExecutableWasm(fn.from(r.wasmHash)), contractIdPreimage: f.ContractIdPreimage.contractIdPreimageFromAddress(new f.ContractIdPreimageFromAddress({ address: r.address.toScAddress(), salt: N })), constructorArgs: (y = r.constructorArgs) !== null && y !== void 0 ? y : [] })) });
        }, me.uploadContractWasm = function(r) {
          return this.invokeHostFunction({ source: r.source, auth: r.auth, func: f.HostFunction.hostFunctionTypeUploadContractWasm(fn.from(r.wasm)) });
        };
        var br = i(8287).Buffer;
        function yr(r) {
          return yr = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(y) {
            return typeof y;
          } : function(y) {
            return y && typeof Symbol == "function" && y.constructor === Symbol && y !== Symbol.prototype ? "symbol" : typeof y;
          }, yr(r);
        }
        function xr(r, y) {
          for (var N = 0; N < y.length; N++) {
            var Q = y[N];
            Q.enumerable = Q.enumerable || false, Q.configurable = true, "value" in Q && (Q.writable = true), Object.defineProperty(r, tn(Q.key), Q);
          }
        }
        function tn(r) {
          var y = function(N, Q) {
            if (yr(N) != "object" || !N) return N;
            var _t = N[Symbol.toPrimitive];
            if (_t !== void 0) {
              var Qt = _t.call(N, Q);
              if (yr(Qt) != "object") return Qt;
              throw new TypeError("@@toPrimitive must return a primitive value.");
            }
            return String(N);
          }(r, "string");
          return yr(y) == "symbol" ? y : y + "";
        }
        var xn = "none", Or = "id", vn = "text", Kn = "hash", Qn = "return", Tn = function() {
          function r(y) {
            var N = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : null;
            switch (function(Q, _t) {
              if (!(Q instanceof _t)) throw new TypeError("Cannot call a class as a function");
            }(this, r), this._type = y, this._value = N, this._type) {
              case xn:
                break;
              case Or:
                r._validateIdValue(N);
                break;
              case vn:
                r._validateTextValue(N);
                break;
              case Kn:
              case Qn:
                r._validateHashValue(N), typeof N == "string" && (this._value = br.from(N, "hex"));
                break;
              default:
                throw new Error("Invalid memo type");
            }
          }
          return function(y, N, Q) {
            return N && xr(y.prototype, N), Q && xr(y, Q), Object.defineProperty(y, "prototype", { writable: false }), y;
          }(r, [{ key: "type", get: function() {
            return this._type;
          }, set: function(y) {
            throw new Error("Memo is immutable");
          } }, { key: "value", get: function() {
            switch (this._type) {
              case xn:
                return null;
              case Or:
              case vn:
                return this._value;
              case Kn:
              case Qn:
                return br.from(this._value);
              default:
                throw new Error("Invalid memo type");
            }
          }, set: function(y) {
            throw new Error("Memo is immutable");
          } }, { key: "toXDRObject", value: function() {
            switch (this._type) {
              case xn:
                return f.Memo.memoNone();
              case Or:
                return f.Memo.memoId(u.UnsignedHyper.fromString(this._value));
              case vn:
                return f.Memo.memoText(this._value);
              case Kn:
                return f.Memo.memoHash(this._value);
              case Qn:
                return f.Memo.memoReturn(this._value);
              default:
                return null;
            }
          } }], [{ key: "_validateIdValue", value: function(y) {
            var N, Q = new Error("Expects a int64 as a string. Got ".concat(y));
            if (typeof y != "string") throw Q;
            try {
              N = new we(y);
            } catch {
              throw Q;
            }
            if (!N.isFinite() || N.isNaN()) throw Q;
          } }, { key: "_validateTextValue", value: function(y) {
            if (!f.Memo.armTypeForArm("text").isValid(y)) throw new Error("Expects string, array or buffer, max 28 bytes");
          } }, { key: "_validateHashValue", value: function(y) {
            var N, Q = new Error("Expects a 32 byte hash value or hex encoded string. Got ".concat(y));
            if (y == null) throw Q;
            if (typeof y == "string") {
              if (!/^[0-9A-Fa-f]{64}$/g.test(y)) throw Q;
              N = br.from(y, "hex");
            } else {
              if (!br.isBuffer(y)) throw Q;
              N = br.from(y);
            }
            if (!N.length || N.length !== 32) throw Q;
          } }, { key: "none", value: function() {
            return new r(xn);
          } }, { key: "text", value: function(y) {
            return new r(vn, y);
          } }, { key: "id", value: function(y) {
            return new r(Or, y);
          } }, { key: "hash", value: function(y) {
            return new r(Kn, y);
          } }, { key: "return", value: function(y) {
            return new r(Qn, y);
          } }, { key: "fromXDRObject", value: function(y) {
            switch (y.arm()) {
              case "id":
                return r.id(y.value().toString());
              case "text":
                return r.text(y.value());
              case "hash":
                return r.hash(y.value());
              case "retHash":
                return r.return(y.value());
            }
            if (y.value() === void 0) return r.none();
            throw new Error("Unknown type");
          } }]);
        }(), In = i(8287).Buffer;
        function ce(r) {
          return ce = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(y) {
            return typeof y;
          } : function(y) {
            return y && typeof Symbol == "function" && y.constructor === Symbol && y !== Symbol.prototype ? "symbol" : typeof y;
          }, ce(r);
        }
        function be(r, y) {
          for (var N = 0; N < y.length; N++) {
            var Q = y[N];
            Q.enumerable = Q.enumerable || false, Q.configurable = true, "value" in Q && (Q.writable = true), Object.defineProperty(r, Ye(Q.key), Q);
          }
        }
        function Ye(r) {
          var y = function(N, Q) {
            if (ce(N) != "object" || !N) return N;
            var _t = N[Symbol.toPrimitive];
            if (_t !== void 0) {
              var Qt = _t.call(N, Q);
              if (ce(Qt) != "object") return Qt;
              throw new TypeError("@@toPrimitive must return a primitive value.");
            }
            return String(N);
          }(r, "string");
          return ce(y) == "symbol" ? y : y + "";
        }
        function _r(r, y, N) {
          return y = dr(y), function(Q, _t) {
            if (_t && (ce(_t) == "object" || typeof _t == "function")) return _t;
            if (_t !== void 0) throw new TypeError("Derived constructors may only return object or undefined");
            return function(Qt) {
              if (Qt === void 0) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
              return Qt;
            }(Q);
          }(r, or() ? Reflect.construct(y, N || [], dr(r).constructor) : y.apply(r, N));
        }
        function or() {
          try {
            var r = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
            }));
          } catch {
          }
          return (or = function() {
            return !!r;
          })();
        }
        function dr(r) {
          return dr = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function(y) {
            return y.__proto__ || Object.getPrototypeOf(y);
          }, dr(r);
        }
        function Cr(r, y) {
          return Cr = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function(N, Q) {
            return N.__proto__ = Q, N;
          }, Cr(r, y);
        }
        var hr = function(r) {
          function y(N, Q) {
            var _t;
            if (function(Fe, Xe) {
              if (!(Fe instanceof Xe)) throw new TypeError("Cannot call a class as a function");
            }(this, y), typeof N == "string") {
              var Qt = In.from(N, "base64");
              N = f.TransactionEnvelope.fromXDR(Qt);
            }
            var Ce = N.switch();
            if (Ce !== f.EnvelopeType.envelopeTypeTxV0() && Ce !== f.EnvelopeType.envelopeTypeTx()) throw new Error("Invalid TransactionEnvelope: expected an envelopeTypeTxV0 or envelopeTypeTx but received an ".concat(Ce.name, "."));
            var Le = N.value(), Qe = Le.tx(), Sr = Qe.fee().toString();
            (_t = _r(this, y, [Qe, (Le.signatures() || []).slice(), Sr, Q]))._envelopeType = Ce, _t._memo = Qe.memo(), _t._sequence = Qe.seqNum().toString(), _t._envelopeType === f.EnvelopeType.envelopeTypeTxV0() ? _t._source = pe.encodeEd25519PublicKey(_t.tx.sourceAccountEd25519()) : _t._source = Si(_t.tx.sourceAccount());
            var Kt = null, re = null;
            switch (_t._envelopeType) {
              case f.EnvelopeType.envelopeTypeTxV0():
                re = Qe.timeBounds();
                break;
              case f.EnvelopeType.envelopeTypeTx():
                switch (Qe.cond().switch()) {
                  case f.PreconditionType.precondTime():
                    re = Qe.cond().timeBounds();
                    break;
                  case f.PreconditionType.precondV2():
                    re = (Kt = Qe.cond().v2()).timeBounds();
                }
            }
            if (re && (_t._timeBounds = { minTime: re.minTime().toString(), maxTime: re.maxTime().toString() }), Kt) {
              var fe = Kt.ledgerBounds();
              fe && (_t._ledgerBounds = { minLedger: fe.minLedger(), maxLedger: fe.maxLedger() });
              var Re = Kt.minSeqNum();
              Re && (_t._minAccountSequence = Re.toString()), _t._minAccountSequenceAge = Kt.minSeqAge(), _t._minAccountSequenceLedgerGap = Kt.minSeqLedgerGap(), _t._extraSigners = Kt.extraSigners();
            }
            var Te = Qe.operations() || [];
            return _t._operations = Te.map(function(Fe) {
              return me.fromXDRObject(Fe);
            }), _t;
          }
          return function(N, Q) {
            if (typeof Q != "function" && Q !== null) throw new TypeError("Super expression must either be null or a function");
            N.prototype = Object.create(Q && Q.prototype, { constructor: { value: N, writable: true, configurable: true } }), Object.defineProperty(N, "prototype", { writable: false }), Q && Cr(N, Q);
          }(y, r), function(N, Q, _t) {
            return Q && be(N.prototype, Q), Object.defineProperty(N, "prototype", { writable: false }), N;
          }(y, [{ key: "timeBounds", get: function() {
            return this._timeBounds;
          }, set: function(N) {
            throw new Error("Transaction is immutable");
          } }, { key: "ledgerBounds", get: function() {
            return this._ledgerBounds;
          }, set: function(N) {
            throw new Error("Transaction is immutable");
          } }, { key: "minAccountSequence", get: function() {
            return this._minAccountSequence;
          }, set: function(N) {
            throw new Error("Transaction is immutable");
          } }, { key: "minAccountSequenceAge", get: function() {
            return this._minAccountSequenceAge;
          }, set: function(N) {
            throw new Error("Transaction is immutable");
          } }, { key: "minAccountSequenceLedgerGap", get: function() {
            return this._minAccountSequenceLedgerGap;
          }, set: function(N) {
            throw new Error("Transaction is immutable");
          } }, { key: "extraSigners", get: function() {
            return this._extraSigners;
          }, set: function(N) {
            throw new Error("Transaction is immutable");
          } }, { key: "sequence", get: function() {
            return this._sequence;
          }, set: function(N) {
            throw new Error("Transaction is immutable");
          } }, { key: "source", get: function() {
            return this._source;
          }, set: function(N) {
            throw new Error("Transaction is immutable");
          } }, { key: "operations", get: function() {
            return this._operations;
          }, set: function(N) {
            throw new Error("Transaction is immutable");
          } }, { key: "memo", get: function() {
            return Tn.fromXDRObject(this._memo);
          }, set: function(N) {
            throw new Error("Transaction is immutable");
          } }, { key: "signatureBase", value: function() {
            var N = this.tx;
            this._envelopeType === f.EnvelopeType.envelopeTypeTxV0() && (N = f.Transaction.fromXDR(In.concat([f.PublicKeyType.publicKeyTypeEd25519().toXDR(), N.toXDR()])));
            var Q = new f.TransactionSignaturePayloadTaggedTransaction.envelopeTypeTx(N);
            return new f.TransactionSignaturePayload({ networkId: f.Hash.fromXDR(b(this.networkPassphrase)), taggedTransaction: Q }).toXDR();
          } }, { key: "toEnvelope", value: function() {
            var N, Q = this.tx.toXDR(), _t = this.signatures.slice();
            switch (this._envelopeType) {
              case f.EnvelopeType.envelopeTypeTxV0():
                N = new f.TransactionEnvelope.envelopeTypeTxV0(new f.TransactionV0Envelope({ tx: f.TransactionV0.fromXDR(Q), signatures: _t }));
                break;
              case f.EnvelopeType.envelopeTypeTx():
                N = new f.TransactionEnvelope.envelopeTypeTx(new f.TransactionV1Envelope({ tx: f.Transaction.fromXDR(Q), signatures: _t }));
                break;
              default:
                throw new Error("Invalid TransactionEnvelope: expected an envelopeTypeTxV0 or envelopeTypeTx but received an ".concat(this._envelopeType.name, "."));
            }
            return N;
          } }, { key: "getClaimableBalanceId", value: function(N) {
            if (!Number.isInteger(N) || N < 0 || N >= this.operations.length) throw new RangeError("invalid operation index");
            var Q = this.operations[N];
            try {
              Q = me.createClaimableBalance(Q);
            } catch (Ce) {
              throw new TypeError("expected createClaimableBalance, got ".concat(Q.type, ": ").concat(Ce));
            }
            var _t = pe.decodeEd25519PublicKey(_o(this.source)), Qt = b(f.HashIdPreimage.envelopeTypeOpId(new f.HashIdPreimageOperationId({ sourceAccount: f.AccountId.publicKeyTypeEd25519(_t), seqNum: f.SequenceNumber.fromString(this.sequence), opNum: N })).toXDR("raw"));
            return f.ClaimableBalanceId.claimableBalanceIdTypeV0(Qt).toXDR("hex");
          } }]);
        }(ee), Gr = i(8287).Buffer;
        function Wr(r) {
          return Wr = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(y) {
            return typeof y;
          } : function(y) {
            return y && typeof Symbol == "function" && y.constructor === Symbol && y !== Symbol.prototype ? "symbol" : typeof y;
          }, Wr(r);
        }
        function zr(r, y) {
          for (var N = 0; N < y.length; N++) {
            var Q = y[N];
            Q.enumerable = Q.enumerable || false, Q.configurable = true, "value" in Q && (Q.writable = true), Object.defineProperty(r, Un(Q.key), Q);
          }
        }
        function Un(r) {
          var y = function(N, Q) {
            if (Wr(N) != "object" || !N) return N;
            var _t = N[Symbol.toPrimitive];
            if (_t !== void 0) {
              var Qt = _t.call(N, Q);
              if (Wr(Qt) != "object") return Qt;
              throw new TypeError("@@toPrimitive must return a primitive value.");
            }
            return String(N);
          }(r, "string");
          return Wr(y) == "symbol" ? y : y + "";
        }
        function lo(r, y, N) {
          return y = zo(y), function(Q, _t) {
            if (_t && (Wr(_t) == "object" || typeof _t == "function")) return _t;
            if (_t !== void 0) throw new TypeError("Derived constructors may only return object or undefined");
            return function(Qt) {
              if (Qt === void 0) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
              return Qt;
            }(Q);
          }(r, po() ? Reflect.construct(y, N || [], zo(r).constructor) : y.apply(r, N));
        }
        function po() {
          try {
            var r = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
            }));
          } catch {
          }
          return (po = function() {
            return !!r;
          })();
        }
        function zo(r) {
          return zo = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function(y) {
            return y.__proto__ || Object.getPrototypeOf(y);
          }, zo(r);
        }
        function di(r, y) {
          return di = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function(N, Q) {
            return N.__proto__ = Q, N;
          }, di(r, y);
        }
        var vi = function(r) {
          function y(N, Q) {
            var _t;
            if (function(re, fe) {
              if (!(re instanceof fe)) throw new TypeError("Cannot call a class as a function");
            }(this, y), typeof N == "string") {
              var Qt = Gr.from(N, "base64");
              N = f.TransactionEnvelope.fromXDR(Qt);
            }
            var Ce = N.switch();
            if (Ce !== f.EnvelopeType.envelopeTypeTxFeeBump()) throw new Error("Invalid TransactionEnvelope: expected an envelopeTypeTxFeeBump but received an ".concat(Ce.name, "."));
            var Le = N.value(), Qe = Le.tx(), Sr = Qe.fee().toString();
            _t = lo(this, y, [Qe, (Le.signatures() || []).slice(), Sr, Q]);
            var Kt = f.TransactionEnvelope.envelopeTypeTx(Qe.innerTx().v1());
            return _t._feeSource = Si(_t.tx.feeSource()), _t._innerTransaction = new hr(Kt, Q), _t;
          }
          return function(N, Q) {
            if (typeof Q != "function" && Q !== null) throw new TypeError("Super expression must either be null or a function");
            N.prototype = Object.create(Q && Q.prototype, { constructor: { value: N, writable: true, configurable: true } }), Object.defineProperty(N, "prototype", { writable: false }), Q && di(N, Q);
          }(y, r), function(N, Q, _t) {
            return Q && zr(N.prototype, Q), Object.defineProperty(N, "prototype", { writable: false }), N;
          }(y, [{ key: "innerTransaction", get: function() {
            return this._innerTransaction;
          } }, { key: "operations", get: function() {
            return this._innerTransaction.operations;
          } }, { key: "feeSource", get: function() {
            return this._feeSource;
          } }, { key: "signatureBase", value: function() {
            var N = new f.TransactionSignaturePayloadTaggedTransaction.envelopeTypeTxFeeBump(this.tx);
            return new f.TransactionSignaturePayload({ networkId: f.Hash.fromXDR(b(this.networkPassphrase)), taggedTransaction: N }).toXDR();
          } }, { key: "toEnvelope", value: function() {
            var N = new f.FeeBumpTransactionEnvelope({ tx: f.FeeBumpTransaction.fromXDR(this.tx.toXDR()), signatures: this.signatures.slice() });
            return new f.TransactionEnvelope.envelopeTypeTxFeeBump(N);
          } }]);
        }(ee);
        function ko(r) {
          return ko = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(y) {
            return typeof y;
          } : function(y) {
            return y && typeof Symbol == "function" && y.constructor === Symbol && y !== Symbol.prototype ? "symbol" : typeof y;
          }, ko(r);
        }
        function Jo(r, y) {
          for (var N = 0; N < y.length; N++) {
            var Q = y[N];
            Q.enumerable = Q.enumerable || false, Q.configurable = true, "value" in Q && (Q.writable = true), Object.defineProperty(r, xi(Q.key), Q);
          }
        }
        function xi(r) {
          var y = function(N, Q) {
            if (ko(N) != "object" || !N) return N;
            var _t = N[Symbol.toPrimitive];
            if (_t !== void 0) {
              var Qt = _t.call(N, Q);
              if (ko(Qt) != "object") return Qt;
              throw new TypeError("@@toPrimitive must return a primitive value.");
            }
            return String(N);
          }(r, "string");
          return ko(y) == "symbol" ? y : y + "";
        }
        var va = function() {
          return function(r, y, N) {
            return y && Jo(r.prototype, y), Object.defineProperty(r, "prototype", { writable: false }), r;
          }(function r(y, N) {
            if (function(Q, _t) {
              if (!(Q instanceof _t)) throw new TypeError("Cannot call a class as a function");
            }(this, r), pe.isValidMed25519PublicKey(y)) throw new Error("accountId is an M-address; use MuxedAccount instead");
            if (!pe.isValidEd25519PublicKey(y)) throw new Error("accountId is invalid");
            if (typeof N != "string") throw new Error("sequence must be of type string");
            this._accountId = y, this.sequence = new we(N);
          }, [{ key: "accountId", value: function() {
            return this._accountId;
          } }, { key: "sequenceNumber", value: function() {
            return this.sequence.toString();
          } }, { key: "incrementSequenceNumber", value: function() {
            this.sequence = this.sequence.plus(1);
          } }]);
        }();
        function ra(r) {
          return ra = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(y) {
            return typeof y;
          } : function(y) {
            return y && typeof Symbol == "function" && y.constructor === Symbol && y !== Symbol.prototype ? "symbol" : typeof y;
          }, ra(r);
        }
        function hs(r, y) {
          for (var N = 0; N < y.length; N++) {
            var Q = y[N];
            Q.enumerable = Q.enumerable || false, Q.configurable = true, "value" in Q && (Q.writable = true), Object.defineProperty(r, Xi(Q.key), Q);
          }
        }
        function Xi(r) {
          var y = function(N, Q) {
            if (ra(N) != "object" || !N) return N;
            var _t = N[Symbol.toPrimitive];
            if (_t !== void 0) {
              var Qt = _t.call(N, Q);
              if (ra(Qt) != "object") return Qt;
              throw new TypeError("@@toPrimitive must return a primitive value.");
            }
            return String(N);
          }(r, "string");
          return ra(y) == "symbol" ? y : y + "";
        }
        var ba = function() {
          function r(y, N) {
            (function(_t, Qt) {
              if (!(_t instanceof Qt)) throw new TypeError("Cannot call a class as a function");
            })(this, r);
            var Q = y.accountId();
            if (!pe.isValidEd25519PublicKey(Q)) throw new Error("accountId is invalid");
            this.account = y, this._muxedXdr = ea(Q, N), this._mAddress = Si(this._muxedXdr), this._id = N;
          }
          return function(y, N, Q) {
            return N && hs(y.prototype, N), Q && hs(y, Q), Object.defineProperty(y, "prototype", { writable: false }), y;
          }(r, [{ key: "baseAccount", value: function() {
            return this.account;
          } }, { key: "accountId", value: function() {
            return this._mAddress;
          } }, { key: "id", value: function() {
            return this._id;
          } }, { key: "setId", value: function(y) {
            if (typeof y != "string") throw new Error("id should be a string representing a number (uint64)");
            return this._muxedXdr.med25519().id(f.Uint64.fromString(y)), this._mAddress = Si(this._muxedXdr), this._id = y, this;
          } }, { key: "sequenceNumber", value: function() {
            return this.account.sequenceNumber();
          } }, { key: "incrementSequenceNumber", value: function() {
            return this.account.incrementSequenceNumber();
          } }, { key: "toXDRObject", value: function() {
            return this._muxedXdr;
          } }, { key: "equals", value: function(y) {
            return this.accountId() === y.accountId();
          } }], [{ key: "fromAddress", value: function(y, N) {
            var Q = Qo(y), _t = _o(y), Qt = Q.med25519().id().toString();
            return new r(new va(_t, N), Qt);
          } }]);
        }();
        function _i(r) {
          return _i = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(y) {
            return typeof y;
          } : function(y) {
            return y && typeof Symbol == "function" && y.constructor === Symbol && y !== Symbol.prototype ? "symbol" : typeof y;
          }, _i(r);
        }
        function Oi(r, y) {
          for (var N = 0; N < y.length; N++) {
            var Q = y[N];
            Q.enumerable = Q.enumerable || false, Q.configurable = true, "value" in Q && (Q.writable = true), Object.defineProperty(r, mi(Q.key), Q);
          }
        }
        function mi(r) {
          var y = function(N, Q) {
            if (_i(N) != "object" || !N) return N;
            var _t = N[Symbol.toPrimitive];
            if (_t !== void 0) {
              var Qt = _t.call(N, Q);
              if (_i(Qt) != "object") return Qt;
              throw new TypeError("@@toPrimitive must return a primitive value.");
            }
            return (Q === "string" ? String : Number)(N);
          }(r, "string");
          return _i(y) == "symbol" ? y : y + "";
        }
        var eu = function() {
          return function(r, y, N) {
            return y && Oi(r.prototype, y), N && Oi(r, N), Object.defineProperty(r, "prototype", { writable: false }), r;
          }(function r(y) {
            var N;
            (function(Q, _t) {
              if (!(Q instanceof _t)) throw new TypeError("Cannot call a class as a function");
            })(this, r), function(Q, _t, Qt) {
              (_t = mi(_t)) in Q ? Object.defineProperty(Q, _t, { value: Qt, enumerable: true, configurable: true, writable: true }) : Q[_t] = Qt;
            }(this, "_data", void 0), N = y ? typeof y == "string" || ArrayBuffer.isView(y) ? r.fromXDR(y) : r.fromXDR(y.toXDR()) : new f.SorobanTransactionData({ resources: new f.SorobanResources({ footprint: new f.LedgerFootprint({ readOnly: [], readWrite: [] }), instructions: 0, diskReadBytes: 0, writeBytes: 0 }), ext: new f.SorobanTransactionDataExt(0), resourceFee: new f.Int64(0) }), this._data = N;
          }, [{ key: "setResourceFee", value: function(r) {
            return this._data.resourceFee(new f.Int64(r)), this;
          } }, { key: "setResources", value: function(r, y, N) {
            return this._data.resources().instructions(r), this._data.resources().diskReadBytes(y), this._data.resources().writeBytes(N), this;
          } }, { key: "appendFootprint", value: function(r, y) {
            return this.setFootprint(this.getReadOnly().concat(r), this.getReadWrite().concat(y));
          } }, { key: "setFootprint", value: function(r, y) {
            return r !== null && this.setReadOnly(r), y !== null && this.setReadWrite(y), this;
          } }, { key: "setReadOnly", value: function(r) {
            return this._data.resources().footprint().readOnly(r ?? []), this;
          } }, { key: "setReadWrite", value: function(r) {
            return this._data.resources().footprint().readWrite(r ?? []), this;
          } }, { key: "build", value: function() {
            return f.SorobanTransactionData.fromXDR(this._data.toXDR());
          } }, { key: "getReadOnly", value: function() {
            return this.getFootprint().readOnly();
          } }, { key: "getReadWrite", value: function() {
            return this.getFootprint().readWrite();
          } }, { key: "getFootprint", value: function() {
            return this._data.resources().footprint();
          } }], [{ key: "fromXDR", value: function(r) {
            return f.SorobanTransactionData.fromXDR(r, typeof r == "string" ? "base64" : "raw");
          } }]);
        }();
        function za(r) {
          return za = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(y) {
            return typeof y;
          } : function(y) {
            return y && typeof Symbol == "function" && y.constructor === Symbol && y !== Symbol.prototype ? "symbol" : typeof y;
          }, za(r);
        }
        function ks(r, y) {
          for (var N = 0; N < y.length; N++) {
            var Q = y[N];
            Q.enumerable = Q.enumerable || false, Q.configurable = true, "value" in Q && (Q.writable = true), Object.defineProperty(r, Cc(Q.key), Q);
          }
        }
        function Cc(r) {
          var y = function(N, Q) {
            if (za(N) != "object" || !N) return N;
            var _t = N[Symbol.toPrimitive];
            if (_t !== void 0) {
              var Qt = _t.call(N, Q);
              if (za(Qt) != "object") return Qt;
              throw new TypeError("@@toPrimitive must return a primitive value.");
            }
            return String(N);
          }(r, "string");
          return za(y) == "symbol" ? y : y + "";
        }
        var Rc = function() {
          return function(r, y, N) {
            return N && ks(r, N), Object.defineProperty(r, "prototype", { writable: false }), r;
          }(function r() {
            (function(y, N) {
              if (!(y instanceof N)) throw new TypeError("Cannot call a class as a function");
            })(this, r);
          }, null, [{ key: "decodeAddress", value: function(r) {
            var y = { ed25519PublicKey: f.SignerKey.signerKeyTypeEd25519, preAuthTx: f.SignerKey.signerKeyTypePreAuthTx, sha256Hash: f.SignerKey.signerKeyTypeHashX, signedPayload: f.SignerKey.signerKeyTypeEd25519SignedPayload }, N = pe.getVersionByteForPrefix(r), Q = y[N];
            if (!Q) throw new Error("invalid signer key type (".concat(N, ")"));
            var _t = je(N, r);
            return Q(N === "signedPayload" ? new f.SignerKeyEd25519SignedPayload({ ed25519: _t.slice(0, 32), payload: _t.slice(36) }) : _t);
          } }, { key: "encodeSignerKey", value: function(r) {
            var y, N;
            switch (r.switch()) {
              case f.SignerKeyType.signerKeyTypeEd25519():
                y = "ed25519PublicKey", N = r.value();
                break;
              case f.SignerKeyType.signerKeyTypePreAuthTx():
                y = "preAuthTx", N = r.value();
                break;
              case f.SignerKeyType.signerKeyTypeHashX():
                y = "sha256Hash", N = r.value();
                break;
              case f.SignerKeyType.signerKeyTypeEd25519SignedPayload():
                y = "signedPayload", N = r.ed25519SignedPayload().toXDR("raw");
                break;
              default:
                throw new Error("invalid SignerKey (type: ".concat(r.switch(), ")"));
            }
            return Me(y, N);
          } }]);
        }();
        function Os(r) {
          return Os = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(y) {
            return typeof y;
          } : function(y) {
            return y && typeof Symbol == "function" && y.constructor === Symbol && y !== Symbol.prototype ? "symbol" : typeof y;
          }, Os(r);
        }
        function Ic(r) {
          return function(y) {
            if (Array.isArray(y)) return qa(y);
          }(r) || function(y) {
            if (typeof Symbol < "u" && y[Symbol.iterator] != null || y["@@iterator"] != null) return Array.from(y);
          }(r) || function(y, N) {
            if (y) {
              if (typeof y == "string") return qa(y, N);
              var Q = {}.toString.call(y).slice(8, -1);
              return Q === "Object" && y.constructor && (Q = y.constructor.name), Q === "Map" || Q === "Set" ? Array.from(y) : Q === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(Q) ? qa(y, N) : void 0;
            }
          }(r) || function() {
            throw new TypeError(`Invalid attempt to spread non-iterable instance.
In order to be iterable, non-array objects must have a [Symbol.iterator]() method.`);
          }();
        }
        function qa(r, y) {
          (y == null || y > r.length) && (y = r.length);
          for (var N = 0, Q = Array(y); N < y; N++) Q[N] = r[N];
          return Q;
        }
        function Mc(r, y) {
          var N = Object.keys(r);
          if (Object.getOwnPropertySymbols) {
            var Q = Object.getOwnPropertySymbols(r);
            y && (Q = Q.filter(function(_t) {
              return Object.getOwnPropertyDescriptor(r, _t).enumerable;
            })), N.push.apply(N, Q);
          }
          return N;
        }
        function Fu(r) {
          for (var y = 1; y < arguments.length; y++) {
            var N = arguments[y] != null ? arguments[y] : {};
            y % 2 ? Mc(Object(N), true).forEach(function(Q) {
              Bc(r, Q, N[Q]);
            }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(r, Object.getOwnPropertyDescriptors(N)) : Mc(Object(N)).forEach(function(Q) {
              Object.defineProperty(r, Q, Object.getOwnPropertyDescriptor(N, Q));
            });
          }
          return r;
        }
        function Bc(r, y, N) {
          return (y = Lc(y)) in r ? Object.defineProperty(r, y, { value: N, enumerable: true, configurable: true, writable: true }) : r[y] = N, r;
        }
        function Ha(r, y) {
          for (var N = 0; N < y.length; N++) {
            var Q = y[N];
            Q.enumerable = Q.enumerable || false, Q.configurable = true, "value" in Q && (Q.writable = true), Object.defineProperty(r, Lc(Q.key), Q);
          }
        }
        function Lc(r) {
          var y = function(N, Q) {
            if (Os(N) != "object" || !N) return N;
            var _t = N[Symbol.toPrimitive];
            if (_t !== void 0) {
              var Qt = _t.call(N, Q);
              if (Os(Qt) != "object") return Qt;
              throw new TypeError("@@toPrimitive must return a primitive value.");
            }
            return String(N);
          }(r, "string");
          return Os(y) == "symbol" ? y : y + "";
        }
        var Uu = "100", Nc = 0, ru = function() {
          function r(y) {
            var N = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};
            if (function(Q, _t) {
              if (!(Q instanceof _t)) throw new TypeError("Cannot call a class as a function");
            }(this, r), !y) throw new Error("must specify source account for the transaction");
            if (N.fee === void 0) throw new Error("must specify fee for the transaction (in stroops)");
            this.source = y, this.operations = [], this.baseFee = N.fee, this.timebounds = N.timebounds ? Fu({}, N.timebounds) : null, this.ledgerbounds = N.ledgerbounds ? Fu({}, N.ledgerbounds) : null, this.minAccountSequence = N.minAccountSequence || null, this.minAccountSequenceAge = N.minAccountSequenceAge || null, this.minAccountSequenceLedgerGap = N.minAccountSequenceLedgerGap || null, this.extraSigners = N.extraSigners ? Ic(N.extraSigners) : null, this.memo = N.memo || Tn.none(), this.networkPassphrase = N.networkPassphrase || null, this.sorobanData = N.sorobanData ? new eu(N.sorobanData).build() : null;
          }
          return function(y, N, Q) {
            return N && Ha(y.prototype, N), Q && Ha(y, Q), Object.defineProperty(y, "prototype", { writable: false }), y;
          }(r, [{ key: "addOperation", value: function(y) {
            return this.operations.push(y), this;
          } }, { key: "addOperationAt", value: function(y, N) {
            return this.operations.splice(N, 0, y), this;
          } }, { key: "clearOperations", value: function() {
            return this.operations = [], this;
          } }, { key: "clearOperationAt", value: function(y) {
            return this.operations.splice(y, 1), this;
          } }, { key: "addMemo", value: function(y) {
            return this.memo = y, this;
          } }, { key: "setTimeout", value: function(y) {
            if (this.timebounds !== null && this.timebounds.maxTime > 0) throw new Error("TimeBounds.max_time has been already set - setting timeout would overwrite it.");
            if (y < 0) throw new Error("timeout cannot be negative");
            if (y > 0) {
              var N = Math.floor(Date.now() / 1e3) + y;
              this.timebounds === null ? this.timebounds = { minTime: 0, maxTime: N } : this.timebounds = { minTime: this.timebounds.minTime, maxTime: N };
            } else this.timebounds = { minTime: 0, maxTime: 0 };
            return this;
          } }, { key: "setTimebounds", value: function(y, N) {
            if (typeof y == "number" && (y = new Date(1e3 * y)), typeof N == "number" && (N = new Date(1e3 * N)), this.timebounds !== null) throw new Error("TimeBounds has been already set - setting timebounds would overwrite it.");
            var Q = Math.floor(y.valueOf() / 1e3), _t = Math.floor(N.valueOf() / 1e3);
            if (Q < 0) throw new Error("min_time cannot be negative");
            if (_t < 0) throw new Error("max_time cannot be negative");
            if (_t > 0 && Q > _t) throw new Error("min_time cannot be greater than max_time");
            return this.timebounds = { minTime: Q, maxTime: _t }, this;
          } }, { key: "setLedgerbounds", value: function(y, N) {
            if (this.ledgerbounds !== null) throw new Error("LedgerBounds has been already set - setting ledgerbounds would overwrite it.");
            if (y < 0) throw new Error("min_ledger cannot be negative");
            if (N < 0) throw new Error("max_ledger cannot be negative");
            if (N > 0 && y > N) throw new Error("min_ledger cannot be greater than max_ledger");
            return this.ledgerbounds = { minLedger: y, maxLedger: N }, this;
          } }, { key: "setMinAccountSequence", value: function(y) {
            if (this.minAccountSequence !== null) throw new Error("min_account_sequence has been already set - setting min_account_sequence would overwrite it.");
            return this.minAccountSequence = y, this;
          } }, { key: "setMinAccountSequenceAge", value: function(y) {
            if (typeof y != "number") throw new Error("min_account_sequence_age must be a number");
            if (this.minAccountSequenceAge !== null) throw new Error("min_account_sequence_age has been already set - setting min_account_sequence_age would overwrite it.");
            if (y < 0) throw new Error("min_account_sequence_age cannot be negative");
            return this.minAccountSequenceAge = y, this;
          } }, { key: "setMinAccountSequenceLedgerGap", value: function(y) {
            if (this.minAccountSequenceLedgerGap !== null) throw new Error("min_account_sequence_ledger_gap has been already set - setting min_account_sequence_ledger_gap would overwrite it.");
            if (y < 0) throw new Error("min_account_sequence_ledger_gap cannot be negative");
            return this.minAccountSequenceLedgerGap = y, this;
          } }, { key: "setExtraSigners", value: function(y) {
            if (!Array.isArray(y)) throw new Error("extra_signers must be an array of strings.");
            if (this.extraSigners !== null) throw new Error("extra_signers has been already set - setting extra_signers would overwrite it.");
            if (y.length > 2) throw new Error("extra_signers cannot be longer than 2 elements.");
            return this.extraSigners = Ic(y), this;
          } }, { key: "setNetworkPassphrase", value: function(y) {
            return this.networkPassphrase = y, this;
          } }, { key: "setSorobanData", value: function(y) {
            return this.sorobanData = new eu(y).build(), this;
          } }, { key: "build", value: function() {
            var y = new we(this.source.sequenceNumber()).plus(1), N = { fee: new we(this.baseFee).times(this.operations.length).toNumber(), seqNum: f.SequenceNumber.fromString(y.toString()), memo: this.memo ? this.memo.toXDRObject() : null };
            if (this.timebounds === null || this.timebounds.minTime === void 0 || this.timebounds.maxTime === void 0) throw new Error("TimeBounds has to be set or you must call setTimeout(TimeoutInfinite).");
            nu(this.timebounds.minTime) && (this.timebounds.minTime = this.timebounds.minTime.getTime() / 1e3), nu(this.timebounds.maxTime) && (this.timebounds.maxTime = this.timebounds.maxTime.getTime() / 1e3), this.timebounds.minTime = u.UnsignedHyper.fromString(this.timebounds.minTime.toString()), this.timebounds.maxTime = u.UnsignedHyper.fromString(this.timebounds.maxTime.toString());
            var Q = new f.TimeBounds(this.timebounds);
            if (this.hasV2Preconditions()) {
              var _t = null;
              this.ledgerbounds !== null && (_t = new f.LedgerBounds(this.ledgerbounds));
              var Qt = this.minAccountSequence || "0";
              Qt = f.SequenceNumber.fromString(Qt);
              var Ce = u.UnsignedHyper.fromString(this.minAccountSequenceAge !== null ? this.minAccountSequenceAge.toString() : "0"), Le = this.minAccountSequenceLedgerGap || 0, Qe = this.extraSigners !== null ? this.extraSigners.map(Rc.decodeAddress) : [];
              N.cond = f.Preconditions.precondV2(new f.PreconditionsV2({ timeBounds: Q, ledgerBounds: _t, minSeqNum: Qt, minSeqAge: Ce, minSeqLedgerGap: Le, extraSigners: Qe }));
            } else N.cond = f.Preconditions.precondTime(Q);
            N.sourceAccount = Qo(this.source.accountId()), this.sorobanData ? N.ext = new f.TransactionExt(1, this.sorobanData) : N.ext = new f.TransactionExt(0, f.Void);
            var Sr = new f.Transaction(N);
            Sr.operations(this.operations);
            var Kt = new f.TransactionEnvelope.envelopeTypeTx(new f.TransactionV1Envelope({ tx: Sr })), re = new hr(Kt, this.networkPassphrase);
            return this.source.incrementSequenceNumber(), re;
          } }, { key: "hasV2Preconditions", value: function() {
            return this.ledgerbounds !== null || this.minAccountSequence !== null || this.minAccountSequenceAge !== null || this.minAccountSequenceLedgerGap !== null || this.extraSigners !== null && this.extraSigners.length > 0;
          } }], [{ key: "cloneFrom", value: function(y) {
            var N = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};
            if (!(y instanceof hr)) throw new TypeError("expected a 'Transaction', got: ".concat(y));
            var Q, _t = (BigInt(y.sequence) - 1n).toString();
            if (pe.isValidMed25519PublicKey(y.source)) Q = ba.fromAddress(y.source, _t);
            else {
              if (!pe.isValidEd25519PublicKey(y.source)) throw new TypeError("unsupported tx source account: ".concat(y.source));
              Q = new va(y.source, _t);
            }
            var Qt = new r(Q, Fu({ fee: (parseInt(y.fee, 10) / y.operations.length || Uu).toString(), memo: y.memo, networkPassphrase: y.networkPassphrase, timebounds: y.timeBounds, ledgerbounds: y.ledgerBounds, minAccountSequence: y.minAccountSequence, minAccountSequenceAge: y.minAccountSequenceAge, minAccountSequenceLedgerGap: y.minAccountSequenceLedgerGap, extraSigners: y.extraSigners }, N));
            return y._tx.operations().forEach(function(Ce) {
              return Qt.addOperation(Ce);
            }), Qt;
          } }, { key: "buildFeeBumpTransaction", value: function(y, N, Q, _t) {
            var Qt = Q.operations.length, Ce = new we(Q.fee).div(Qt), Le = new we(N);
            if (Le.lt(Ce)) throw new Error("Invalid baseFee, it should be at least ".concat(Ce, " stroops."));
            var Qe = new we(Uu);
            if (Le.lt(Qe)) throw new Error("Invalid baseFee, it should be at least ".concat(Qe, " stroops."));
            var Sr, Kt = Q.toEnvelope();
            if (Kt.switch() === f.EnvelopeType.envelopeTypeTxV0()) {
              var re = Kt.v0().tx(), fe = new f.Transaction({ sourceAccount: new f.MuxedAccount.keyTypeEd25519(re.sourceAccountEd25519()), fee: re.fee(), seqNum: re.seqNum(), cond: f.Preconditions.precondTime(re.timeBounds()), memo: re.memo(), operations: re.operations(), ext: new f.TransactionExt(0) });
              Kt = new f.TransactionEnvelope.envelopeTypeTx(new f.TransactionV1Envelope({ tx: fe, signatures: Kt.v0().signatures() }));
            }
            Sr = typeof y == "string" ? Qo(y) : y.xdrMuxedAccount();
            var Re = new f.FeeBumpTransaction({ feeSource: Sr, fee: f.Int64.fromString(Le.times(Qt + 1).toString()), innerTx: f.FeeBumpTransactionInnerTx.envelopeTypeTx(Kt.v1()), ext: new f.FeeBumpTransactionExt(0) }), Te = new f.FeeBumpTransactionEnvelope({ tx: Re, signatures: [] }), Fe = new f.TransactionEnvelope.envelopeTypeTxFeeBump(Te);
            return new vi(Fe, _t);
          } }, { key: "fromXDR", value: function(y, N) {
            return typeof y == "string" && (y = f.TransactionEnvelope.fromXDR(y, "base64")), y.switch() === f.EnvelopeType.envelopeTypeTxFeeBump() ? new vi(y, N) : new hr(y, N);
          } }]);
        }();
        function nu(r) {
          return r instanceof Date && !isNaN(r);
        }
        var Ps = { PUBLIC: "Public Global Stellar Network ; September 2015", TESTNET: "Test SDF Network ; September 2015", FUTURENET: "Test SDF Future Network ; October 2022", SANDBOX: "Local Sandbox Stellar Network ; September 2022", STANDALONE: "Standalone Network ; February 2017" };
        function fa(r) {
          return fa = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(y) {
            return typeof y;
          } : function(y) {
            return y && typeof Symbol == "function" && y.constructor === Symbol && y !== Symbol.prototype ? "symbol" : typeof y;
          }, fa(r);
        }
        function tf(r) {
          return function(y) {
            if (Array.isArray(y)) return y;
          }(r) || function(y) {
            if (typeof Symbol < "u" && y[Symbol.iterator] != null || y["@@iterator"] != null) return Array.from(y);
          }(r) || function(y, N) {
            if (y) {
              if (typeof y == "string") return Dc(y, N);
              var Q = {}.toString.call(y).slice(8, -1);
              return Q === "Object" && y.constructor && (Q = y.constructor.name), Q === "Map" || Q === "Set" ? Array.from(y) : Q === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(Q) ? Dc(y, N) : void 0;
            }
          }(r) || function() {
            throw new TypeError(`Invalid attempt to destructure non-iterable instance.
In order to be iterable, non-array objects must have a [Symbol.iterator]() method.`);
          }();
        }
        function Dc(r, y) {
          (y == null || y > r.length) && (y = r.length);
          for (var N = 0, Q = Array(y); N < y; N++) Q[N] = r[N];
          return Q;
        }
        function Fc(r, y) {
          for (var N = 0; N < y.length; N++) {
            var Q = y[N];
            Q.enumerable = Q.enumerable || false, Q.configurable = true, "value" in Q && (Q.writable = true), Object.defineProperty(r, ou(Q.key), Q);
          }
        }
        function ou(r) {
          var y = function(N, Q) {
            if (fa(N) != "object" || !N) return N;
            var _t = N[Symbol.toPrimitive];
            if (_t !== void 0) {
              var Qt = _t.call(N, Q);
              if (fa(Qt) != "object") return Qt;
              throw new TypeError("@@toPrimitive must return a primitive value.");
            }
            return String(N);
          }(r, "string");
          return fa(y) == "symbol" ? y : y + "";
        }
        var ju = function() {
          return function(r, y, N) {
            return N && Fc(r, N), Object.defineProperty(r, "prototype", { writable: false }), r;
          }(function r() {
            (function(y, N) {
              if (!(y instanceof N)) throw new TypeError("Cannot call a class as a function");
            })(this, r);
          }, null, [{ key: "formatTokenAmount", value: function(r, y) {
            if (r.includes(".")) throw new TypeError("No decimals are allowed");
            var N = r;
            return y > 0 && (N = y > N.length ? ["0", N.toString().padStart(y, "0")].join(".") : [N.slice(0, -y), N.slice(-y)].join(".")), N.replace(/(\.\d*?)0+$/, "$1");
          } }, { key: "parseTokenAmount", value: function(r, y) {
            var N, Q = tf(r.split(".").slice()), _t = Q[0], Qt = Q[1];
            if (Q.slice(2).length) throw new Error("Invalid decimal value: ".concat(r));
            return BigInt(_t + ((N = Qt == null ? void 0 : Qt.padEnd(y, "0")) !== null && N !== void 0 ? N : "0".repeat(y))).toString();
          } }]);
        }();
        function Ga(r) {
          return Ga = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(y) {
            return typeof y;
          } : function(y) {
            return y && typeof Symbol == "function" && y.constructor === Symbol && y !== Symbol.prototype ? "symbol" : typeof y;
          }, Ga(r);
        }
        function ds(r, y) {
          for (var N = 0; N < y.length; N++) {
            var Q = y[N];
            Q.enumerable = Q.enumerable || false, Q.configurable = true, "value" in Q && (Q.writable = true), Object.defineProperty(r, ef(Q.key), Q);
          }
        }
        function ef(r) {
          var y = function(N, Q) {
            if (Ga(N) != "object" || !N) return N;
            var _t = N[Symbol.toPrimitive];
            if (_t !== void 0) {
              var Qt = _t.call(N, Q);
              if (Ga(Qt) != "object") return Qt;
              throw new TypeError("@@toPrimitive must return a primitive value.");
            }
            return String(N);
          }(r, "string");
          return Ga(y) == "symbol" ? y : y + "";
        }
        var Uc = function() {
          return function(r, y, N) {
            return y && ds(r.prototype, y), Object.defineProperty(r, "prototype", { writable: false }), r;
          }(function r(y) {
            (function(N, Q) {
              if (!(N instanceof Q)) throw new TypeError("Cannot call a class as a function");
            })(this, r);
            try {
              this._id = pe.decodeContract(y);
            } catch {
              throw new Error("Invalid contract ID: ".concat(y));
            }
          }, [{ key: "contractId", value: function() {
            return pe.encodeContract(this._id);
          } }, { key: "toString", value: function() {
            return this.contractId();
          } }, { key: "address", value: function() {
            return Sn.contract(this._id);
          } }, { key: "call", value: function(r) {
            for (var y = arguments.length, N = new Array(y > 1 ? y - 1 : 0), Q = 1; Q < y; Q++) N[Q - 1] = arguments[Q];
            return me.invokeContractFunction({ contract: this.address().toString(), function: r, args: N });
          } }, { key: "getFootprint", value: function() {
            return f.LedgerKey.contractData(new f.LedgerKeyContractData({ contract: this.address().toScAddress(), key: f.ScVal.scvLedgerKeyContractInstance(), durability: f.ContractDataDurability.persistent() }));
          } }]);
        }();
        function Wa(r) {
          return Wa = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(y) {
            return typeof y;
          } : function(y) {
            return y && typeof Symbol == "function" && y.constructor === Symbol && y !== Symbol.prototype ? "symbol" : typeof y;
          }, Wa(r);
        }
        function iu(r, y) {
          for (var N = 0; N < y.length; N++) {
            var Q = y[N];
            Q.enumerable = Q.enumerable || false, Q.configurable = true, "value" in Q && (Q.writable = true), Object.defineProperty(r, Vu(Q.key), Q);
          }
        }
        function Vu(r) {
          var y = function(N, Q) {
            if (Wa(N) != "object" || !N) return N;
            var _t = N[Symbol.toPrimitive];
            if (_t !== void 0) {
              var Qt = _t.call(N, Q);
              if (Wa(Qt) != "object") return Qt;
              throw new TypeError("@@toPrimitive must return a primitive value.");
            }
            return String(N);
          }(r, "string");
          return Wa(y) == "symbol" ? y : y + "";
        }
        function zu(r, y, N) {
          return y = au(y), function(Q, _t) {
            if (_t && (Wa(_t) == "object" || typeof _t == "function")) return _t;
            if (_t !== void 0) throw new TypeError("Derived constructors may only return object or undefined");
            return function(Qt) {
              if (Qt === void 0) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
              return Qt;
            }(Q);
          }(r, Xa() ? Reflect.construct(y, N || [], au(r).constructor) : y.apply(r, N));
        }
        function Xa() {
          try {
            var r = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
            }));
          } catch {
          }
          return (Xa = function() {
            return !!r;
          })();
        }
        function au(r) {
          return au = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function(y) {
            return y.__proto__ || Object.getPrototypeOf(y);
          }, au(r);
        }
        function qu(r, y) {
          return qu = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function(N, Q) {
            return N.__proto__ = Q, N;
          }, qu(r, y);
        }
        var su = function(r) {
          function y() {
            (function(Qt, Ce) {
              if (!(Qt instanceof Ce)) throw new TypeError("Cannot call a class as a function");
            })(this, y);
            for (var N = arguments.length, Q = new Array(N), _t = 0; _t < N; _t++) Q[_t] = arguments[_t];
            return zu(this, y, [Q]);
          }
          return function(N, Q) {
            if (typeof Q != "function" && Q !== null) throw new TypeError("Super expression must either be null or a function");
            N.prototype = Object.create(Q && Q.prototype, { constructor: { value: N, writable: true, configurable: true } }), Object.defineProperty(N, "prototype", { writable: false }), Q && qu(N, Q);
          }(y, r), function(N, Q, _t) {
            return Q && iu(N.prototype, Q), Object.defineProperty(N, "prototype", { writable: false }), N;
          }(y, [{ key: "unsigned", get: function() {
            return true;
          } }, { key: "size", get: function() {
            return 128;
          } }]);
        }(u.LargeInt);
        function wa(r) {
          return wa = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(y) {
            return typeof y;
          } : function(y) {
            return y && typeof Symbol == "function" && y.constructor === Symbol && y !== Symbol.prototype ? "symbol" : typeof y;
          }, wa(r);
        }
        function Hu(r, y) {
          for (var N = 0; N < y.length; N++) {
            var Q = y[N];
            Q.enumerable = Q.enumerable || false, Q.configurable = true, "value" in Q && (Q.writable = true), Object.defineProperty(r, Gu(Q.key), Q);
          }
        }
        function Gu(r) {
          var y = function(N, Q) {
            if (wa(N) != "object" || !N) return N;
            var _t = N[Symbol.toPrimitive];
            if (_t !== void 0) {
              var Qt = _t.call(N, Q);
              if (wa(Qt) != "object") return Qt;
              throw new TypeError("@@toPrimitive must return a primitive value.");
            }
            return String(N);
          }(r, "string");
          return wa(y) == "symbol" ? y : y + "";
        }
        function Cs(r, y, N) {
          return y = Rs(y), function(Q, _t) {
            if (_t && (wa(_t) == "object" || typeof _t == "function")) return _t;
            if (_t !== void 0) throw new TypeError("Derived constructors may only return object or undefined");
            return function(Qt) {
              if (Qt === void 0) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
              return Qt;
            }(Q);
          }(r, Wu() ? Reflect.construct(y, N || [], Rs(r).constructor) : y.apply(r, N));
        }
        function Wu() {
          try {
            var r = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
            }));
          } catch {
          }
          return (Wu = function() {
            return !!r;
          })();
        }
        function Rs(r) {
          return Rs = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function(y) {
            return y.__proto__ || Object.getPrototypeOf(y);
          }, Rs(r);
        }
        function uu(r, y) {
          return uu = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function(N, Q) {
            return N.__proto__ = Q, N;
          }, uu(r, y);
        }
        su.defineIntBoundaries();
        var pa = function(r) {
          function y() {
            (function(Qt, Ce) {
              if (!(Qt instanceof Ce)) throw new TypeError("Cannot call a class as a function");
            })(this, y);
            for (var N = arguments.length, Q = new Array(N), _t = 0; _t < N; _t++) Q[_t] = arguments[_t];
            return Cs(this, y, [Q]);
          }
          return function(N, Q) {
            if (typeof Q != "function" && Q !== null) throw new TypeError("Super expression must either be null or a function");
            N.prototype = Object.create(Q && Q.prototype, { constructor: { value: N, writable: true, configurable: true } }), Object.defineProperty(N, "prototype", { writable: false }), Q && uu(N, Q);
          }(y, r), function(N, Q, _t) {
            return Q && Hu(N.prototype, Q), Object.defineProperty(N, "prototype", { writable: false }), N;
          }(y, [{ key: "unsigned", get: function() {
            return true;
          } }, { key: "size", get: function() {
            return 256;
          } }]);
        }(u.LargeInt);
        function Pa(r) {
          return Pa = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(y) {
            return typeof y;
          } : function(y) {
            return y && typeof Symbol == "function" && y.constructor === Symbol && y !== Symbol.prototype ? "symbol" : typeof y;
          }, Pa(r);
        }
        function jc(r, y) {
          for (var N = 0; N < y.length; N++) {
            var Q = y[N];
            Q.enumerable = Q.enumerable || false, Q.configurable = true, "value" in Q && (Q.writable = true), Object.defineProperty(r, cu(Q.key), Q);
          }
        }
        function cu(r) {
          var y = function(N, Q) {
            if (Pa(N) != "object" || !N) return N;
            var _t = N[Symbol.toPrimitive];
            if (_t !== void 0) {
              var Qt = _t.call(N, Q);
              if (Pa(Qt) != "object") return Qt;
              throw new TypeError("@@toPrimitive must return a primitive value.");
            }
            return String(N);
          }(r, "string");
          return Pa(y) == "symbol" ? y : y + "";
        }
        function Xu(r, y, N) {
          return y = Is(y), function(Q, _t) {
            if (_t && (Pa(_t) == "object" || typeof _t == "function")) return _t;
            if (_t !== void 0) throw new TypeError("Derived constructors may only return object or undefined");
            return function(Qt) {
              if (Qt === void 0) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
              return Qt;
            }(Q);
          }(r, Ku() ? Reflect.construct(y, N || [], Is(r).constructor) : y.apply(r, N));
        }
        function Ku() {
          try {
            var r = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
            }));
          } catch {
          }
          return (Ku = function() {
            return !!r;
          })();
        }
        function Is(r) {
          return Is = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function(y) {
            return y.__proto__ || Object.getPrototypeOf(y);
          }, Is(r);
        }
        function lu(r, y) {
          return lu = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function(N, Q) {
            return N.__proto__ = Q, N;
          }, lu(r, y);
        }
        pa.defineIntBoundaries();
        var ms = function(r) {
          function y() {
            (function(Qt, Ce) {
              if (!(Qt instanceof Ce)) throw new TypeError("Cannot call a class as a function");
            })(this, y);
            for (var N = arguments.length, Q = new Array(N), _t = 0; _t < N; _t++) Q[_t] = arguments[_t];
            return Xu(this, y, [Q]);
          }
          return function(N, Q) {
            if (typeof Q != "function" && Q !== null) throw new TypeError("Super expression must either be null or a function");
            N.prototype = Object.create(Q && Q.prototype, { constructor: { value: N, writable: true, configurable: true } }), Object.defineProperty(N, "prototype", { writable: false }), Q && lu(N, Q);
          }(y, r), function(N, Q, _t) {
            return Q && jc(N.prototype, Q), Object.defineProperty(N, "prototype", { writable: false }), N;
          }(y, [{ key: "unsigned", get: function() {
            return false;
          } }, { key: "size", get: function() {
            return 128;
          } }]);
        }(u.LargeInt);
        function Ka(r) {
          return Ka = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(y) {
            return typeof y;
          } : function(y) {
            return y && typeof Symbol == "function" && y.constructor === Symbol && y !== Symbol.prototype ? "symbol" : typeof y;
          }, Ka(r);
        }
        function Vc(r, y) {
          for (var N = 0; N < y.length; N++) {
            var Q = y[N];
            Q.enumerable = Q.enumerable || false, Q.configurable = true, "value" in Q && (Q.writable = true), Object.defineProperty(r, rf(Q.key), Q);
          }
        }
        function rf(r) {
          var y = function(N, Q) {
            if (Ka(N) != "object" || !N) return N;
            var _t = N[Symbol.toPrimitive];
            if (_t !== void 0) {
              var Qt = _t.call(N, Q);
              if (Ka(Qt) != "object") return Qt;
              throw new TypeError("@@toPrimitive must return a primitive value.");
            }
            return String(N);
          }(r, "string");
          return Ka(y) == "symbol" ? y : y + "";
        }
        function Ca(r, y, N) {
          return y = Ki(y), function(Q, _t) {
            if (_t && (Ka(_t) == "object" || typeof _t == "function")) return _t;
            if (_t !== void 0) throw new TypeError("Derived constructors may only return object or undefined");
            return function(Qt) {
              if (Qt === void 0) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
              return Qt;
            }(Q);
          }(r, Sa() ? Reflect.construct(y, N || [], Ki(r).constructor) : y.apply(r, N));
        }
        function Sa() {
          try {
            var r = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
            }));
          } catch {
          }
          return (Sa = function() {
            return !!r;
          })();
        }
        function Ki(r) {
          return Ki = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function(y) {
            return y.__proto__ || Object.getPrototypeOf(y);
          }, Ki(r);
        }
        function $a(r, y) {
          return $a = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function(N, Q) {
            return N.__proto__ = Q, N;
          }, $a(r, y);
        }
        ms.defineIntBoundaries();
        var fu = function(r) {
          function y() {
            (function(Qt, Ce) {
              if (!(Qt instanceof Ce)) throw new TypeError("Cannot call a class as a function");
            })(this, y);
            for (var N = arguments.length, Q = new Array(N), _t = 0; _t < N; _t++) Q[_t] = arguments[_t];
            return Ca(this, y, [Q]);
          }
          return function(N, Q) {
            if (typeof Q != "function" && Q !== null) throw new TypeError("Super expression must either be null or a function");
            N.prototype = Object.create(Q && Q.prototype, { constructor: { value: N, writable: true, configurable: true } }), Object.defineProperty(N, "prototype", { writable: false }), Q && $a(N, Q);
          }(y, r), function(N, Q, _t) {
            return Q && Vc(N.prototype, Q), Object.defineProperty(N, "prototype", { writable: false }), N;
          }(y, [{ key: "unsigned", get: function() {
            return false;
          } }, { key: "size", get: function() {
            return 256;
          } }]);
        }(u.LargeInt);
        function ys(r) {
          return ys = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(y) {
            return typeof y;
          } : function(y) {
            return y && typeof Symbol == "function" && y.constructor === Symbol && y !== Symbol.prototype ? "symbol" : typeof y;
          }, ys(r);
        }
        function zc(r, y) {
          for (var N = 0; N < y.length; N++) {
            var Q = y[N];
            Q.enumerable = Q.enumerable || false, Q.configurable = true, "value" in Q && (Q.writable = true), Object.defineProperty(r, $u(Q.key), Q);
          }
        }
        function qc(r, y, N) {
          return (y = $u(y)) in r ? Object.defineProperty(r, y, { value: N, enumerable: true, configurable: true, writable: true }) : r[y] = N, r;
        }
        function $u(r) {
          var y = function(N, Q) {
            if (ys(N) != "object" || !N) return N;
            var _t = N[Symbol.toPrimitive];
            if (_t !== void 0) {
              var Qt = _t.call(N, Q);
              if (ys(Qt) != "object") return Qt;
              throw new TypeError("@@toPrimitive must return a primitive value.");
            }
            return (Q === "string" ? String : Number)(N);
          }(r, "string");
          return ys(y) == "symbol" ? y : y + "";
        }
        fu.defineIntBoundaries();
        var na = function() {
          return function(r, y, N) {
            return y && zc(r.prototype, y), N && zc(r, N), Object.defineProperty(r, "prototype", { writable: false }), r;
          }(function r(y, N) {
            switch (function(Q, _t) {
              if (!(Q instanceof _t)) throw new TypeError("Cannot call a class as a function");
            }(this, r), qc(this, "int", void 0), qc(this, "type", void 0), N instanceof Array || (N = [N]), N = N.map(function(Q) {
              return typeof Q == "bigint" ? Q : typeof Q.toBigInt == "function" ? Q.toBigInt() : BigInt(Q);
            }), y) {
              case "i64":
                this.int = new u.Hyper(N);
                break;
              case "i128":
                this.int = new ms(N);
                break;
              case "i256":
                this.int = new fu(N);
                break;
              case "u64":
                this.int = new u.UnsignedHyper(N);
                break;
              case "u128":
                this.int = new su(N);
                break;
              case "u256":
                this.int = new pa(N);
                break;
              default:
                throw TypeError("invalid type: ".concat(y));
            }
            this.type = y;
          }, [{ key: "toNumber", value: function() {
            var r = this.int.toBigInt();
            if (r > Number.MAX_SAFE_INTEGER || r < Number.MIN_SAFE_INTEGER) throw RangeError("value ".concat(r, " not in range for Number ") + "[".concat(Number.MAX_SAFE_INTEGER, ", ").concat(Number.MIN_SAFE_INTEGER, "]"));
            return Number(r);
          } }, { key: "toBigInt", value: function() {
            return this.int.toBigInt();
          } }, { key: "toI64", value: function() {
            this._sizeCheck(64);
            var r = this.toBigInt();
            if (BigInt.asIntN(64, r) !== r) throw RangeError("value too large for i64: ".concat(r));
            return f.ScVal.scvI64(new f.Int64(r));
          } }, { key: "toU64", value: function() {
            return this._sizeCheck(64), f.ScVal.scvU64(new f.Uint64(BigInt.asUintN(64, this.toBigInt())));
          } }, { key: "toI128", value: function() {
            this._sizeCheck(128);
            var r = this.int.toBigInt(), y = BigInt.asIntN(64, r >> 64n), N = BigInt.asUintN(64, r);
            return f.ScVal.scvI128(new f.Int128Parts({ hi: new f.Int64(y), lo: new f.Uint64(N) }));
          } }, { key: "toU128", value: function() {
            this._sizeCheck(128);
            var r = this.int.toBigInt();
            return f.ScVal.scvU128(new f.UInt128Parts({ hi: new f.Uint64(BigInt.asUintN(64, r >> 64n)), lo: new f.Uint64(BigInt.asUintN(64, r)) }));
          } }, { key: "toI256", value: function() {
            var r = this.int.toBigInt(), y = BigInt.asIntN(64, r >> 192n), N = BigInt.asUintN(64, r >> 128n), Q = BigInt.asUintN(64, r >> 64n), _t = BigInt.asUintN(64, r);
            return f.ScVal.scvI256(new f.Int256Parts({ hiHi: new f.Int64(y), hiLo: new f.Uint64(N), loHi: new f.Uint64(Q), loLo: new f.Uint64(_t) }));
          } }, { key: "toU256", value: function() {
            var r = this.int.toBigInt(), y = BigInt.asUintN(64, r >> 192n), N = BigInt.asUintN(64, r >> 128n), Q = BigInt.asUintN(64, r >> 64n), _t = BigInt.asUintN(64, r);
            return f.ScVal.scvU256(new f.UInt256Parts({ hiHi: new f.Uint64(y), hiLo: new f.Uint64(N), loHi: new f.Uint64(Q), loLo: new f.Uint64(_t) }));
          } }, { key: "toScVal", value: function() {
            switch (this.type) {
              case "i64":
                return this.toI64();
              case "i128":
                return this.toI128();
              case "i256":
                return this.toI256();
              case "u64":
                return this.toU64();
              case "u128":
                return this.toU128();
              case "u256":
                return this.toU256();
              default:
                throw TypeError("invalid type: ".concat(this.type));
            }
          } }, { key: "valueOf", value: function() {
            return this.int.valueOf();
          } }, { key: "toString", value: function() {
            return this.int.toString();
          } }, { key: "toJSON", value: function() {
            return { value: this.toBigInt().toString(), type: this.type };
          } }, { key: "_sizeCheck", value: function(r) {
            if (this.int.size > r) throw RangeError("value too large for ".concat(r, " bits (").concat(this.type, ")"));
          } }], [{ key: "isType", value: function(r) {
            switch (r) {
              case "i64":
              case "i128":
              case "i256":
              case "u64":
              case "u128":
              case "u256":
                return true;
              default:
                return false;
            }
          } }, { key: "getType", value: function(r) {
            return r.slice(3).toLowerCase();
          } }]);
        }();
        function Ms(r) {
          return Ms = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(y) {
            return typeof y;
          } : function(y) {
            return y && typeof Symbol == "function" && y.constructor === Symbol && y !== Symbol.prototype ? "symbol" : typeof y;
          }, Ms(r);
        }
        function $i(r, y, N) {
          return y = Bs(y), function(Q, _t) {
            if (_t && (Ms(_t) == "object" || typeof _t == "function")) return _t;
            if (_t !== void 0) throw new TypeError("Derived constructors may only return object or undefined");
            return function(Qt) {
              if (Qt === void 0) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
              return Qt;
            }(Q);
          }(r, Yu() ? Reflect.construct(y, N || [], Bs(r).constructor) : y.apply(r, N));
        }
        function Yu() {
          try {
            var r = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
            }));
          } catch {
          }
          return (Yu = function() {
            return !!r;
          })();
        }
        function Bs(r) {
          return Bs = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function(y) {
            return y.__proto__ || Object.getPrototypeOf(y);
          }, Bs(r);
        }
        function Ls(r, y) {
          return Ls = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function(N, Q) {
            return N.__proto__ = Q, N;
          }, Ls(r, y);
        }
        var Hc = function(r) {
          function y(N, Q) {
            var _t;
            (function(Qe, Sr) {
              if (!(Qe instanceof Sr)) throw new TypeError("Cannot call a class as a function");
            })(this, y);
            var Qt = N < 0, Ce = (_t = Q == null ? void 0 : Q.type) !== null && _t !== void 0 ? _t : "";
            if (Ce.startsWith("u") && Qt) throw TypeError("specified type ".concat(Q.type, " yet negative (").concat(N, ")"));
            if (Ce === "") {
              Ce = Qt ? "i" : "u";
              var Le = function(Qe) {
                var Sr, Kt = Qe.toString(2).length;
                return (Sr = [64, 128, 256].find(function(re) {
                  return Kt <= re;
                })) !== null && Sr !== void 0 ? Sr : Kt;
              }(N);
              switch (Le) {
                case 64:
                case 128:
                case 256:
                  Ce += Le.toString();
                  break;
                default:
                  throw RangeError("expected 64/128/256 bits for input (".concat(N, "), got ").concat(Le));
              }
            }
            return $i(this, y, [Ce, N]);
          }
          return function(N, Q) {
            if (typeof Q != "function" && Q !== null) throw new TypeError("Super expression must either be null or a function");
            N.prototype = Object.create(Q && Q.prototype, { constructor: { value: N, writable: true, configurable: true } }), Object.defineProperty(N, "prototype", { writable: false }), Q && Ls(N, Q);
          }(y, r), function(N, Q, _t) {
            return Object.defineProperty(N, "prototype", { writable: false }), N;
          }(y);
        }(na);
        function gs(r) {
          var y = na.getType(r.switch().name);
          switch (r.switch().name) {
            case "scvU32":
            case "scvI32":
              return BigInt(r.value());
            case "scvU64":
            case "scvI64":
              return new na(y, r.value()).toBigInt();
            case "scvU128":
            case "scvI128":
              return new na(y, [r.value().lo(), r.value().hi()]).toBigInt();
            case "scvU256":
            case "scvI256":
              return new na(y, [r.value().loLo(), r.value().loHi(), r.value().hiLo(), r.value().hiHi()]).toBigInt();
            default:
              throw TypeError("expected integer type, got ".concat(r.switch()));
          }
        }
        var Zu = i(8287).Buffer;
        function pu(r, y) {
          return function(N) {
            if (Array.isArray(N)) return N;
          }(r) || function(N, Q) {
            var _t = N == null ? null : typeof Symbol < "u" && N[Symbol.iterator] || N["@@iterator"];
            if (_t != null) {
              var Qt, Ce, Le, Qe, Sr = [], Kt = true, re = false;
              try {
                if (Le = (_t = _t.call(N)).next, Q === 0) {
                  if (Object(_t) !== _t) return;
                  Kt = false;
                } else for (; !(Kt = (Qt = Le.call(_t)).done) && (Sr.push(Qt.value), Sr.length !== Q); Kt = true) ;
              } catch (fe) {
                re = true, Ce = fe;
              } finally {
                try {
                  if (!Kt && _t.return != null && (Qe = _t.return(), Object(Qe) !== Qe)) return;
                } finally {
                  if (re) throw Ce;
                }
              }
              return Sr;
            }
          }(r, y) || function(N, Q) {
            if (N) {
              if (typeof N == "string") return Qu(N, Q);
              var _t = {}.toString.call(N).slice(8, -1);
              return _t === "Object" && N.constructor && (_t = N.constructor.name), _t === "Map" || _t === "Set" ? Array.from(N) : _t === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(_t) ? Qu(N, Q) : void 0;
            }
          }(r, y) || function() {
            throw new TypeError(`Invalid attempt to destructure non-iterable instance.
In order to be iterable, non-array objects must have a [Symbol.iterator]() method.`);
          }();
        }
        function Qu(r, y) {
          (y == null || y > r.length) && (y = r.length);
          for (var N = 0, Q = Array(y); N < y; N++) Q[N] = r[N];
          return Q;
        }
        function Gc(r, y) {
          var N = Object.keys(r);
          if (Object.getOwnPropertySymbols) {
            var Q = Object.getOwnPropertySymbols(r);
            y && (Q = Q.filter(function(_t) {
              return Object.getOwnPropertyDescriptor(r, _t).enumerable;
            })), N.push.apply(N, Q);
          }
          return N;
        }
        function Wc(r, y, N) {
          return (y = function(Q) {
            var _t = function(Qt, Ce) {
              if (Ra(Qt) != "object" || !Qt) return Qt;
              var Le = Qt[Symbol.toPrimitive];
              if (Le !== void 0) {
                var Qe = Le.call(Qt, Ce);
                if (Ra(Qe) != "object") return Qe;
                throw new TypeError("@@toPrimitive must return a primitive value.");
              }
              return (Ce === "string" ? String : Number)(Qt);
            }(Q, "string");
            return Ra(_t) == "symbol" ? _t : _t + "";
          }(y)) in r ? Object.defineProperty(r, y, { value: N, enumerable: true, configurable: true, writable: true }) : r[y] = N, r;
        }
        function Ra(r) {
          return Ra = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(y) {
            return typeof y;
          } : function(y) {
            return y && typeof Symbol == "function" && y.constructor === Symbol && y !== Symbol.prototype ? "symbol" : typeof y;
          }, Ra(r);
        }
        function n(r) {
          var y = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};
          switch (Ra(r)) {
            case "object":
              var N, Q, _t;
              if (r === null) return f.ScVal.scvVoid();
              if (r instanceof f.ScVal) return r;
              if (r instanceof Sn) return r.toScVal();
              if (r instanceof Xr) return n(r.publicKey(), { type: "address" });
              if (r instanceof Uc) return r.address().toScVal();
              if (r instanceof Uint8Array || Zu.isBuffer(r)) {
                var Qt, Ce = Uint8Array.from(r);
                switch ((Qt = y == null ? void 0 : y.type) !== null && Qt !== void 0 ? Qt : "bytes") {
                  case "bytes":
                    return f.ScVal.scvBytes(Ce);
                  case "symbol":
                    return f.ScVal.scvSymbol(Ce);
                  case "string":
                    return f.ScVal.scvString(Ce);
                  default:
                    throw new TypeError("invalid type (".concat(y.type, ") specified for bytes-like value"));
                }
              }
              if (Array.isArray(r)) return f.ScVal.scvVec(r.map(function(Sr, Kt) {
                return Array.isArray(y.type) ? n(Sr, function(re) {
                  for (var fe = 1; fe < arguments.length; fe++) {
                    var Re = arguments[fe] != null ? arguments[fe] : {};
                    fe % 2 ? Gc(Object(Re), true).forEach(function(Te) {
                      Wc(re, Te, Re[Te]);
                    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(re, Object.getOwnPropertyDescriptors(Re)) : Gc(Object(Re)).forEach(function(Te) {
                      Object.defineProperty(re, Te, Object.getOwnPropertyDescriptor(Re, Te));
                    });
                  }
                  return re;
                }({}, y.type.length > Kt && { type: y.type[Kt] })) : n(Sr, y);
              }));
              if (((N = (Q = r.constructor) === null || Q === void 0 ? void 0 : Q.name) !== null && N !== void 0 ? N : "") !== "Object") throw new TypeError("cannot interpret ".concat((_t = r.constructor) === null || _t === void 0 ? void 0 : _t.name, " value as ScVal (").concat(JSON.stringify(r), ")"));
              return f.ScVal.scvMap(Object.entries(r).sort(function(Sr, Kt) {
                var re = pu(Sr, 1)[0], fe = pu(Kt, 1)[0];
                return re.localeCompare(fe);
              }).map(function(Sr) {
                var Kt, re, fe = pu(Sr, 2), Re = fe[0], Te = fe[1], Fe = pu((Kt = ((re = y == null ? void 0 : y.type) !== null && re !== void 0 ? re : {})[Re]) !== null && Kt !== void 0 ? Kt : [null, null], 2), Xe = Fe[0], Ne = Fe[1], Be = Xe ? { type: Xe } : {}, Ue = Ne ? { type: Ne } : {};
                return new f.ScMapEntry({ key: n(Re, Be), val: n(Te, Ue) });
              }));
            case "number":
            case "bigint":
              switch (y == null ? void 0 : y.type) {
                case "u32":
                  return f.ScVal.scvU32(r);
                case "i32":
                  return f.ScVal.scvI32(r);
              }
              return new Hc(r, { type: y == null ? void 0 : y.type }).toScVal();
            case "string":
              var Le, Qe = (Le = y == null ? void 0 : y.type) !== null && Le !== void 0 ? Le : "string";
              switch (Qe) {
                case "string":
                  return f.ScVal.scvString(r);
                case "symbol":
                  return f.ScVal.scvSymbol(r);
                case "address":
                  return new Sn(r).toScVal();
                case "u32":
                  return f.ScVal.scvU32(parseInt(r, 10));
                case "i32":
                  return f.ScVal.scvI32(parseInt(r, 10));
                default:
                  if (na.isType(Qe)) return new na(Qe, r).toScVal();
                  throw new TypeError("invalid type (".concat(y.type, ") specified for string value"));
              }
            case "boolean":
              return f.ScVal.scvBool(r);
            case "undefined":
              return f.ScVal.scvVoid();
            case "function":
              return n(r());
            default:
              throw new TypeError("failed to convert typeof ".concat(Ra(r), " (").concat(r, ")"));
          }
        }
        function A(r) {
          var y, N;
          switch (r.switch().value) {
            case f.ScValType.scvVoid().value:
              return null;
            case f.ScValType.scvU64().value:
            case f.ScValType.scvI64().value:
              return r.value().toBigInt();
            case f.ScValType.scvU128().value:
            case f.ScValType.scvI128().value:
            case f.ScValType.scvU256().value:
            case f.ScValType.scvI256().value:
              return gs(r);
            case f.ScValType.scvVec().value:
              return ((y = r.vec()) !== null && y !== void 0 ? y : []).map(A);
            case f.ScValType.scvAddress().value:
              return Sn.fromScVal(r).toString();
            case f.ScValType.scvMap().value:
              return Object.fromEntries(((N = r.map()) !== null && N !== void 0 ? N : []).map(function(Qt) {
                return [A(Qt.key()), A(Qt.val())];
              }));
            case f.ScValType.scvBool().value:
            case f.ScValType.scvU32().value:
            case f.ScValType.scvI32().value:
            case f.ScValType.scvBytes().value:
              return r.value();
            case f.ScValType.scvSymbol().value:
            case f.ScValType.scvString().value:
              var Q = r.value();
              if (Zu.isBuffer(Q) || ArrayBuffer.isView(Q)) try {
                return new TextDecoder().decode(Q);
              } catch {
                return new Uint8Array(Q.buffer);
              }
              return Q;
            case f.ScValType.scvTimepoint().value:
            case f.ScValType.scvDuration().value:
              return new f.Uint64(r.value()).toBigInt();
            case f.ScValType.scvError().value:
              if (r.error().switch().value === f.ScErrorType.sceContract().value) return { type: "contract", code: r.error().contractCode() };
              var _t = r.error();
              return { type: "system", code: _t.code().value, value: _t.code().name };
            default:
              return r.value();
          }
        }
        function G(r) {
          return G = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(y) {
            return typeof y;
          } : function(y) {
            return y && typeof Symbol == "function" && y.constructor === Symbol && y !== Symbol.prototype ? "symbol" : typeof y;
          }, G(r);
        }
        function st(r, y) {
          var N = Object.keys(r);
          if (Object.getOwnPropertySymbols) {
            var Q = Object.getOwnPropertySymbols(r);
            y && (Q = Q.filter(function(_t) {
              return Object.getOwnPropertyDescriptor(r, _t).enumerable;
            })), N.push.apply(N, Q);
          }
          return N;
        }
        function Gt(r) {
          for (var y = 1; y < arguments.length; y++) {
            var N = arguments[y] != null ? arguments[y] : {};
            y % 2 ? st(Object(N), true).forEach(function(Q) {
              Pe(r, Q, N[Q]);
            }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(r, Object.getOwnPropertyDescriptors(N)) : st(Object(N)).forEach(function(Q) {
              Object.defineProperty(r, Q, Object.getOwnPropertyDescriptor(N, Q));
            });
          }
          return r;
        }
        function Pe(r, y, N) {
          return (y = function(Q) {
            var _t = function(Qt, Ce) {
              if (G(Qt) != "object" || !Qt) return Qt;
              var Le = Qt[Symbol.toPrimitive];
              if (Le !== void 0) {
                var Qe = Le.call(Qt, Ce);
                if (G(Qe) != "object") return Qe;
                throw new TypeError("@@toPrimitive must return a primitive value.");
              }
              return (Ce === "string" ? String : Number)(Qt);
            }(Q, "string");
            return G(_t) == "symbol" ? _t : _t + "";
          }(y)) in r ? Object.defineProperty(r, y, { value: N, enumerable: true, configurable: true, writable: true }) : r[y] = N, r;
        }
        function We(r) {
          return r.map(function(y) {
            return y.inSuccessfulContractCall ? er(y.event()) : er(y);
          });
        }
        function er(r) {
          return Gt(Gt({}, typeof r.contractId == "function" && r.contractId() != null && { contractId: pe.encodeContract(r.contractId()) }), {}, { type: r.type().name, topics: r.body().value().topics().map(function(y) {
            return A(y);
          }), data: A(r.body().value().data()) });
        }
        f.scvSortedMap = function(r) {
          var y = Array.from(r).sort(function(N, Q) {
            var _t = A(N.key()), Qt = A(Q.key());
            switch (Ra(_t)) {
              case "number":
              case "bigint":
                return _t < Qt ? -1 : 1;
              default:
                return _t.toString().localeCompare(Qt.toString());
            }
          });
          return f.ScVal.scvMap(y);
        };
        var Rr = i(8287).Buffer;
        function kr() {
          var r, y, N = typeof Symbol == "function" ? Symbol : {}, Q = N.iterator || "@@iterator", _t = N.toStringTag || "@@toStringTag";
          function Qt(Re, Te, Fe, Xe) {
            var Ne = Te && Te.prototype instanceof Le ? Te : Le, Be = Object.create(Ne.prototype);
            return vr(Be, "_invoke", function(Ue, He, qr) {
              var rn, nn, hn, zn = 0, Jr = qr || [], ro = false, io = { p: 0, n: 0, v: r, a: Uo, f: Uo.bind(r, 4), d: function(Mo, qo) {
                return rn = Mo, nn = 0, hn = r, io.n = qo, Ce;
              } };
              function Uo(Mo, qo) {
                for (nn = Mo, hn = qo, y = 0; !ro && zn && !xe && y < Jr.length; y++) {
                  var xe, ke = Jr[y], tr = io.p, Mr = ke[2];
                  Mo > 3 ? (xe = Mr === qo) && (hn = ke[(nn = ke[4]) ? 5 : (nn = 3, 3)], ke[4] = ke[5] = r) : ke[0] <= tr && ((xe = Mo < 2 && tr < ke[1]) ? (nn = 0, io.v = qo, io.n = ke[1]) : tr < Mr && (xe = Mo < 3 || ke[0] > qo || qo > Mr) && (ke[4] = Mo, ke[5] = qo, io.n = Mr, nn = 0));
                }
                if (xe || Mo > 1) return Ce;
                throw ro = true, qo;
              }
              return function(Mo, qo, xe) {
                if (zn > 1) throw TypeError("Generator is already running");
                for (ro && qo === 1 && Uo(qo, xe), nn = qo, hn = xe; (y = nn < 2 ? r : hn) || !ro; ) {
                  rn || (nn ? nn < 3 ? (nn > 1 && (io.n = -1), Uo(nn, hn)) : io.n = hn : io.v = hn);
                  try {
                    if (zn = 2, rn) {
                      if (nn || (Mo = "next"), y = rn[Mo]) {
                        if (!(y = y.call(rn, hn))) throw TypeError("iterator result is not an object");
                        if (!y.done) return y;
                        hn = y.value, nn < 2 && (nn = 0);
                      } else nn === 1 && (y = rn.return) && y.call(rn), nn < 2 && (hn = TypeError("The iterator does not provide a '" + Mo + "' method"), nn = 1);
                      rn = r;
                    } else if ((y = (ro = io.n < 0) ? hn : Ue.call(He, io)) !== Ce) break;
                  } catch (ke) {
                    rn = r, nn = 1, hn = ke;
                  } finally {
                    zn = 1;
                  }
                }
                return { value: y, done: ro };
              };
            }(Re, Fe, Xe), true), Be;
          }
          var Ce = {};
          function Le() {
          }
          function Qe() {
          }
          function Sr() {
          }
          y = Object.getPrototypeOf;
          var Kt = [][Q] ? y(y([][Q]())) : (vr(y = {}, Q, function() {
            return this;
          }), y), re = Sr.prototype = Le.prototype = Object.create(Kt);
          function fe(Re) {
            return Object.setPrototypeOf ? Object.setPrototypeOf(Re, Sr) : (Re.__proto__ = Sr, vr(Re, _t, "GeneratorFunction")), Re.prototype = Object.create(re), Re;
          }
          return Qe.prototype = Sr, vr(re, "constructor", Sr), vr(Sr, "constructor", Qe), Qe.displayName = "GeneratorFunction", vr(Sr, _t, "GeneratorFunction"), vr(re), vr(re, _t, "Generator"), vr(re, Q, function() {
            return this;
          }), vr(re, "toString", function() {
            return "[object Generator]";
          }), (kr = function() {
            return { w: Qt, m: fe };
          })();
        }
        function vr(r, y, N, Q) {
          var _t = Object.defineProperty;
          try {
            _t({}, "", {});
          } catch {
            _t = 0;
          }
          vr = function(Qt, Ce, Le, Qe) {
            if (Ce) _t ? _t(Qt, Ce, { value: Le, enumerable: !Qe, configurable: !Qe, writable: !Qe }) : Qt[Ce] = Le;
            else {
              var Sr = function(Kt, re) {
                vr(Qt, Kt, function(fe) {
                  return this._invoke(Kt, re, fe);
                });
              };
              Sr("next", 0), Sr("throw", 1), Sr("return", 2);
            }
          }, vr(r, y, N, Q);
        }
        function ur(r, y, N, Q, _t, Qt, Ce) {
          try {
            var Le = r[Qt](Ce), Qe = Le.value;
          } catch (Sr) {
            return void N(Sr);
          }
          Le.done ? y(Qe) : Promise.resolve(Qe).then(Q, _t);
        }
        function Er(r, y, N) {
          return un.apply(this, arguments);
        }
        function un() {
          var r;
          return r = kr().m(function y(N, Q, _t) {
            var Qt, Ce, Le, Qe, Sr, Kt, re, fe, Re, Te, Fe = arguments;
            return kr().w(function(Xe) {
              for (; ; ) switch (Xe.n) {
                case 0:
                  if (Qt = Fe.length > 3 && Fe[3] !== void 0 ? Fe[3] : Ps.FUTURENET, N.credentials().switch().value === f.SorobanCredentialsType.sorobanCredentialsAddress().value) {
                    Xe.n = 1;
                    break;
                  }
                  return Xe.a(2, N);
                case 1:
                  if (Ce = f.SorobanAuthorizationEntry.fromXDR(N.toXDR()), (Le = Ce.credentials().address()).signatureExpirationLedger(_t), Qe = b(Rr.from(Qt)), Sr = f.HashIdPreimage.envelopeTypeSorobanAuthorization(new f.HashIdPreimageSorobanAuthorization({ networkId: Qe, nonce: Le.nonce(), invocation: Ce.rootInvocation(), signatureExpirationLedger: Le.signatureExpirationLedger() })), Kt = b(Sr.toXDR()), typeof Q != "function") {
                    Xe.n = 3;
                    break;
                  }
                  return Xe.n = 2, Q(Sr);
                case 2:
                  (Re = Xe.v) != null && Re.signature ? (re = Rr.from(Re.signature), fe = Re.publicKey) : (re = Rr.from(Re), fe = Sn.fromScAddress(Le.address()).toString()), Xe.n = 4;
                  break;
                case 3:
                  re = Rr.from(Q.sign(Kt)), fe = Q.publicKey();
                case 4:
                  if (Xr.fromPublicKey(fe).verify(Kt, re)) {
                    Xe.n = 5;
                    break;
                  }
                  throw new Error("signature doesn't match payload");
                case 5:
                  return Te = n({ public_key: pe.decodeEd25519PublicKey(fe), signature: re }, { type: { public_key: ["symbol", null], signature: ["symbol", null] } }), Le.signature(f.ScVal.scvVec([Te])), Xe.a(2, Ce);
              }
            }, y);
          }), un = function() {
            var y = this, N = arguments;
            return new Promise(function(Q, _t) {
              var Qt = r.apply(y, N);
              function Ce(Qe) {
                ur(Qt, Q, _t, Ce, Le, "next", Qe);
              }
              function Le(Qe) {
                ur(Qt, Q, _t, Ce, Le, "throw", Qe);
              }
              Ce(void 0);
            });
          }, un.apply(this, arguments);
        }
        function cn(r, y, N) {
          var Q = arguments.length > 3 && arguments[3] !== void 0 ? arguments[3] : "", _t = arguments.length > 4 && arguments[4] !== void 0 ? arguments[4] : Ps.FUTURENET, Qt = Xr.random().rawPublicKey(), Ce = new f.Int64(Qt.subarray(0, 8).reduce(function(Qe, Sr) {
            return Qe << 8 | Sr;
          }, 0)), Le = Q || r.publicKey();
          if (!Le) throw new Error("authorizeInvocation requires publicKey parameter");
          return Er(new f.SorobanAuthorizationEntry({ rootInvocation: N, credentials: f.SorobanCredentials.sorobanCredentialsAddress(new f.SorobanAddressCredentials({ address: new Sn(Le).toScAddress(), nonce: Ce, signatureExpirationLedger: 0, signature: f.ScVal.scvVec([]) })) }), r, y, _t);
        }
        function mn(r) {
          return mn = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(y) {
            return typeof y;
          } : function(y) {
            return y && typeof Symbol == "function" && y.constructor === Symbol && y !== Symbol.prototype ? "symbol" : typeof y;
          }, mn(r);
        }
        function Pn(r, y) {
          var N = Object.keys(r);
          if (Object.getOwnPropertySymbols) {
            var Q = Object.getOwnPropertySymbols(r);
            y && (Q = Q.filter(function(_t) {
              return Object.getOwnPropertyDescriptor(r, _t).enumerable;
            })), N.push.apply(N, Q);
          }
          return N;
        }
        function kn(r, y, N) {
          return (y = function(Q) {
            var _t = function(Qt, Ce) {
              if (mn(Qt) != "object" || !Qt) return Qt;
              var Le = Qt[Symbol.toPrimitive];
              if (Le !== void 0) {
                var Qe = Le.call(Qt, Ce);
                if (mn(Qe) != "object") return Qe;
                throw new TypeError("@@toPrimitive must return a primitive value.");
              }
              return (Ce === "string" ? String : Number)(Qt);
            }(Q, "string");
            return mn(_t) == "symbol" ? _t : _t + "";
          }(y)) in r ? Object.defineProperty(r, y, { value: N, enumerable: true, configurable: true, writable: true }) : r[y] = N, r;
        }
        function so(r) {
          var y = r.function(), N = {}, Q = y.value();
          switch (y.switch().value) {
            case 0:
              N.type = "execute", N.args = { source: Sn.fromScAddress(Q.contractAddress()).toString(), function: Q.functionName(), args: Q.args().map(function(Sr) {
                return A(Sr);
              }) };
              break;
            case 1:
            case 2:
              var _t = y.switch().value === 2;
              N.type = "create", N.args = {};
              var Qt = [Q.executable(), Q.contractIdPreimage()], Ce = Qt[0], Le = Qt[1];
              if (!!Ce.switch().value != !!Le.switch().value) throw new Error("creation function appears invalid: ".concat(JSON.stringify(Q), " (should be wasm+address or token+asset)"));
              switch (Ce.switch().value) {
                case 0:
                  var Qe = Le.fromAddress();
                  N.args.type = "wasm", N.args.wasm = function(Sr) {
                    for (var Kt = 1; Kt < arguments.length; Kt++) {
                      var re = arguments[Kt] != null ? arguments[Kt] : {};
                      Kt % 2 ? Pn(Object(re), true).forEach(function(fe) {
                        kn(Sr, fe, re[fe]);
                      }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(Sr, Object.getOwnPropertyDescriptors(re)) : Pn(Object(re)).forEach(function(fe) {
                        Object.defineProperty(Sr, fe, Object.getOwnPropertyDescriptor(re, fe));
                      });
                    }
                    return Sr;
                  }({ salt: Qe.salt().toString("hex"), hash: Ce.wasmHash().toString("hex"), address: Sn.fromScAddress(Qe.address()).toString() }, _t && { constructorArgs: Q.constructorArgs().map(function(Sr) {
                    return A(Sr);
                  }) });
                  break;
                case 1:
                  N.args.type = "sac", N.args.asset = Rn.fromOperation(Le.fromAsset()).toString();
                  break;
                default:
                  throw new Error("unknown creation type: ".concat(JSON.stringify(Ce)));
              }
              break;
            default:
              throw new Error("unknown invocation type (".concat(y.switch(), "): ").concat(JSON.stringify(y)));
          }
          return N.invocations = r.subInvocations().map(function(Sr) {
            return so(Sr);
          }), N;
        }
        function Mn(r, y) {
          $n(r, 1, y);
        }
        function $n(r, y, N, Q) {
          N(r, y, Q) !== false && r.subInvocations().forEach(function(_t) {
            return $n(_t, y + 1, N, r);
          });
        }
        const On = (l = i.hmd(l)).exports;
      }, 7176: (l, s, i) => {
        var u, d = i(3126), f = i(5795);
        try {
          u = [].__proto__ === Array.prototype;
        } catch (h) {
          if (!h || typeof h != "object" || !("code" in h) || h.code !== "ERR_PROTO_ACCESS") throw h;
        }
        var p = !!u && f && f(Object.prototype, "__proto__"), g = Object, b = g.getPrototypeOf;
        l.exports = p && typeof p.get == "function" ? d([p.get]) : typeof b == "function" && function(h) {
          return b(h == null ? h : g(h));
        };
      }, 7244: (l, s, i) => {
        var u = i(9092)(), d = i(6556)("Object.prototype.toString"), f = function(b) {
          return !(u && b && typeof b == "object" && Symbol.toStringTag in b) && d(b) === "[object Arguments]";
        }, p = function(b) {
          return !!f(b) || b !== null && typeof b == "object" && "length" in b && typeof b.length == "number" && b.length >= 0 && d(b) !== "[object Array]" && "callee" in b && d(b.callee) === "[object Function]";
        }, g = function() {
          return f(arguments);
        }();
        f.isLegacyArguments = p, l.exports = g ? f : p;
      }, 7526: (l, s) => {
        s.byteLength = function(m) {
          var c = g(m), w = c[0], T = c[1];
          return 3 * (w + T) / 4 - T;
        }, s.toByteArray = function(m) {
          var c, w, T = g(m), P = T[0], k = T[1], R = new d(function(U, M, Z) {
            return 3 * (M + Z) / 4 - Z;
          }(0, P, k)), F = 0, v = k > 0 ? P - 4 : P;
          for (w = 0; w < v; w += 4) c = u[m.charCodeAt(w)] << 18 | u[m.charCodeAt(w + 1)] << 12 | u[m.charCodeAt(w + 2)] << 6 | u[m.charCodeAt(w + 3)], R[F++] = c >> 16 & 255, R[F++] = c >> 8 & 255, R[F++] = 255 & c;
          return k === 2 && (c = u[m.charCodeAt(w)] << 2 | u[m.charCodeAt(w + 1)] >> 4, R[F++] = 255 & c), k === 1 && (c = u[m.charCodeAt(w)] << 10 | u[m.charCodeAt(w + 1)] << 4 | u[m.charCodeAt(w + 2)] >> 2, R[F++] = c >> 8 & 255, R[F++] = 255 & c), R;
        }, s.fromByteArray = function(m) {
          for (var c, w = m.length, T = w % 3, P = [], k = 16383, R = 0, F = w - T; R < F; R += k) P.push(h(m, R, R + k > F ? F : R + k));
          return T === 1 ? (c = m[w - 1], P.push(i[c >> 2] + i[c << 4 & 63] + "==")) : T === 2 && (c = (m[w - 2] << 8) + m[w - 1], P.push(i[c >> 10] + i[c >> 4 & 63] + i[c << 2 & 63] + "=")), P.join("");
        };
        for (var i = [], u = [], d = typeof Uint8Array < "u" ? Uint8Array : Array, f = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/", p = 0; p < 64; ++p) i[p] = f[p], u[f.charCodeAt(p)] = p;
        function g(m) {
          var c = m.length;
          if (c % 4 > 0) throw new Error("Invalid string. Length must be a multiple of 4");
          var w = m.indexOf("=");
          return w === -1 && (w = c), [w, w === c ? 0 : 4 - w % 4];
        }
        function b(m) {
          return i[m >> 18 & 63] + i[m >> 12 & 63] + i[m >> 6 & 63] + i[63 & m];
        }
        function h(m, c, w) {
          for (var T, P = [], k = c; k < w; k += 3) T = (m[k] << 16 & 16711680) + (m[k + 1] << 8 & 65280) + (255 & m[k + 2]), P.push(b(T));
          return P.join("");
        }
        u[45] = 62, u[95] = 63;
      }, 7653: (l, s, i) => {
        var u = i(8452), d = i(487), f = i(9211), p = i(9394), g = i(6576), b = d(p(), Object);
        u(b, { getPolyfill: p, implementation: f, shim: g }), l.exports = b;
      }, 7816: (l, s, i) => {
        var u = i(6698), d = i(392), f = i(2861).Buffer, p = [1518500249, 1859775393, -1894007588, -899497514], g = new Array(80);
        function b() {
          this.init(), this._w = g, d.call(this, 64, 56);
        }
        function h(w) {
          return w << 5 | w >>> 27;
        }
        function m(w) {
          return w << 30 | w >>> 2;
        }
        function c(w, T, P, k) {
          return w === 0 ? T & P | ~T & k : w === 2 ? T & P | T & k | P & k : T ^ P ^ k;
        }
        u(b, d), b.prototype.init = function() {
          return this._a = 1732584193, this._b = 4023233417, this._c = 2562383102, this._d = 271733878, this._e = 3285377520, this;
        }, b.prototype._update = function(w) {
          for (var T = this._w, P = 0 | this._a, k = 0 | this._b, R = 0 | this._c, F = 0 | this._d, v = 0 | this._e, U = 0; U < 16; ++U) T[U] = w.readInt32BE(4 * U);
          for (; U < 80; ++U) T[U] = T[U - 3] ^ T[U - 8] ^ T[U - 14] ^ T[U - 16];
          for (var M = 0; M < 80; ++M) {
            var Z = ~~(M / 20), D = h(P) + c(Z, k, R, F) + v + T[M] + p[Z] | 0;
            v = F, F = R, R = m(k), k = P, P = D;
          }
          this._a = P + this._a | 0, this._b = k + this._b | 0, this._c = R + this._c | 0, this._d = F + this._d | 0, this._e = v + this._e | 0;
        }, b.prototype._hash = function() {
          var w = f.allocUnsafe(20);
          return w.writeInt32BE(0 | this._a, 0), w.writeInt32BE(0 | this._b, 4), w.writeInt32BE(0 | this._c, 8), w.writeInt32BE(0 | this._d, 12), w.writeInt32BE(0 | this._e, 16), w;
        }, l.exports = b;
      }, 8002: (l) => {
        l.exports = Math.min;
      }, 8068: (l) => {
        l.exports = SyntaxError;
      }, 8075: (l, s, i) => {
        var u = i(453), d = i(487), f = d(u("String.prototype.indexOf"));
        l.exports = function(p, g) {
          var b = u(p, !!g);
          return typeof b == "function" && f(p, ".prototype.") > -1 ? d(b) : b;
        };
      }, 8184: (l, s, i) => {
        var u, d = i(6556), f = i(9721)(/^\s*(?:function)?\*/), p = i(9092)(), g = i(3628), b = d("Object.prototype.toString"), h = d("Function.prototype.toString");
        l.exports = function(m) {
          if (typeof m != "function") return false;
          if (f(h(m))) return true;
          if (!p) return b(m) === "[object GeneratorFunction]";
          if (!g) return false;
          if (u === void 0) {
            var c = function() {
              if (!p) return false;
              try {
                return Function("return function*() {}")();
              } catch {
              }
            }();
            u = !!c && g(c);
          }
          return g(m) === u;
        };
      }, 8287: (l, s, i) => {
        var u = i(6763);
        const d = i(7526), f = i(251), p = typeof Symbol == "function" && typeof Symbol.for == "function" ? Symbol.for("nodejs.util.inspect.custom") : null;
        s.Buffer = h, s.SlowBuffer = function(O) {
          return +O != O && (O = 0), h.alloc(+O);
        }, s.INSPECT_MAX_BYTES = 50;
        const g = 2147483647;
        function b(O) {
          if (O > g) throw new RangeError('The value "' + O + '" is invalid for option "size"');
          const z = new Uint8Array(O);
          return Object.setPrototypeOf(z, h.prototype), z;
        }
        function h(O, z, J) {
          if (typeof O == "number") {
            if (typeof z == "string") throw new TypeError('The "string" argument must be of type string. Received type number');
            return w(O);
          }
          return m(O, z, J);
        }
        function m(O, z, J) {
          if (typeof O == "string") return function(K, q) {
            if (typeof q == "string" && q !== "" || (q = "utf8"), !h.isEncoding(q)) throw new TypeError("Unknown encoding: " + q);
            const _ = 0 | R(K, q);
            let L = b(_);
            const et = L.write(K, q);
            return et !== _ && (L = L.slice(0, et)), L;
          }(O, z);
          if (ArrayBuffer.isView(O)) return function(K) {
            if (Vt(K, Uint8Array)) {
              const q = new Uint8Array(K);
              return P(q.buffer, q.byteOffset, q.byteLength);
            }
            return T(K);
          }(O);
          if (O == null) throw new TypeError("The first argument must be one of type string, Buffer, ArrayBuffer, Array, or Array-like Object. Received type " + typeof O);
          if (Vt(O, ArrayBuffer) || O && Vt(O.buffer, ArrayBuffer) || typeof SharedArrayBuffer < "u" && (Vt(O, SharedArrayBuffer) || O && Vt(O.buffer, SharedArrayBuffer))) return P(O, z, J);
          if (typeof O == "number") throw new TypeError('The "value" argument must not be of type number. Received type number');
          const tt = O.valueOf && O.valueOf();
          if (tt != null && tt !== O) return h.from(tt, z, J);
          const H = function(K) {
            if (h.isBuffer(K)) {
              const q = 0 | k(K.length), _ = b(q);
              return _.length === 0 || K.copy(_, 0, 0, q), _;
            }
            if (K.length !== void 0) return typeof K.length != "number" || oe(K.length) ? b(0) : T(K);
            if (K.type === "Buffer" && Array.isArray(K.data)) return T(K.data);
          }(O);
          if (H) return H;
          if (typeof Symbol < "u" && Symbol.toPrimitive != null && typeof O[Symbol.toPrimitive] == "function") return h.from(O[Symbol.toPrimitive]("string"), z, J);
          throw new TypeError("The first argument must be one of type string, Buffer, ArrayBuffer, Array, or Array-like Object. Received type " + typeof O);
        }
        function c(O) {
          if (typeof O != "number") throw new TypeError('"size" argument must be of type number');
          if (O < 0) throw new RangeError('The value "' + O + '" is invalid for option "size"');
        }
        function w(O) {
          return c(O), b(O < 0 ? 0 : 0 | k(O));
        }
        function T(O) {
          const z = O.length < 0 ? 0 : 0 | k(O.length), J = b(z);
          for (let tt = 0; tt < z; tt += 1) J[tt] = 255 & O[tt];
          return J;
        }
        function P(O, z, J) {
          if (z < 0 || O.byteLength < z) throw new RangeError('"offset" is outside of buffer bounds');
          if (O.byteLength < z + (J || 0)) throw new RangeError('"length" is outside of buffer bounds');
          let tt;
          return tt = z === void 0 && J === void 0 ? new Uint8Array(O) : J === void 0 ? new Uint8Array(O, z) : new Uint8Array(O, z, J), Object.setPrototypeOf(tt, h.prototype), tt;
        }
        function k(O) {
          if (O >= g) throw new RangeError("Attempt to allocate Buffer larger than maximum size: 0x" + g.toString(16) + " bytes");
          return 0 | O;
        }
        function R(O, z) {
          if (h.isBuffer(O)) return O.length;
          if (ArrayBuffer.isView(O) || Vt(O, ArrayBuffer)) return O.byteLength;
          if (typeof O != "string") throw new TypeError('The "string" argument must be one of type string, Buffer, or ArrayBuffer. Received type ' + typeof O);
          const J = O.length, tt = arguments.length > 2 && arguments[2] === true;
          if (!tt && J === 0) return 0;
          let H = false;
          for (; ; ) switch (z) {
            case "ascii":
            case "latin1":
            case "binary":
              return J;
            case "utf8":
            case "utf-8":
              return Bt(O).length;
            case "ucs2":
            case "ucs-2":
            case "utf16le":
            case "utf-16le":
              return 2 * J;
            case "hex":
              return J >>> 1;
            case "base64":
              return At(O).length;
            default:
              if (H) return tt ? -1 : Bt(O).length;
              z = ("" + z).toLowerCase(), H = true;
          }
        }
        function F(O, z, J) {
          let tt = false;
          if ((z === void 0 || z < 0) && (z = 0), z > this.length || ((J === void 0 || J > this.length) && (J = this.length), J <= 0) || (J >>>= 0) <= (z >>>= 0)) return "";
          for (O || (O = "utf8"); ; ) switch (O) {
            case "hex":
              return rt(this, z, J);
            case "utf8":
            case "utf-8":
              return W(this, z, J);
            case "ascii":
              return pt(this, z, J);
            case "latin1":
            case "binary":
              return at(this, z, J);
            case "base64":
              return B(this, z, J);
            case "ucs2":
            case "ucs-2":
            case "utf16le":
            case "utf-16le":
              return ot(this, z, J);
            default:
              if (tt) throw new TypeError("Unknown encoding: " + O);
              O = (O + "").toLowerCase(), tt = true;
          }
        }
        function v(O, z, J) {
          const tt = O[z];
          O[z] = O[J], O[J] = tt;
        }
        function U(O, z, J, tt, H) {
          if (O.length === 0) return -1;
          if (typeof J == "string" ? (tt = J, J = 0) : J > 2147483647 ? J = 2147483647 : J < -2147483648 && (J = -2147483648), oe(J = +J) && (J = H ? 0 : O.length - 1), J < 0 && (J = O.length + J), J >= O.length) {
            if (H) return -1;
            J = O.length - 1;
          } else if (J < 0) {
            if (!H) return -1;
            J = 0;
          }
          if (typeof z == "string" && (z = h.from(z, tt)), h.isBuffer(z)) return z.length === 0 ? -1 : M(O, z, J, tt, H);
          if (typeof z == "number") return z &= 255, typeof Uint8Array.prototype.indexOf == "function" ? H ? Uint8Array.prototype.indexOf.call(O, z, J) : Uint8Array.prototype.lastIndexOf.call(O, z, J) : M(O, [z], J, tt, H);
          throw new TypeError("val must be string, number or Buffer");
        }
        function M(O, z, J, tt, H) {
          let K, q = 1, _ = O.length, L = z.length;
          if (tt !== void 0 && ((tt = String(tt).toLowerCase()) === "ucs2" || tt === "ucs-2" || tt === "utf16le" || tt === "utf-16le")) {
            if (O.length < 2 || z.length < 2) return -1;
            q = 2, _ /= 2, L /= 2, J /= 2;
          }
          function et(St, kt) {
            return q === 1 ? St[kt] : St.readUInt16BE(kt * q);
          }
          if (H) {
            let St = -1;
            for (K = J; K < _; K++) if (et(O, K) === et(z, St === -1 ? 0 : K - St)) {
              if (St === -1 && (St = K), K - St + 1 === L) return St * q;
            } else St !== -1 && (K -= K - St), St = -1;
          } else for (J + L > _ && (J = _ - L), K = J; K >= 0; K--) {
            let St = true;
            for (let kt = 0; kt < L; kt++) if (et(O, K + kt) !== et(z, kt)) {
              St = false;
              break;
            }
            if (St) return K;
          }
          return -1;
        }
        function Z(O, z, J, tt) {
          J = Number(J) || 0;
          const H = O.length - J;
          tt ? (tt = Number(tt)) > H && (tt = H) : tt = H;
          const K = z.length;
          let q;
          for (tt > K / 2 && (tt = K / 2), q = 0; q < tt; ++q) {
            const _ = parseInt(z.substr(2 * q, 2), 16);
            if (oe(_)) return q;
            O[J + q] = _;
          }
          return q;
        }
        function D(O, z, J, tt) {
          return Ut(Bt(z, O.length - J), O, J, tt);
        }
        function V(O, z, J, tt) {
          return Ut(function(H) {
            const K = [];
            for (let q = 0; q < H.length; ++q) K.push(255 & H.charCodeAt(q));
            return K;
          }(z), O, J, tt);
        }
        function S(O, z, J, tt) {
          return Ut(At(z), O, J, tt);
        }
        function x(O, z, J, tt) {
          return Ut(function(H, K) {
            let q, _, L;
            const et = [];
            for (let St = 0; St < H.length && !((K -= 2) < 0); ++St) q = H.charCodeAt(St), _ = q >> 8, L = q % 256, et.push(L), et.push(_);
            return et;
          }(z, O.length - J), O, J, tt);
        }
        function B(O, z, J) {
          return z === 0 && J === O.length ? d.fromByteArray(O) : d.fromByteArray(O.slice(z, J));
        }
        function W(O, z, J) {
          J = Math.min(O.length, J);
          const tt = [];
          let H = z;
          for (; H < J; ) {
            const K = O[H];
            let q = null, _ = K > 239 ? 4 : K > 223 ? 3 : K > 191 ? 2 : 1;
            if (H + _ <= J) {
              let L, et, St, kt;
              switch (_) {
                case 1:
                  K < 128 && (q = K);
                  break;
                case 2:
                  L = O[H + 1], (192 & L) == 128 && (kt = (31 & K) << 6 | 63 & L, kt > 127 && (q = kt));
                  break;
                case 3:
                  L = O[H + 1], et = O[H + 2], (192 & L) == 128 && (192 & et) == 128 && (kt = (15 & K) << 12 | (63 & L) << 6 | 63 & et, kt > 2047 && (kt < 55296 || kt > 57343) && (q = kt));
                  break;
                case 4:
                  L = O[H + 1], et = O[H + 2], St = O[H + 3], (192 & L) == 128 && (192 & et) == 128 && (192 & St) == 128 && (kt = (15 & K) << 18 | (63 & L) << 12 | (63 & et) << 6 | 63 & St, kt > 65535 && kt < 1114112 && (q = kt));
              }
            }
            q === null ? (q = 65533, _ = 1) : q > 65535 && (q -= 65536, tt.push(q >>> 10 & 1023 | 55296), q = 56320 | 1023 & q), tt.push(q), H += _;
          }
          return function(K) {
            const q = K.length;
            if (q <= lt) return String.fromCharCode.apply(String, K);
            let _ = "", L = 0;
            for (; L < q; ) _ += String.fromCharCode.apply(String, K.slice(L, L += lt));
            return _;
          }(tt);
        }
        s.kMaxLength = g, h.TYPED_ARRAY_SUPPORT = function() {
          try {
            const O = new Uint8Array(1), z = { foo: function() {
              return 42;
            } };
            return Object.setPrototypeOf(z, Uint8Array.prototype), Object.setPrototypeOf(O, z), O.foo() === 42;
          } catch {
            return false;
          }
        }(), h.TYPED_ARRAY_SUPPORT || u === void 0 || typeof u.error != "function" || u.error("This browser lacks typed array (Uint8Array) support which is required by `buffer` v5.x. Use `buffer` v4.x if you require old browser support."), Object.defineProperty(h.prototype, "parent", { enumerable: true, get: function() {
          if (h.isBuffer(this)) return this.buffer;
        } }), Object.defineProperty(h.prototype, "offset", { enumerable: true, get: function() {
          if (h.isBuffer(this)) return this.byteOffset;
        } }), h.poolSize = 8192, h.from = function(O, z, J) {
          return m(O, z, J);
        }, Object.setPrototypeOf(h.prototype, Uint8Array.prototype), Object.setPrototypeOf(h, Uint8Array), h.alloc = function(O, z, J) {
          return function(tt, H, K) {
            return c(tt), tt <= 0 ? b(tt) : H !== void 0 ? typeof K == "string" ? b(tt).fill(H, K) : b(tt).fill(H) : b(tt);
          }(O, z, J);
        }, h.allocUnsafe = function(O) {
          return w(O);
        }, h.allocUnsafeSlow = function(O) {
          return w(O);
        }, h.isBuffer = function(O) {
          return O != null && O._isBuffer === true && O !== h.prototype;
        }, h.compare = function(O, z) {
          if (Vt(O, Uint8Array) && (O = h.from(O, O.offset, O.byteLength)), Vt(z, Uint8Array) && (z = h.from(z, z.offset, z.byteLength)), !h.isBuffer(O) || !h.isBuffer(z)) throw new TypeError('The "buf1", "buf2" arguments must be one of type Buffer or Uint8Array');
          if (O === z) return 0;
          let J = O.length, tt = z.length;
          for (let H = 0, K = Math.min(J, tt); H < K; ++H) if (O[H] !== z[H]) {
            J = O[H], tt = z[H];
            break;
          }
          return J < tt ? -1 : tt < J ? 1 : 0;
        }, h.isEncoding = function(O) {
          switch (String(O).toLowerCase()) {
            case "hex":
            case "utf8":
            case "utf-8":
            case "ascii":
            case "latin1":
            case "binary":
            case "base64":
            case "ucs2":
            case "ucs-2":
            case "utf16le":
            case "utf-16le":
              return true;
            default:
              return false;
          }
        }, h.concat = function(O, z) {
          if (!Array.isArray(O)) throw new TypeError('"list" argument must be an Array of Buffers');
          if (O.length === 0) return h.alloc(0);
          let J;
          if (z === void 0) for (z = 0, J = 0; J < O.length; ++J) z += O[J].length;
          const tt = h.allocUnsafe(z);
          let H = 0;
          for (J = 0; J < O.length; ++J) {
            let K = O[J];
            if (Vt(K, Uint8Array)) H + K.length > tt.length ? (h.isBuffer(K) || (K = h.from(K)), K.copy(tt, H)) : Uint8Array.prototype.set.call(tt, K, H);
            else {
              if (!h.isBuffer(K)) throw new TypeError('"list" argument must be an Array of Buffers');
              K.copy(tt, H);
            }
            H += K.length;
          }
          return tt;
        }, h.byteLength = R, h.prototype._isBuffer = true, h.prototype.swap16 = function() {
          const O = this.length;
          if (O % 2 != 0) throw new RangeError("Buffer size must be a multiple of 16-bits");
          for (let z = 0; z < O; z += 2) v(this, z, z + 1);
          return this;
        }, h.prototype.swap32 = function() {
          const O = this.length;
          if (O % 4 != 0) throw new RangeError("Buffer size must be a multiple of 32-bits");
          for (let z = 0; z < O; z += 4) v(this, z, z + 3), v(this, z + 1, z + 2);
          return this;
        }, h.prototype.swap64 = function() {
          const O = this.length;
          if (O % 8 != 0) throw new RangeError("Buffer size must be a multiple of 64-bits");
          for (let z = 0; z < O; z += 8) v(this, z, z + 7), v(this, z + 1, z + 6), v(this, z + 2, z + 5), v(this, z + 3, z + 4);
          return this;
        }, h.prototype.toString = function() {
          const O = this.length;
          return O === 0 ? "" : arguments.length === 0 ? W(this, 0, O) : F.apply(this, arguments);
        }, h.prototype.toLocaleString = h.prototype.toString, h.prototype.equals = function(O) {
          if (!h.isBuffer(O)) throw new TypeError("Argument must be a Buffer");
          return this === O || h.compare(this, O) === 0;
        }, h.prototype.inspect = function() {
          let O = "";
          const z = s.INSPECT_MAX_BYTES;
          return O = this.toString("hex", 0, z).replace(/(.{2})/g, "$1 ").trim(), this.length > z && (O += " ... "), "<Buffer " + O + ">";
        }, p && (h.prototype[p] = h.prototype.inspect), h.prototype.compare = function(O, z, J, tt, H) {
          if (Vt(O, Uint8Array) && (O = h.from(O, O.offset, O.byteLength)), !h.isBuffer(O)) throw new TypeError('The "target" argument must be one of type Buffer or Uint8Array. Received type ' + typeof O);
          if (z === void 0 && (z = 0), J === void 0 && (J = O ? O.length : 0), tt === void 0 && (tt = 0), H === void 0 && (H = this.length), z < 0 || J > O.length || tt < 0 || H > this.length) throw new RangeError("out of range index");
          if (tt >= H && z >= J) return 0;
          if (tt >= H) return -1;
          if (z >= J) return 1;
          if (this === O) return 0;
          let K = (H >>>= 0) - (tt >>>= 0), q = (J >>>= 0) - (z >>>= 0);
          const _ = Math.min(K, q), L = this.slice(tt, H), et = O.slice(z, J);
          for (let St = 0; St < _; ++St) if (L[St] !== et[St]) {
            K = L[St], q = et[St];
            break;
          }
          return K < q ? -1 : q < K ? 1 : 0;
        }, h.prototype.includes = function(O, z, J) {
          return this.indexOf(O, z, J) !== -1;
        }, h.prototype.indexOf = function(O, z, J) {
          return U(this, O, z, J, true);
        }, h.prototype.lastIndexOf = function(O, z, J) {
          return U(this, O, z, J, false);
        }, h.prototype.write = function(O, z, J, tt) {
          if (z === void 0) tt = "utf8", J = this.length, z = 0;
          else if (J === void 0 && typeof z == "string") tt = z, J = this.length, z = 0;
          else {
            if (!isFinite(z)) throw new Error("Buffer.write(string, encoding, offset[, length]) is no longer supported");
            z >>>= 0, isFinite(J) ? (J >>>= 0, tt === void 0 && (tt = "utf8")) : (tt = J, J = void 0);
          }
          const H = this.length - z;
          if ((J === void 0 || J > H) && (J = H), O.length > 0 && (J < 0 || z < 0) || z > this.length) throw new RangeError("Attempt to write outside buffer bounds");
          tt || (tt = "utf8");
          let K = false;
          for (; ; ) switch (tt) {
            case "hex":
              return Z(this, O, z, J);
            case "utf8":
            case "utf-8":
              return D(this, O, z, J);
            case "ascii":
            case "latin1":
            case "binary":
              return V(this, O, z, J);
            case "base64":
              return S(this, O, z, J);
            case "ucs2":
            case "ucs-2":
            case "utf16le":
            case "utf-16le":
              return x(this, O, z, J);
            default:
              if (K) throw new TypeError("Unknown encoding: " + tt);
              tt = ("" + tt).toLowerCase(), K = true;
          }
        }, h.prototype.toJSON = function() {
          return { type: "Buffer", data: Array.prototype.slice.call(this._arr || this, 0) };
        };
        const lt = 4096;
        function pt(O, z, J) {
          let tt = "";
          J = Math.min(O.length, J);
          for (let H = z; H < J; ++H) tt += String.fromCharCode(127 & O[H]);
          return tt;
        }
        function at(O, z, J) {
          let tt = "";
          J = Math.min(O.length, J);
          for (let H = z; H < J; ++H) tt += String.fromCharCode(O[H]);
          return tt;
        }
        function rt(O, z, J) {
          const tt = O.length;
          (!z || z < 0) && (z = 0), (!J || J < 0 || J > tt) && (J = tt);
          let H = "";
          for (let K = z; K < J; ++K) H += te[O[K]];
          return H;
        }
        function ot(O, z, J) {
          const tt = O.slice(z, J);
          let H = "";
          for (let K = 0; K < tt.length - 1; K += 2) H += String.fromCharCode(tt[K] + 256 * tt[K + 1]);
          return H;
        }
        function X(O, z, J) {
          if (O % 1 != 0 || O < 0) throw new RangeError("offset is not uint");
          if (O + z > J) throw new RangeError("Trying to access beyond buffer length");
        }
        function I(O, z, J, tt, H, K) {
          if (!h.isBuffer(O)) throw new TypeError('"buffer" argument must be a Buffer instance');
          if (z > H || z < K) throw new RangeError('"value" argument is out of bounds');
          if (J + tt > O.length) throw new RangeError("Index out of range");
        }
        function nt(O, z, J, tt, H) {
          bt(z, tt, H, O, J, 7);
          let K = Number(z & BigInt(4294967295));
          O[J++] = K, K >>= 8, O[J++] = K, K >>= 8, O[J++] = K, K >>= 8, O[J++] = K;
          let q = Number(z >> BigInt(32) & BigInt(4294967295));
          return O[J++] = q, q >>= 8, O[J++] = q, q >>= 8, O[J++] = q, q >>= 8, O[J++] = q, J;
        }
        function ft(O, z, J, tt, H) {
          bt(z, tt, H, O, J, 7);
          let K = Number(z & BigInt(4294967295));
          O[J + 7] = K, K >>= 8, O[J + 6] = K, K >>= 8, O[J + 5] = K, K >>= 8, O[J + 4] = K;
          let q = Number(z >> BigInt(32) & BigInt(4294967295));
          return O[J + 3] = q, q >>= 8, O[J + 2] = q, q >>= 8, O[J + 1] = q, q >>= 8, O[J] = q, J + 8;
        }
        function dt(O, z, J, tt, H, K) {
          if (J + tt > O.length) throw new RangeError("Index out of range");
          if (J < 0) throw new RangeError("Index out of range");
        }
        function Lt(O, z, J, tt, H) {
          return z = +z, J >>>= 0, H || dt(O, 0, J, 4), f.write(O, z, J, tt, 23, 4), J + 4;
        }
        function $(O, z, J, tt, H) {
          return z = +z, J >>>= 0, H || dt(O, 0, J, 8), f.write(O, z, J, tt, 52, 8), J + 8;
        }
        h.prototype.slice = function(O, z) {
          const J = this.length;
          (O = ~~O) < 0 ? (O += J) < 0 && (O = 0) : O > J && (O = J), (z = z === void 0 ? J : ~~z) < 0 ? (z += J) < 0 && (z = 0) : z > J && (z = J), z < O && (z = O);
          const tt = this.subarray(O, z);
          return Object.setPrototypeOf(tt, h.prototype), tt;
        }, h.prototype.readUintLE = h.prototype.readUIntLE = function(O, z, J) {
          O >>>= 0, z >>>= 0, J || X(O, z, this.length);
          let tt = this[O], H = 1, K = 0;
          for (; ++K < z && (H *= 256); ) tt += this[O + K] * H;
          return tt;
        }, h.prototype.readUintBE = h.prototype.readUIntBE = function(O, z, J) {
          O >>>= 0, z >>>= 0, J || X(O, z, this.length);
          let tt = this[O + --z], H = 1;
          for (; z > 0 && (H *= 256); ) tt += this[O + --z] * H;
          return tt;
        }, h.prototype.readUint8 = h.prototype.readUInt8 = function(O, z) {
          return O >>>= 0, z || X(O, 1, this.length), this[O];
        }, h.prototype.readUint16LE = h.prototype.readUInt16LE = function(O, z) {
          return O >>>= 0, z || X(O, 2, this.length), this[O] | this[O + 1] << 8;
        }, h.prototype.readUint16BE = h.prototype.readUInt16BE = function(O, z) {
          return O >>>= 0, z || X(O, 2, this.length), this[O] << 8 | this[O + 1];
        }, h.prototype.readUint32LE = h.prototype.readUInt32LE = function(O, z) {
          return O >>>= 0, z || X(O, 4, this.length), (this[O] | this[O + 1] << 8 | this[O + 2] << 16) + 16777216 * this[O + 3];
        }, h.prototype.readUint32BE = h.prototype.readUInt32BE = function(O, z) {
          return O >>>= 0, z || X(O, 4, this.length), 16777216 * this[O] + (this[O + 1] << 16 | this[O + 2] << 8 | this[O + 3]);
        }, h.prototype.readBigUInt64LE = yt(function(O) {
          xt(O >>>= 0, "offset");
          const z = this[O], J = this[O + 7];
          z !== void 0 && J !== void 0 || Ct(O, this.length - 8);
          const tt = z + 256 * this[++O] + 65536 * this[++O] + this[++O] * 2 ** 24, H = this[++O] + 256 * this[++O] + 65536 * this[++O] + J * 2 ** 24;
          return BigInt(tt) + (BigInt(H) << BigInt(32));
        }), h.prototype.readBigUInt64BE = yt(function(O) {
          xt(O >>>= 0, "offset");
          const z = this[O], J = this[O + 7];
          z !== void 0 && J !== void 0 || Ct(O, this.length - 8);
          const tt = z * 2 ** 24 + 65536 * this[++O] + 256 * this[++O] + this[++O], H = this[++O] * 2 ** 24 + 65536 * this[++O] + 256 * this[++O] + J;
          return (BigInt(tt) << BigInt(32)) + BigInt(H);
        }), h.prototype.readIntLE = function(O, z, J) {
          O >>>= 0, z >>>= 0, J || X(O, z, this.length);
          let tt = this[O], H = 1, K = 0;
          for (; ++K < z && (H *= 256); ) tt += this[O + K] * H;
          return H *= 128, tt >= H && (tt -= Math.pow(2, 8 * z)), tt;
        }, h.prototype.readIntBE = function(O, z, J) {
          O >>>= 0, z >>>= 0, J || X(O, z, this.length);
          let tt = z, H = 1, K = this[O + --tt];
          for (; tt > 0 && (H *= 256); ) K += this[O + --tt] * H;
          return H *= 128, K >= H && (K -= Math.pow(2, 8 * z)), K;
        }, h.prototype.readInt8 = function(O, z) {
          return O >>>= 0, z || X(O, 1, this.length), 128 & this[O] ? -1 * (255 - this[O] + 1) : this[O];
        }, h.prototype.readInt16LE = function(O, z) {
          O >>>= 0, z || X(O, 2, this.length);
          const J = this[O] | this[O + 1] << 8;
          return 32768 & J ? 4294901760 | J : J;
        }, h.prototype.readInt16BE = function(O, z) {
          O >>>= 0, z || X(O, 2, this.length);
          const J = this[O + 1] | this[O] << 8;
          return 32768 & J ? 4294901760 | J : J;
        }, h.prototype.readInt32LE = function(O, z) {
          return O >>>= 0, z || X(O, 4, this.length), this[O] | this[O + 1] << 8 | this[O + 2] << 16 | this[O + 3] << 24;
        }, h.prototype.readInt32BE = function(O, z) {
          return O >>>= 0, z || X(O, 4, this.length), this[O] << 24 | this[O + 1] << 16 | this[O + 2] << 8 | this[O + 3];
        }, h.prototype.readBigInt64LE = yt(function(O) {
          xt(O >>>= 0, "offset");
          const z = this[O], J = this[O + 7];
          z !== void 0 && J !== void 0 || Ct(O, this.length - 8);
          const tt = this[O + 4] + 256 * this[O + 5] + 65536 * this[O + 6] + (J << 24);
          return (BigInt(tt) << BigInt(32)) + BigInt(z + 256 * this[++O] + 65536 * this[++O] + this[++O] * 16777216);
        }), h.prototype.readBigInt64BE = yt(function(O) {
          xt(O >>>= 0, "offset");
          const z = this[O], J = this[O + 7];
          z !== void 0 && J !== void 0 || Ct(O, this.length - 8);
          const tt = (z << 24) + 65536 * this[++O] + 256 * this[++O] + this[++O];
          return (BigInt(tt) << BigInt(32)) + BigInt(this[++O] * 16777216 + 65536 * this[++O] + 256 * this[++O] + J);
        }), h.prototype.readFloatLE = function(O, z) {
          return O >>>= 0, z || X(O, 4, this.length), f.read(this, O, true, 23, 4);
        }, h.prototype.readFloatBE = function(O, z) {
          return O >>>= 0, z || X(O, 4, this.length), f.read(this, O, false, 23, 4);
        }, h.prototype.readDoubleLE = function(O, z) {
          return O >>>= 0, z || X(O, 8, this.length), f.read(this, O, true, 52, 8);
        }, h.prototype.readDoubleBE = function(O, z) {
          return O >>>= 0, z || X(O, 8, this.length), f.read(this, O, false, 52, 8);
        }, h.prototype.writeUintLE = h.prototype.writeUIntLE = function(O, z, J, tt) {
          O = +O, z >>>= 0, J >>>= 0, !tt && I(this, O, z, J, Math.pow(2, 8 * J) - 1, 0);
          let H = 1, K = 0;
          for (this[z] = 255 & O; ++K < J && (H *= 256); ) this[z + K] = O / H & 255;
          return z + J;
        }, h.prototype.writeUintBE = h.prototype.writeUIntBE = function(O, z, J, tt) {
          O = +O, z >>>= 0, J >>>= 0, !tt && I(this, O, z, J, Math.pow(2, 8 * J) - 1, 0);
          let H = J - 1, K = 1;
          for (this[z + H] = 255 & O; --H >= 0 && (K *= 256); ) this[z + H] = O / K & 255;
          return z + J;
        }, h.prototype.writeUint8 = h.prototype.writeUInt8 = function(O, z, J) {
          return O = +O, z >>>= 0, J || I(this, O, z, 1, 255, 0), this[z] = 255 & O, z + 1;
        }, h.prototype.writeUint16LE = h.prototype.writeUInt16LE = function(O, z, J) {
          return O = +O, z >>>= 0, J || I(this, O, z, 2, 65535, 0), this[z] = 255 & O, this[z + 1] = O >>> 8, z + 2;
        }, h.prototype.writeUint16BE = h.prototype.writeUInt16BE = function(O, z, J) {
          return O = +O, z >>>= 0, J || I(this, O, z, 2, 65535, 0), this[z] = O >>> 8, this[z + 1] = 255 & O, z + 2;
        }, h.prototype.writeUint32LE = h.prototype.writeUInt32LE = function(O, z, J) {
          return O = +O, z >>>= 0, J || I(this, O, z, 4, 4294967295, 0), this[z + 3] = O >>> 24, this[z + 2] = O >>> 16, this[z + 1] = O >>> 8, this[z] = 255 & O, z + 4;
        }, h.prototype.writeUint32BE = h.prototype.writeUInt32BE = function(O, z, J) {
          return O = +O, z >>>= 0, J || I(this, O, z, 4, 4294967295, 0), this[z] = O >>> 24, this[z + 1] = O >>> 16, this[z + 2] = O >>> 8, this[z + 3] = 255 & O, z + 4;
        }, h.prototype.writeBigUInt64LE = yt(function(O, z = 0) {
          return nt(this, O, z, BigInt(0), BigInt("0xffffffffffffffff"));
        }), h.prototype.writeBigUInt64BE = yt(function(O, z = 0) {
          return ft(this, O, z, BigInt(0), BigInt("0xffffffffffffffff"));
        }), h.prototype.writeIntLE = function(O, z, J, tt) {
          if (O = +O, z >>>= 0, !tt) {
            const _ = Math.pow(2, 8 * J - 1);
            I(this, O, z, J, _ - 1, -_);
          }
          let H = 0, K = 1, q = 0;
          for (this[z] = 255 & O; ++H < J && (K *= 256); ) O < 0 && q === 0 && this[z + H - 1] !== 0 && (q = 1), this[z + H] = (O / K | 0) - q & 255;
          return z + J;
        }, h.prototype.writeIntBE = function(O, z, J, tt) {
          if (O = +O, z >>>= 0, !tt) {
            const _ = Math.pow(2, 8 * J - 1);
            I(this, O, z, J, _ - 1, -_);
          }
          let H = J - 1, K = 1, q = 0;
          for (this[z + H] = 255 & O; --H >= 0 && (K *= 256); ) O < 0 && q === 0 && this[z + H + 1] !== 0 && (q = 1), this[z + H] = (O / K | 0) - q & 255;
          return z + J;
        }, h.prototype.writeInt8 = function(O, z, J) {
          return O = +O, z >>>= 0, J || I(this, O, z, 1, 127, -128), O < 0 && (O = 255 + O + 1), this[z] = 255 & O, z + 1;
        }, h.prototype.writeInt16LE = function(O, z, J) {
          return O = +O, z >>>= 0, J || I(this, O, z, 2, 32767, -32768), this[z] = 255 & O, this[z + 1] = O >>> 8, z + 2;
        }, h.prototype.writeInt16BE = function(O, z, J) {
          return O = +O, z >>>= 0, J || I(this, O, z, 2, 32767, -32768), this[z] = O >>> 8, this[z + 1] = 255 & O, z + 2;
        }, h.prototype.writeInt32LE = function(O, z, J) {
          return O = +O, z >>>= 0, J || I(this, O, z, 4, 2147483647, -2147483648), this[z] = 255 & O, this[z + 1] = O >>> 8, this[z + 2] = O >>> 16, this[z + 3] = O >>> 24, z + 4;
        }, h.prototype.writeInt32BE = function(O, z, J) {
          return O = +O, z >>>= 0, J || I(this, O, z, 4, 2147483647, -2147483648), O < 0 && (O = 4294967295 + O + 1), this[z] = O >>> 24, this[z + 1] = O >>> 16, this[z + 2] = O >>> 8, this[z + 3] = 255 & O, z + 4;
        }, h.prototype.writeBigInt64LE = yt(function(O, z = 0) {
          return nt(this, O, z, -BigInt("0x8000000000000000"), BigInt("0x7fffffffffffffff"));
        }), h.prototype.writeBigInt64BE = yt(function(O, z = 0) {
          return ft(this, O, z, -BigInt("0x8000000000000000"), BigInt("0x7fffffffffffffff"));
        }), h.prototype.writeFloatLE = function(O, z, J) {
          return Lt(this, O, z, true, J);
        }, h.prototype.writeFloatBE = function(O, z, J) {
          return Lt(this, O, z, false, J);
        }, h.prototype.writeDoubleLE = function(O, z, J) {
          return $(this, O, z, true, J);
        }, h.prototype.writeDoubleBE = function(O, z, J) {
          return $(this, O, z, false, J);
        }, h.prototype.copy = function(O, z, J, tt) {
          if (!h.isBuffer(O)) throw new TypeError("argument should be a Buffer");
          if (J || (J = 0), tt || tt === 0 || (tt = this.length), z >= O.length && (z = O.length), z || (z = 0), tt > 0 && tt < J && (tt = J), tt === J || O.length === 0 || this.length === 0) return 0;
          if (z < 0) throw new RangeError("targetStart out of bounds");
          if (J < 0 || J >= this.length) throw new RangeError("Index out of range");
          if (tt < 0) throw new RangeError("sourceEnd out of bounds");
          tt > this.length && (tt = this.length), O.length - z < tt - J && (tt = O.length - z + J);
          const H = tt - J;
          return this === O && typeof Uint8Array.prototype.copyWithin == "function" ? this.copyWithin(z, J, tt) : Uint8Array.prototype.set.call(O, this.subarray(J, tt), z), H;
        }, h.prototype.fill = function(O, z, J, tt) {
          if (typeof O == "string") {
            if (typeof z == "string" ? (tt = z, z = 0, J = this.length) : typeof J == "string" && (tt = J, J = this.length), tt !== void 0 && typeof tt != "string") throw new TypeError("encoding must be a string");
            if (typeof tt == "string" && !h.isEncoding(tt)) throw new TypeError("Unknown encoding: " + tt);
            if (O.length === 1) {
              const K = O.charCodeAt(0);
              (tt === "utf8" && K < 128 || tt === "latin1") && (O = K);
            }
          } else typeof O == "number" ? O &= 255 : typeof O == "boolean" && (O = Number(O));
          if (z < 0 || this.length < z || this.length < J) throw new RangeError("Out of range index");
          if (J <= z) return this;
          let H;
          if (z >>>= 0, J = J === void 0 ? this.length : J >>> 0, O || (O = 0), typeof O == "number") for (H = z; H < J; ++H) this[H] = O;
          else {
            const K = h.isBuffer(O) ? O : h.from(O, tt), q = K.length;
            if (q === 0) throw new TypeError('The value "' + O + '" is invalid for argument "value"');
            for (H = 0; H < J - z; ++H) this[H + z] = K[H % q];
          }
          return this;
        };
        const it = {};
        function mt(O, z, J) {
          it[O] = class extends J {
            constructor() {
              super(), Object.defineProperty(this, "message", { value: z.apply(this, arguments), writable: true, configurable: true }), this.name = `${this.name} [${O}]`, this.stack, delete this.name;
            }
            get code() {
              return O;
            }
            set code(tt) {
              Object.defineProperty(this, "code", { configurable: true, enumerable: true, value: tt, writable: true });
            }
            toString() {
              return `${this.name} [${O}]: ${this.message}`;
            }
          };
        }
        function Ot(O) {
          let z = "", J = O.length;
          const tt = O[0] === "-" ? 1 : 0;
          for (; J >= tt + 4; J -= 3) z = `_${O.slice(J - 3, J)}${z}`;
          return `${O.slice(0, J)}${z}`;
        }
        function bt(O, z, J, tt, H, K) {
          if (O > J || O < z) {
            const q = typeof z == "bigint" ? "n" : "";
            let _;
            throw _ = z === 0 || z === BigInt(0) ? `>= 0${q} and < 2${q} ** ${8 * (K + 1)}${q}` : `>= -(2${q} ** ${8 * (K + 1) - 1}${q}) and < 2 ** ${8 * (K + 1) - 1}${q}`, new it.ERR_OUT_OF_RANGE("value", _, O);
          }
          (function(q, _, L) {
            xt(_, "offset"), q[_] !== void 0 && q[_ + L] !== void 0 || Ct(_, q.length - (L + 1));
          })(tt, H, K);
        }
        function xt(O, z) {
          if (typeof O != "number") throw new it.ERR_INVALID_ARG_TYPE(z, "number", O);
        }
        function Ct(O, z, J) {
          throw Math.floor(O) !== O ? (xt(O, J), new it.ERR_OUT_OF_RANGE("offset", "an integer", O)) : z < 0 ? new it.ERR_BUFFER_OUT_OF_BOUNDS() : new it.ERR_OUT_OF_RANGE("offset", `>= 0 and <= ${z}`, O);
        }
        mt("ERR_BUFFER_OUT_OF_BOUNDS", function(O) {
          return O ? `${O} is outside of buffer bounds` : "Attempt to access memory outside buffer bounds";
        }, RangeError), mt("ERR_INVALID_ARG_TYPE", function(O, z) {
          return `The "${O}" argument must be of type number. Received type ${typeof z}`;
        }, TypeError), mt("ERR_OUT_OF_RANGE", function(O, z, J) {
          let tt = `The value of "${O}" is out of range.`, H = J;
          return Number.isInteger(J) && Math.abs(J) > 4294967296 ? H = Ot(String(J)) : typeof J == "bigint" && (H = String(J), (J > BigInt(2) ** BigInt(32) || J < -(BigInt(2) ** BigInt(32))) && (H = Ot(H)), H += "n"), tt += ` It must be ${z}. Received ${H}`, tt;
        }, RangeError);
        const Tt = /[^+/0-9A-Za-z-_]/g;
        function Bt(O, z) {
          let J;
          z = z || 1 / 0;
          const tt = O.length;
          let H = null;
          const K = [];
          for (let q = 0; q < tt; ++q) {
            if (J = O.charCodeAt(q), J > 55295 && J < 57344) {
              if (!H) {
                if (J > 56319) {
                  (z -= 3) > -1 && K.push(239, 191, 189);
                  continue;
                }
                if (q + 1 === tt) {
                  (z -= 3) > -1 && K.push(239, 191, 189);
                  continue;
                }
                H = J;
                continue;
              }
              if (J < 56320) {
                (z -= 3) > -1 && K.push(239, 191, 189), H = J;
                continue;
              }
              J = 65536 + (H - 55296 << 10 | J - 56320);
            } else H && (z -= 3) > -1 && K.push(239, 191, 189);
            if (H = null, J < 128) {
              if ((z -= 1) < 0) break;
              K.push(J);
            } else if (J < 2048) {
              if ((z -= 2) < 0) break;
              K.push(J >> 6 | 192, 63 & J | 128);
            } else if (J < 65536) {
              if ((z -= 3) < 0) break;
              K.push(J >> 12 | 224, J >> 6 & 63 | 128, 63 & J | 128);
            } else {
              if (!(J < 1114112)) throw new Error("Invalid code point");
              if ((z -= 4) < 0) break;
              K.push(J >> 18 | 240, J >> 12 & 63 | 128, J >> 6 & 63 | 128, 63 & J | 128);
            }
          }
          return K;
        }
        function At(O) {
          return d.toByteArray(function(z) {
            if ((z = (z = z.split("=")[0]).trim().replace(Tt, "")).length < 2) return "";
            for (; z.length % 4 != 0; ) z += "=";
            return z;
          }(O));
        }
        function Ut(O, z, J, tt) {
          let H;
          for (H = 0; H < tt && !(H + J >= z.length || H >= O.length); ++H) z[H + J] = O[H];
          return H;
        }
        function Vt(O, z) {
          return O instanceof z || O != null && O.constructor != null && O.constructor.name != null && O.constructor.name === z.name;
        }
        function oe(O) {
          return O != O;
        }
        const te = function() {
          const O = "0123456789abcdef", z = new Array(256);
          for (let J = 0; J < 16; ++J) {
            const tt = 16 * J;
            for (let H = 0; H < 16; ++H) z[tt + H] = O[J] + O[H];
          }
          return z;
        }();
        function yt(O) {
          return typeof BigInt > "u" ? Mt : O;
        }
        function Mt() {
          throw new Error("BigInt not supported");
        }
      }, 8403: (l, s, i) => {
        var u = i(1189), d = i(1333)(), f = i(6556), p = i(9612), g = f("Array.prototype.push"), b = f("Object.prototype.propertyIsEnumerable"), h = d ? p.getOwnPropertySymbols : null;
        l.exports = function(m, c) {
          if (m == null) throw new TypeError("target must be an object");
          var w = p(m);
          if (arguments.length === 1) return w;
          for (var T = 1; T < arguments.length; ++T) {
            var P = p(arguments[T]), k = u(P), R = d && (p.getOwnPropertySymbols || h);
            if (R) for (var F = R(P), v = 0; v < F.length; ++v) {
              var U = F[v];
              b(P, U) && g(k, U);
            }
            for (var M = 0; M < k.length; ++M) {
              var Z = k[M];
              if (b(P, Z)) {
                var D = P[Z];
                w[Z] = D;
              }
            }
          }
          return w;
        };
      }, 8452: (l, s, i) => {
        var u = i(1189), d = typeof Symbol == "function" && typeof Symbol("foo") == "symbol", f = Object.prototype.toString, p = Array.prototype.concat, g = i(41), b = i(592)(), h = function(c, w, T, P) {
          if (w in c) {
            if (P === true) {
              if (c[w] === T) return;
            } else if (typeof (k = P) != "function" || f.call(k) !== "[object Function]" || !P()) return;
          }
          var k;
          b ? g(c, w, T, true) : g(c, w, T);
        }, m = function(c, w) {
          var T = arguments.length > 2 ? arguments[2] : {}, P = u(w);
          d && (P = p.call(P, Object.getOwnPropertySymbols(w)));
          for (var k = 0; k < P.length; k += 1) h(c, P[k], w[P[k]], T[P[k]]);
        };
        m.supportsDescriptors = !!b, l.exports = m;
      }, 8648: (l) => {
        l.exports = typeof Reflect < "u" && Reflect.getPrototypeOf || null;
      }, 8875: (l, s, i) => {
        var u;
        if (!Object.keys) {
          var d = Object.prototype.hasOwnProperty, f = Object.prototype.toString, p = i(1093), g = Object.prototype.propertyIsEnumerable, b = !g.call({ toString: null }, "toString"), h = g.call(function() {
          }, "prototype"), m = ["toString", "toLocaleString", "valueOf", "hasOwnProperty", "isPrototypeOf", "propertyIsEnumerable", "constructor"], c = function(P) {
            var k = P.constructor;
            return k && k.prototype === P;
          }, w = { $applicationCache: true, $console: true, $external: true, $frame: true, $frameElement: true, $frames: true, $innerHeight: true, $innerWidth: true, $onmozfullscreenchange: true, $onmozfullscreenerror: true, $outerHeight: true, $outerWidth: true, $pageXOffset: true, $pageYOffset: true, $parent: true, $scrollLeft: true, $scrollTop: true, $scrollX: true, $scrollY: true, $self: true, $webkitIndexedDB: true, $webkitStorageInfo: true, $window: true }, T = function() {
            if (typeof window > "u") return false;
            for (var P in window) try {
              if (!w["$" + P] && d.call(window, P) && window[P] !== null && typeof window[P] == "object") try {
                c(window[P]);
              } catch {
                return true;
              }
            } catch {
              return true;
            }
            return false;
          }();
          u = function(P) {
            var k = P !== null && typeof P == "object", R = f.call(P) === "[object Function]", F = p(P), v = k && f.call(P) === "[object String]", U = [];
            if (!k && !R && !F) throw new TypeError("Object.keys called on a non-object");
            var M = h && R;
            if (v && P.length > 0 && !d.call(P, 0)) for (var Z = 0; Z < P.length; ++Z) U.push(String(Z));
            if (F && P.length > 0) for (var D = 0; D < P.length; ++D) U.push(String(D));
            else for (var V in P) M && V === "prototype" || !d.call(P, V) || U.push(String(V));
            if (b) for (var S = function(B) {
              if (typeof window > "u" || !T) return c(B);
              try {
                return c(B);
              } catch {
                return false;
              }
            }(P), x = 0; x < m.length; ++x) S && m[x] === "constructor" || !d.call(P, m[x]) || U.push(m[x]);
            return U;
          };
        }
        l.exports = u;
      }, 8968: (l) => {
        l.exports = Math.floor;
      }, 9032: (l, s, i) => {
        var u = i(7244), d = i(8184), f = i(5767), p = i(5680);
        function g(X) {
          return X.call.bind(X);
        }
        var b = typeof BigInt < "u", h = typeof Symbol < "u", m = g(Object.prototype.toString), c = g(Number.prototype.valueOf), w = g(String.prototype.valueOf), T = g(Boolean.prototype.valueOf);
        if (b) var P = g(BigInt.prototype.valueOf);
        if (h) var k = g(Symbol.prototype.valueOf);
        function R(X, I) {
          if (typeof X != "object") return false;
          try {
            return I(X), true;
          } catch {
            return false;
          }
        }
        function F(X) {
          return m(X) === "[object Map]";
        }
        function v(X) {
          return m(X) === "[object Set]";
        }
        function U(X) {
          return m(X) === "[object WeakMap]";
        }
        function M(X) {
          return m(X) === "[object WeakSet]";
        }
        function Z(X) {
          return m(X) === "[object ArrayBuffer]";
        }
        function D(X) {
          return typeof ArrayBuffer < "u" && (Z.working ? Z(X) : X instanceof ArrayBuffer);
        }
        function V(X) {
          return m(X) === "[object DataView]";
        }
        function S(X) {
          return typeof DataView < "u" && (V.working ? V(X) : X instanceof DataView);
        }
        s.isArgumentsObject = u, s.isGeneratorFunction = d, s.isTypedArray = p, s.isPromise = function(X) {
          return typeof Promise < "u" && X instanceof Promise || X !== null && typeof X == "object" && typeof X.then == "function" && typeof X.catch == "function";
        }, s.isArrayBufferView = function(X) {
          return typeof ArrayBuffer < "u" && ArrayBuffer.isView ? ArrayBuffer.isView(X) : p(X) || S(X);
        }, s.isUint8Array = function(X) {
          return f(X) === "Uint8Array";
        }, s.isUint8ClampedArray = function(X) {
          return f(X) === "Uint8ClampedArray";
        }, s.isUint16Array = function(X) {
          return f(X) === "Uint16Array";
        }, s.isUint32Array = function(X) {
          return f(X) === "Uint32Array";
        }, s.isInt8Array = function(X) {
          return f(X) === "Int8Array";
        }, s.isInt16Array = function(X) {
          return f(X) === "Int16Array";
        }, s.isInt32Array = function(X) {
          return f(X) === "Int32Array";
        }, s.isFloat32Array = function(X) {
          return f(X) === "Float32Array";
        }, s.isFloat64Array = function(X) {
          return f(X) === "Float64Array";
        }, s.isBigInt64Array = function(X) {
          return f(X) === "BigInt64Array";
        }, s.isBigUint64Array = function(X) {
          return f(X) === "BigUint64Array";
        }, F.working = typeof Map < "u" && F(/* @__PURE__ */ new Map()), s.isMap = function(X) {
          return typeof Map < "u" && (F.working ? F(X) : X instanceof Map);
        }, v.working = typeof Set < "u" && v(/* @__PURE__ */ new Set()), s.isSet = function(X) {
          return typeof Set < "u" && (v.working ? v(X) : X instanceof Set);
        }, U.working = typeof WeakMap < "u" && U(/* @__PURE__ */ new WeakMap()), s.isWeakMap = function(X) {
          return typeof WeakMap < "u" && (U.working ? U(X) : X instanceof WeakMap);
        }, M.working = typeof WeakSet < "u" && M(/* @__PURE__ */ new WeakSet()), s.isWeakSet = function(X) {
          return M(X);
        }, Z.working = typeof ArrayBuffer < "u" && Z(new ArrayBuffer()), s.isArrayBuffer = D, V.working = typeof ArrayBuffer < "u" && typeof DataView < "u" && V(new DataView(new ArrayBuffer(1), 0, 1)), s.isDataView = S;
        var x = typeof SharedArrayBuffer < "u" ? SharedArrayBuffer : void 0;
        function B(X) {
          return m(X) === "[object SharedArrayBuffer]";
        }
        function W(X) {
          return x !== void 0 && (B.working === void 0 && (B.working = B(new x())), B.working ? B(X) : X instanceof x);
        }
        function lt(X) {
          return R(X, c);
        }
        function pt(X) {
          return R(X, w);
        }
        function at(X) {
          return R(X, T);
        }
        function rt(X) {
          return b && R(X, P);
        }
        function ot(X) {
          return h && R(X, k);
        }
        s.isSharedArrayBuffer = W, s.isAsyncFunction = function(X) {
          return m(X) === "[object AsyncFunction]";
        }, s.isMapIterator = function(X) {
          return m(X) === "[object Map Iterator]";
        }, s.isSetIterator = function(X) {
          return m(X) === "[object Set Iterator]";
        }, s.isGeneratorObject = function(X) {
          return m(X) === "[object Generator]";
        }, s.isWebAssemblyCompiledModule = function(X) {
          return m(X) === "[object WebAssembly.Module]";
        }, s.isNumberObject = lt, s.isStringObject = pt, s.isBooleanObject = at, s.isBigIntObject = rt, s.isSymbolObject = ot, s.isBoxedPrimitive = function(X) {
          return lt(X) || pt(X) || at(X) || rt(X) || ot(X);
        }, s.isAnyArrayBuffer = function(X) {
          return typeof Uint8Array < "u" && (D(X) || W(X));
        }, ["isProxy", "isExternal", "isModuleNamespaceObject"].forEach(function(X) {
          Object.defineProperty(s, X, { enumerable: false, value: function() {
            throw new Error(X + " is not supported in userland");
          } });
        });
      }, 9092: (l, s, i) => {
        var u = i(1333);
        l.exports = function() {
          return u() && !!Symbol.toStringTag;
        };
      }, 9133: (l, s, i) => {
        var u = i(8403);
        l.exports = function() {
          return Object.assign ? function() {
            if (!Object.assign) return false;
            for (var d = "abcdefghijklmnopqrst", f = d.split(""), p = {}, g = 0; g < f.length; ++g) p[f[g]] = f[g];
            var b = Object.assign({}, p), h = "";
            for (var m in b) h += m;
            return d !== h;
          }() || function() {
            if (!Object.assign || !Object.preventExtensions) return false;
            var d = Object.preventExtensions({ 1: 2 });
            try {
              Object.assign(d, "xy");
            } catch {
              return d[1] === "y";
            }
            return false;
          }() ? u : Object.assign : u;
        };
      }, 9209: (l, s, i) => {
        var u = i(6578), d = typeof globalThis > "u" ? i.g : globalThis;
        l.exports = function() {
          for (var f = [], p = 0; p < u.length; p++) typeof d[u[p]] == "function" && (f[f.length] = u[p]);
          return f;
        };
      }, 9211: (l) => {
        var s = function(i) {
          return i != i;
        };
        l.exports = function(i, u) {
          return i === 0 && u === 0 ? 1 / i == 1 / u : i === u || !(!s(i) || !s(u));
        };
      }, 9290: (l) => {
        l.exports = RangeError;
      }, 9353: (l) => {
        var s = Object.prototype.toString, i = Math.max, u = function(d, f) {
          for (var p = [], g = 0; g < d.length; g += 1) p[g] = d[g];
          for (var b = 0; b < f.length; b += 1) p[b + d.length] = f[b];
          return p;
        };
        l.exports = function(d) {
          var f = this;
          if (typeof f != "function" || s.apply(f) !== "[object Function]") throw new TypeError("Function.prototype.bind called on incompatible " + f);
          for (var p, g = function(w, T) {
            for (var P = [], k = T, R = 0; k < w.length; k += 1, R += 1) P[R] = w[k];
            return P;
          }(arguments, 1), b = i(0, f.length - g.length), h = [], m = 0; m < b; m++) h[m] = "$" + m;
          if (p = Function("binder", "return function (" + function(w, T) {
            for (var P = "", k = 0; k < w.length; k += 1) P += w[k], k + 1 < w.length && (P += T);
            return P;
          }(h, ",") + "){ return binder.apply(this,arguments); }")(function() {
            if (this instanceof p) {
              var w = f.apply(this, u(g, arguments));
              return Object(w) === w ? w : this;
            }
            return f.apply(d, u(g, arguments));
          }), f.prototype) {
            var c = function() {
            };
            c.prototype = f.prototype, p.prototype = new c(), c.prototype = null;
          }
          return p;
        };
      }, 9383: (l) => {
        l.exports = Error;
      }, 9394: (l, s, i) => {
        var u = i(9211);
        l.exports = function() {
          return typeof Object.is == "function" ? Object.is : u;
        };
      }, 9538: (l) => {
        l.exports = ReferenceError;
      }, 9597: (l, s, i) => {
        function u(w) {
          return u = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(T) {
            return typeof T;
          } : function(T) {
            return T && typeof Symbol == "function" && T.constructor === Symbol && T !== Symbol.prototype ? "symbol" : typeof T;
          }, u(w);
        }
        function d(w, T) {
          return d = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function(P, k) {
            return P.__proto__ = k, P;
          }, d(w, T);
        }
        function f(w) {
          var T = function() {
            if (typeof Reflect > "u" || !Reflect.construct || Reflect.construct.sham) return false;
            if (typeof Proxy == "function") return true;
            try {
              return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
              })), true;
            } catch {
              return false;
            }
          }();
          return function() {
            var P, k = p(w);
            if (T) {
              var R = p(this).constructor;
              P = Reflect.construct(k, arguments, R);
            } else P = k.apply(this, arguments);
            return function(F, v) {
              if (v && (u(v) === "object" || typeof v == "function")) return v;
              if (v !== void 0) throw new TypeError("Derived constructors may only return object or undefined");
              return function(U) {
                if (U === void 0) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
                return U;
              }(F);
            }(this, P);
          };
        }
        function p(w) {
          return p = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function(T) {
            return T.__proto__ || Object.getPrototypeOf(T);
          }, p(w);
        }
        var g, b, h = {};
        function m(w, T, P) {
          P || (P = Error);
          var k = function(R) {
            (function(M, Z) {
              if (typeof Z != "function" && Z !== null) throw new TypeError("Super expression must either be null or a function");
              M.prototype = Object.create(Z && Z.prototype, { constructor: { value: M, writable: true, configurable: true } }), Object.defineProperty(M, "prototype", { writable: false }), Z && d(M, Z);
            })(U, R);
            var F, v = f(U);
            function U(M, Z, D) {
              var V;
              return function(S, x) {
                if (!(S instanceof x)) throw new TypeError("Cannot call a class as a function");
              }(this, U), V = v.call(this, function(S, x, B) {
                return typeof T == "string" ? T : T(S, x, B);
              }(M, Z, D)), V.code = w, V;
            }
            return F = U, Object.defineProperty(F, "prototype", { writable: false }), F;
          }(P);
          h[w] = k;
        }
        function c(w, T) {
          if (Array.isArray(w)) {
            var P = w.length;
            return w = w.map(function(k) {
              return String(k);
            }), P > 2 ? "one of ".concat(T, " ").concat(w.slice(0, P - 1).join(", "), ", or ") + w[P - 1] : P === 2 ? "one of ".concat(T, " ").concat(w[0], " or ").concat(w[1]) : "of ".concat(T, " ").concat(w[0]);
          }
          return "of ".concat(T, " ").concat(String(w));
        }
        m("ERR_AMBIGUOUS_ARGUMENT", 'The "%s" argument is ambiguous. %s', TypeError), m("ERR_INVALID_ARG_TYPE", function(w, T, P) {
          var k, R, F;
          if (g === void 0 && (g = i(4148)), g(typeof w == "string", "'name' must be a string"), typeof T == "string" && (R = "not ", T.substr(0, R.length) === R) ? (k = "must not be", T = T.replace(/^not /, "")) : k = "must be", function(U, M, Z) {
            return (Z === void 0 || Z > U.length) && (Z = U.length), U.substring(Z - M.length, Z) === M;
          }(w, " argument")) F = "The ".concat(w, " ").concat(k, " ").concat(c(T, "type"));
          else {
            var v = function(U, M, Z) {
              return typeof Z != "number" && (Z = 0), !(Z + M.length > U.length) && U.indexOf(M, Z) !== -1;
            }(w, ".") ? "property" : "argument";
            F = 'The "'.concat(w, '" ').concat(v, " ").concat(k, " ").concat(c(T, "type"));
          }
          return F += ". Received type ".concat(u(P));
        }, TypeError), m("ERR_INVALID_ARG_VALUE", function(w, T) {
          var P = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : "is invalid";
          b === void 0 && (b = i(537));
          var k = b.inspect(T);
          return k.length > 128 && (k = "".concat(k.slice(0, 128), "...")), "The argument '".concat(w, "' ").concat(P, ". Received ").concat(k);
        }, TypeError), m("ERR_INVALID_RETURN_VALUE", function(w, T, P) {
          var k;
          return k = P && P.constructor && P.constructor.name ? "instance of ".concat(P.constructor.name) : "type ".concat(u(P)), "Expected ".concat(w, ' to be returned from the "').concat(T, '"') + " function but got ".concat(k, ".");
        }, TypeError), m("ERR_MISSING_ARGS", function() {
          for (var w = arguments.length, T = new Array(w), P = 0; P < w; P++) T[P] = arguments[P];
          g === void 0 && (g = i(4148)), g(T.length > 0, "At least one arg needs to be specified");
          var k = "The ", R = T.length;
          switch (T = T.map(function(F) {
            return '"'.concat(F, '"');
          }), R) {
            case 1:
              k += "".concat(T[0], " argument");
              break;
            case 2:
              k += "".concat(T[0], " and ").concat(T[1], " arguments");
              break;
            default:
              k += T.slice(0, R - 1).join(", "), k += ", and ".concat(T[R - 1], " arguments");
          }
          return "".concat(k, " must be specified");
        }, TypeError), l.exports.codes = h;
      }, 9600: (l) => {
        var s, i, u = Function.prototype.toString, d = typeof Reflect == "object" && Reflect !== null && Reflect.apply;
        if (typeof d == "function" && typeof Object.defineProperty == "function") try {
          s = Object.defineProperty({}, "length", { get: function() {
            throw i;
          } }), i = {}, d(function() {
            throw 42;
          }, null, s);
        } catch (T) {
          T !== i && (d = null);
        }
        else d = null;
        var f = /^\s*class\b/, p = function(T) {
          try {
            var P = u.call(T);
            return f.test(P);
          } catch {
            return false;
          }
        }, g = function(T) {
          try {
            return !p(T) && (u.call(T), true);
          } catch {
            return false;
          }
        }, b = Object.prototype.toString, h = typeof Symbol == "function" && !!Symbol.toStringTag, m = !(0 in [,]), c = function() {
          return false;
        };
        if (typeof document == "object") {
          var w = document.all;
          b.call(w) === b.call(document.all) && (c = function(T) {
            if ((m || !T) && (T === void 0 || typeof T == "object")) try {
              var P = b.call(T);
              return (P === "[object HTMLAllCollection]" || P === "[object HTML document.all class]" || P === "[object HTMLCollection]" || P === "[object Object]") && T("") == null;
            } catch {
            }
            return false;
          });
        }
        l.exports = d ? function(T) {
          if (c(T)) return true;
          if (!T || typeof T != "function" && typeof T != "object") return false;
          try {
            d(T, null, s);
          } catch (P) {
            if (P !== i) return false;
          }
          return !p(T) && g(T);
        } : function(T) {
          if (c(T)) return true;
          if (!T || typeof T != "function" && typeof T != "object") return false;
          if (h) return g(T);
          if (p(T)) return false;
          var P = b.call(T);
          return !(P !== "[object Function]" && P !== "[object GeneratorFunction]" && !/^\[object HTML/.test(P)) && g(T);
        };
      }, 9612: (l) => {
        l.exports = Object;
      }, 9675: (l) => {
        l.exports = TypeError;
      }, 9721: (l, s, i) => {
        var u = i(6556), d = i(4035), f = u("RegExp.prototype.exec"), p = i(9675);
        l.exports = function(g) {
          if (!d(g)) throw new p("`regex` must be a RegExp");
          return function(b) {
            return f(g, b) !== null;
          };
        };
      }, 9957: (l, s, i) => {
        var u = Function.prototype.call, d = Object.prototype.hasOwnProperty, f = i(6743);
        l.exports = f.call(u, d);
      } }, o = {};
      function a(l) {
        var s = o[l];
        if (s !== void 0) return s.exports;
        var i = o[l] = { id: l, loaded: false, exports: {} };
        return e[l].call(i.exports, i, i.exports, a), i.loaded = true, i.exports;
      }
      return a.d = (l, s) => {
        for (var i in s) a.o(s, i) && !a.o(l, i) && Object.defineProperty(l, i, { enumerable: true, get: s[i] });
      }, a.g = function() {
        if (typeof globalThis == "object") return globalThis;
        try {
          return this || new Function("return this")();
        } catch {
          if (typeof window == "object") return window;
        }
      }(), a.hmd = (l) => ((l = Object.create(l)).children || (l.children = []), Object.defineProperty(l, "exports", { enumerable: true, set: () => {
        throw new Error("ES Modules may not assign module.exports or exports.*, Use ESM export syntax, instead: " + l.id);
      } }), l), a.o = (l, s) => Object.prototype.hasOwnProperty.call(l, s), a.r = (l) => {
        typeof Symbol < "u" && Symbol.toStringTag && Object.defineProperty(l, Symbol.toStringTag, { value: "Module" }), Object.defineProperty(l, "__esModule", { value: true });
      }, a(7175);
    })());
  }(uf)), uf.exports;
}
var Ya = {}, cf = {}, rc = {}, zp;
function Im() {
  if (zp) return rc;
  zp = 1, Object.defineProperty(rc, "__esModule", { value: true }), rc.CancelToken = void 0;
  function E(s) {
    "@babel/helpers - typeof";
    return E = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(i) {
      return typeof i;
    } : function(i) {
      return i && typeof Symbol == "function" && i.constructor === Symbol && i !== Symbol.prototype ? "symbol" : typeof i;
    }, E(s);
  }
  function t(s, i) {
    if (!(s instanceof i)) throw new TypeError("Cannot call a class as a function");
  }
  function e(s, i) {
    for (var u = 0; u < i.length; u++) {
      var d = i[u];
      d.enumerable = d.enumerable || false, d.configurable = true, "value" in d && (d.writable = true), Object.defineProperty(s, a(d.key), d);
    }
  }
  function o(s, i, u) {
    return i && e(s.prototype, i), Object.defineProperty(s, "prototype", { writable: false }), s;
  }
  function a(s) {
    var i = l(s, "string");
    return E(i) == "symbol" ? i : i + "";
  }
  function l(s, i) {
    if (E(s) != "object" || !s) return s;
    var u = s[Symbol.toPrimitive];
    if (u !== void 0) {
      var d = u.call(s, i);
      if (E(d) != "object") return d;
      throw new TypeError("@@toPrimitive must return a primitive value.");
    }
    return String(s);
  }
  return rc.CancelToken = function() {
    function s(i) {
      var u = this;
      t(this, s);
      var d;
      this.promise = new Promise(function(f) {
        d = f;
      }), i(function(f) {
        u.reason = f, d();
      });
    }
    return o(s, [{ key: "throwIfRequested", value: function() {
      if (this.reason) throw new Error(this.reason);
    } }]);
  }(), rc;
}
var Ns = {};
/*! Axios v1.8.4 Copyright (c) 2025 Matt Zabriskie and contributors */
var lf, qp;
function Mm() {
  if (qp) return lf;
  qp = 1;
  function E(Yt, ee) {
    return function() {
      return Yt.apply(ee, arguments);
    };
  }
  const { toString: t } = Object.prototype, { getPrototypeOf: e } = Object, o = /* @__PURE__ */ ((Yt) => (ee) => {
    const ye = t.call(ee);
    return Yt[ye] || (Yt[ye] = ye.slice(8, -1).toLowerCase());
  })(/* @__PURE__ */ Object.create(null)), a = (Yt) => (Yt = Yt.toLowerCase(), (ee) => o(ee) === Yt), l = (Yt) => (ee) => typeof ee === Yt, { isArray: s } = Array, i = l("undefined");
  function u(Yt) {
    return Yt !== null && !i(Yt) && Yt.constructor !== null && !i(Yt.constructor) && g(Yt.constructor.isBuffer) && Yt.constructor.isBuffer(Yt);
  }
  const d = a("ArrayBuffer");
  function f(Yt) {
    let ee;
    return typeof ArrayBuffer < "u" && ArrayBuffer.isView ? ee = ArrayBuffer.isView(Yt) : ee = Yt && Yt.buffer && d(Yt.buffer), ee;
  }
  const p = l("string"), g = l("function"), b = l("number"), h = (Yt) => Yt !== null && typeof Yt == "object", m = (Yt) => Yt === true || Yt === false, c = (Yt) => {
    if (o(Yt) !== "object") return false;
    const ee = e(Yt);
    return (ee === null || ee === Object.prototype || Object.getPrototypeOf(ee) === null) && !(Symbol.toStringTag in Yt) && !(Symbol.iterator in Yt);
  }, w = a("Date"), T = a("File"), P = a("Blob"), k = a("FileList"), R = (Yt) => h(Yt) && g(Yt.pipe), F = (Yt) => {
    let ee;
    return Yt && (typeof FormData == "function" && Yt instanceof FormData || g(Yt.append) && ((ee = o(Yt)) === "formdata" || ee === "object" && g(Yt.toString) && Yt.toString() === "[object FormData]"));
  }, v = a("URLSearchParams"), [U, M, Z, D] = ["ReadableStream", "Request", "Response", "Headers"].map(a), V = (Yt) => Yt.trim ? Yt.trim() : Yt.replace(/^[\s\uFEFF\xA0]+|[\s\uFEFF\xA0]+$/g, "");
  function S(Yt, ee, { allOwnKeys: ye = false } = {}) {
    if (Yt === null || typeof Yt > "u") return;
    let Se, De;
    if (typeof Yt != "object" && (Yt = [Yt]), s(Yt)) for (Se = 0, De = Yt.length; Se < De; Se++) ee.call(null, Yt[Se], Se, Yt);
    else {
      const ar = ye ? Object.getOwnPropertyNames(Yt) : Object.keys(Yt), C = ar.length;
      let Y;
      for (Se = 0; Se < C; Se++) Y = ar[Se], ee.call(null, Yt[Y], Y, Yt);
    }
  }
  function x(Yt, ee) {
    ee = ee.toLowerCase();
    const ye = Object.keys(Yt);
    let Se = ye.length, De;
    for (; Se-- > 0; ) if (De = ye[Se], ee === De.toLowerCase()) return De;
    return null;
  }
  const B = typeof globalThis < "u" ? globalThis : typeof self < "u" ? self : typeof window < "u" ? window : zl, W = (Yt) => !i(Yt) && Yt !== B;
  function lt() {
    const { caseless: Yt } = W(this) && this || {}, ee = {}, ye = (Se, De) => {
      const ar = Yt && x(ee, De) || De;
      c(ee[ar]) && c(Se) ? ee[ar] = lt(ee[ar], Se) : c(Se) ? ee[ar] = lt({}, Se) : s(Se) ? ee[ar] = Se.slice() : ee[ar] = Se;
    };
    for (let Se = 0, De = arguments.length; Se < De; Se++) arguments[Se] && S(arguments[Se], ye);
    return ee;
  }
  const pt = (Yt, ee, ye, { allOwnKeys: Se } = {}) => (S(ee, (De, ar) => {
    ye && g(De) ? Yt[ar] = E(De, ye) : Yt[ar] = De;
  }, { allOwnKeys: Se }), Yt), at = (Yt) => (Yt.charCodeAt(0) === 65279 && (Yt = Yt.slice(1)), Yt), rt = (Yt, ee, ye, Se) => {
    Yt.prototype = Object.create(ee.prototype, Se), Yt.prototype.constructor = Yt, Object.defineProperty(Yt, "super", { value: ee.prototype }), ye && Object.assign(Yt.prototype, ye);
  }, ot = (Yt, ee, ye, Se) => {
    let De, ar, C;
    const Y = {};
    if (ee = ee || {}, Yt == null) return ee;
    do {
      for (De = Object.getOwnPropertyNames(Yt), ar = De.length; ar-- > 0; ) C = De[ar], (!Se || Se(C, Yt, ee)) && !Y[C] && (ee[C] = Yt[C], Y[C] = true);
      Yt = ye !== false && e(Yt);
    } while (Yt && (!ye || ye(Yt, ee)) && Yt !== Object.prototype);
    return ee;
  }, X = (Yt, ee, ye) => {
    Yt = String(Yt), (ye === void 0 || ye > Yt.length) && (ye = Yt.length), ye -= ee.length;
    const Se = Yt.indexOf(ee, ye);
    return Se !== -1 && Se === ye;
  }, I = (Yt) => {
    if (!Yt) return null;
    if (s(Yt)) return Yt;
    let ee = Yt.length;
    if (!b(ee)) return null;
    const ye = new Array(ee);
    for (; ee-- > 0; ) ye[ee] = Yt[ee];
    return ye;
  }, nt = /* @__PURE__ */ ((Yt) => (ee) => Yt && ee instanceof Yt)(typeof Uint8Array < "u" && e(Uint8Array)), ft = (Yt, ee) => {
    const Se = (Yt && Yt[Symbol.iterator]).call(Yt);
    let De;
    for (; (De = Se.next()) && !De.done; ) {
      const ar = De.value;
      ee.call(Yt, ar[0], ar[1]);
    }
  }, dt = (Yt, ee) => {
    let ye;
    const Se = [];
    for (; (ye = Yt.exec(ee)) !== null; ) Se.push(ye);
    return Se;
  }, Lt = a("HTMLFormElement"), $ = (Yt) => Yt.toLowerCase().replace(/[-_\s]([a-z\d])(\w*)/g, function(ye, Se, De) {
    return Se.toUpperCase() + De;
  }), it = (({ hasOwnProperty: Yt }) => (ee, ye) => Yt.call(ee, ye))(Object.prototype), mt = a("RegExp"), Ot = (Yt, ee) => {
    const ye = Object.getOwnPropertyDescriptors(Yt), Se = {};
    S(ye, (De, ar) => {
      let C;
      (C = ee(De, ar, Yt)) !== false && (Se[ar] = C || De);
    }), Object.defineProperties(Yt, Se);
  }, bt = (Yt) => {
    Ot(Yt, (ee, ye) => {
      if (g(Yt) && ["arguments", "caller", "callee"].indexOf(ye) !== -1) return false;
      const Se = Yt[ye];
      if (g(Se)) {
        if (ee.enumerable = false, "writable" in ee) {
          ee.writable = false;
          return;
        }
        ee.set || (ee.set = () => {
          throw Error("Can not rewrite read-only method '" + ye + "'");
        });
      }
    });
  }, xt = (Yt, ee) => {
    const ye = {}, Se = (De) => {
      De.forEach((ar) => {
        ye[ar] = true;
      });
    };
    return s(Yt) ? Se(Yt) : Se(String(Yt).split(ee)), ye;
  }, Ct = () => {
  }, Tt = (Yt, ee) => Yt != null && Number.isFinite(Yt = +Yt) ? Yt : ee;
  function Bt(Yt) {
    return !!(Yt && g(Yt.append) && Yt[Symbol.toStringTag] === "FormData" && Yt[Symbol.iterator]);
  }
  const At = (Yt) => {
    const ee = new Array(10), ye = (Se, De) => {
      if (h(Se)) {
        if (ee.indexOf(Se) >= 0) return;
        if (!("toJSON" in Se)) {
          ee[De] = Se;
          const ar = s(Se) ? [] : {};
          return S(Se, (C, Y) => {
            const ht = ye(C, De + 1);
            !i(ht) && (ar[Y] = ht);
          }), ee[De] = void 0, ar;
        }
      }
      return Se;
    };
    return ye(Yt, 0);
  }, Ut = a("AsyncFunction"), Vt = (Yt) => Yt && (h(Yt) || g(Yt)) && g(Yt.then) && g(Yt.catch), oe = ((Yt, ee) => Yt ? setImmediate : ee ? ((ye, Se) => (B.addEventListener("message", ({ source: De, data: ar }) => {
    De === B && ar === ye && Se.length && Se.shift()();
  }, false), (De) => {
    Se.push(De), B.postMessage(ye, "*");
  }))(`axios@${Math.random()}`, []) : (ye) => setTimeout(ye))(typeof setImmediate == "function", g(B.postMessage)), te = typeof queueMicrotask < "u" ? queueMicrotask.bind(B) : typeof process < "u" && process.nextTick || oe;
  var yt = { isArray: s, isArrayBuffer: d, isBuffer: u, isFormData: F, isArrayBufferView: f, isString: p, isNumber: b, isBoolean: m, isObject: h, isPlainObject: c, isReadableStream: U, isRequest: M, isResponse: Z, isHeaders: D, isUndefined: i, isDate: w, isFile: T, isBlob: P, isRegExp: mt, isFunction: g, isStream: R, isURLSearchParams: v, isTypedArray: nt, isFileList: k, forEach: S, merge: lt, extend: pt, trim: V, stripBOM: at, inherits: rt, toFlatObject: ot, kindOf: o, kindOfTest: a, endsWith: X, toArray: I, forEachEntry: ft, matchAll: dt, isHTMLForm: Lt, hasOwnProperty: it, hasOwnProp: it, reduceDescriptors: Ot, freezeMethods: bt, toObjectSet: xt, toCamelCase: $, noop: Ct, toFiniteNumber: Tt, findKey: x, global: B, isContextDefined: W, isSpecCompliantForm: Bt, toJSONObject: At, isAsyncFn: Ut, isThenable: Vt, setImmediate: oe, asap: te };
  function Mt(Yt, ee, ye, Se, De) {
    Error.call(this), Error.captureStackTrace ? Error.captureStackTrace(this, this.constructor) : this.stack = new Error().stack, this.message = Yt, this.name = "AxiosError", ee && (this.code = ee), ye && (this.config = ye), Se && (this.request = Se), De && (this.response = De, this.status = De.status ? De.status : null);
  }
  yt.inherits(Mt, Error, { toJSON: function() {
    return { message: this.message, name: this.name, description: this.description, number: this.number, fileName: this.fileName, lineNumber: this.lineNumber, columnNumber: this.columnNumber, stack: this.stack, config: yt.toJSONObject(this.config), code: this.code, status: this.status };
  } });
  const O = Mt.prototype, z = {};
  ["ERR_BAD_OPTION_VALUE", "ERR_BAD_OPTION", "ECONNABORTED", "ETIMEDOUT", "ERR_NETWORK", "ERR_FR_TOO_MANY_REDIRECTS", "ERR_DEPRECATED", "ERR_BAD_RESPONSE", "ERR_BAD_REQUEST", "ERR_CANCELED", "ERR_NOT_SUPPORT", "ERR_INVALID_URL"].forEach((Yt) => {
    z[Yt] = { value: Yt };
  }), Object.defineProperties(Mt, z), Object.defineProperty(O, "isAxiosError", { value: true }), Mt.from = (Yt, ee, ye, Se, De, ar) => {
    const C = Object.create(O);
    return yt.toFlatObject(Yt, C, function(ht) {
      return ht !== Error.prototype;
    }, (Y) => Y !== "isAxiosError"), Mt.call(C, Yt.message, ee, ye, Se, De), C.cause = Yt, C.name = Yt.name, ar && Object.assign(C, ar), C;
  };
  var J = null;
  function tt(Yt) {
    return yt.isPlainObject(Yt) || yt.isArray(Yt);
  }
  function H(Yt) {
    return yt.endsWith(Yt, "[]") ? Yt.slice(0, -2) : Yt;
  }
  function K(Yt, ee, ye) {
    return Yt ? Yt.concat(ee).map(function(De, ar) {
      return De = H(De), !ye && ar ? "[" + De + "]" : De;
    }).join(ye ? "." : "") : ee;
  }
  function q(Yt) {
    return yt.isArray(Yt) && !Yt.some(tt);
  }
  const _ = yt.toFlatObject(yt, {}, null, function(ee) {
    return /^is[A-Z]/.test(ee);
  });
  function L(Yt, ee, ye) {
    if (!yt.isObject(Yt)) throw new TypeError("target must be an object");
    ee = ee || new FormData(), ye = yt.toFlatObject(ye, { metaTokens: true, dots: false, indexes: false }, false, function(ze, Ze) {
      return !yt.isUndefined(Ze[ze]);
    });
    const Se = ye.metaTokens, De = ye.visitor || Ft, ar = ye.dots, C = ye.indexes, ht = (ye.Blob || typeof Blob < "u" && Blob) && yt.isSpecCompliantForm(ee);
    if (!yt.isFunction(De)) throw new TypeError("visitor must be a function");
    function Pt(ve) {
      if (ve === null) return "";
      if (yt.isDate(ve)) return ve.toISOString();
      if (!ht && yt.isBlob(ve)) throw new Mt("Blob is not supported. Use a Buffer instead.");
      return yt.isArrayBuffer(ve) || yt.isTypedArray(ve) ? ht && typeof Blob == "function" ? new Blob([ve]) : Buffer.from(ve) : ve;
    }
    function Ft(ve, ze, Ze) {
      let Ar = ve;
      if (ve && !Ze && typeof ve == "object") {
        if (yt.endsWith(ze, "{}")) ze = Se ? ze : ze.slice(0, -2), ve = JSON.stringify(ve);
        else if (yt.isArray(ve) && q(ve) || (yt.isFileList(ve) || yt.endsWith(ze, "[]")) && (Ar = yt.toArray(ve))) return ze = H(ze), Ar.forEach(function(ie, Ae) {
          !(yt.isUndefined(ie) || ie === null) && ee.append(C === true ? K([ze], Ae, ar) : C === null ? ze : ze + "[]", Pt(ie));
        }), false;
      }
      return tt(ve) ? true : (ee.append(K(Ze, ze, ar), Pt(ve)), false);
    }
    const jt = [], ne = Object.assign(_, { defaultVisitor: Ft, convertValue: Pt, isVisitable: tt });
    function Ie(ve, ze) {
      if (!yt.isUndefined(ve)) {
        if (jt.indexOf(ve) !== -1) throw Error("Circular reference detected in " + ze.join("."));
        jt.push(ve), yt.forEach(ve, function(Ar, It) {
          (!(yt.isUndefined(Ar) || Ar === null) && De.call(ee, Ar, yt.isString(It) ? It.trim() : It, ze, ne)) === true && Ie(Ar, ze ? ze.concat(It) : [It]);
        }), jt.pop();
      }
    }
    if (!yt.isObject(Yt)) throw new TypeError("data must be an object");
    return Ie(Yt), ee;
  }
  function et(Yt) {
    const ee = { "!": "%21", "'": "%27", "(": "%28", ")": "%29", "~": "%7E", "%20": "+", "%00": "\0" };
    return encodeURIComponent(Yt).replace(/[!'()~]|%20|%00/g, function(Se) {
      return ee[Se];
    });
  }
  function St(Yt, ee) {
    this._pairs = [], Yt && L(Yt, this, ee);
  }
  const kt = St.prototype;
  kt.append = function(ee, ye) {
    this._pairs.push([ee, ye]);
  }, kt.toString = function(ee) {
    const ye = ee ? function(Se) {
      return ee.call(this, Se, et);
    } : et;
    return this._pairs.map(function(De) {
      return ye(De[0]) + "=" + ye(De[1]);
    }, "").join("&");
  };
  function ct(Yt) {
    return encodeURIComponent(Yt).replace(/%3A/gi, ":").replace(/%24/g, "$").replace(/%2C/gi, ",").replace(/%20/g, "+").replace(/%5B/gi, "[").replace(/%5D/gi, "]");
  }
  function j(Yt, ee, ye) {
    if (!ee) return Yt;
    const Se = ye && ye.encode || ct;
    yt.isFunction(ye) && (ye = { serialize: ye });
    const De = ye && ye.serialize;
    let ar;
    if (De ? ar = De(ee, ye) : ar = yt.isURLSearchParams(ee) ? ee.toString() : new St(ee, ye).toString(Se), ar) {
      const C = Yt.indexOf("#");
      C !== -1 && (Yt = Yt.slice(0, C)), Yt += (Yt.indexOf("?") === -1 ? "?" : "&") + ar;
    }
    return Yt;
  }
  class ut {
    constructor() {
      this.handlers = [];
    }
    use(ee, ye, Se) {
      return this.handlers.push({ fulfilled: ee, rejected: ye, synchronous: Se ? Se.synchronous : false, runWhen: Se ? Se.runWhen : null }), this.handlers.length - 1;
    }
    eject(ee) {
      this.handlers[ee] && (this.handlers[ee] = null);
    }
    clear() {
      this.handlers && (this.handlers = []);
    }
    forEach(ee) {
      yt.forEach(this.handlers, function(Se) {
        Se !== null && ee(Se);
      });
    }
  }
  var gt = ut, $t = { silentJSONParsing: true, forcedJSONParsing: true, clarifyTimeoutError: false }, Ht = typeof URLSearchParams < "u" ? URLSearchParams : St, wt = typeof FormData < "u" ? FormData : null, Jt = typeof Blob < "u" ? Blob : null, Ee = { isBrowser: true, classes: { URLSearchParams: Ht, FormData: wt, Blob: Jt }, protocols: ["http", "https", "file", "blob", "url", "data"] };
  const cr = typeof window < "u" && typeof document < "u", Lr = typeof navigator == "object" && navigator || void 0, on = cr && (!Lr || ["ReactNative", "NativeScript", "NS"].indexOf(Lr.product) < 0), Zr = typeof WorkerGlobalScope < "u" && self instanceof WorkerGlobalScope && typeof self.importScripts == "function", to = cr && window.location.href || "http://localhost";
  var qn = Object.freeze({ __proto__: null, hasBrowserEnv: cr, hasStandardBrowserWebWorkerEnv: Zr, hasStandardBrowserEnv: on, navigator: Lr, origin: to }), jn = { ...qn, ...Ee };
  function eo(Yt, ee) {
    return L(Yt, new jn.classes.URLSearchParams(), Object.assign({ visitor: function(ye, Se, De, ar) {
      return jn.isNode && yt.isBuffer(ye) ? (this.append(Se, ye.toString("base64")), false) : ar.defaultVisitor.apply(this, arguments);
    } }, ee));
  }
  function no(Yt) {
    return yt.matchAll(/\w+|\[(\w*)]/g, Yt).map((ee) => ee[0] === "[]" ? "" : ee[1] || ee[0]);
  }
  function Dn(Yt) {
    const ee = {}, ye = Object.keys(Yt);
    let Se;
    const De = ye.length;
    let ar;
    for (Se = 0; Se < De; Se++) ar = ye[Se], ee[ar] = Yt[ar];
    return ee;
  }
  function se(Yt) {
    function ee(ye, Se, De, ar) {
      let C = ye[ar++];
      if (C === "__proto__") return true;
      const Y = Number.isFinite(+C), ht = ar >= ye.length;
      return C = !C && yt.isArray(De) ? De.length : C, ht ? (yt.hasOwnProp(De, C) ? De[C] = [De[C], Se] : De[C] = Se, !Y) : ((!De[C] || !yt.isObject(De[C])) && (De[C] = []), ee(ye, Se, De[C], ar) && yt.isArray(De[C]) && (De[C] = Dn(De[C])), !Y);
    }
    if (yt.isFormData(Yt) && yt.isFunction(Yt.entries)) {
      const ye = {};
      return yt.forEachEntry(Yt, (Se, De) => {
        ee(no(Se), De, ye, 0);
      }), ye;
    }
    return null;
  }
  function rr(Yt, ee, ye) {
    if (yt.isString(Yt)) try {
      return (ee || JSON.parse)(Yt), yt.trim(Yt);
    } catch (Se) {
      if (Se.name !== "SyntaxError") throw Se;
    }
    return (ye || JSON.stringify)(Yt);
  }
  const Tr = { transitional: $t, adapter: ["xhr", "http", "fetch"], transformRequest: [function(ee, ye) {
    const Se = ye.getContentType() || "", De = Se.indexOf("application/json") > -1, ar = yt.isObject(ee);
    if (ar && yt.isHTMLForm(ee) && (ee = new FormData(ee)), yt.isFormData(ee)) return De ? JSON.stringify(se(ee)) : ee;
    if (yt.isArrayBuffer(ee) || yt.isBuffer(ee) || yt.isStream(ee) || yt.isFile(ee) || yt.isBlob(ee) || yt.isReadableStream(ee)) return ee;
    if (yt.isArrayBufferView(ee)) return ee.buffer;
    if (yt.isURLSearchParams(ee)) return ye.setContentType("application/x-www-form-urlencoded;charset=utf-8", false), ee.toString();
    let Y;
    if (ar) {
      if (Se.indexOf("application/x-www-form-urlencoded") > -1) return eo(ee, this.formSerializer).toString();
      if ((Y = yt.isFileList(ee)) || Se.indexOf("multipart/form-data") > -1) {
        const ht = this.env && this.env.FormData;
        return L(Y ? { "files[]": ee } : ee, ht && new ht(), this.formSerializer);
      }
    }
    return ar || De ? (ye.setContentType("application/json", false), rr(ee)) : ee;
  }], transformResponse: [function(ee) {
    const ye = this.transitional || Tr.transitional, Se = ye && ye.forcedJSONParsing, De = this.responseType === "json";
    if (yt.isResponse(ee) || yt.isReadableStream(ee)) return ee;
    if (ee && yt.isString(ee) && (Se && !this.responseType || De)) {
      const C = !(ye && ye.silentJSONParsing) && De;
      try {
        return JSON.parse(ee);
      } catch (Y) {
        if (C) throw Y.name === "SyntaxError" ? Mt.from(Y, Mt.ERR_BAD_RESPONSE, this, null, this.response) : Y;
      }
    }
    return ee;
  }], timeout: 0, xsrfCookieName: "XSRF-TOKEN", xsrfHeaderName: "X-XSRF-TOKEN", maxContentLength: -1, maxBodyLength: -1, env: { FormData: jn.classes.FormData, Blob: jn.classes.Blob }, validateStatus: function(ee) {
    return ee >= 200 && ee < 300;
  }, headers: { common: { Accept: "application/json, text/plain, */*", "Content-Type": void 0 } } };
  yt.forEach(["delete", "get", "head", "post", "put", "patch"], (Yt) => {
    Tr.headers[Yt] = {};
  });
  var mr = Tr;
  const Ir = yt.toObjectSet(["age", "authorization", "content-length", "content-type", "etag", "expires", "from", "host", "if-modified-since", "if-unmodified-since", "last-modified", "location", "max-forwards", "proxy-authorization", "referer", "retry-after", "user-agent"]);
  var En = (Yt) => {
    const ee = {};
    let ye, Se, De;
    return Yt && Yt.split(`
`).forEach(function(C) {
      De = C.indexOf(":"), ye = C.substring(0, De).trim().toLowerCase(), Se = C.substring(De + 1).trim(), !(!ye || ee[ye] && Ir[ye]) && (ye === "set-cookie" ? ee[ye] ? ee[ye].push(Se) : ee[ye] = [Se] : ee[ye] = ee[ye] ? ee[ye] + ", " + Se : Se);
    }), ee;
  };
  const An = Symbol("internals");
  function _n(Yt) {
    return Yt && String(Yt).trim().toLowerCase();
  }
  function Nn(Yt) {
    return Yt === false || Yt == null ? Yt : yt.isArray(Yt) ? Yt.map(Nn) : String(Yt);
  }
  function Zn(Yt) {
    const ee = /* @__PURE__ */ Object.create(null), ye = /([^\s,;=]+)\s*(?:=\s*([^,;]+))?/g;
    let Se;
    for (; Se = ye.exec(Yt); ) ee[Se[1]] = Se[2];
    return ee;
  }
  const Jn = (Yt) => /^[-_a-zA-Z0-9^`|~,!#$%&'*+.]+$/.test(Yt.trim());
  function Hn(Yt, ee, ye, Se, De) {
    if (yt.isFunction(Se)) return Se.call(this, ee, ye);
    if (De && (ee = ye), !!yt.isString(ee)) {
      if (yt.isString(Se)) return ee.indexOf(Se) !== -1;
      if (yt.isRegExp(Se)) return Se.test(ee);
    }
  }
  function uo(Yt) {
    return Yt.trim().toLowerCase().replace(/([a-z\d])(\w*)/g, (ee, ye, Se) => ye.toUpperCase() + Se);
  }
  function Oo(Yt, ee) {
    const ye = yt.toCamelCase(" " + ee);
    ["get", "set", "has"].forEach((Se) => {
      Object.defineProperty(Yt, Se + ye, { value: function(De, ar, C) {
        return this[Se].call(this, ee, De, ar, C);
      }, configurable: true });
    });
  }
  class jo {
    constructor(ee) {
      ee && this.set(ee);
    }
    set(ee, ye, Se) {
      const De = this;
      function ar(Y, ht, Pt) {
        const Ft = _n(ht);
        if (!Ft) throw new Error("header name must be a non-empty string");
        const jt = yt.findKey(De, Ft);
        (!jt || De[jt] === void 0 || Pt === true || Pt === void 0 && De[jt] !== false) && (De[jt || ht] = Nn(Y));
      }
      const C = (Y, ht) => yt.forEach(Y, (Pt, Ft) => ar(Pt, Ft, ht));
      if (yt.isPlainObject(ee) || ee instanceof this.constructor) C(ee, ye);
      else if (yt.isString(ee) && (ee = ee.trim()) && !Jn(ee)) C(En(ee), ye);
      else if (yt.isHeaders(ee)) for (const [Y, ht] of ee.entries()) ar(ht, Y, Se);
      else ee != null && ar(ye, ee, Se);
      return this;
    }
    get(ee, ye) {
      if (ee = _n(ee), ee) {
        const Se = yt.findKey(this, ee);
        if (Se) {
          const De = this[Se];
          if (!ye) return De;
          if (ye === true) return Zn(De);
          if (yt.isFunction(ye)) return ye.call(this, De, Se);
          if (yt.isRegExp(ye)) return ye.exec(De);
          throw new TypeError("parser must be boolean|regexp|function");
        }
      }
    }
    has(ee, ye) {
      if (ee = _n(ee), ee) {
        const Se = yt.findKey(this, ee);
        return !!(Se && this[Se] !== void 0 && (!ye || Hn(this, this[Se], Se, ye)));
      }
      return false;
    }
    delete(ee, ye) {
      const Se = this;
      let De = false;
      function ar(C) {
        if (C = _n(C), C) {
          const Y = yt.findKey(Se, C);
          Y && (!ye || Hn(Se, Se[Y], Y, ye)) && (delete Se[Y], De = true);
        }
      }
      return yt.isArray(ee) ? ee.forEach(ar) : ar(ee), De;
    }
    clear(ee) {
      const ye = Object.keys(this);
      let Se = ye.length, De = false;
      for (; Se--; ) {
        const ar = ye[Se];
        (!ee || Hn(this, this[ar], ar, ee, true)) && (delete this[ar], De = true);
      }
      return De;
    }
    normalize(ee) {
      const ye = this, Se = {};
      return yt.forEach(this, (De, ar) => {
        const C = yt.findKey(Se, ar);
        if (C) {
          ye[C] = Nn(De), delete ye[ar];
          return;
        }
        const Y = ee ? uo(ar) : String(ar).trim();
        Y !== ar && delete ye[ar], ye[Y] = Nn(De), Se[Y] = true;
      }), this;
    }
    concat(...ee) {
      return this.constructor.concat(this, ...ee);
    }
    toJSON(ee) {
      const ye = /* @__PURE__ */ Object.create(null);
      return yt.forEach(this, (Se, De) => {
        Se != null && Se !== false && (ye[De] = ee && yt.isArray(Se) ? Se.join(", ") : Se);
      }), ye;
    }
    [Symbol.iterator]() {
      return Object.entries(this.toJSON())[Symbol.iterator]();
    }
    toString() {
      return Object.entries(this.toJSON()).map(([ee, ye]) => ee + ": " + ye).join(`
`);
    }
    get [Symbol.toStringTag]() {
      return "AxiosHeaders";
    }
    static from(ee) {
      return ee instanceof this ? ee : new this(ee);
    }
    static concat(ee, ...ye) {
      const Se = new this(ee);
      return ye.forEach((De) => Se.set(De)), Se;
    }
    static accessor(ee) {
      const Se = (this[An] = this[An] = { accessors: {} }).accessors, De = this.prototype;
      function ar(C) {
        const Y = _n(C);
        Se[Y] || (Oo(De, C), Se[Y] = true);
      }
      return yt.isArray(ee) ? ee.forEach(ar) : ar(ee), this;
    }
  }
  jo.accessor(["Content-Type", "Content-Length", "Accept", "Accept-Encoding", "User-Agent", "Authorization"]), yt.reduceDescriptors(jo.prototype, ({ value: Yt }, ee) => {
    let ye = ee[0].toUpperCase() + ee.slice(1);
    return { get: () => Yt, set(Se) {
      this[ye] = Se;
    } };
  }), yt.freezeMethods(jo);
  var Bo = jo;
  function Po(Yt, ee) {
    const ye = this || mr, Se = ee || ye, De = Bo.from(Se.headers);
    let ar = Se.data;
    return yt.forEach(Yt, function(Y) {
      ar = Y.call(ye, ar, De.normalize(), ee ? ee.status : void 0);
    }), De.normalize(), ar;
  }
  function yo(Yt) {
    return !!(Yt && Yt.__CANCEL__);
  }
  function ri(Yt, ee, ye) {
    Mt.call(this, Yt ?? "canceled", Mt.ERR_CANCELED, ee, ye), this.name = "CanceledError";
  }
  yt.inherits(ri, Mt, { __CANCEL__: true });
  function Eo(Yt, ee, ye) {
    const Se = ye.config.validateStatus;
    !ye.status || !Se || Se(ye.status) ? Yt(ye) : ee(new Mt("Request failed with status code " + ye.status, [Mt.ERR_BAD_REQUEST, Mt.ERR_BAD_RESPONSE][Math.floor(ye.status / 100) - 4], ye.config, ye.request, ye));
  }
  function Ao(Yt) {
    const ee = /^([-+\w]{1,25})(:?\/\/|:)/.exec(Yt);
    return ee && ee[1] || "";
  }
  function ti(Yt, ee) {
    Yt = Yt || 10;
    const ye = new Array(Yt), Se = new Array(Yt);
    let De = 0, ar = 0, C;
    return ee = ee !== void 0 ? ee : 1e3, function(ht) {
      const Pt = Date.now(), Ft = Se[ar];
      C || (C = Pt), ye[De] = ht, Se[De] = Pt;
      let jt = ar, ne = 0;
      for (; jt !== De; ) ne += ye[jt++], jt = jt % Yt;
      if (De = (De + 1) % Yt, De === ar && (ar = (ar + 1) % Yt), Pt - C < ee) return;
      const Ie = Ft && Pt - Ft;
      return Ie ? Math.round(ne * 1e3 / Ie) : void 0;
    };
  }
  function li(Yt, ee) {
    let ye = 0, Se = 1e3 / ee, De, ar;
    const C = (Pt, Ft = Date.now()) => {
      ye = Ft, De = null, ar && (clearTimeout(ar), ar = null), Yt.apply(null, Pt);
    };
    return [(...Pt) => {
      const Ft = Date.now(), jt = Ft - ye;
      jt >= Se ? C(Pt, Ft) : (De = Pt, ar || (ar = setTimeout(() => {
        ar = null, C(De);
      }, Se - jt)));
    }, () => De && C(De)];
  }
  const pi = (Yt, ee, ye = 3) => {
    let Se = 0;
    const De = ti(50, 250);
    return li((ar) => {
      const C = ar.loaded, Y = ar.lengthComputable ? ar.total : void 0, ht = C - Se, Pt = De(ht), Ft = C <= Y;
      Se = C;
      const jt = { loaded: C, total: Y, progress: Y ? C / Y : void 0, bytes: ht, rate: Pt || void 0, estimated: Pt && Y && Ft ? (Y - C) / Pt : void 0, event: ar, lengthComputable: Y != null, [ee ? "download" : "upload"]: true };
      Yt(jt);
    }, ye);
  }, Ho = (Yt, ee) => {
    const ye = Yt != null;
    return [(Se) => ee[0]({ lengthComputable: ye, total: Yt, loaded: Se }), ee[1]];
  }, ai = (Yt) => (...ee) => yt.asap(() => Yt(...ee));
  var hi = jn.hasStandardBrowserEnv ? /* @__PURE__ */ ((Yt, ee) => (ye) => (ye = new URL(ye, jn.origin), Yt.protocol === ye.protocol && Yt.host === ye.host && (ee || Yt.port === ye.port)))(new URL(jn.origin), jn.navigator && /(msie|trident)/i.test(jn.navigator.userAgent)) : () => true, Co = jn.hasStandardBrowserEnv ? { write(Yt, ee, ye, Se, De, ar) {
    const C = [Yt + "=" + encodeURIComponent(ee)];
    yt.isNumber(ye) && C.push("expires=" + new Date(ye).toGMTString()), yt.isString(Se) && C.push("path=" + Se), yt.isString(De) && C.push("domain=" + De), ar === true && C.push("secure"), document.cookie = C.join("; ");
  }, read(Yt) {
    const ee = document.cookie.match(new RegExp("(^|;\\s*)(" + Yt + ")=([^;]*)"));
    return ee ? decodeURIComponent(ee[3]) : null;
  }, remove(Yt) {
    this.write(Yt, "", Date.now() - 864e5);
  } } : { write() {
  }, read() {
    return null;
  }, remove() {
  } };
  function Wo(Yt) {
    return /^([a-z][a-z\d+\-.]*:)?\/\//i.test(Yt);
  }
  function qt(Yt, ee) {
    return ee ? Yt.replace(/\/?\/$/, "") + "/" + ee.replace(/^\/+/, "") : Yt;
  }
  function Nt(Yt, ee, ye) {
    let Se = !Wo(ee);
    return Yt && (Se || ye == false) ? qt(Yt, ee) : ee;
  }
  const he = (Yt) => Yt instanceof Bo ? { ...Yt } : Yt;
  function _e(Yt, ee) {
    ee = ee || {};
    const ye = {};
    function Se(Pt, Ft, jt, ne) {
      return yt.isPlainObject(Pt) && yt.isPlainObject(Ft) ? yt.merge.call({ caseless: ne }, Pt, Ft) : yt.isPlainObject(Ft) ? yt.merge({}, Ft) : yt.isArray(Ft) ? Ft.slice() : Ft;
    }
    function De(Pt, Ft, jt, ne) {
      if (yt.isUndefined(Ft)) {
        if (!yt.isUndefined(Pt)) return Se(void 0, Pt, jt, ne);
      } else return Se(Pt, Ft, jt, ne);
    }
    function ar(Pt, Ft) {
      if (!yt.isUndefined(Ft)) return Se(void 0, Ft);
    }
    function C(Pt, Ft) {
      if (yt.isUndefined(Ft)) {
        if (!yt.isUndefined(Pt)) return Se(void 0, Pt);
      } else return Se(void 0, Ft);
    }
    function Y(Pt, Ft, jt) {
      if (jt in ee) return Se(Pt, Ft);
      if (jt in Yt) return Se(void 0, Pt);
    }
    const ht = { url: ar, method: ar, data: ar, baseURL: C, transformRequest: C, transformResponse: C, paramsSerializer: C, timeout: C, timeoutMessage: C, withCredentials: C, withXSRFToken: C, adapter: C, responseType: C, xsrfCookieName: C, xsrfHeaderName: C, onUploadProgress: C, onDownloadProgress: C, decompress: C, maxContentLength: C, maxBodyLength: C, beforeRedirect: C, transport: C, httpAgent: C, httpsAgent: C, cancelToken: C, socketPath: C, responseEncoding: C, validateStatus: Y, headers: (Pt, Ft, jt) => De(he(Pt), he(Ft), jt, true) };
    return yt.forEach(Object.keys(Object.assign({}, Yt, ee)), function(Ft) {
      const jt = ht[Ft] || De, ne = jt(Yt[Ft], ee[Ft], Ft);
      yt.isUndefined(ne) && jt !== Y || (ye[Ft] = ne);
    }), ye;
  }
  var Ve = (Yt) => {
    const ee = _e({}, Yt);
    let { data: ye, withXSRFToken: Se, xsrfHeaderName: De, xsrfCookieName: ar, headers: C, auth: Y } = ee;
    ee.headers = C = Bo.from(C), ee.url = j(Nt(ee.baseURL, ee.url, ee.allowAbsoluteUrls), Yt.params, Yt.paramsSerializer), Y && C.set("Authorization", "Basic " + btoa((Y.username || "") + ":" + (Y.password ? unescape(encodeURIComponent(Y.password)) : "")));
    let ht;
    if (yt.isFormData(ye)) {
      if (jn.hasStandardBrowserEnv || jn.hasStandardBrowserWebWorkerEnv) C.setContentType(void 0);
      else if ((ht = C.getContentType()) !== false) {
        const [Pt, ...Ft] = ht ? ht.split(";").map((jt) => jt.trim()).filter(Boolean) : [];
        C.setContentType([Pt || "multipart/form-data", ...Ft].join("; "));
      }
    }
    if (jn.hasStandardBrowserEnv && (Se && yt.isFunction(Se) && (Se = Se(ee)), Se || Se !== false && hi(ee.url))) {
      const Pt = De && ar && Co.read(ar);
      Pt && C.set(De, Pt);
    }
    return ee;
  }, Ge = typeof XMLHttpRequest < "u" && function(Yt) {
    return new Promise(function(ye, Se) {
      const De = Ve(Yt);
      let ar = De.data;
      const C = Bo.from(De.headers).normalize();
      let { responseType: Y, onUploadProgress: ht, onDownloadProgress: Pt } = De, Ft, jt, ne, Ie, ve;
      function ze() {
        Ie && Ie(), ve && ve(), De.cancelToken && De.cancelToken.unsubscribe(Ft), De.signal && De.signal.removeEventListener("abort", Ft);
      }
      let Ze = new XMLHttpRequest();
      Ze.open(De.method.toUpperCase(), De.url, true), Ze.timeout = De.timeout;
      function Ar() {
        if (!Ze) return;
        const ie = Bo.from("getAllResponseHeaders" in Ze && Ze.getAllResponseHeaders()), ge = { data: !Y || Y === "text" || Y === "json" ? Ze.responseText : Ze.response, status: Ze.status, statusText: Ze.statusText, headers: ie, config: Yt, request: Ze };
        Eo(function(sr) {
          ye(sr), ze();
        }, function(sr) {
          Se(sr), ze();
        }, ge), Ze = null;
      }
      "onloadend" in Ze ? Ze.onloadend = Ar : Ze.onreadystatechange = function() {
        !Ze || Ze.readyState !== 4 || Ze.status === 0 && !(Ze.responseURL && Ze.responseURL.indexOf("file:") === 0) || setTimeout(Ar);
      }, Ze.onabort = function() {
        Ze && (Se(new Mt("Request aborted", Mt.ECONNABORTED, Yt, Ze)), Ze = null);
      }, Ze.onerror = function() {
        Se(new Mt("Network Error", Mt.ERR_NETWORK, Yt, Ze)), Ze = null;
      }, Ze.ontimeout = function() {
        let Ae = De.timeout ? "timeout of " + De.timeout + "ms exceeded" : "timeout exceeded";
        const ge = De.transitional || $t;
        De.timeoutErrorMessage && (Ae = De.timeoutErrorMessage), Se(new Mt(Ae, ge.clarifyTimeoutError ? Mt.ETIMEDOUT : Mt.ECONNABORTED, Yt, Ze)), Ze = null;
      }, ar === void 0 && C.setContentType(null), "setRequestHeader" in Ze && yt.forEach(C.toJSON(), function(Ae, ge) {
        Ze.setRequestHeader(ge, Ae);
      }), yt.isUndefined(De.withCredentials) || (Ze.withCredentials = !!De.withCredentials), Y && Y !== "json" && (Ze.responseType = De.responseType), Pt && ([ne, ve] = pi(Pt, true), Ze.addEventListener("progress", ne)), ht && Ze.upload && ([jt, Ie] = pi(ht), Ze.upload.addEventListener("progress", jt), Ze.upload.addEventListener("loadend", Ie)), (De.cancelToken || De.signal) && (Ft = (ie) => {
        Ze && (Se(!ie || ie.type ? new ri(null, Yt, Ze) : ie), Ze.abort(), Ze = null);
      }, De.cancelToken && De.cancelToken.subscribe(Ft), De.signal && (De.signal.aborted ? Ft() : De.signal.addEventListener("abort", Ft)));
      const It = Ao(De.url);
      if (It && jn.protocols.indexOf(It) === -1) {
        Se(new Mt("Unsupported protocol " + It + ":", Mt.ERR_BAD_REQUEST, Yt));
        return;
      }
      Ze.send(ar || null);
    });
  }, Oe = (Yt, ee) => {
    const { length: ye } = Yt = Yt ? Yt.filter(Boolean) : [];
    if (ee || ye) {
      let Se = new AbortController(), De;
      const ar = function(Pt) {
        if (!De) {
          De = true, Y();
          const Ft = Pt instanceof Error ? Pt : this.reason;
          Se.abort(Ft instanceof Mt ? Ft : new ri(Ft instanceof Error ? Ft.message : Ft));
        }
      };
      let C = ee && setTimeout(() => {
        C = null, ar(new Mt(`timeout ${ee} of ms exceeded`, Mt.ETIMEDOUT));
      }, ee);
      const Y = () => {
        Yt && (C && clearTimeout(C), C = null, Yt.forEach((Pt) => {
          Pt.unsubscribe ? Pt.unsubscribe(ar) : Pt.removeEventListener("abort", ar);
        }), Yt = null);
      };
      Yt.forEach((Pt) => Pt.addEventListener("abort", ar));
      const { signal: ht } = Se;
      return ht.unsubscribe = () => yt.asap(Y), ht;
    }
  };
  const lr = function* (Yt, ee) {
    let ye = Yt.byteLength;
    if (ye < ee) {
      yield Yt;
      return;
    }
    let Se = 0, De;
    for (; Se < ye; ) De = Se + ee, yield Yt.slice(Se, De), Se = De;
  }, Fr = async function* (Yt, ee) {
    for await (const ye of Dr(Yt)) yield* lr(ye, ee);
  }, Dr = async function* (Yt) {
    if (Yt[Symbol.asyncIterator]) {
      yield* Yt;
      return;
    }
    const ee = Yt.getReader();
    try {
      for (; ; ) {
        const { done: ye, value: Se } = await ee.read();
        if (ye) break;
        yield Se;
      }
    } finally {
      await ee.cancel();
    }
  }, gr = (Yt, ee, ye, Se) => {
    const De = Fr(Yt, ee);
    let ar = 0, C, Y = (ht) => {
      C || (C = true, Se && Se(ht));
    };
    return new ReadableStream({ async pull(ht) {
      try {
        const { done: Pt, value: Ft } = await De.next();
        if (Pt) {
          Y(), ht.close();
          return;
        }
        let jt = Ft.byteLength;
        if (ye) {
          let ne = ar += jt;
          ye(ne);
        }
        ht.enqueue(new Uint8Array(Ft));
      } catch (Pt) {
        throw Y(Pt), Pt;
      }
    }, cancel(ht) {
      return Y(ht), De.return();
    } }, { highWaterMark: 2 });
  }, an = typeof fetch == "function" && typeof Request == "function" && typeof Response == "function", pn = an && typeof ReadableStream == "function", yn = an && (typeof TextEncoder == "function" ? /* @__PURE__ */ ((Yt) => (ee) => Yt.encode(ee))(new TextEncoder()) : async (Yt) => new Uint8Array(await new Response(Yt).arrayBuffer())), Rt = (Yt, ...ee) => {
    try {
      return !!Yt(...ee);
    } catch {
      return false;
    }
  }, jr = pn && Rt(() => {
    let Yt = false;
    const ee = new Request(jn.origin, { body: new ReadableStream(), method: "POST", get duplex() {
      return Yt = true, "half";
    } }).headers.has("Content-Type");
    return Yt && !ee;
  }), Ln = 64 * 1024, fo = pn && Rt(() => yt.isReadableStream(new Response("").body)), Wt = { stream: fo && ((Yt) => Yt.body) };
  an && ((Yt) => {
    ["text", "arrayBuffer", "blob", "formData", "stream"].forEach((ee) => {
      !Wt[ee] && (Wt[ee] = yt.isFunction(Yt[ee]) ? (ye) => ye[ee]() : (ye, Se) => {
        throw new Mt(`Response type '${ee}' is not supported`, Mt.ERR_NOT_SUPPORT, Se);
      });
    });
  })(new Response());
  const ue = async (Yt) => {
    if (Yt == null) return 0;
    if (yt.isBlob(Yt)) return Yt.size;
    if (yt.isSpecCompliantForm(Yt)) return (await new Request(jn.origin, { method: "POST", body: Yt }).arrayBuffer()).byteLength;
    if (yt.isArrayBufferView(Yt) || yt.isArrayBuffer(Yt)) return Yt.byteLength;
    if (yt.isURLSearchParams(Yt) && (Yt = Yt + ""), yt.isString(Yt)) return (await yn(Yt)).byteLength;
  }, Zt = async (Yt, ee) => {
    const ye = yt.toFiniteNumber(Yt.getContentLength());
    return ye ?? ue(ee);
  };
  var Xt = an && (async (Yt) => {
    let { url: ee, method: ye, data: Se, signal: De, cancelToken: ar, timeout: C, onDownloadProgress: Y, onUploadProgress: ht, responseType: Pt, headers: Ft, withCredentials: jt = "same-origin", fetchOptions: ne } = Ve(Yt);
    Pt = Pt ? (Pt + "").toLowerCase() : "text";
    let Ie = Oe([De, ar && ar.toAbortSignal()], C), ve;
    const ze = Ie && Ie.unsubscribe && (() => {
      Ie.unsubscribe();
    });
    let Ze;
    try {
      if (ht && jr && ye !== "get" && ye !== "head" && (Ze = await Zt(Ft, Se)) !== 0) {
        let ge = new Request(ee, { method: "POST", body: Se, duplex: "half" }), we;
        if (yt.isFormData(Se) && (we = ge.headers.get("content-type")) && Ft.setContentType(we), ge.body) {
          const [sr, nr] = Ho(Ze, pi(ai(ht)));
          Se = gr(ge.body, Ln, sr, nr);
        }
      }
      yt.isString(jt) || (jt = jt ? "include" : "omit");
      const Ar = "credentials" in Request.prototype;
      ve = new Request(ee, { ...ne, signal: Ie, method: ye.toUpperCase(), headers: Ft.normalize().toJSON(), body: Se, duplex: "half", credentials: Ar ? jt : void 0 });
      let It = await fetch(ve);
      const ie = fo && (Pt === "stream" || Pt === "response");
      if (fo && (Y || ie && ze)) {
        const ge = {};
        ["status", "statusText", "headers"].forEach((gn) => {
          ge[gn] = It[gn];
        });
        const we = yt.toFiniteNumber(It.headers.get("content-length")), [sr, nr] = Y && Ho(we, pi(ai(Y), true)) || [];
        It = new Response(gr(It.body, Ln, sr, () => {
          nr && nr(), ze && ze();
        }), ge);
      }
      Pt = Pt || "text";
      let Ae = await Wt[yt.findKey(Wt, Pt) || "text"](It, Yt);
      return !ie && ze && ze(), await new Promise((ge, we) => {
        Eo(ge, we, { data: Ae, headers: Bo.from(It.headers), status: It.status, statusText: It.statusText, config: Yt, request: ve });
      });
    } catch (Ar) {
      throw ze && ze(), Ar && Ar.name === "TypeError" && /fetch/i.test(Ar.message) ? Object.assign(new Mt("Network Error", Mt.ERR_NETWORK, Yt, ve), { cause: Ar.cause || Ar }) : Mt.from(Ar, Ar && Ar.code, Yt, ve);
    }
  });
  const pe = { http: J, xhr: Ge, fetch: Xt };
  yt.forEach(pe, (Yt, ee) => {
    if (Yt) {
      try {
        Object.defineProperty(Yt, "name", { value: ee });
      } catch {
      }
      Object.defineProperty(Yt, "adapterName", { value: ee });
    }
  });
  const $e = (Yt) => `- ${Yt}`, je = (Yt) => yt.isFunction(Yt) || Yt === null || Yt === false;
  var Me = { getAdapter: (Yt) => {
    Yt = yt.isArray(Yt) ? Yt : [Yt];
    const { length: ee } = Yt;
    let ye, Se;
    const De = {};
    for (let ar = 0; ar < ee; ar++) {
      ye = Yt[ar];
      let C;
      if (Se = ye, !je(ye) && (Se = pe[(C = String(ye)).toLowerCase()], Se === void 0)) throw new Mt(`Unknown adapter '${C}'`);
      if (Se) break;
      De[C || "#" + ar] = Se;
    }
    if (!Se) {
      const ar = Object.entries(De).map(([Y, ht]) => `adapter ${Y} ` + (ht === false ? "is not supported by the environment" : "is not available in the build"));
      let C = ee ? ar.length > 1 ? `since :
` + ar.map($e).join(`
`) : " " + $e(ar[0]) : "as no adapter specified";
      throw new Mt("There is no suitable adapter to dispatch the request " + C, "ERR_NOT_SUPPORT");
    }
    return Se;
  }, adapters: pe };
  function fr(Yt) {
    if (Yt.cancelToken && Yt.cancelToken.throwIfRequested(), Yt.signal && Yt.signal.aborted) throw new ri(null, Yt);
  }
  function Nr(Yt) {
    return fr(Yt), Yt.headers = Bo.from(Yt.headers), Yt.data = Po.call(Yt, Yt.transformRequest), ["post", "put", "patch"].indexOf(Yt.method) !== -1 && Yt.headers.setContentType("application/x-www-form-urlencoded", false), Me.getAdapter(Yt.adapter || mr.adapter)(Yt).then(function(Se) {
      return fr(Yt), Se.data = Po.call(Yt, Yt.transformResponse, Se), Se.headers = Bo.from(Se.headers), Se;
    }, function(Se) {
      return yo(Se) || (fr(Yt), Se && Se.response && (Se.response.data = Po.call(Yt, Yt.transformResponse, Se.response), Se.response.headers = Bo.from(Se.response.headers))), Promise.reject(Se);
    });
  }
  const wr = "1.8.4", Vr = {};
  ["object", "boolean", "number", "function", "string", "symbol"].forEach((Yt, ee) => {
    Vr[Yt] = function(Se) {
      return typeof Se === Yt || "a" + (ee < 1 ? "n " : " ") + Yt;
    };
  });
  const $r = {};
  Vr.transitional = function(ee, ye, Se) {
    function De(ar, C) {
      return "[Axios v" + wr + "] Transitional option '" + ar + "'" + C + (Se ? ". " + Se : "");
    }
    return (ar, C, Y) => {
      if (ee === false) throw new Mt(De(C, " has been removed" + (ye ? " in " + ye : "")), Mt.ERR_DEPRECATED);
      return ye && !$r[C] && ($r[C] = true, console.warn(De(C, " has been deprecated since v" + ye + " and will be removed in the near future"))), ee ? ee(ar, C, Y) : true;
    };
  }, Vr.spelling = function(ee) {
    return (ye, Se) => (console.warn(`${Se} is likely a misspelling of ${ee}`), true);
  };
  function Xr(Yt, ee, ye) {
    if (typeof Yt != "object") throw new Mt("options must be an object", Mt.ERR_BAD_OPTION_VALUE);
    const Se = Object.keys(Yt);
    let De = Se.length;
    for (; De-- > 0; ) {
      const ar = Se[De], C = ee[ar];
      if (C) {
        const Y = Yt[ar], ht = Y === void 0 || C(Y, ar, Yt);
        if (ht !== true) throw new Mt("option " + ar + " must be " + ht, Mt.ERR_BAD_OPTION_VALUE);
        continue;
      }
      if (ye !== true) throw new Mt("Unknown option " + ar, Mt.ERR_BAD_OPTION);
    }
  }
  var Cn = { assertOptions: Xr, validators: Vr };
  const sn = Cn.validators;
  class To {
    constructor(ee) {
      this.defaults = ee, this.interceptors = { request: new gt(), response: new gt() };
    }
    async request(ee, ye) {
      try {
        return await this._request(ee, ye);
      } catch (Se) {
        if (Se instanceof Error) {
          let De = {};
          Error.captureStackTrace ? Error.captureStackTrace(De) : De = new Error();
          const ar = De.stack ? De.stack.replace(/^.+\n/, "") : "";
          try {
            Se.stack ? ar && !String(Se.stack).endsWith(ar.replace(/^.+\n.+\n/, "")) && (Se.stack += `
` + ar) : Se.stack = ar;
          } catch {
          }
        }
        throw Se;
      }
    }
    _request(ee, ye) {
      typeof ee == "string" ? (ye = ye || {}, ye.url = ee) : ye = ee || {}, ye = _e(this.defaults, ye);
      const { transitional: Se, paramsSerializer: De, headers: ar } = ye;
      Se !== void 0 && Cn.assertOptions(Se, { silentJSONParsing: sn.transitional(sn.boolean), forcedJSONParsing: sn.transitional(sn.boolean), clarifyTimeoutError: sn.transitional(sn.boolean) }, false), De != null && (yt.isFunction(De) ? ye.paramsSerializer = { serialize: De } : Cn.assertOptions(De, { encode: sn.function, serialize: sn.function }, true)), ye.allowAbsoluteUrls !== void 0 || (this.defaults.allowAbsoluteUrls !== void 0 ? ye.allowAbsoluteUrls = this.defaults.allowAbsoluteUrls : ye.allowAbsoluteUrls = true), Cn.assertOptions(ye, { baseUrl: sn.spelling("baseURL"), withXsrfToken: sn.spelling("withXSRFToken") }, true), ye.method = (ye.method || this.defaults.method || "get").toLowerCase();
      let C = ar && yt.merge(ar.common, ar[ye.method]);
      ar && yt.forEach(["delete", "get", "head", "post", "put", "patch", "common"], (ve) => {
        delete ar[ve];
      }), ye.headers = Bo.concat(C, ar);
      const Y = [];
      let ht = true;
      this.interceptors.request.forEach(function(ze) {
        typeof ze.runWhen == "function" && ze.runWhen(ye) === false || (ht = ht && ze.synchronous, Y.unshift(ze.fulfilled, ze.rejected));
      });
      const Pt = [];
      this.interceptors.response.forEach(function(ze) {
        Pt.push(ze.fulfilled, ze.rejected);
      });
      let Ft, jt = 0, ne;
      if (!ht) {
        const ve = [Nr.bind(this), void 0];
        for (ve.unshift.apply(ve, Y), ve.push.apply(ve, Pt), ne = ve.length, Ft = Promise.resolve(ye); jt < ne; ) Ft = Ft.then(ve[jt++], ve[jt++]);
        return Ft;
      }
      ne = Y.length;
      let Ie = ye;
      for (jt = 0; jt < ne; ) {
        const ve = Y[jt++], ze = Y[jt++];
        try {
          Ie = ve(Ie);
        } catch (Ze) {
          ze.call(this, Ze);
          break;
        }
      }
      try {
        Ft = Nr.call(this, Ie);
      } catch (ve) {
        return Promise.reject(ve);
      }
      for (jt = 0, ne = Pt.length; jt < ne; ) Ft = Ft.then(Pt[jt++], Pt[jt++]);
      return Ft;
    }
    getUri(ee) {
      ee = _e(this.defaults, ee);
      const ye = Nt(ee.baseURL, ee.url, ee.allowAbsoluteUrls);
      return j(ye, ee.params, ee.paramsSerializer);
    }
  }
  yt.forEach(["delete", "get", "head", "options"], function(ee) {
    To.prototype[ee] = function(ye, Se) {
      return this.request(_e(Se || {}, { method: ee, url: ye, data: (Se || {}).data }));
    };
  }), yt.forEach(["post", "put", "patch"], function(ee) {
    function ye(Se) {
      return function(ar, C, Y) {
        return this.request(_e(Y || {}, { method: ee, headers: Se ? { "Content-Type": "multipart/form-data" } : {}, url: ar, data: C }));
      };
    }
    To.prototype[ee] = ye(), To.prototype[ee + "Form"] = ye(true);
  });
  var Ro = To;
  class Rn {
    constructor(ee) {
      if (typeof ee != "function") throw new TypeError("executor must be a function.");
      let ye;
      this.promise = new Promise(function(ar) {
        ye = ar;
      });
      const Se = this;
      this.promise.then((De) => {
        if (!Se._listeners) return;
        let ar = Se._listeners.length;
        for (; ar-- > 0; ) Se._listeners[ar](De);
        Se._listeners = null;
      }), this.promise.then = (De) => {
        let ar;
        const C = new Promise((Y) => {
          Se.subscribe(Y), ar = Y;
        }).then(De);
        return C.cancel = function() {
          Se.unsubscribe(ar);
        }, C;
      }, ee(function(ar, C, Y) {
        Se.reason || (Se.reason = new ri(ar, C, Y), ye(Se.reason));
      });
    }
    throwIfRequested() {
      if (this.reason) throw this.reason;
    }
    subscribe(ee) {
      if (this.reason) {
        ee(this.reason);
        return;
      }
      this._listeners ? this._listeners.push(ee) : this._listeners = [ee];
    }
    unsubscribe(ee) {
      if (!this._listeners) return;
      const ye = this._listeners.indexOf(ee);
      ye !== -1 && this._listeners.splice(ye, 1);
    }
    toAbortSignal() {
      const ee = new AbortController(), ye = (Se) => {
        ee.abort(Se);
      };
      return this.subscribe(ye), ee.signal.unsubscribe = () => this.unsubscribe(ye), ee.signal;
    }
    static source() {
      let ee;
      return { token: new Rn(function(De) {
        ee = De;
      }), cancel: ee };
    }
  }
  var bo = Rn;
  function si(Yt) {
    return function(ye) {
      return Yt.apply(null, ye);
    };
  }
  function Xo(Yt) {
    return yt.isObject(Yt) && Yt.isAxiosError === true;
  }
  const Xn = { Continue: 100, SwitchingProtocols: 101, Processing: 102, EarlyHints: 103, Ok: 200, Created: 201, Accepted: 202, NonAuthoritativeInformation: 203, NoContent: 204, ResetContent: 205, PartialContent: 206, MultiStatus: 207, AlreadyReported: 208, ImUsed: 226, MultipleChoices: 300, MovedPermanently: 301, Found: 302, SeeOther: 303, NotModified: 304, UseProxy: 305, Unused: 306, TemporaryRedirect: 307, PermanentRedirect: 308, BadRequest: 400, Unauthorized: 401, PaymentRequired: 402, Forbidden: 403, NotFound: 404, MethodNotAllowed: 405, NotAcceptable: 406, ProxyAuthenticationRequired: 407, RequestTimeout: 408, Conflict: 409, Gone: 410, LengthRequired: 411, PreconditionFailed: 412, PayloadTooLarge: 413, UriTooLong: 414, UnsupportedMediaType: 415, RangeNotSatisfiable: 416, ExpectationFailed: 417, ImATeapot: 418, MisdirectedRequest: 421, UnprocessableEntity: 422, Locked: 423, FailedDependency: 424, TooEarly: 425, UpgradeRequired: 426, PreconditionRequired: 428, TooManyRequests: 429, RequestHeaderFieldsTooLarge: 431, UnavailableForLegalReasons: 451, InternalServerError: 500, NotImplemented: 501, BadGateway: 502, ServiceUnavailable: 503, GatewayTimeout: 504, HttpVersionNotSupported: 505, VariantAlsoNegotiates: 506, InsufficientStorage: 507, LoopDetected: 508, NotExtended: 510, NetworkAuthenticationRequired: 511 };
  Object.entries(Xn).forEach(([Yt, ee]) => {
    Xn[ee] = Yt;
  });
  var ki = Xn;
  function ii(Yt) {
    const ee = new Ro(Yt), ye = E(Ro.prototype.request, ee);
    return yt.extend(ye, Ro.prototype, ee, { allOwnKeys: true }), yt.extend(ye, ee, null, { allOwnKeys: true }), ye.create = function(De) {
      return ii(_e(Yt, De));
    }, ye;
  }
  const wo = ii(mr);
  return wo.Axios = Ro, wo.CanceledError = ri, wo.CancelToken = bo, wo.isCancel = yo, wo.VERSION = wr, wo.toFormData = L, wo.AxiosError = Mt, wo.Cancel = wo.CanceledError, wo.all = function(ee) {
    return Promise.all(ee);
  }, wo.spread = si, wo.isAxiosError = Xo, wo.mergeConfig = _e, wo.AxiosHeaders = Bo, wo.formToJSON = (Yt) => se(yt.isHTMLForm(Yt) ? new FormData(Yt) : Yt), wo.getAdapter = Me.getAdapter, wo.HttpStatusCode = ki, wo.default = wo, lf = wo, lf;
}
var Hp;
function Bm() {
  if (Hp) return Ns;
  Hp = 1, Object.defineProperty(Ns, "__esModule", { value: true }), Ns.create = Ns.axiosClient = void 0;
  var E = t(Mm());
  function t(e) {
    return e && e.__esModule ? e : { default: e };
  }
  return Ns.axiosClient = E.default, Ns.create = E.default.create, Ns;
}
var Gp;
function Lm() {
  return Gp || (Gp = 1, function(E) {
    Object.defineProperty(E, "__esModule", { value: true });
    var t = { httpClient: true, create: true };
    E.httpClient = E.create = void 0;
    var e = Im();
    Object.keys(e).forEach(function(a) {
      a === "default" || a === "__esModule" || Object.prototype.hasOwnProperty.call(t, a) || a in E && E[a] === e[a] || Object.defineProperty(E, a, { enumerable: true, get: function() {
        return e[a];
      } });
    });
    {
      var o = Bm();
      E.httpClient = o.axiosClient, E.create = o.create;
    }
  }(cf)), cf;
}
var Wp;
function cp() {
  if (Wp) return Ya;
  Wp = 1, Object.defineProperty(Ya, "__esModule", { value: true }), Ya.version = Ya.default = Ya.AxiosClient = void 0;
  var E = Lm(), t = Ya.version = "14.0.0-rc.3", e = Ya.AxiosClient = (0, E.create)({ headers: { "X-Client-Name": "js-soroban-client", "X-Client-Version": t } });
  return Ya.default = e, Ya;
}
var Yc = {}, Xp;
function Nm() {
  if (Xp) return Yc;
  Xp = 1, Object.defineProperty(Yc, "__esModule", { value: true }), Yc.postObject = i;
  var E = t(cp());
  function t(d) {
    return d && d.__esModule ? d : { default: d };
  }
  function e() {
    var d, f, p = typeof Symbol == "function" ? Symbol : {}, g = p.iterator || "@@iterator", b = p.toStringTag || "@@toStringTag";
    function h(F, v, U, M) {
      var Z = v && v.prototype instanceof c ? v : c, D = Object.create(Z.prototype);
      return o(D, "_invoke", function(V, S, x) {
        var B, W, lt, pt = 0, at = x || [], rt = false, ot = { p: 0, n: 0, v: d, a: X, f: X.bind(d, 4), d: function(nt, ft) {
          return B = nt, W = 0, lt = d, ot.n = ft, m;
        } };
        function X(I, nt) {
          for (W = I, lt = nt, f = 0; !rt && pt && !ft && f < at.length; f++) {
            var ft, dt = at[f], Lt = ot.p, $ = dt[2];
            I > 3 ? (ft = $ === nt) && (lt = dt[(W = dt[4]) ? 5 : (W = 3, 3)], dt[4] = dt[5] = d) : dt[0] <= Lt && ((ft = I < 2 && Lt < dt[1]) ? (W = 0, ot.v = nt, ot.n = dt[1]) : Lt < $ && (ft = I < 3 || dt[0] > nt || nt > $) && (dt[4] = I, dt[5] = nt, ot.n = $, W = 0));
          }
          if (ft || I > 1) return m;
          throw rt = true, nt;
        }
        return function(I, nt, ft) {
          if (pt > 1) throw TypeError("Generator is already running");
          for (rt && nt === 1 && X(nt, ft), W = nt, lt = ft; (f = W < 2 ? d : lt) || !rt; ) {
            B || (W ? W < 3 ? (W > 1 && (ot.n = -1), X(W, lt)) : ot.n = lt : ot.v = lt);
            try {
              if (pt = 2, B) {
                if (W || (I = "next"), f = B[I]) {
                  if (!(f = f.call(B, lt))) throw TypeError("iterator result is not an object");
                  if (!f.done) return f;
                  lt = f.value, W < 2 && (W = 0);
                } else W === 1 && (f = B.return) && f.call(B), W < 2 && (lt = TypeError("The iterator does not provide a '" + I + "' method"), W = 1);
                B = d;
              } else if ((f = (rt = ot.n < 0) ? lt : V.call(S, ot)) !== m) break;
            } catch (dt) {
              B = d, W = 1, lt = dt;
            } finally {
              pt = 1;
            }
          }
          return { value: f, done: rt };
        };
      }(F, U, M), true), D;
    }
    var m = {};
    function c() {
    }
    function w() {
    }
    function T() {
    }
    f = Object.getPrototypeOf;
    var P = [][g] ? f(f([][g]())) : (o(f = {}, g, function() {
      return this;
    }), f), k = T.prototype = c.prototype = Object.create(P);
    function R(F) {
      return Object.setPrototypeOf ? Object.setPrototypeOf(F, T) : (F.__proto__ = T, o(F, b, "GeneratorFunction")), F.prototype = Object.create(k), F;
    }
    return w.prototype = T, o(k, "constructor", T), o(T, "constructor", w), w.displayName = "GeneratorFunction", o(T, b, "GeneratorFunction"), o(k), o(k, b, "Generator"), o(k, g, function() {
      return this;
    }), o(k, "toString", function() {
      return "[object Generator]";
    }), (e = function() {
      return { w: h, m: R };
    })();
  }
  function o(d, f, p, g) {
    var b = Object.defineProperty;
    try {
      b({}, "", {});
    } catch {
      b = 0;
    }
    o = function(m, c, w, T) {
      if (c) b ? b(m, c, { value: w, enumerable: !T, configurable: !T, writable: !T }) : m[c] = w;
      else {
        let k = function(R, F) {
          o(m, R, function(v) {
            return this._invoke(R, F, v);
          });
        };
        var P = k;
        k("next", 0), k("throw", 1), k("return", 2);
      }
    }, o(d, f, p, g);
  }
  function a(d, f, p, g, b, h, m) {
    try {
      var c = d[h](m), w = c.value;
    } catch (T) {
      return void p(T);
    }
    c.done ? f(w) : Promise.resolve(w).then(g, b);
  }
  function l(d) {
    return function() {
      var f = this, p = arguments;
      return new Promise(function(g, b) {
        var h = d.apply(f, p);
        function m(w) {
          a(h, g, b, m, c, "next", w);
        }
        function c(w) {
          a(h, g, b, m, c, "throw", w);
        }
        m(void 0);
      });
    };
  }
  function s(d, f) {
    return d.hasOwnProperty(f);
  }
  function i(d, f) {
    return u.apply(this, arguments);
  }
  function u() {
    return u = l(e().m(function d(f, p) {
      var g, b, h, m = arguments;
      return e().w(function(c) {
        for (; ; ) switch (c.n) {
          case 0:
            return g = m.length > 2 && m[2] !== void 0 ? m[2] : null, c.n = 1, E.default.post(f, { jsonrpc: "2.0", id: 1, method: p, params: g });
          case 1:
            if (b = c.v, !s(b.data, "error")) {
              c.n = 2;
              break;
            }
            throw b.data.error;
          case 2:
            return c.a(2, (h = b.data) === null || h === void 0 ? void 0 : h.result);
          case 3:
            return c.a(2);
        }
      }, d);
    })), u.apply(this, arguments);
  }
  return Yc;
}
var Zc = {}, Za = {}, Kp;
function lp() {
  if (Kp) return Za;
  Kp = 1, Object.defineProperty(Za, "__esModule", { value: true }), Za.parseRawEvents = p, Za.parseRawLedgerEntries = g, Za.parseRawSendTransaction = u, Za.parseRawSimulation = h, Za.parseRawTransactions = f, Za.parseTransactionInfo = d;
  var E = ps(), t = Bu();
  function e(m) {
    "@babel/helpers - typeof";
    return e = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(c) {
      return typeof c;
    } : function(c) {
      return c && typeof Symbol == "function" && c.constructor === Symbol && c !== Symbol.prototype ? "symbol" : typeof c;
    }, e(m);
  }
  function o(m, c) {
    var w = Object.keys(m);
    if (Object.getOwnPropertySymbols) {
      var T = Object.getOwnPropertySymbols(m);
      c && (T = T.filter(function(P) {
        return Object.getOwnPropertyDescriptor(m, P).enumerable;
      })), w.push.apply(w, T);
    }
    return w;
  }
  function a(m) {
    for (var c = 1; c < arguments.length; c++) {
      var w = arguments[c] != null ? arguments[c] : {};
      c % 2 ? o(Object(w), true).forEach(function(T) {
        l(m, T, w[T]);
      }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(m, Object.getOwnPropertyDescriptors(w)) : o(Object(w)).forEach(function(T) {
        Object.defineProperty(m, T, Object.getOwnPropertyDescriptor(w, T));
      });
    }
    return m;
  }
  function l(m, c, w) {
    return (c = s(c)) in m ? Object.defineProperty(m, c, { value: w, enumerable: true, configurable: true, writable: true }) : m[c] = w, m;
  }
  function s(m) {
    var c = i(m, "string");
    return e(c) == "symbol" ? c : c + "";
  }
  function i(m, c) {
    if (e(m) != "object" || !m) return m;
    var w = m[Symbol.toPrimitive];
    if (w !== void 0) {
      var T = w.call(m, c);
      if (e(T) != "object") return T;
      throw new TypeError("@@toPrimitive must return a primitive value.");
    }
    return (c === "string" ? String : Number)(m);
  }
  function u(m) {
    var c = m.errorResultXdr, w = m.diagnosticEventsXdr;
    return delete m.errorResultXdr, delete m.diagnosticEventsXdr, c ? a(a(a({}, m), w !== void 0 && w.length > 0 && { diagnosticEvents: w.map(function(T) {
      return E.xdr.DiagnosticEvent.fromXDR(T, "base64");
    }) }), {}, { errorResult: E.xdr.TransactionResult.fromXDR(c, "base64") }) : a({}, m);
  }
  function d(m) {
    var c, w, T, P, k = E.xdr.TransactionMeta.fromXDR(m.resultMetaXdr, "base64"), R = { ledger: m.ledger, createdAt: m.createdAt, applicationOrder: m.applicationOrder, feeBump: m.feeBump, envelopeXdr: E.xdr.TransactionEnvelope.fromXDR(m.envelopeXdr, "base64"), resultXdr: E.xdr.TransactionResult.fromXDR(m.resultXdr, "base64"), resultMetaXdr: k, events: { contractEventsXdr: ((c = (w = m.events) === null || w === void 0 ? void 0 : w.contractEventsXdr) !== null && c !== void 0 ? c : []).map(function(M) {
      return M.map(function(Z) {
        return E.xdr.ContractEvent.fromXDR(Z, "base64");
      });
    }), transactionEventsXdr: ((T = (P = m.events) === null || P === void 0 ? void 0 : P.transactionEventsXdr) !== null && T !== void 0 ? T : []).map(function(M) {
      return E.xdr.TransactionEvent.fromXDR(M, "base64");
    }) } };
    switch (k.switch()) {
      case 3:
      case 4:
        var F = k.value();
        if (F.sorobanMeta() !== null) {
          var v, U;
          R.returnValue = (v = (U = F.sorobanMeta()) === null || U === void 0 ? void 0 : U.returnValue()) !== null && v !== void 0 ? v : void 0;
        }
    }
    return m.diagnosticEventsXdr && (R.diagnosticEventsXdr = m.diagnosticEventsXdr.map(function(M) {
      return E.xdr.DiagnosticEvent.fromXDR(M, "base64");
    })), R;
  }
  function f(m) {
    return a({ status: m.status, txHash: m.txHash }, d(m));
  }
  function p(m) {
    var c;
    return { latestLedger: m.latestLedger, oldestLedger: m.oldestLedger, latestLedgerCloseTime: m.latestLedgerCloseTime, oldestLedgerCloseTime: m.oldestLedgerCloseTime, cursor: m.cursor, events: ((c = m.events) !== null && c !== void 0 ? c : []).map(function(w) {
      var T = a({}, w);
      return delete T.contractId, a(a(a({}, T), w.contractId !== "" && { contractId: new E.Contract(w.contractId) }), {}, { topic: w.topic.map(function(P) {
        return E.xdr.ScVal.fromXDR(P, "base64");
      }), value: E.xdr.ScVal.fromXDR(w.value, "base64") });
    }) };
  }
  function g(m) {
    var c;
    return { latestLedger: m.latestLedger, entries: ((c = m.entries) !== null && c !== void 0 ? c : []).map(function(w) {
      if (!w.key || !w.xdr) throw new TypeError("invalid ledger entry: ".concat(JSON.stringify(w)));
      return a({ lastModifiedLedgerSeq: w.lastModifiedLedgerSeq, key: E.xdr.LedgerKey.fromXDR(w.key, "base64"), val: E.xdr.LedgerEntryData.fromXDR(w.xdr, "base64") }, w.liveUntilLedgerSeq !== void 0 && { liveUntilLedgerSeq: w.liveUntilLedgerSeq });
    }) };
  }
  function b(m, c) {
    var w, T, P, k, R, F = a(a(a({}, c), {}, { transactionData: new E.SorobanDataBuilder(m.transactionData), minResourceFee: m.minResourceFee }, ((w = (T = m.results) === null || T === void 0 ? void 0 : T.length) !== null && w !== void 0 ? w : false) && { result: m.results.map(function(v) {
      var U;
      return { auth: ((U = v.auth) !== null && U !== void 0 ? U : []).map(function(M) {
        return E.xdr.SorobanAuthorizationEntry.fromXDR(M, "base64");
      }), retval: v.xdr ? E.xdr.ScVal.fromXDR(v.xdr, "base64") : E.xdr.ScVal.scvVoid() };
    })[0] }), ((P = (k = m.stateChanges) === null || k === void 0 ? void 0 : k.length) !== null && P !== void 0 ? P : false) && { stateChanges: (R = m.stateChanges) === null || R === void 0 ? void 0 : R.map(function(v) {
      return { type: v.type, key: E.xdr.LedgerKey.fromXDR(v.key, "base64"), before: v.before ? E.xdr.LedgerEntry.fromXDR(v.before, "base64") : null, after: v.after ? E.xdr.LedgerEntry.fromXDR(v.after, "base64") : null };
    }) });
    return !m.restorePreamble || m.restorePreamble.transactionData === "" ? F : a(a({}, F), {}, { restorePreamble: { minResourceFee: m.restorePreamble.minResourceFee, transactionData: new E.SorobanDataBuilder(m.restorePreamble.transactionData) } });
  }
  function h(m) {
    var c, w, T = t.Api.isSimulationRaw(m);
    if (!T) return m;
    var P = { _parsed: true, id: m.id, latestLedger: m.latestLedger, events: (c = (w = m.events) === null || w === void 0 ? void 0 : w.map(function(k) {
      return E.xdr.DiagnosticEvent.fromXDR(k, "base64");
    })) !== null && c !== void 0 ? c : [] };
    return typeof m.error == "string" ? a(a({}, P), {}, { error: m.error }) : b(m, P);
  }
  return Za;
}
var $p;
function fp() {
  if ($p) return Zc;
  $p = 1, Object.defineProperty(Zc, "__esModule", { value: true }), Zc.assembleTransaction = a;
  var E = ps(), t = Bu(), e = lp();
  function o(l) {
    if (l.operations.length !== 1) return false;
    switch (l.operations[0].type) {
      case "invokeHostFunction":
      case "extendFootprintTtl":
      case "restoreFootprint":
        return true;
      default:
        return false;
    }
  }
  function a(l, s) {
    if ("innerTransaction" in l) return a(l.innerTransaction, s);
    if (!o(l)) throw new TypeError("unsupported transaction: must contain exactly one invokeHostFunction, extendFootprintTtl, or restoreFootprint operation");
    var i = (0, e.parseRawSimulation)(s);
    if (!t.Api.isSimulationSuccess(i)) throw new Error("simulation incorrect: ".concat(JSON.stringify(i)));
    var u = parseInt(l.fee) || 0, d = parseInt(i.minResourceFee) || 0, f = E.TransactionBuilder.cloneFrom(l, { fee: (u + d).toString(), sorobanData: i.transactionData.build(), networkPassphrase: l.networkPassphrase });
    if (l.operations[0].type === "invokeHostFunction") {
      var p;
      f.clearOperations();
      var g = l.operations[0], b = (p = g.auth) !== null && p !== void 0 ? p : [];
      f.addOperation(E.Operation.invokeHostFunction({ source: g.source, func: g.func, auth: b.length > 0 ? b : i.result.auth }));
    }
    return f;
  }
  return Zc;
}
var nc = {}, Yp;
function Dm() {
  if (Yp) return nc;
  Yp = 1, Object.defineProperty(nc, "__esModule", { value: true }), nc.Utils = void 0;
  function E(s) {
    "@babel/helpers - typeof";
    return E = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(i) {
      return typeof i;
    } : function(i) {
      return i && typeof Symbol == "function" && i.constructor === Symbol && i !== Symbol.prototype ? "symbol" : typeof i;
    }, E(s);
  }
  function t(s, i) {
    if (!(s instanceof i)) throw new TypeError("Cannot call a class as a function");
  }
  function e(s, i) {
    for (var u = 0; u < i.length; u++) {
      var d = i[u];
      d.enumerable = d.enumerable || false, d.configurable = true, "value" in d && (d.writable = true), Object.defineProperty(s, a(d.key), d);
    }
  }
  function o(s, i, u) {
    return u && e(s, u), Object.defineProperty(s, "prototype", { writable: false }), s;
  }
  function a(s) {
    var i = l(s, "string");
    return E(i) == "symbol" ? i : i + "";
  }
  function l(s, i) {
    if (E(s) != "object" || !s) return s;
    var u = s[Symbol.toPrimitive];
    if (u !== void 0) {
      var d = u.call(s, i);
      if (E(d) != "object") return d;
      throw new TypeError("@@toPrimitive must return a primitive value.");
    }
    return String(s);
  }
  return nc.Utils = function() {
    function s() {
      t(this, s);
    }
    return o(s, null, [{ key: "validateTimebounds", value: function(u) {
      var d = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : 0;
      if (!u.timeBounds) return false;
      var f = Math.floor(Date.now() / 1e3), p = u.timeBounds, g = p.minTime, b = p.maxTime;
      return f >= Number.parseInt(g, 10) - d && f <= Number.parseInt(b, 10) + d;
    } }, { key: "sleep", value: function(u) {
      return new Promise(function(d) {
        return setTimeout(d, u);
      });
    } }]);
  }(), nc;
}
var Zp;
function Fm() {
  if (Zp) return oa;
  Zp = 1, Object.defineProperty(oa, "__esModule", { value: true }), oa.SUBMIT_TRANSACTION_TIMEOUT = oa.RpcServer = oa.LinearSleepStrategy = oa.Durability = oa.BasicSleepStrategy = void 0;
  var E = d(Rm()), t = ps(), e = d(cp()), o = u(Nm()), a = Bu(), l = fp(), s = lp(), i = Dm();
  function u(D, V) {
    if (typeof WeakMap == "function") var S = /* @__PURE__ */ new WeakMap(), x = /* @__PURE__ */ new WeakMap();
    return (u = function(W, lt) {
      if (!lt && W && W.__esModule) return W;
      var pt, at, rt = { __proto__: null, default: W };
      if (W === null || f(W) != "object" && typeof W != "function") return rt;
      if (pt = lt ? x : S) {
        if (pt.has(W)) return pt.get(W);
        pt.set(W, rt);
      }
      for (var ot in W) ot !== "default" && {}.hasOwnProperty.call(W, ot) && ((at = (pt = Object.defineProperty) && Object.getOwnPropertyDescriptor(W, ot)) && (at.get || at.set) ? pt(rt, ot, at) : rt[ot] = W[ot]);
      return rt;
    })(D, V);
  }
  function d(D) {
    return D && D.__esModule ? D : { default: D };
  }
  function f(D) {
    "@babel/helpers - typeof";
    return f = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(V) {
      return typeof V;
    } : function(V) {
      return V && typeof Symbol == "function" && V.constructor === Symbol && V !== Symbol.prototype ? "symbol" : typeof V;
    }, f(D);
  }
  function p(D, V) {
    var S = Object.keys(D);
    if (Object.getOwnPropertySymbols) {
      var x = Object.getOwnPropertySymbols(D);
      V && (x = x.filter(function(B) {
        return Object.getOwnPropertyDescriptor(D, B).enumerable;
      })), S.push.apply(S, x);
    }
    return S;
  }
  function g(D) {
    for (var V = 1; V < arguments.length; V++) {
      var S = arguments[V] != null ? arguments[V] : {};
      V % 2 ? p(Object(S), true).forEach(function(x) {
        b(D, x, S[x]);
      }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(D, Object.getOwnPropertyDescriptors(S)) : p(Object(S)).forEach(function(x) {
        Object.defineProperty(D, x, Object.getOwnPropertyDescriptor(S, x));
      });
    }
    return D;
  }
  function b(D, V, S) {
    return (V = R(V)) in D ? Object.defineProperty(D, V, { value: S, enumerable: true, configurable: true, writable: true }) : D[V] = S, D;
  }
  function h() {
    var D, V, S = typeof Symbol == "function" ? Symbol : {}, x = S.iterator || "@@iterator", B = S.toStringTag || "@@toStringTag";
    function W(nt, ft, dt, Lt) {
      var $ = ft && ft.prototype instanceof pt ? ft : pt, it = Object.create($.prototype);
      return m(it, "_invoke", function(mt, Ot, bt) {
        var xt, Ct, Tt, Bt = 0, At = bt || [], Ut = false, Vt = { p: 0, n: 0, v: D, a: oe, f: oe.bind(D, 4), d: function(yt, Mt) {
          return xt = yt, Ct = 0, Tt = D, Vt.n = Mt, lt;
        } };
        function oe(te, yt) {
          for (Ct = te, Tt = yt, V = 0; !Ut && Bt && !Mt && V < At.length; V++) {
            var Mt, O = At[V], z = Vt.p, J = O[2];
            te > 3 ? (Mt = J === yt) && (Tt = O[(Ct = O[4]) ? 5 : (Ct = 3, 3)], O[4] = O[5] = D) : O[0] <= z && ((Mt = te < 2 && z < O[1]) ? (Ct = 0, Vt.v = yt, Vt.n = O[1]) : z < J && (Mt = te < 3 || O[0] > yt || yt > J) && (O[4] = te, O[5] = yt, Vt.n = J, Ct = 0));
          }
          if (Mt || te > 1) return lt;
          throw Ut = true, yt;
        }
        return function(te, yt, Mt) {
          if (Bt > 1) throw TypeError("Generator is already running");
          for (Ut && yt === 1 && oe(yt, Mt), Ct = yt, Tt = Mt; (V = Ct < 2 ? D : Tt) || !Ut; ) {
            xt || (Ct ? Ct < 3 ? (Ct > 1 && (Vt.n = -1), oe(Ct, Tt)) : Vt.n = Tt : Vt.v = Tt);
            try {
              if (Bt = 2, xt) {
                if (Ct || (te = "next"), V = xt[te]) {
                  if (!(V = V.call(xt, Tt))) throw TypeError("iterator result is not an object");
                  if (!V.done) return V;
                  Tt = V.value, Ct < 2 && (Ct = 0);
                } else Ct === 1 && (V = xt.return) && V.call(xt), Ct < 2 && (Tt = TypeError("The iterator does not provide a '" + te + "' method"), Ct = 1);
                xt = D;
              } else if ((V = (Ut = Vt.n < 0) ? Tt : mt.call(Ot, Vt)) !== lt) break;
            } catch (O) {
              xt = D, Ct = 1, Tt = O;
            } finally {
              Bt = 1;
            }
          }
          return { value: V, done: Ut };
        };
      }(nt, dt, Lt), true), it;
    }
    var lt = {};
    function pt() {
    }
    function at() {
    }
    function rt() {
    }
    V = Object.getPrototypeOf;
    var ot = [][x] ? V(V([][x]())) : (m(V = {}, x, function() {
      return this;
    }), V), X = rt.prototype = pt.prototype = Object.create(ot);
    function I(nt) {
      return Object.setPrototypeOf ? Object.setPrototypeOf(nt, rt) : (nt.__proto__ = rt, m(nt, B, "GeneratorFunction")), nt.prototype = Object.create(X), nt;
    }
    return at.prototype = rt, m(X, "constructor", rt), m(rt, "constructor", at), at.displayName = "GeneratorFunction", m(rt, B, "GeneratorFunction"), m(X), m(X, B, "Generator"), m(X, x, function() {
      return this;
    }), m(X, "toString", function() {
      return "[object Generator]";
    }), (h = function() {
      return { w: W, m: I };
    })();
  }
  function m(D, V, S, x) {
    var B = Object.defineProperty;
    try {
      B({}, "", {});
    } catch {
      B = 0;
    }
    m = function(lt, pt, at, rt) {
      if (pt) B ? B(lt, pt, { value: at, enumerable: !rt, configurable: !rt, writable: !rt }) : lt[pt] = at;
      else {
        let X = function(I, nt) {
          m(lt, I, function(ft) {
            return this._invoke(I, nt, ft);
          });
        };
        var ot = X;
        X("next", 0), X("throw", 1), X("return", 2);
      }
    }, m(D, V, S, x);
  }
  function c(D, V, S, x, B, W, lt) {
    try {
      var pt = D[W](lt), at = pt.value;
    } catch (rt) {
      return void S(rt);
    }
    pt.done ? V(at) : Promise.resolve(at).then(x, B);
  }
  function w(D) {
    return function() {
      var V = this, S = arguments;
      return new Promise(function(x, B) {
        var W = D.apply(V, S);
        function lt(at) {
          c(W, x, B, lt, pt, "next", at);
        }
        function pt(at) {
          c(W, x, B, lt, pt, "throw", at);
        }
        lt(void 0);
      });
    };
  }
  function T(D, V) {
    if (!(D instanceof V)) throw new TypeError("Cannot call a class as a function");
  }
  function P(D, V) {
    for (var S = 0; S < V.length; S++) {
      var x = V[S];
      x.enumerable = x.enumerable || false, x.configurable = true, "value" in x && (x.writable = true), Object.defineProperty(D, R(x.key), x);
    }
  }
  function k(D, V, S) {
    return V && P(D.prototype, V), Object.defineProperty(D, "prototype", { writable: false }), D;
  }
  function R(D) {
    var V = F(D, "string");
    return f(V) == "symbol" ? V : V + "";
  }
  function F(D, V) {
    if (f(D) != "object" || !D) return D;
    var S = D[Symbol.toPrimitive];
    if (S !== void 0) {
      var x = S.call(D, V);
      if (f(x) != "object") return x;
      throw new TypeError("@@toPrimitive must return a primitive value.");
    }
    return (V === "string" ? String : Number)(D);
  }
  oa.SUBMIT_TRANSACTION_TIMEOUT = 60 * 1e3;
  var v = oa.Durability = function(D) {
    return D.Temporary = "temporary", D.Persistent = "persistent", D;
  }({}), U = 30, M = oa.BasicSleepStrategy = function(V) {
    return 1e3;
  };
  oa.LinearSleepStrategy = function(V) {
    return 1e3 * V;
  };
  function Z(D) {
    var V, S = [];
    switch (D.switch()) {
      case 0:
        S = D.operations();
        break;
      case 1:
      case 2:
      case 3:
      case 4:
        S = D.value().operations();
        break;
      default:
        throw new Error("Unexpected transaction meta switch value");
    }
    var x = (V = S.flatMap(function(B) {
      return B.changes();
    }).find(function(B) {
      return B.switch() === t.xdr.LedgerEntryChangeType.ledgerEntryCreated() && B.created().data().switch() === t.xdr.LedgerEntryType.account();
    })) === null || V === void 0 || (V = V.created()) === null || V === void 0 || (V = V.data()) === null || V === void 0 || (V = V.account()) === null || V === void 0 || (V = V.seqNum()) === null || V === void 0 ? void 0 : V.toString();
    if (x) return x;
    throw new Error("No account created in transaction");
  }
  return oa.RpcServer = function() {
    function D(V) {
      var S = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};
      if (T(this, D), this.serverURL = (0, E.default)(V), S.headers && Object.keys(S.headers).length !== 0 && e.default.interceptors.request.use(function(x) {
        return x.headers = Object.assign(x.headers, S.headers), x;
      }), this.serverURL.protocol() !== "https" && !S.allowHttp) throw new Error("Cannot connect to insecure Soroban RPC server if `allowHttp` isn't set");
    }
    return k(D, [{ key: "getAccount", value: function() {
      var V = w(h().m(function x(B) {
        var W, lt, pt;
        return h().w(function(at) {
          for (; ; ) switch (at.n) {
            case 0:
              return W = t.xdr.LedgerKey.account(new t.xdr.LedgerKeyAccount({ accountId: t.Keypair.fromPublicKey(B).xdrPublicKey() })), at.n = 1, this.getLedgerEntries(W);
            case 1:
              if (lt = at.v, lt.entries.length !== 0) {
                at.n = 2;
                break;
              }
              return at.a(2, Promise.reject({ code: 404, message: "Account not found: ".concat(B) }));
            case 2:
              return pt = lt.entries[0].val.account(), at.a(2, new t.Account(B, pt.seqNum().toString()));
          }
        }, x, this);
      }));
      function S(x) {
        return V.apply(this, arguments);
      }
      return S;
    }() }, { key: "getHealth", value: function() {
      var V = w(h().m(function x() {
        return h().w(function(B) {
          for (; ; ) switch (B.n) {
            case 0:
              return B.a(2, o.postObject(this.serverURL.toString(), "getHealth"));
          }
        }, x, this);
      }));
      function S() {
        return V.apply(this, arguments);
      }
      return S;
    }() }, { key: "getContractData", value: function() {
      var V = w(h().m(function x(B, W) {
        var lt, pt, at, rt, ot = arguments, X;
        return h().w(function(I) {
          for (; ; ) switch (I.n) {
            case 0:
              if (lt = ot.length > 2 && ot[2] !== void 0 ? ot[2] : v.Persistent, typeof B != "string") {
                I.n = 1;
                break;
              }
              pt = new t.Contract(B).address().toScAddress(), I.n = 4;
              break;
            case 1:
              if (!(B instanceof t.Address)) {
                I.n = 2;
                break;
              }
              pt = B.toScAddress(), I.n = 4;
              break;
            case 2:
              if (!(B instanceof t.Contract)) {
                I.n = 3;
                break;
              }
              pt = B.address().toScAddress(), I.n = 4;
              break;
            case 3:
              throw new TypeError("unknown contract type: ".concat(B));
            case 4:
              X = lt, I.n = X === v.Temporary ? 5 : X === v.Persistent ? 6 : 7;
              break;
            case 5:
              return at = t.xdr.ContractDataDurability.temporary(), I.a(3, 8);
            case 6:
              return at = t.xdr.ContractDataDurability.persistent(), I.a(3, 8);
            case 7:
              throw new TypeError("invalid durability: ".concat(lt));
            case 8:
              return rt = t.xdr.LedgerKey.contractData(new t.xdr.LedgerKeyContractData({ key: W, contract: pt, durability: at })), I.a(2, this.getLedgerEntries(rt).then(function(nt) {
                return nt.entries.length === 0 ? Promise.reject({ code: 404, message: "Contract data not found. Contract: ".concat(t.Address.fromScAddress(pt).toString(), ", Key: ").concat(W.toXDR("base64"), ", Durability: ").concat(lt) }) : nt.entries[0];
              }));
          }
        }, x, this);
      }));
      function S(x, B) {
        return V.apply(this, arguments);
      }
      return S;
    }() }, { key: "getContractWasmByContractId", value: function() {
      var V = w(h().m(function x(B) {
        var W, lt, pt, at;
        return h().w(function(rt) {
          for (; ; ) switch (rt.n) {
            case 0:
              return lt = new t.Contract(B).getFootprint(), rt.n = 1, this.getLedgerEntries(lt);
            case 1:
              if (pt = rt.v, !(!pt.entries.length || !((W = pt.entries[0]) !== null && W !== void 0 && W.val))) {
                rt.n = 2;
                break;
              }
              return rt.a(2, Promise.reject({ code: 404, message: "Could not obtain contract hash from server" }));
            case 2:
              return at = pt.entries[0].val.contractData().val().instance().executable().wasmHash(), rt.a(2, this.getContractWasmByHash(at));
          }
        }, x, this);
      }));
      function S(x) {
        return V.apply(this, arguments);
      }
      return S;
    }() }, { key: "getContractWasmByHash", value: function() {
      var V = w(h().m(function x(B) {
        var W, lt, pt, at, rt, ot, X = arguments;
        return h().w(function(I) {
          for (; ; ) switch (I.n) {
            case 0:
              return lt = X.length > 1 && X[1] !== void 0 ? X[1] : void 0, pt = typeof B == "string" ? Buffer.from(B, lt) : B, at = t.xdr.LedgerKey.contractCode(new t.xdr.LedgerKeyContractCode({ hash: pt })), I.n = 1, this.getLedgerEntries(at);
            case 1:
              if (rt = I.v, !(!rt.entries.length || !((W = rt.entries[0]) !== null && W !== void 0 && W.val))) {
                I.n = 2;
                break;
              }
              return I.a(2, Promise.reject({ code: 404, message: "Could not obtain contract wasm from server" }));
            case 2:
              return ot = rt.entries[0].val.contractCode().code(), I.a(2, ot);
          }
        }, x, this);
      }));
      function S(x) {
        return V.apply(this, arguments);
      }
      return S;
    }() }, { key: "getLedgerEntries", value: function() {
      var V = w(h().m(function x() {
        var B = arguments;
        return h().w(function(W) {
          for (; ; ) switch (W.n) {
            case 0:
              return W.a(2, this._getLedgerEntries.apply(this, B).then(s.parseRawLedgerEntries));
          }
        }, x, this);
      }));
      function S() {
        return V.apply(this, arguments);
      }
      return S;
    }() }, { key: "_getLedgerEntries", value: function() {
      var V = w(h().m(function x() {
        var B, W, lt, pt = arguments;
        return h().w(function(at) {
          for (; ; ) switch (at.n) {
            case 0:
              for (B = pt.length, W = new Array(B), lt = 0; lt < B; lt++) W[lt] = pt[lt];
              return at.a(2, o.postObject(this.serverURL.toString(), "getLedgerEntries", { keys: W.map(function(rt) {
                return rt.toXDR("base64");
              }) }));
          }
        }, x, this);
      }));
      function S() {
        return V.apply(this, arguments);
      }
      return S;
    }() }, { key: "pollTransaction", value: function() {
      var V = w(h().m(function x(B, W) {
        var lt, pt, at, rt, ot, X;
        return h().w(function(I) {
          for (; ; ) switch (I.n) {
            case 0:
              at = ((lt = W == null ? void 0 : W.attempts) !== null && lt !== void 0 ? lt : 0) < 1 ? U : (pt = W == null ? void 0 : W.attempts) !== null && pt !== void 0 ? pt : U, ot = 1;
            case 1:
              if (!(ot < at)) {
                I.n = 5;
                break;
              }
              return I.n = 2, this.getTransaction(B);
            case 2:
              if (rt = I.v, rt.status === a.Api.GetTransactionStatus.NOT_FOUND) {
                I.n = 3;
                break;
              }
              return I.a(2, rt);
            case 3:
              return I.n = 4, i.Utils.sleep(((X = W == null ? void 0 : W.sleepStrategy) !== null && X !== void 0 ? X : M)(ot));
            case 4:
              ot++, I.n = 1;
              break;
            case 5:
              return I.a(2, rt);
          }
        }, x, this);
      }));
      function S(x, B) {
        return V.apply(this, arguments);
      }
      return S;
    }() }, { key: "getTransaction", value: function() {
      var V = w(h().m(function x(B) {
        return h().w(function(W) {
          for (; ; ) switch (W.n) {
            case 0:
              return W.a(2, this._getTransaction(B).then(function(lt) {
                var pt = {};
                lt.status !== a.Api.GetTransactionStatus.NOT_FOUND && Object.assign(pt, (0, s.parseTransactionInfo)(lt));
                var at = g({ status: lt.status, txHash: B, latestLedger: lt.latestLedger, latestLedgerCloseTime: lt.latestLedgerCloseTime, oldestLedger: lt.oldestLedger, oldestLedgerCloseTime: lt.oldestLedgerCloseTime }, pt);
                return at;
              }));
          }
        }, x, this);
      }));
      function S(x) {
        return V.apply(this, arguments);
      }
      return S;
    }() }, { key: "_getTransaction", value: function() {
      var V = w(h().m(function x(B) {
        return h().w(function(W) {
          for (; ; ) switch (W.n) {
            case 0:
              return W.a(2, o.postObject(this.serverURL.toString(), "getTransaction", { hash: B }));
          }
        }, x, this);
      }));
      function S(x) {
        return V.apply(this, arguments);
      }
      return S;
    }() }, { key: "getTransactions", value: function() {
      var V = w(h().m(function x(B) {
        return h().w(function(W) {
          for (; ; ) switch (W.n) {
            case 0:
              return W.a(2, this._getTransactions(B).then(function(lt) {
                var pt = { transactions: lt.transactions.map(s.parseRawTransactions), latestLedger: lt.latestLedger, latestLedgerCloseTimestamp: lt.latestLedgerCloseTimestamp, oldestLedger: lt.oldestLedger, oldestLedgerCloseTimestamp: lt.oldestLedgerCloseTimestamp, cursor: lt.cursor };
                return pt;
              }));
          }
        }, x, this);
      }));
      function S(x) {
        return V.apply(this, arguments);
      }
      return S;
    }() }, { key: "_getTransactions", value: function() {
      var V = w(h().m(function x(B) {
        return h().w(function(W) {
          for (; ; ) switch (W.n) {
            case 0:
              return W.a(2, o.postObject(this.serverURL.toString(), "getTransactions", B));
          }
        }, x, this);
      }));
      function S(x) {
        return V.apply(this, arguments);
      }
      return S;
    }() }, { key: "getEvents", value: function() {
      var V = w(h().m(function x(B) {
        return h().w(function(W) {
          for (; ; ) switch (W.n) {
            case 0:
              return W.a(2, this._getEvents(B).then(s.parseRawEvents));
          }
        }, x, this);
      }));
      function S(x) {
        return V.apply(this, arguments);
      }
      return S;
    }() }, { key: "_getEvents", value: function() {
      var V = w(h().m(function x(B) {
        var W;
        return h().w(function(lt) {
          for (; ; ) switch (lt.n) {
            case 0:
              return lt.a(2, o.postObject(this.serverURL.toString(), "getEvents", g(g({ filters: (W = B.filters) !== null && W !== void 0 ? W : [], pagination: g(g({}, B.cursor && { cursor: B.cursor }), B.limit && { limit: B.limit }) }, B.startLedger && { startLedger: B.startLedger }), B.endLedger && { endLedger: B.endLedger })));
          }
        }, x, this);
      }));
      function S(x) {
        return V.apply(this, arguments);
      }
      return S;
    }() }, { key: "getNetwork", value: function() {
      var V = w(h().m(function x() {
        return h().w(function(B) {
          for (; ; ) switch (B.n) {
            case 0:
              return B.a(2, o.postObject(this.serverURL.toString(), "getNetwork"));
          }
        }, x, this);
      }));
      function S() {
        return V.apply(this, arguments);
      }
      return S;
    }() }, { key: "getLatestLedger", value: function() {
      var V = w(h().m(function x() {
        return h().w(function(B) {
          for (; ; ) switch (B.n) {
            case 0:
              return B.a(2, o.postObject(this.serverURL.toString(), "getLatestLedger"));
          }
        }, x, this);
      }));
      function S() {
        return V.apply(this, arguments);
      }
      return S;
    }() }, { key: "simulateTransaction", value: function() {
      var V = w(h().m(function x(B, W, lt) {
        return h().w(function(pt) {
          for (; ; ) switch (pt.n) {
            case 0:
              return pt.a(2, this._simulateTransaction(B, W, lt).then(s.parseRawSimulation));
          }
        }, x, this);
      }));
      function S(x, B, W) {
        return V.apply(this, arguments);
      }
      return S;
    }() }, { key: "_simulateTransaction", value: function() {
      var V = w(h().m(function x(B, W, lt) {
        return h().w(function(pt) {
          for (; ; ) switch (pt.n) {
            case 0:
              return pt.a(2, o.postObject(this.serverURL.toString(), "simulateTransaction", g({ transaction: B.toXDR(), authMode: lt }, W !== void 0 && { resourceConfig: { instructionLeeway: W.cpuInstructions } })));
          }
        }, x, this);
      }));
      function S(x, B, W) {
        return V.apply(this, arguments);
      }
      return S;
    }() }, { key: "prepareTransaction", value: function() {
      var V = w(h().m(function x(B) {
        var W;
        return h().w(function(lt) {
          for (; ; ) switch (lt.n) {
            case 0:
              return lt.n = 1, this.simulateTransaction(B);
            case 1:
              if (W = lt.v, !a.Api.isSimulationError(W)) {
                lt.n = 2;
                break;
              }
              throw new Error(W.error);
            case 2:
              return lt.a(2, (0, l.assembleTransaction)(B, W).build());
          }
        }, x, this);
      }));
      function S(x) {
        return V.apply(this, arguments);
      }
      return S;
    }() }, { key: "sendTransaction", value: function() {
      var V = w(h().m(function x(B) {
        return h().w(function(W) {
          for (; ; ) switch (W.n) {
            case 0:
              return W.a(2, this._sendTransaction(B).then(s.parseRawSendTransaction));
          }
        }, x, this);
      }));
      function S(x) {
        return V.apply(this, arguments);
      }
      return S;
    }() }, { key: "_sendTransaction", value: function() {
      var V = w(h().m(function x(B) {
        return h().w(function(W) {
          for (; ; ) switch (W.n) {
            case 0:
              return W.a(2, o.postObject(this.serverURL.toString(), "sendTransaction", { transaction: B.toXDR() }));
          }
        }, x, this);
      }));
      function S(x) {
        return V.apply(this, arguments);
      }
      return S;
    }() }, { key: "requestAirdrop", value: function() {
      var V = w(h().m(function x(B, W) {
        var lt, pt, at, rt, ot, X, I, nt, ft;
        return h().w(function(dt) {
          for (; ; ) switch (dt.p = dt.n) {
            case 0:
              if (lt = typeof B == "string" ? B : B.accountId(), nt = W, nt) {
                dt.n = 2;
                break;
              }
              return dt.n = 1, this.getNetwork();
            case 1:
              nt = dt.v.friendbotUrl;
            case 2:
              if (W = nt, W) {
                dt.n = 3;
                break;
              }
              throw new Error("No friendbot URL configured for current network");
            case 3:
              return dt.p = 3, dt.n = 4, e.default.post("".concat(W, "?addr=").concat(encodeURIComponent(lt)));
            case 4:
              if (pt = dt.v, pt.data.result_meta_xdr) {
                dt.n = 7;
                break;
              }
              return dt.n = 5, this.getTransaction(pt.data.hash);
            case 5:
              if (rt = dt.v, rt.status === a.Api.GetTransactionStatus.SUCCESS) {
                dt.n = 6;
                break;
              }
              throw new Error("Funding account ".concat(B, " failed"));
            case 6:
              at = rt.resultMetaXdr, dt.n = 8;
              break;
            case 7:
              at = t.xdr.TransactionMeta.fromXDR(pt.data.result_meta_xdr, "base64");
            case 8:
              return ot = Z(at), dt.a(2, new t.Account(lt, ot));
            case 9:
              if (dt.p = 9, ft = dt.v, ((X = ft.response) === null || X === void 0 ? void 0 : X.status) !== 400) {
                dt.n = 10;
                break;
              }
              if (!((I = ft.response.detail) !== null && I !== void 0 && I.includes("createAccountAlreadyExist"))) {
                dt.n = 10;
                break;
              }
              return dt.a(2, this.getAccount(lt));
            case 10:
              throw ft;
            case 11:
              return dt.a(2);
          }
        }, x, this, [[3, 9]]);
      }));
      function S(x, B) {
        return V.apply(this, arguments);
      }
      return S;
    }() }, { key: "getFeeStats", value: function() {
      var V = w(h().m(function x() {
        return h().w(function(B) {
          for (; ; ) switch (B.n) {
            case 0:
              return B.a(2, o.postObject(this.serverURL.toString(), "getFeeStats"));
          }
        }, x, this);
      }));
      function S() {
        return V.apply(this, arguments);
      }
      return S;
    }() }, { key: "getVersionInfo", value: function() {
      var V = w(h().m(function x() {
        return h().w(function(B) {
          for (; ; ) switch (B.n) {
            case 0:
              return B.a(2, o.postObject(this.serverURL.toString(), "getVersionInfo"));
          }
        }, x, this);
      }));
      function S() {
        return V.apply(this, arguments);
      }
      return S;
    }() }, { key: "getSACBalance", value: function() {
      var V = w(h().m(function x(B, W, lt) {
        var pt, at, rt, ot, X, I, nt, ft, dt, Lt, $;
        return h().w(function(it) {
          for (; ; ) switch (it.n) {
            case 0:
              if (t.StrKey.isValidContract(B)) {
                it.n = 1;
                break;
              }
              throw new TypeError("expected contract ID, got ".concat(B));
            case 1:
              if (lt == null) {
                it.n = 2;
                break;
              }
              $ = lt, it.n = 4;
              break;
            case 2:
              return it.n = 3, this.getNetwork().then(function(mt) {
                return mt.passphrase;
              });
            case 3:
              $ = it.v;
            case 4:
              return pt = $, at = W.contractId(pt), rt = (0, t.nativeToScVal)(["Balance", B], { type: ["symbol", "address"] }), ot = t.xdr.LedgerKey.contractData(new t.xdr.LedgerKeyContractData({ contract: new t.Address(at).toScAddress(), durability: t.xdr.ContractDataDurability.persistent(), key: rt })), it.n = 5, this.getLedgerEntries(ot);
            case 5:
              if (X = it.v, X.entries.length !== 0) {
                it.n = 6;
                break;
              }
              return it.a(2, { latestLedger: X.latestLedger });
            case 6:
              if (I = X.entries[0], nt = I.lastModifiedLedgerSeq, ft = I.liveUntilLedgerSeq, dt = I.val, dt.switch().value === t.xdr.LedgerEntryType.contractData().value) {
                it.n = 7;
                break;
              }
              return it.a(2, { latestLedger: X.latestLedger });
            case 7:
              return Lt = (0, t.scValToNative)(dt.contractData().val()), it.a(2, { latestLedger: X.latestLedger, balanceEntry: { liveUntilLedgerSeq: ft, lastModifiedLedgerSeq: nt, amount: Lt.amount.toString(), authorized: Lt.authorized, clawback: Lt.clawback } });
          }
        }, x, this);
      }));
      function S(x, B, W) {
        return V.apply(this, arguments);
      }
      return S;
    }() }]);
  }(), oa;
}
var Qp;
function Xl() {
  return Qp || (Qp = 1, function(E, t) {
    Object.defineProperty(t, "__esModule", { value: true });
    var e = { Server: true, BasicSleepStrategy: true, LinearSleepStrategy: true, Durability: true, AxiosClient: true, parseRawSimulation: true, parseRawEvents: true };
    Object.defineProperty(t, "AxiosClient", { enumerable: true, get: function() {
      return l.default;
    } }), Object.defineProperty(t, "BasicSleepStrategy", { enumerable: true, get: function() {
      return a.BasicSleepStrategy;
    } }), Object.defineProperty(t, "Durability", { enumerable: true, get: function() {
      return a.Durability;
    } }), Object.defineProperty(t, "LinearSleepStrategy", { enumerable: true, get: function() {
      return a.LinearSleepStrategy;
    } }), Object.defineProperty(t, "Server", { enumerable: true, get: function() {
      return a.RpcServer;
    } }), t.default = void 0, Object.defineProperty(t, "parseRawEvents", { enumerable: true, get: function() {
      return s.parseRawEvents;
    } }), Object.defineProperty(t, "parseRawSimulation", { enumerable: true, get: function() {
      return s.parseRawSimulation;
    } });
    var o = Bu();
    Object.keys(o).forEach(function(d) {
      d === "default" || d === "__esModule" || Object.prototype.hasOwnProperty.call(e, d) || d in t && t[d] === o[d] || Object.defineProperty(t, d, { enumerable: true, get: function() {
        return o[d];
      } });
    });
    var a = Fm(), l = u(cp()), s = lp(), i = fp();
    Object.keys(i).forEach(function(d) {
      d === "default" || d === "__esModule" || Object.prototype.hasOwnProperty.call(e, d) || d in t && t[d] === i[d] || Object.defineProperty(t, d, { enumerable: true, get: function() {
        return i[d];
      } });
    });
    function u(d) {
      return d && d.__esModule ? d : { default: d };
    }
    t.default = E.exports;
  }($c, $c.exports)), $c.exports;
}
var Da = Xl(), Ml = { exports: {} }, Um = Ml.exports, Jp;
function jm() {
  return Jp || (Jp = 1, function(E, t) {
    (function(e, o) {
      E.exports = o();
    })(Um, () => (() => {
      var e, o, a = { d: (M, Z) => {
        for (var D in Z) a.o(Z, D) && !a.o(M, D) && Object.defineProperty(M, D, { enumerable: true, get: Z[D] });
      }, o: (M, Z) => Object.prototype.hasOwnProperty.call(M, Z), r: (M) => {
        typeof Symbol < "u" && Symbol.toStringTag && Object.defineProperty(M, Symbol.toStringTag, { value: "Module" }), Object.defineProperty(M, "__esModule", { value: true });
      } }, l = {};
      a.r(l), a.d(l, { WatchWalletChanges: () => F, addToken: () => g, default: () => U, getAddress: () => p, getNetwork: () => w, getNetworkDetails: () => T, isAllowed: () => P, isBrowser: () => v, isConnected: () => c, requestAccess: () => R, setAllowed: () => k, signAuthEntry: () => m, signMessage: () => h, signTransaction: () => b }), function(M) {
        M.CREATE_ACCOUNT = "CREATE_ACCOUNT", M.FUND_ACCOUNT = "FUND_ACCOUNT", M.ADD_ACCOUNT = "ADD_ACCOUNT", M.IMPORT_ACCOUNT = "IMPORT_ACCOUNT", M.IMPORT_HARDWARE_WALLET = "IMPORT_HARDWARE_WALLET", M.LOAD_ACCOUNT = "LOAD_ACCOUNT", M.MAKE_ACCOUNT_ACTIVE = "MAKE_ACCOUNT_ACTIVE", M.UPDATE_ACCOUNT_NAME = "UPDATE_ACCOUNT_NAME", M.GET_MNEMONIC_PHRASE = "GET_MNEMONIC_PHRASE", M.CONFIRM_MNEMONIC_PHRASE = "CONFIRM_MNEMONIC_PHRASE", M.CONFIRM_MIGRATED_MNEMONIC_PHRASE = "CONFIRM_MIGRATED_MNEMONIC_PHRASE", M.RECOVER_ACCOUNT = "RECOVER_ACCOUNT", M.CONFIRM_PASSWORD = "CONFIRM_PASSWORD", M.REJECT_ACCESS = "REJECT_ACCESS", M.GRANT_ACCESS = "GRANT_ACCESS", M.ADD_TOKEN = "ADD_TOKEN", M.SIGN_TRANSACTION = "SIGN_TRANSACTION", M.SIGN_BLOB = "SIGN_BLOB", M.SIGN_AUTH_ENTRY = "SIGN_AUTH_ENTRY", M.HANDLE_SIGNED_HW_PAYLOAD = "HANDLE_SIGNED_HW_PAYLOAD", M.REJECT_TRANSACTION = "REJECT_TRANSACTION", M.SIGN_FREIGHTER_TRANSACTION = "SIGN_FREIGHTER_TRANSACTION", M.SIGN_FREIGHTER_SOROBAN_TRANSACTION = "SIGN_FREIGHTER_SOROBAN_TRANSACTION", M.ADD_RECENT_ADDRESS = "ADD_RECENT_ADDRESS", M.LOAD_RECENT_ADDRESSES = "LOAD_RECENT_ADDRESSES", M.LOAD_LAST_USED_ACCOUNT = "LOAD_LAST_USED_ACCOUNT", M.SIGN_OUT = "SIGN_OUT", M.SHOW_BACKUP_PHRASE = "SHOW_BACKUP_PHRASE", M.SAVE_ALLOWLIST = "SAVE_ALLOWLIST", M.SAVE_SETTINGS = "SAVE_SETTINGS", M.SAVE_EXPERIMENTAL_FEATURES = "SAVE_EXPERIMENTAL_FEATURES", M.LOAD_SETTINGS = "LOAD_SETTINGS", M.GET_CACHED_ASSET_ICON = "GET_CACHED_ASSET_ICON", M.CACHE_ASSET_ICON = "CACHE_ASSET_ICON", M.GET_CACHED_ASSET_DOMAIN = "GET_CACHED_ASSET_DOMAIN", M.CACHE_ASSET_DOMAIN = "CACHE_ASSET_DOMAIN", M.GET_MEMO_REQUIRED_ACCOUNTS = "GET_MEMO_REQUIRED_ACCOUNTS", M.ADD_CUSTOM_NETWORK = "ADD_CUSTOM_NETWORK", M.CHANGE_NETWORK = "CHANGE_NETWORK", M.REMOVE_CUSTOM_NETWORK = "REMOVE_CUSTOM_NETWORK", M.EDIT_CUSTOM_NETWORK = "EDIT_CUSTOM_NETWORK", M.RESET_EXP_DATA = "RESET_EXP_DATA", M.ADD_TOKEN_ID = "ADD_TOKEN_ID", M.GET_TOKEN_IDS = "GET_TOKEN_IDS", M.REMOVE_TOKEN_ID = "REMOVE_TOKEN_ID", M.GET_MIGRATABLE_ACCOUNTS = "GET_MIGRATABLE_ACCOUNTS", M.GET_MIGRATED_MNEMONIC_PHRASE = "GET_MIGRATED_MNEMONIC_PHRASE", M.MIGRATE_ACCOUNTS = "MIGRATE_ACCOUNTS", M.ADD_ASSETS_LIST = "ADD_ASSETS_LIST", M.MODIFY_ASSETS_LIST = "MODIFY_ASSETS_LIST";
      }(e || (e = {})), function(M) {
        M.REQUEST_ACCESS = "REQUEST_ACCESS", M.REQUEST_PUBLIC_KEY = "REQUEST_PUBLIC_KEY", M.SUBMIT_TOKEN = "SUBMIT_TOKEN", M.SUBMIT_TRANSACTION = "SUBMIT_TRANSACTION", M.SUBMIT_BLOB = "SUBMIT_BLOB", M.SUBMIT_AUTH_ENTRY = "SUBMIT_AUTH_ENTRY", M.REQUEST_NETWORK = "REQUEST_NETWORK", M.REQUEST_NETWORK_DETAILS = "REQUEST_NETWORK_DETAILS", M.REQUEST_CONNECTION_STATUS = "REQUEST_CONNECTION_STATUS", M.REQUEST_ALLOWED_STATUS = "REQUEST_ALLOWED_STATUS", M.SET_ALLOWED_STATUS = "SET_ALLOWED_STATUS", M.REQUEST_USER_INFO = "REQUEST_USER_INFO";
      }(o || (o = {}));
      const s = (M) => {
        const Z = Date.now() + Math.random();
        return window.postMessage({ source: "FREIGHTER_EXTERNAL_MSG_REQUEST", messageId: Z, ...M }, window.location.origin), new Promise((D) => {
          let V = 0;
          M.type !== o.REQUEST_CONNECTION_STATUS && M.type !== o.REQUEST_PUBLIC_KEY || (V = setTimeout(() => {
            D({ isConnected: false, publicKey: "" }), window.removeEventListener("message", S);
          }, 2e3));
          const S = (x) => {
            var B, W;
            x.source === window && ((B = x == null ? void 0 : x.data) === null || B === void 0 ? void 0 : B.source) === "FREIGHTER_EXTERNAL_MSG_RESPONSE" && ((W = x == null ? void 0 : x.data) === null || W === void 0 ? void 0 : W.messagedId) === Z && (D(x.data), window.removeEventListener("message", S), clearTimeout(V));
          };
          window.addEventListener("message", S, false);
        });
      }, i = { code: -1, message: "Node environment is not supported" }, u = { code: -1, message: "The wallet encountered an internal error. Please try again or contact the wallet if the problem persists." }, d = async () => {
        let M;
        try {
          M = await s({ type: o.REQUEST_PUBLIC_KEY });
        } catch (Z) {
          console.error(Z);
        }
        return { publicKey: (M == null ? void 0 : M.publicKey) || "", error: M == null ? void 0 : M.apiError };
      }, f = async () => {
        let M;
        try {
          M = await s({ type: o.REQUEST_NETWORK_DETAILS });
        } catch (W) {
          console.error(W);
        }
        const { networkDetails: Z, apiError: D } = M || { networkDetails: { network: "", networkUrl: "", networkPassphrase: "", sorobanRpcUrl: void 0 } }, { network: V, networkUrl: S, networkPassphrase: x, sorobanRpcUrl: B } = Z;
        return { network: V, networkUrl: S, networkPassphrase: x, sorobanRpcUrl: B, error: D };
      }, p = async () => {
        let M = "";
        if (v) {
          const Z = await d();
          return M = Z.publicKey, Z.error ? { address: M, error: Z.error } : { address: M };
        }
        return { address: M, error: i };
      }, g = async (M) => {
        if (v) {
          const Z = await (async (D) => {
            let V;
            try {
              V = await s({ contractId: D.contractId, networkPassphrase: D.networkPassphrase, type: o.SUBMIT_TOKEN });
            } catch {
              return { error: u };
            }
            return { contractId: V.contractId, error: V == null ? void 0 : V.apiError };
          })(M);
          return Z.error ? { contractId: "", error: Z.error } : { contractId: Z.contractId || "" };
        }
        return { contractId: "", error: i };
      }, b = async (M, Z) => {
        if (v) {
          const D = await (async (V, S) => {
            let x, B, W, lt;
            typeof S == "object" ? (B = S.accountToSign, W = S.networkPassphrase) : (x = S, B = void 0);
            try {
              lt = await s({ transactionXdr: V, network: x, networkPassphrase: W, accountToSign: B, type: o.SUBMIT_TRANSACTION });
            } catch {
              return { signedTransaction: "", signerAddress: "", error: u };
            }
            const { signedTransaction: pt, signerAddress: at } = lt;
            return { signedTransaction: pt, signerAddress: at, error: lt == null ? void 0 : lt.apiError };
          })(M, Z);
          return D.error ? { signedTxXdr: "", signerAddress: "", error: D.error } : { signedTxXdr: D.signedTransaction, signerAddress: D.signerAddress };
        }
        return { signedTxXdr: "", signerAddress: "", error: i };
      }, h = async (M, Z) => {
        if (v) {
          const D = await (async (V, S, x) => {
            let B;
            const W = (x || {}).address;
            try {
              B = await s({ blob: V, accountToSign: W, apiVersion: S, type: o.SUBMIT_BLOB });
            } catch {
              return { signedMessage: null, signerAddress: "", error: u };
            }
            const { signedBlob: lt, signerAddress: pt } = B;
            return { signedMessage: lt || null, signerAddress: pt, error: B == null ? void 0 : B.apiError };
          })(M, "4.1.0", Z);
          return D.error ? { signedMessage: null, signerAddress: "", error: D.error } : { signedMessage: D.signedMessage, signerAddress: D.signerAddress };
        }
        return { signedMessage: null, signerAddress: "", error: i };
      }, m = async (M, Z) => {
        if (v) {
          const D = await (async (V, S) => {
            const x = (S || {}).address;
            let B;
            try {
              B = await s({ entryXdr: V, accountToSign: x, networkPassphrase: S == null ? void 0 : S.networkPassphrase, type: o.SUBMIT_AUTH_ENTRY });
            } catch (pt) {
              return console.error(pt), { signedAuthEntry: null, signerAddress: "", error: u };
            }
            const { signedAuthEntry: W, signerAddress: lt } = B;
            return { signedAuthEntry: W || null, signerAddress: lt, error: B == null ? void 0 : B.apiError };
          })(M, Z);
          return D.error ? { signedAuthEntry: null, signerAddress: "", error: D.error } : { signedAuthEntry: D.signedAuthEntry, signerAddress: D.signerAddress };
        }
        return { signedAuthEntry: null, signerAddress: "", error: i };
      }, c = async () => v ? window.freighter ? Promise.resolve({ isConnected: window.freighter }) : (async () => {
        let M = { isConnected: false };
        try {
          M = await s({ type: o.REQUEST_CONNECTION_STATUS });
        } catch (Z) {
          console.error(Z);
        }
        return { isConnected: M.isConnected };
      })() : { isConnected: false, error: i }, w = async () => {
        if (v) {
          const M = await (async () => {
            let Z;
            try {
              Z = await s({ type: o.REQUEST_NETWORK_DETAILS });
            } catch (V) {
              console.error(V);
            }
            const { networkDetails: D } = Z || { networkDetails: { network: "", networkPassphrase: "" } };
            return { network: D == null ? void 0 : D.network, networkPassphrase: D == null ? void 0 : D.networkPassphrase, error: Z == null ? void 0 : Z.apiError };
          })();
          return M.error ? { network: "", networkPassphrase: "", error: M.error } : { network: M.network, networkPassphrase: M.networkPassphrase };
        }
        return { network: "", networkPassphrase: "", error: i };
      }, T = async () => {
        if (v) {
          const M = await f();
          return M.error ? { network: "", networkUrl: "", networkPassphrase: "", error: M.error } : { network: M.network, networkUrl: M.networkUrl, networkPassphrase: M.networkPassphrase, sorobanRpcUrl: M.sorobanRpcUrl };
        }
        return { network: "", networkUrl: "", networkPassphrase: "", error: i };
      }, P = async () => {
        let M = false;
        if (v) {
          const Z = await (async () => {
            let D;
            try {
              D = await s({ type: o.REQUEST_ALLOWED_STATUS });
            } catch (S) {
              console.error(S);
            }
            const { isAllowed: V } = D || { isAllowed: false };
            return { isAllowed: V, error: D == null ? void 0 : D.apiError };
          })();
          return M = Z.isAllowed, Z.error ? { isAllowed: M, error: Z.error } : { isAllowed: M };
        }
        return { isAllowed: M, error: i };
      }, k = async () => {
        let M = false;
        if (v) {
          const Z = await (async () => {
            let D;
            try {
              D = await s({ type: o.SET_ALLOWED_STATUS });
            } catch (S) {
              console.error(S);
            }
            const { isAllowed: V } = D || { isAllowed: false };
            return { isAllowed: V, error: D == null ? void 0 : D.apiError };
          })();
          return M = Z.isAllowed, Z.error ? { isAllowed: M, error: Z.error } : { isAllowed: M };
        }
        return { isAllowed: M, error: i };
      }, R = async () => {
        let M = "";
        if (v) {
          const Z = await (async () => {
            let D;
            try {
              D = await s({ type: o.REQUEST_ACCESS });
            } catch (S) {
              console.error(S);
            }
            const { publicKey: V } = D || { publicKey: "" };
            return { publicKey: V, error: D == null ? void 0 : D.apiError };
          })();
          return M = Z.publicKey, Z.error ? { address: M, error: Z.error } : { address: M };
        }
        return { address: M, error: i };
      };
      class F {
        constructor(Z = 3e3) {
          this.fetchInfo = async (D) => {
            if (!this.isRunning) return;
            const V = await d(), S = await f();
            (V.error || S.error) && D({ address: "", network: "", networkPassphrase: "", error: V.error || S.error }), this.currentAddress === V.publicKey && this.currentNetwork === S.network && this.currentNetworkPassphrase === S.networkPassphrase || (this.currentAddress = V.publicKey, this.currentNetwork = S.network, this.currentNetworkPassphrase = S.networkPassphrase, D({ address: V.publicKey, network: S.network, networkPassphrase: S.networkPassphrase })), setTimeout(() => this.fetchInfo(D), this.timeout);
          }, this.timeout = Z, this.currentAddress = "", this.currentNetwork = "", this.currentNetworkPassphrase = "", this.isRunning = false;
        }
        watch(Z) {
          return v ? (this.isRunning = true, this.fetchInfo(Z), {}) : { error: i };
        }
        stop() {
          this.isRunning = false;
        }
      }
      const v = typeof window < "u", U = { getAddress: p, addToken: g, signTransaction: b, signMessage: h, signAuthEntry: m, isConnected: c, getNetwork: w, getNetworkDetails: T, isAllowed: P, setAllowed: k, requestAccess: R, WatchWalletChanges: F };
      return l;
    })());
  }(Ml)), Ml.exports;
}
var Vm = jm();
const Qc = Ad(Vm);
var zm = Object.defineProperty, qm = (E, t, e) => t in E ? zm(E, t, { enumerable: true, configurable: true, writable: true, value: e }) : E[t] = e, Hm = (E, t, e) => (qm(E, t + "", e), e);
/**
* @license
* Copyright 2010-2022 Three.js Authors
* SPDX-License-Identifier: MIT
*/
const pp = "143", ls = "srgb", Xs = "srgb-linear", th = "300 es";
class Lu {
  addEventListener(t, e) {
    this._listeners === void 0 && (this._listeners = {});
    const o = this._listeners;
    o[t] === void 0 && (o[t] = []), o[t].indexOf(e) === -1 && o[t].push(e);
  }
  hasEventListener(t, e) {
    if (this._listeners === void 0) return false;
    const o = this._listeners;
    return o[t] !== void 0 && o[t].indexOf(e) !== -1;
  }
  removeEventListener(t, e) {
    if (this._listeners === void 0) return;
    const o = this._listeners[t];
    if (o !== void 0) {
      const a = o.indexOf(e);
      a !== -1 && o.splice(a, 1);
    }
  }
  dispatchEvent(t) {
    if (this._listeners === void 0) return;
    const e = this._listeners[t.type];
    if (e !== void 0) {
      t.target = this;
      const o = e.slice(0);
      for (let a = 0, l = o.length; a < l; a++) o[a].call(this, t);
      t.target = null;
    }
  }
}
const zi = ["00", "01", "02", "03", "04", "05", "06", "07", "08", "09", "0a", "0b", "0c", "0d", "0e", "0f", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "1a", "1b", "1c", "1d", "1e", "1f", "20", "21", "22", "23", "24", "25", "26", "27", "28", "29", "2a", "2b", "2c", "2d", "2e", "2f", "30", "31", "32", "33", "34", "35", "36", "37", "38", "39", "3a", "3b", "3c", "3d", "3e", "3f", "40", "41", "42", "43", "44", "45", "46", "47", "48", "49", "4a", "4b", "4c", "4d", "4e", "4f", "50", "51", "52", "53", "54", "55", "56", "57", "58", "59", "5a", "5b", "5c", "5d", "5e", "5f", "60", "61", "62", "63", "64", "65", "66", "67", "68", "69", "6a", "6b", "6c", "6d", "6e", "6f", "70", "71", "72", "73", "74", "75", "76", "77", "78", "79", "7a", "7b", "7c", "7d", "7e", "7f", "80", "81", "82", "83", "84", "85", "86", "87", "88", "89", "8a", "8b", "8c", "8d", "8e", "8f", "90", "91", "92", "93", "94", "95", "96", "97", "98", "99", "9a", "9b", "9c", "9d", "9e", "9f", "a0", "a1", "a2", "a3", "a4", "a5", "a6", "a7", "a8", "a9", "aa", "ab", "ac", "ad", "ae", "af", "b0", "b1", "b2", "b3", "b4", "b5", "b6", "b7", "b8", "b9", "ba", "bb", "bc", "bd", "be", "bf", "c0", "c1", "c2", "c3", "c4", "c5", "c6", "c7", "c8", "c9", "ca", "cb", "cc", "cd", "ce", "cf", "d0", "d1", "d2", "d3", "d4", "d5", "d6", "d7", "d8", "d9", "da", "db", "dc", "dd", "de", "df", "e0", "e1", "e2", "e3", "e4", "e5", "e6", "e7", "e8", "e9", "ea", "eb", "ec", "ed", "ee", "ef", "f0", "f1", "f2", "f3", "f4", "f5", "f6", "f7", "f8", "f9", "fa", "fb", "fc", "fd", "fe", "ff"], ff = Math.PI / 180, Qf = 180 / Math.PI;
function Ec() {
  const E = Math.random() * 4294967295 | 0, t = Math.random() * 4294967295 | 0, e = Math.random() * 4294967295 | 0, o = Math.random() * 4294967295 | 0;
  return (zi[E & 255] + zi[E >> 8 & 255] + zi[E >> 16 & 255] + zi[E >> 24 & 255] + "-" + zi[t & 255] + zi[t >> 8 & 255] + "-" + zi[t >> 16 & 15 | 64] + zi[t >> 24 & 255] + "-" + zi[e & 63 | 128] + zi[e >> 8 & 255] + "-" + zi[e >> 16 & 255] + zi[e >> 24 & 255] + zi[o & 255] + zi[o >> 8 & 255] + zi[o >> 16 & 255] + zi[o >> 24 & 255]).toLowerCase();
}
function sa(E, t, e) {
  return Math.max(t, Math.min(e, E));
}
function Gm(E, t) {
  return (E % t + t) % t;
}
function pf(E, t, e) {
  return (1 - e) * E + e * t;
}
function eh(E) {
  return (E & E - 1) === 0 && E !== 0;
}
function Jf(E) {
  return Math.pow(2, Math.floor(Math.log(E) / Math.LN2));
}
class Zo {
  constructor(t = 0, e = 0) {
    Zo.prototype.isVector2 = true, this.x = t, this.y = e;
  }
  get width() {
    return this.x;
  }
  set width(t) {
    this.x = t;
  }
  get height() {
    return this.y;
  }
  set height(t) {
    this.y = t;
  }
  set(t, e) {
    return this.x = t, this.y = e, this;
  }
  setScalar(t) {
    return this.x = t, this.y = t, this;
  }
  setX(t) {
    return this.x = t, this;
  }
  setY(t) {
    return this.y = t, this;
  }
  setComponent(t, e) {
    switch (t) {
      case 0:
        this.x = e;
        break;
      case 1:
        this.y = e;
        break;
      default:
        throw new Error("index is out of range: " + t);
    }
    return this;
  }
  getComponent(t) {
    switch (t) {
      case 0:
        return this.x;
      case 1:
        return this.y;
      default:
        throw new Error("index is out of range: " + t);
    }
  }
  clone() {
    return new this.constructor(this.x, this.y);
  }
  copy(t) {
    return this.x = t.x, this.y = t.y, this;
  }
  add(t) {
    return this.x += t.x, this.y += t.y, this;
  }
  addScalar(t) {
    return this.x += t, this.y += t, this;
  }
  addVectors(t, e) {
    return this.x = t.x + e.x, this.y = t.y + e.y, this;
  }
  addScaledVector(t, e) {
    return this.x += t.x * e, this.y += t.y * e, this;
  }
  sub(t) {
    return this.x -= t.x, this.y -= t.y, this;
  }
  subScalar(t) {
    return this.x -= t, this.y -= t, this;
  }
  subVectors(t, e) {
    return this.x = t.x - e.x, this.y = t.y - e.y, this;
  }
  multiply(t) {
    return this.x *= t.x, this.y *= t.y, this;
  }
  multiplyScalar(t) {
    return this.x *= t, this.y *= t, this;
  }
  divide(t) {
    return this.x /= t.x, this.y /= t.y, this;
  }
  divideScalar(t) {
    return this.multiplyScalar(1 / t);
  }
  applyMatrix3(t) {
    const e = this.x, o = this.y, a = t.elements;
    return this.x = a[0] * e + a[3] * o + a[6], this.y = a[1] * e + a[4] * o + a[7], this;
  }
  min(t) {
    return this.x = Math.min(this.x, t.x), this.y = Math.min(this.y, t.y), this;
  }
  max(t) {
    return this.x = Math.max(this.x, t.x), this.y = Math.max(this.y, t.y), this;
  }
  clamp(t, e) {
    return this.x = Math.max(t.x, Math.min(e.x, this.x)), this.y = Math.max(t.y, Math.min(e.y, this.y)), this;
  }
  clampScalar(t, e) {
    return this.x = Math.max(t, Math.min(e, this.x)), this.y = Math.max(t, Math.min(e, this.y)), this;
  }
  clampLength(t, e) {
    const o = this.length();
    return this.divideScalar(o || 1).multiplyScalar(Math.max(t, Math.min(e, o)));
  }
  floor() {
    return this.x = Math.floor(this.x), this.y = Math.floor(this.y), this;
  }
  ceil() {
    return this.x = Math.ceil(this.x), this.y = Math.ceil(this.y), this;
  }
  round() {
    return this.x = Math.round(this.x), this.y = Math.round(this.y), this;
  }
  roundToZero() {
    return this.x = this.x < 0 ? Math.ceil(this.x) : Math.floor(this.x), this.y = this.y < 0 ? Math.ceil(this.y) : Math.floor(this.y), this;
  }
  negate() {
    return this.x = -this.x, this.y = -this.y, this;
  }
  dot(t) {
    return this.x * t.x + this.y * t.y;
  }
  cross(t) {
    return this.x * t.y - this.y * t.x;
  }
  lengthSq() {
    return this.x * this.x + this.y * this.y;
  }
  length() {
    return Math.sqrt(this.x * this.x + this.y * this.y);
  }
  manhattanLength() {
    return Math.abs(this.x) + Math.abs(this.y);
  }
  normalize() {
    return this.divideScalar(this.length() || 1);
  }
  angle() {
    return Math.atan2(-this.y, -this.x) + Math.PI;
  }
  distanceTo(t) {
    return Math.sqrt(this.distanceToSquared(t));
  }
  distanceToSquared(t) {
    const e = this.x - t.x, o = this.y - t.y;
    return e * e + o * o;
  }
  manhattanDistanceTo(t) {
    return Math.abs(this.x - t.x) + Math.abs(this.y - t.y);
  }
  setLength(t) {
    return this.normalize().multiplyScalar(t);
  }
  lerp(t, e) {
    return this.x += (t.x - this.x) * e, this.y += (t.y - this.y) * e, this;
  }
  lerpVectors(t, e, o) {
    return this.x = t.x + (e.x - t.x) * o, this.y = t.y + (e.y - t.y) * o, this;
  }
  equals(t) {
    return t.x === this.x && t.y === this.y;
  }
  fromArray(t, e = 0) {
    return this.x = t[e], this.y = t[e + 1], this;
  }
  toArray(t = [], e = 0) {
    return t[e] = this.x, t[e + 1] = this.y, t;
  }
  fromBufferAttribute(t, e) {
    return this.x = t.getX(e), this.y = t.getY(e), this;
  }
  rotateAround(t, e) {
    const o = Math.cos(e), a = Math.sin(e), l = this.x - t.x, s = this.y - t.y;
    return this.x = l * o - s * a + t.x, this.y = l * a + s * o + t.y, this;
  }
  random() {
    return this.x = Math.random(), this.y = Math.random(), this;
  }
  *[Symbol.iterator]() {
    yield this.x, yield this.y;
  }
}
class ga {
  constructor() {
    ga.prototype.isMatrix3 = true, this.elements = [1, 0, 0, 0, 1, 0, 0, 0, 1];
  }
  set(t, e, o, a, l, s, i, u, d) {
    const f = this.elements;
    return f[0] = t, f[1] = a, f[2] = i, f[3] = e, f[4] = l, f[5] = u, f[6] = o, f[7] = s, f[8] = d, this;
  }
  identity() {
    return this.set(1, 0, 0, 0, 1, 0, 0, 0, 1), this;
  }
  copy(t) {
    const e = this.elements, o = t.elements;
    return e[0] = o[0], e[1] = o[1], e[2] = o[2], e[3] = o[3], e[4] = o[4], e[5] = o[5], e[6] = o[6], e[7] = o[7], e[8] = o[8], this;
  }
  extractBasis(t, e, o) {
    return t.setFromMatrix3Column(this, 0), e.setFromMatrix3Column(this, 1), o.setFromMatrix3Column(this, 2), this;
  }
  setFromMatrix4(t) {
    const e = t.elements;
    return this.set(e[0], e[4], e[8], e[1], e[5], e[9], e[2], e[6], e[10]), this;
  }
  multiply(t) {
    return this.multiplyMatrices(this, t);
  }
  premultiply(t) {
    return this.multiplyMatrices(t, this);
  }
  multiplyMatrices(t, e) {
    const o = t.elements, a = e.elements, l = this.elements, s = o[0], i = o[3], u = o[6], d = o[1], f = o[4], p = o[7], g = o[2], b = o[5], h = o[8], m = a[0], c = a[3], w = a[6], T = a[1], P = a[4], k = a[7], R = a[2], F = a[5], v = a[8];
    return l[0] = s * m + i * T + u * R, l[3] = s * c + i * P + u * F, l[6] = s * w + i * k + u * v, l[1] = d * m + f * T + p * R, l[4] = d * c + f * P + p * F, l[7] = d * w + f * k + p * v, l[2] = g * m + b * T + h * R, l[5] = g * c + b * P + h * F, l[8] = g * w + b * k + h * v, this;
  }
  multiplyScalar(t) {
    const e = this.elements;
    return e[0] *= t, e[3] *= t, e[6] *= t, e[1] *= t, e[4] *= t, e[7] *= t, e[2] *= t, e[5] *= t, e[8] *= t, this;
  }
  determinant() {
    const t = this.elements, e = t[0], o = t[1], a = t[2], l = t[3], s = t[4], i = t[5], u = t[6], d = t[7], f = t[8];
    return e * s * f - e * i * d - o * l * f + o * i * u + a * l * d - a * s * u;
  }
  invert() {
    const t = this.elements, e = t[0], o = t[1], a = t[2], l = t[3], s = t[4], i = t[5], u = t[6], d = t[7], f = t[8], p = f * s - i * d, g = i * u - f * l, b = d * l - s * u, h = e * p + o * g + a * b;
    if (h === 0) return this.set(0, 0, 0, 0, 0, 0, 0, 0, 0);
    const m = 1 / h;
    return t[0] = p * m, t[1] = (a * d - f * o) * m, t[2] = (i * o - a * s) * m, t[3] = g * m, t[4] = (f * e - a * u) * m, t[5] = (a * l - i * e) * m, t[6] = b * m, t[7] = (o * u - d * e) * m, t[8] = (s * e - o * l) * m, this;
  }
  transpose() {
    let t;
    const e = this.elements;
    return t = e[1], e[1] = e[3], e[3] = t, t = e[2], e[2] = e[6], e[6] = t, t = e[5], e[5] = e[7], e[7] = t, this;
  }
  getNormalMatrix(t) {
    return this.setFromMatrix4(t).invert().transpose();
  }
  transposeIntoArray(t) {
    const e = this.elements;
    return t[0] = e[0], t[1] = e[3], t[2] = e[6], t[3] = e[1], t[4] = e[4], t[5] = e[7], t[6] = e[2], t[7] = e[5], t[8] = e[8], this;
  }
  setUvTransform(t, e, o, a, l, s, i) {
    const u = Math.cos(l), d = Math.sin(l);
    return this.set(o * u, o * d, -o * (u * s + d * i) + s + t, -a * d, a * u, -a * (-d * s + u * i) + i + e, 0, 0, 1), this;
  }
  scale(t, e) {
    const o = this.elements;
    return o[0] *= t, o[3] *= t, o[6] *= t, o[1] *= e, o[4] *= e, o[7] *= e, this;
  }
  rotate(t) {
    const e = Math.cos(t), o = Math.sin(t), a = this.elements, l = a[0], s = a[3], i = a[6], u = a[1], d = a[4], f = a[7];
    return a[0] = e * l + o * u, a[3] = e * s + o * d, a[6] = e * i + o * f, a[1] = -o * l + e * u, a[4] = -o * s + e * d, a[7] = -o * i + e * f, this;
  }
  translate(t, e) {
    const o = this.elements;
    return o[0] += t * o[2], o[3] += t * o[5], o[6] += t * o[8], o[1] += e * o[2], o[4] += e * o[5], o[7] += e * o[8], this;
  }
  equals(t) {
    const e = this.elements, o = t.elements;
    for (let a = 0; a < 9; a++) if (e[a] !== o[a]) return false;
    return true;
  }
  fromArray(t, e = 0) {
    for (let o = 0; o < 9; o++) this.elements[o] = t[o + e];
    return this;
  }
  toArray(t = [], e = 0) {
    const o = this.elements;
    return t[e] = o[0], t[e + 1] = o[1], t[e + 2] = o[2], t[e + 3] = o[3], t[e + 4] = o[4], t[e + 5] = o[5], t[e + 6] = o[6], t[e + 7] = o[7], t[e + 8] = o[8], t;
  }
  clone() {
    return new this.constructor().fromArray(this.elements);
  }
}
function Td(E) {
  for (let t = E.length - 1; t >= 0; --t) if (E[t] > 65535) return true;
  return false;
}
function ql(E) {
  return document.createElementNS("http://www.w3.org/1999/xhtml", E);
}
function Ks(E) {
  return E < 0.04045 ? E * 0.0773993808 : Math.pow(E * 0.9478672986 + 0.0521327014, 2.4);
}
function Bl(E) {
  return E < 31308e-7 ? E * 12.92 : 1.055 * Math.pow(E, 0.41666) - 0.055;
}
const hf = { [ls]: { [Xs]: Ks }, [Xs]: { [ls]: Bl } }, xa = { legacyMode: true, get workingColorSpace() {
  return Xs;
}, set workingColorSpace(E) {
  console.warn("THREE.ColorManagement: .workingColorSpace is readonly.");
}, convert: function(E, t, e) {
  if (this.legacyMode || t === e || !t || !e) return E;
  if (hf[t] && hf[t][e] !== void 0) {
    const o = hf[t][e];
    return E.r = o(E.r), E.g = o(E.g), E.b = o(E.b), E;
  }
  throw new Error("Unsupported color space conversion.");
}, fromWorkingColorSpace: function(E, t) {
  return this.convert(E, this.workingColorSpace, t);
}, toWorkingColorSpace: function(E, t) {
  return this.convert(E, t, this.workingColorSpace);
} }, kd = { aliceblue: 15792383, antiquewhite: 16444375, aqua: 65535, aquamarine: 8388564, azure: 15794175, beige: 16119260, bisque: 16770244, black: 0, blanchedalmond: 16772045, blue: 255, blueviolet: 9055202, brown: 10824234, burlywood: 14596231, cadetblue: 6266528, chartreuse: 8388352, chocolate: 13789470, coral: 16744272, cornflowerblue: 6591981, cornsilk: 16775388, crimson: 14423100, cyan: 65535, darkblue: 139, darkcyan: 35723, darkgoldenrod: 12092939, darkgray: 11119017, darkgreen: 25600, darkgrey: 11119017, darkkhaki: 12433259, darkmagenta: 9109643, darkolivegreen: 5597999, darkorange: 16747520, darkorchid: 10040012, darkred: 9109504, darksalmon: 15308410, darkseagreen: 9419919, darkslateblue: 4734347, darkslategray: 3100495, darkslategrey: 3100495, darkturquoise: 52945, darkviolet: 9699539, deeppink: 16716947, deepskyblue: 49151, dimgray: 6908265, dimgrey: 6908265, dodgerblue: 2003199, firebrick: 11674146, floralwhite: 16775920, forestgreen: 2263842, fuchsia: 16711935, gainsboro: 14474460, ghostwhite: 16316671, gold: 16766720, goldenrod: 14329120, gray: 8421504, green: 32768, greenyellow: 11403055, grey: 8421504, honeydew: 15794160, hotpink: 16738740, indianred: 13458524, indigo: 4915330, ivory: 16777200, khaki: 15787660, lavender: 15132410, lavenderblush: 16773365, lawngreen: 8190976, lemonchiffon: 16775885, lightblue: 11393254, lightcoral: 15761536, lightcyan: 14745599, lightgoldenrodyellow: 16448210, lightgray: 13882323, lightgreen: 9498256, lightgrey: 13882323, lightpink: 16758465, lightsalmon: 16752762, lightseagreen: 2142890, lightskyblue: 8900346, lightslategray: 7833753, lightslategrey: 7833753, lightsteelblue: 11584734, lightyellow: 16777184, lime: 65280, limegreen: 3329330, linen: 16445670, magenta: 16711935, maroon: 8388608, mediumaquamarine: 6737322, mediumblue: 205, mediumorchid: 12211667, mediumpurple: 9662683, mediumseagreen: 3978097, mediumslateblue: 8087790, mediumspringgreen: 64154, mediumturquoise: 4772300, mediumvioletred: 13047173, midnightblue: 1644912, mintcream: 16121850, mistyrose: 16770273, moccasin: 16770229, navajowhite: 16768685, navy: 128, oldlace: 16643558, olive: 8421376, olivedrab: 7048739, orange: 16753920, orangered: 16729344, orchid: 14315734, palegoldenrod: 15657130, palegreen: 10025880, paleturquoise: 11529966, palevioletred: 14381203, papayawhip: 16773077, peachpuff: 16767673, peru: 13468991, pink: 16761035, plum: 14524637, powderblue: 11591910, purple: 8388736, rebeccapurple: 6697881, red: 16711680, rosybrown: 12357519, royalblue: 4286945, saddlebrown: 9127187, salmon: 16416882, sandybrown: 16032864, seagreen: 3050327, seashell: 16774638, sienna: 10506797, silver: 12632256, skyblue: 8900331, slateblue: 6970061, slategray: 7372944, slategrey: 7372944, snow: 16775930, springgreen: 65407, steelblue: 4620980, tan: 13808780, teal: 32896, thistle: 14204888, tomato: 16737095, turquoise: 4251856, violet: 15631086, wheat: 16113331, white: 16777215, whitesmoke: 16119285, yellow: 16776960, yellowgreen: 10145074 }, Li = { r: 0, g: 0, b: 0 }, _a = { h: 0, s: 0, l: 0 }, Jc = { h: 0, s: 0, l: 0 };
function df(E, t, e) {
  return e < 0 && (e += 1), e > 1 && (e -= 1), e < 1 / 6 ? E + (t - E) * 6 * e : e < 1 / 2 ? t : e < 2 / 3 ? E + (t - E) * 6 * (2 / 3 - e) : E;
}
function tl(E, t) {
  return t.r = E.r, t.g = E.g, t.b = E.b, t;
}
class Yo {
  constructor(t, e, o) {
    return this.isColor = true, this.r = 1, this.g = 1, this.b = 1, e === void 0 && o === void 0 ? this.set(t) : this.setRGB(t, e, o);
  }
  set(t) {
    return t && t.isColor ? this.copy(t) : typeof t == "number" ? this.setHex(t) : typeof t == "string" && this.setStyle(t), this;
  }
  setScalar(t) {
    return this.r = t, this.g = t, this.b = t, this;
  }
  setHex(t, e = ls) {
    return t = Math.floor(t), this.r = (t >> 16 & 255) / 255, this.g = (t >> 8 & 255) / 255, this.b = (t & 255) / 255, xa.toWorkingColorSpace(this, e), this;
  }
  setRGB(t, e, o, a = Xs) {
    return this.r = t, this.g = e, this.b = o, xa.toWorkingColorSpace(this, a), this;
  }
  setHSL(t, e, o, a = Xs) {
    if (t = Gm(t, 1), e = sa(e, 0, 1), o = sa(o, 0, 1), e === 0) this.r = this.g = this.b = o;
    else {
      const l = o <= 0.5 ? o * (1 + e) : o + e - o * e, s = 2 * o - l;
      this.r = df(s, l, t + 1 / 3), this.g = df(s, l, t), this.b = df(s, l, t - 1 / 3);
    }
    return xa.toWorkingColorSpace(this, a), this;
  }
  setStyle(t, e = ls) {
    function o(l) {
      l !== void 0 && parseFloat(l) < 1 && console.warn("THREE.Color: Alpha component of " + t + " will be ignored.");
    }
    let a;
    if (a = /^((?:rgb|hsl)a?)\(([^\)]*)\)/.exec(t)) {
      let l;
      const s = a[1], i = a[2];
      switch (s) {
        case "rgb":
        case "rgba":
          if (l = /^\s*(\d+)\s*,\s*(\d+)\s*,\s*(\d+)\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(i)) return this.r = Math.min(255, parseInt(l[1], 10)) / 255, this.g = Math.min(255, parseInt(l[2], 10)) / 255, this.b = Math.min(255, parseInt(l[3], 10)) / 255, xa.toWorkingColorSpace(this, e), o(l[4]), this;
          if (l = /^\s*(\d+)\%\s*,\s*(\d+)\%\s*,\s*(\d+)\%\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(i)) return this.r = Math.min(100, parseInt(l[1], 10)) / 100, this.g = Math.min(100, parseInt(l[2], 10)) / 100, this.b = Math.min(100, parseInt(l[3], 10)) / 100, xa.toWorkingColorSpace(this, e), o(l[4]), this;
          break;
        case "hsl":
        case "hsla":
          if (l = /^\s*(\d*\.?\d+)\s*,\s*(\d+)\%\s*,\s*(\d+)\%\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(i)) {
            const u = parseFloat(l[1]) / 360, d = parseInt(l[2], 10) / 100, f = parseInt(l[3], 10) / 100;
            return o(l[4]), this.setHSL(u, d, f, e);
          }
          break;
      }
    } else if (a = /^\#([A-Fa-f\d]+)$/.exec(t)) {
      const l = a[1], s = l.length;
      if (s === 3) return this.r = parseInt(l.charAt(0) + l.charAt(0), 16) / 255, this.g = parseInt(l.charAt(1) + l.charAt(1), 16) / 255, this.b = parseInt(l.charAt(2) + l.charAt(2), 16) / 255, xa.toWorkingColorSpace(this, e), this;
      if (s === 6) return this.r = parseInt(l.charAt(0) + l.charAt(1), 16) / 255, this.g = parseInt(l.charAt(2) + l.charAt(3), 16) / 255, this.b = parseInt(l.charAt(4) + l.charAt(5), 16) / 255, xa.toWorkingColorSpace(this, e), this;
    }
    return t && t.length > 0 ? this.setColorName(t, e) : this;
  }
  setColorName(t, e = ls) {
    const o = kd[t.toLowerCase()];
    return o !== void 0 ? this.setHex(o, e) : console.warn("THREE.Color: Unknown color " + t), this;
  }
  clone() {
    return new this.constructor(this.r, this.g, this.b);
  }
  copy(t) {
    return this.r = t.r, this.g = t.g, this.b = t.b, this;
  }
  copySRGBToLinear(t) {
    return this.r = Ks(t.r), this.g = Ks(t.g), this.b = Ks(t.b), this;
  }
  copyLinearToSRGB(t) {
    return this.r = Bl(t.r), this.g = Bl(t.g), this.b = Bl(t.b), this;
  }
  convertSRGBToLinear() {
    return this.copySRGBToLinear(this), this;
  }
  convertLinearToSRGB() {
    return this.copyLinearToSRGB(this), this;
  }
  getHex(t = ls) {
    return xa.fromWorkingColorSpace(tl(this, Li), t), sa(Li.r * 255, 0, 255) << 16 ^ sa(Li.g * 255, 0, 255) << 8 ^ sa(Li.b * 255, 0, 255) << 0;
  }
  getHexString(t = ls) {
    return ("000000" + this.getHex(t).toString(16)).slice(-6);
  }
  getHSL(t, e = Xs) {
    xa.fromWorkingColorSpace(tl(this, Li), e);
    const o = Li.r, a = Li.g, l = Li.b, s = Math.max(o, a, l), i = Math.min(o, a, l);
    let u, d;
    const f = (i + s) / 2;
    if (i === s) u = 0, d = 0;
    else {
      const p = s - i;
      switch (d = f <= 0.5 ? p / (s + i) : p / (2 - s - i), s) {
        case o:
          u = (a - l) / p + (a < l ? 6 : 0);
          break;
        case a:
          u = (l - o) / p + 2;
          break;
        case l:
          u = (o - a) / p + 4;
          break;
      }
      u /= 6;
    }
    return t.h = u, t.s = d, t.l = f, t;
  }
  getRGB(t, e = Xs) {
    return xa.fromWorkingColorSpace(tl(this, Li), e), t.r = Li.r, t.g = Li.g, t.b = Li.b, t;
  }
  getStyle(t = ls) {
    return xa.fromWorkingColorSpace(tl(this, Li), t), t !== ls ? `color(${t} ${Li.r} ${Li.g} ${Li.b})` : `rgb(${Li.r * 255 | 0},${Li.g * 255 | 0},${Li.b * 255 | 0})`;
  }
  offsetHSL(t, e, o) {
    return this.getHSL(_a), _a.h += t, _a.s += e, _a.l += o, this.setHSL(_a.h, _a.s, _a.l), this;
  }
  add(t) {
    return this.r += t.r, this.g += t.g, this.b += t.b, this;
  }
  addColors(t, e) {
    return this.r = t.r + e.r, this.g = t.g + e.g, this.b = t.b + e.b, this;
  }
  addScalar(t) {
    return this.r += t, this.g += t, this.b += t, this;
  }
  sub(t) {
    return this.r = Math.max(0, this.r - t.r), this.g = Math.max(0, this.g - t.g), this.b = Math.max(0, this.b - t.b), this;
  }
  multiply(t) {
    return this.r *= t.r, this.g *= t.g, this.b *= t.b, this;
  }
  multiplyScalar(t) {
    return this.r *= t, this.g *= t, this.b *= t, this;
  }
  lerp(t, e) {
    return this.r += (t.r - this.r) * e, this.g += (t.g - this.g) * e, this.b += (t.b - this.b) * e, this;
  }
  lerpColors(t, e, o) {
    return this.r = t.r + (e.r - t.r) * o, this.g = t.g + (e.g - t.g) * o, this.b = t.b + (e.b - t.b) * o, this;
  }
  lerpHSL(t, e) {
    this.getHSL(_a), t.getHSL(Jc);
    const o = pf(_a.h, Jc.h, e), a = pf(_a.s, Jc.s, e), l = pf(_a.l, Jc.l, e);
    return this.setHSL(o, a, l), this;
  }
  equals(t) {
    return t.r === this.r && t.g === this.g && t.b === this.b;
  }
  fromArray(t, e = 0) {
    return this.r = t[e], this.g = t[e + 1], this.b = t[e + 2], this;
  }
  toArray(t = [], e = 0) {
    return t[e] = this.r, t[e + 1] = this.g, t[e + 2] = this.b, t;
  }
  fromBufferAttribute(t, e) {
    return this.r = t.getX(e), this.g = t.getY(e), this.b = t.getZ(e), t.normalized === true && (this.r /= 255, this.g /= 255, this.b /= 255), this;
  }
  toJSON() {
    return this.getHex();
  }
  *[Symbol.iterator]() {
    yield this.r, yield this.g, yield this.b;
  }
}
Yo.NAMES = kd;
let hu;
class Od {
  static getDataURL(t) {
    if (/^data:/i.test(t.src) || typeof HTMLCanvasElement > "u") return t.src;
    let e;
    if (t instanceof HTMLCanvasElement) e = t;
    else {
      hu === void 0 && (hu = ql("canvas")), hu.width = t.width, hu.height = t.height;
      const o = hu.getContext("2d");
      t instanceof ImageData ? o.putImageData(t, 0, 0) : o.drawImage(t, 0, 0, t.width, t.height), e = hu;
    }
    return e.width > 2048 || e.height > 2048 ? (console.warn("THREE.ImageUtils.getDataURL: Image converted to jpg for performance reasons", t), e.toDataURL("image/jpeg", 0.6)) : e.toDataURL("image/png");
  }
  static sRGBToLinear(t) {
    if (typeof HTMLImageElement < "u" && t instanceof HTMLImageElement || typeof HTMLCanvasElement < "u" && t instanceof HTMLCanvasElement || typeof ImageBitmap < "u" && t instanceof ImageBitmap) {
      const e = ql("canvas");
      e.width = t.width, e.height = t.height;
      const o = e.getContext("2d");
      o.drawImage(t, 0, 0, t.width, t.height);
      const a = o.getImageData(0, 0, t.width, t.height), l = a.data;
      for (let s = 0; s < l.length; s++) l[s] = Ks(l[s] / 255) * 255;
      return o.putImageData(a, 0, 0), e;
    } else if (t.data) {
      const e = t.data.slice(0);
      for (let o = 0; o < e.length; o++) e instanceof Uint8Array || e instanceof Uint8ClampedArray ? e[o] = Math.floor(Ks(e[o] / 255) * 255) : e[o] = Ks(e[o]);
      return { data: e, width: t.width, height: t.height };
    } else return console.warn("THREE.ImageUtils.sRGBToLinear(): Unsupported image type. No color space conversion applied."), t;
  }
}
class Pd {
  constructor(t = null) {
    this.isSource = true, this.uuid = Ec(), this.data = t, this.version = 0;
  }
  set needsUpdate(t) {
    t === true && this.version++;
  }
  toJSON(t) {
    const e = t === void 0 || typeof t == "string";
    if (!e && t.images[this.uuid] !== void 0) return t.images[this.uuid];
    const o = { uuid: this.uuid, url: "" }, a = this.data;
    if (a !== null) {
      let l;
      if (Array.isArray(a)) {
        l = [];
        for (let s = 0, i = a.length; s < i; s++) a[s].isDataTexture ? l.push(mf(a[s].image)) : l.push(mf(a[s]));
      } else l = mf(a);
      o.url = l;
    }
    return e || (t.images[this.uuid] = o), o;
  }
}
function mf(E) {
  return typeof HTMLImageElement < "u" && E instanceof HTMLImageElement || typeof HTMLCanvasElement < "u" && E instanceof HTMLCanvasElement || typeof ImageBitmap < "u" && E instanceof ImageBitmap ? Od.getDataURL(E) : E.data ? { data: Array.from(E.data), width: E.width, height: E.height, type: E.data.constructor.name } : (console.warn("THREE.Texture: Unable to serialize Texture."), {});
}
let Wm = 0;
class ca extends Lu {
  constructor(t = ca.DEFAULT_IMAGE, e = ca.DEFAULT_MAPPING, o = 1001, a = 1001, l = 1006, s = 1008, i = 1023, u = 1009, d = 1, f = 3e3) {
    super(), this.isTexture = true, Object.defineProperty(this, "id", { value: Wm++ }), this.uuid = Ec(), this.name = "", this.source = new Pd(t), this.mipmaps = [], this.mapping = e, this.wrapS = o, this.wrapT = a, this.magFilter = l, this.minFilter = s, this.anisotropy = d, this.format = i, this.internalFormat = null, this.type = u, this.offset = new Zo(0, 0), this.repeat = new Zo(1, 1), this.center = new Zo(0, 0), this.rotation = 0, this.matrixAutoUpdate = true, this.matrix = new ga(), this.generateMipmaps = true, this.premultiplyAlpha = false, this.flipY = true, this.unpackAlignment = 4, this.encoding = f, this.userData = {}, this.version = 0, this.onUpdate = null, this.isRenderTargetTexture = false, this.needsPMREMUpdate = false;
  }
  get image() {
    return this.source.data;
  }
  set image(t) {
    this.source.data = t;
  }
  updateMatrix() {
    this.matrix.setUvTransform(this.offset.x, this.offset.y, this.repeat.x, this.repeat.y, this.rotation, this.center.x, this.center.y);
  }
  clone() {
    return new this.constructor().copy(this);
  }
  copy(t) {
    return this.name = t.name, this.source = t.source, this.mipmaps = t.mipmaps.slice(0), this.mapping = t.mapping, this.wrapS = t.wrapS, this.wrapT = t.wrapT, this.magFilter = t.magFilter, this.minFilter = t.minFilter, this.anisotropy = t.anisotropy, this.format = t.format, this.internalFormat = t.internalFormat, this.type = t.type, this.offset.copy(t.offset), this.repeat.copy(t.repeat), this.center.copy(t.center), this.rotation = t.rotation, this.matrixAutoUpdate = t.matrixAutoUpdate, this.matrix.copy(t.matrix), this.generateMipmaps = t.generateMipmaps, this.premultiplyAlpha = t.premultiplyAlpha, this.flipY = t.flipY, this.unpackAlignment = t.unpackAlignment, this.encoding = t.encoding, this.userData = JSON.parse(JSON.stringify(t.userData)), this.needsUpdate = true, this;
  }
  toJSON(t) {
    const e = t === void 0 || typeof t == "string";
    if (!e && t.textures[this.uuid] !== void 0) return t.textures[this.uuid];
    const o = { metadata: { version: 4.5, type: "Texture", generator: "Texture.toJSON" }, uuid: this.uuid, name: this.name, image: this.source.toJSON(t).uuid, mapping: this.mapping, repeat: [this.repeat.x, this.repeat.y], offset: [this.offset.x, this.offset.y], center: [this.center.x, this.center.y], rotation: this.rotation, wrap: [this.wrapS, this.wrapT], format: this.format, type: this.type, encoding: this.encoding, minFilter: this.minFilter, magFilter: this.magFilter, anisotropy: this.anisotropy, flipY: this.flipY, premultiplyAlpha: this.premultiplyAlpha, unpackAlignment: this.unpackAlignment };
    return JSON.stringify(this.userData) !== "{}" && (o.userData = this.userData), e || (t.textures[this.uuid] = o), o;
  }
  dispose() {
    this.dispatchEvent({ type: "dispose" });
  }
  transformUv(t) {
    if (this.mapping !== 300) return t;
    if (t.applyMatrix3(this.matrix), t.x < 0 || t.x > 1) switch (this.wrapS) {
      case 1e3:
        t.x = t.x - Math.floor(t.x);
        break;
      case 1001:
        t.x = t.x < 0 ? 0 : 1;
        break;
      case 1002:
        Math.abs(Math.floor(t.x) % 2) === 1 ? t.x = Math.ceil(t.x) - t.x : t.x = t.x - Math.floor(t.x);
        break;
    }
    if (t.y < 0 || t.y > 1) switch (this.wrapT) {
      case 1e3:
        t.y = t.y - Math.floor(t.y);
        break;
      case 1001:
        t.y = t.y < 0 ? 0 : 1;
        break;
      case 1002:
        Math.abs(Math.floor(t.y) % 2) === 1 ? t.y = Math.ceil(t.y) - t.y : t.y = t.y - Math.floor(t.y);
        break;
    }
    return this.flipY && (t.y = 1 - t.y), t;
  }
  set needsUpdate(t) {
    t === true && (this.version++, this.source.needsUpdate = true);
  }
}
ca.DEFAULT_IMAGE = null;
ca.DEFAULT_MAPPING = 300;
class Di {
  constructor(t = 0, e = 0, o = 0, a = 1) {
    Di.prototype.isVector4 = true, this.x = t, this.y = e, this.z = o, this.w = a;
  }
  get width() {
    return this.z;
  }
  set width(t) {
    this.z = t;
  }
  get height() {
    return this.w;
  }
  set height(t) {
    this.w = t;
  }
  set(t, e, o, a) {
    return this.x = t, this.y = e, this.z = o, this.w = a, this;
  }
  setScalar(t) {
    return this.x = t, this.y = t, this.z = t, this.w = t, this;
  }
  setX(t) {
    return this.x = t, this;
  }
  setY(t) {
    return this.y = t, this;
  }
  setZ(t) {
    return this.z = t, this;
  }
  setW(t) {
    return this.w = t, this;
  }
  setComponent(t, e) {
    switch (t) {
      case 0:
        this.x = e;
        break;
      case 1:
        this.y = e;
        break;
      case 2:
        this.z = e;
        break;
      case 3:
        this.w = e;
        break;
      default:
        throw new Error("index is out of range: " + t);
    }
    return this;
  }
  getComponent(t) {
    switch (t) {
      case 0:
        return this.x;
      case 1:
        return this.y;
      case 2:
        return this.z;
      case 3:
        return this.w;
      default:
        throw new Error("index is out of range: " + t);
    }
  }
  clone() {
    return new this.constructor(this.x, this.y, this.z, this.w);
  }
  copy(t) {
    return this.x = t.x, this.y = t.y, this.z = t.z, this.w = t.w !== void 0 ? t.w : 1, this;
  }
  add(t) {
    return this.x += t.x, this.y += t.y, this.z += t.z, this.w += t.w, this;
  }
  addScalar(t) {
    return this.x += t, this.y += t, this.z += t, this.w += t, this;
  }
  addVectors(t, e) {
    return this.x = t.x + e.x, this.y = t.y + e.y, this.z = t.z + e.z, this.w = t.w + e.w, this;
  }
  addScaledVector(t, e) {
    return this.x += t.x * e, this.y += t.y * e, this.z += t.z * e, this.w += t.w * e, this;
  }
  sub(t) {
    return this.x -= t.x, this.y -= t.y, this.z -= t.z, this.w -= t.w, this;
  }
  subScalar(t) {
    return this.x -= t, this.y -= t, this.z -= t, this.w -= t, this;
  }
  subVectors(t, e) {
    return this.x = t.x - e.x, this.y = t.y - e.y, this.z = t.z - e.z, this.w = t.w - e.w, this;
  }
  multiply(t) {
    return this.x *= t.x, this.y *= t.y, this.z *= t.z, this.w *= t.w, this;
  }
  multiplyScalar(t) {
    return this.x *= t, this.y *= t, this.z *= t, this.w *= t, this;
  }
  applyMatrix4(t) {
    const e = this.x, o = this.y, a = this.z, l = this.w, s = t.elements;
    return this.x = s[0] * e + s[4] * o + s[8] * a + s[12] * l, this.y = s[1] * e + s[5] * o + s[9] * a + s[13] * l, this.z = s[2] * e + s[6] * o + s[10] * a + s[14] * l, this.w = s[3] * e + s[7] * o + s[11] * a + s[15] * l, this;
  }
  divideScalar(t) {
    return this.multiplyScalar(1 / t);
  }
  setAxisAngleFromQuaternion(t) {
    this.w = 2 * Math.acos(t.w);
    const e = Math.sqrt(1 - t.w * t.w);
    return e < 1e-4 ? (this.x = 1, this.y = 0, this.z = 0) : (this.x = t.x / e, this.y = t.y / e, this.z = t.z / e), this;
  }
  setAxisAngleFromRotationMatrix(t) {
    let e, o, a, l;
    const s = t.elements, i = s[0], u = s[4], d = s[8], f = s[1], p = s[5], g = s[9], b = s[2], h = s[6], m = s[10];
    if (Math.abs(u - f) < 0.01 && Math.abs(d - b) < 0.01 && Math.abs(g - h) < 0.01) {
      if (Math.abs(u + f) < 0.1 && Math.abs(d + b) < 0.1 && Math.abs(g + h) < 0.1 && Math.abs(i + p + m - 3) < 0.1) return this.set(1, 0, 0, 0), this;
      e = Math.PI;
      const w = (i + 1) / 2, T = (p + 1) / 2, P = (m + 1) / 2, k = (u + f) / 4, R = (d + b) / 4, F = (g + h) / 4;
      return w > T && w > P ? w < 0.01 ? (o = 0, a = 0.707106781, l = 0.707106781) : (o = Math.sqrt(w), a = k / o, l = R / o) : T > P ? T < 0.01 ? (o = 0.707106781, a = 0, l = 0.707106781) : (a = Math.sqrt(T), o = k / a, l = F / a) : P < 0.01 ? (o = 0.707106781, a = 0.707106781, l = 0) : (l = Math.sqrt(P), o = R / l, a = F / l), this.set(o, a, l, e), this;
    }
    let c = Math.sqrt((h - g) * (h - g) + (d - b) * (d - b) + (f - u) * (f - u));
    return Math.abs(c) < 1e-3 && (c = 1), this.x = (h - g) / c, this.y = (d - b) / c, this.z = (f - u) / c, this.w = Math.acos((i + p + m - 1) / 2), this;
  }
  min(t) {
    return this.x = Math.min(this.x, t.x), this.y = Math.min(this.y, t.y), this.z = Math.min(this.z, t.z), this.w = Math.min(this.w, t.w), this;
  }
  max(t) {
    return this.x = Math.max(this.x, t.x), this.y = Math.max(this.y, t.y), this.z = Math.max(this.z, t.z), this.w = Math.max(this.w, t.w), this;
  }
  clamp(t, e) {
    return this.x = Math.max(t.x, Math.min(e.x, this.x)), this.y = Math.max(t.y, Math.min(e.y, this.y)), this.z = Math.max(t.z, Math.min(e.z, this.z)), this.w = Math.max(t.w, Math.min(e.w, this.w)), this;
  }
  clampScalar(t, e) {
    return this.x = Math.max(t, Math.min(e, this.x)), this.y = Math.max(t, Math.min(e, this.y)), this.z = Math.max(t, Math.min(e, this.z)), this.w = Math.max(t, Math.min(e, this.w)), this;
  }
  clampLength(t, e) {
    const o = this.length();
    return this.divideScalar(o || 1).multiplyScalar(Math.max(t, Math.min(e, o)));
  }
  floor() {
    return this.x = Math.floor(this.x), this.y = Math.floor(this.y), this.z = Math.floor(this.z), this.w = Math.floor(this.w), this;
  }
  ceil() {
    return this.x = Math.ceil(this.x), this.y = Math.ceil(this.y), this.z = Math.ceil(this.z), this.w = Math.ceil(this.w), this;
  }
  round() {
    return this.x = Math.round(this.x), this.y = Math.round(this.y), this.z = Math.round(this.z), this.w = Math.round(this.w), this;
  }
  roundToZero() {
    return this.x = this.x < 0 ? Math.ceil(this.x) : Math.floor(this.x), this.y = this.y < 0 ? Math.ceil(this.y) : Math.floor(this.y), this.z = this.z < 0 ? Math.ceil(this.z) : Math.floor(this.z), this.w = this.w < 0 ? Math.ceil(this.w) : Math.floor(this.w), this;
  }
  negate() {
    return this.x = -this.x, this.y = -this.y, this.z = -this.z, this.w = -this.w, this;
  }
  dot(t) {
    return this.x * t.x + this.y * t.y + this.z * t.z + this.w * t.w;
  }
  lengthSq() {
    return this.x * this.x + this.y * this.y + this.z * this.z + this.w * this.w;
  }
  length() {
    return Math.sqrt(this.x * this.x + this.y * this.y + this.z * this.z + this.w * this.w);
  }
  manhattanLength() {
    return Math.abs(this.x) + Math.abs(this.y) + Math.abs(this.z) + Math.abs(this.w);
  }
  normalize() {
    return this.divideScalar(this.length() || 1);
  }
  setLength(t) {
    return this.normalize().multiplyScalar(t);
  }
  lerp(t, e) {
    return this.x += (t.x - this.x) * e, this.y += (t.y - this.y) * e, this.z += (t.z - this.z) * e, this.w += (t.w - this.w) * e, this;
  }
  lerpVectors(t, e, o) {
    return this.x = t.x + (e.x - t.x) * o, this.y = t.y + (e.y - t.y) * o, this.z = t.z + (e.z - t.z) * o, this.w = t.w + (e.w - t.w) * o, this;
  }
  equals(t) {
    return t.x === this.x && t.y === this.y && t.z === this.z && t.w === this.w;
  }
  fromArray(t, e = 0) {
    return this.x = t[e], this.y = t[e + 1], this.z = t[e + 2], this.w = t[e + 3], this;
  }
  toArray(t = [], e = 0) {
    return t[e] = this.x, t[e + 1] = this.y, t[e + 2] = this.z, t[e + 3] = this.w, t;
  }
  fromBufferAttribute(t, e) {
    return this.x = t.getX(e), this.y = t.getY(e), this.z = t.getZ(e), this.w = t.getW(e), this;
  }
  random() {
    return this.x = Math.random(), this.y = Math.random(), this.z = Math.random(), this.w = Math.random(), this;
  }
  *[Symbol.iterator]() {
    yield this.x, yield this.y, yield this.z, yield this.w;
  }
}
class Qs extends Lu {
  constructor(t, e, o = {}) {
    super(), this.isWebGLRenderTarget = true, this.width = t, this.height = e, this.depth = 1, this.scissor = new Di(0, 0, t, e), this.scissorTest = false, this.viewport = new Di(0, 0, t, e);
    const a = { width: t, height: e, depth: 1 };
    this.texture = new ca(a, o.mapping, o.wrapS, o.wrapT, o.magFilter, o.minFilter, o.format, o.type, o.anisotropy, o.encoding), this.texture.isRenderTargetTexture = true, this.texture.flipY = false, this.texture.generateMipmaps = o.generateMipmaps !== void 0 ? o.generateMipmaps : false, this.texture.internalFormat = o.internalFormat !== void 0 ? o.internalFormat : null, this.texture.minFilter = o.minFilter !== void 0 ? o.minFilter : 1006, this.depthBuffer = o.depthBuffer !== void 0 ? o.depthBuffer : true, this.stencilBuffer = o.stencilBuffer !== void 0 ? o.stencilBuffer : false, this.depthTexture = o.depthTexture !== void 0 ? o.depthTexture : null, this.samples = o.samples !== void 0 ? o.samples : 0;
  }
  setSize(t, e, o = 1) {
    (this.width !== t || this.height !== e || this.depth !== o) && (this.width = t, this.height = e, this.depth = o, this.texture.image.width = t, this.texture.image.height = e, this.texture.image.depth = o, this.dispose()), this.viewport.set(0, 0, t, e), this.scissor.set(0, 0, t, e);
  }
  clone() {
    return new this.constructor().copy(this);
  }
  copy(t) {
    this.width = t.width, this.height = t.height, this.depth = t.depth, this.viewport.copy(t.viewport), this.texture = t.texture.clone(), this.texture.isRenderTargetTexture = true;
    const e = Object.assign({}, t.texture.image);
    return this.texture.source = new Pd(e), this.depthBuffer = t.depthBuffer, this.stencilBuffer = t.stencilBuffer, t.depthTexture !== null && (this.depthTexture = t.depthTexture.clone()), this.samples = t.samples, this;
  }
  dispose() {
    this.dispatchEvent({ type: "dispose" });
  }
}
class Cd extends ca {
  constructor(t = null, e = 1, o = 1, a = 1) {
    super(null), this.isDataArrayTexture = true, this.image = { data: t, width: e, height: o, depth: a }, this.magFilter = 1003, this.minFilter = 1003, this.wrapR = 1001, this.generateMipmaps = false, this.flipY = false, this.unpackAlignment = 1;
  }
}
class Xm extends ca {
  constructor(t = null, e = 1, o = 1, a = 1) {
    super(null), this.isData3DTexture = true, this.image = { data: t, width: e, height: o, depth: a }, this.magFilter = 1003, this.minFilter = 1003, this.wrapR = 1001, this.generateMipmaps = false, this.flipY = false, this.unpackAlignment = 1;
  }
}
class Ac {
  constructor(t = 0, e = 0, o = 0, a = 1) {
    this.isQuaternion = true, this._x = t, this._y = e, this._z = o, this._w = a;
  }
  static slerpFlat(t, e, o, a, l, s, i) {
    let u = o[a + 0], d = o[a + 1], f = o[a + 2], p = o[a + 3];
    const g = l[s + 0], b = l[s + 1], h = l[s + 2], m = l[s + 3];
    if (i === 0) {
      t[e + 0] = u, t[e + 1] = d, t[e + 2] = f, t[e + 3] = p;
      return;
    }
    if (i === 1) {
      t[e + 0] = g, t[e + 1] = b, t[e + 2] = h, t[e + 3] = m;
      return;
    }
    if (p !== m || u !== g || d !== b || f !== h) {
      let c = 1 - i;
      const w = u * g + d * b + f * h + p * m, T = w >= 0 ? 1 : -1, P = 1 - w * w;
      if (P > Number.EPSILON) {
        const R = Math.sqrt(P), F = Math.atan2(R, w * T);
        c = Math.sin(c * F) / R, i = Math.sin(i * F) / R;
      }
      const k = i * T;
      if (u = u * c + g * k, d = d * c + b * k, f = f * c + h * k, p = p * c + m * k, c === 1 - i) {
        const R = 1 / Math.sqrt(u * u + d * d + f * f + p * p);
        u *= R, d *= R, f *= R, p *= R;
      }
    }
    t[e] = u, t[e + 1] = d, t[e + 2] = f, t[e + 3] = p;
  }
  static multiplyQuaternionsFlat(t, e, o, a, l, s) {
    const i = o[a], u = o[a + 1], d = o[a + 2], f = o[a + 3], p = l[s], g = l[s + 1], b = l[s + 2], h = l[s + 3];
    return t[e] = i * h + f * p + u * b - d * g, t[e + 1] = u * h + f * g + d * p - i * b, t[e + 2] = d * h + f * b + i * g - u * p, t[e + 3] = f * h - i * p - u * g - d * b, t;
  }
  get x() {
    return this._x;
  }
  set x(t) {
    this._x = t, this._onChangeCallback();
  }
  get y() {
    return this._y;
  }
  set y(t) {
    this._y = t, this._onChangeCallback();
  }
  get z() {
    return this._z;
  }
  set z(t) {
    this._z = t, this._onChangeCallback();
  }
  get w() {
    return this._w;
  }
  set w(t) {
    this._w = t, this._onChangeCallback();
  }
  set(t, e, o, a) {
    return this._x = t, this._y = e, this._z = o, this._w = a, this._onChangeCallback(), this;
  }
  clone() {
    return new this.constructor(this._x, this._y, this._z, this._w);
  }
  copy(t) {
    return this._x = t.x, this._y = t.y, this._z = t.z, this._w = t.w, this._onChangeCallback(), this;
  }
  setFromEuler(t, e) {
    if (!(t && t.isEuler)) throw new Error("THREE.Quaternion: .setFromEuler() now expects an Euler rotation rather than a Vector3 and order.");
    const o = t._x, a = t._y, l = t._z, s = t._order, i = Math.cos, u = Math.sin, d = i(o / 2), f = i(a / 2), p = i(l / 2), g = u(o / 2), b = u(a / 2), h = u(l / 2);
    switch (s) {
      case "XYZ":
        this._x = g * f * p + d * b * h, this._y = d * b * p - g * f * h, this._z = d * f * h + g * b * p, this._w = d * f * p - g * b * h;
        break;
      case "YXZ":
        this._x = g * f * p + d * b * h, this._y = d * b * p - g * f * h, this._z = d * f * h - g * b * p, this._w = d * f * p + g * b * h;
        break;
      case "ZXY":
        this._x = g * f * p - d * b * h, this._y = d * b * p + g * f * h, this._z = d * f * h + g * b * p, this._w = d * f * p - g * b * h;
        break;
      case "ZYX":
        this._x = g * f * p - d * b * h, this._y = d * b * p + g * f * h, this._z = d * f * h - g * b * p, this._w = d * f * p + g * b * h;
        break;
      case "YZX":
        this._x = g * f * p + d * b * h, this._y = d * b * p + g * f * h, this._z = d * f * h - g * b * p, this._w = d * f * p - g * b * h;
        break;
      case "XZY":
        this._x = g * f * p - d * b * h, this._y = d * b * p - g * f * h, this._z = d * f * h + g * b * p, this._w = d * f * p + g * b * h;
        break;
      default:
        console.warn("THREE.Quaternion: .setFromEuler() encountered an unknown order: " + s);
    }
    return e !== false && this._onChangeCallback(), this;
  }
  setFromAxisAngle(t, e) {
    const o = e / 2, a = Math.sin(o);
    return this._x = t.x * a, this._y = t.y * a, this._z = t.z * a, this._w = Math.cos(o), this._onChangeCallback(), this;
  }
  setFromRotationMatrix(t) {
    const e = t.elements, o = e[0], a = e[4], l = e[8], s = e[1], i = e[5], u = e[9], d = e[2], f = e[6], p = e[10], g = o + i + p;
    if (g > 0) {
      const b = 0.5 / Math.sqrt(g + 1);
      this._w = 0.25 / b, this._x = (f - u) * b, this._y = (l - d) * b, this._z = (s - a) * b;
    } else if (o > i && o > p) {
      const b = 2 * Math.sqrt(1 + o - i - p);
      this._w = (f - u) / b, this._x = 0.25 * b, this._y = (a + s) / b, this._z = (l + d) / b;
    } else if (i > p) {
      const b = 2 * Math.sqrt(1 + i - o - p);
      this._w = (l - d) / b, this._x = (a + s) / b, this._y = 0.25 * b, this._z = (u + f) / b;
    } else {
      const b = 2 * Math.sqrt(1 + p - o - i);
      this._w = (s - a) / b, this._x = (l + d) / b, this._y = (u + f) / b, this._z = 0.25 * b;
    }
    return this._onChangeCallback(), this;
  }
  setFromUnitVectors(t, e) {
    let o = t.dot(e) + 1;
    return o < Number.EPSILON ? (o = 0, Math.abs(t.x) > Math.abs(t.z) ? (this._x = -t.y, this._y = t.x, this._z = 0, this._w = o) : (this._x = 0, this._y = -t.z, this._z = t.y, this._w = o)) : (this._x = t.y * e.z - t.z * e.y, this._y = t.z * e.x - t.x * e.z, this._z = t.x * e.y - t.y * e.x, this._w = o), this.normalize();
  }
  angleTo(t) {
    return 2 * Math.acos(Math.abs(sa(this.dot(t), -1, 1)));
  }
  rotateTowards(t, e) {
    const o = this.angleTo(t);
    if (o === 0) return this;
    const a = Math.min(1, e / o);
    return this.slerp(t, a), this;
  }
  identity() {
    return this.set(0, 0, 0, 1);
  }
  invert() {
    return this.conjugate();
  }
  conjugate() {
    return this._x *= -1, this._y *= -1, this._z *= -1, this._onChangeCallback(), this;
  }
  dot(t) {
    return this._x * t._x + this._y * t._y + this._z * t._z + this._w * t._w;
  }
  lengthSq() {
    return this._x * this._x + this._y * this._y + this._z * this._z + this._w * this._w;
  }
  length() {
    return Math.sqrt(this._x * this._x + this._y * this._y + this._z * this._z + this._w * this._w);
  }
  normalize() {
    let t = this.length();
    return t === 0 ? (this._x = 0, this._y = 0, this._z = 0, this._w = 1) : (t = 1 / t, this._x = this._x * t, this._y = this._y * t, this._z = this._z * t, this._w = this._w * t), this._onChangeCallback(), this;
  }
  multiply(t) {
    return this.multiplyQuaternions(this, t);
  }
  premultiply(t) {
    return this.multiplyQuaternions(t, this);
  }
  multiplyQuaternions(t, e) {
    const o = t._x, a = t._y, l = t._z, s = t._w, i = e._x, u = e._y, d = e._z, f = e._w;
    return this._x = o * f + s * i + a * d - l * u, this._y = a * f + s * u + l * i - o * d, this._z = l * f + s * d + o * u - a * i, this._w = s * f - o * i - a * u - l * d, this._onChangeCallback(), this;
  }
  slerp(t, e) {
    if (e === 0) return this;
    if (e === 1) return this.copy(t);
    const o = this._x, a = this._y, l = this._z, s = this._w;
    let i = s * t._w + o * t._x + a * t._y + l * t._z;
    if (i < 0 ? (this._w = -t._w, this._x = -t._x, this._y = -t._y, this._z = -t._z, i = -i) : this.copy(t), i >= 1) return this._w = s, this._x = o, this._y = a, this._z = l, this;
    const u = 1 - i * i;
    if (u <= Number.EPSILON) {
      const b = 1 - e;
      return this._w = b * s + e * this._w, this._x = b * o + e * this._x, this._y = b * a + e * this._y, this._z = b * l + e * this._z, this.normalize(), this._onChangeCallback(), this;
    }
    const d = Math.sqrt(u), f = Math.atan2(d, i), p = Math.sin((1 - e) * f) / d, g = Math.sin(e * f) / d;
    return this._w = s * p + this._w * g, this._x = o * p + this._x * g, this._y = a * p + this._y * g, this._z = l * p + this._z * g, this._onChangeCallback(), this;
  }
  slerpQuaternions(t, e, o) {
    return this.copy(t).slerp(e, o);
  }
  random() {
    const t = Math.random(), e = Math.sqrt(1 - t), o = Math.sqrt(t), a = 2 * Math.PI * Math.random(), l = 2 * Math.PI * Math.random();
    return this.set(e * Math.cos(a), o * Math.sin(l), o * Math.cos(l), e * Math.sin(a));
  }
  equals(t) {
    return t._x === this._x && t._y === this._y && t._z === this._z && t._w === this._w;
  }
  fromArray(t, e = 0) {
    return this._x = t[e], this._y = t[e + 1], this._z = t[e + 2], this._w = t[e + 3], this._onChangeCallback(), this;
  }
  toArray(t = [], e = 0) {
    return t[e] = this._x, t[e + 1] = this._y, t[e + 2] = this._z, t[e + 3] = this._w, t;
  }
  fromBufferAttribute(t, e) {
    return this._x = t.getX(e), this._y = t.getY(e), this._z = t.getZ(e), this._w = t.getW(e), this;
  }
  _onChange(t) {
    return this._onChangeCallback = t, this;
  }
  _onChangeCallback() {
  }
  *[Symbol.iterator]() {
    yield this._x, yield this._y, yield this._z, yield this._w;
  }
}
class Br {
  constructor(t = 0, e = 0, o = 0) {
    Br.prototype.isVector3 = true, this.x = t, this.y = e, this.z = o;
  }
  set(t, e, o) {
    return o === void 0 && (o = this.z), this.x = t, this.y = e, this.z = o, this;
  }
  setScalar(t) {
    return this.x = t, this.y = t, this.z = t, this;
  }
  setX(t) {
    return this.x = t, this;
  }
  setY(t) {
    return this.y = t, this;
  }
  setZ(t) {
    return this.z = t, this;
  }
  setComponent(t, e) {
    switch (t) {
      case 0:
        this.x = e;
        break;
      case 1:
        this.y = e;
        break;
      case 2:
        this.z = e;
        break;
      default:
        throw new Error("index is out of range: " + t);
    }
    return this;
  }
  getComponent(t) {
    switch (t) {
      case 0:
        return this.x;
      case 1:
        return this.y;
      case 2:
        return this.z;
      default:
        throw new Error("index is out of range: " + t);
    }
  }
  clone() {
    return new this.constructor(this.x, this.y, this.z);
  }
  copy(t) {
    return this.x = t.x, this.y = t.y, this.z = t.z, this;
  }
  add(t) {
    return this.x += t.x, this.y += t.y, this.z += t.z, this;
  }
  addScalar(t) {
    return this.x += t, this.y += t, this.z += t, this;
  }
  addVectors(t, e) {
    return this.x = t.x + e.x, this.y = t.y + e.y, this.z = t.z + e.z, this;
  }
  addScaledVector(t, e) {
    return this.x += t.x * e, this.y += t.y * e, this.z += t.z * e, this;
  }
  sub(t) {
    return this.x -= t.x, this.y -= t.y, this.z -= t.z, this;
  }
  subScalar(t) {
    return this.x -= t, this.y -= t, this.z -= t, this;
  }
  subVectors(t, e) {
    return this.x = t.x - e.x, this.y = t.y - e.y, this.z = t.z - e.z, this;
  }
  multiply(t) {
    return this.x *= t.x, this.y *= t.y, this.z *= t.z, this;
  }
  multiplyScalar(t) {
    return this.x *= t, this.y *= t, this.z *= t, this;
  }
  multiplyVectors(t, e) {
    return this.x = t.x * e.x, this.y = t.y * e.y, this.z = t.z * e.z, this;
  }
  applyEuler(t) {
    return this.applyQuaternion(rh.setFromEuler(t));
  }
  applyAxisAngle(t, e) {
    return this.applyQuaternion(rh.setFromAxisAngle(t, e));
  }
  applyMatrix3(t) {
    const e = this.x, o = this.y, a = this.z, l = t.elements;
    return this.x = l[0] * e + l[3] * o + l[6] * a, this.y = l[1] * e + l[4] * o + l[7] * a, this.z = l[2] * e + l[5] * o + l[8] * a, this;
  }
  applyNormalMatrix(t) {
    return this.applyMatrix3(t).normalize();
  }
  applyMatrix4(t) {
    const e = this.x, o = this.y, a = this.z, l = t.elements, s = 1 / (l[3] * e + l[7] * o + l[11] * a + l[15]);
    return this.x = (l[0] * e + l[4] * o + l[8] * a + l[12]) * s, this.y = (l[1] * e + l[5] * o + l[9] * a + l[13]) * s, this.z = (l[2] * e + l[6] * o + l[10] * a + l[14]) * s, this;
  }
  applyQuaternion(t) {
    const e = this.x, o = this.y, a = this.z, l = t.x, s = t.y, i = t.z, u = t.w, d = u * e + s * a - i * o, f = u * o + i * e - l * a, p = u * a + l * o - s * e, g = -l * e - s * o - i * a;
    return this.x = d * u + g * -l + f * -i - p * -s, this.y = f * u + g * -s + p * -l - d * -i, this.z = p * u + g * -i + d * -s - f * -l, this;
  }
  project(t) {
    return this.applyMatrix4(t.matrixWorldInverse).applyMatrix4(t.projectionMatrix);
  }
  unproject(t) {
    return this.applyMatrix4(t.projectionMatrixInverse).applyMatrix4(t.matrixWorld);
  }
  transformDirection(t) {
    const e = this.x, o = this.y, a = this.z, l = t.elements;
    return this.x = l[0] * e + l[4] * o + l[8] * a, this.y = l[1] * e + l[5] * o + l[9] * a, this.z = l[2] * e + l[6] * o + l[10] * a, this.normalize();
  }
  divide(t) {
    return this.x /= t.x, this.y /= t.y, this.z /= t.z, this;
  }
  divideScalar(t) {
    return this.multiplyScalar(1 / t);
  }
  min(t) {
    return this.x = Math.min(this.x, t.x), this.y = Math.min(this.y, t.y), this.z = Math.min(this.z, t.z), this;
  }
  max(t) {
    return this.x = Math.max(this.x, t.x), this.y = Math.max(this.y, t.y), this.z = Math.max(this.z, t.z), this;
  }
  clamp(t, e) {
    return this.x = Math.max(t.x, Math.min(e.x, this.x)), this.y = Math.max(t.y, Math.min(e.y, this.y)), this.z = Math.max(t.z, Math.min(e.z, this.z)), this;
  }
  clampScalar(t, e) {
    return this.x = Math.max(t, Math.min(e, this.x)), this.y = Math.max(t, Math.min(e, this.y)), this.z = Math.max(t, Math.min(e, this.z)), this;
  }
  clampLength(t, e) {
    const o = this.length();
    return this.divideScalar(o || 1).multiplyScalar(Math.max(t, Math.min(e, o)));
  }
  floor() {
    return this.x = Math.floor(this.x), this.y = Math.floor(this.y), this.z = Math.floor(this.z), this;
  }
  ceil() {
    return this.x = Math.ceil(this.x), this.y = Math.ceil(this.y), this.z = Math.ceil(this.z), this;
  }
  round() {
    return this.x = Math.round(this.x), this.y = Math.round(this.y), this.z = Math.round(this.z), this;
  }
  roundToZero() {
    return this.x = this.x < 0 ? Math.ceil(this.x) : Math.floor(this.x), this.y = this.y < 0 ? Math.ceil(this.y) : Math.floor(this.y), this.z = this.z < 0 ? Math.ceil(this.z) : Math.floor(this.z), this;
  }
  negate() {
    return this.x = -this.x, this.y = -this.y, this.z = -this.z, this;
  }
  dot(t) {
    return this.x * t.x + this.y * t.y + this.z * t.z;
  }
  lengthSq() {
    return this.x * this.x + this.y * this.y + this.z * this.z;
  }
  length() {
    return Math.sqrt(this.x * this.x + this.y * this.y + this.z * this.z);
  }
  manhattanLength() {
    return Math.abs(this.x) + Math.abs(this.y) + Math.abs(this.z);
  }
  normalize() {
    return this.divideScalar(this.length() || 1);
  }
  setLength(t) {
    return this.normalize().multiplyScalar(t);
  }
  lerp(t, e) {
    return this.x += (t.x - this.x) * e, this.y += (t.y - this.y) * e, this.z += (t.z - this.z) * e, this;
  }
  lerpVectors(t, e, o) {
    return this.x = t.x + (e.x - t.x) * o, this.y = t.y + (e.y - t.y) * o, this.z = t.z + (e.z - t.z) * o, this;
  }
  cross(t) {
    return this.crossVectors(this, t);
  }
  crossVectors(t, e) {
    const o = t.x, a = t.y, l = t.z, s = e.x, i = e.y, u = e.z;
    return this.x = a * u - l * i, this.y = l * s - o * u, this.z = o * i - a * s, this;
  }
  projectOnVector(t) {
    const e = t.lengthSq();
    if (e === 0) return this.set(0, 0, 0);
    const o = t.dot(this) / e;
    return this.copy(t).multiplyScalar(o);
  }
  projectOnPlane(t) {
    return yf.copy(this).projectOnVector(t), this.sub(yf);
  }
  reflect(t) {
    return this.sub(yf.copy(t).multiplyScalar(2 * this.dot(t)));
  }
  angleTo(t) {
    const e = Math.sqrt(this.lengthSq() * t.lengthSq());
    if (e === 0) return Math.PI / 2;
    const o = this.dot(t) / e;
    return Math.acos(sa(o, -1, 1));
  }
  distanceTo(t) {
    return Math.sqrt(this.distanceToSquared(t));
  }
  distanceToSquared(t) {
    const e = this.x - t.x, o = this.y - t.y, a = this.z - t.z;
    return e * e + o * o + a * a;
  }
  manhattanDistanceTo(t) {
    return Math.abs(this.x - t.x) + Math.abs(this.y - t.y) + Math.abs(this.z - t.z);
  }
  setFromSpherical(t) {
    return this.setFromSphericalCoords(t.radius, t.phi, t.theta);
  }
  setFromSphericalCoords(t, e, o) {
    const a = Math.sin(e) * t;
    return this.x = a * Math.sin(o), this.y = Math.cos(e) * t, this.z = a * Math.cos(o), this;
  }
  setFromCylindrical(t) {
    return this.setFromCylindricalCoords(t.radius, t.theta, t.y);
  }
  setFromCylindricalCoords(t, e, o) {
    return this.x = t * Math.sin(e), this.y = o, this.z = t * Math.cos(e), this;
  }
  setFromMatrixPosition(t) {
    const e = t.elements;
    return this.x = e[12], this.y = e[13], this.z = e[14], this;
  }
  setFromMatrixScale(t) {
    const e = this.setFromMatrixColumn(t, 0).length(), o = this.setFromMatrixColumn(t, 1).length(), a = this.setFromMatrixColumn(t, 2).length();
    return this.x = e, this.y = o, this.z = a, this;
  }
  setFromMatrixColumn(t, e) {
    return this.fromArray(t.elements, e * 4);
  }
  setFromMatrix3Column(t, e) {
    return this.fromArray(t.elements, e * 3);
  }
  setFromEuler(t) {
    return this.x = t._x, this.y = t._y, this.z = t._z, this;
  }
  equals(t) {
    return t.x === this.x && t.y === this.y && t.z === this.z;
  }
  fromArray(t, e = 0) {
    return this.x = t[e], this.y = t[e + 1], this.z = t[e + 2], this;
  }
  toArray(t = [], e = 0) {
    return t[e] = this.x, t[e + 1] = this.y, t[e + 2] = this.z, t;
  }
  fromBufferAttribute(t, e) {
    return this.x = t.getX(e), this.y = t.getY(e), this.z = t.getZ(e), this;
  }
  random() {
    return this.x = Math.random(), this.y = Math.random(), this.z = Math.random(), this;
  }
  randomDirection() {
    const t = (Math.random() - 0.5) * 2, e = Math.random() * Math.PI * 2, o = Math.sqrt(1 - t ** 2);
    return this.x = o * Math.cos(e), this.y = o * Math.sin(e), this.z = t, this;
  }
  *[Symbol.iterator]() {
    yield this.x, yield this.y, yield this.z;
  }
}
const yf = new Br(), rh = new Ac();
class Tc {
  constructor(t = new Br(1 / 0, 1 / 0, 1 / 0), e = new Br(-1 / 0, -1 / 0, -1 / 0)) {
    this.isBox3 = true, this.min = t, this.max = e;
  }
  set(t, e) {
    return this.min.copy(t), this.max.copy(e), this;
  }
  setFromArray(t) {
    let e = 1 / 0, o = 1 / 0, a = 1 / 0, l = -1 / 0, s = -1 / 0, i = -1 / 0;
    for (let u = 0, d = t.length; u < d; u += 3) {
      const f = t[u], p = t[u + 1], g = t[u + 2];
      f < e && (e = f), p < o && (o = p), g < a && (a = g), f > l && (l = f), p > s && (s = p), g > i && (i = g);
    }
    return this.min.set(e, o, a), this.max.set(l, s, i), this;
  }
  setFromBufferAttribute(t) {
    let e = 1 / 0, o = 1 / 0, a = 1 / 0, l = -1 / 0, s = -1 / 0, i = -1 / 0;
    for (let u = 0, d = t.count; u < d; u++) {
      const f = t.getX(u), p = t.getY(u), g = t.getZ(u);
      f < e && (e = f), p < o && (o = p), g < a && (a = g), f > l && (l = f), p > s && (s = p), g > i && (i = g);
    }
    return this.min.set(e, o, a), this.max.set(l, s, i), this;
  }
  setFromPoints(t) {
    this.makeEmpty();
    for (let e = 0, o = t.length; e < o; e++) this.expandByPoint(t[e]);
    return this;
  }
  setFromCenterAndSize(t, e) {
    const o = Ds.copy(e).multiplyScalar(0.5);
    return this.min.copy(t).sub(o), this.max.copy(t).add(o), this;
  }
  setFromObject(t, e = false) {
    return this.makeEmpty(), this.expandByObject(t, e);
  }
  clone() {
    return new this.constructor().copy(this);
  }
  copy(t) {
    return this.min.copy(t.min), this.max.copy(t.max), this;
  }
  makeEmpty() {
    return this.min.x = this.min.y = this.min.z = 1 / 0, this.max.x = this.max.y = this.max.z = -1 / 0, this;
  }
  isEmpty() {
    return this.max.x < this.min.x || this.max.y < this.min.y || this.max.z < this.min.z;
  }
  getCenter(t) {
    return this.isEmpty() ? t.set(0, 0, 0) : t.addVectors(this.min, this.max).multiplyScalar(0.5);
  }
  getSize(t) {
    return this.isEmpty() ? t.set(0, 0, 0) : t.subVectors(this.max, this.min);
  }
  expandByPoint(t) {
    return this.min.min(t), this.max.max(t), this;
  }
  expandByVector(t) {
    return this.min.sub(t), this.max.add(t), this;
  }
  expandByScalar(t) {
    return this.min.addScalar(-t), this.max.addScalar(t), this;
  }
  expandByObject(t, e = false) {
    t.updateWorldMatrix(false, false);
    const o = t.geometry;
    if (o !== void 0) if (e && o.attributes != null && o.attributes.position !== void 0) {
      const l = o.attributes.position;
      for (let s = 0, i = l.count; s < i; s++) Ds.fromBufferAttribute(l, s).applyMatrix4(t.matrixWorld), this.expandByPoint(Ds);
    } else o.boundingBox === null && o.computeBoundingBox(), gf.copy(o.boundingBox), gf.applyMatrix4(t.matrixWorld), this.union(gf);
    const a = t.children;
    for (let l = 0, s = a.length; l < s; l++) this.expandByObject(a[l], e);
    return this;
  }
  containsPoint(t) {
    return !(t.x < this.min.x || t.x > this.max.x || t.y < this.min.y || t.y > this.max.y || t.z < this.min.z || t.z > this.max.z);
  }
  containsBox(t) {
    return this.min.x <= t.min.x && t.max.x <= this.max.x && this.min.y <= t.min.y && t.max.y <= this.max.y && this.min.z <= t.min.z && t.max.z <= this.max.z;
  }
  getParameter(t, e) {
    return e.set((t.x - this.min.x) / (this.max.x - this.min.x), (t.y - this.min.y) / (this.max.y - this.min.y), (t.z - this.min.z) / (this.max.z - this.min.z));
  }
  intersectsBox(t) {
    return !(t.max.x < this.min.x || t.min.x > this.max.x || t.max.y < this.min.y || t.min.y > this.max.y || t.max.z < this.min.z || t.min.z > this.max.z);
  }
  intersectsSphere(t) {
    return this.clampPoint(t.center, Ds), Ds.distanceToSquared(t.center) <= t.radius * t.radius;
  }
  intersectsPlane(t) {
    let e, o;
    return t.normal.x > 0 ? (e = t.normal.x * this.min.x, o = t.normal.x * this.max.x) : (e = t.normal.x * this.max.x, o = t.normal.x * this.min.x), t.normal.y > 0 ? (e += t.normal.y * this.min.y, o += t.normal.y * this.max.y) : (e += t.normal.y * this.max.y, o += t.normal.y * this.min.y), t.normal.z > 0 ? (e += t.normal.z * this.min.z, o += t.normal.z * this.max.z) : (e += t.normal.z * this.max.z, o += t.normal.z * this.min.z), e <= -t.constant && o >= -t.constant;
  }
  intersectsTriangle(t) {
    if (this.isEmpty()) return false;
    this.getCenter(oc), el.subVectors(this.max, oc), du.subVectors(t.a, oc), mu.subVectors(t.b, oc), yu.subVectors(t.c, oc), vs.subVectors(mu, du), bs.subVectors(yu, mu), Fs.subVectors(du, yu);
    let e = [0, -vs.z, vs.y, 0, -bs.z, bs.y, 0, -Fs.z, Fs.y, vs.z, 0, -vs.x, bs.z, 0, -bs.x, Fs.z, 0, -Fs.x, -vs.y, vs.x, 0, -bs.y, bs.x, 0, -Fs.y, Fs.x, 0];
    return !vf(e, du, mu, yu, el) || (e = [1, 0, 0, 0, 1, 0, 0, 0, 1], !vf(e, du, mu, yu, el)) ? false : (rl.crossVectors(vs, bs), e = [rl.x, rl.y, rl.z], vf(e, du, mu, yu, el));
  }
  clampPoint(t, e) {
    return e.copy(t).clamp(this.min, this.max);
  }
  distanceToPoint(t) {
    return Ds.copy(t).clamp(this.min, this.max).sub(t).length();
  }
  getBoundingSphere(t) {
    return this.getCenter(t.center), t.radius = this.getSize(Ds).length() * 0.5, t;
  }
  intersect(t) {
    return this.min.max(t.min), this.max.min(t.max), this.isEmpty() && this.makeEmpty(), this;
  }
  union(t) {
    return this.min.min(t.min), this.max.max(t.max), this;
  }
  applyMatrix4(t) {
    return this.isEmpty() ? this : (Qa[0].set(this.min.x, this.min.y, this.min.z).applyMatrix4(t), Qa[1].set(this.min.x, this.min.y, this.max.z).applyMatrix4(t), Qa[2].set(this.min.x, this.max.y, this.min.z).applyMatrix4(t), Qa[3].set(this.min.x, this.max.y, this.max.z).applyMatrix4(t), Qa[4].set(this.max.x, this.min.y, this.min.z).applyMatrix4(t), Qa[5].set(this.max.x, this.min.y, this.max.z).applyMatrix4(t), Qa[6].set(this.max.x, this.max.y, this.min.z).applyMatrix4(t), Qa[7].set(this.max.x, this.max.y, this.max.z).applyMatrix4(t), this.setFromPoints(Qa), this);
  }
  translate(t) {
    return this.min.add(t), this.max.add(t), this;
  }
  equals(t) {
    return t.min.equals(this.min) && t.max.equals(this.max);
  }
}
const Qa = [new Br(), new Br(), new Br(), new Br(), new Br(), new Br(), new Br(), new Br()], Ds = new Br(), gf = new Tc(), du = new Br(), mu = new Br(), yu = new Br(), vs = new Br(), bs = new Br(), Fs = new Br(), oc = new Br(), el = new Br(), rl = new Br(), Us = new Br();
function vf(E, t, e, o, a) {
  for (let l = 0, s = E.length - 3; l <= s; l += 3) {
    Us.fromArray(E, l);
    const i = a.x * Math.abs(Us.x) + a.y * Math.abs(Us.y) + a.z * Math.abs(Us.z), u = t.dot(Us), d = e.dot(Us), f = o.dot(Us);
    if (Math.max(-Math.max(u, d, f), Math.min(u, d, f)) > i) return false;
  }
  return true;
}
const Km = new Tc(), nh = new Br(), nl = new Br(), bf = new Br();
class _c {
  constructor(t = new Br(), e = -1) {
    this.center = t, this.radius = e;
  }
  set(t, e) {
    return this.center.copy(t), this.radius = e, this;
  }
  setFromPoints(t, e) {
    const o = this.center;
    e !== void 0 ? o.copy(e) : Km.setFromPoints(t).getCenter(o);
    let a = 0;
    for (let l = 0, s = t.length; l < s; l++) a = Math.max(a, o.distanceToSquared(t[l]));
    return this.radius = Math.sqrt(a), this;
  }
  copy(t) {
    return this.center.copy(t.center), this.radius = t.radius, this;
  }
  isEmpty() {
    return this.radius < 0;
  }
  makeEmpty() {
    return this.center.set(0, 0, 0), this.radius = -1, this;
  }
  containsPoint(t) {
    return t.distanceToSquared(this.center) <= this.radius * this.radius;
  }
  distanceToPoint(t) {
    return t.distanceTo(this.center) - this.radius;
  }
  intersectsSphere(t) {
    const e = this.radius + t.radius;
    return t.center.distanceToSquared(this.center) <= e * e;
  }
  intersectsBox(t) {
    return t.intersectsSphere(this);
  }
  intersectsPlane(t) {
    return Math.abs(t.distanceToPoint(this.center)) <= this.radius;
  }
  clampPoint(t, e) {
    const o = this.center.distanceToSquared(t);
    return e.copy(t), o > this.radius * this.radius && (e.sub(this.center).normalize(), e.multiplyScalar(this.radius).add(this.center)), e;
  }
  getBoundingBox(t) {
    return this.isEmpty() ? (t.makeEmpty(), t) : (t.set(this.center, this.center), t.expandByScalar(this.radius), t);
  }
  applyMatrix4(t) {
    return this.center.applyMatrix4(t), this.radius = this.radius * t.getMaxScaleOnAxis(), this;
  }
  translate(t) {
    return this.center.add(t), this;
  }
  expandByPoint(t) {
    bf.subVectors(t, this.center);
    const e = bf.lengthSq();
    if (e > this.radius * this.radius) {
      const o = Math.sqrt(e), a = (o - this.radius) * 0.5;
      this.center.add(bf.multiplyScalar(a / o)), this.radius += a;
    }
    return this;
  }
  union(t) {
    return this.center.equals(t.center) === true ? nl.set(0, 0, 1).multiplyScalar(t.radius) : nl.subVectors(t.center, this.center).normalize().multiplyScalar(t.radius), this.expandByPoint(nh.copy(t.center).add(nl)), this.expandByPoint(nh.copy(t.center).sub(nl)), this;
  }
  equals(t) {
    return t.center.equals(this.center) && t.radius === this.radius;
  }
  clone() {
    return new this.constructor().copy(this);
  }
}
const Ja = new Br(), wf = new Br(), ol = new Br(), ws = new Br(), Sf = new Br(), il = new Br(), xf = new Br();
class $m {
  constructor(t = new Br(), e = new Br(0, 0, -1)) {
    this.origin = t, this.direction = e;
  }
  set(t, e) {
    return this.origin.copy(t), this.direction.copy(e), this;
  }
  copy(t) {
    return this.origin.copy(t.origin), this.direction.copy(t.direction), this;
  }
  at(t, e) {
    return e.copy(this.direction).multiplyScalar(t).add(this.origin);
  }
  lookAt(t) {
    return this.direction.copy(t).sub(this.origin).normalize(), this;
  }
  recast(t) {
    return this.origin.copy(this.at(t, Ja)), this;
  }
  closestPointToPoint(t, e) {
    e.subVectors(t, this.origin);
    const o = e.dot(this.direction);
    return o < 0 ? e.copy(this.origin) : e.copy(this.direction).multiplyScalar(o).add(this.origin);
  }
  distanceToPoint(t) {
    return Math.sqrt(this.distanceSqToPoint(t));
  }
  distanceSqToPoint(t) {
    const e = Ja.subVectors(t, this.origin).dot(this.direction);
    return e < 0 ? this.origin.distanceToSquared(t) : (Ja.copy(this.direction).multiplyScalar(e).add(this.origin), Ja.distanceToSquared(t));
  }
  distanceSqToSegment(t, e, o, a) {
    wf.copy(t).add(e).multiplyScalar(0.5), ol.copy(e).sub(t).normalize(), ws.copy(this.origin).sub(wf);
    const l = t.distanceTo(e) * 0.5, s = -this.direction.dot(ol), i = ws.dot(this.direction), u = -ws.dot(ol), d = ws.lengthSq(), f = Math.abs(1 - s * s);
    let p, g, b, h;
    if (f > 0) if (p = s * u - i, g = s * i - u, h = l * f, p >= 0) if (g >= -h) if (g <= h) {
      const m = 1 / f;
      p *= m, g *= m, b = p * (p + s * g + 2 * i) + g * (s * p + g + 2 * u) + d;
    } else g = l, p = Math.max(0, -(s * g + i)), b = -p * p + g * (g + 2 * u) + d;
    else g = -l, p = Math.max(0, -(s * g + i)), b = -p * p + g * (g + 2 * u) + d;
    else g <= -h ? (p = Math.max(0, -(-s * l + i)), g = p > 0 ? -l : Math.min(Math.max(-l, -u), l), b = -p * p + g * (g + 2 * u) + d) : g <= h ? (p = 0, g = Math.min(Math.max(-l, -u), l), b = g * (g + 2 * u) + d) : (p = Math.max(0, -(s * l + i)), g = p > 0 ? l : Math.min(Math.max(-l, -u), l), b = -p * p + g * (g + 2 * u) + d);
    else g = s > 0 ? -l : l, p = Math.max(0, -(s * g + i)), b = -p * p + g * (g + 2 * u) + d;
    return o && o.copy(this.direction).multiplyScalar(p).add(this.origin), a && a.copy(ol).multiplyScalar(g).add(wf), b;
  }
  intersectSphere(t, e) {
    Ja.subVectors(t.center, this.origin);
    const o = Ja.dot(this.direction), a = Ja.dot(Ja) - o * o, l = t.radius * t.radius;
    if (a > l) return null;
    const s = Math.sqrt(l - a), i = o - s, u = o + s;
    return i < 0 && u < 0 ? null : i < 0 ? this.at(u, e) : this.at(i, e);
  }
  intersectsSphere(t) {
    return this.distanceSqToPoint(t.center) <= t.radius * t.radius;
  }
  distanceToPlane(t) {
    const e = t.normal.dot(this.direction);
    if (e === 0) return t.distanceToPoint(this.origin) === 0 ? 0 : null;
    const o = -(this.origin.dot(t.normal) + t.constant) / e;
    return o >= 0 ? o : null;
  }
  intersectPlane(t, e) {
    const o = this.distanceToPlane(t);
    return o === null ? null : this.at(o, e);
  }
  intersectsPlane(t) {
    const e = t.distanceToPoint(this.origin);
    return e === 0 || t.normal.dot(this.direction) * e < 0;
  }
  intersectBox(t, e) {
    let o, a, l, s, i, u;
    const d = 1 / this.direction.x, f = 1 / this.direction.y, p = 1 / this.direction.z, g = this.origin;
    return d >= 0 ? (o = (t.min.x - g.x) * d, a = (t.max.x - g.x) * d) : (o = (t.max.x - g.x) * d, a = (t.min.x - g.x) * d), f >= 0 ? (l = (t.min.y - g.y) * f, s = (t.max.y - g.y) * f) : (l = (t.max.y - g.y) * f, s = (t.min.y - g.y) * f), o > s || l > a || ((l > o || o !== o) && (o = l), (s < a || a !== a) && (a = s), p >= 0 ? (i = (t.min.z - g.z) * p, u = (t.max.z - g.z) * p) : (i = (t.max.z - g.z) * p, u = (t.min.z - g.z) * p), o > u || i > a) || ((i > o || o !== o) && (o = i), (u < a || a !== a) && (a = u), a < 0) ? null : this.at(o >= 0 ? o : a, e);
  }
  intersectsBox(t) {
    return this.intersectBox(t, Ja) !== null;
  }
  intersectTriangle(t, e, o, a, l) {
    Sf.subVectors(e, t), il.subVectors(o, t), xf.crossVectors(Sf, il);
    let s = this.direction.dot(xf), i;
    if (s > 0) {
      if (a) return null;
      i = 1;
    } else if (s < 0) i = -1, s = -s;
    else return null;
    ws.subVectors(this.origin, t);
    const u = i * this.direction.dot(il.crossVectors(ws, il));
    if (u < 0) return null;
    const d = i * this.direction.dot(Sf.cross(ws));
    if (d < 0 || u + d > s) return null;
    const f = -i * ws.dot(xf);
    return f < 0 ? null : this.at(f / s, l);
  }
  applyMatrix4(t) {
    return this.origin.applyMatrix4(t), this.direction.transformDirection(t), this;
  }
  equals(t) {
    return t.origin.equals(this.origin) && t.direction.equals(this.direction);
  }
  clone() {
    return new this.constructor().copy(this);
  }
}
class Fi {
  constructor() {
    Fi.prototype.isMatrix4 = true, this.elements = [1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1];
  }
  set(t, e, o, a, l, s, i, u, d, f, p, g, b, h, m, c) {
    const w = this.elements;
    return w[0] = t, w[4] = e, w[8] = o, w[12] = a, w[1] = l, w[5] = s, w[9] = i, w[13] = u, w[2] = d, w[6] = f, w[10] = p, w[14] = g, w[3] = b, w[7] = h, w[11] = m, w[15] = c, this;
  }
  identity() {
    return this.set(1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1), this;
  }
  clone() {
    return new Fi().fromArray(this.elements);
  }
  copy(t) {
    const e = this.elements, o = t.elements;
    return e[0] = o[0], e[1] = o[1], e[2] = o[2], e[3] = o[3], e[4] = o[4], e[5] = o[5], e[6] = o[6], e[7] = o[7], e[8] = o[8], e[9] = o[9], e[10] = o[10], e[11] = o[11], e[12] = o[12], e[13] = o[13], e[14] = o[14], e[15] = o[15], this;
  }
  copyPosition(t) {
    const e = this.elements, o = t.elements;
    return e[12] = o[12], e[13] = o[13], e[14] = o[14], this;
  }
  setFromMatrix3(t) {
    const e = t.elements;
    return this.set(e[0], e[3], e[6], 0, e[1], e[4], e[7], 0, e[2], e[5], e[8], 0, 0, 0, 0, 1), this;
  }
  extractBasis(t, e, o) {
    return t.setFromMatrixColumn(this, 0), e.setFromMatrixColumn(this, 1), o.setFromMatrixColumn(this, 2), this;
  }
  makeBasis(t, e, o) {
    return this.set(t.x, e.x, o.x, 0, t.y, e.y, o.y, 0, t.z, e.z, o.z, 0, 0, 0, 0, 1), this;
  }
  extractRotation(t) {
    const e = this.elements, o = t.elements, a = 1 / gu.setFromMatrixColumn(t, 0).length(), l = 1 / gu.setFromMatrixColumn(t, 1).length(), s = 1 / gu.setFromMatrixColumn(t, 2).length();
    return e[0] = o[0] * a, e[1] = o[1] * a, e[2] = o[2] * a, e[3] = 0, e[4] = o[4] * l, e[5] = o[5] * l, e[6] = o[6] * l, e[7] = 0, e[8] = o[8] * s, e[9] = o[9] * s, e[10] = o[10] * s, e[11] = 0, e[12] = 0, e[13] = 0, e[14] = 0, e[15] = 1, this;
  }
  makeRotationFromEuler(t) {
    const e = this.elements, o = t.x, a = t.y, l = t.z, s = Math.cos(o), i = Math.sin(o), u = Math.cos(a), d = Math.sin(a), f = Math.cos(l), p = Math.sin(l);
    if (t.order === "XYZ") {
      const g = s * f, b = s * p, h = i * f, m = i * p;
      e[0] = u * f, e[4] = -u * p, e[8] = d, e[1] = b + h * d, e[5] = g - m * d, e[9] = -i * u, e[2] = m - g * d, e[6] = h + b * d, e[10] = s * u;
    } else if (t.order === "YXZ") {
      const g = u * f, b = u * p, h = d * f, m = d * p;
      e[0] = g + m * i, e[4] = h * i - b, e[8] = s * d, e[1] = s * p, e[5] = s * f, e[9] = -i, e[2] = b * i - h, e[6] = m + g * i, e[10] = s * u;
    } else if (t.order === "ZXY") {
      const g = u * f, b = u * p, h = d * f, m = d * p;
      e[0] = g - m * i, e[4] = -s * p, e[8] = h + b * i, e[1] = b + h * i, e[5] = s * f, e[9] = m - g * i, e[2] = -s * d, e[6] = i, e[10] = s * u;
    } else if (t.order === "ZYX") {
      const g = s * f, b = s * p, h = i * f, m = i * p;
      e[0] = u * f, e[4] = h * d - b, e[8] = g * d + m, e[1] = u * p, e[5] = m * d + g, e[9] = b * d - h, e[2] = -d, e[6] = i * u, e[10] = s * u;
    } else if (t.order === "YZX") {
      const g = s * u, b = s * d, h = i * u, m = i * d;
      e[0] = u * f, e[4] = m - g * p, e[8] = h * p + b, e[1] = p, e[5] = s * f, e[9] = -i * f, e[2] = -d * f, e[6] = b * p + h, e[10] = g - m * p;
    } else if (t.order === "XZY") {
      const g = s * u, b = s * d, h = i * u, m = i * d;
      e[0] = u * f, e[4] = -p, e[8] = d * f, e[1] = g * p + m, e[5] = s * f, e[9] = b * p - h, e[2] = h * p - b, e[6] = i * f, e[10] = m * p + g;
    }
    return e[3] = 0, e[7] = 0, e[11] = 0, e[12] = 0, e[13] = 0, e[14] = 0, e[15] = 1, this;
  }
  makeRotationFromQuaternion(t) {
    return this.compose(Ym, t, Zm);
  }
  lookAt(t, e, o) {
    const a = this.elements;
    return ia.subVectors(t, e), ia.lengthSq() === 0 && (ia.z = 1), ia.normalize(), Ss.crossVectors(o, ia), Ss.lengthSq() === 0 && (Math.abs(o.z) === 1 ? ia.x += 1e-4 : ia.z += 1e-4, ia.normalize(), Ss.crossVectors(o, ia)), Ss.normalize(), al.crossVectors(ia, Ss), a[0] = Ss.x, a[4] = al.x, a[8] = ia.x, a[1] = Ss.y, a[5] = al.y, a[9] = ia.y, a[2] = Ss.z, a[6] = al.z, a[10] = ia.z, this;
  }
  multiply(t) {
    return this.multiplyMatrices(this, t);
  }
  premultiply(t) {
    return this.multiplyMatrices(t, this);
  }
  multiplyMatrices(t, e) {
    const o = t.elements, a = e.elements, l = this.elements, s = o[0], i = o[4], u = o[8], d = o[12], f = o[1], p = o[5], g = o[9], b = o[13], h = o[2], m = o[6], c = o[10], w = o[14], T = o[3], P = o[7], k = o[11], R = o[15], F = a[0], v = a[4], U = a[8], M = a[12], Z = a[1], D = a[5], V = a[9], S = a[13], x = a[2], B = a[6], W = a[10], lt = a[14], pt = a[3], at = a[7], rt = a[11], ot = a[15];
    return l[0] = s * F + i * Z + u * x + d * pt, l[4] = s * v + i * D + u * B + d * at, l[8] = s * U + i * V + u * W + d * rt, l[12] = s * M + i * S + u * lt + d * ot, l[1] = f * F + p * Z + g * x + b * pt, l[5] = f * v + p * D + g * B + b * at, l[9] = f * U + p * V + g * W + b * rt, l[13] = f * M + p * S + g * lt + b * ot, l[2] = h * F + m * Z + c * x + w * pt, l[6] = h * v + m * D + c * B + w * at, l[10] = h * U + m * V + c * W + w * rt, l[14] = h * M + m * S + c * lt + w * ot, l[3] = T * F + P * Z + k * x + R * pt, l[7] = T * v + P * D + k * B + R * at, l[11] = T * U + P * V + k * W + R * rt, l[15] = T * M + P * S + k * lt + R * ot, this;
  }
  multiplyScalar(t) {
    const e = this.elements;
    return e[0] *= t, e[4] *= t, e[8] *= t, e[12] *= t, e[1] *= t, e[5] *= t, e[9] *= t, e[13] *= t, e[2] *= t, e[6] *= t, e[10] *= t, e[14] *= t, e[3] *= t, e[7] *= t, e[11] *= t, e[15] *= t, this;
  }
  determinant() {
    const t = this.elements, e = t[0], o = t[4], a = t[8], l = t[12], s = t[1], i = t[5], u = t[9], d = t[13], f = t[2], p = t[6], g = t[10], b = t[14], h = t[3], m = t[7], c = t[11], w = t[15];
    return h * (+l * u * p - a * d * p - l * i * g + o * d * g + a * i * b - o * u * b) + m * (+e * u * b - e * d * g + l * s * g - a * s * b + a * d * f - l * u * f) + c * (+e * d * p - e * i * b - l * s * p + o * s * b + l * i * f - o * d * f) + w * (-a * i * f - e * u * p + e * i * g + a * s * p - o * s * g + o * u * f);
  }
  transpose() {
    const t = this.elements;
    let e;
    return e = t[1], t[1] = t[4], t[4] = e, e = t[2], t[2] = t[8], t[8] = e, e = t[6], t[6] = t[9], t[9] = e, e = t[3], t[3] = t[12], t[12] = e, e = t[7], t[7] = t[13], t[13] = e, e = t[11], t[11] = t[14], t[14] = e, this;
  }
  setPosition(t, e, o) {
    const a = this.elements;
    return t.isVector3 ? (a[12] = t.x, a[13] = t.y, a[14] = t.z) : (a[12] = t, a[13] = e, a[14] = o), this;
  }
  invert() {
    const t = this.elements, e = t[0], o = t[1], a = t[2], l = t[3], s = t[4], i = t[5], u = t[6], d = t[7], f = t[8], p = t[9], g = t[10], b = t[11], h = t[12], m = t[13], c = t[14], w = t[15], T = p * c * d - m * g * d + m * u * b - i * c * b - p * u * w + i * g * w, P = h * g * d - f * c * d - h * u * b + s * c * b + f * u * w - s * g * w, k = f * m * d - h * p * d + h * i * b - s * m * b - f * i * w + s * p * w, R = h * p * u - f * m * u - h * i * g + s * m * g + f * i * c - s * p * c, F = e * T + o * P + a * k + l * R;
    if (F === 0) return this.set(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0);
    const v = 1 / F;
    return t[0] = T * v, t[1] = (m * g * l - p * c * l - m * a * b + o * c * b + p * a * w - o * g * w) * v, t[2] = (i * c * l - m * u * l + m * a * d - o * c * d - i * a * w + o * u * w) * v, t[3] = (p * u * l - i * g * l - p * a * d + o * g * d + i * a * b - o * u * b) * v, t[4] = P * v, t[5] = (f * c * l - h * g * l + h * a * b - e * c * b - f * a * w + e * g * w) * v, t[6] = (h * u * l - s * c * l - h * a * d + e * c * d + s * a * w - e * u * w) * v, t[7] = (s * g * l - f * u * l + f * a * d - e * g * d - s * a * b + e * u * b) * v, t[8] = k * v, t[9] = (h * p * l - f * m * l - h * o * b + e * m * b + f * o * w - e * p * w) * v, t[10] = (s * m * l - h * i * l + h * o * d - e * m * d - s * o * w + e * i * w) * v, t[11] = (f * i * l - s * p * l - f * o * d + e * p * d + s * o * b - e * i * b) * v, t[12] = R * v, t[13] = (f * m * a - h * p * a + h * o * g - e * m * g - f * o * c + e * p * c) * v, t[14] = (h * i * a - s * m * a - h * o * u + e * m * u + s * o * c - e * i * c) * v, t[15] = (s * p * a - f * i * a + f * o * u - e * p * u - s * o * g + e * i * g) * v, this;
  }
  scale(t) {
    const e = this.elements, o = t.x, a = t.y, l = t.z;
    return e[0] *= o, e[4] *= a, e[8] *= l, e[1] *= o, e[5] *= a, e[9] *= l, e[2] *= o, e[6] *= a, e[10] *= l, e[3] *= o, e[7] *= a, e[11] *= l, this;
  }
  getMaxScaleOnAxis() {
    const t = this.elements, e = t[0] * t[0] + t[1] * t[1] + t[2] * t[2], o = t[4] * t[4] + t[5] * t[5] + t[6] * t[6], a = t[8] * t[8] + t[9] * t[9] + t[10] * t[10];
    return Math.sqrt(Math.max(e, o, a));
  }
  makeTranslation(t, e, o) {
    return this.set(1, 0, 0, t, 0, 1, 0, e, 0, 0, 1, o, 0, 0, 0, 1), this;
  }
  makeRotationX(t) {
    const e = Math.cos(t), o = Math.sin(t);
    return this.set(1, 0, 0, 0, 0, e, -o, 0, 0, o, e, 0, 0, 0, 0, 1), this;
  }
  makeRotationY(t) {
    const e = Math.cos(t), o = Math.sin(t);
    return this.set(e, 0, o, 0, 0, 1, 0, 0, -o, 0, e, 0, 0, 0, 0, 1), this;
  }
  makeRotationZ(t) {
    const e = Math.cos(t), o = Math.sin(t);
    return this.set(e, -o, 0, 0, o, e, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1), this;
  }
  makeRotationAxis(t, e) {
    const o = Math.cos(e), a = Math.sin(e), l = 1 - o, s = t.x, i = t.y, u = t.z, d = l * s, f = l * i;
    return this.set(d * s + o, d * i - a * u, d * u + a * i, 0, d * i + a * u, f * i + o, f * u - a * s, 0, d * u - a * i, f * u + a * s, l * u * u + o, 0, 0, 0, 0, 1), this;
  }
  makeScale(t, e, o) {
    return this.set(t, 0, 0, 0, 0, e, 0, 0, 0, 0, o, 0, 0, 0, 0, 1), this;
  }
  makeShear(t, e, o, a, l, s) {
    return this.set(1, o, l, 0, t, 1, s, 0, e, a, 1, 0, 0, 0, 0, 1), this;
  }
  compose(t, e, o) {
    const a = this.elements, l = e._x, s = e._y, i = e._z, u = e._w, d = l + l, f = s + s, p = i + i, g = l * d, b = l * f, h = l * p, m = s * f, c = s * p, w = i * p, T = u * d, P = u * f, k = u * p, R = o.x, F = o.y, v = o.z;
    return a[0] = (1 - (m + w)) * R, a[1] = (b + k) * R, a[2] = (h - P) * R, a[3] = 0, a[4] = (b - k) * F, a[5] = (1 - (g + w)) * F, a[6] = (c + T) * F, a[7] = 0, a[8] = (h + P) * v, a[9] = (c - T) * v, a[10] = (1 - (g + m)) * v, a[11] = 0, a[12] = t.x, a[13] = t.y, a[14] = t.z, a[15] = 1, this;
  }
  decompose(t, e, o) {
    const a = this.elements;
    let l = gu.set(a[0], a[1], a[2]).length();
    const s = gu.set(a[4], a[5], a[6]).length(), i = gu.set(a[8], a[9], a[10]).length();
    this.determinant() < 0 && (l = -l), t.x = a[12], t.y = a[13], t.z = a[14], Ea.copy(this);
    const u = 1 / l, d = 1 / s, f = 1 / i;
    return Ea.elements[0] *= u, Ea.elements[1] *= u, Ea.elements[2] *= u, Ea.elements[4] *= d, Ea.elements[5] *= d, Ea.elements[6] *= d, Ea.elements[8] *= f, Ea.elements[9] *= f, Ea.elements[10] *= f, e.setFromRotationMatrix(Ea), o.x = l, o.y = s, o.z = i, this;
  }
  makePerspective(t, e, o, a, l, s) {
    const i = this.elements, u = 2 * l / (e - t), d = 2 * l / (o - a), f = (e + t) / (e - t), p = (o + a) / (o - a), g = -(s + l) / (s - l), b = -2 * s * l / (s - l);
    return i[0] = u, i[4] = 0, i[8] = f, i[12] = 0, i[1] = 0, i[5] = d, i[9] = p, i[13] = 0, i[2] = 0, i[6] = 0, i[10] = g, i[14] = b, i[3] = 0, i[7] = 0, i[11] = -1, i[15] = 0, this;
  }
  makeOrthographic(t, e, o, a, l, s) {
    const i = this.elements, u = 1 / (e - t), d = 1 / (o - a), f = 1 / (s - l), p = (e + t) * u, g = (o + a) * d, b = (s + l) * f;
    return i[0] = 2 * u, i[4] = 0, i[8] = 0, i[12] = -p, i[1] = 0, i[5] = 2 * d, i[9] = 0, i[13] = -g, i[2] = 0, i[6] = 0, i[10] = -2 * f, i[14] = -b, i[3] = 0, i[7] = 0, i[11] = 0, i[15] = 1, this;
  }
  equals(t) {
    const e = this.elements, o = t.elements;
    for (let a = 0; a < 16; a++) if (e[a] !== o[a]) return false;
    return true;
  }
  fromArray(t, e = 0) {
    for (let o = 0; o < 16; o++) this.elements[o] = t[o + e];
    return this;
  }
  toArray(t = [], e = 0) {
    const o = this.elements;
    return t[e] = o[0], t[e + 1] = o[1], t[e + 2] = o[2], t[e + 3] = o[3], t[e + 4] = o[4], t[e + 5] = o[5], t[e + 6] = o[6], t[e + 7] = o[7], t[e + 8] = o[8], t[e + 9] = o[9], t[e + 10] = o[10], t[e + 11] = o[11], t[e + 12] = o[12], t[e + 13] = o[13], t[e + 14] = o[14], t[e + 15] = o[15], t;
  }
}
const gu = new Br(), Ea = new Fi(), Ym = new Br(0, 0, 0), Zm = new Br(1, 1, 1), Ss = new Br(), al = new Br(), ia = new Br(), oh = new Fi(), ih = new Ac();
class kc {
  constructor(t = 0, e = 0, o = 0, a = kc.DefaultOrder) {
    this.isEuler = true, this._x = t, this._y = e, this._z = o, this._order = a;
  }
  get x() {
    return this._x;
  }
  set x(t) {
    this._x = t, this._onChangeCallback();
  }
  get y() {
    return this._y;
  }
  set y(t) {
    this._y = t, this._onChangeCallback();
  }
  get z() {
    return this._z;
  }
  set z(t) {
    this._z = t, this._onChangeCallback();
  }
  get order() {
    return this._order;
  }
  set order(t) {
    this._order = t, this._onChangeCallback();
  }
  set(t, e, o, a = this._order) {
    return this._x = t, this._y = e, this._z = o, this._order = a, this._onChangeCallback(), this;
  }
  clone() {
    return new this.constructor(this._x, this._y, this._z, this._order);
  }
  copy(t) {
    return this._x = t._x, this._y = t._y, this._z = t._z, this._order = t._order, this._onChangeCallback(), this;
  }
  setFromRotationMatrix(t, e = this._order, o = true) {
    const a = t.elements, l = a[0], s = a[4], i = a[8], u = a[1], d = a[5], f = a[9], p = a[2], g = a[6], b = a[10];
    switch (e) {
      case "XYZ":
        this._y = Math.asin(sa(i, -1, 1)), Math.abs(i) < 0.9999999 ? (this._x = Math.atan2(-f, b), this._z = Math.atan2(-s, l)) : (this._x = Math.atan2(g, d), this._z = 0);
        break;
      case "YXZ":
        this._x = Math.asin(-sa(f, -1, 1)), Math.abs(f) < 0.9999999 ? (this._y = Math.atan2(i, b), this._z = Math.atan2(u, d)) : (this._y = Math.atan2(-p, l), this._z = 0);
        break;
      case "ZXY":
        this._x = Math.asin(sa(g, -1, 1)), Math.abs(g) < 0.9999999 ? (this._y = Math.atan2(-p, b), this._z = Math.atan2(-s, d)) : (this._y = 0, this._z = Math.atan2(u, l));
        break;
      case "ZYX":
        this._y = Math.asin(-sa(p, -1, 1)), Math.abs(p) < 0.9999999 ? (this._x = Math.atan2(g, b), this._z = Math.atan2(u, l)) : (this._x = 0, this._z = Math.atan2(-s, d));
        break;
      case "YZX":
        this._z = Math.asin(sa(u, -1, 1)), Math.abs(u) < 0.9999999 ? (this._x = Math.atan2(-f, d), this._y = Math.atan2(-p, l)) : (this._x = 0, this._y = Math.atan2(i, b));
        break;
      case "XZY":
        this._z = Math.asin(-sa(s, -1, 1)), Math.abs(s) < 0.9999999 ? (this._x = Math.atan2(g, d), this._y = Math.atan2(i, l)) : (this._x = Math.atan2(-f, b), this._y = 0);
        break;
      default:
        console.warn("THREE.Euler: .setFromRotationMatrix() encountered an unknown order: " + e);
    }
    return this._order = e, o === true && this._onChangeCallback(), this;
  }
  setFromQuaternion(t, e, o) {
    return oh.makeRotationFromQuaternion(t), this.setFromRotationMatrix(oh, e, o);
  }
  setFromVector3(t, e = this._order) {
    return this.set(t.x, t.y, t.z, e);
  }
  reorder(t) {
    return ih.setFromEuler(this), this.setFromQuaternion(ih, t);
  }
  equals(t) {
    return t._x === this._x && t._y === this._y && t._z === this._z && t._order === this._order;
  }
  fromArray(t) {
    return this._x = t[0], this._y = t[1], this._z = t[2], t[3] !== void 0 && (this._order = t[3]), this._onChangeCallback(), this;
  }
  toArray(t = [], e = 0) {
    return t[e] = this._x, t[e + 1] = this._y, t[e + 2] = this._z, t[e + 3] = this._order, t;
  }
  _onChange(t) {
    return this._onChangeCallback = t, this;
  }
  _onChangeCallback() {
  }
  *[Symbol.iterator]() {
    yield this._x, yield this._y, yield this._z, yield this._order;
  }
  toVector3() {
    console.error("THREE.Euler: .toVector3() has been removed. Use Vector3.setFromEuler() instead");
  }
}
kc.DefaultOrder = "XYZ";
kc.RotationOrders = ["XYZ", "YZX", "ZXY", "XZY", "YXZ", "ZYX"];
class Rd {
  constructor() {
    this.mask = 1;
  }
  set(t) {
    this.mask = (1 << t | 0) >>> 0;
  }
  enable(t) {
    this.mask |= 1 << t | 0;
  }
  enableAll() {
    this.mask = -1;
  }
  toggle(t) {
    this.mask ^= 1 << t | 0;
  }
  disable(t) {
    this.mask &= ~(1 << t | 0);
  }
  disableAll() {
    this.mask = 0;
  }
  test(t) {
    return (this.mask & t.mask) !== 0;
  }
  isEnabled(t) {
    return (this.mask & (1 << t | 0)) !== 0;
  }
}
let Qm = 0;
const ah = new Br(), vu = new Ac(), ts = new Fi(), sl = new Br(), ic = new Br(), Jm = new Br(), ty = new Ac(), sh = new Br(1, 0, 0), uh = new Br(0, 1, 0), ch = new Br(0, 0, 1), ey = { type: "added" }, lh = { type: "removed" };
class Zi extends Lu {
  constructor() {
    super(), this.isObject3D = true, Object.defineProperty(this, "id", { value: Qm++ }), this.uuid = Ec(), this.name = "", this.type = "Object3D", this.parent = null, this.children = [], this.up = Zi.DefaultUp.clone();
    const t = new Br(), e = new kc(), o = new Ac(), a = new Br(1, 1, 1);
    function l() {
      o.setFromEuler(e, false);
    }
    function s() {
      e.setFromQuaternion(o, void 0, false);
    }
    e._onChange(l), o._onChange(s), Object.defineProperties(this, { position: { configurable: true, enumerable: true, value: t }, rotation: { configurable: true, enumerable: true, value: e }, quaternion: { configurable: true, enumerable: true, value: o }, scale: { configurable: true, enumerable: true, value: a }, modelViewMatrix: { value: new Fi() }, normalMatrix: { value: new ga() } }), this.matrix = new Fi(), this.matrixWorld = new Fi(), this.matrixAutoUpdate = Zi.DefaultMatrixAutoUpdate, this.matrixWorldNeedsUpdate = false, this.layers = new Rd(), this.visible = true, this.castShadow = false, this.receiveShadow = false, this.frustumCulled = true, this.renderOrder = 0, this.animations = [], this.userData = {};
  }
  onBeforeRender() {
  }
  onAfterRender() {
  }
  applyMatrix4(t) {
    this.matrixAutoUpdate && this.updateMatrix(), this.matrix.premultiply(t), this.matrix.decompose(this.position, this.quaternion, this.scale);
  }
  applyQuaternion(t) {
    return this.quaternion.premultiply(t), this;
  }
  setRotationFromAxisAngle(t, e) {
    this.quaternion.setFromAxisAngle(t, e);
  }
  setRotationFromEuler(t) {
    this.quaternion.setFromEuler(t, true);
  }
  setRotationFromMatrix(t) {
    this.quaternion.setFromRotationMatrix(t);
  }
  setRotationFromQuaternion(t) {
    this.quaternion.copy(t);
  }
  rotateOnAxis(t, e) {
    return vu.setFromAxisAngle(t, e), this.quaternion.multiply(vu), this;
  }
  rotateOnWorldAxis(t, e) {
    return vu.setFromAxisAngle(t, e), this.quaternion.premultiply(vu), this;
  }
  rotateX(t) {
    return this.rotateOnAxis(sh, t);
  }
  rotateY(t) {
    return this.rotateOnAxis(uh, t);
  }
  rotateZ(t) {
    return this.rotateOnAxis(ch, t);
  }
  translateOnAxis(t, e) {
    return ah.copy(t).applyQuaternion(this.quaternion), this.position.add(ah.multiplyScalar(e)), this;
  }
  translateX(t) {
    return this.translateOnAxis(sh, t);
  }
  translateY(t) {
    return this.translateOnAxis(uh, t);
  }
  translateZ(t) {
    return this.translateOnAxis(ch, t);
  }
  localToWorld(t) {
    return t.applyMatrix4(this.matrixWorld);
  }
  worldToLocal(t) {
    return t.applyMatrix4(ts.copy(this.matrixWorld).invert());
  }
  lookAt(t, e, o) {
    t.isVector3 ? sl.copy(t) : sl.set(t, e, o);
    const a = this.parent;
    this.updateWorldMatrix(true, false), ic.setFromMatrixPosition(this.matrixWorld), this.isCamera || this.isLight ? ts.lookAt(ic, sl, this.up) : ts.lookAt(sl, ic, this.up), this.quaternion.setFromRotationMatrix(ts), a && (ts.extractRotation(a.matrixWorld), vu.setFromRotationMatrix(ts), this.quaternion.premultiply(vu.invert()));
  }
  add(t) {
    if (arguments.length > 1) {
      for (let e = 0; e < arguments.length; e++) this.add(arguments[e]);
      return this;
    }
    return t === this ? (console.error("THREE.Object3D.add: object can't be added as a child of itself.", t), this) : (t && t.isObject3D ? (t.parent !== null && t.parent.remove(t), t.parent = this, this.children.push(t), t.dispatchEvent(ey)) : console.error("THREE.Object3D.add: object not an instance of THREE.Object3D.", t), this);
  }
  remove(t) {
    if (arguments.length > 1) {
      for (let o = 0; o < arguments.length; o++) this.remove(arguments[o]);
      return this;
    }
    const e = this.children.indexOf(t);
    return e !== -1 && (t.parent = null, this.children.splice(e, 1), t.dispatchEvent(lh)), this;
  }
  removeFromParent() {
    const t = this.parent;
    return t !== null && t.remove(this), this;
  }
  clear() {
    for (let t = 0; t < this.children.length; t++) {
      const e = this.children[t];
      e.parent = null, e.dispatchEvent(lh);
    }
    return this.children.length = 0, this;
  }
  attach(t) {
    return this.updateWorldMatrix(true, false), ts.copy(this.matrixWorld).invert(), t.parent !== null && (t.parent.updateWorldMatrix(true, false), ts.multiply(t.parent.matrixWorld)), t.applyMatrix4(ts), this.add(t), t.updateWorldMatrix(false, true), this;
  }
  getObjectById(t) {
    return this.getObjectByProperty("id", t);
  }
  getObjectByName(t) {
    return this.getObjectByProperty("name", t);
  }
  getObjectByProperty(t, e) {
    if (this[t] === e) return this;
    for (let o = 0, a = this.children.length; o < a; o++) {
      const l = this.children[o].getObjectByProperty(t, e);
      if (l !== void 0) return l;
    }
  }
  getWorldPosition(t) {
    return this.updateWorldMatrix(true, false), t.setFromMatrixPosition(this.matrixWorld);
  }
  getWorldQuaternion(t) {
    return this.updateWorldMatrix(true, false), this.matrixWorld.decompose(ic, t, Jm), t;
  }
  getWorldScale(t) {
    return this.updateWorldMatrix(true, false), this.matrixWorld.decompose(ic, ty, t), t;
  }
  getWorldDirection(t) {
    this.updateWorldMatrix(true, false);
    const e = this.matrixWorld.elements;
    return t.set(e[8], e[9], e[10]).normalize();
  }
  raycast() {
  }
  traverse(t) {
    t(this);
    const e = this.children;
    for (let o = 0, a = e.length; o < a; o++) e[o].traverse(t);
  }
  traverseVisible(t) {
    if (this.visible === false) return;
    t(this);
    const e = this.children;
    for (let o = 0, a = e.length; o < a; o++) e[o].traverseVisible(t);
  }
  traverseAncestors(t) {
    const e = this.parent;
    e !== null && (t(e), e.traverseAncestors(t));
  }
  updateMatrix() {
    this.matrix.compose(this.position, this.quaternion, this.scale), this.matrixWorldNeedsUpdate = true;
  }
  updateMatrixWorld(t) {
    this.matrixAutoUpdate && this.updateMatrix(), (this.matrixWorldNeedsUpdate || t) && (this.parent === null ? this.matrixWorld.copy(this.matrix) : this.matrixWorld.multiplyMatrices(this.parent.matrixWorld, this.matrix), this.matrixWorldNeedsUpdate = false, t = true);
    const e = this.children;
    for (let o = 0, a = e.length; o < a; o++) e[o].updateMatrixWorld(t);
  }
  updateWorldMatrix(t, e) {
    const o = this.parent;
    if (t === true && o !== null && o.updateWorldMatrix(true, false), this.matrixAutoUpdate && this.updateMatrix(), this.parent === null ? this.matrixWorld.copy(this.matrix) : this.matrixWorld.multiplyMatrices(this.parent.matrixWorld, this.matrix), e === true) {
      const a = this.children;
      for (let l = 0, s = a.length; l < s; l++) a[l].updateWorldMatrix(false, true);
    }
  }
  toJSON(t) {
    const e = t === void 0 || typeof t == "string", o = {};
    e && (t = { geometries: {}, materials: {}, textures: {}, images: {}, shapes: {}, skeletons: {}, animations: {}, nodes: {} }, o.metadata = { version: 4.5, type: "Object", generator: "Object3D.toJSON" });
    const a = {};
    a.uuid = this.uuid, a.type = this.type, this.name !== "" && (a.name = this.name), this.castShadow === true && (a.castShadow = true), this.receiveShadow === true && (a.receiveShadow = true), this.visible === false && (a.visible = false), this.frustumCulled === false && (a.frustumCulled = false), this.renderOrder !== 0 && (a.renderOrder = this.renderOrder), JSON.stringify(this.userData) !== "{}" && (a.userData = this.userData), a.layers = this.layers.mask, a.matrix = this.matrix.toArray(), this.matrixAutoUpdate === false && (a.matrixAutoUpdate = false), this.isInstancedMesh && (a.type = "InstancedMesh", a.count = this.count, a.instanceMatrix = this.instanceMatrix.toJSON(), this.instanceColor !== null && (a.instanceColor = this.instanceColor.toJSON()));
    function l(i, u) {
      return i[u.uuid] === void 0 && (i[u.uuid] = u.toJSON(t)), u.uuid;
    }
    if (this.isScene) this.background && (this.background.isColor ? a.background = this.background.toJSON() : this.background.isTexture && (a.background = this.background.toJSON(t).uuid)), this.environment && this.environment.isTexture && this.environment.isRenderTargetTexture !== true && (a.environment = this.environment.toJSON(t).uuid);
    else if (this.isMesh || this.isLine || this.isPoints) {
      a.geometry = l(t.geometries, this.geometry);
      const i = this.geometry.parameters;
      if (i !== void 0 && i.shapes !== void 0) {
        const u = i.shapes;
        if (Array.isArray(u)) for (let d = 0, f = u.length; d < f; d++) {
          const p = u[d];
          l(t.shapes, p);
        }
        else l(t.shapes, u);
      }
    }
    if (this.isSkinnedMesh && (a.bindMode = this.bindMode, a.bindMatrix = this.bindMatrix.toArray(), this.skeleton !== void 0 && (l(t.skeletons, this.skeleton), a.skeleton = this.skeleton.uuid)), this.material !== void 0) if (Array.isArray(this.material)) {
      const i = [];
      for (let u = 0, d = this.material.length; u < d; u++) i.push(l(t.materials, this.material[u]));
      a.material = i;
    } else a.material = l(t.materials, this.material);
    if (this.children.length > 0) {
      a.children = [];
      for (let i = 0; i < this.children.length; i++) a.children.push(this.children[i].toJSON(t).object);
    }
    if (this.animations.length > 0) {
      a.animations = [];
      for (let i = 0; i < this.animations.length; i++) {
        const u = this.animations[i];
        a.animations.push(l(t.animations, u));
      }
    }
    if (e) {
      const i = s(t.geometries), u = s(t.materials), d = s(t.textures), f = s(t.images), p = s(t.shapes), g = s(t.skeletons), b = s(t.animations), h = s(t.nodes);
      i.length > 0 && (o.geometries = i), u.length > 0 && (o.materials = u), d.length > 0 && (o.textures = d), f.length > 0 && (o.images = f), p.length > 0 && (o.shapes = p), g.length > 0 && (o.skeletons = g), b.length > 0 && (o.animations = b), h.length > 0 && (o.nodes = h);
    }
    return o.object = a, o;
    function s(i) {
      const u = [];
      for (const d in i) {
        const f = i[d];
        delete f.metadata, u.push(f);
      }
      return u;
    }
  }
  clone(t) {
    return new this.constructor().copy(this, t);
  }
  copy(t, e = true) {
    if (this.name = t.name, this.up.copy(t.up), this.position.copy(t.position), this.rotation.order = t.rotation.order, this.quaternion.copy(t.quaternion), this.scale.copy(t.scale), this.matrix.copy(t.matrix), this.matrixWorld.copy(t.matrixWorld), this.matrixAutoUpdate = t.matrixAutoUpdate, this.matrixWorldNeedsUpdate = t.matrixWorldNeedsUpdate, this.layers.mask = t.layers.mask, this.visible = t.visible, this.castShadow = t.castShadow, this.receiveShadow = t.receiveShadow, this.frustumCulled = t.frustumCulled, this.renderOrder = t.renderOrder, this.userData = JSON.parse(JSON.stringify(t.userData)), e === true) for (let o = 0; o < t.children.length; o++) {
      const a = t.children[o];
      this.add(a.clone());
    }
    return this;
  }
}
Zi.DefaultUp = new Br(0, 1, 0);
Zi.DefaultMatrixAutoUpdate = true;
const Aa = new Br(), es = new Br(), _f = new Br(), rs = new Br(), bu = new Br(), wu = new Br(), fh = new Br(), Ef = new Br(), Af = new Br(), Tf = new Br();
class fs {
  constructor(t = new Br(), e = new Br(), o = new Br()) {
    this.a = t, this.b = e, this.c = o;
  }
  static getNormal(t, e, o, a) {
    a.subVectors(o, e), Aa.subVectors(t, e), a.cross(Aa);
    const l = a.lengthSq();
    return l > 0 ? a.multiplyScalar(1 / Math.sqrt(l)) : a.set(0, 0, 0);
  }
  static getBarycoord(t, e, o, a, l) {
    Aa.subVectors(a, e), es.subVectors(o, e), _f.subVectors(t, e);
    const s = Aa.dot(Aa), i = Aa.dot(es), u = Aa.dot(_f), d = es.dot(es), f = es.dot(_f), p = s * d - i * i;
    if (p === 0) return l.set(-2, -1, -1);
    const g = 1 / p, b = (d * u - i * f) * g, h = (s * f - i * u) * g;
    return l.set(1 - b - h, h, b);
  }
  static containsPoint(t, e, o, a) {
    return this.getBarycoord(t, e, o, a, rs), rs.x >= 0 && rs.y >= 0 && rs.x + rs.y <= 1;
  }
  static getUV(t, e, o, a, l, s, i, u) {
    return this.getBarycoord(t, e, o, a, rs), u.set(0, 0), u.addScaledVector(l, rs.x), u.addScaledVector(s, rs.y), u.addScaledVector(i, rs.z), u;
  }
  static isFrontFacing(t, e, o, a) {
    return Aa.subVectors(o, e), es.subVectors(t, e), Aa.cross(es).dot(a) < 0;
  }
  set(t, e, o) {
    return this.a.copy(t), this.b.copy(e), this.c.copy(o), this;
  }
  setFromPointsAndIndices(t, e, o, a) {
    return this.a.copy(t[e]), this.b.copy(t[o]), this.c.copy(t[a]), this;
  }
  setFromAttributeAndIndices(t, e, o, a) {
    return this.a.fromBufferAttribute(t, e), this.b.fromBufferAttribute(t, o), this.c.fromBufferAttribute(t, a), this;
  }
  clone() {
    return new this.constructor().copy(this);
  }
  copy(t) {
    return this.a.copy(t.a), this.b.copy(t.b), this.c.copy(t.c), this;
  }
  getArea() {
    return Aa.subVectors(this.c, this.b), es.subVectors(this.a, this.b), Aa.cross(es).length() * 0.5;
  }
  getMidpoint(t) {
    return t.addVectors(this.a, this.b).add(this.c).multiplyScalar(1 / 3);
  }
  getNormal(t) {
    return fs.getNormal(this.a, this.b, this.c, t);
  }
  getPlane(t) {
    return t.setFromCoplanarPoints(this.a, this.b, this.c);
  }
  getBarycoord(t, e) {
    return fs.getBarycoord(t, this.a, this.b, this.c, e);
  }
  getUV(t, e, o, a, l) {
    return fs.getUV(t, this.a, this.b, this.c, e, o, a, l);
  }
  containsPoint(t) {
    return fs.containsPoint(t, this.a, this.b, this.c);
  }
  isFrontFacing(t) {
    return fs.isFrontFacing(this.a, this.b, this.c, t);
  }
  intersectsBox(t) {
    return t.intersectsTriangle(this);
  }
  closestPointToPoint(t, e) {
    const o = this.a, a = this.b, l = this.c;
    let s, i;
    bu.subVectors(a, o), wu.subVectors(l, o), Ef.subVectors(t, o);
    const u = bu.dot(Ef), d = wu.dot(Ef);
    if (u <= 0 && d <= 0) return e.copy(o);
    Af.subVectors(t, a);
    const f = bu.dot(Af), p = wu.dot(Af);
    if (f >= 0 && p <= f) return e.copy(a);
    const g = u * p - f * d;
    if (g <= 0 && u >= 0 && f <= 0) return s = u / (u - f), e.copy(o).addScaledVector(bu, s);
    Tf.subVectors(t, l);
    const b = bu.dot(Tf), h = wu.dot(Tf);
    if (h >= 0 && b <= h) return e.copy(l);
    const m = b * d - u * h;
    if (m <= 0 && d >= 0 && h <= 0) return i = d / (d - h), e.copy(o).addScaledVector(wu, i);
    const c = f * h - b * p;
    if (c <= 0 && p - f >= 0 && b - h >= 0) return fh.subVectors(l, a), i = (p - f) / (p - f + (b - h)), e.copy(a).addScaledVector(fh, i);
    const w = 1 / (c + m + g);
    return s = m * w, i = g * w, e.copy(o).addScaledVector(bu, s).addScaledVector(wu, i);
  }
  equals(t) {
    return t.a.equals(this.a) && t.b.equals(this.b) && t.c.equals(this.c);
  }
}
let ry = 0;
class tu extends Lu {
  constructor() {
    super(), this.isMaterial = true, Object.defineProperty(this, "id", { value: ry++ }), this.uuid = Ec(), this.name = "", this.type = "Material", this.blending = 1, this.side = 0, this.vertexColors = false, this.opacity = 1, this.transparent = false, this.blendSrc = 204, this.blendDst = 205, this.blendEquation = 100, this.blendSrcAlpha = null, this.blendDstAlpha = null, this.blendEquationAlpha = null, this.depthFunc = 3, this.depthTest = true, this.depthWrite = true, this.stencilWriteMask = 255, this.stencilFunc = 519, this.stencilRef = 0, this.stencilFuncMask = 255, this.stencilFail = 7680, this.stencilZFail = 7680, this.stencilZPass = 7680, this.stencilWrite = false, this.clippingPlanes = null, this.clipIntersection = false, this.clipShadows = false, this.shadowSide = null, this.colorWrite = true, this.precision = null, this.polygonOffset = false, this.polygonOffsetFactor = 0, this.polygonOffsetUnits = 0, this.dithering = false, this.alphaToCoverage = false, this.premultipliedAlpha = false, this.visible = true, this.toneMapped = true, this.userData = {}, this.version = 0, this._alphaTest = 0;
  }
  get alphaTest() {
    return this._alphaTest;
  }
  set alphaTest(t) {
    this._alphaTest > 0 != t > 0 && this.version++, this._alphaTest = t;
  }
  onBuild() {
  }
  onBeforeRender() {
  }
  onBeforeCompile() {
  }
  customProgramCacheKey() {
    return this.onBeforeCompile.toString();
  }
  setValues(t) {
    if (t !== void 0) for (const e in t) {
      const o = t[e];
      if (o === void 0) {
        console.warn("THREE.Material: '" + e + "' parameter is undefined.");
        continue;
      }
      if (e === "shading") {
        console.warn("THREE." + this.type + ": .shading has been removed. Use the boolean .flatShading instead."), this.flatShading = o === 1;
        continue;
      }
      const a = this[e];
      if (a === void 0) {
        console.warn("THREE." + this.type + ": '" + e + "' is not a property of this material.");
        continue;
      }
      a && a.isColor ? a.set(o) : a && a.isVector3 && o && o.isVector3 ? a.copy(o) : this[e] = o;
    }
  }
  toJSON(t) {
    const e = t === void 0 || typeof t == "string";
    e && (t = { textures: {}, images: {} });
    const o = { metadata: { version: 4.5, type: "Material", generator: "Material.toJSON" } };
    o.uuid = this.uuid, o.type = this.type, this.name !== "" && (o.name = this.name), this.color && this.color.isColor && (o.color = this.color.getHex()), this.roughness !== void 0 && (o.roughness = this.roughness), this.metalness !== void 0 && (o.metalness = this.metalness), this.sheen !== void 0 && (o.sheen = this.sheen), this.sheenColor && this.sheenColor.isColor && (o.sheenColor = this.sheenColor.getHex()), this.sheenRoughness !== void 0 && (o.sheenRoughness = this.sheenRoughness), this.emissive && this.emissive.isColor && (o.emissive = this.emissive.getHex()), this.emissiveIntensity && this.emissiveIntensity !== 1 && (o.emissiveIntensity = this.emissiveIntensity), this.specular && this.specular.isColor && (o.specular = this.specular.getHex()), this.specularIntensity !== void 0 && (o.specularIntensity = this.specularIntensity), this.specularColor && this.specularColor.isColor && (o.specularColor = this.specularColor.getHex()), this.shininess !== void 0 && (o.shininess = this.shininess), this.clearcoat !== void 0 && (o.clearcoat = this.clearcoat), this.clearcoatRoughness !== void 0 && (o.clearcoatRoughness = this.clearcoatRoughness), this.clearcoatMap && this.clearcoatMap.isTexture && (o.clearcoatMap = this.clearcoatMap.toJSON(t).uuid), this.clearcoatRoughnessMap && this.clearcoatRoughnessMap.isTexture && (o.clearcoatRoughnessMap = this.clearcoatRoughnessMap.toJSON(t).uuid), this.clearcoatNormalMap && this.clearcoatNormalMap.isTexture && (o.clearcoatNormalMap = this.clearcoatNormalMap.toJSON(t).uuid, o.clearcoatNormalScale = this.clearcoatNormalScale.toArray()), this.iridescence !== void 0 && (o.iridescence = this.iridescence), this.iridescenceIOR !== void 0 && (o.iridescenceIOR = this.iridescenceIOR), this.iridescenceThicknessRange !== void 0 && (o.iridescenceThicknessRange = this.iridescenceThicknessRange), this.iridescenceMap && this.iridescenceMap.isTexture && (o.iridescenceMap = this.iridescenceMap.toJSON(t).uuid), this.iridescenceThicknessMap && this.iridescenceThicknessMap.isTexture && (o.iridescenceThicknessMap = this.iridescenceThicknessMap.toJSON(t).uuid), this.map && this.map.isTexture && (o.map = this.map.toJSON(t).uuid), this.matcap && this.matcap.isTexture && (o.matcap = this.matcap.toJSON(t).uuid), this.alphaMap && this.alphaMap.isTexture && (o.alphaMap = this.alphaMap.toJSON(t).uuid), this.lightMap && this.lightMap.isTexture && (o.lightMap = this.lightMap.toJSON(t).uuid, o.lightMapIntensity = this.lightMapIntensity), this.aoMap && this.aoMap.isTexture && (o.aoMap = this.aoMap.toJSON(t).uuid, o.aoMapIntensity = this.aoMapIntensity), this.bumpMap && this.bumpMap.isTexture && (o.bumpMap = this.bumpMap.toJSON(t).uuid, o.bumpScale = this.bumpScale), this.normalMap && this.normalMap.isTexture && (o.normalMap = this.normalMap.toJSON(t).uuid, o.normalMapType = this.normalMapType, o.normalScale = this.normalScale.toArray()), this.displacementMap && this.displacementMap.isTexture && (o.displacementMap = this.displacementMap.toJSON(t).uuid, o.displacementScale = this.displacementScale, o.displacementBias = this.displacementBias), this.roughnessMap && this.roughnessMap.isTexture && (o.roughnessMap = this.roughnessMap.toJSON(t).uuid), this.metalnessMap && this.metalnessMap.isTexture && (o.metalnessMap = this.metalnessMap.toJSON(t).uuid), this.emissiveMap && this.emissiveMap.isTexture && (o.emissiveMap = this.emissiveMap.toJSON(t).uuid), this.specularMap && this.specularMap.isTexture && (o.specularMap = this.specularMap.toJSON(t).uuid), this.specularIntensityMap && this.specularIntensityMap.isTexture && (o.specularIntensityMap = this.specularIntensityMap.toJSON(t).uuid), this.specularColorMap && this.specularColorMap.isTexture && (o.specularColorMap = this.specularColorMap.toJSON(t).uuid), this.envMap && this.envMap.isTexture && (o.envMap = this.envMap.toJSON(t).uuid, this.combine !== void 0 && (o.combine = this.combine)), this.envMapIntensity !== void 0 && (o.envMapIntensity = this.envMapIntensity), this.reflectivity !== void 0 && (o.reflectivity = this.reflectivity), this.refractionRatio !== void 0 && (o.refractionRatio = this.refractionRatio), this.gradientMap && this.gradientMap.isTexture && (o.gradientMap = this.gradientMap.toJSON(t).uuid), this.transmission !== void 0 && (o.transmission = this.transmission), this.transmissionMap && this.transmissionMap.isTexture && (o.transmissionMap = this.transmissionMap.toJSON(t).uuid), this.thickness !== void 0 && (o.thickness = this.thickness), this.thicknessMap && this.thicknessMap.isTexture && (o.thicknessMap = this.thicknessMap.toJSON(t).uuid), this.attenuationDistance !== void 0 && (o.attenuationDistance = this.attenuationDistance), this.attenuationColor !== void 0 && (o.attenuationColor = this.attenuationColor.getHex()), this.size !== void 0 && (o.size = this.size), this.shadowSide !== null && (o.shadowSide = this.shadowSide), this.sizeAttenuation !== void 0 && (o.sizeAttenuation = this.sizeAttenuation), this.blending !== 1 && (o.blending = this.blending), this.side !== 0 && (o.side = this.side), this.vertexColors && (o.vertexColors = true), this.opacity < 1 && (o.opacity = this.opacity), this.transparent === true && (o.transparent = this.transparent), o.depthFunc = this.depthFunc, o.depthTest = this.depthTest, o.depthWrite = this.depthWrite, o.colorWrite = this.colorWrite, o.stencilWrite = this.stencilWrite, o.stencilWriteMask = this.stencilWriteMask, o.stencilFunc = this.stencilFunc, o.stencilRef = this.stencilRef, o.stencilFuncMask = this.stencilFuncMask, o.stencilFail = this.stencilFail, o.stencilZFail = this.stencilZFail, o.stencilZPass = this.stencilZPass, this.rotation !== void 0 && this.rotation !== 0 && (o.rotation = this.rotation), this.polygonOffset === true && (o.polygonOffset = true), this.polygonOffsetFactor !== 0 && (o.polygonOffsetFactor = this.polygonOffsetFactor), this.polygonOffsetUnits !== 0 && (o.polygonOffsetUnits = this.polygonOffsetUnits), this.linewidth !== void 0 && this.linewidth !== 1 && (o.linewidth = this.linewidth), this.dashSize !== void 0 && (o.dashSize = this.dashSize), this.gapSize !== void 0 && (o.gapSize = this.gapSize), this.scale !== void 0 && (o.scale = this.scale), this.dithering === true && (o.dithering = true), this.alphaTest > 0 && (o.alphaTest = this.alphaTest), this.alphaToCoverage === true && (o.alphaToCoverage = this.alphaToCoverage), this.premultipliedAlpha === true && (o.premultipliedAlpha = this.premultipliedAlpha), this.wireframe === true && (o.wireframe = this.wireframe), this.wireframeLinewidth > 1 && (o.wireframeLinewidth = this.wireframeLinewidth), this.wireframeLinecap !== "round" && (o.wireframeLinecap = this.wireframeLinecap), this.wireframeLinejoin !== "round" && (o.wireframeLinejoin = this.wireframeLinejoin), this.flatShading === true && (o.flatShading = this.flatShading), this.visible === false && (o.visible = false), this.toneMapped === false && (o.toneMapped = false), this.fog === false && (o.fog = false), JSON.stringify(this.userData) !== "{}" && (o.userData = this.userData);
    function a(l) {
      const s = [];
      for (const i in l) {
        const u = l[i];
        delete u.metadata, s.push(u);
      }
      return s;
    }
    if (e) {
      const l = a(t.textures), s = a(t.images);
      l.length > 0 && (o.textures = l), s.length > 0 && (o.images = s);
    }
    return o;
  }
  clone() {
    return new this.constructor().copy(this);
  }
  copy(t) {
    this.name = t.name, this.blending = t.blending, this.side = t.side, this.vertexColors = t.vertexColors, this.opacity = t.opacity, this.transparent = t.transparent, this.blendSrc = t.blendSrc, this.blendDst = t.blendDst, this.blendEquation = t.blendEquation, this.blendSrcAlpha = t.blendSrcAlpha, this.blendDstAlpha = t.blendDstAlpha, this.blendEquationAlpha = t.blendEquationAlpha, this.depthFunc = t.depthFunc, this.depthTest = t.depthTest, this.depthWrite = t.depthWrite, this.stencilWriteMask = t.stencilWriteMask, this.stencilFunc = t.stencilFunc, this.stencilRef = t.stencilRef, this.stencilFuncMask = t.stencilFuncMask, this.stencilFail = t.stencilFail, this.stencilZFail = t.stencilZFail, this.stencilZPass = t.stencilZPass, this.stencilWrite = t.stencilWrite;
    const e = t.clippingPlanes;
    let o = null;
    if (e !== null) {
      const a = e.length;
      o = new Array(a);
      for (let l = 0; l !== a; ++l) o[l] = e[l].clone();
    }
    return this.clippingPlanes = o, this.clipIntersection = t.clipIntersection, this.clipShadows = t.clipShadows, this.shadowSide = t.shadowSide, this.colorWrite = t.colorWrite, this.precision = t.precision, this.polygonOffset = t.polygonOffset, this.polygonOffsetFactor = t.polygonOffsetFactor, this.polygonOffsetUnits = t.polygonOffsetUnits, this.dithering = t.dithering, this.alphaTest = t.alphaTest, this.alphaToCoverage = t.alphaToCoverage, this.premultipliedAlpha = t.premultipliedAlpha, this.visible = t.visible, this.toneMapped = t.toneMapped, this.userData = JSON.parse(JSON.stringify(t.userData)), this;
  }
  dispose() {
    this.dispatchEvent({ type: "dispose" });
  }
  set needsUpdate(t) {
    t === true && this.version++;
  }
}
class Id extends tu {
  constructor(t) {
    super(), this.isMeshBasicMaterial = true, this.type = "MeshBasicMaterial", this.color = new Yo(16777215), this.map = null, this.lightMap = null, this.lightMapIntensity = 1, this.aoMap = null, this.aoMapIntensity = 1, this.specularMap = null, this.alphaMap = null, this.envMap = null, this.combine = 0, this.reflectivity = 1, this.refractionRatio = 0.98, this.wireframe = false, this.wireframeLinewidth = 1, this.wireframeLinecap = "round", this.wireframeLinejoin = "round", this.fog = true, this.setValues(t);
  }
  copy(t) {
    return super.copy(t), this.color.copy(t.color), this.map = t.map, this.lightMap = t.lightMap, this.lightMapIntensity = t.lightMapIntensity, this.aoMap = t.aoMap, this.aoMapIntensity = t.aoMapIntensity, this.specularMap = t.specularMap, this.alphaMap = t.alphaMap, this.envMap = t.envMap, this.combine = t.combine, this.reflectivity = t.reflectivity, this.refractionRatio = t.refractionRatio, this.wireframe = t.wireframe, this.wireframeLinewidth = t.wireframeLinewidth, this.wireframeLinecap = t.wireframeLinecap, this.wireframeLinejoin = t.wireframeLinejoin, this.fog = t.fog, this;
  }
}
const Pi = new Br(), ul = new Zo();
class Ua {
  constructor(t, e, o) {
    if (Array.isArray(t)) throw new TypeError("THREE.BufferAttribute: array should be a Typed Array.");
    this.isBufferAttribute = true, this.name = "", this.array = t, this.itemSize = e, this.count = t !== void 0 ? t.length / e : 0, this.normalized = o === true, this.usage = 35044, this.updateRange = { offset: 0, count: -1 }, this.version = 0;
  }
  onUploadCallback() {
  }
  set needsUpdate(t) {
    t === true && this.version++;
  }
  setUsage(t) {
    return this.usage = t, this;
  }
  copy(t) {
    return this.name = t.name, this.array = new t.array.constructor(t.array), this.itemSize = t.itemSize, this.count = t.count, this.normalized = t.normalized, this.usage = t.usage, this;
  }
  copyAt(t, e, o) {
    t *= this.itemSize, o *= e.itemSize;
    for (let a = 0, l = this.itemSize; a < l; a++) this.array[t + a] = e.array[o + a];
    return this;
  }
  copyArray(t) {
    return this.array.set(t), this;
  }
  copyColorsArray(t) {
    const e = this.array;
    let o = 0;
    for (let a = 0, l = t.length; a < l; a++) {
      let s = t[a];
      s === void 0 && (console.warn("THREE.BufferAttribute.copyColorsArray(): color is undefined", a), s = new Yo()), e[o++] = s.r, e[o++] = s.g, e[o++] = s.b;
    }
    return this;
  }
  copyVector2sArray(t) {
    const e = this.array;
    let o = 0;
    for (let a = 0, l = t.length; a < l; a++) {
      let s = t[a];
      s === void 0 && (console.warn("THREE.BufferAttribute.copyVector2sArray(): vector is undefined", a), s = new Zo()), e[o++] = s.x, e[o++] = s.y;
    }
    return this;
  }
  copyVector3sArray(t) {
    const e = this.array;
    let o = 0;
    for (let a = 0, l = t.length; a < l; a++) {
      let s = t[a];
      s === void 0 && (console.warn("THREE.BufferAttribute.copyVector3sArray(): vector is undefined", a), s = new Br()), e[o++] = s.x, e[o++] = s.y, e[o++] = s.z;
    }
    return this;
  }
  copyVector4sArray(t) {
    const e = this.array;
    let o = 0;
    for (let a = 0, l = t.length; a < l; a++) {
      let s = t[a];
      s === void 0 && (console.warn("THREE.BufferAttribute.copyVector4sArray(): vector is undefined", a), s = new Di()), e[o++] = s.x, e[o++] = s.y, e[o++] = s.z, e[o++] = s.w;
    }
    return this;
  }
  applyMatrix3(t) {
    if (this.itemSize === 2) for (let e = 0, o = this.count; e < o; e++) ul.fromBufferAttribute(this, e), ul.applyMatrix3(t), this.setXY(e, ul.x, ul.y);
    else if (this.itemSize === 3) for (let e = 0, o = this.count; e < o; e++) Pi.fromBufferAttribute(this, e), Pi.applyMatrix3(t), this.setXYZ(e, Pi.x, Pi.y, Pi.z);
    return this;
  }
  applyMatrix4(t) {
    for (let e = 0, o = this.count; e < o; e++) Pi.fromBufferAttribute(this, e), Pi.applyMatrix4(t), this.setXYZ(e, Pi.x, Pi.y, Pi.z);
    return this;
  }
  applyNormalMatrix(t) {
    for (let e = 0, o = this.count; e < o; e++) Pi.fromBufferAttribute(this, e), Pi.applyNormalMatrix(t), this.setXYZ(e, Pi.x, Pi.y, Pi.z);
    return this;
  }
  transformDirection(t) {
    for (let e = 0, o = this.count; e < o; e++) Pi.fromBufferAttribute(this, e), Pi.transformDirection(t), this.setXYZ(e, Pi.x, Pi.y, Pi.z);
    return this;
  }
  set(t, e = 0) {
    return this.array.set(t, e), this;
  }
  getX(t) {
    return this.array[t * this.itemSize];
  }
  setX(t, e) {
    return this.array[t * this.itemSize] = e, this;
  }
  getY(t) {
    return this.array[t * this.itemSize + 1];
  }
  setY(t, e) {
    return this.array[t * this.itemSize + 1] = e, this;
  }
  getZ(t) {
    return this.array[t * this.itemSize + 2];
  }
  setZ(t, e) {
    return this.array[t * this.itemSize + 2] = e, this;
  }
  getW(t) {
    return this.array[t * this.itemSize + 3];
  }
  setW(t, e) {
    return this.array[t * this.itemSize + 3] = e, this;
  }
  setXY(t, e, o) {
    return t *= this.itemSize, this.array[t + 0] = e, this.array[t + 1] = o, this;
  }
  setXYZ(t, e, o, a) {
    return t *= this.itemSize, this.array[t + 0] = e, this.array[t + 1] = o, this.array[t + 2] = a, this;
  }
  setXYZW(t, e, o, a, l) {
    return t *= this.itemSize, this.array[t + 0] = e, this.array[t + 1] = o, this.array[t + 2] = a, this.array[t + 3] = l, this;
  }
  onUpload(t) {
    return this.onUploadCallback = t, this;
  }
  clone() {
    return new this.constructor(this.array, this.itemSize).copy(this);
  }
  toJSON() {
    const t = { itemSize: this.itemSize, type: this.array.constructor.name, array: Array.from(this.array), normalized: this.normalized };
    return this.name !== "" && (t.name = this.name), this.usage !== 35044 && (t.usage = this.usage), (this.updateRange.offset !== 0 || this.updateRange.count !== -1) && (t.updateRange = this.updateRange), t;
  }
}
class Md extends Ua {
  constructor(t, e, o) {
    super(new Uint16Array(t), e, o);
  }
}
class Bd extends Ua {
  constructor(t, e, o) {
    super(new Uint32Array(t), e, o);
  }
}
class Gi extends Ua {
  constructor(t, e, o) {
    super(new Float32Array(t), e, o);
  }
}
let ny = 0;
const da = new Fi(), kf = new Zi(), Su = new Br(), aa = new Tc(), ac = new Tc(), ji = new Br();
class ja extends Lu {
  constructor() {
    super(), this.isBufferGeometry = true, Object.defineProperty(this, "id", { value: ny++ }), this.uuid = Ec(), this.name = "", this.type = "BufferGeometry", this.index = null, this.attributes = {}, this.morphAttributes = {}, this.morphTargetsRelative = false, this.groups = [], this.boundingBox = null, this.boundingSphere = null, this.drawRange = { start: 0, count: 1 / 0 }, this.userData = {};
  }
  getIndex() {
    return this.index;
  }
  setIndex(t) {
    return Array.isArray(t) ? this.index = new (Td(t) ? Bd : Md)(t, 1) : this.index = t, this;
  }
  getAttribute(t) {
    return this.attributes[t];
  }
  setAttribute(t, e) {
    return this.attributes[t] = e, this;
  }
  deleteAttribute(t) {
    return delete this.attributes[t], this;
  }
  hasAttribute(t) {
    return this.attributes[t] !== void 0;
  }
  addGroup(t, e, o = 0) {
    this.groups.push({ start: t, count: e, materialIndex: o });
  }
  clearGroups() {
    this.groups = [];
  }
  setDrawRange(t, e) {
    this.drawRange.start = t, this.drawRange.count = e;
  }
  applyMatrix4(t) {
    const e = this.attributes.position;
    e !== void 0 && (e.applyMatrix4(t), e.needsUpdate = true);
    const o = this.attributes.normal;
    if (o !== void 0) {
      const l = new ga().getNormalMatrix(t);
      o.applyNormalMatrix(l), o.needsUpdate = true;
    }
    const a = this.attributes.tangent;
    return a !== void 0 && (a.transformDirection(t), a.needsUpdate = true), this.boundingBox !== null && this.computeBoundingBox(), this.boundingSphere !== null && this.computeBoundingSphere(), this;
  }
  applyQuaternion(t) {
    return da.makeRotationFromQuaternion(t), this.applyMatrix4(da), this;
  }
  rotateX(t) {
    return da.makeRotationX(t), this.applyMatrix4(da), this;
  }
  rotateY(t) {
    return da.makeRotationY(t), this.applyMatrix4(da), this;
  }
  rotateZ(t) {
    return da.makeRotationZ(t), this.applyMatrix4(da), this;
  }
  translate(t, e, o) {
    return da.makeTranslation(t, e, o), this.applyMatrix4(da), this;
  }
  scale(t, e, o) {
    return da.makeScale(t, e, o), this.applyMatrix4(da), this;
  }
  lookAt(t) {
    return kf.lookAt(t), kf.updateMatrix(), this.applyMatrix4(kf.matrix), this;
  }
  center() {
    return this.computeBoundingBox(), this.boundingBox.getCenter(Su).negate(), this.translate(Su.x, Su.y, Su.z), this;
  }
  setFromPoints(t) {
    const e = [];
    for (let o = 0, a = t.length; o < a; o++) {
      const l = t[o];
      e.push(l.x, l.y, l.z || 0);
    }
    return this.setAttribute("position", new Gi(e, 3)), this;
  }
  computeBoundingBox() {
    this.boundingBox === null && (this.boundingBox = new Tc());
    const t = this.attributes.position, e = this.morphAttributes.position;
    if (t && t.isGLBufferAttribute) {
      console.error('THREE.BufferGeometry.computeBoundingBox(): GLBufferAttribute requires a manual bounding box. Alternatively set "mesh.frustumCulled" to "false".', this), this.boundingBox.set(new Br(-1 / 0, -1 / 0, -1 / 0), new Br(1 / 0, 1 / 0, 1 / 0));
      return;
    }
    if (t !== void 0) {
      if (this.boundingBox.setFromBufferAttribute(t), e) for (let o = 0, a = e.length; o < a; o++) {
        const l = e[o];
        aa.setFromBufferAttribute(l), this.morphTargetsRelative ? (ji.addVectors(this.boundingBox.min, aa.min), this.boundingBox.expandByPoint(ji), ji.addVectors(this.boundingBox.max, aa.max), this.boundingBox.expandByPoint(ji)) : (this.boundingBox.expandByPoint(aa.min), this.boundingBox.expandByPoint(aa.max));
      }
    } else this.boundingBox.makeEmpty();
    (isNaN(this.boundingBox.min.x) || isNaN(this.boundingBox.min.y) || isNaN(this.boundingBox.min.z)) && console.error('THREE.BufferGeometry.computeBoundingBox(): Computed min/max have NaN values. The "position" attribute is likely to have NaN values.', this);
  }
  computeBoundingSphere() {
    this.boundingSphere === null && (this.boundingSphere = new _c());
    const t = this.attributes.position, e = this.morphAttributes.position;
    if (t && t.isGLBufferAttribute) {
      console.error('THREE.BufferGeometry.computeBoundingSphere(): GLBufferAttribute requires a manual bounding sphere. Alternatively set "mesh.frustumCulled" to "false".', this), this.boundingSphere.set(new Br(), 1 / 0);
      return;
    }
    if (t) {
      const o = this.boundingSphere.center;
      if (aa.setFromBufferAttribute(t), e) for (let l = 0, s = e.length; l < s; l++) {
        const i = e[l];
        ac.setFromBufferAttribute(i), this.morphTargetsRelative ? (ji.addVectors(aa.min, ac.min), aa.expandByPoint(ji), ji.addVectors(aa.max, ac.max), aa.expandByPoint(ji)) : (aa.expandByPoint(ac.min), aa.expandByPoint(ac.max));
      }
      aa.getCenter(o);
      let a = 0;
      for (let l = 0, s = t.count; l < s; l++) ji.fromBufferAttribute(t, l), a = Math.max(a, o.distanceToSquared(ji));
      if (e) for (let l = 0, s = e.length; l < s; l++) {
        const i = e[l], u = this.morphTargetsRelative;
        for (let d = 0, f = i.count; d < f; d++) ji.fromBufferAttribute(i, d), u && (Su.fromBufferAttribute(t, d), ji.add(Su)), a = Math.max(a, o.distanceToSquared(ji));
      }
      this.boundingSphere.radius = Math.sqrt(a), isNaN(this.boundingSphere.radius) && console.error('THREE.BufferGeometry.computeBoundingSphere(): Computed radius is NaN. The "position" attribute is likely to have NaN values.', this);
    }
  }
  computeTangents() {
    const t = this.index, e = this.attributes;
    if (t === null || e.position === void 0 || e.normal === void 0 || e.uv === void 0) {
      console.error("THREE.BufferGeometry: .computeTangents() failed. Missing required attributes (index, position, normal or uv)");
      return;
    }
    const o = t.array, a = e.position.array, l = e.normal.array, s = e.uv.array, i = a.length / 3;
    this.hasAttribute("tangent") === false && this.setAttribute("tangent", new Ua(new Float32Array(4 * i), 4));
    const u = this.getAttribute("tangent").array, d = [], f = [];
    for (let Z = 0; Z < i; Z++) d[Z] = new Br(), f[Z] = new Br();
    const p = new Br(), g = new Br(), b = new Br(), h = new Zo(), m = new Zo(), c = new Zo(), w = new Br(), T = new Br();
    function P(Z, D, V) {
      p.fromArray(a, Z * 3), g.fromArray(a, D * 3), b.fromArray(a, V * 3), h.fromArray(s, Z * 2), m.fromArray(s, D * 2), c.fromArray(s, V * 2), g.sub(p), b.sub(p), m.sub(h), c.sub(h);
      const S = 1 / (m.x * c.y - c.x * m.y);
      !isFinite(S) || (w.copy(g).multiplyScalar(c.y).addScaledVector(b, -m.y).multiplyScalar(S), T.copy(b).multiplyScalar(m.x).addScaledVector(g, -c.x).multiplyScalar(S), d[Z].add(w), d[D].add(w), d[V].add(w), f[Z].add(T), f[D].add(T), f[V].add(T));
    }
    let k = this.groups;
    k.length === 0 && (k = [{ start: 0, count: o.length }]);
    for (let Z = 0, D = k.length; Z < D; ++Z) {
      const V = k[Z], S = V.start, x = V.count;
      for (let B = S, W = S + x; B < W; B += 3) P(o[B + 0], o[B + 1], o[B + 2]);
    }
    const R = new Br(), F = new Br(), v = new Br(), U = new Br();
    function M(Z) {
      v.fromArray(l, Z * 3), U.copy(v);
      const D = d[Z];
      R.copy(D), R.sub(v.multiplyScalar(v.dot(D))).normalize(), F.crossVectors(U, D);
      const V = F.dot(f[Z]) < 0 ? -1 : 1;
      u[Z * 4] = R.x, u[Z * 4 + 1] = R.y, u[Z * 4 + 2] = R.z, u[Z * 4 + 3] = V;
    }
    for (let Z = 0, D = k.length; Z < D; ++Z) {
      const V = k[Z], S = V.start, x = V.count;
      for (let B = S, W = S + x; B < W; B += 3) M(o[B + 0]), M(o[B + 1]), M(o[B + 2]);
    }
  }
  computeVertexNormals() {
    const t = this.index, e = this.getAttribute("position");
    if (e !== void 0) {
      let o = this.getAttribute("normal");
      if (o === void 0) o = new Ua(new Float32Array(e.count * 3), 3), this.setAttribute("normal", o);
      else for (let g = 0, b = o.count; g < b; g++) o.setXYZ(g, 0, 0, 0);
      const a = new Br(), l = new Br(), s = new Br(), i = new Br(), u = new Br(), d = new Br(), f = new Br(), p = new Br();
      if (t) for (let g = 0, b = t.count; g < b; g += 3) {
        const h = t.getX(g + 0), m = t.getX(g + 1), c = t.getX(g + 2);
        a.fromBufferAttribute(e, h), l.fromBufferAttribute(e, m), s.fromBufferAttribute(e, c), f.subVectors(s, l), p.subVectors(a, l), f.cross(p), i.fromBufferAttribute(o, h), u.fromBufferAttribute(o, m), d.fromBufferAttribute(o, c), i.add(f), u.add(f), d.add(f), o.setXYZ(h, i.x, i.y, i.z), o.setXYZ(m, u.x, u.y, u.z), o.setXYZ(c, d.x, d.y, d.z);
      }
      else for (let g = 0, b = e.count; g < b; g += 3) a.fromBufferAttribute(e, g + 0), l.fromBufferAttribute(e, g + 1), s.fromBufferAttribute(e, g + 2), f.subVectors(s, l), p.subVectors(a, l), f.cross(p), o.setXYZ(g + 0, f.x, f.y, f.z), o.setXYZ(g + 1, f.x, f.y, f.z), o.setXYZ(g + 2, f.x, f.y, f.z);
      this.normalizeNormals(), o.needsUpdate = true;
    }
  }
  merge(t, e) {
    if (!(t && t.isBufferGeometry)) {
      console.error("THREE.BufferGeometry.merge(): geometry not an instance of THREE.BufferGeometry.", t);
      return;
    }
    e === void 0 && (e = 0, console.warn("THREE.BufferGeometry.merge(): Overwriting original geometry, starting at offset=0. Use BufferGeometryUtils.mergeBufferGeometries() for lossless merge."));
    const o = this.attributes;
    for (const a in o) {
      if (t.attributes[a] === void 0) continue;
      const l = o[a].array, s = t.attributes[a], i = s.array, u = s.itemSize * e, d = Math.min(i.length, l.length - u);
      for (let f = 0, p = u; f < d; f++, p++) l[p] = i[f];
    }
    return this;
  }
  normalizeNormals() {
    const t = this.attributes.normal;
    for (let e = 0, o = t.count; e < o; e++) ji.fromBufferAttribute(t, e), ji.normalize(), t.setXYZ(e, ji.x, ji.y, ji.z);
  }
  toNonIndexed() {
    function t(i, u) {
      const d = i.array, f = i.itemSize, p = i.normalized, g = new d.constructor(u.length * f);
      let b = 0, h = 0;
      for (let m = 0, c = u.length; m < c; m++) {
        i.isInterleavedBufferAttribute ? b = u[m] * i.data.stride + i.offset : b = u[m] * f;
        for (let w = 0; w < f; w++) g[h++] = d[b++];
      }
      return new Ua(g, f, p);
    }
    if (this.index === null) return console.warn("THREE.BufferGeometry.toNonIndexed(): BufferGeometry is already non-indexed."), this;
    const e = new ja(), o = this.index.array, a = this.attributes;
    for (const i in a) {
      const u = a[i], d = t(u, o);
      e.setAttribute(i, d);
    }
    const l = this.morphAttributes;
    for (const i in l) {
      const u = [], d = l[i];
      for (let f = 0, p = d.length; f < p; f++) {
        const g = d[f], b = t(g, o);
        u.push(b);
      }
      e.morphAttributes[i] = u;
    }
    e.morphTargetsRelative = this.morphTargetsRelative;
    const s = this.groups;
    for (let i = 0, u = s.length; i < u; i++) {
      const d = s[i];
      e.addGroup(d.start, d.count, d.materialIndex);
    }
    return e;
  }
  toJSON() {
    const t = { metadata: { version: 4.5, type: "BufferGeometry", generator: "BufferGeometry.toJSON" } };
    if (t.uuid = this.uuid, t.type = this.type, this.name !== "" && (t.name = this.name), Object.keys(this.userData).length > 0 && (t.userData = this.userData), this.parameters !== void 0) {
      const u = this.parameters;
      for (const d in u) u[d] !== void 0 && (t[d] = u[d]);
      return t;
    }
    t.data = { attributes: {} };
    const e = this.index;
    e !== null && (t.data.index = { type: e.array.constructor.name, array: Array.prototype.slice.call(e.array) });
    const o = this.attributes;
    for (const u in o) {
      const d = o[u];
      t.data.attributes[u] = d.toJSON(t.data);
    }
    const a = {};
    let l = false;
    for (const u in this.morphAttributes) {
      const d = this.morphAttributes[u], f = [];
      for (let p = 0, g = d.length; p < g; p++) {
        const b = d[p];
        f.push(b.toJSON(t.data));
      }
      f.length > 0 && (a[u] = f, l = true);
    }
    l && (t.data.morphAttributes = a, t.data.morphTargetsRelative = this.morphTargetsRelative);
    const s = this.groups;
    s.length > 0 && (t.data.groups = JSON.parse(JSON.stringify(s)));
    const i = this.boundingSphere;
    return i !== null && (t.data.boundingSphere = { center: i.center.toArray(), radius: i.radius }), t;
  }
  clone() {
    return new this.constructor().copy(this);
  }
  copy(t) {
    this.index = null, this.attributes = {}, this.morphAttributes = {}, this.groups = [], this.boundingBox = null, this.boundingSphere = null;
    const e = {};
    this.name = t.name;
    const o = t.index;
    o !== null && this.setIndex(o.clone(e));
    const a = t.attributes;
    for (const d in a) {
      const f = a[d];
      this.setAttribute(d, f.clone(e));
    }
    const l = t.morphAttributes;
    for (const d in l) {
      const f = [], p = l[d];
      for (let g = 0, b = p.length; g < b; g++) f.push(p[g].clone(e));
      this.morphAttributes[d] = f;
    }
    this.morphTargetsRelative = t.morphTargetsRelative;
    const s = t.groups;
    for (let d = 0, f = s.length; d < f; d++) {
      const p = s[d];
      this.addGroup(p.start, p.count, p.materialIndex);
    }
    const i = t.boundingBox;
    i !== null && (this.boundingBox = i.clone());
    const u = t.boundingSphere;
    return u !== null && (this.boundingSphere = u.clone()), this.drawRange.start = t.drawRange.start, this.drawRange.count = t.drawRange.count, this.userData = t.userData, t.parameters !== void 0 && (this.parameters = Object.assign({}, t.parameters)), this;
  }
  dispose() {
    this.dispatchEvent({ type: "dispose" });
  }
}
const ph = new Fi(), xu = new $m(), Of = new _c(), xs = new Br(), _s = new Br(), Es = new Br(), Pf = new Br(), Cf = new Br(), Rf = new Br(), cl = new Br(), ll = new Br(), fl = new Br(), pl = new Zo(), hl = new Zo(), dl = new Zo(), If = new Br(), ml = new Br();
class Fa extends Zi {
  constructor(t = new ja(), e = new Id()) {
    super(), this.isMesh = true, this.type = "Mesh", this.geometry = t, this.material = e, this.updateMorphTargets();
  }
  copy(t, e) {
    return super.copy(t, e), t.morphTargetInfluences !== void 0 && (this.morphTargetInfluences = t.morphTargetInfluences.slice()), t.morphTargetDictionary !== void 0 && (this.morphTargetDictionary = Object.assign({}, t.morphTargetDictionary)), this.material = t.material, this.geometry = t.geometry, this;
  }
  updateMorphTargets() {
    const t = this.geometry.morphAttributes, e = Object.keys(t);
    if (e.length > 0) {
      const o = t[e[0]];
      if (o !== void 0) {
        this.morphTargetInfluences = [], this.morphTargetDictionary = {};
        for (let a = 0, l = o.length; a < l; a++) {
          const s = o[a].name || String(a);
          this.morphTargetInfluences.push(0), this.morphTargetDictionary[s] = a;
        }
      }
    }
  }
  raycast(t, e) {
    const o = this.geometry, a = this.material, l = this.matrixWorld;
    if (a === void 0 || (o.boundingSphere === null && o.computeBoundingSphere(), Of.copy(o.boundingSphere), Of.applyMatrix4(l), t.ray.intersectsSphere(Of) === false) || (ph.copy(l).invert(), xu.copy(t.ray).applyMatrix4(ph), o.boundingBox !== null && xu.intersectsBox(o.boundingBox) === false)) return;
    let s;
    const i = o.index, u = o.attributes.position, d = o.morphAttributes.position, f = o.morphTargetsRelative, p = o.attributes.uv, g = o.attributes.uv2, b = o.groups, h = o.drawRange;
    if (i !== null) if (Array.isArray(a)) for (let m = 0, c = b.length; m < c; m++) {
      const w = b[m], T = a[w.materialIndex], P = Math.max(w.start, h.start), k = Math.min(i.count, Math.min(w.start + w.count, h.start + h.count));
      for (let R = P, F = k; R < F; R += 3) {
        const v = i.getX(R), U = i.getX(R + 1), M = i.getX(R + 2);
        s = yl(this, T, t, xu, u, d, f, p, g, v, U, M), s && (s.faceIndex = Math.floor(R / 3), s.face.materialIndex = w.materialIndex, e.push(s));
      }
    }
    else {
      const m = Math.max(0, h.start), c = Math.min(i.count, h.start + h.count);
      for (let w = m, T = c; w < T; w += 3) {
        const P = i.getX(w), k = i.getX(w + 1), R = i.getX(w + 2);
        s = yl(this, a, t, xu, u, d, f, p, g, P, k, R), s && (s.faceIndex = Math.floor(w / 3), e.push(s));
      }
    }
    else if (u !== void 0) if (Array.isArray(a)) for (let m = 0, c = b.length; m < c; m++) {
      const w = b[m], T = a[w.materialIndex], P = Math.max(w.start, h.start), k = Math.min(u.count, Math.min(w.start + w.count, h.start + h.count));
      for (let R = P, F = k; R < F; R += 3) {
        const v = R, U = R + 1, M = R + 2;
        s = yl(this, T, t, xu, u, d, f, p, g, v, U, M), s && (s.faceIndex = Math.floor(R / 3), s.face.materialIndex = w.materialIndex, e.push(s));
      }
    }
    else {
      const m = Math.max(0, h.start), c = Math.min(u.count, h.start + h.count);
      for (let w = m, T = c; w < T; w += 3) {
        const P = w, k = w + 1, R = w + 2;
        s = yl(this, a, t, xu, u, d, f, p, g, P, k, R), s && (s.faceIndex = Math.floor(w / 3), e.push(s));
      }
    }
  }
}
function oy(E, t, e, o, a, l, s, i) {
  let u;
  if (t.side === 1 ? u = o.intersectTriangle(s, l, a, true, i) : u = o.intersectTriangle(a, l, s, t.side !== 2, i), u === null) return null;
  ml.copy(i), ml.applyMatrix4(E.matrixWorld);
  const d = e.ray.origin.distanceTo(ml);
  return d < e.near || d > e.far ? null : { distance: d, point: ml.clone(), object: E };
}
function yl(E, t, e, o, a, l, s, i, u, d, f, p) {
  xs.fromBufferAttribute(a, d), _s.fromBufferAttribute(a, f), Es.fromBufferAttribute(a, p);
  const g = E.morphTargetInfluences;
  if (l && g) {
    cl.set(0, 0, 0), ll.set(0, 0, 0), fl.set(0, 0, 0);
    for (let h = 0, m = l.length; h < m; h++) {
      const c = g[h], w = l[h];
      c !== 0 && (Pf.fromBufferAttribute(w, d), Cf.fromBufferAttribute(w, f), Rf.fromBufferAttribute(w, p), s ? (cl.addScaledVector(Pf, c), ll.addScaledVector(Cf, c), fl.addScaledVector(Rf, c)) : (cl.addScaledVector(Pf.sub(xs), c), ll.addScaledVector(Cf.sub(_s), c), fl.addScaledVector(Rf.sub(Es), c)));
    }
    xs.add(cl), _s.add(ll), Es.add(fl);
  }
  E.isSkinnedMesh && (E.boneTransform(d, xs), E.boneTransform(f, _s), E.boneTransform(p, Es));
  const b = oy(E, t, e, o, xs, _s, Es, If);
  if (b) {
    i && (pl.fromBufferAttribute(i, d), hl.fromBufferAttribute(i, f), dl.fromBufferAttribute(i, p), b.uv = fs.getUV(If, xs, _s, Es, pl, hl, dl, new Zo())), u && (pl.fromBufferAttribute(u, d), hl.fromBufferAttribute(u, f), dl.fromBufferAttribute(u, p), b.uv2 = fs.getUV(If, xs, _s, Es, pl, hl, dl, new Zo()));
    const h = { a: d, b: f, c: p, normal: new Br(), materialIndex: 0 };
    fs.getNormal(xs, _s, Es, h.normal), b.face = h;
  }
  return b;
}
class Oc extends ja {
  constructor(t = 1, e = 1, o = 1, a = 1, l = 1, s = 1) {
    super(), this.type = "BoxGeometry", this.parameters = { width: t, height: e, depth: o, widthSegments: a, heightSegments: l, depthSegments: s };
    const i = this;
    a = Math.floor(a), l = Math.floor(l), s = Math.floor(s);
    const u = [], d = [], f = [], p = [];
    let g = 0, b = 0;
    h("z", "y", "x", -1, -1, o, e, t, s, l, 0), h("z", "y", "x", 1, -1, o, e, -t, s, l, 1), h("x", "z", "y", 1, 1, t, o, e, a, s, 2), h("x", "z", "y", 1, -1, t, o, -e, a, s, 3), h("x", "y", "z", 1, -1, t, e, o, a, l, 4), h("x", "y", "z", -1, -1, t, e, -o, a, l, 5), this.setIndex(u), this.setAttribute("position", new Gi(d, 3)), this.setAttribute("normal", new Gi(f, 3)), this.setAttribute("uv", new Gi(p, 2));
    function h(m, c, w, T, P, k, R, F, v, U, M) {
      const Z = k / v, D = R / U, V = k / 2, S = R / 2, x = F / 2, B = v + 1, W = U + 1;
      let lt = 0, pt = 0;
      const at = new Br();
      for (let rt = 0; rt < W; rt++) {
        const ot = rt * D - S;
        for (let X = 0; X < B; X++) {
          const I = X * Z - V;
          at[m] = I * T, at[c] = ot * P, at[w] = x, d.push(at.x, at.y, at.z), at[m] = 0, at[c] = 0, at[w] = F > 0 ? 1 : -1, f.push(at.x, at.y, at.z), p.push(X / v), p.push(1 - rt / U), lt += 1;
        }
      }
      for (let rt = 0; rt < U; rt++) for (let ot = 0; ot < v; ot++) {
        const X = g + ot + B * rt, I = g + ot + B * (rt + 1), nt = g + (ot + 1) + B * (rt + 1), ft = g + (ot + 1) + B * rt;
        u.push(X, I, ft), u.push(I, nt, ft), pt += 6;
      }
      i.addGroup(b, pt, M), b += pt, g += lt;
    }
  }
  static fromJSON(t) {
    return new Oc(t.width, t.height, t.depth, t.widthSegments, t.heightSegments, t.depthSegments);
  }
}
function Ru(E) {
  const t = {};
  for (const e in E) {
    t[e] = {};
    for (const o in E[e]) {
      const a = E[e][o];
      a && (a.isColor || a.isMatrix3 || a.isMatrix4 || a.isVector2 || a.isVector3 || a.isVector4 || a.isTexture || a.isQuaternion) ? t[e][o] = a.clone() : Array.isArray(a) ? t[e][o] = a.slice() : t[e][o] = a;
    }
  }
  return t;
}
function qi(E) {
  const t = {};
  for (let e = 0; e < E.length; e++) {
    const o = Ru(E[e]);
    for (const a in o) t[a] = o[a];
  }
  return t;
}
function iy(E) {
  const t = [];
  for (let e = 0; e < E.length; e++) t.push(E[e].clone());
  return t;
}
const ay = { clone: Ru, merge: qi };
var sy = `void main() {
	gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );
}`, uy = `void main() {
	gl_FragColor = vec4( 1.0, 0.0, 0.0, 1.0 );
}`;
class Js extends tu {
  constructor(t) {
    super(), this.isShaderMaterial = true, this.type = "ShaderMaterial", this.defines = {}, this.uniforms = {}, this.uniformsGroups = [], this.vertexShader = sy, this.fragmentShader = uy, this.linewidth = 1, this.wireframe = false, this.wireframeLinewidth = 1, this.fog = false, this.lights = false, this.clipping = false, this.extensions = { derivatives: false, fragDepth: false, drawBuffers: false, shaderTextureLOD: false }, this.defaultAttributeValues = { color: [1, 1, 1], uv: [0, 0], uv2: [0, 0] }, this.index0AttributeName = void 0, this.uniformsNeedUpdate = false, this.glslVersion = null, t !== void 0 && (t.attributes !== void 0 && console.error("THREE.ShaderMaterial: attributes should now be defined in THREE.BufferGeometry instead."), this.setValues(t));
  }
  copy(t) {
    return super.copy(t), this.fragmentShader = t.fragmentShader, this.vertexShader = t.vertexShader, this.uniforms = Ru(t.uniforms), this.uniformsGroups = iy(t.uniformsGroups), this.defines = Object.assign({}, t.defines), this.wireframe = t.wireframe, this.wireframeLinewidth = t.wireframeLinewidth, this.fog = t.fog, this.lights = t.lights, this.clipping = t.clipping, this.extensions = Object.assign({}, t.extensions), this.glslVersion = t.glslVersion, this;
  }
  toJSON(t) {
    const e = super.toJSON(t);
    e.glslVersion = this.glslVersion, e.uniforms = {};
    for (const a in this.uniforms) {
      const l = this.uniforms[a].value;
      l && l.isTexture ? e.uniforms[a] = { type: "t", value: l.toJSON(t).uuid } : l && l.isColor ? e.uniforms[a] = { type: "c", value: l.getHex() } : l && l.isVector2 ? e.uniforms[a] = { type: "v2", value: l.toArray() } : l && l.isVector3 ? e.uniforms[a] = { type: "v3", value: l.toArray() } : l && l.isVector4 ? e.uniforms[a] = { type: "v4", value: l.toArray() } : l && l.isMatrix3 ? e.uniforms[a] = { type: "m3", value: l.toArray() } : l && l.isMatrix4 ? e.uniforms[a] = { type: "m4", value: l.toArray() } : e.uniforms[a] = { value: l };
    }
    Object.keys(this.defines).length > 0 && (e.defines = this.defines), e.vertexShader = this.vertexShader, e.fragmentShader = this.fragmentShader;
    const o = {};
    for (const a in this.extensions) this.extensions[a] === true && (o[a] = true);
    return Object.keys(o).length > 0 && (e.extensions = o), e;
  }
}
class Ld extends Zi {
  constructor() {
    super(), this.isCamera = true, this.type = "Camera", this.matrixWorldInverse = new Fi(), this.projectionMatrix = new Fi(), this.projectionMatrixInverse = new Fi();
  }
  copy(t, e) {
    return super.copy(t, e), this.matrixWorldInverse.copy(t.matrixWorldInverse), this.projectionMatrix.copy(t.projectionMatrix), this.projectionMatrixInverse.copy(t.projectionMatrixInverse), this;
  }
  getWorldDirection(t) {
    this.updateWorldMatrix(true, false);
    const e = this.matrixWorld.elements;
    return t.set(-e[8], -e[9], -e[10]).normalize();
  }
  updateMatrixWorld(t) {
    super.updateMatrixWorld(t), this.matrixWorldInverse.copy(this.matrixWorld).invert();
  }
  updateWorldMatrix(t, e) {
    super.updateWorldMatrix(t, e), this.matrixWorldInverse.copy(this.matrixWorld).invert();
  }
  clone() {
    return new this.constructor().copy(this);
  }
}
class ua extends Ld {
  constructor(t = 50, e = 1, o = 0.1, a = 2e3) {
    super(), this.isPerspectiveCamera = true, this.type = "PerspectiveCamera", this.fov = t, this.zoom = 1, this.near = o, this.far = a, this.focus = 10, this.aspect = e, this.view = null, this.filmGauge = 35, this.filmOffset = 0, this.updateProjectionMatrix();
  }
  copy(t, e) {
    return super.copy(t, e), this.fov = t.fov, this.zoom = t.zoom, this.near = t.near, this.far = t.far, this.focus = t.focus, this.aspect = t.aspect, this.view = t.view === null ? null : Object.assign({}, t.view), this.filmGauge = t.filmGauge, this.filmOffset = t.filmOffset, this;
  }
  setFocalLength(t) {
    const e = 0.5 * this.getFilmHeight() / t;
    this.fov = Qf * 2 * Math.atan(e), this.updateProjectionMatrix();
  }
  getFocalLength() {
    const t = Math.tan(ff * 0.5 * this.fov);
    return 0.5 * this.getFilmHeight() / t;
  }
  getEffectiveFOV() {
    return Qf * 2 * Math.atan(Math.tan(ff * 0.5 * this.fov) / this.zoom);
  }
  getFilmWidth() {
    return this.filmGauge * Math.min(this.aspect, 1);
  }
  getFilmHeight() {
    return this.filmGauge / Math.max(this.aspect, 1);
  }
  setViewOffset(t, e, o, a, l, s) {
    this.aspect = t / e, this.view === null && (this.view = { enabled: true, fullWidth: 1, fullHeight: 1, offsetX: 0, offsetY: 0, width: 1, height: 1 }), this.view.enabled = true, this.view.fullWidth = t, this.view.fullHeight = e, this.view.offsetX = o, this.view.offsetY = a, this.view.width = l, this.view.height = s, this.updateProjectionMatrix();
  }
  clearViewOffset() {
    this.view !== null && (this.view.enabled = false), this.updateProjectionMatrix();
  }
  updateProjectionMatrix() {
    const t = this.near;
    let e = t * Math.tan(ff * 0.5 * this.fov) / this.zoom, o = 2 * e, a = this.aspect * o, l = -0.5 * a;
    const s = this.view;
    if (this.view !== null && this.view.enabled) {
      const u = s.fullWidth, d = s.fullHeight;
      l += s.offsetX * a / u, e -= s.offsetY * o / d, a *= s.width / u, o *= s.height / d;
    }
    const i = this.filmOffset;
    i !== 0 && (l += t * i / this.getFilmWidth()), this.projectionMatrix.makePerspective(l, l + a, e, e - o, t, this.far), this.projectionMatrixInverse.copy(this.projectionMatrix).invert();
  }
  toJSON(t) {
    const e = super.toJSON(t);
    return e.object.fov = this.fov, e.object.zoom = this.zoom, e.object.near = this.near, e.object.far = this.far, e.object.focus = this.focus, e.object.aspect = this.aspect, this.view !== null && (e.object.view = Object.assign({}, this.view)), e.object.filmGauge = this.filmGauge, e.object.filmOffset = this.filmOffset, e;
  }
}
const _u = 90, Eu = 1;
class cy extends Zi {
  constructor(t, e, o) {
    if (super(), this.type = "CubeCamera", o.isWebGLCubeRenderTarget !== true) {
      console.error("THREE.CubeCamera: The constructor now expects an instance of WebGLCubeRenderTarget as third parameter.");
      return;
    }
    this.renderTarget = o;
    const a = new ua(_u, Eu, t, e);
    a.layers = this.layers, a.up.set(0, -1, 0), a.lookAt(new Br(1, 0, 0)), this.add(a);
    const l = new ua(_u, Eu, t, e);
    l.layers = this.layers, l.up.set(0, -1, 0), l.lookAt(new Br(-1, 0, 0)), this.add(l);
    const s = new ua(_u, Eu, t, e);
    s.layers = this.layers, s.up.set(0, 0, 1), s.lookAt(new Br(0, 1, 0)), this.add(s);
    const i = new ua(_u, Eu, t, e);
    i.layers = this.layers, i.up.set(0, 0, -1), i.lookAt(new Br(0, -1, 0)), this.add(i);
    const u = new ua(_u, Eu, t, e);
    u.layers = this.layers, u.up.set(0, -1, 0), u.lookAt(new Br(0, 0, 1)), this.add(u);
    const d = new ua(_u, Eu, t, e);
    d.layers = this.layers, d.up.set(0, -1, 0), d.lookAt(new Br(0, 0, -1)), this.add(d);
  }
  update(t, e) {
    this.parent === null && this.updateMatrixWorld();
    const o = this.renderTarget, [a, l, s, i, u, d] = this.children, f = t.getRenderTarget(), p = t.toneMapping, g = t.xr.enabled;
    t.toneMapping = 0, t.xr.enabled = false;
    const b = o.texture.generateMipmaps;
    o.texture.generateMipmaps = false, t.setRenderTarget(o, 0), t.render(e, a), t.setRenderTarget(o, 1), t.render(e, l), t.setRenderTarget(o, 2), t.render(e, s), t.setRenderTarget(o, 3), t.render(e, i), t.setRenderTarget(o, 4), t.render(e, u), o.texture.generateMipmaps = b, t.setRenderTarget(o, 5), t.render(e, d), t.setRenderTarget(f), t.toneMapping = p, t.xr.enabled = g, o.texture.needsPMREMUpdate = true;
  }
}
class Nd extends ca {
  constructor(t, e, o, a, l, s, i, u, d, f) {
    t = t !== void 0 ? t : [], e = e !== void 0 ? e : 301, super(t, e, o, a, l, s, i, u, d, f), this.isCubeTexture = true, this.flipY = false;
  }
  get images() {
    return this.image;
  }
  set images(t) {
    this.image = t;
  }
}
class ly extends Qs {
  constructor(t, e = {}) {
    super(t, t, e), this.isWebGLCubeRenderTarget = true;
    const o = { width: t, height: t, depth: 1 }, a = [o, o, o, o, o, o];
    this.texture = new Nd(a, e.mapping, e.wrapS, e.wrapT, e.magFilter, e.minFilter, e.format, e.type, e.anisotropy, e.encoding), this.texture.isRenderTargetTexture = true, this.texture.generateMipmaps = e.generateMipmaps !== void 0 ? e.generateMipmaps : false, this.texture.minFilter = e.minFilter !== void 0 ? e.minFilter : 1006;
  }
  fromEquirectangularTexture(t, e) {
    this.texture.type = e.type, this.texture.encoding = e.encoding, this.texture.generateMipmaps = e.generateMipmaps, this.texture.minFilter = e.minFilter, this.texture.magFilter = e.magFilter;
    const o = { uniforms: { tEquirect: { value: null } }, vertexShader: `

				varying vec3 vWorldDirection;

				vec3 transformDirection( in vec3 dir, in mat4 matrix ) {

					return normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );

				}

				void main() {

					vWorldDirection = transformDirection( position, modelMatrix );

					#include <begin_vertex>
					#include <project_vertex>

				}
			`, fragmentShader: `

				uniform sampler2D tEquirect;

				varying vec3 vWorldDirection;

				#include <common>

				void main() {

					vec3 direction = normalize( vWorldDirection );

					vec2 sampleUV = equirectUv( direction );

					gl_FragColor = texture2D( tEquirect, sampleUV );

				}
			` }, a = new Oc(5, 5, 5), l = new Js({ name: "CubemapFromEquirect", uniforms: Ru(o.uniforms), vertexShader: o.vertexShader, fragmentShader: o.fragmentShader, side: 1, blending: 0 });
    l.uniforms.tEquirect.value = e;
    const s = new Fa(a, l), i = e.minFilter;
    return e.minFilter === 1008 && (e.minFilter = 1006), new cy(1, 10, this).update(t, s), e.minFilter = i, s.geometry.dispose(), s.material.dispose(), this;
  }
  clear(t, e, o, a) {
    const l = t.getRenderTarget();
    for (let s = 0; s < 6; s++) t.setRenderTarget(this, s), t.clear(e, o, a);
    t.setRenderTarget(l);
  }
}
const Mf = new Br(), fy = new Br(), py = new ga();
class qs {
  constructor(t = new Br(1, 0, 0), e = 0) {
    this.isPlane = true, this.normal = t, this.constant = e;
  }
  set(t, e) {
    return this.normal.copy(t), this.constant = e, this;
  }
  setComponents(t, e, o, a) {
    return this.normal.set(t, e, o), this.constant = a, this;
  }
  setFromNormalAndCoplanarPoint(t, e) {
    return this.normal.copy(t), this.constant = -e.dot(this.normal), this;
  }
  setFromCoplanarPoints(t, e, o) {
    const a = Mf.subVectors(o, e).cross(fy.subVectors(t, e)).normalize();
    return this.setFromNormalAndCoplanarPoint(a, t), this;
  }
  copy(t) {
    return this.normal.copy(t.normal), this.constant = t.constant, this;
  }
  normalize() {
    const t = 1 / this.normal.length();
    return this.normal.multiplyScalar(t), this.constant *= t, this;
  }
  negate() {
    return this.constant *= -1, this.normal.negate(), this;
  }
  distanceToPoint(t) {
    return this.normal.dot(t) + this.constant;
  }
  distanceToSphere(t) {
    return this.distanceToPoint(t.center) - t.radius;
  }
  projectPoint(t, e) {
    return e.copy(this.normal).multiplyScalar(-this.distanceToPoint(t)).add(t);
  }
  intersectLine(t, e) {
    const o = t.delta(Mf), a = this.normal.dot(o);
    if (a === 0) return this.distanceToPoint(t.start) === 0 ? e.copy(t.start) : null;
    const l = -(t.start.dot(this.normal) + this.constant) / a;
    return l < 0 || l > 1 ? null : e.copy(o).multiplyScalar(l).add(t.start);
  }
  intersectsLine(t) {
    const e = this.distanceToPoint(t.start), o = this.distanceToPoint(t.end);
    return e < 0 && o > 0 || o < 0 && e > 0;
  }
  intersectsBox(t) {
    return t.intersectsPlane(this);
  }
  intersectsSphere(t) {
    return t.intersectsPlane(this);
  }
  coplanarPoint(t) {
    return t.copy(this.normal).multiplyScalar(-this.constant);
  }
  applyMatrix4(t, e) {
    const o = e || py.getNormalMatrix(t), a = this.coplanarPoint(Mf).applyMatrix4(t), l = this.normal.applyMatrix3(o).normalize();
    return this.constant = -a.dot(l), this;
  }
  translate(t) {
    return this.constant -= t.dot(this.normal), this;
  }
  equals(t) {
    return t.normal.equals(this.normal) && t.constant === this.constant;
  }
  clone() {
    return new this.constructor().copy(this);
  }
}
const Au = new _c(), gl = new Br();
class hp {
  constructor(t = new qs(), e = new qs(), o = new qs(), a = new qs(), l = new qs(), s = new qs()) {
    this.planes = [t, e, o, a, l, s];
  }
  set(t, e, o, a, l, s) {
    const i = this.planes;
    return i[0].copy(t), i[1].copy(e), i[2].copy(o), i[3].copy(a), i[4].copy(l), i[5].copy(s), this;
  }
  copy(t) {
    const e = this.planes;
    for (let o = 0; o < 6; o++) e[o].copy(t.planes[o]);
    return this;
  }
  setFromProjectionMatrix(t) {
    const e = this.planes, o = t.elements, a = o[0], l = o[1], s = o[2], i = o[3], u = o[4], d = o[5], f = o[6], p = o[7], g = o[8], b = o[9], h = o[10], m = o[11], c = o[12], w = o[13], T = o[14], P = o[15];
    return e[0].setComponents(i - a, p - u, m - g, P - c).normalize(), e[1].setComponents(i + a, p + u, m + g, P + c).normalize(), e[2].setComponents(i + l, p + d, m + b, P + w).normalize(), e[3].setComponents(i - l, p - d, m - b, P - w).normalize(), e[4].setComponents(i - s, p - f, m - h, P - T).normalize(), e[5].setComponents(i + s, p + f, m + h, P + T).normalize(), this;
  }
  intersectsObject(t) {
    const e = t.geometry;
    return e.boundingSphere === null && e.computeBoundingSphere(), Au.copy(e.boundingSphere).applyMatrix4(t.matrixWorld), this.intersectsSphere(Au);
  }
  intersectsSprite(t) {
    return Au.center.set(0, 0, 0), Au.radius = 0.7071067811865476, Au.applyMatrix4(t.matrixWorld), this.intersectsSphere(Au);
  }
  intersectsSphere(t) {
    const e = this.planes, o = t.center, a = -t.radius;
    for (let l = 0; l < 6; l++) if (e[l].distanceToPoint(o) < a) return false;
    return true;
  }
  intersectsBox(t) {
    const e = this.planes;
    for (let o = 0; o < 6; o++) {
      const a = e[o];
      if (gl.x = a.normal.x > 0 ? t.max.x : t.min.x, gl.y = a.normal.y > 0 ? t.max.y : t.min.y, gl.z = a.normal.z > 0 ? t.max.z : t.min.z, a.distanceToPoint(gl) < 0) return false;
    }
    return true;
  }
  containsPoint(t) {
    const e = this.planes;
    for (let o = 0; o < 6; o++) if (e[o].distanceToPoint(t) < 0) return false;
    return true;
  }
  clone() {
    return new this.constructor().copy(this);
  }
}
function Dd() {
  let E = null, t = false, e = null, o = null;
  function a(l, s) {
    e(l, s), o = E.requestAnimationFrame(a);
  }
  return { start: function() {
    t !== true && e !== null && (o = E.requestAnimationFrame(a), t = true);
  }, stop: function() {
    E.cancelAnimationFrame(o), t = false;
  }, setAnimationLoop: function(l) {
    e = l;
  }, setContext: function(l) {
    E = l;
  } };
}
function hy(E, t) {
  const e = t.isWebGL2, o = /* @__PURE__ */ new WeakMap();
  function a(d, f) {
    const p = d.array, g = d.usage, b = E.createBuffer();
    E.bindBuffer(f, b), E.bufferData(f, p, g), d.onUploadCallback();
    let h;
    if (p instanceof Float32Array) h = 5126;
    else if (p instanceof Uint16Array) if (d.isFloat16BufferAttribute) if (e) h = 5131;
    else throw new Error("THREE.WebGLAttributes: Usage of Float16BufferAttribute requires WebGL2.");
    else h = 5123;
    else if (p instanceof Int16Array) h = 5122;
    else if (p instanceof Uint32Array) h = 5125;
    else if (p instanceof Int32Array) h = 5124;
    else if (p instanceof Int8Array) h = 5120;
    else if (p instanceof Uint8Array) h = 5121;
    else if (p instanceof Uint8ClampedArray) h = 5121;
    else throw new Error("THREE.WebGLAttributes: Unsupported buffer data format: " + p);
    return { buffer: b, type: h, bytesPerElement: p.BYTES_PER_ELEMENT, version: d.version };
  }
  function l(d, f, p) {
    const g = f.array, b = f.updateRange;
    E.bindBuffer(p, d), b.count === -1 ? E.bufferSubData(p, 0, g) : (e ? E.bufferSubData(p, b.offset * g.BYTES_PER_ELEMENT, g, b.offset, b.count) : E.bufferSubData(p, b.offset * g.BYTES_PER_ELEMENT, g.subarray(b.offset, b.offset + b.count)), b.count = -1);
  }
  function s(d) {
    return d.isInterleavedBufferAttribute && (d = d.data), o.get(d);
  }
  function i(d) {
    d.isInterleavedBufferAttribute && (d = d.data);
    const f = o.get(d);
    f && (E.deleteBuffer(f.buffer), o.delete(d));
  }
  function u(d, f) {
    if (d.isGLBufferAttribute) {
      const g = o.get(d);
      (!g || g.version < d.version) && o.set(d, { buffer: d.buffer, type: d.type, bytesPerElement: d.elementSize, version: d.version });
      return;
    }
    d.isInterleavedBufferAttribute && (d = d.data);
    const p = o.get(d);
    p === void 0 ? o.set(d, a(d, f)) : p.version < d.version && (l(p.buffer, d, f), p.version = d.version);
  }
  return { get: s, remove: i, update: u };
}
class Kl extends ja {
  constructor(t = 1, e = 1, o = 1, a = 1) {
    super(), this.type = "PlaneGeometry", this.parameters = { width: t, height: e, widthSegments: o, heightSegments: a };
    const l = t / 2, s = e / 2, i = Math.floor(o), u = Math.floor(a), d = i + 1, f = u + 1, p = t / i, g = e / u, b = [], h = [], m = [], c = [];
    for (let w = 0; w < f; w++) {
      const T = w * g - s;
      for (let P = 0; P < d; P++) {
        const k = P * p - l;
        h.push(k, -T, 0), m.push(0, 0, 1), c.push(P / i), c.push(1 - w / u);
      }
    }
    for (let w = 0; w < u; w++) for (let T = 0; T < i; T++) {
      const P = T + d * w, k = T + d * (w + 1), R = T + 1 + d * (w + 1), F = T + 1 + d * w;
      b.push(P, k, F), b.push(k, R, F);
    }
    this.setIndex(b), this.setAttribute("position", new Gi(h, 3)), this.setAttribute("normal", new Gi(m, 3)), this.setAttribute("uv", new Gi(c, 2));
  }
  static fromJSON(t) {
    return new Kl(t.width, t.height, t.widthSegments, t.heightSegments);
  }
}
var dy = `#ifdef USE_ALPHAMAP
	diffuseColor.a *= texture2D( alphaMap, vUv ).g;
#endif`, my = `#ifdef USE_ALPHAMAP
	uniform sampler2D alphaMap;
#endif`, yy = `#ifdef USE_ALPHATEST
	if ( diffuseColor.a < alphaTest ) discard;
#endif`, gy = `#ifdef USE_ALPHATEST
	uniform float alphaTest;
#endif`, vy = `#ifdef USE_AOMAP
	float ambientOcclusion = ( texture2D( aoMap, vUv2 ).r - 1.0 ) * aoMapIntensity + 1.0;
	reflectedLight.indirectDiffuse *= ambientOcclusion;
	#if defined( USE_ENVMAP ) && defined( STANDARD )
		float dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );
		reflectedLight.indirectSpecular *= computeSpecularOcclusion( dotNV, ambientOcclusion, material.roughness );
	#endif
#endif`, by = `#ifdef USE_AOMAP
	uniform sampler2D aoMap;
	uniform float aoMapIntensity;
#endif`, wy = "vec3 transformed = vec3( position );", Sy = `vec3 objectNormal = vec3( normal );
#ifdef USE_TANGENT
	vec3 objectTangent = vec3( tangent.xyz );
#endif`, xy = `vec3 BRDF_Lambert( const in vec3 diffuseColor ) {
	return RECIPROCAL_PI * diffuseColor;
}
vec3 F_Schlick( const in vec3 f0, const in float f90, const in float dotVH ) {
	float fresnel = exp2( ( - 5.55473 * dotVH - 6.98316 ) * dotVH );
	return f0 * ( 1.0 - fresnel ) + ( f90 * fresnel );
}
float F_Schlick( const in float f0, const in float f90, const in float dotVH ) {
	float fresnel = exp2( ( - 5.55473 * dotVH - 6.98316 ) * dotVH );
	return f0 * ( 1.0 - fresnel ) + ( f90 * fresnel );
}
vec3 Schlick_to_F0( const in vec3 f, const in float f90, const in float dotVH ) {
    float x = clamp( 1.0 - dotVH, 0.0, 1.0 );
    float x2 = x * x;
    float x5 = clamp( x * x2 * x2, 0.0, 0.9999 );
    return ( f - vec3( f90 ) * x5 ) / ( 1.0 - x5 );
}
float V_GGX_SmithCorrelated( const in float alpha, const in float dotNL, const in float dotNV ) {
	float a2 = pow2( alpha );
	float gv = dotNL * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );
	float gl = dotNV * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );
	return 0.5 / max( gv + gl, EPSILON );
}
float D_GGX( const in float alpha, const in float dotNH ) {
	float a2 = pow2( alpha );
	float denom = pow2( dotNH ) * ( a2 - 1.0 ) + 1.0;
	return RECIPROCAL_PI * a2 / pow2( denom );
}
vec3 BRDF_GGX( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in vec3 f0, const in float f90, const in float roughness ) {
	float alpha = pow2( roughness );
	vec3 halfDir = normalize( lightDir + viewDir );
	float dotNL = saturate( dot( normal, lightDir ) );
	float dotNV = saturate( dot( normal, viewDir ) );
	float dotNH = saturate( dot( normal, halfDir ) );
	float dotVH = saturate( dot( viewDir, halfDir ) );
	vec3 F = F_Schlick( f0, f90, dotVH );
	float V = V_GGX_SmithCorrelated( alpha, dotNL, dotNV );
	float D = D_GGX( alpha, dotNH );
	return F * ( V * D );
}
#ifdef USE_IRIDESCENCE
	vec3 BRDF_GGX_Iridescence( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in vec3 f0, const in float f90, const in float iridescence, const in vec3 iridescenceFresnel, const in float roughness ) {
		float alpha = pow2( roughness );
		vec3 halfDir = normalize( lightDir + viewDir );
		float dotNL = saturate( dot( normal, lightDir ) );
		float dotNV = saturate( dot( normal, viewDir ) );
		float dotNH = saturate( dot( normal, halfDir ) );
		float dotVH = saturate( dot( viewDir, halfDir ) );
		vec3 F = mix( F_Schlick( f0, f90, dotVH ), iridescenceFresnel, iridescence );
		float V = V_GGX_SmithCorrelated( alpha, dotNL, dotNV );
		float D = D_GGX( alpha, dotNH );
		return F * ( V * D );
	}
#endif
vec2 LTC_Uv( const in vec3 N, const in vec3 V, const in float roughness ) {
	const float LUT_SIZE = 64.0;
	const float LUT_SCALE = ( LUT_SIZE - 1.0 ) / LUT_SIZE;
	const float LUT_BIAS = 0.5 / LUT_SIZE;
	float dotNV = saturate( dot( N, V ) );
	vec2 uv = vec2( roughness, sqrt( 1.0 - dotNV ) );
	uv = uv * LUT_SCALE + LUT_BIAS;
	return uv;
}
float LTC_ClippedSphereFormFactor( const in vec3 f ) {
	float l = length( f );
	return max( ( l * l + f.z ) / ( l + 1.0 ), 0.0 );
}
vec3 LTC_EdgeVectorFormFactor( const in vec3 v1, const in vec3 v2 ) {
	float x = dot( v1, v2 );
	float y = abs( x );
	float a = 0.8543985 + ( 0.4965155 + 0.0145206 * y ) * y;
	float b = 3.4175940 + ( 4.1616724 + y ) * y;
	float v = a / b;
	float theta_sintheta = ( x > 0.0 ) ? v : 0.5 * inversesqrt( max( 1.0 - x * x, 1e-7 ) ) - v;
	return cross( v1, v2 ) * theta_sintheta;
}
vec3 LTC_Evaluate( const in vec3 N, const in vec3 V, const in vec3 P, const in mat3 mInv, const in vec3 rectCoords[ 4 ] ) {
	vec3 v1 = rectCoords[ 1 ] - rectCoords[ 0 ];
	vec3 v2 = rectCoords[ 3 ] - rectCoords[ 0 ];
	vec3 lightNormal = cross( v1, v2 );
	if( dot( lightNormal, P - rectCoords[ 0 ] ) < 0.0 ) return vec3( 0.0 );
	vec3 T1, T2;
	T1 = normalize( V - N * dot( V, N ) );
	T2 = - cross( N, T1 );
	mat3 mat = mInv * transposeMat3( mat3( T1, T2, N ) );
	vec3 coords[ 4 ];
	coords[ 0 ] = mat * ( rectCoords[ 0 ] - P );
	coords[ 1 ] = mat * ( rectCoords[ 1 ] - P );
	coords[ 2 ] = mat * ( rectCoords[ 2 ] - P );
	coords[ 3 ] = mat * ( rectCoords[ 3 ] - P );
	coords[ 0 ] = normalize( coords[ 0 ] );
	coords[ 1 ] = normalize( coords[ 1 ] );
	coords[ 2 ] = normalize( coords[ 2 ] );
	coords[ 3 ] = normalize( coords[ 3 ] );
	vec3 vectorFormFactor = vec3( 0.0 );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 0 ], coords[ 1 ] );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 1 ], coords[ 2 ] );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 2 ], coords[ 3 ] );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 3 ], coords[ 0 ] );
	float result = LTC_ClippedSphereFormFactor( vectorFormFactor );
	return vec3( result );
}
float G_BlinnPhong_Implicit( ) {
	return 0.25;
}
float D_BlinnPhong( const in float shininess, const in float dotNH ) {
	return RECIPROCAL_PI * ( shininess * 0.5 + 1.0 ) * pow( dotNH, shininess );
}
vec3 BRDF_BlinnPhong( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in vec3 specularColor, const in float shininess ) {
	vec3 halfDir = normalize( lightDir + viewDir );
	float dotNH = saturate( dot( normal, halfDir ) );
	float dotVH = saturate( dot( viewDir, halfDir ) );
	vec3 F = F_Schlick( specularColor, 1.0, dotVH );
	float G = G_BlinnPhong_Implicit( );
	float D = D_BlinnPhong( shininess, dotNH );
	return F * ( G * D );
}
#if defined( USE_SHEEN )
float D_Charlie( float roughness, float dotNH ) {
	float alpha = pow2( roughness );
	float invAlpha = 1.0 / alpha;
	float cos2h = dotNH * dotNH;
	float sin2h = max( 1.0 - cos2h, 0.0078125 );
	return ( 2.0 + invAlpha ) * pow( sin2h, invAlpha * 0.5 ) / ( 2.0 * PI );
}
float V_Neubelt( float dotNV, float dotNL ) {
	return saturate( 1.0 / ( 4.0 * ( dotNL + dotNV - dotNL * dotNV ) ) );
}
vec3 BRDF_Sheen( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, vec3 sheenColor, const in float sheenRoughness ) {
	vec3 halfDir = normalize( lightDir + viewDir );
	float dotNL = saturate( dot( normal, lightDir ) );
	float dotNV = saturate( dot( normal, viewDir ) );
	float dotNH = saturate( dot( normal, halfDir ) );
	float D = D_Charlie( sheenRoughness, dotNH );
	float V = V_Neubelt( dotNV, dotNL );
	return sheenColor * ( D * V );
}
#endif`, _y = `#ifdef USE_IRIDESCENCE
	const mat3 XYZ_TO_REC709 = mat3(
		 3.2404542, -0.9692660,  0.0556434,
		-1.5371385,  1.8760108, -0.2040259,
		-0.4985314,  0.0415560,  1.0572252
	);
	vec3 Fresnel0ToIor( vec3 fresnel0 ) {
		vec3 sqrtF0 = sqrt( fresnel0 );
		return ( vec3( 1.0 ) + sqrtF0 ) / ( vec3( 1.0 ) - sqrtF0 );
	}
	vec3 IorToFresnel0( vec3 transmittedIor, float incidentIor ) {
		return pow2( ( transmittedIor - vec3( incidentIor ) ) / ( transmittedIor + vec3( incidentIor ) ) );
	}
	float IorToFresnel0( float transmittedIor, float incidentIor ) {
		return pow2( ( transmittedIor - incidentIor ) / ( transmittedIor + incidentIor ));
	}
	vec3 evalSensitivity( float OPD, vec3 shift ) {
		float phase = 2.0 * PI * OPD * 1.0e-9;
		vec3 val = vec3( 5.4856e-13, 4.4201e-13, 5.2481e-13 );
		vec3 pos = vec3( 1.6810e+06, 1.7953e+06, 2.2084e+06 );
		vec3 var = vec3( 4.3278e+09, 9.3046e+09, 6.6121e+09 );
		vec3 xyz = val * sqrt( 2.0 * PI * var ) * cos( pos * phase + shift ) * exp( - pow2( phase ) * var );
		xyz.x += 9.7470e-14 * sqrt( 2.0 * PI * 4.5282e+09 ) * cos( 2.2399e+06 * phase + shift[ 0 ] ) * exp( - 4.5282e+09 * pow2( phase ) );
		xyz /= 1.0685e-7;
		vec3 rgb = XYZ_TO_REC709 * xyz;
		return rgb;
	}
	vec3 evalIridescence( float outsideIOR, float eta2, float cosTheta1, float thinFilmThickness, vec3 baseF0 ) {
		vec3 I;
		float iridescenceIOR = mix( outsideIOR, eta2, smoothstep( 0.0, 0.03, thinFilmThickness ) );
		float sinTheta2Sq = pow2( outsideIOR / iridescenceIOR ) * ( 1.0 - pow2( cosTheta1 ) );
		float cosTheta2Sq = 1.0 - sinTheta2Sq;
		if ( cosTheta2Sq < 0.0 ) {
			 return vec3( 1.0 );
		}
		float cosTheta2 = sqrt( cosTheta2Sq );
		float R0 = IorToFresnel0( iridescenceIOR, outsideIOR );
		float R12 = F_Schlick( R0, 1.0, cosTheta1 );
		float R21 = R12;
		float T121 = 1.0 - R12;
		float phi12 = 0.0;
		if ( iridescenceIOR < outsideIOR ) phi12 = PI;
		float phi21 = PI - phi12;
		vec3 baseIOR = Fresnel0ToIor( clamp( baseF0, 0.0, 0.9999 ) );		vec3 R1 = IorToFresnel0( baseIOR, iridescenceIOR );
		vec3 R23 = F_Schlick( R1, 1.0, cosTheta2 );
		vec3 phi23 = vec3( 0.0 );
		if ( baseIOR[ 0 ] < iridescenceIOR ) phi23[ 0 ] = PI;
		if ( baseIOR[ 1 ] < iridescenceIOR ) phi23[ 1 ] = PI;
		if ( baseIOR[ 2 ] < iridescenceIOR ) phi23[ 2 ] = PI;
		float OPD = 2.0 * iridescenceIOR * thinFilmThickness * cosTheta2;
		vec3 phi = vec3( phi21 ) + phi23;
		vec3 R123 = clamp( R12 * R23, 1e-5, 0.9999 );
		vec3 r123 = sqrt( R123 );
		vec3 Rs = pow2( T121 ) * R23 / ( vec3( 1.0 ) - R123 );
		vec3 C0 = R12 + Rs;
		I = C0;
		vec3 Cm = Rs - T121;
		for ( int m = 1; m <= 2; ++ m ) {
			Cm *= r123;
			vec3 Sm = 2.0 * evalSensitivity( float( m ) * OPD, float( m ) * phi );
			I += Cm * Sm;
		}
		return max( I, vec3( 0.0 ) );
	}
#endif`, Ey = `#ifdef USE_BUMPMAP
	uniform sampler2D bumpMap;
	uniform float bumpScale;
	vec2 dHdxy_fwd() {
		vec2 dSTdx = dFdx( vUv );
		vec2 dSTdy = dFdy( vUv );
		float Hll = bumpScale * texture2D( bumpMap, vUv ).x;
		float dBx = bumpScale * texture2D( bumpMap, vUv + dSTdx ).x - Hll;
		float dBy = bumpScale * texture2D( bumpMap, vUv + dSTdy ).x - Hll;
		return vec2( dBx, dBy );
	}
	vec3 perturbNormalArb( vec3 surf_pos, vec3 surf_norm, vec2 dHdxy, float faceDirection ) {
		vec3 vSigmaX = dFdx( surf_pos.xyz );
		vec3 vSigmaY = dFdy( surf_pos.xyz );
		vec3 vN = surf_norm;
		vec3 R1 = cross( vSigmaY, vN );
		vec3 R2 = cross( vN, vSigmaX );
		float fDet = dot( vSigmaX, R1 ) * faceDirection;
		vec3 vGrad = sign( fDet ) * ( dHdxy.x * R1 + dHdxy.y * R2 );
		return normalize( abs( fDet ) * surf_norm - vGrad );
	}
#endif`, Ay = `#if NUM_CLIPPING_PLANES > 0
	vec4 plane;
	#pragma unroll_loop_start
	for ( int i = 0; i < UNION_CLIPPING_PLANES; i ++ ) {
		plane = clippingPlanes[ i ];
		if ( dot( vClipPosition, plane.xyz ) > plane.w ) discard;
	}
	#pragma unroll_loop_end
	#if UNION_CLIPPING_PLANES < NUM_CLIPPING_PLANES
		bool clipped = true;
		#pragma unroll_loop_start
		for ( int i = UNION_CLIPPING_PLANES; i < NUM_CLIPPING_PLANES; i ++ ) {
			plane = clippingPlanes[ i ];
			clipped = ( dot( vClipPosition, plane.xyz ) > plane.w ) && clipped;
		}
		#pragma unroll_loop_end
		if ( clipped ) discard;
	#endif
#endif`, Ty = `#if NUM_CLIPPING_PLANES > 0
	varying vec3 vClipPosition;
	uniform vec4 clippingPlanes[ NUM_CLIPPING_PLANES ];
#endif`, ky = `#if NUM_CLIPPING_PLANES > 0
	varying vec3 vClipPosition;
#endif`, Oy = `#if NUM_CLIPPING_PLANES > 0
	vClipPosition = - mvPosition.xyz;
#endif`, Py = `#if defined( USE_COLOR_ALPHA )
	diffuseColor *= vColor;
#elif defined( USE_COLOR )
	diffuseColor.rgb *= vColor;
#endif`, Cy = `#if defined( USE_COLOR_ALPHA )
	varying vec4 vColor;
#elif defined( USE_COLOR )
	varying vec3 vColor;
#endif`, Ry = `#if defined( USE_COLOR_ALPHA )
	varying vec4 vColor;
#elif defined( USE_COLOR ) || defined( USE_INSTANCING_COLOR )
	varying vec3 vColor;
#endif`, Iy = `#if defined( USE_COLOR_ALPHA )
	vColor = vec4( 1.0 );
#elif defined( USE_COLOR ) || defined( USE_INSTANCING_COLOR )
	vColor = vec3( 1.0 );
#endif
#ifdef USE_COLOR
	vColor *= color;
#endif
#ifdef USE_INSTANCING_COLOR
	vColor.xyz *= instanceColor.xyz;
#endif`, My = `#define PI 3.141592653589793
#define PI2 6.283185307179586
#define PI_HALF 1.5707963267948966
#define RECIPROCAL_PI 0.3183098861837907
#define RECIPROCAL_PI2 0.15915494309189535
#define EPSILON 1e-6
#ifndef saturate
#define saturate( a ) clamp( a, 0.0, 1.0 )
#endif
#define whiteComplement( a ) ( 1.0 - saturate( a ) )
float pow2( const in float x ) { return x*x; }
vec3 pow2( const in vec3 x ) { return x*x; }
float pow3( const in float x ) { return x*x*x; }
float pow4( const in float x ) { float x2 = x*x; return x2*x2; }
float max3( const in vec3 v ) { return max( max( v.x, v.y ), v.z ); }
float average( const in vec3 v ) { return dot( v, vec3( 0.3333333 ) ); }
highp float rand( const in vec2 uv ) {
	const highp float a = 12.9898, b = 78.233, c = 43758.5453;
	highp float dt = dot( uv.xy, vec2( a,b ) ), sn = mod( dt, PI );
	return fract( sin( sn ) * c );
}
#ifdef HIGH_PRECISION
	float precisionSafeLength( vec3 v ) { return length( v ); }
#else
	float precisionSafeLength( vec3 v ) {
		float maxComponent = max3( abs( v ) );
		return length( v / maxComponent ) * maxComponent;
	}
#endif
struct IncidentLight {
	vec3 color;
	vec3 direction;
	bool visible;
};
struct ReflectedLight {
	vec3 directDiffuse;
	vec3 directSpecular;
	vec3 indirectDiffuse;
	vec3 indirectSpecular;
};
struct GeometricContext {
	vec3 position;
	vec3 normal;
	vec3 viewDir;
#ifdef USE_CLEARCOAT
	vec3 clearcoatNormal;
#endif
};
vec3 transformDirection( in vec3 dir, in mat4 matrix ) {
	return normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );
}
vec3 inverseTransformDirection( in vec3 dir, in mat4 matrix ) {
	return normalize( ( vec4( dir, 0.0 ) * matrix ).xyz );
}
mat3 transposeMat3( const in mat3 m ) {
	mat3 tmp;
	tmp[ 0 ] = vec3( m[ 0 ].x, m[ 1 ].x, m[ 2 ].x );
	tmp[ 1 ] = vec3( m[ 0 ].y, m[ 1 ].y, m[ 2 ].y );
	tmp[ 2 ] = vec3( m[ 0 ].z, m[ 1 ].z, m[ 2 ].z );
	return tmp;
}
float luminance( const in vec3 rgb ) {
	const vec3 weights = vec3( 0.2126729, 0.7151522, 0.0721750 );
	return dot( weights, rgb );
}
bool isPerspectiveMatrix( mat4 m ) {
	return m[ 2 ][ 3 ] == - 1.0;
}
vec2 equirectUv( in vec3 dir ) {
	float u = atan( dir.z, dir.x ) * RECIPROCAL_PI2 + 0.5;
	float v = asin( clamp( dir.y, - 1.0, 1.0 ) ) * RECIPROCAL_PI + 0.5;
	return vec2( u, v );
}`, By = `#ifdef ENVMAP_TYPE_CUBE_UV
	#define cubeUV_minMipLevel 4.0
	#define cubeUV_minTileSize 16.0
	float getFace( vec3 direction ) {
		vec3 absDirection = abs( direction );
		float face = - 1.0;
		if ( absDirection.x > absDirection.z ) {
			if ( absDirection.x > absDirection.y )
				face = direction.x > 0.0 ? 0.0 : 3.0;
			else
				face = direction.y > 0.0 ? 1.0 : 4.0;
		} else {
			if ( absDirection.z > absDirection.y )
				face = direction.z > 0.0 ? 2.0 : 5.0;
			else
				face = direction.y > 0.0 ? 1.0 : 4.0;
		}
		return face;
	}
	vec2 getUV( vec3 direction, float face ) {
		vec2 uv;
		if ( face == 0.0 ) {
			uv = vec2( direction.z, direction.y ) / abs( direction.x );
		} else if ( face == 1.0 ) {
			uv = vec2( - direction.x, - direction.z ) / abs( direction.y );
		} else if ( face == 2.0 ) {
			uv = vec2( - direction.x, direction.y ) / abs( direction.z );
		} else if ( face == 3.0 ) {
			uv = vec2( - direction.z, direction.y ) / abs( direction.x );
		} else if ( face == 4.0 ) {
			uv = vec2( - direction.x, direction.z ) / abs( direction.y );
		} else {
			uv = vec2( direction.x, direction.y ) / abs( direction.z );
		}
		return 0.5 * ( uv + 1.0 );
	}
	vec3 bilinearCubeUV( sampler2D envMap, vec3 direction, float mipInt ) {
		float face = getFace( direction );
		float filterInt = max( cubeUV_minMipLevel - mipInt, 0.0 );
		mipInt = max( mipInt, cubeUV_minMipLevel );
		float faceSize = exp2( mipInt );
		vec2 uv = getUV( direction, face ) * ( faceSize - 2.0 ) + 1.0;
		if ( face > 2.0 ) {
			uv.y += faceSize;
			face -= 3.0;
		}
		uv.x += face * faceSize;
		uv.x += filterInt * 3.0 * cubeUV_minTileSize;
		uv.y += 4.0 * ( exp2( CUBEUV_MAX_MIP ) - faceSize );
		uv.x *= CUBEUV_TEXEL_WIDTH;
		uv.y *= CUBEUV_TEXEL_HEIGHT;
		#ifdef texture2DGradEXT
			return texture2DGradEXT( envMap, uv, vec2( 0.0 ), vec2( 0.0 ) ).rgb;
		#else
			return texture2D( envMap, uv ).rgb;
		#endif
	}
	#define r0 1.0
	#define v0 0.339
	#define m0 - 2.0
	#define r1 0.8
	#define v1 0.276
	#define m1 - 1.0
	#define r4 0.4
	#define v4 0.046
	#define m4 2.0
	#define r5 0.305
	#define v5 0.016
	#define m5 3.0
	#define r6 0.21
	#define v6 0.0038
	#define m6 4.0
	float roughnessToMip( float roughness ) {
		float mip = 0.0;
		if ( roughness >= r1 ) {
			mip = ( r0 - roughness ) * ( m1 - m0 ) / ( r0 - r1 ) + m0;
		} else if ( roughness >= r4 ) {
			mip = ( r1 - roughness ) * ( m4 - m1 ) / ( r1 - r4 ) + m1;
		} else if ( roughness >= r5 ) {
			mip = ( r4 - roughness ) * ( m5 - m4 ) / ( r4 - r5 ) + m4;
		} else if ( roughness >= r6 ) {
			mip = ( r5 - roughness ) * ( m6 - m5 ) / ( r5 - r6 ) + m5;
		} else {
			mip = - 2.0 * log2( 1.16 * roughness );		}
		return mip;
	}
	vec4 textureCubeUV( sampler2D envMap, vec3 sampleDir, float roughness ) {
		float mip = clamp( roughnessToMip( roughness ), m0, CUBEUV_MAX_MIP );
		float mipF = fract( mip );
		float mipInt = floor( mip );
		vec3 color0 = bilinearCubeUV( envMap, sampleDir, mipInt );
		if ( mipF == 0.0 ) {
			return vec4( color0, 1.0 );
		} else {
			vec3 color1 = bilinearCubeUV( envMap, sampleDir, mipInt + 1.0 );
			return vec4( mix( color0, color1, mipF ), 1.0 );
		}
	}
#endif`, Ly = `vec3 transformedNormal = objectNormal;
#ifdef USE_INSTANCING
	mat3 m = mat3( instanceMatrix );
	transformedNormal /= vec3( dot( m[ 0 ], m[ 0 ] ), dot( m[ 1 ], m[ 1 ] ), dot( m[ 2 ], m[ 2 ] ) );
	transformedNormal = m * transformedNormal;
#endif
transformedNormal = normalMatrix * transformedNormal;
#ifdef FLIP_SIDED
	transformedNormal = - transformedNormal;
#endif
#ifdef USE_TANGENT
	vec3 transformedTangent = ( modelViewMatrix * vec4( objectTangent, 0.0 ) ).xyz;
	#ifdef FLIP_SIDED
		transformedTangent = - transformedTangent;
	#endif
#endif`, Ny = `#ifdef USE_DISPLACEMENTMAP
	uniform sampler2D displacementMap;
	uniform float displacementScale;
	uniform float displacementBias;
#endif`, Dy = `#ifdef USE_DISPLACEMENTMAP
	transformed += normalize( objectNormal ) * ( texture2D( displacementMap, vUv ).x * displacementScale + displacementBias );
#endif`, Fy = `#ifdef USE_EMISSIVEMAP
	vec4 emissiveColor = texture2D( emissiveMap, vUv );
	totalEmissiveRadiance *= emissiveColor.rgb;
#endif`, Uy = `#ifdef USE_EMISSIVEMAP
	uniform sampler2D emissiveMap;
#endif`, jy = "gl_FragColor = linearToOutputTexel( gl_FragColor );", Vy = `vec4 LinearToLinear( in vec4 value ) {
	return value;
}
vec4 LinearTosRGB( in vec4 value ) {
	return vec4( mix( pow( value.rgb, vec3( 0.41666 ) ) * 1.055 - vec3( 0.055 ), value.rgb * 12.92, vec3( lessThanEqual( value.rgb, vec3( 0.0031308 ) ) ) ), value.a );
}`, zy = `#ifdef USE_ENVMAP
	#ifdef ENV_WORLDPOS
		vec3 cameraToFrag;
		if ( isOrthographic ) {
			cameraToFrag = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );
		} else {
			cameraToFrag = normalize( vWorldPosition - cameraPosition );
		}
		vec3 worldNormal = inverseTransformDirection( normal, viewMatrix );
		#ifdef ENVMAP_MODE_REFLECTION
			vec3 reflectVec = reflect( cameraToFrag, worldNormal );
		#else
			vec3 reflectVec = refract( cameraToFrag, worldNormal, refractionRatio );
		#endif
	#else
		vec3 reflectVec = vReflect;
	#endif
	#ifdef ENVMAP_TYPE_CUBE
		vec4 envColor = textureCube( envMap, vec3( flipEnvMap * reflectVec.x, reflectVec.yz ) );
	#elif defined( ENVMAP_TYPE_CUBE_UV )
		vec4 envColor = textureCubeUV( envMap, reflectVec, 0.0 );
	#else
		vec4 envColor = vec4( 0.0 );
	#endif
	#ifdef ENVMAP_BLENDING_MULTIPLY
		outgoingLight = mix( outgoingLight, outgoingLight * envColor.xyz, specularStrength * reflectivity );
	#elif defined( ENVMAP_BLENDING_MIX )
		outgoingLight = mix( outgoingLight, envColor.xyz, specularStrength * reflectivity );
	#elif defined( ENVMAP_BLENDING_ADD )
		outgoingLight += envColor.xyz * specularStrength * reflectivity;
	#endif
#endif`, qy = `#ifdef USE_ENVMAP
	uniform float envMapIntensity;
	uniform float flipEnvMap;
	#ifdef ENVMAP_TYPE_CUBE
		uniform samplerCube envMap;
	#else
		uniform sampler2D envMap;
	#endif
	
#endif`, Hy = `#ifdef USE_ENVMAP
	uniform float reflectivity;
	#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG )
		#define ENV_WORLDPOS
	#endif
	#ifdef ENV_WORLDPOS
		varying vec3 vWorldPosition;
		uniform float refractionRatio;
	#else
		varying vec3 vReflect;
	#endif
#endif`, Gy = `#ifdef USE_ENVMAP
	#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) ||defined( PHONG )
		#define ENV_WORLDPOS
	#endif
	#ifdef ENV_WORLDPOS
		
		varying vec3 vWorldPosition;
	#else
		varying vec3 vReflect;
		uniform float refractionRatio;
	#endif
#endif`, Wy = `#ifdef USE_ENVMAP
	#ifdef ENV_WORLDPOS
		vWorldPosition = worldPosition.xyz;
	#else
		vec3 cameraToVertex;
		if ( isOrthographic ) {
			cameraToVertex = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );
		} else {
			cameraToVertex = normalize( worldPosition.xyz - cameraPosition );
		}
		vec3 worldNormal = inverseTransformDirection( transformedNormal, viewMatrix );
		#ifdef ENVMAP_MODE_REFLECTION
			vReflect = reflect( cameraToVertex, worldNormal );
		#else
			vReflect = refract( cameraToVertex, worldNormal, refractionRatio );
		#endif
	#endif
#endif`, Xy = `#ifdef USE_FOG
	vFogDepth = - mvPosition.z;
#endif`, Ky = `#ifdef USE_FOG
	varying float vFogDepth;
#endif`, $y = `#ifdef USE_FOG
	#ifdef FOG_EXP2
		float fogFactor = 1.0 - exp( - fogDensity * fogDensity * vFogDepth * vFogDepth );
	#else
		float fogFactor = smoothstep( fogNear, fogFar, vFogDepth );
	#endif
	gl_FragColor.rgb = mix( gl_FragColor.rgb, fogColor, fogFactor );
#endif`, Yy = `#ifdef USE_FOG
	uniform vec3 fogColor;
	varying float vFogDepth;
	#ifdef FOG_EXP2
		uniform float fogDensity;
	#else
		uniform float fogNear;
		uniform float fogFar;
	#endif
#endif`, Zy = `#ifdef USE_GRADIENTMAP
	uniform sampler2D gradientMap;
#endif
vec3 getGradientIrradiance( vec3 normal, vec3 lightDirection ) {
	float dotNL = dot( normal, lightDirection );
	vec2 coord = vec2( dotNL * 0.5 + 0.5, 0.0 );
	#ifdef USE_GRADIENTMAP
		return vec3( texture2D( gradientMap, coord ).r );
	#else
		return ( coord.x < 0.7 ) ? vec3( 0.7 ) : vec3( 1.0 );
	#endif
}`, Qy = `#ifdef USE_LIGHTMAP
	vec4 lightMapTexel = texture2D( lightMap, vUv2 );
	vec3 lightMapIrradiance = lightMapTexel.rgb * lightMapIntensity;
	reflectedLight.indirectDiffuse += lightMapIrradiance;
#endif`, Jy = `#ifdef USE_LIGHTMAP
	uniform sampler2D lightMap;
	uniform float lightMapIntensity;
#endif`, tg = `vec3 diffuse = vec3( 1.0 );
GeometricContext geometry;
geometry.position = mvPosition.xyz;
geometry.normal = normalize( transformedNormal );
geometry.viewDir = ( isOrthographic ) ? vec3( 0, 0, 1 ) : normalize( -mvPosition.xyz );
GeometricContext backGeometry;
backGeometry.position = geometry.position;
backGeometry.normal = -geometry.normal;
backGeometry.viewDir = geometry.viewDir;
vLightFront = vec3( 0.0 );
vIndirectFront = vec3( 0.0 );
#ifdef DOUBLE_SIDED
	vLightBack = vec3( 0.0 );
	vIndirectBack = vec3( 0.0 );
#endif
IncidentLight directLight;
float dotNL;
vec3 directLightColor_Diffuse;
vIndirectFront += getAmbientLightIrradiance( ambientLightColor );
vIndirectFront += getLightProbeIrradiance( lightProbe, geometry.normal );
#ifdef DOUBLE_SIDED
	vIndirectBack += getAmbientLightIrradiance( ambientLightColor );
	vIndirectBack += getLightProbeIrradiance( lightProbe, backGeometry.normal );
#endif
#if NUM_POINT_LIGHTS > 0
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {
		getPointLightInfo( pointLights[ i ], geometry, directLight );
		dotNL = dot( geometry.normal, directLight.direction );
		directLightColor_Diffuse = directLight.color;
		vLightFront += saturate( dotNL ) * directLightColor_Diffuse;
		#ifdef DOUBLE_SIDED
			vLightBack += saturate( - dotNL ) * directLightColor_Diffuse;
		#endif
	}
	#pragma unroll_loop_end
#endif
#if NUM_SPOT_LIGHTS > 0
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {
		getSpotLightInfo( spotLights[ i ], geometry, directLight );
		dotNL = dot( geometry.normal, directLight.direction );
		directLightColor_Diffuse = directLight.color;
		vLightFront += saturate( dotNL ) * directLightColor_Diffuse;
		#ifdef DOUBLE_SIDED
			vLightBack += saturate( - dotNL ) * directLightColor_Diffuse;
		#endif
	}
	#pragma unroll_loop_end
#endif
#if NUM_DIR_LIGHTS > 0
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {
		getDirectionalLightInfo( directionalLights[ i ], geometry, directLight );
		dotNL = dot( geometry.normal, directLight.direction );
		directLightColor_Diffuse = directLight.color;
		vLightFront += saturate( dotNL ) * directLightColor_Diffuse;
		#ifdef DOUBLE_SIDED
			vLightBack += saturate( - dotNL ) * directLightColor_Diffuse;
		#endif
	}
	#pragma unroll_loop_end
#endif
#if NUM_HEMI_LIGHTS > 0
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {
		vIndirectFront += getHemisphereLightIrradiance( hemisphereLights[ i ], geometry.normal );
		#ifdef DOUBLE_SIDED
			vIndirectBack += getHemisphereLightIrradiance( hemisphereLights[ i ], backGeometry.normal );
		#endif
	}
	#pragma unroll_loop_end
#endif`, eg = `uniform bool receiveShadow;
uniform vec3 ambientLightColor;
uniform vec3 lightProbe[ 9 ];
vec3 shGetIrradianceAt( in vec3 normal, in vec3 shCoefficients[ 9 ] ) {
	float x = normal.x, y = normal.y, z = normal.z;
	vec3 result = shCoefficients[ 0 ] * 0.886227;
	result += shCoefficients[ 1 ] * 2.0 * 0.511664 * y;
	result += shCoefficients[ 2 ] * 2.0 * 0.511664 * z;
	result += shCoefficients[ 3 ] * 2.0 * 0.511664 * x;
	result += shCoefficients[ 4 ] * 2.0 * 0.429043 * x * y;
	result += shCoefficients[ 5 ] * 2.0 * 0.429043 * y * z;
	result += shCoefficients[ 6 ] * ( 0.743125 * z * z - 0.247708 );
	result += shCoefficients[ 7 ] * 2.0 * 0.429043 * x * z;
	result += shCoefficients[ 8 ] * 0.429043 * ( x * x - y * y );
	return result;
}
vec3 getLightProbeIrradiance( const in vec3 lightProbe[ 9 ], const in vec3 normal ) {
	vec3 worldNormal = inverseTransformDirection( normal, viewMatrix );
	vec3 irradiance = shGetIrradianceAt( worldNormal, lightProbe );
	return irradiance;
}
vec3 getAmbientLightIrradiance( const in vec3 ambientLightColor ) {
	vec3 irradiance = ambientLightColor;
	return irradiance;
}
float getDistanceAttenuation( const in float lightDistance, const in float cutoffDistance, const in float decayExponent ) {
	#if defined ( PHYSICALLY_CORRECT_LIGHTS )
		float distanceFalloff = 1.0 / max( pow( lightDistance, decayExponent ), 0.01 );
		if ( cutoffDistance > 0.0 ) {
			distanceFalloff *= pow2( saturate( 1.0 - pow4( lightDistance / cutoffDistance ) ) );
		}
		return distanceFalloff;
	#else
		if ( cutoffDistance > 0.0 && decayExponent > 0.0 ) {
			return pow( saturate( - lightDistance / cutoffDistance + 1.0 ), decayExponent );
		}
		return 1.0;
	#endif
}
float getSpotAttenuation( const in float coneCosine, const in float penumbraCosine, const in float angleCosine ) {
	return smoothstep( coneCosine, penumbraCosine, angleCosine );
}
#if NUM_DIR_LIGHTS > 0
	struct DirectionalLight {
		vec3 direction;
		vec3 color;
	};
	uniform DirectionalLight directionalLights[ NUM_DIR_LIGHTS ];
	void getDirectionalLightInfo( const in DirectionalLight directionalLight, const in GeometricContext geometry, out IncidentLight light ) {
		light.color = directionalLight.color;
		light.direction = directionalLight.direction;
		light.visible = true;
	}
#endif
#if NUM_POINT_LIGHTS > 0
	struct PointLight {
		vec3 position;
		vec3 color;
		float distance;
		float decay;
	};
	uniform PointLight pointLights[ NUM_POINT_LIGHTS ];
	void getPointLightInfo( const in PointLight pointLight, const in GeometricContext geometry, out IncidentLight light ) {
		vec3 lVector = pointLight.position - geometry.position;
		light.direction = normalize( lVector );
		float lightDistance = length( lVector );
		light.color = pointLight.color;
		light.color *= getDistanceAttenuation( lightDistance, pointLight.distance, pointLight.decay );
		light.visible = ( light.color != vec3( 0.0 ) );
	}
#endif
#if NUM_SPOT_LIGHTS > 0
	struct SpotLight {
		vec3 position;
		vec3 direction;
		vec3 color;
		float distance;
		float decay;
		float coneCos;
		float penumbraCos;
	};
	uniform SpotLight spotLights[ NUM_SPOT_LIGHTS ];
	void getSpotLightInfo( const in SpotLight spotLight, const in GeometricContext geometry, out IncidentLight light ) {
		vec3 lVector = spotLight.position - geometry.position;
		light.direction = normalize( lVector );
		float angleCos = dot( light.direction, spotLight.direction );
		float spotAttenuation = getSpotAttenuation( spotLight.coneCos, spotLight.penumbraCos, angleCos );
		if ( spotAttenuation > 0.0 ) {
			float lightDistance = length( lVector );
			light.color = spotLight.color * spotAttenuation;
			light.color *= getDistanceAttenuation( lightDistance, spotLight.distance, spotLight.decay );
			light.visible = ( light.color != vec3( 0.0 ) );
		} else {
			light.color = vec3( 0.0 );
			light.visible = false;
		}
	}
#endif
#if NUM_RECT_AREA_LIGHTS > 0
	struct RectAreaLight {
		vec3 color;
		vec3 position;
		vec3 halfWidth;
		vec3 halfHeight;
	};
	uniform sampler2D ltc_1;	uniform sampler2D ltc_2;
	uniform RectAreaLight rectAreaLights[ NUM_RECT_AREA_LIGHTS ];
#endif
#if NUM_HEMI_LIGHTS > 0
	struct HemisphereLight {
		vec3 direction;
		vec3 skyColor;
		vec3 groundColor;
	};
	uniform HemisphereLight hemisphereLights[ NUM_HEMI_LIGHTS ];
	vec3 getHemisphereLightIrradiance( const in HemisphereLight hemiLight, const in vec3 normal ) {
		float dotNL = dot( normal, hemiLight.direction );
		float hemiDiffuseWeight = 0.5 * dotNL + 0.5;
		vec3 irradiance = mix( hemiLight.groundColor, hemiLight.skyColor, hemiDiffuseWeight );
		return irradiance;
	}
#endif`, rg = `#if defined( USE_ENVMAP )
	vec3 getIBLIrradiance( const in vec3 normal ) {
		#if defined( ENVMAP_TYPE_CUBE_UV )
			vec3 worldNormal = inverseTransformDirection( normal, viewMatrix );
			vec4 envMapColor = textureCubeUV( envMap, worldNormal, 1.0 );
			return PI * envMapColor.rgb * envMapIntensity;
		#else
			return vec3( 0.0 );
		#endif
	}
	vec3 getIBLRadiance( const in vec3 viewDir, const in vec3 normal, const in float roughness ) {
		#if defined( ENVMAP_TYPE_CUBE_UV )
			vec3 reflectVec = reflect( - viewDir, normal );
			reflectVec = normalize( mix( reflectVec, normal, roughness * roughness) );
			reflectVec = inverseTransformDirection( reflectVec, viewMatrix );
			vec4 envMapColor = textureCubeUV( envMap, reflectVec, roughness );
			return envMapColor.rgb * envMapIntensity;
		#else
			return vec3( 0.0 );
		#endif
	}
#endif`, ng = `ToonMaterial material;
material.diffuseColor = diffuseColor.rgb;`, og = `varying vec3 vViewPosition;
struct ToonMaterial {
	vec3 diffuseColor;
};
void RE_Direct_Toon( const in IncidentLight directLight, const in GeometricContext geometry, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {
	vec3 irradiance = getGradientIrradiance( geometry.normal, directLight.direction ) * directLight.color;
	reflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
void RE_IndirectDiffuse_Toon( const in vec3 irradiance, const in GeometricContext geometry, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {
	reflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
#define RE_Direct				RE_Direct_Toon
#define RE_IndirectDiffuse		RE_IndirectDiffuse_Toon
#define Material_LightProbeLOD( material )	(0)`, ig = `BlinnPhongMaterial material;
material.diffuseColor = diffuseColor.rgb;
material.specularColor = specular;
material.specularShininess = shininess;
material.specularStrength = specularStrength;`, ag = `varying vec3 vViewPosition;
struct BlinnPhongMaterial {
	vec3 diffuseColor;
	vec3 specularColor;
	float specularShininess;
	float specularStrength;
};
void RE_Direct_BlinnPhong( const in IncidentLight directLight, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {
	float dotNL = saturate( dot( geometry.normal, directLight.direction ) );
	vec3 irradiance = dotNL * directLight.color;
	reflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
	reflectedLight.directSpecular += irradiance * BRDF_BlinnPhong( directLight.direction, geometry.viewDir, geometry.normal, material.specularColor, material.specularShininess ) * material.specularStrength;
}
void RE_IndirectDiffuse_BlinnPhong( const in vec3 irradiance, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {
	reflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
#define RE_Direct				RE_Direct_BlinnPhong
#define RE_IndirectDiffuse		RE_IndirectDiffuse_BlinnPhong
#define Material_LightProbeLOD( material )	(0)`, sg = `PhysicalMaterial material;
material.diffuseColor = diffuseColor.rgb * ( 1.0 - metalnessFactor );
vec3 dxy = max( abs( dFdx( geometryNormal ) ), abs( dFdy( geometryNormal ) ) );
float geometryRoughness = max( max( dxy.x, dxy.y ), dxy.z );
material.roughness = max( roughnessFactor, 0.0525 );material.roughness += geometryRoughness;
material.roughness = min( material.roughness, 1.0 );
#ifdef IOR
	#ifdef SPECULAR
		float specularIntensityFactor = specularIntensity;
		vec3 specularColorFactor = specularColor;
		#ifdef USE_SPECULARINTENSITYMAP
			specularIntensityFactor *= texture2D( specularIntensityMap, vUv ).a;
		#endif
		#ifdef USE_SPECULARCOLORMAP
			specularColorFactor *= texture2D( specularColorMap, vUv ).rgb;
		#endif
		material.specularF90 = mix( specularIntensityFactor, 1.0, metalnessFactor );
	#else
		float specularIntensityFactor = 1.0;
		vec3 specularColorFactor = vec3( 1.0 );
		material.specularF90 = 1.0;
	#endif
	material.specularColor = mix( min( pow2( ( ior - 1.0 ) / ( ior + 1.0 ) ) * specularColorFactor, vec3( 1.0 ) ) * specularIntensityFactor, diffuseColor.rgb, metalnessFactor );
#else
	material.specularColor = mix( vec3( 0.04 ), diffuseColor.rgb, metalnessFactor );
	material.specularF90 = 1.0;
#endif
#ifdef USE_CLEARCOAT
	material.clearcoat = clearcoat;
	material.clearcoatRoughness = clearcoatRoughness;
	material.clearcoatF0 = vec3( 0.04 );
	material.clearcoatF90 = 1.0;
	#ifdef USE_CLEARCOATMAP
		material.clearcoat *= texture2D( clearcoatMap, vUv ).x;
	#endif
	#ifdef USE_CLEARCOAT_ROUGHNESSMAP
		material.clearcoatRoughness *= texture2D( clearcoatRoughnessMap, vUv ).y;
	#endif
	material.clearcoat = saturate( material.clearcoat );	material.clearcoatRoughness = max( material.clearcoatRoughness, 0.0525 );
	material.clearcoatRoughness += geometryRoughness;
	material.clearcoatRoughness = min( material.clearcoatRoughness, 1.0 );
#endif
#ifdef USE_IRIDESCENCE
	material.iridescence = iridescence;
	material.iridescenceIOR = iridescenceIOR;
	#ifdef USE_IRIDESCENCEMAP
		material.iridescence *= texture2D( iridescenceMap, vUv ).r;
	#endif
	#ifdef USE_IRIDESCENCE_THICKNESSMAP
		material.iridescenceThickness = (iridescenceThicknessMaximum - iridescenceThicknessMinimum) * texture2D( iridescenceThicknessMap, vUv ).g + iridescenceThicknessMinimum;
	#else
		material.iridescenceThickness = iridescenceThicknessMaximum;
	#endif
#endif
#ifdef USE_SHEEN
	material.sheenColor = sheenColor;
	#ifdef USE_SHEENCOLORMAP
		material.sheenColor *= texture2D( sheenColorMap, vUv ).rgb;
	#endif
	material.sheenRoughness = clamp( sheenRoughness, 0.07, 1.0 );
	#ifdef USE_SHEENROUGHNESSMAP
		material.sheenRoughness *= texture2D( sheenRoughnessMap, vUv ).a;
	#endif
#endif`, ug = `struct PhysicalMaterial {
	vec3 diffuseColor;
	float roughness;
	vec3 specularColor;
	float specularF90;
	#ifdef USE_CLEARCOAT
		float clearcoat;
		float clearcoatRoughness;
		vec3 clearcoatF0;
		float clearcoatF90;
	#endif
	#ifdef USE_IRIDESCENCE
		float iridescence;
		float iridescenceIOR;
		float iridescenceThickness;
		vec3 iridescenceFresnel;
		vec3 iridescenceF0;
	#endif
	#ifdef USE_SHEEN
		vec3 sheenColor;
		float sheenRoughness;
	#endif
};
vec3 clearcoatSpecular = vec3( 0.0 );
vec3 sheenSpecular = vec3( 0.0 );
float IBLSheenBRDF( const in vec3 normal, const in vec3 viewDir, const in float roughness) {
	float dotNV = saturate( dot( normal, viewDir ) );
	float r2 = roughness * roughness;
	float a = roughness < 0.25 ? -339.2 * r2 + 161.4 * roughness - 25.9 : -8.48 * r2 + 14.3 * roughness - 9.95;
	float b = roughness < 0.25 ? 44.0 * r2 - 23.7 * roughness + 3.26 : 1.97 * r2 - 3.27 * roughness + 0.72;
	float DG = exp( a * dotNV + b ) + ( roughness < 0.25 ? 0.0 : 0.1 * ( roughness - 0.25 ) );
	return saturate( DG * RECIPROCAL_PI );
}
vec2 DFGApprox( const in vec3 normal, const in vec3 viewDir, const in float roughness ) {
	float dotNV = saturate( dot( normal, viewDir ) );
	const vec4 c0 = vec4( - 1, - 0.0275, - 0.572, 0.022 );
	const vec4 c1 = vec4( 1, 0.0425, 1.04, - 0.04 );
	vec4 r = roughness * c0 + c1;
	float a004 = min( r.x * r.x, exp2( - 9.28 * dotNV ) ) * r.x + r.y;
	vec2 fab = vec2( - 1.04, 1.04 ) * a004 + r.zw;
	return fab;
}
vec3 EnvironmentBRDF( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float roughness ) {
	vec2 fab = DFGApprox( normal, viewDir, roughness );
	return specularColor * fab.x + specularF90 * fab.y;
}
#ifdef USE_IRIDESCENCE
void computeMultiscatteringIridescence( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float iridescence, const in vec3 iridescenceF0, const in float roughness, inout vec3 singleScatter, inout vec3 multiScatter ) {
#else
void computeMultiscattering( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float roughness, inout vec3 singleScatter, inout vec3 multiScatter ) {
#endif
	vec2 fab = DFGApprox( normal, viewDir, roughness );
	#ifdef USE_IRIDESCENCE
		vec3 Fr = mix( specularColor, iridescenceF0, iridescence );
	#else
		vec3 Fr = specularColor;
	#endif
	vec3 FssEss = Fr * fab.x + specularF90 * fab.y;
	float Ess = fab.x + fab.y;
	float Ems = 1.0 - Ess;
	vec3 Favg = Fr + ( 1.0 - Fr ) * 0.047619;	vec3 Fms = FssEss * Favg / ( 1.0 - Ems * Favg );
	singleScatter += FssEss;
	multiScatter += Fms * Ems;
}
#if NUM_RECT_AREA_LIGHTS > 0
	void RE_Direct_RectArea_Physical( const in RectAreaLight rectAreaLight, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {
		vec3 normal = geometry.normal;
		vec3 viewDir = geometry.viewDir;
		vec3 position = geometry.position;
		vec3 lightPos = rectAreaLight.position;
		vec3 halfWidth = rectAreaLight.halfWidth;
		vec3 halfHeight = rectAreaLight.halfHeight;
		vec3 lightColor = rectAreaLight.color;
		float roughness = material.roughness;
		vec3 rectCoords[ 4 ];
		rectCoords[ 0 ] = lightPos + halfWidth - halfHeight;		rectCoords[ 1 ] = lightPos - halfWidth - halfHeight;
		rectCoords[ 2 ] = lightPos - halfWidth + halfHeight;
		rectCoords[ 3 ] = lightPos + halfWidth + halfHeight;
		vec2 uv = LTC_Uv( normal, viewDir, roughness );
		vec4 t1 = texture2D( ltc_1, uv );
		vec4 t2 = texture2D( ltc_2, uv );
		mat3 mInv = mat3(
			vec3( t1.x, 0, t1.y ),
			vec3(    0, 1,    0 ),
			vec3( t1.z, 0, t1.w )
		);
		vec3 fresnel = ( material.specularColor * t2.x + ( vec3( 1.0 ) - material.specularColor ) * t2.y );
		reflectedLight.directSpecular += lightColor * fresnel * LTC_Evaluate( normal, viewDir, position, mInv, rectCoords );
		reflectedLight.directDiffuse += lightColor * material.diffuseColor * LTC_Evaluate( normal, viewDir, position, mat3( 1.0 ), rectCoords );
	}
#endif
void RE_Direct_Physical( const in IncidentLight directLight, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {
	float dotNL = saturate( dot( geometry.normal, directLight.direction ) );
	vec3 irradiance = dotNL * directLight.color;
	#ifdef USE_CLEARCOAT
		float dotNLcc = saturate( dot( geometry.clearcoatNormal, directLight.direction ) );
		vec3 ccIrradiance = dotNLcc * directLight.color;
		clearcoatSpecular += ccIrradiance * BRDF_GGX( directLight.direction, geometry.viewDir, geometry.clearcoatNormal, material.clearcoatF0, material.clearcoatF90, material.clearcoatRoughness );
	#endif
	#ifdef USE_SHEEN
		sheenSpecular += irradiance * BRDF_Sheen( directLight.direction, geometry.viewDir, geometry.normal, material.sheenColor, material.sheenRoughness );
	#endif
	#ifdef USE_IRIDESCENCE
		reflectedLight.directSpecular += irradiance * BRDF_GGX_Iridescence( directLight.direction, geometry.viewDir, geometry.normal, material.specularColor, material.specularF90, material.iridescence, material.iridescenceFresnel, material.roughness );
	#else
		reflectedLight.directSpecular += irradiance * BRDF_GGX( directLight.direction, geometry.viewDir, geometry.normal, material.specularColor, material.specularF90, material.roughness );
	#endif
	reflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
void RE_IndirectDiffuse_Physical( const in vec3 irradiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {
	reflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
void RE_IndirectSpecular_Physical( const in vec3 radiance, const in vec3 irradiance, const in vec3 clearcoatRadiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight) {
	#ifdef USE_CLEARCOAT
		clearcoatSpecular += clearcoatRadiance * EnvironmentBRDF( geometry.clearcoatNormal, geometry.viewDir, material.clearcoatF0, material.clearcoatF90, material.clearcoatRoughness );
	#endif
	#ifdef USE_SHEEN
		sheenSpecular += irradiance * material.sheenColor * IBLSheenBRDF( geometry.normal, geometry.viewDir, material.sheenRoughness );
	#endif
	vec3 singleScattering = vec3( 0.0 );
	vec3 multiScattering = vec3( 0.0 );
	vec3 cosineWeightedIrradiance = irradiance * RECIPROCAL_PI;
	#ifdef USE_IRIDESCENCE
		computeMultiscatteringIridescence( geometry.normal, geometry.viewDir, material.specularColor, material.specularF90, material.iridescence, material.iridescenceFresnel, material.roughness, singleScattering, multiScattering );
	#else
		computeMultiscattering( geometry.normal, geometry.viewDir, material.specularColor, material.specularF90, material.roughness, singleScattering, multiScattering );
	#endif
	vec3 totalScattering = singleScattering + multiScattering;
	vec3 diffuse = material.diffuseColor * ( 1.0 - max( max( totalScattering.r, totalScattering.g ), totalScattering.b ) );
	reflectedLight.indirectSpecular += radiance * singleScattering;
	reflectedLight.indirectSpecular += multiScattering * cosineWeightedIrradiance;
	reflectedLight.indirectDiffuse += diffuse * cosineWeightedIrradiance;
}
#define RE_Direct				RE_Direct_Physical
#define RE_Direct_RectArea		RE_Direct_RectArea_Physical
#define RE_IndirectDiffuse		RE_IndirectDiffuse_Physical
#define RE_IndirectSpecular		RE_IndirectSpecular_Physical
float computeSpecularOcclusion( const in float dotNV, const in float ambientOcclusion, const in float roughness ) {
	return saturate( pow( dotNV + ambientOcclusion, exp2( - 16.0 * roughness - 1.0 ) ) - 1.0 + ambientOcclusion );
}`, cg = `
GeometricContext geometry;
geometry.position = - vViewPosition;
geometry.normal = normal;
geometry.viewDir = ( isOrthographic ) ? vec3( 0, 0, 1 ) : normalize( vViewPosition );
#ifdef USE_CLEARCOAT
	geometry.clearcoatNormal = clearcoatNormal;
#endif
#ifdef USE_IRIDESCENCE
	float dotNVi = saturate( dot( normal, geometry.viewDir ) );
	if ( material.iridescenceThickness == 0.0 ) {
		material.iridescence = 0.0;
	} else {
		material.iridescence = saturate( material.iridescence );
	}
	if ( material.iridescence > 0.0 ) {
		material.iridescenceFresnel = evalIridescence( 1.0, material.iridescenceIOR, dotNVi, material.iridescenceThickness, material.specularColor );
		material.iridescenceF0 = Schlick_to_F0( material.iridescenceFresnel, 1.0, dotNVi );
	}
#endif
IncidentLight directLight;
#if ( NUM_POINT_LIGHTS > 0 ) && defined( RE_Direct )
	PointLight pointLight;
	#if defined( USE_SHADOWMAP ) && NUM_POINT_LIGHT_SHADOWS > 0
	PointLightShadow pointLightShadow;
	#endif
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {
		pointLight = pointLights[ i ];
		getPointLightInfo( pointLight, geometry, directLight );
		#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_POINT_LIGHT_SHADOWS )
		pointLightShadow = pointLightShadows[ i ];
		directLight.color *= all( bvec2( directLight.visible, receiveShadow ) ) ? getPointShadow( pointShadowMap[ i ], pointLightShadow.shadowMapSize, pointLightShadow.shadowBias, pointLightShadow.shadowRadius, vPointShadowCoord[ i ], pointLightShadow.shadowCameraNear, pointLightShadow.shadowCameraFar ) : 1.0;
		#endif
		RE_Direct( directLight, geometry, material, reflectedLight );
	}
	#pragma unroll_loop_end
#endif
#if ( NUM_SPOT_LIGHTS > 0 ) && defined( RE_Direct )
	SpotLight spotLight;
	#if defined( USE_SHADOWMAP ) && NUM_SPOT_LIGHT_SHADOWS > 0
	SpotLightShadow spotLightShadow;
	#endif
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {
		spotLight = spotLights[ i ];
		getSpotLightInfo( spotLight, geometry, directLight );
		#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )
		spotLightShadow = spotLightShadows[ i ];
		directLight.color *= all( bvec2( directLight.visible, receiveShadow ) ) ? getShadow( spotShadowMap[ i ], spotLightShadow.shadowMapSize, spotLightShadow.shadowBias, spotLightShadow.shadowRadius, vSpotShadowCoord[ i ] ) : 1.0;
		#endif
		RE_Direct( directLight, geometry, material, reflectedLight );
	}
	#pragma unroll_loop_end
#endif
#if ( NUM_DIR_LIGHTS > 0 ) && defined( RE_Direct )
	DirectionalLight directionalLight;
	#if defined( USE_SHADOWMAP ) && NUM_DIR_LIGHT_SHADOWS > 0
	DirectionalLightShadow directionalLightShadow;
	#endif
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {
		directionalLight = directionalLights[ i ];
		getDirectionalLightInfo( directionalLight, geometry, directLight );
		#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_DIR_LIGHT_SHADOWS )
		directionalLightShadow = directionalLightShadows[ i ];
		directLight.color *= all( bvec2( directLight.visible, receiveShadow ) ) ? getShadow( directionalShadowMap[ i ], directionalLightShadow.shadowMapSize, directionalLightShadow.shadowBias, directionalLightShadow.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;
		#endif
		RE_Direct( directLight, geometry, material, reflectedLight );
	}
	#pragma unroll_loop_end
#endif
#if ( NUM_RECT_AREA_LIGHTS > 0 ) && defined( RE_Direct_RectArea )
	RectAreaLight rectAreaLight;
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_RECT_AREA_LIGHTS; i ++ ) {
		rectAreaLight = rectAreaLights[ i ];
		RE_Direct_RectArea( rectAreaLight, geometry, material, reflectedLight );
	}
	#pragma unroll_loop_end
#endif
#if defined( RE_IndirectDiffuse )
	vec3 iblIrradiance = vec3( 0.0 );
	vec3 irradiance = getAmbientLightIrradiance( ambientLightColor );
	irradiance += getLightProbeIrradiance( lightProbe, geometry.normal );
	#if ( NUM_HEMI_LIGHTS > 0 )
		#pragma unroll_loop_start
		for ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {
			irradiance += getHemisphereLightIrradiance( hemisphereLights[ i ], geometry.normal );
		}
		#pragma unroll_loop_end
	#endif
#endif
#if defined( RE_IndirectSpecular )
	vec3 radiance = vec3( 0.0 );
	vec3 clearcoatRadiance = vec3( 0.0 );
#endif`, lg = `#if defined( RE_IndirectDiffuse )
	#ifdef USE_LIGHTMAP
		vec4 lightMapTexel = texture2D( lightMap, vUv2 );
		vec3 lightMapIrradiance = lightMapTexel.rgb * lightMapIntensity;
		irradiance += lightMapIrradiance;
	#endif
	#if defined( USE_ENVMAP ) && defined( STANDARD ) && defined( ENVMAP_TYPE_CUBE_UV )
		iblIrradiance += getIBLIrradiance( geometry.normal );
	#endif
#endif
#if defined( USE_ENVMAP ) && defined( RE_IndirectSpecular )
	radiance += getIBLRadiance( geometry.viewDir, geometry.normal, material.roughness );
	#ifdef USE_CLEARCOAT
		clearcoatRadiance += getIBLRadiance( geometry.viewDir, geometry.clearcoatNormal, material.clearcoatRoughness );
	#endif
#endif`, fg = `#if defined( RE_IndirectDiffuse )
	RE_IndirectDiffuse( irradiance, geometry, material, reflectedLight );
#endif
#if defined( RE_IndirectSpecular )
	RE_IndirectSpecular( radiance, iblIrradiance, clearcoatRadiance, geometry, material, reflectedLight );
#endif`, pg = `#if defined( USE_LOGDEPTHBUF ) && defined( USE_LOGDEPTHBUF_EXT )
	gl_FragDepthEXT = vIsPerspective == 0.0 ? gl_FragCoord.z : log2( vFragDepth ) * logDepthBufFC * 0.5;
#endif`, hg = `#if defined( USE_LOGDEPTHBUF ) && defined( USE_LOGDEPTHBUF_EXT )
	uniform float logDepthBufFC;
	varying float vFragDepth;
	varying float vIsPerspective;
#endif`, dg = `#ifdef USE_LOGDEPTHBUF
	#ifdef USE_LOGDEPTHBUF_EXT
		varying float vFragDepth;
		varying float vIsPerspective;
	#else
		uniform float logDepthBufFC;
	#endif
#endif`, mg = `#ifdef USE_LOGDEPTHBUF
	#ifdef USE_LOGDEPTHBUF_EXT
		vFragDepth = 1.0 + gl_Position.w;
		vIsPerspective = float( isPerspectiveMatrix( projectionMatrix ) );
	#else
		if ( isPerspectiveMatrix( projectionMatrix ) ) {
			gl_Position.z = log2( max( EPSILON, gl_Position.w + 1.0 ) ) * logDepthBufFC - 1.0;
			gl_Position.z *= gl_Position.w;
		}
	#endif
#endif`, yg = `#ifdef USE_MAP
	vec4 sampledDiffuseColor = texture2D( map, vUv );
	#ifdef DECODE_VIDEO_TEXTURE
		sampledDiffuseColor = vec4( mix( pow( sampledDiffuseColor.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), sampledDiffuseColor.rgb * 0.0773993808, vec3( lessThanEqual( sampledDiffuseColor.rgb, vec3( 0.04045 ) ) ) ), sampledDiffuseColor.w );
	#endif
	diffuseColor *= sampledDiffuseColor;
#endif`, gg = `#ifdef USE_MAP
	uniform sampler2D map;
#endif`, vg = `#if defined( USE_MAP ) || defined( USE_ALPHAMAP )
	vec2 uv = ( uvTransform * vec3( gl_PointCoord.x, 1.0 - gl_PointCoord.y, 1 ) ).xy;
#endif
#ifdef USE_MAP
	diffuseColor *= texture2D( map, uv );
#endif
#ifdef USE_ALPHAMAP
	diffuseColor.a *= texture2D( alphaMap, uv ).g;
#endif`, bg = `#if defined( USE_MAP ) || defined( USE_ALPHAMAP )
	uniform mat3 uvTransform;
#endif
#ifdef USE_MAP
	uniform sampler2D map;
#endif
#ifdef USE_ALPHAMAP
	uniform sampler2D alphaMap;
#endif`, wg = `float metalnessFactor = metalness;
#ifdef USE_METALNESSMAP
	vec4 texelMetalness = texture2D( metalnessMap, vUv );
	metalnessFactor *= texelMetalness.b;
#endif`, Sg = `#ifdef USE_METALNESSMAP
	uniform sampler2D metalnessMap;
#endif`, xg = `#if defined( USE_MORPHCOLORS ) && defined( MORPHTARGETS_TEXTURE )
	vColor *= morphTargetBaseInfluence;
	for ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {
		#if defined( USE_COLOR_ALPHA )
			if ( morphTargetInfluences[ i ] != 0.0 ) vColor += getMorph( gl_VertexID, i, 2 ) * morphTargetInfluences[ i ];
		#elif defined( USE_COLOR )
			if ( morphTargetInfluences[ i ] != 0.0 ) vColor += getMorph( gl_VertexID, i, 2 ).rgb * morphTargetInfluences[ i ];
		#endif
	}
#endif`, _g = `#ifdef USE_MORPHNORMALS
	objectNormal *= morphTargetBaseInfluence;
	#ifdef MORPHTARGETS_TEXTURE
		for ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {
			if ( morphTargetInfluences[ i ] != 0.0 ) objectNormal += getMorph( gl_VertexID, i, 1 ).xyz * morphTargetInfluences[ i ];
		}
	#else
		objectNormal += morphNormal0 * morphTargetInfluences[ 0 ];
		objectNormal += morphNormal1 * morphTargetInfluences[ 1 ];
		objectNormal += morphNormal2 * morphTargetInfluences[ 2 ];
		objectNormal += morphNormal3 * morphTargetInfluences[ 3 ];
	#endif
#endif`, Eg = `#ifdef USE_MORPHTARGETS
	uniform float morphTargetBaseInfluence;
	#ifdef MORPHTARGETS_TEXTURE
		uniform float morphTargetInfluences[ MORPHTARGETS_COUNT ];
		uniform sampler2DArray morphTargetsTexture;
		uniform ivec2 morphTargetsTextureSize;
		vec4 getMorph( const in int vertexIndex, const in int morphTargetIndex, const in int offset ) {
			int texelIndex = vertexIndex * MORPHTARGETS_TEXTURE_STRIDE + offset;
			int y = texelIndex / morphTargetsTextureSize.x;
			int x = texelIndex - y * morphTargetsTextureSize.x;
			ivec3 morphUV = ivec3( x, y, morphTargetIndex );
			return texelFetch( morphTargetsTexture, morphUV, 0 );
		}
	#else
		#ifndef USE_MORPHNORMALS
			uniform float morphTargetInfluences[ 8 ];
		#else
			uniform float morphTargetInfluences[ 4 ];
		#endif
	#endif
#endif`, Ag = `#ifdef USE_MORPHTARGETS
	transformed *= morphTargetBaseInfluence;
	#ifdef MORPHTARGETS_TEXTURE
		for ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {
			if ( morphTargetInfluences[ i ] != 0.0 ) transformed += getMorph( gl_VertexID, i, 0 ).xyz * morphTargetInfluences[ i ];
		}
	#else
		transformed += morphTarget0 * morphTargetInfluences[ 0 ];
		transformed += morphTarget1 * morphTargetInfluences[ 1 ];
		transformed += morphTarget2 * morphTargetInfluences[ 2 ];
		transformed += morphTarget3 * morphTargetInfluences[ 3 ];
		#ifndef USE_MORPHNORMALS
			transformed += morphTarget4 * morphTargetInfluences[ 4 ];
			transformed += morphTarget5 * morphTargetInfluences[ 5 ];
			transformed += morphTarget6 * morphTargetInfluences[ 6 ];
			transformed += morphTarget7 * morphTargetInfluences[ 7 ];
		#endif
	#endif
#endif`, Tg = `float faceDirection = gl_FrontFacing ? 1.0 : - 1.0;
#ifdef FLAT_SHADED
	vec3 fdx = vec3( dFdx( vViewPosition.x ), dFdx( vViewPosition.y ), dFdx( vViewPosition.z ) );
	vec3 fdy = vec3( dFdy( vViewPosition.x ), dFdy( vViewPosition.y ), dFdy( vViewPosition.z ) );
	vec3 normal = normalize( cross( fdx, fdy ) );
#else
	vec3 normal = normalize( vNormal );
	#ifdef DOUBLE_SIDED
		normal = normal * faceDirection;
	#endif
	#ifdef USE_TANGENT
		vec3 tangent = normalize( vTangent );
		vec3 bitangent = normalize( vBitangent );
		#ifdef DOUBLE_SIDED
			tangent = tangent * faceDirection;
			bitangent = bitangent * faceDirection;
		#endif
		#if defined( TANGENTSPACE_NORMALMAP ) || defined( USE_CLEARCOAT_NORMALMAP )
			mat3 vTBN = mat3( tangent, bitangent, normal );
		#endif
	#endif
#endif
vec3 geometryNormal = normal;`, kg = `#ifdef OBJECTSPACE_NORMALMAP
	normal = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0;
	#ifdef FLIP_SIDED
		normal = - normal;
	#endif
	#ifdef DOUBLE_SIDED
		normal = normal * faceDirection;
	#endif
	normal = normalize( normalMatrix * normal );
#elif defined( TANGENTSPACE_NORMALMAP )
	vec3 mapN = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0;
	mapN.xy *= normalScale;
	#ifdef USE_TANGENT
		normal = normalize( vTBN * mapN );
	#else
		normal = perturbNormal2Arb( - vViewPosition, normal, mapN, faceDirection );
	#endif
#elif defined( USE_BUMPMAP )
	normal = perturbNormalArb( - vViewPosition, normal, dHdxy_fwd(), faceDirection );
#endif`, Og = `#ifndef FLAT_SHADED
	varying vec3 vNormal;
	#ifdef USE_TANGENT
		varying vec3 vTangent;
		varying vec3 vBitangent;
	#endif
#endif`, Pg = `#ifndef FLAT_SHADED
	varying vec3 vNormal;
	#ifdef USE_TANGENT
		varying vec3 vTangent;
		varying vec3 vBitangent;
	#endif
#endif`, Cg = `#ifndef FLAT_SHADED
	vNormal = normalize( transformedNormal );
	#ifdef USE_TANGENT
		vTangent = normalize( transformedTangent );
		vBitangent = normalize( cross( vNormal, vTangent ) * tangent.w );
	#endif
#endif`, Rg = `#ifdef USE_NORMALMAP
	uniform sampler2D normalMap;
	uniform vec2 normalScale;
#endif
#ifdef OBJECTSPACE_NORMALMAP
	uniform mat3 normalMatrix;
#endif
#if ! defined ( USE_TANGENT ) && ( defined ( TANGENTSPACE_NORMALMAP ) || defined ( USE_CLEARCOAT_NORMALMAP ) )
	vec3 perturbNormal2Arb( vec3 eye_pos, vec3 surf_norm, vec3 mapN, float faceDirection ) {
		vec3 q0 = dFdx( eye_pos.xyz );
		vec3 q1 = dFdy( eye_pos.xyz );
		vec2 st0 = dFdx( vUv.st );
		vec2 st1 = dFdy( vUv.st );
		vec3 N = surf_norm;
		vec3 q1perp = cross( q1, N );
		vec3 q0perp = cross( N, q0 );
		vec3 T = q1perp * st0.x + q0perp * st1.x;
		vec3 B = q1perp * st0.y + q0perp * st1.y;
		float det = max( dot( T, T ), dot( B, B ) );
		float scale = ( det == 0.0 ) ? 0.0 : faceDirection * inversesqrt( det );
		return normalize( T * ( mapN.x * scale ) + B * ( mapN.y * scale ) + N * mapN.z );
	}
#endif`, Ig = `#ifdef USE_CLEARCOAT
	vec3 clearcoatNormal = geometryNormal;
#endif`, Mg = `#ifdef USE_CLEARCOAT_NORMALMAP
	vec3 clearcoatMapN = texture2D( clearcoatNormalMap, vUv ).xyz * 2.0 - 1.0;
	clearcoatMapN.xy *= clearcoatNormalScale;
	#ifdef USE_TANGENT
		clearcoatNormal = normalize( vTBN * clearcoatMapN );
	#else
		clearcoatNormal = perturbNormal2Arb( - vViewPosition, clearcoatNormal, clearcoatMapN, faceDirection );
	#endif
#endif`, Bg = `#ifdef USE_CLEARCOATMAP
	uniform sampler2D clearcoatMap;
#endif
#ifdef USE_CLEARCOAT_ROUGHNESSMAP
	uniform sampler2D clearcoatRoughnessMap;
#endif
#ifdef USE_CLEARCOAT_NORMALMAP
	uniform sampler2D clearcoatNormalMap;
	uniform vec2 clearcoatNormalScale;
#endif`, Lg = `#ifdef USE_IRIDESCENCEMAP
	uniform sampler2D iridescenceMap;
#endif
#ifdef USE_IRIDESCENCE_THICKNESSMAP
	uniform sampler2D iridescenceThicknessMap;
#endif`, Ng = `#ifdef OPAQUE
diffuseColor.a = 1.0;
#endif
#ifdef USE_TRANSMISSION
diffuseColor.a *= transmissionAlpha + 0.1;
#endif
gl_FragColor = vec4( outgoingLight, diffuseColor.a );`, Dg = `vec3 packNormalToRGB( const in vec3 normal ) {
	return normalize( normal ) * 0.5 + 0.5;
}
vec3 unpackRGBToNormal( const in vec3 rgb ) {
	return 2.0 * rgb.xyz - 1.0;
}
const float PackUpscale = 256. / 255.;const float UnpackDownscale = 255. / 256.;
const vec3 PackFactors = vec3( 256. * 256. * 256., 256. * 256., 256. );
const vec4 UnpackFactors = UnpackDownscale / vec4( PackFactors, 1. );
const float ShiftRight8 = 1. / 256.;
vec4 packDepthToRGBA( const in float v ) {
	vec4 r = vec4( fract( v * PackFactors ), v );
	r.yzw -= r.xyz * ShiftRight8;	return r * PackUpscale;
}
float unpackRGBAToDepth( const in vec4 v ) {
	return dot( v, UnpackFactors );
}
vec4 pack2HalfToRGBA( vec2 v ) {
	vec4 r = vec4( v.x, fract( v.x * 255.0 ), v.y, fract( v.y * 255.0 ) );
	return vec4( r.x - r.y / 255.0, r.y, r.z - r.w / 255.0, r.w );
}
vec2 unpackRGBATo2Half( vec4 v ) {
	return vec2( v.x + ( v.y / 255.0 ), v.z + ( v.w / 255.0 ) );
}
float viewZToOrthographicDepth( const in float viewZ, const in float near, const in float far ) {
	return ( viewZ + near ) / ( near - far );
}
float orthographicDepthToViewZ( const in float linearClipZ, const in float near, const in float far ) {
	return linearClipZ * ( near - far ) - near;
}
float viewZToPerspectiveDepth( const in float viewZ, const in float near, const in float far ) {
	return ( ( near + viewZ ) * far ) / ( ( far - near ) * viewZ );
}
float perspectiveDepthToViewZ( const in float invClipZ, const in float near, const in float far ) {
	return ( near * far ) / ( ( far - near ) * invClipZ - far );
}`, Fg = `#ifdef PREMULTIPLIED_ALPHA
	gl_FragColor.rgb *= gl_FragColor.a;
#endif`, Ug = `vec4 mvPosition = vec4( transformed, 1.0 );
#ifdef USE_INSTANCING
	mvPosition = instanceMatrix * mvPosition;
#endif
mvPosition = modelViewMatrix * mvPosition;
gl_Position = projectionMatrix * mvPosition;`, jg = `#ifdef DITHERING
	gl_FragColor.rgb = dithering( gl_FragColor.rgb );
#endif`, Vg = `#ifdef DITHERING
	vec3 dithering( vec3 color ) {
		float grid_position = rand( gl_FragCoord.xy );
		vec3 dither_shift_RGB = vec3( 0.25 / 255.0, -0.25 / 255.0, 0.25 / 255.0 );
		dither_shift_RGB = mix( 2.0 * dither_shift_RGB, -2.0 * dither_shift_RGB, grid_position );
		return color + dither_shift_RGB;
	}
#endif`, zg = `float roughnessFactor = roughness;
#ifdef USE_ROUGHNESSMAP
	vec4 texelRoughness = texture2D( roughnessMap, vUv );
	roughnessFactor *= texelRoughness.g;
#endif`, qg = `#ifdef USE_ROUGHNESSMAP
	uniform sampler2D roughnessMap;
#endif`, Hg = `#ifdef USE_SHADOWMAP
	#if NUM_DIR_LIGHT_SHADOWS > 0
		uniform sampler2D directionalShadowMap[ NUM_DIR_LIGHT_SHADOWS ];
		varying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];
		struct DirectionalLightShadow {
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
		};
		uniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];
	#endif
	#if NUM_SPOT_LIGHT_SHADOWS > 0
		uniform sampler2D spotShadowMap[ NUM_SPOT_LIGHT_SHADOWS ];
		varying vec4 vSpotShadowCoord[ NUM_SPOT_LIGHT_SHADOWS ];
		struct SpotLightShadow {
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
		};
		uniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];
	#endif
	#if NUM_POINT_LIGHT_SHADOWS > 0
		uniform sampler2D pointShadowMap[ NUM_POINT_LIGHT_SHADOWS ];
		varying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];
		struct PointLightShadow {
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
			float shadowCameraNear;
			float shadowCameraFar;
		};
		uniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];
	#endif
	float texture2DCompare( sampler2D depths, vec2 uv, float compare ) {
		return step( compare, unpackRGBAToDepth( texture2D( depths, uv ) ) );
	}
	vec2 texture2DDistribution( sampler2D shadow, vec2 uv ) {
		return unpackRGBATo2Half( texture2D( shadow, uv ) );
	}
	float VSMShadow (sampler2D shadow, vec2 uv, float compare ){
		float occlusion = 1.0;
		vec2 distribution = texture2DDistribution( shadow, uv );
		float hard_shadow = step( compare , distribution.x );
		if (hard_shadow != 1.0 ) {
			float distance = compare - distribution.x ;
			float variance = max( 0.00000, distribution.y * distribution.y );
			float softness_probability = variance / (variance + distance * distance );			softness_probability = clamp( ( softness_probability - 0.3 ) / ( 0.95 - 0.3 ), 0.0, 1.0 );			occlusion = clamp( max( hard_shadow, softness_probability ), 0.0, 1.0 );
		}
		return occlusion;
	}
	float getShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord ) {
		float shadow = 1.0;
		shadowCoord.xyz /= shadowCoord.w;
		shadowCoord.z += shadowBias;
		bvec4 inFrustumVec = bvec4 ( shadowCoord.x >= 0.0, shadowCoord.x <= 1.0, shadowCoord.y >= 0.0, shadowCoord.y <= 1.0 );
		bool inFrustum = all( inFrustumVec );
		bvec2 frustumTestVec = bvec2( inFrustum, shadowCoord.z <= 1.0 );
		bool frustumTest = all( frustumTestVec );
		if ( frustumTest ) {
		#if defined( SHADOWMAP_TYPE_PCF )
			vec2 texelSize = vec2( 1.0 ) / shadowMapSize;
			float dx0 = - texelSize.x * shadowRadius;
			float dy0 = - texelSize.y * shadowRadius;
			float dx1 = + texelSize.x * shadowRadius;
			float dy1 = + texelSize.y * shadowRadius;
			float dx2 = dx0 / 2.0;
			float dy2 = dy0 / 2.0;
			float dx3 = dx1 / 2.0;
			float dy3 = dy1 / 2.0;
			shadow = (
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy2 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy2 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy2 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy3 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy3 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy3 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy1 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy1 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy1 ), shadowCoord.z )
			) * ( 1.0 / 17.0 );
		#elif defined( SHADOWMAP_TYPE_PCF_SOFT )
			vec2 texelSize = vec2( 1.0 ) / shadowMapSize;
			float dx = texelSize.x;
			float dy = texelSize.y;
			vec2 uv = shadowCoord.xy;
			vec2 f = fract( uv * shadowMapSize + 0.5 );
			uv -= f * texelSize;
			shadow = (
				texture2DCompare( shadowMap, uv, shadowCoord.z ) +
				texture2DCompare( shadowMap, uv + vec2( dx, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, uv + vec2( 0.0, dy ), shadowCoord.z ) +
				texture2DCompare( shadowMap, uv + texelSize, shadowCoord.z ) +
				mix( texture2DCompare( shadowMap, uv + vec2( -dx, 0.0 ), shadowCoord.z ), 
					 texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 0.0 ), shadowCoord.z ),
					 f.x ) +
				mix( texture2DCompare( shadowMap, uv + vec2( -dx, dy ), shadowCoord.z ), 
					 texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, dy ), shadowCoord.z ),
					 f.x ) +
				mix( texture2DCompare( shadowMap, uv + vec2( 0.0, -dy ), shadowCoord.z ), 
					 texture2DCompare( shadowMap, uv + vec2( 0.0, 2.0 * dy ), shadowCoord.z ),
					 f.y ) +
				mix( texture2DCompare( shadowMap, uv + vec2( dx, -dy ), shadowCoord.z ), 
					 texture2DCompare( shadowMap, uv + vec2( dx, 2.0 * dy ), shadowCoord.z ),
					 f.y ) +
				mix( mix( texture2DCompare( shadowMap, uv + vec2( -dx, -dy ), shadowCoord.z ), 
						  texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, -dy ), shadowCoord.z ),
						  f.x ),
					 mix( texture2DCompare( shadowMap, uv + vec2( -dx, 2.0 * dy ), shadowCoord.z ), 
						  texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 2.0 * dy ), shadowCoord.z ),
						  f.x ),
					 f.y )
			) * ( 1.0 / 9.0 );
		#elif defined( SHADOWMAP_TYPE_VSM )
			shadow = VSMShadow( shadowMap, shadowCoord.xy, shadowCoord.z );
		#else
			shadow = texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z );
		#endif
		}
		return shadow;
	}
	vec2 cubeToUV( vec3 v, float texelSizeY ) {
		vec3 absV = abs( v );
		float scaleToCube = 1.0 / max( absV.x, max( absV.y, absV.z ) );
		absV *= scaleToCube;
		v *= scaleToCube * ( 1.0 - 2.0 * texelSizeY );
		vec2 planar = v.xy;
		float almostATexel = 1.5 * texelSizeY;
		float almostOne = 1.0 - almostATexel;
		if ( absV.z >= almostOne ) {
			if ( v.z > 0.0 )
				planar.x = 4.0 - v.x;
		} else if ( absV.x >= almostOne ) {
			float signX = sign( v.x );
			planar.x = v.z * signX + 2.0 * signX;
		} else if ( absV.y >= almostOne ) {
			float signY = sign( v.y );
			planar.x = v.x + 2.0 * signY + 2.0;
			planar.y = v.z * signY - 2.0;
		}
		return vec2( 0.125, 0.25 ) * planar + vec2( 0.375, 0.75 );
	}
	float getPointShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord, float shadowCameraNear, float shadowCameraFar ) {
		vec2 texelSize = vec2( 1.0 ) / ( shadowMapSize * vec2( 4.0, 2.0 ) );
		vec3 lightToPosition = shadowCoord.xyz;
		float dp = ( length( lightToPosition ) - shadowCameraNear ) / ( shadowCameraFar - shadowCameraNear );		dp += shadowBias;
		vec3 bd3D = normalize( lightToPosition );
		#if defined( SHADOWMAP_TYPE_PCF ) || defined( SHADOWMAP_TYPE_PCF_SOFT ) || defined( SHADOWMAP_TYPE_VSM )
			vec2 offset = vec2( - 1, 1 ) * shadowRadius * texelSize.y;
			return (
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyy, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyy, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyx, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyx, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxy, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxy, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxx, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxx, texelSize.y ), dp )
			) * ( 1.0 / 9.0 );
		#else
			return texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp );
		#endif
	}
#endif`, Gg = `#ifdef USE_SHADOWMAP
	#if NUM_DIR_LIGHT_SHADOWS > 0
		uniform mat4 directionalShadowMatrix[ NUM_DIR_LIGHT_SHADOWS ];
		varying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];
		struct DirectionalLightShadow {
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
		};
		uniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];
	#endif
	#if NUM_SPOT_LIGHT_SHADOWS > 0
		uniform mat4 spotShadowMatrix[ NUM_SPOT_LIGHT_SHADOWS ];
		varying vec4 vSpotShadowCoord[ NUM_SPOT_LIGHT_SHADOWS ];
		struct SpotLightShadow {
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
		};
		uniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];
	#endif
	#if NUM_POINT_LIGHT_SHADOWS > 0
		uniform mat4 pointShadowMatrix[ NUM_POINT_LIGHT_SHADOWS ];
		varying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];
		struct PointLightShadow {
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
			float shadowCameraNear;
			float shadowCameraFar;
		};
		uniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];
	#endif
#endif`, Wg = `#ifdef USE_SHADOWMAP
	#if NUM_DIR_LIGHT_SHADOWS > 0 || NUM_SPOT_LIGHT_SHADOWS > 0 || NUM_POINT_LIGHT_SHADOWS > 0
		vec3 shadowWorldNormal = inverseTransformDirection( transformedNormal, viewMatrix );
		vec4 shadowWorldPosition;
	#endif
	#if NUM_DIR_LIGHT_SHADOWS > 0
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {
		shadowWorldPosition = worldPosition + vec4( shadowWorldNormal * directionalLightShadows[ i ].shadowNormalBias, 0 );
		vDirectionalShadowCoord[ i ] = directionalShadowMatrix[ i ] * shadowWorldPosition;
	}
	#pragma unroll_loop_end
	#endif
	#if NUM_SPOT_LIGHT_SHADOWS > 0
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_SPOT_LIGHT_SHADOWS; i ++ ) {
		shadowWorldPosition = worldPosition + vec4( shadowWorldNormal * spotLightShadows[ i ].shadowNormalBias, 0 );
		vSpotShadowCoord[ i ] = spotShadowMatrix[ i ] * shadowWorldPosition;
	}
	#pragma unroll_loop_end
	#endif
	#if NUM_POINT_LIGHT_SHADOWS > 0
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {
		shadowWorldPosition = worldPosition + vec4( shadowWorldNormal * pointLightShadows[ i ].shadowNormalBias, 0 );
		vPointShadowCoord[ i ] = pointShadowMatrix[ i ] * shadowWorldPosition;
	}
	#pragma unroll_loop_end
	#endif
#endif`, Xg = `float getShadowMask() {
	float shadow = 1.0;
	#ifdef USE_SHADOWMAP
	#if NUM_DIR_LIGHT_SHADOWS > 0
	DirectionalLightShadow directionalLight;
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {
		directionalLight = directionalLightShadows[ i ];
		shadow *= receiveShadow ? getShadow( directionalShadowMap[ i ], directionalLight.shadowMapSize, directionalLight.shadowBias, directionalLight.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;
	}
	#pragma unroll_loop_end
	#endif
	#if NUM_SPOT_LIGHT_SHADOWS > 0
	SpotLightShadow spotLight;
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_SPOT_LIGHT_SHADOWS; i ++ ) {
		spotLight = spotLightShadows[ i ];
		shadow *= receiveShadow ? getShadow( spotShadowMap[ i ], spotLight.shadowMapSize, spotLight.shadowBias, spotLight.shadowRadius, vSpotShadowCoord[ i ] ) : 1.0;
	}
	#pragma unroll_loop_end
	#endif
	#if NUM_POINT_LIGHT_SHADOWS > 0
	PointLightShadow pointLight;
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {
		pointLight = pointLightShadows[ i ];
		shadow *= receiveShadow ? getPointShadow( pointShadowMap[ i ], pointLight.shadowMapSize, pointLight.shadowBias, pointLight.shadowRadius, vPointShadowCoord[ i ], pointLight.shadowCameraNear, pointLight.shadowCameraFar ) : 1.0;
	}
	#pragma unroll_loop_end
	#endif
	#endif
	return shadow;
}`, Kg = `#ifdef USE_SKINNING
	mat4 boneMatX = getBoneMatrix( skinIndex.x );
	mat4 boneMatY = getBoneMatrix( skinIndex.y );
	mat4 boneMatZ = getBoneMatrix( skinIndex.z );
	mat4 boneMatW = getBoneMatrix( skinIndex.w );
#endif`, $g = `#ifdef USE_SKINNING
	uniform mat4 bindMatrix;
	uniform mat4 bindMatrixInverse;
	uniform highp sampler2D boneTexture;
	uniform int boneTextureSize;
	mat4 getBoneMatrix( const in float i ) {
		float j = i * 4.0;
		float x = mod( j, float( boneTextureSize ) );
		float y = floor( j / float( boneTextureSize ) );
		float dx = 1.0 / float( boneTextureSize );
		float dy = 1.0 / float( boneTextureSize );
		y = dy * ( y + 0.5 );
		vec4 v1 = texture2D( boneTexture, vec2( dx * ( x + 0.5 ), y ) );
		vec4 v2 = texture2D( boneTexture, vec2( dx * ( x + 1.5 ), y ) );
		vec4 v3 = texture2D( boneTexture, vec2( dx * ( x + 2.5 ), y ) );
		vec4 v4 = texture2D( boneTexture, vec2( dx * ( x + 3.5 ), y ) );
		mat4 bone = mat4( v1, v2, v3, v4 );
		return bone;
	}
#endif`, Yg = `#ifdef USE_SKINNING
	vec4 skinVertex = bindMatrix * vec4( transformed, 1.0 );
	vec4 skinned = vec4( 0.0 );
	skinned += boneMatX * skinVertex * skinWeight.x;
	skinned += boneMatY * skinVertex * skinWeight.y;
	skinned += boneMatZ * skinVertex * skinWeight.z;
	skinned += boneMatW * skinVertex * skinWeight.w;
	transformed = ( bindMatrixInverse * skinned ).xyz;
#endif`, Zg = `#ifdef USE_SKINNING
	mat4 skinMatrix = mat4( 0.0 );
	skinMatrix += skinWeight.x * boneMatX;
	skinMatrix += skinWeight.y * boneMatY;
	skinMatrix += skinWeight.z * boneMatZ;
	skinMatrix += skinWeight.w * boneMatW;
	skinMatrix = bindMatrixInverse * skinMatrix * bindMatrix;
	objectNormal = vec4( skinMatrix * vec4( objectNormal, 0.0 ) ).xyz;
	#ifdef USE_TANGENT
		objectTangent = vec4( skinMatrix * vec4( objectTangent, 0.0 ) ).xyz;
	#endif
#endif`, Qg = `float specularStrength;
#ifdef USE_SPECULARMAP
	vec4 texelSpecular = texture2D( specularMap, vUv );
	specularStrength = texelSpecular.r;
#else
	specularStrength = 1.0;
#endif`, Jg = `#ifdef USE_SPECULARMAP
	uniform sampler2D specularMap;
#endif`, tv = `#if defined( TONE_MAPPING )
	gl_FragColor.rgb = toneMapping( gl_FragColor.rgb );
#endif`, ev = `#ifndef saturate
#define saturate( a ) clamp( a, 0.0, 1.0 )
#endif
uniform float toneMappingExposure;
vec3 LinearToneMapping( vec3 color ) {
	return toneMappingExposure * color;
}
vec3 ReinhardToneMapping( vec3 color ) {
	color *= toneMappingExposure;
	return saturate( color / ( vec3( 1.0 ) + color ) );
}
vec3 OptimizedCineonToneMapping( vec3 color ) {
	color *= toneMappingExposure;
	color = max( vec3( 0.0 ), color - 0.004 );
	return pow( ( color * ( 6.2 * color + 0.5 ) ) / ( color * ( 6.2 * color + 1.7 ) + 0.06 ), vec3( 2.2 ) );
}
vec3 RRTAndODTFit( vec3 v ) {
	vec3 a = v * ( v + 0.0245786 ) - 0.000090537;
	vec3 b = v * ( 0.983729 * v + 0.4329510 ) + 0.238081;
	return a / b;
}
vec3 ACESFilmicToneMapping( vec3 color ) {
	const mat3 ACESInputMat = mat3(
		vec3( 0.59719, 0.07600, 0.02840 ),		vec3( 0.35458, 0.90834, 0.13383 ),
		vec3( 0.04823, 0.01566, 0.83777 )
	);
	const mat3 ACESOutputMat = mat3(
		vec3(  1.60475, -0.10208, -0.00327 ),		vec3( -0.53108,  1.10813, -0.07276 ),
		vec3( -0.07367, -0.00605,  1.07602 )
	);
	color *= toneMappingExposure / 0.6;
	color = ACESInputMat * color;
	color = RRTAndODTFit( color );
	color = ACESOutputMat * color;
	return saturate( color );
}
vec3 CustomToneMapping( vec3 color ) { return color; }`, rv = `#ifdef USE_TRANSMISSION
	float transmissionAlpha = 1.0;
	float transmissionFactor = transmission;
	float thicknessFactor = thickness;
	#ifdef USE_TRANSMISSIONMAP
		transmissionFactor *= texture2D( transmissionMap, vUv ).r;
	#endif
	#ifdef USE_THICKNESSMAP
		thicknessFactor *= texture2D( thicknessMap, vUv ).g;
	#endif
	vec3 pos = vWorldPosition;
	vec3 v = normalize( cameraPosition - pos );
	vec3 n = inverseTransformDirection( normal, viewMatrix );
	vec4 transmission = getIBLVolumeRefraction(
		n, v, roughnessFactor, material.diffuseColor, material.specularColor, material.specularF90,
		pos, modelMatrix, viewMatrix, projectionMatrix, ior, thicknessFactor,
		attenuationColor, attenuationDistance );
	totalDiffuse = mix( totalDiffuse, transmission.rgb, transmissionFactor );
	transmissionAlpha = mix( transmissionAlpha, transmission.a, transmissionFactor );
#endif`, nv = `#ifdef USE_TRANSMISSION
	uniform float transmission;
	uniform float thickness;
	uniform float attenuationDistance;
	uniform vec3 attenuationColor;
	#ifdef USE_TRANSMISSIONMAP
		uniform sampler2D transmissionMap;
	#endif
	#ifdef USE_THICKNESSMAP
		uniform sampler2D thicknessMap;
	#endif
	uniform vec2 transmissionSamplerSize;
	uniform sampler2D transmissionSamplerMap;
	uniform mat4 modelMatrix;
	uniform mat4 projectionMatrix;
	varying vec3 vWorldPosition;
	vec3 getVolumeTransmissionRay( const in vec3 n, const in vec3 v, const in float thickness, const in float ior, const in mat4 modelMatrix ) {
		vec3 refractionVector = refract( - v, normalize( n ), 1.0 / ior );
		vec3 modelScale;
		modelScale.x = length( vec3( modelMatrix[ 0 ].xyz ) );
		modelScale.y = length( vec3( modelMatrix[ 1 ].xyz ) );
		modelScale.z = length( vec3( modelMatrix[ 2 ].xyz ) );
		return normalize( refractionVector ) * thickness * modelScale;
	}
	float applyIorToRoughness( const in float roughness, const in float ior ) {
		return roughness * clamp( ior * 2.0 - 2.0, 0.0, 1.0 );
	}
	vec4 getTransmissionSample( const in vec2 fragCoord, const in float roughness, const in float ior ) {
		float framebufferLod = log2( transmissionSamplerSize.x ) * applyIorToRoughness( roughness, ior );
		#ifdef texture2DLodEXT
			return texture2DLodEXT( transmissionSamplerMap, fragCoord.xy, framebufferLod );
		#else
			return texture2D( transmissionSamplerMap, fragCoord.xy, framebufferLod );
		#endif
	}
	vec3 applyVolumeAttenuation( const in vec3 radiance, const in float transmissionDistance, const in vec3 attenuationColor, const in float attenuationDistance ) {
		if ( attenuationDistance == 0.0 ) {
			return radiance;
		} else {
			vec3 attenuationCoefficient = -log( attenuationColor ) / attenuationDistance;
			vec3 transmittance = exp( - attenuationCoefficient * transmissionDistance );			return transmittance * radiance;
		}
	}
	vec4 getIBLVolumeRefraction( const in vec3 n, const in vec3 v, const in float roughness, const in vec3 diffuseColor,
		const in vec3 specularColor, const in float specularF90, const in vec3 position, const in mat4 modelMatrix,
		const in mat4 viewMatrix, const in mat4 projMatrix, const in float ior, const in float thickness,
		const in vec3 attenuationColor, const in float attenuationDistance ) {
		vec3 transmissionRay = getVolumeTransmissionRay( n, v, thickness, ior, modelMatrix );
		vec3 refractedRayExit = position + transmissionRay;
		vec4 ndcPos = projMatrix * viewMatrix * vec4( refractedRayExit, 1.0 );
		vec2 refractionCoords = ndcPos.xy / ndcPos.w;
		refractionCoords += 1.0;
		refractionCoords /= 2.0;
		vec4 transmittedLight = getTransmissionSample( refractionCoords, roughness, ior );
		vec3 attenuatedColor = applyVolumeAttenuation( transmittedLight.rgb, length( transmissionRay ), attenuationColor, attenuationDistance );
		vec3 F = EnvironmentBRDF( n, v, specularColor, specularF90, roughness );
		return vec4( ( 1.0 - F ) * attenuatedColor * diffuseColor, transmittedLight.a );
	}
#endif`, ov = `#if ( defined( USE_UV ) && ! defined( UVS_VERTEX_ONLY ) )
	varying vec2 vUv;
#endif`, iv = `#ifdef USE_UV
	#ifdef UVS_VERTEX_ONLY
		vec2 vUv;
	#else
		varying vec2 vUv;
	#endif
	uniform mat3 uvTransform;
#endif`, av = `#ifdef USE_UV
	vUv = ( uvTransform * vec3( uv, 1 ) ).xy;
#endif`, sv = `#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )
	varying vec2 vUv2;
#endif`, uv = `#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )
	attribute vec2 uv2;
	varying vec2 vUv2;
	uniform mat3 uv2Transform;
#endif`, cv = `#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )
	vUv2 = ( uv2Transform * vec3( uv2, 1 ) ).xy;
#endif`, lv = `#if defined( USE_ENVMAP ) || defined( DISTANCE ) || defined ( USE_SHADOWMAP ) || defined ( USE_TRANSMISSION )
	vec4 worldPosition = vec4( transformed, 1.0 );
	#ifdef USE_INSTANCING
		worldPosition = instanceMatrix * worldPosition;
	#endif
	worldPosition = modelMatrix * worldPosition;
#endif`;
const fv = `varying vec2 vUv;
uniform mat3 uvTransform;
void main() {
	vUv = ( uvTransform * vec3( uv, 1 ) ).xy;
	gl_Position = vec4( position.xy, 1.0, 1.0 );
}`, pv = `uniform sampler2D t2D;
varying vec2 vUv;
void main() {
	gl_FragColor = texture2D( t2D, vUv );
	#ifdef DECODE_VIDEO_TEXTURE
		gl_FragColor = vec4( mix( pow( gl_FragColor.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), gl_FragColor.rgb * 0.0773993808, vec3( lessThanEqual( gl_FragColor.rgb, vec3( 0.04045 ) ) ) ), gl_FragColor.w );
	#endif
	#include <tonemapping_fragment>
	#include <encodings_fragment>
}`, hv = `varying vec3 vWorldDirection;
#include <common>
void main() {
	vWorldDirection = transformDirection( position, modelMatrix );
	#include <begin_vertex>
	#include <project_vertex>
	gl_Position.z = gl_Position.w;
}`, dv = `#include <envmap_common_pars_fragment>
uniform float opacity;
varying vec3 vWorldDirection;
#include <cube_uv_reflection_fragment>
void main() {
	vec3 vReflect = vWorldDirection;
	#include <envmap_fragment>
	gl_FragColor = envColor;
	gl_FragColor.a *= opacity;
	#include <tonemapping_fragment>
	#include <encodings_fragment>
}`, mv = `#include <common>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
varying vec2 vHighPrecisionZW;
void main() {
	#include <uv_vertex>
	#include <skinbase_vertex>
	#ifdef USE_DISPLACEMENTMAP
		#include <beginnormal_vertex>
		#include <morphnormal_vertex>
		#include <skinnormal_vertex>
	#endif
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vHighPrecisionZW = gl_Position.zw;
}`, yv = `#if DEPTH_PACKING == 3200
	uniform float opacity;
#endif
#include <common>
#include <packing>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
varying vec2 vHighPrecisionZW;
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( 1.0 );
	#if DEPTH_PACKING == 3200
		diffuseColor.a = opacity;
	#endif
	#include <map_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <logdepthbuf_fragment>
	float fragCoordZ = 0.5 * vHighPrecisionZW[0] / vHighPrecisionZW[1] + 0.5;
	#if DEPTH_PACKING == 3200
		gl_FragColor = vec4( vec3( 1.0 - fragCoordZ ), opacity );
	#elif DEPTH_PACKING == 3201
		gl_FragColor = packDepthToRGBA( fragCoordZ );
	#endif
}`, gv = `#define DISTANCE
varying vec3 vWorldPosition;
#include <common>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <skinbase_vertex>
	#ifdef USE_DISPLACEMENTMAP
		#include <beginnormal_vertex>
		#include <morphnormal_vertex>
		#include <skinnormal_vertex>
	#endif
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <worldpos_vertex>
	#include <clipping_planes_vertex>
	vWorldPosition = worldPosition.xyz;
}`, vv = `#define DISTANCE
uniform vec3 referencePosition;
uniform float nearDistance;
uniform float farDistance;
varying vec3 vWorldPosition;
#include <common>
#include <packing>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <clipping_planes_pars_fragment>
void main () {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( 1.0 );
	#include <map_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	float dist = length( vWorldPosition - referencePosition );
	dist = ( dist - nearDistance ) / ( farDistance - nearDistance );
	dist = saturate( dist );
	gl_FragColor = packDepthToRGBA( dist );
}`, bv = `varying vec3 vWorldDirection;
#include <common>
void main() {
	vWorldDirection = transformDirection( position, modelMatrix );
	#include <begin_vertex>
	#include <project_vertex>
}`, wv = `uniform sampler2D tEquirect;
varying vec3 vWorldDirection;
#include <common>
void main() {
	vec3 direction = normalize( vWorldDirection );
	vec2 sampleUV = equirectUv( direction );
	gl_FragColor = texture2D( tEquirect, sampleUV );
	#include <tonemapping_fragment>
	#include <encodings_fragment>
}`, Sv = `uniform float scale;
attribute float lineDistance;
varying float vLineDistance;
#include <common>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	vLineDistance = scale * lineDistance;
	#include <color_vertex>
	#include <morphcolor_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <fog_vertex>
}`, xv = `uniform vec3 diffuse;
uniform float opacity;
uniform float dashSize;
uniform float totalSize;
varying float vLineDistance;
#include <common>
#include <color_pars_fragment>
#include <fog_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	if ( mod( vLineDistance, totalSize ) > dashSize ) {
		discard;
	}
	vec3 outgoingLight = vec3( 0.0 );
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <logdepthbuf_fragment>
	#include <color_fragment>
	outgoingLight = diffuseColor.rgb;
	#include <output_fragment>
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
}`, _v = `#include <common>
#include <uv_pars_vertex>
#include <uv2_pars_vertex>
#include <envmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <uv2_vertex>
	#include <color_vertex>
	#include <morphcolor_vertex>
	#if defined ( USE_ENVMAP ) || defined ( USE_SKINNING )
		#include <beginnormal_vertex>
		#include <morphnormal_vertex>
		#include <skinbase_vertex>
		#include <skinnormal_vertex>
		#include <defaultnormal_vertex>
	#endif
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <worldpos_vertex>
	#include <envmap_vertex>
	#include <fog_vertex>
}`, Ev = `uniform vec3 diffuse;
uniform float opacity;
#ifndef FLAT_SHADED
	varying vec3 vNormal;
#endif
#include <common>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <uv2_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <envmap_common_pars_fragment>
#include <envmap_pars_fragment>
#include <cube_uv_reflection_fragment>
#include <fog_pars_fragment>
#include <specularmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <specularmap_fragment>
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	#ifdef USE_LIGHTMAP
		vec4 lightMapTexel = texture2D( lightMap, vUv2 );
		reflectedLight.indirectDiffuse += lightMapTexel.rgb * lightMapIntensity * RECIPROCAL_PI;
	#else
		reflectedLight.indirectDiffuse += vec3( 1.0 );
	#endif
	#include <aomap_fragment>
	reflectedLight.indirectDiffuse *= diffuseColor.rgb;
	vec3 outgoingLight = reflectedLight.indirectDiffuse;
	#include <envmap_fragment>
	#include <output_fragment>
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`, Av = `#define LAMBERT
varying vec3 vLightFront;
varying vec3 vIndirectFront;
#ifdef DOUBLE_SIDED
	varying vec3 vLightBack;
	varying vec3 vIndirectBack;
#endif
#include <common>
#include <uv_pars_vertex>
#include <uv2_pars_vertex>
#include <envmap_pars_vertex>
#include <bsdfs>
#include <lights_pars_begin>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <uv2_vertex>
	#include <color_vertex>
	#include <morphcolor_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <worldpos_vertex>
	#include <envmap_vertex>
	#include <lights_lambert_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}`, Tv = `uniform vec3 diffuse;
uniform vec3 emissive;
uniform float opacity;
varying vec3 vLightFront;
varying vec3 vIndirectFront;
#ifdef DOUBLE_SIDED
	varying vec3 vLightBack;
	varying vec3 vIndirectBack;
#endif
#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <uv2_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <envmap_common_pars_fragment>
#include <envmap_pars_fragment>
#include <cube_uv_reflection_fragment>
#include <bsdfs>
#include <lights_pars_begin>
#include <fog_pars_fragment>
#include <shadowmap_pars_fragment>
#include <shadowmask_pars_fragment>
#include <specularmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( diffuse, opacity );
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <specularmap_fragment>
	#include <emissivemap_fragment>
	#ifdef DOUBLE_SIDED
		reflectedLight.indirectDiffuse += ( gl_FrontFacing ) ? vIndirectFront : vIndirectBack;
	#else
		reflectedLight.indirectDiffuse += vIndirectFront;
	#endif
	#include <lightmap_fragment>
	reflectedLight.indirectDiffuse *= BRDF_Lambert( diffuseColor.rgb );
	#ifdef DOUBLE_SIDED
		reflectedLight.directDiffuse = ( gl_FrontFacing ) ? vLightFront : vLightBack;
	#else
		reflectedLight.directDiffuse = vLightFront;
	#endif
	reflectedLight.directDiffuse *= BRDF_Lambert( diffuseColor.rgb ) * getShadowMask();
	#include <aomap_fragment>
	vec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;
	#include <envmap_fragment>
	#include <output_fragment>
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`, kv = `#define MATCAP
varying vec3 vViewPosition;
#include <common>
#include <uv_pars_vertex>
#include <color_pars_vertex>
#include <displacementmap_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphcolor_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <fog_vertex>
	vViewPosition = - mvPosition.xyz;
}`, Ov = `#define MATCAP
uniform vec3 diffuse;
uniform float opacity;
uniform sampler2D matcap;
varying vec3 vViewPosition;
#include <common>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <fog_pars_fragment>
#include <normal_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	vec3 viewDir = normalize( vViewPosition );
	vec3 x = normalize( vec3( viewDir.z, 0.0, - viewDir.x ) );
	vec3 y = cross( viewDir, x );
	vec2 uv = vec2( dot( x, normal ), dot( y, normal ) ) * 0.495 + 0.5;
	#ifdef USE_MATCAP
		vec4 matcapColor = texture2D( matcap, uv );
	#else
		vec4 matcapColor = vec4( vec3( mix( 0.2, 0.8, uv.y ) ), 1.0 );
	#endif
	vec3 outgoingLight = diffuseColor.rgb * matcapColor.rgb;
	#include <output_fragment>
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`, Pv = `#define NORMAL
#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( TANGENTSPACE_NORMALMAP )
	varying vec3 vViewPosition;
#endif
#include <common>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( TANGENTSPACE_NORMALMAP )
	vViewPosition = - mvPosition.xyz;
#endif
}`, Cv = `#define NORMAL
uniform float opacity;
#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( TANGENTSPACE_NORMALMAP )
	varying vec3 vViewPosition;
#endif
#include <packing>
#include <uv_pars_fragment>
#include <normal_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	#include <logdepthbuf_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	gl_FragColor = vec4( packNormalToRGB( normal ), opacity );
	#ifdef OPAQUE
		gl_FragColor.a = 1.0;
	#endif
}`, Rv = `#define PHONG
varying vec3 vViewPosition;
#include <common>
#include <uv_pars_vertex>
#include <uv2_pars_vertex>
#include <displacementmap_pars_vertex>
#include <envmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <uv2_vertex>
	#include <color_vertex>
	#include <morphcolor_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vViewPosition = - mvPosition.xyz;
	#include <worldpos_vertex>
	#include <envmap_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}`, Iv = `#define PHONG
uniform vec3 diffuse;
uniform vec3 emissive;
uniform vec3 specular;
uniform float shininess;
uniform float opacity;
#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <uv2_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <envmap_common_pars_fragment>
#include <envmap_pars_fragment>
#include <cube_uv_reflection_fragment>
#include <fog_pars_fragment>
#include <bsdfs>
#include <lights_pars_begin>
#include <normal_pars_fragment>
#include <lights_phong_pars_fragment>
#include <shadowmap_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <specularmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( diffuse, opacity );
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <specularmap_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	#include <emissivemap_fragment>
	#include <lights_phong_fragment>
	#include <lights_fragment_begin>
	#include <lights_fragment_maps>
	#include <lights_fragment_end>
	#include <aomap_fragment>
	vec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;
	#include <envmap_fragment>
	#include <output_fragment>
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`, Mv = `#define STANDARD
varying vec3 vViewPosition;
#ifdef USE_TRANSMISSION
	varying vec3 vWorldPosition;
#endif
#include <common>
#include <uv_pars_vertex>
#include <uv2_pars_vertex>
#include <displacementmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <uv2_vertex>
	#include <color_vertex>
	#include <morphcolor_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vViewPosition = - mvPosition.xyz;
	#include <worldpos_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
#ifdef USE_TRANSMISSION
	vWorldPosition = worldPosition.xyz;
#endif
}`, Bv = `#define STANDARD
#ifdef PHYSICAL
	#define IOR
	#define SPECULAR
#endif
uniform vec3 diffuse;
uniform vec3 emissive;
uniform float roughness;
uniform float metalness;
uniform float opacity;
#ifdef IOR
	uniform float ior;
#endif
#ifdef SPECULAR
	uniform float specularIntensity;
	uniform vec3 specularColor;
	#ifdef USE_SPECULARINTENSITYMAP
		uniform sampler2D specularIntensityMap;
	#endif
	#ifdef USE_SPECULARCOLORMAP
		uniform sampler2D specularColorMap;
	#endif
#endif
#ifdef USE_CLEARCOAT
	uniform float clearcoat;
	uniform float clearcoatRoughness;
#endif
#ifdef USE_IRIDESCENCE
	uniform float iridescence;
	uniform float iridescenceIOR;
	uniform float iridescenceThicknessMinimum;
	uniform float iridescenceThicknessMaximum;
#endif
#ifdef USE_SHEEN
	uniform vec3 sheenColor;
	uniform float sheenRoughness;
	#ifdef USE_SHEENCOLORMAP
		uniform sampler2D sheenColorMap;
	#endif
	#ifdef USE_SHEENROUGHNESSMAP
		uniform sampler2D sheenRoughnessMap;
	#endif
#endif
varying vec3 vViewPosition;
#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <uv2_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <bsdfs>
#include <iridescence_fragment>
#include <cube_uv_reflection_fragment>
#include <envmap_common_pars_fragment>
#include <envmap_physical_pars_fragment>
#include <fog_pars_fragment>
#include <lights_pars_begin>
#include <normal_pars_fragment>
#include <lights_physical_pars_fragment>
#include <transmission_pars_fragment>
#include <shadowmap_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <clearcoat_pars_fragment>
#include <iridescence_pars_fragment>
#include <roughnessmap_pars_fragment>
#include <metalnessmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( diffuse, opacity );
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <roughnessmap_fragment>
	#include <metalnessmap_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	#include <clearcoat_normal_fragment_begin>
	#include <clearcoat_normal_fragment_maps>
	#include <emissivemap_fragment>
	#include <lights_physical_fragment>
	#include <lights_fragment_begin>
	#include <lights_fragment_maps>
	#include <lights_fragment_end>
	#include <aomap_fragment>
	vec3 totalDiffuse = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse;
	vec3 totalSpecular = reflectedLight.directSpecular + reflectedLight.indirectSpecular;
	#include <transmission_fragment>
	vec3 outgoingLight = totalDiffuse + totalSpecular + totalEmissiveRadiance;
	#ifdef USE_SHEEN
		float sheenEnergyComp = 1.0 - 0.157 * max3( material.sheenColor );
		outgoingLight = outgoingLight * sheenEnergyComp + sheenSpecular;
	#endif
	#ifdef USE_CLEARCOAT
		float dotNVcc = saturate( dot( geometry.clearcoatNormal, geometry.viewDir ) );
		vec3 Fcc = F_Schlick( material.clearcoatF0, material.clearcoatF90, dotNVcc );
		outgoingLight = outgoingLight * ( 1.0 - material.clearcoat * Fcc ) + clearcoatSpecular * material.clearcoat;
	#endif
	#include <output_fragment>
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`, Lv = `#define TOON
varying vec3 vViewPosition;
#include <common>
#include <uv_pars_vertex>
#include <uv2_pars_vertex>
#include <displacementmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <uv2_vertex>
	#include <color_vertex>
	#include <morphcolor_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vViewPosition = - mvPosition.xyz;
	#include <worldpos_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}`, Nv = `#define TOON
uniform vec3 diffuse;
uniform vec3 emissive;
uniform float opacity;
#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <uv2_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <gradientmap_pars_fragment>
#include <fog_pars_fragment>
#include <bsdfs>
#include <lights_pars_begin>
#include <normal_pars_fragment>
#include <lights_toon_pars_fragment>
#include <shadowmap_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( diffuse, opacity );
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	#include <emissivemap_fragment>
	#include <lights_toon_fragment>
	#include <lights_fragment_begin>
	#include <lights_fragment_maps>
	#include <lights_fragment_end>
	#include <aomap_fragment>
	vec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;
	#include <output_fragment>
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`, Dv = `uniform float size;
uniform float scale;
#include <common>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <color_vertex>
	#include <morphcolor_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <project_vertex>
	gl_PointSize = size;
	#ifdef USE_SIZEATTENUATION
		bool isPerspective = isPerspectiveMatrix( projectionMatrix );
		if ( isPerspective ) gl_PointSize *= ( scale / - mvPosition.z );
	#endif
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <worldpos_vertex>
	#include <fog_vertex>
}`, Fv = `uniform vec3 diffuse;
uniform float opacity;
#include <common>
#include <color_pars_fragment>
#include <map_particle_pars_fragment>
#include <alphatest_pars_fragment>
#include <fog_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec3 outgoingLight = vec3( 0.0 );
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <logdepthbuf_fragment>
	#include <map_particle_fragment>
	#include <color_fragment>
	#include <alphatest_fragment>
	outgoingLight = diffuseColor.rgb;
	#include <output_fragment>
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
}`, Uv = `#include <common>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
void main() {
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <project_vertex>
	#include <worldpos_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}`, jv = `uniform vec3 color;
uniform float opacity;
#include <common>
#include <packing>
#include <fog_pars_fragment>
#include <bsdfs>
#include <lights_pars_begin>
#include <shadowmap_pars_fragment>
#include <shadowmask_pars_fragment>
void main() {
	gl_FragColor = vec4( color, opacity * ( 1.0 - getShadowMask() ) );
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
}`, Vv = `uniform float rotation;
uniform vec2 center;
#include <common>
#include <uv_pars_vertex>
#include <fog_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	vec4 mvPosition = modelViewMatrix * vec4( 0.0, 0.0, 0.0, 1.0 );
	vec2 scale;
	scale.x = length( vec3( modelMatrix[ 0 ].x, modelMatrix[ 0 ].y, modelMatrix[ 0 ].z ) );
	scale.y = length( vec3( modelMatrix[ 1 ].x, modelMatrix[ 1 ].y, modelMatrix[ 1 ].z ) );
	#ifndef USE_SIZEATTENUATION
		bool isPerspective = isPerspectiveMatrix( projectionMatrix );
		if ( isPerspective ) scale *= - mvPosition.z;
	#endif
	vec2 alignedPosition = ( position.xy - ( center - vec2( 0.5 ) ) ) * scale;
	vec2 rotatedPosition;
	rotatedPosition.x = cos( rotation ) * alignedPosition.x - sin( rotation ) * alignedPosition.y;
	rotatedPosition.y = sin( rotation ) * alignedPosition.x + cos( rotation ) * alignedPosition.y;
	mvPosition.xy += rotatedPosition;
	gl_Position = projectionMatrix * mvPosition;
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <fog_vertex>
}`, zv = `uniform vec3 diffuse;
uniform float opacity;
#include <common>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <fog_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec3 outgoingLight = vec3( 0.0 );
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	outgoingLight = diffuseColor.rgb;
	#include <output_fragment>
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
}`, Go = { alphamap_fragment: dy, alphamap_pars_fragment: my, alphatest_fragment: yy, alphatest_pars_fragment: gy, aomap_fragment: vy, aomap_pars_fragment: by, begin_vertex: wy, beginnormal_vertex: Sy, bsdfs: xy, iridescence_fragment: _y, bumpmap_pars_fragment: Ey, clipping_planes_fragment: Ay, clipping_planes_pars_fragment: Ty, clipping_planes_pars_vertex: ky, clipping_planes_vertex: Oy, color_fragment: Py, color_pars_fragment: Cy, color_pars_vertex: Ry, color_vertex: Iy, common: My, cube_uv_reflection_fragment: By, defaultnormal_vertex: Ly, displacementmap_pars_vertex: Ny, displacementmap_vertex: Dy, emissivemap_fragment: Fy, emissivemap_pars_fragment: Uy, encodings_fragment: jy, encodings_pars_fragment: Vy, envmap_fragment: zy, envmap_common_pars_fragment: qy, envmap_pars_fragment: Hy, envmap_pars_vertex: Gy, envmap_physical_pars_fragment: rg, envmap_vertex: Wy, fog_vertex: Xy, fog_pars_vertex: Ky, fog_fragment: $y, fog_pars_fragment: Yy, gradientmap_pars_fragment: Zy, lightmap_fragment: Qy, lightmap_pars_fragment: Jy, lights_lambert_vertex: tg, lights_pars_begin: eg, lights_toon_fragment: ng, lights_toon_pars_fragment: og, lights_phong_fragment: ig, lights_phong_pars_fragment: ag, lights_physical_fragment: sg, lights_physical_pars_fragment: ug, lights_fragment_begin: cg, lights_fragment_maps: lg, lights_fragment_end: fg, logdepthbuf_fragment: pg, logdepthbuf_pars_fragment: hg, logdepthbuf_pars_vertex: dg, logdepthbuf_vertex: mg, map_fragment: yg, map_pars_fragment: gg, map_particle_fragment: vg, map_particle_pars_fragment: bg, metalnessmap_fragment: wg, metalnessmap_pars_fragment: Sg, morphcolor_vertex: xg, morphnormal_vertex: _g, morphtarget_pars_vertex: Eg, morphtarget_vertex: Ag, normal_fragment_begin: Tg, normal_fragment_maps: kg, normal_pars_fragment: Og, normal_pars_vertex: Pg, normal_vertex: Cg, normalmap_pars_fragment: Rg, clearcoat_normal_fragment_begin: Ig, clearcoat_normal_fragment_maps: Mg, clearcoat_pars_fragment: Bg, iridescence_pars_fragment: Lg, output_fragment: Ng, packing: Dg, premultiplied_alpha_fragment: Fg, project_vertex: Ug, dithering_fragment: jg, dithering_pars_fragment: Vg, roughnessmap_fragment: zg, roughnessmap_pars_fragment: qg, shadowmap_pars_fragment: Hg, shadowmap_pars_vertex: Gg, shadowmap_vertex: Wg, shadowmask_pars_fragment: Xg, skinbase_vertex: Kg, skinning_pars_vertex: $g, skinning_vertex: Yg, skinnormal_vertex: Zg, specularmap_fragment: Qg, specularmap_pars_fragment: Jg, tonemapping_fragment: tv, tonemapping_pars_fragment: ev, transmission_fragment: rv, transmission_pars_fragment: nv, uv_pars_fragment: ov, uv_pars_vertex: iv, uv_vertex: av, uv2_pars_fragment: sv, uv2_pars_vertex: uv, uv2_vertex: cv, worldpos_vertex: lv, background_vert: fv, background_frag: pv, cube_vert: hv, cube_frag: dv, depth_vert: mv, depth_frag: yv, distanceRGBA_vert: gv, distanceRGBA_frag: vv, equirect_vert: bv, equirect_frag: wv, linedashed_vert: Sv, linedashed_frag: xv, meshbasic_vert: _v, meshbasic_frag: Ev, meshlambert_vert: Av, meshlambert_frag: Tv, meshmatcap_vert: kv, meshmatcap_frag: Ov, meshnormal_vert: Pv, meshnormal_frag: Cv, meshphong_vert: Rv, meshphong_frag: Iv, meshphysical_vert: Mv, meshphysical_frag: Bv, meshtoon_vert: Lv, meshtoon_frag: Nv, points_vert: Dv, points_frag: Fv, shadow_vert: Uv, shadow_frag: jv, sprite_vert: Vv, sprite_frag: zv }, Wn = { common: { diffuse: { value: new Yo(16777215) }, opacity: { value: 1 }, map: { value: null }, uvTransform: { value: new ga() }, uv2Transform: { value: new ga() }, alphaMap: { value: null }, alphaTest: { value: 0 } }, specularmap: { specularMap: { value: null } }, envmap: { envMap: { value: null }, flipEnvMap: { value: -1 }, reflectivity: { value: 1 }, ior: { value: 1.5 }, refractionRatio: { value: 0.98 } }, aomap: { aoMap: { value: null }, aoMapIntensity: { value: 1 } }, lightmap: { lightMap: { value: null }, lightMapIntensity: { value: 1 } }, emissivemap: { emissiveMap: { value: null } }, bumpmap: { bumpMap: { value: null }, bumpScale: { value: 1 } }, normalmap: { normalMap: { value: null }, normalScale: { value: new Zo(1, 1) } }, displacementmap: { displacementMap: { value: null }, displacementScale: { value: 1 }, displacementBias: { value: 0 } }, roughnessmap: { roughnessMap: { value: null } }, metalnessmap: { metalnessMap: { value: null } }, gradientmap: { gradientMap: { value: null } }, fog: { fogDensity: { value: 25e-5 }, fogNear: { value: 1 }, fogFar: { value: 2e3 }, fogColor: { value: new Yo(16777215) } }, lights: { ambientLightColor: { value: [] }, lightProbe: { value: [] }, directionalLights: { value: [], properties: { direction: {}, color: {} } }, directionalLightShadows: { value: [], properties: { shadowBias: {}, shadowNormalBias: {}, shadowRadius: {}, shadowMapSize: {} } }, directionalShadowMap: { value: [] }, directionalShadowMatrix: { value: [] }, spotLights: { value: [], properties: { color: {}, position: {}, direction: {}, distance: {}, coneCos: {}, penumbraCos: {}, decay: {} } }, spotLightShadows: { value: [], properties: { shadowBias: {}, shadowNormalBias: {}, shadowRadius: {}, shadowMapSize: {} } }, spotShadowMap: { value: [] }, spotShadowMatrix: { value: [] }, pointLights: { value: [], properties: { color: {}, position: {}, decay: {}, distance: {} } }, pointLightShadows: { value: [], properties: { shadowBias: {}, shadowNormalBias: {}, shadowRadius: {}, shadowMapSize: {}, shadowCameraNear: {}, shadowCameraFar: {} } }, pointShadowMap: { value: [] }, pointShadowMatrix: { value: [] }, hemisphereLights: { value: [], properties: { direction: {}, skyColor: {}, groundColor: {} } }, rectAreaLights: { value: [], properties: { color: {}, position: {}, width: {}, height: {} } }, ltc_1: { value: null }, ltc_2: { value: null } }, points: { diffuse: { value: new Yo(16777215) }, opacity: { value: 1 }, size: { value: 1 }, scale: { value: 1 }, map: { value: null }, alphaMap: { value: null }, alphaTest: { value: 0 }, uvTransform: { value: new ga() } }, sprite: { diffuse: { value: new Yo(16777215) }, opacity: { value: 1 }, center: { value: new Zo(0.5, 0.5) }, rotation: { value: 0 }, map: { value: null }, alphaMap: { value: null }, alphaTest: { value: 0 }, uvTransform: { value: new ga() } } }, Na = { basic: { uniforms: qi([Wn.common, Wn.specularmap, Wn.envmap, Wn.aomap, Wn.lightmap, Wn.fog]), vertexShader: Go.meshbasic_vert, fragmentShader: Go.meshbasic_frag }, lambert: { uniforms: qi([Wn.common, Wn.specularmap, Wn.envmap, Wn.aomap, Wn.lightmap, Wn.emissivemap, Wn.fog, Wn.lights, { emissive: { value: new Yo(0) } }]), vertexShader: Go.meshlambert_vert, fragmentShader: Go.meshlambert_frag }, phong: { uniforms: qi([Wn.common, Wn.specularmap, Wn.envmap, Wn.aomap, Wn.lightmap, Wn.emissivemap, Wn.bumpmap, Wn.normalmap, Wn.displacementmap, Wn.fog, Wn.lights, { emissive: { value: new Yo(0) }, specular: { value: new Yo(1118481) }, shininess: { value: 30 } }]), vertexShader: Go.meshphong_vert, fragmentShader: Go.meshphong_frag }, standard: { uniforms: qi([Wn.common, Wn.envmap, Wn.aomap, Wn.lightmap, Wn.emissivemap, Wn.bumpmap, Wn.normalmap, Wn.displacementmap, Wn.roughnessmap, Wn.metalnessmap, Wn.fog, Wn.lights, { emissive: { value: new Yo(0) }, roughness: { value: 1 }, metalness: { value: 0 }, envMapIntensity: { value: 1 } }]), vertexShader: Go.meshphysical_vert, fragmentShader: Go.meshphysical_frag }, toon: { uniforms: qi([Wn.common, Wn.aomap, Wn.lightmap, Wn.emissivemap, Wn.bumpmap, Wn.normalmap, Wn.displacementmap, Wn.gradientmap, Wn.fog, Wn.lights, { emissive: { value: new Yo(0) } }]), vertexShader: Go.meshtoon_vert, fragmentShader: Go.meshtoon_frag }, matcap: { uniforms: qi([Wn.common, Wn.bumpmap, Wn.normalmap, Wn.displacementmap, Wn.fog, { matcap: { value: null } }]), vertexShader: Go.meshmatcap_vert, fragmentShader: Go.meshmatcap_frag }, points: { uniforms: qi([Wn.points, Wn.fog]), vertexShader: Go.points_vert, fragmentShader: Go.points_frag }, dashed: { uniforms: qi([Wn.common, Wn.fog, { scale: { value: 1 }, dashSize: { value: 1 }, totalSize: { value: 2 } }]), vertexShader: Go.linedashed_vert, fragmentShader: Go.linedashed_frag }, depth: { uniforms: qi([Wn.common, Wn.displacementmap]), vertexShader: Go.depth_vert, fragmentShader: Go.depth_frag }, normal: { uniforms: qi([Wn.common, Wn.bumpmap, Wn.normalmap, Wn.displacementmap, { opacity: { value: 1 } }]), vertexShader: Go.meshnormal_vert, fragmentShader: Go.meshnormal_frag }, sprite: { uniforms: qi([Wn.sprite, Wn.fog]), vertexShader: Go.sprite_vert, fragmentShader: Go.sprite_frag }, background: { uniforms: { uvTransform: { value: new ga() }, t2D: { value: null } }, vertexShader: Go.background_vert, fragmentShader: Go.background_frag }, cube: { uniforms: qi([Wn.envmap, { opacity: { value: 1 } }]), vertexShader: Go.cube_vert, fragmentShader: Go.cube_frag }, equirect: { uniforms: { tEquirect: { value: null } }, vertexShader: Go.equirect_vert, fragmentShader: Go.equirect_frag }, distanceRGBA: { uniforms: qi([Wn.common, Wn.displacementmap, { referencePosition: { value: new Br() }, nearDistance: { value: 1 }, farDistance: { value: 1e3 } }]), vertexShader: Go.distanceRGBA_vert, fragmentShader: Go.distanceRGBA_frag }, shadow: { uniforms: qi([Wn.lights, Wn.fog, { color: { value: new Yo(0) }, opacity: { value: 1 } }]), vertexShader: Go.shadow_vert, fragmentShader: Go.shadow_frag } };
Na.physical = { uniforms: qi([Na.standard.uniforms, { clearcoat: { value: 0 }, clearcoatMap: { value: null }, clearcoatRoughness: { value: 0 }, clearcoatRoughnessMap: { value: null }, clearcoatNormalScale: { value: new Zo(1, 1) }, clearcoatNormalMap: { value: null }, iridescence: { value: 0 }, iridescenceMap: { value: null }, iridescenceIOR: { value: 1.3 }, iridescenceThicknessMinimum: { value: 100 }, iridescenceThicknessMaximum: { value: 400 }, iridescenceThicknessMap: { value: null }, sheen: { value: 0 }, sheenColor: { value: new Yo(0) }, sheenColorMap: { value: null }, sheenRoughness: { value: 1 }, sheenRoughnessMap: { value: null }, transmission: { value: 0 }, transmissionMap: { value: null }, transmissionSamplerSize: { value: new Zo() }, transmissionSamplerMap: { value: null }, thickness: { value: 0 }, thicknessMap: { value: null }, attenuationDistance: { value: 0 }, attenuationColor: { value: new Yo(0) }, specularIntensity: { value: 1 }, specularIntensityMap: { value: null }, specularColor: { value: new Yo(1, 1, 1) }, specularColorMap: { value: null } }]), vertexShader: Go.meshphysical_vert, fragmentShader: Go.meshphysical_frag };
function qv(E, t, e, o, a, l) {
  const s = new Yo(0);
  let i = a === true ? 0 : 1, u, d, f = null, p = 0, g = null;
  function b(m, c) {
    let w = false, T = c.isScene === true ? c.background : null;
    T && T.isTexture && (T = t.get(T));
    const P = E.xr, k = P.getSession && P.getSession();
    k && k.environmentBlendMode === "additive" && (T = null), T === null ? h(s, i) : T && T.isColor && (h(T, 1), w = true), (E.autoClear || w) && E.clear(E.autoClearColor, E.autoClearDepth, E.autoClearStencil), T && (T.isCubeTexture || T.mapping === 306) ? (d === void 0 && (d = new Fa(new Oc(1, 1, 1), new Js({ name: "BackgroundCubeMaterial", uniforms: Ru(Na.cube.uniforms), vertexShader: Na.cube.vertexShader, fragmentShader: Na.cube.fragmentShader, side: 1, depthTest: false, depthWrite: false, fog: false })), d.geometry.deleteAttribute("normal"), d.geometry.deleteAttribute("uv"), d.onBeforeRender = function(R, F, v) {
      this.matrixWorld.copyPosition(v.matrixWorld);
    }, Object.defineProperty(d.material, "envMap", { get: function() {
      return this.uniforms.envMap.value;
    } }), o.update(d)), d.material.uniforms.envMap.value = T, d.material.uniforms.flipEnvMap.value = T.isCubeTexture && T.isRenderTargetTexture === false ? -1 : 1, (f !== T || p !== T.version || g !== E.toneMapping) && (d.material.needsUpdate = true, f = T, p = T.version, g = E.toneMapping), d.layers.enableAll(), m.unshift(d, d.geometry, d.material, 0, 0, null)) : T && T.isTexture && (u === void 0 && (u = new Fa(new Kl(2, 2), new Js({ name: "BackgroundMaterial", uniforms: Ru(Na.background.uniforms), vertexShader: Na.background.vertexShader, fragmentShader: Na.background.fragmentShader, side: 0, depthTest: false, depthWrite: false, fog: false })), u.geometry.deleteAttribute("normal"), Object.defineProperty(u.material, "map", { get: function() {
      return this.uniforms.t2D.value;
    } }), o.update(u)), u.material.uniforms.t2D.value = T, T.matrixAutoUpdate === true && T.updateMatrix(), u.material.uniforms.uvTransform.value.copy(T.matrix), (f !== T || p !== T.version || g !== E.toneMapping) && (u.material.needsUpdate = true, f = T, p = T.version, g = E.toneMapping), u.layers.enableAll(), m.unshift(u, u.geometry, u.material, 0, 0, null));
  }
  function h(m, c) {
    e.buffers.color.setClear(m.r, m.g, m.b, c, l);
  }
  return { getClearColor: function() {
    return s;
  }, setClearColor: function(m, c = 1) {
    s.set(m), i = c, h(s, i);
  }, getClearAlpha: function() {
    return i;
  }, setClearAlpha: function(m) {
    i = m, h(s, i);
  }, render: b };
}
function Hv(E, t, e, o) {
  const a = E.getParameter(34921), l = o.isWebGL2 ? null : t.get("OES_vertex_array_object"), s = o.isWebGL2 || l !== null, i = {}, u = c(null);
  let d = u, f = false;
  function p(x, B, W, lt, pt) {
    let at = false;
    if (s) {
      const rt = m(lt, W, B);
      d !== rt && (d = rt, b(d.object)), at = w(x, lt, W, pt), at && T(x, lt, W, pt);
    } else {
      const rt = B.wireframe === true;
      (d.geometry !== lt.id || d.program !== W.id || d.wireframe !== rt) && (d.geometry = lt.id, d.program = W.id, d.wireframe = rt, at = true);
    }
    pt !== null && e.update(pt, 34963), (at || f) && (f = false, U(x, B, W, lt), pt !== null && E.bindBuffer(34963, e.get(pt).buffer));
  }
  function g() {
    return o.isWebGL2 ? E.createVertexArray() : l.createVertexArrayOES();
  }
  function b(x) {
    return o.isWebGL2 ? E.bindVertexArray(x) : l.bindVertexArrayOES(x);
  }
  function h(x) {
    return o.isWebGL2 ? E.deleteVertexArray(x) : l.deleteVertexArrayOES(x);
  }
  function m(x, B, W) {
    const lt = W.wireframe === true;
    let pt = i[x.id];
    pt === void 0 && (pt = {}, i[x.id] = pt);
    let at = pt[B.id];
    at === void 0 && (at = {}, pt[B.id] = at);
    let rt = at[lt];
    return rt === void 0 && (rt = c(g()), at[lt] = rt), rt;
  }
  function c(x) {
    const B = [], W = [], lt = [];
    for (let pt = 0; pt < a; pt++) B[pt] = 0, W[pt] = 0, lt[pt] = 0;
    return { geometry: null, program: null, wireframe: false, newAttributes: B, enabledAttributes: W, attributeDivisors: lt, object: x, attributes: {}, index: null };
  }
  function w(x, B, W, lt) {
    const pt = d.attributes, at = B.attributes;
    let rt = 0;
    const ot = W.getAttributes();
    for (const X in ot) if (ot[X].location >= 0) {
      const I = pt[X];
      let nt = at[X];
      if (nt === void 0 && (X === "instanceMatrix" && x.instanceMatrix && (nt = x.instanceMatrix), X === "instanceColor" && x.instanceColor && (nt = x.instanceColor)), I === void 0 || I.attribute !== nt || nt && I.data !== nt.data) return true;
      rt++;
    }
    return d.attributesNum !== rt || d.index !== lt;
  }
  function T(x, B, W, lt) {
    const pt = {}, at = B.attributes;
    let rt = 0;
    const ot = W.getAttributes();
    for (const X in ot) if (ot[X].location >= 0) {
      let I = at[X];
      I === void 0 && (X === "instanceMatrix" && x.instanceMatrix && (I = x.instanceMatrix), X === "instanceColor" && x.instanceColor && (I = x.instanceColor));
      const nt = {};
      nt.attribute = I, I && I.data && (nt.data = I.data), pt[X] = nt, rt++;
    }
    d.attributes = pt, d.attributesNum = rt, d.index = lt;
  }
  function P() {
    const x = d.newAttributes;
    for (let B = 0, W = x.length; B < W; B++) x[B] = 0;
  }
  function k(x) {
    R(x, 0);
  }
  function R(x, B) {
    const W = d.newAttributes, lt = d.enabledAttributes, pt = d.attributeDivisors;
    W[x] = 1, lt[x] === 0 && (E.enableVertexAttribArray(x), lt[x] = 1), pt[x] !== B && ((o.isWebGL2 ? E : t.get("ANGLE_instanced_arrays"))[o.isWebGL2 ? "vertexAttribDivisor" : "vertexAttribDivisorANGLE"](x, B), pt[x] = B);
  }
  function F() {
    const x = d.newAttributes, B = d.enabledAttributes;
    for (let W = 0, lt = B.length; W < lt; W++) B[W] !== x[W] && (E.disableVertexAttribArray(W), B[W] = 0);
  }
  function v(x, B, W, lt, pt, at) {
    o.isWebGL2 === true && (W === 5124 || W === 5125) ? E.vertexAttribIPointer(x, B, W, pt, at) : E.vertexAttribPointer(x, B, W, lt, pt, at);
  }
  function U(x, B, W, lt) {
    if (o.isWebGL2 === false && (x.isInstancedMesh || lt.isInstancedBufferGeometry) && t.get("ANGLE_instanced_arrays") === null) return;
    P();
    const pt = lt.attributes, at = W.getAttributes(), rt = B.defaultAttributeValues;
    for (const ot in at) {
      const X = at[ot];
      if (X.location >= 0) {
        let I = pt[ot];
        if (I === void 0 && (ot === "instanceMatrix" && x.instanceMatrix && (I = x.instanceMatrix), ot === "instanceColor" && x.instanceColor && (I = x.instanceColor)), I !== void 0) {
          const nt = I.normalized, ft = I.itemSize, dt = e.get(I);
          if (dt === void 0) continue;
          const Lt = dt.buffer, $ = dt.type, it = dt.bytesPerElement;
          if (I.isInterleavedBufferAttribute) {
            const mt = I.data, Ot = mt.stride, bt = I.offset;
            if (mt.isInstancedInterleavedBuffer) {
              for (let xt = 0; xt < X.locationSize; xt++) R(X.location + xt, mt.meshPerAttribute);
              x.isInstancedMesh !== true && lt._maxInstanceCount === void 0 && (lt._maxInstanceCount = mt.meshPerAttribute * mt.count);
            } else for (let xt = 0; xt < X.locationSize; xt++) k(X.location + xt);
            E.bindBuffer(34962, Lt);
            for (let xt = 0; xt < X.locationSize; xt++) v(X.location + xt, ft / X.locationSize, $, nt, Ot * it, (bt + ft / X.locationSize * xt) * it);
          } else {
            if (I.isInstancedBufferAttribute) {
              for (let mt = 0; mt < X.locationSize; mt++) R(X.location + mt, I.meshPerAttribute);
              x.isInstancedMesh !== true && lt._maxInstanceCount === void 0 && (lt._maxInstanceCount = I.meshPerAttribute * I.count);
            } else for (let mt = 0; mt < X.locationSize; mt++) k(X.location + mt);
            E.bindBuffer(34962, Lt);
            for (let mt = 0; mt < X.locationSize; mt++) v(X.location + mt, ft / X.locationSize, $, nt, ft * it, ft / X.locationSize * mt * it);
          }
        } else if (rt !== void 0) {
          const nt = rt[ot];
          if (nt !== void 0) switch (nt.length) {
            case 2:
              E.vertexAttrib2fv(X.location, nt);
              break;
            case 3:
              E.vertexAttrib3fv(X.location, nt);
              break;
            case 4:
              E.vertexAttrib4fv(X.location, nt);
              break;
            default:
              E.vertexAttrib1fv(X.location, nt);
          }
        }
      }
    }
    F();
  }
  function M() {
    V();
    for (const x in i) {
      const B = i[x];
      for (const W in B) {
        const lt = B[W];
        for (const pt in lt) h(lt[pt].object), delete lt[pt];
        delete B[W];
      }
      delete i[x];
    }
  }
  function Z(x) {
    if (i[x.id] === void 0) return;
    const B = i[x.id];
    for (const W in B) {
      const lt = B[W];
      for (const pt in lt) h(lt[pt].object), delete lt[pt];
      delete B[W];
    }
    delete i[x.id];
  }
  function D(x) {
    for (const B in i) {
      const W = i[B];
      if (W[x.id] === void 0) continue;
      const lt = W[x.id];
      for (const pt in lt) h(lt[pt].object), delete lt[pt];
      delete W[x.id];
    }
  }
  function V() {
    S(), f = true, d !== u && (d = u, b(d.object));
  }
  function S() {
    u.geometry = null, u.program = null, u.wireframe = false;
  }
  return { setup: p, reset: V, resetDefaultState: S, dispose: M, releaseStatesOfGeometry: Z, releaseStatesOfProgram: D, initAttributes: P, enableAttribute: k, disableUnusedAttributes: F };
}
function Gv(E, t, e, o) {
  const a = o.isWebGL2;
  let l;
  function s(d) {
    l = d;
  }
  function i(d, f) {
    E.drawArrays(l, d, f), e.update(f, l, 1);
  }
  function u(d, f, p) {
    if (p === 0) return;
    let g, b;
    if (a) g = E, b = "drawArraysInstanced";
    else if (g = t.get("ANGLE_instanced_arrays"), b = "drawArraysInstancedANGLE", g === null) {
      console.error("THREE.WebGLBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.");
      return;
    }
    g[b](l, d, f, p), e.update(f, l, p);
  }
  this.setMode = s, this.render = i, this.renderInstances = u;
}
function Wv(E, t, e) {
  let o;
  function a() {
    if (o !== void 0) return o;
    if (t.has("EXT_texture_filter_anisotropic") === true) {
      const v = t.get("EXT_texture_filter_anisotropic");
      o = E.getParameter(v.MAX_TEXTURE_MAX_ANISOTROPY_EXT);
    } else o = 0;
    return o;
  }
  function l(v) {
    if (v === "highp") {
      if (E.getShaderPrecisionFormat(35633, 36338).precision > 0 && E.getShaderPrecisionFormat(35632, 36338).precision > 0) return "highp";
      v = "mediump";
    }
    return v === "mediump" && E.getShaderPrecisionFormat(35633, 36337).precision > 0 && E.getShaderPrecisionFormat(35632, 36337).precision > 0 ? "mediump" : "lowp";
  }
  const s = typeof WebGL2RenderingContext < "u" && E instanceof WebGL2RenderingContext || typeof WebGL2ComputeRenderingContext < "u" && E instanceof WebGL2ComputeRenderingContext;
  let i = e.precision !== void 0 ? e.precision : "highp";
  const u = l(i);
  u !== i && (console.warn("THREE.WebGLRenderer:", i, "not supported, using", u, "instead."), i = u);
  const d = s || t.has("WEBGL_draw_buffers"), f = e.logarithmicDepthBuffer === true, p = E.getParameter(34930), g = E.getParameter(35660), b = E.getParameter(3379), h = E.getParameter(34076), m = E.getParameter(34921), c = E.getParameter(36347), w = E.getParameter(36348), T = E.getParameter(36349), P = g > 0, k = s || t.has("OES_texture_float"), R = P && k, F = s ? E.getParameter(36183) : 0;
  return { isWebGL2: s, drawBuffers: d, getMaxAnisotropy: a, getMaxPrecision: l, precision: i, logarithmicDepthBuffer: f, maxTextures: p, maxVertexTextures: g, maxTextureSize: b, maxCubemapSize: h, maxAttributes: m, maxVertexUniforms: c, maxVaryings: w, maxFragmentUniforms: T, vertexTextures: P, floatFragmentTextures: k, floatVertexTextures: R, maxSamples: F };
}
function Xv(E) {
  const t = this;
  let e = null, o = 0, a = false, l = false;
  const s = new qs(), i = new ga(), u = { value: null, needsUpdate: false };
  this.uniform = u, this.numPlanes = 0, this.numIntersection = 0, this.init = function(p, g, b) {
    const h = p.length !== 0 || g || o !== 0 || a;
    return a = g, e = f(p, b, 0), o = p.length, h;
  }, this.beginShadows = function() {
    l = true, f(null);
  }, this.endShadows = function() {
    l = false, d();
  }, this.setState = function(p, g, b) {
    const h = p.clippingPlanes, m = p.clipIntersection, c = p.clipShadows, w = E.get(p);
    if (!a || h === null || h.length === 0 || l && !c) l ? f(null) : d();
    else {
      const T = l ? 0 : o, P = T * 4;
      let k = w.clippingState || null;
      u.value = k, k = f(h, g, P, b);
      for (let R = 0; R !== P; ++R) k[R] = e[R];
      w.clippingState = k, this.numIntersection = m ? this.numPlanes : 0, this.numPlanes += T;
    }
  };
  function d() {
    u.value !== e && (u.value = e, u.needsUpdate = o > 0), t.numPlanes = o, t.numIntersection = 0;
  }
  function f(p, g, b, h) {
    const m = p !== null ? p.length : 0;
    let c = null;
    if (m !== 0) {
      if (c = u.value, h !== true || c === null) {
        const w = b + m * 4, T = g.matrixWorldInverse;
        i.getNormalMatrix(T), (c === null || c.length < w) && (c = new Float32Array(w));
        for (let P = 0, k = b; P !== m; ++P, k += 4) s.copy(p[P]).applyMatrix4(T, i), s.normal.toArray(c, k), c[k + 3] = s.constant;
      }
      u.value = c, u.needsUpdate = true;
    }
    return t.numPlanes = m, t.numIntersection = 0, c;
  }
}
function Kv(E) {
  let t = /* @__PURE__ */ new WeakMap();
  function e(s, i) {
    return i === 303 ? s.mapping = 301 : i === 304 && (s.mapping = 302), s;
  }
  function o(s) {
    if (s && s.isTexture && s.isRenderTargetTexture === false) {
      const i = s.mapping;
      if (i === 303 || i === 304) if (t.has(s)) {
        const u = t.get(s).texture;
        return e(u, s.mapping);
      } else {
        const u = s.image;
        if (u && u.height > 0) {
          const d = new ly(u.height / 2);
          return d.fromEquirectangularTexture(E, s), t.set(s, d), s.addEventListener("dispose", a), e(d.texture, s.mapping);
        } else return null;
      }
    }
    return s;
  }
  function a(s) {
    const i = s.target;
    i.removeEventListener("dispose", a);
    const u = t.get(i);
    u !== void 0 && (t.delete(i), u.dispose());
  }
  function l() {
    t = /* @__PURE__ */ new WeakMap();
  }
  return { get: o, dispose: l };
}
class $v extends Ld {
  constructor(t = -1, e = 1, o = 1, a = -1, l = 0.1, s = 2e3) {
    super(), this.isOrthographicCamera = true, this.type = "OrthographicCamera", this.zoom = 1, this.view = null, this.left = t, this.right = e, this.top = o, this.bottom = a, this.near = l, this.far = s, this.updateProjectionMatrix();
  }
  copy(t, e) {
    return super.copy(t, e), this.left = t.left, this.right = t.right, this.top = t.top, this.bottom = t.bottom, this.near = t.near, this.far = t.far, this.zoom = t.zoom, this.view = t.view === null ? null : Object.assign({}, t.view), this;
  }
  setViewOffset(t, e, o, a, l, s) {
    this.view === null && (this.view = { enabled: true, fullWidth: 1, fullHeight: 1, offsetX: 0, offsetY: 0, width: 1, height: 1 }), this.view.enabled = true, this.view.fullWidth = t, this.view.fullHeight = e, this.view.offsetX = o, this.view.offsetY = a, this.view.width = l, this.view.height = s, this.updateProjectionMatrix();
  }
  clearViewOffset() {
    this.view !== null && (this.view.enabled = false), this.updateProjectionMatrix();
  }
  updateProjectionMatrix() {
    const t = (this.right - this.left) / (2 * this.zoom), e = (this.top - this.bottom) / (2 * this.zoom), o = (this.right + this.left) / 2, a = (this.top + this.bottom) / 2;
    let l = o - t, s = o + t, i = a + e, u = a - e;
    if (this.view !== null && this.view.enabled) {
      const d = (this.right - this.left) / this.view.fullWidth / this.zoom, f = (this.top - this.bottom) / this.view.fullHeight / this.zoom;
      l += d * this.view.offsetX, s = l + d * this.view.width, i -= f * this.view.offsetY, u = i - f * this.view.height;
    }
    this.projectionMatrix.makeOrthographic(l, s, i, u, this.near, this.far), this.projectionMatrixInverse.copy(this.projectionMatrix).invert();
  }
  toJSON(t) {
    const e = super.toJSON(t);
    return e.object.zoom = this.zoom, e.object.left = this.left, e.object.right = this.right, e.object.top = this.top, e.object.bottom = this.bottom, e.object.near = this.near, e.object.far = this.far, this.view !== null && (e.object.view = Object.assign({}, this.view)), e;
  }
}
const Pu = 4, hh = [0.125, 0.215, 0.35, 0.446, 0.526, 0.582], Gs = 20, Bf = new $v(), dh = new Yo();
let Lf = null;
const Hs = (1 + Math.sqrt(5)) / 2, Tu = 1 / Hs, mh = [new Br(1, 1, 1), new Br(-1, 1, 1), new Br(1, 1, -1), new Br(-1, 1, -1), new Br(0, Hs, Tu), new Br(0, Hs, -Tu), new Br(Tu, 0, Hs), new Br(-Tu, 0, Hs), new Br(Hs, Tu, 0), new Br(-Hs, Tu, 0)];
class yh {
  constructor(t) {
    this._renderer = t, this._pingPongRenderTarget = null, this._lodMax = 0, this._cubeSize = 0, this._lodPlanes = [], this._sizeLods = [], this._sigmas = [], this._blurMaterial = null, this._cubemapMaterial = null, this._equirectMaterial = null, this._compileMaterial(this._blurMaterial);
  }
  fromScene(t, e = 0, o = 0.1, a = 100) {
    Lf = this._renderer.getRenderTarget(), this._setSize(256);
    const l = this._allocateTargets();
    return l.depthBuffer = true, this._sceneToCubeUV(t, o, a, l), e > 0 && this._blur(l, 0, 0, e), this._applyPMREM(l), this._cleanup(l), l;
  }
  fromEquirectangular(t, e = null) {
    return this._fromTexture(t, e);
  }
  fromCubemap(t, e = null) {
    return this._fromTexture(t, e);
  }
  compileCubemapShader() {
    this._cubemapMaterial === null && (this._cubemapMaterial = bh(), this._compileMaterial(this._cubemapMaterial));
  }
  compileEquirectangularShader() {
    this._equirectMaterial === null && (this._equirectMaterial = vh(), this._compileMaterial(this._equirectMaterial));
  }
  dispose() {
    this._dispose(), this._cubemapMaterial !== null && this._cubemapMaterial.dispose(), this._equirectMaterial !== null && this._equirectMaterial.dispose();
  }
  _setSize(t) {
    this._lodMax = Math.floor(Math.log2(t)), this._cubeSize = Math.pow(2, this._lodMax);
  }
  _dispose() {
    this._blurMaterial !== null && this._blurMaterial.dispose(), this._pingPongRenderTarget !== null && this._pingPongRenderTarget.dispose();
    for (let t = 0; t < this._lodPlanes.length; t++) this._lodPlanes[t].dispose();
  }
  _cleanup(t) {
    this._renderer.setRenderTarget(Lf), t.scissorTest = false, vl(t, 0, 0, t.width, t.height);
  }
  _fromTexture(t, e) {
    t.mapping === 301 || t.mapping === 302 ? this._setSize(t.image.length === 0 ? 16 : t.image[0].width || t.image[0].image.width) : this._setSize(t.image.width / 4), Lf = this._renderer.getRenderTarget();
    const o = e || this._allocateTargets();
    return this._textureToCubeUV(t, o), this._applyPMREM(o), this._cleanup(o), o;
  }
  _allocateTargets() {
    const t = 3 * Math.max(this._cubeSize, 112), e = 4 * this._cubeSize, o = { magFilter: 1006, minFilter: 1006, generateMipmaps: false, type: 1016, format: 1023, encoding: 3e3, depthBuffer: false }, a = gh(t, e, o);
    if (this._pingPongRenderTarget === null || this._pingPongRenderTarget.width !== t) {
      this._pingPongRenderTarget !== null && this._dispose(), this._pingPongRenderTarget = gh(t, e, o);
      const { _lodMax: l } = this;
      ({ sizeLods: this._sizeLods, lodPlanes: this._lodPlanes, sigmas: this._sigmas } = Yv(l)), this._blurMaterial = Zv(l, t, e);
    }
    return a;
  }
  _compileMaterial(t) {
    const e = new Fa(this._lodPlanes[0], t);
    this._renderer.compile(e, Bf);
  }
  _sceneToCubeUV(t, e, o, a) {
    const l = new ua(90, 1, e, o), s = [1, -1, 1, 1, 1, 1], i = [1, 1, 1, -1, -1, -1], u = this._renderer, d = u.autoClear, f = u.toneMapping;
    u.getClearColor(dh), u.toneMapping = 0, u.autoClear = false;
    const p = new Id({ name: "PMREM.Background", side: 1, depthWrite: false, depthTest: false }), g = new Fa(new Oc(), p);
    let b = false;
    const h = t.background;
    h ? h.isColor && (p.color.copy(h), t.background = null, b = true) : (p.color.copy(dh), b = true);
    for (let m = 0; m < 6; m++) {
      const c = m % 3;
      c === 0 ? (l.up.set(0, s[m], 0), l.lookAt(i[m], 0, 0)) : c === 1 ? (l.up.set(0, 0, s[m]), l.lookAt(0, i[m], 0)) : (l.up.set(0, s[m], 0), l.lookAt(0, 0, i[m]));
      const w = this._cubeSize;
      vl(a, c * w, m > 2 ? w : 0, w, w), u.setRenderTarget(a), b && u.render(g, l), u.render(t, l);
    }
    g.geometry.dispose(), g.material.dispose(), u.toneMapping = f, u.autoClear = d, t.background = h;
  }
  _textureToCubeUV(t, e) {
    const o = this._renderer, a = t.mapping === 301 || t.mapping === 302;
    a ? (this._cubemapMaterial === null && (this._cubemapMaterial = bh()), this._cubemapMaterial.uniforms.flipEnvMap.value = t.isRenderTargetTexture === false ? -1 : 1) : this._equirectMaterial === null && (this._equirectMaterial = vh());
    const l = a ? this._cubemapMaterial : this._equirectMaterial, s = new Fa(this._lodPlanes[0], l), i = l.uniforms;
    i.envMap.value = t;
    const u = this._cubeSize;
    vl(e, 0, 0, 3 * u, 2 * u), o.setRenderTarget(e), o.render(s, Bf);
  }
  _applyPMREM(t) {
    const e = this._renderer, o = e.autoClear;
    e.autoClear = false;
    for (let a = 1; a < this._lodPlanes.length; a++) {
      const l = Math.sqrt(this._sigmas[a] * this._sigmas[a] - this._sigmas[a - 1] * this._sigmas[a - 1]), s = mh[(a - 1) % mh.length];
      this._blur(t, a - 1, a, l, s);
    }
    e.autoClear = o;
  }
  _blur(t, e, o, a, l) {
    const s = this._pingPongRenderTarget;
    this._halfBlur(t, s, e, o, a, "latitudinal", l), this._halfBlur(s, t, o, o, a, "longitudinal", l);
  }
  _halfBlur(t, e, o, a, l, s, i) {
    const u = this._renderer, d = this._blurMaterial;
    s !== "latitudinal" && s !== "longitudinal" && console.error("blur direction must be either latitudinal or longitudinal!");
    const f = 3, p = new Fa(this._lodPlanes[a], d), g = d.uniforms, b = this._sizeLods[o] - 1, h = isFinite(l) ? Math.PI / (2 * b) : 2 * Math.PI / (2 * Gs - 1), m = l / h, c = isFinite(l) ? 1 + Math.floor(f * m) : Gs;
    c > Gs && console.warn(`sigmaRadians, ${l}, is too large and will clip, as it requested ${c} samples when the maximum is set to ${Gs}`);
    const w = [];
    let T = 0;
    for (let v = 0; v < Gs; ++v) {
      const U = v / m, M = Math.exp(-U * U / 2);
      w.push(M), v === 0 ? T += M : v < c && (T += 2 * M);
    }
    for (let v = 0; v < w.length; v++) w[v] = w[v] / T;
    g.envMap.value = t.texture, g.samples.value = c, g.weights.value = w, g.latitudinal.value = s === "latitudinal", i && (g.poleAxis.value = i);
    const { _lodMax: P } = this;
    g.dTheta.value = h, g.mipInt.value = P - o;
    const k = this._sizeLods[a], R = 3 * k * (a > P - Pu ? a - P + Pu : 0), F = 4 * (this._cubeSize - k);
    vl(e, R, F, 3 * k, 2 * k), u.setRenderTarget(e), u.render(p, Bf);
  }
}
function Yv(E) {
  const t = [], e = [], o = [];
  let a = E;
  const l = E - Pu + 1 + hh.length;
  for (let s = 0; s < l; s++) {
    const i = Math.pow(2, a);
    e.push(i);
    let u = 1 / i;
    s > E - Pu ? u = hh[s - E + Pu - 1] : s === 0 && (u = 0), o.push(u);
    const d = 1 / (i - 2), f = -d, p = 1 + d, g = [f, f, p, f, p, p, f, f, p, p, f, p], b = 6, h = 6, m = 3, c = 2, w = 1, T = new Float32Array(m * h * b), P = new Float32Array(c * h * b), k = new Float32Array(w * h * b);
    for (let F = 0; F < b; F++) {
      const v = F % 3 * 2 / 3 - 1, U = F > 2 ? 0 : -1, M = [v, U, 0, v + 2 / 3, U, 0, v + 2 / 3, U + 1, 0, v, U, 0, v + 2 / 3, U + 1, 0, v, U + 1, 0];
      T.set(M, m * h * F), P.set(g, c * h * F);
      const Z = [F, F, F, F, F, F];
      k.set(Z, w * h * F);
    }
    const R = new ja();
    R.setAttribute("position", new Ua(T, m)), R.setAttribute("uv", new Ua(P, c)), R.setAttribute("faceIndex", new Ua(k, w)), t.push(R), a > Pu && a--;
  }
  return { lodPlanes: t, sizeLods: e, sigmas: o };
}
function gh(E, t, e) {
  const o = new Qs(E, t, e);
  return o.texture.mapping = 306, o.texture.name = "PMREM.cubeUv", o.scissorTest = true, o;
}
function vl(E, t, e, o, a) {
  E.viewport.set(t, e, o, a), E.scissor.set(t, e, o, a);
}
function Zv(E, t, e) {
  const o = new Float32Array(Gs), a = new Br(0, 1, 0);
  return new Js({ name: "SphericalGaussianBlur", defines: { n: Gs, CUBEUV_TEXEL_WIDTH: 1 / t, CUBEUV_TEXEL_HEIGHT: 1 / e, CUBEUV_MAX_MIP: `${E}.0` }, uniforms: { envMap: { value: null }, samples: { value: 1 }, weights: { value: o }, latitudinal: { value: false }, dTheta: { value: 0 }, mipInt: { value: 0 }, poleAxis: { value: a } }, vertexShader: dp(), fragmentShader: `

			precision mediump float;
			precision mediump int;

			varying vec3 vOutputDirection;

			uniform sampler2D envMap;
			uniform int samples;
			uniform float weights[ n ];
			uniform bool latitudinal;
			uniform float dTheta;
			uniform float mipInt;
			uniform vec3 poleAxis;

			#define ENVMAP_TYPE_CUBE_UV
			#include <cube_uv_reflection_fragment>

			vec3 getSample( float theta, vec3 axis ) {

				float cosTheta = cos( theta );
				// Rodrigues' axis-angle rotation
				vec3 sampleDirection = vOutputDirection * cosTheta
					+ cross( axis, vOutputDirection ) * sin( theta )
					+ axis * dot( axis, vOutputDirection ) * ( 1.0 - cosTheta );

				return bilinearCubeUV( envMap, sampleDirection, mipInt );

			}

			void main() {

				vec3 axis = latitudinal ? poleAxis : cross( poleAxis, vOutputDirection );

				if ( all( equal( axis, vec3( 0.0 ) ) ) ) {

					axis = vec3( vOutputDirection.z, 0.0, - vOutputDirection.x );

				}

				axis = normalize( axis );

				gl_FragColor = vec4( 0.0, 0.0, 0.0, 1.0 );
				gl_FragColor.rgb += weights[ 0 ] * getSample( 0.0, axis );

				for ( int i = 1; i < n; i++ ) {

					if ( i >= samples ) {

						break;

					}

					float theta = dTheta * float( i );
					gl_FragColor.rgb += weights[ i ] * getSample( -1.0 * theta, axis );
					gl_FragColor.rgb += weights[ i ] * getSample( theta, axis );

				}

			}
		`, blending: 0, depthTest: false, depthWrite: false });
}
function vh() {
  return new Js({ name: "EquirectangularToCubeUV", uniforms: { envMap: { value: null } }, vertexShader: dp(), fragmentShader: `

			precision mediump float;
			precision mediump int;

			varying vec3 vOutputDirection;

			uniform sampler2D envMap;

			#include <common>

			void main() {

				vec3 outputDirection = normalize( vOutputDirection );
				vec2 uv = equirectUv( outputDirection );

				gl_FragColor = vec4( texture2D ( envMap, uv ).rgb, 1.0 );

			}
		`, blending: 0, depthTest: false, depthWrite: false });
}
function bh() {
  return new Js({ name: "CubemapToCubeUV", uniforms: { envMap: { value: null }, flipEnvMap: { value: -1 } }, vertexShader: dp(), fragmentShader: `

			precision mediump float;
			precision mediump int;

			uniform float flipEnvMap;

			varying vec3 vOutputDirection;

			uniform samplerCube envMap;

			void main() {

				gl_FragColor = textureCube( envMap, vec3( flipEnvMap * vOutputDirection.x, vOutputDirection.yz ) );

			}
		`, blending: 0, depthTest: false, depthWrite: false });
}
function dp() {
  return `

		precision mediump float;
		precision mediump int;

		attribute float faceIndex;

		varying vec3 vOutputDirection;

		// RH coordinate system; PMREM face-indexing convention
		vec3 getDirection( vec2 uv, float face ) {

			uv = 2.0 * uv - 1.0;

			vec3 direction = vec3( uv, 1.0 );

			if ( face == 0.0 ) {

				direction = direction.zyx; // ( 1, v, u ) pos x

			} else if ( face == 1.0 ) {

				direction = direction.xzy;
				direction.xz *= -1.0; // ( -u, 1, -v ) pos y

			} else if ( face == 2.0 ) {

				direction.x *= -1.0; // ( -u, v, 1 ) pos z

			} else if ( face == 3.0 ) {

				direction = direction.zyx;
				direction.xz *= -1.0; // ( -1, v, -u ) neg x

			} else if ( face == 4.0 ) {

				direction = direction.xzy;
				direction.xy *= -1.0; // ( -u, -1, v ) neg y

			} else if ( face == 5.0 ) {

				direction.z *= -1.0; // ( u, v, -1 ) neg z

			}

			return direction;

		}

		void main() {

			vOutputDirection = getDirection( uv, faceIndex );
			gl_Position = vec4( position, 1.0 );

		}
	`;
}
function Qv(E) {
  let t = /* @__PURE__ */ new WeakMap(), e = null;
  function o(i) {
    if (i && i.isTexture) {
      const u = i.mapping, d = u === 303 || u === 304, f = u === 301 || u === 302;
      if (d || f) if (i.isRenderTargetTexture && i.needsPMREMUpdate === true) {
        i.needsPMREMUpdate = false;
        let p = t.get(i);
        return e === null && (e = new yh(E)), p = d ? e.fromEquirectangular(i, p) : e.fromCubemap(i, p), t.set(i, p), p.texture;
      } else {
        if (t.has(i)) return t.get(i).texture;
        {
          const p = i.image;
          if (d && p && p.height > 0 || f && p && a(p)) {
            e === null && (e = new yh(E));
            const g = d ? e.fromEquirectangular(i) : e.fromCubemap(i);
            return t.set(i, g), i.addEventListener("dispose", l), g.texture;
          } else return null;
        }
      }
    }
    return i;
  }
  function a(i) {
    let u = 0;
    const d = 6;
    for (let f = 0; f < d; f++) i[f] !== void 0 && u++;
    return u === d;
  }
  function l(i) {
    const u = i.target;
    u.removeEventListener("dispose", l);
    const d = t.get(u);
    d !== void 0 && (t.delete(u), d.dispose());
  }
  function s() {
    t = /* @__PURE__ */ new WeakMap(), e !== null && (e.dispose(), e = null);
  }
  return { get: o, dispose: s };
}
function Jv(E) {
  const t = {};
  function e(o) {
    if (t[o] !== void 0) return t[o];
    let a;
    switch (o) {
      case "WEBGL_depth_texture":
        a = E.getExtension("WEBGL_depth_texture") || E.getExtension("MOZ_WEBGL_depth_texture") || E.getExtension("WEBKIT_WEBGL_depth_texture");
        break;
      case "EXT_texture_filter_anisotropic":
        a = E.getExtension("EXT_texture_filter_anisotropic") || E.getExtension("MOZ_EXT_texture_filter_anisotropic") || E.getExtension("WEBKIT_EXT_texture_filter_anisotropic");
        break;
      case "WEBGL_compressed_texture_s3tc":
        a = E.getExtension("WEBGL_compressed_texture_s3tc") || E.getExtension("MOZ_WEBGL_compressed_texture_s3tc") || E.getExtension("WEBKIT_WEBGL_compressed_texture_s3tc");
        break;
      case "WEBGL_compressed_texture_pvrtc":
        a = E.getExtension("WEBGL_compressed_texture_pvrtc") || E.getExtension("WEBKIT_WEBGL_compressed_texture_pvrtc");
        break;
      default:
        a = E.getExtension(o);
    }
    return t[o] = a, a;
  }
  return { has: function(o) {
    return e(o) !== null;
  }, init: function(o) {
    o.isWebGL2 ? e("EXT_color_buffer_float") : (e("WEBGL_depth_texture"), e("OES_texture_float"), e("OES_texture_half_float"), e("OES_texture_half_float_linear"), e("OES_standard_derivatives"), e("OES_element_index_uint"), e("OES_vertex_array_object"), e("ANGLE_instanced_arrays")), e("OES_texture_float_linear"), e("EXT_color_buffer_half_float"), e("WEBGL_multisampled_render_to_texture");
  }, get: function(o) {
    const a = e(o);
    return a === null && console.warn("THREE.WebGLRenderer: " + o + " extension not supported."), a;
  } };
}
function t0(E, t, e, o) {
  const a = {}, l = /* @__PURE__ */ new WeakMap();
  function s(p) {
    const g = p.target;
    g.index !== null && t.remove(g.index);
    for (const h in g.attributes) t.remove(g.attributes[h]);
    g.removeEventListener("dispose", s), delete a[g.id];
    const b = l.get(g);
    b && (t.remove(b), l.delete(g)), o.releaseStatesOfGeometry(g), g.isInstancedBufferGeometry === true && delete g._maxInstanceCount, e.memory.geometries--;
  }
  function i(p, g) {
    return a[g.id] === true || (g.addEventListener("dispose", s), a[g.id] = true, e.memory.geometries++), g;
  }
  function u(p) {
    const g = p.attributes;
    for (const h in g) t.update(g[h], 34962);
    const b = p.morphAttributes;
    for (const h in b) {
      const m = b[h];
      for (let c = 0, w = m.length; c < w; c++) t.update(m[c], 34962);
    }
  }
  function d(p) {
    const g = [], b = p.index, h = p.attributes.position;
    let m = 0;
    if (b !== null) {
      const T = b.array;
      m = b.version;
      for (let P = 0, k = T.length; P < k; P += 3) {
        const R = T[P + 0], F = T[P + 1], v = T[P + 2];
        g.push(R, F, F, v, v, R);
      }
    } else {
      const T = h.array;
      m = h.version;
      for (let P = 0, k = T.length / 3 - 1; P < k; P += 3) {
        const R = P + 0, F = P + 1, v = P + 2;
        g.push(R, F, F, v, v, R);
      }
    }
    const c = new (Td(g) ? Bd : Md)(g, 1);
    c.version = m;
    const w = l.get(p);
    w && t.remove(w), l.set(p, c);
  }
  function f(p) {
    const g = l.get(p);
    if (g) {
      const b = p.index;
      b !== null && g.version < b.version && d(p);
    } else d(p);
    return l.get(p);
  }
  return { get: i, update: u, getWireframeAttribute: f };
}
function e0(E, t, e, o) {
  const a = o.isWebGL2;
  let l;
  function s(g) {
    l = g;
  }
  let i, u;
  function d(g) {
    i = g.type, u = g.bytesPerElement;
  }
  function f(g, b) {
    E.drawElements(l, b, i, g * u), e.update(b, l, 1);
  }
  function p(g, b, h) {
    if (h === 0) return;
    let m, c;
    if (a) m = E, c = "drawElementsInstanced";
    else if (m = t.get("ANGLE_instanced_arrays"), c = "drawElementsInstancedANGLE", m === null) {
      console.error("THREE.WebGLIndexedBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.");
      return;
    }
    m[c](l, b, i, g * u, h), e.update(b, l, h);
  }
  this.setMode = s, this.setIndex = d, this.render = f, this.renderInstances = p;
}
function r0(E) {
  const t = { geometries: 0, textures: 0 }, e = { frame: 0, calls: 0, triangles: 0, points: 0, lines: 0 };
  function o(l, s, i) {
    switch (e.calls++, s) {
      case 4:
        e.triangles += i * (l / 3);
        break;
      case 1:
        e.lines += i * (l / 2);
        break;
      case 3:
        e.lines += i * (l - 1);
        break;
      case 2:
        e.lines += i * l;
        break;
      case 0:
        e.points += i * l;
        break;
      default:
        console.error("THREE.WebGLInfo: Unknown draw mode:", s);
        break;
    }
  }
  function a() {
    e.frame++, e.calls = 0, e.triangles = 0, e.points = 0, e.lines = 0;
  }
  return { memory: t, render: e, programs: null, autoReset: true, reset: a, update: o };
}
function n0(E, t) {
  return E[0] - t[0];
}
function o0(E, t) {
  return Math.abs(t[1]) - Math.abs(E[1]);
}
function Nf(E, t) {
  let e = 1;
  const o = t.isInterleavedBufferAttribute ? t.data.array : t.array;
  o instanceof Int8Array ? e = 127 : o instanceof Uint8Array ? e = 255 : o instanceof Uint16Array ? e = 65535 : o instanceof Int16Array ? e = 32767 : o instanceof Int32Array ? e = 2147483647 : console.error("THREE.WebGLMorphtargets: Unsupported morph attribute data type: ", o), E.divideScalar(e);
}
function i0(E, t, e) {
  const o = {}, a = new Float32Array(8), l = /* @__PURE__ */ new WeakMap(), s = new Di(), i = [];
  for (let d = 0; d < 8; d++) i[d] = [d, 0];
  function u(d, f, p, g) {
    const b = d.morphTargetInfluences;
    if (t.isWebGL2 === true) {
      const h = f.morphAttributes.position || f.morphAttributes.normal || f.morphAttributes.color, m = h !== void 0 ? h.length : 0;
      let c = l.get(f);
      if (c === void 0 || c.count !== m) {
        let P = function() {
          x.dispose(), l.delete(f), f.removeEventListener("dispose", P);
        };
        c !== void 0 && c.texture.dispose();
        const k = f.morphAttributes.position !== void 0, R = f.morphAttributes.normal !== void 0, F = f.morphAttributes.color !== void 0, v = f.morphAttributes.position || [], U = f.morphAttributes.normal || [], M = f.morphAttributes.color || [];
        let Z = 0;
        k === true && (Z = 1), R === true && (Z = 2), F === true && (Z = 3);
        let D = f.attributes.position.count * Z, V = 1;
        D > t.maxTextureSize && (V = Math.ceil(D / t.maxTextureSize), D = t.maxTextureSize);
        const S = new Float32Array(D * V * 4 * m), x = new Cd(S, D, V, m);
        x.type = 1015, x.needsUpdate = true;
        const B = Z * 4;
        for (let W = 0; W < m; W++) {
          const lt = v[W], pt = U[W], at = M[W], rt = D * V * 4 * W;
          for (let ot = 0; ot < lt.count; ot++) {
            const X = ot * B;
            k === true && (s.fromBufferAttribute(lt, ot), lt.normalized === true && Nf(s, lt), S[rt + X + 0] = s.x, S[rt + X + 1] = s.y, S[rt + X + 2] = s.z, S[rt + X + 3] = 0), R === true && (s.fromBufferAttribute(pt, ot), pt.normalized === true && Nf(s, pt), S[rt + X + 4] = s.x, S[rt + X + 5] = s.y, S[rt + X + 6] = s.z, S[rt + X + 7] = 0), F === true && (s.fromBufferAttribute(at, ot), at.normalized === true && Nf(s, at), S[rt + X + 8] = s.x, S[rt + X + 9] = s.y, S[rt + X + 10] = s.z, S[rt + X + 11] = at.itemSize === 4 ? s.w : 1);
          }
        }
        c = { count: m, texture: x, size: new Zo(D, V) }, l.set(f, c), f.addEventListener("dispose", P);
      }
      let w = 0;
      for (let P = 0; P < b.length; P++) w += b[P];
      const T = f.morphTargetsRelative ? 1 : 1 - w;
      g.getUniforms().setValue(E, "morphTargetBaseInfluence", T), g.getUniforms().setValue(E, "morphTargetInfluences", b), g.getUniforms().setValue(E, "morphTargetsTexture", c.texture, e), g.getUniforms().setValue(E, "morphTargetsTextureSize", c.size);
    } else {
      const h = b === void 0 ? 0 : b.length;
      let m = o[f.id];
      if (m === void 0 || m.length !== h) {
        m = [];
        for (let k = 0; k < h; k++) m[k] = [k, 0];
        o[f.id] = m;
      }
      for (let k = 0; k < h; k++) {
        const R = m[k];
        R[0] = k, R[1] = b[k];
      }
      m.sort(o0);
      for (let k = 0; k < 8; k++) k < h && m[k][1] ? (i[k][0] = m[k][0], i[k][1] = m[k][1]) : (i[k][0] = Number.MAX_SAFE_INTEGER, i[k][1] = 0);
      i.sort(n0);
      const c = f.morphAttributes.position, w = f.morphAttributes.normal;
      let T = 0;
      for (let k = 0; k < 8; k++) {
        const R = i[k], F = R[0], v = R[1];
        F !== Number.MAX_SAFE_INTEGER && v ? (c && f.getAttribute("morphTarget" + k) !== c[F] && f.setAttribute("morphTarget" + k, c[F]), w && f.getAttribute("morphNormal" + k) !== w[F] && f.setAttribute("morphNormal" + k, w[F]), a[k] = v, T += v) : (c && f.hasAttribute("morphTarget" + k) === true && f.deleteAttribute("morphTarget" + k), w && f.hasAttribute("morphNormal" + k) === true && f.deleteAttribute("morphNormal" + k), a[k] = 0);
      }
      const P = f.morphTargetsRelative ? 1 : 1 - T;
      g.getUniforms().setValue(E, "morphTargetBaseInfluence", P), g.getUniforms().setValue(E, "morphTargetInfluences", a);
    }
  }
  return { update: u };
}
function a0(E, t, e, o) {
  let a = /* @__PURE__ */ new WeakMap();
  function l(u) {
    const d = o.render.frame, f = u.geometry, p = t.get(u, f);
    return a.get(p) !== d && (t.update(p), a.set(p, d)), u.isInstancedMesh && (u.hasEventListener("dispose", i) === false && u.addEventListener("dispose", i), e.update(u.instanceMatrix, 34962), u.instanceColor !== null && e.update(u.instanceColor, 34962)), p;
  }
  function s() {
    a = /* @__PURE__ */ new WeakMap();
  }
  function i(u) {
    const d = u.target;
    d.removeEventListener("dispose", i), e.remove(d.instanceMatrix), d.instanceColor !== null && e.remove(d.instanceColor);
  }
  return { update: l, dispose: s };
}
const Fd = new ca(), Ud = new Cd(), jd = new Xm(), Vd = new Nd(), wh = [], Sh = [], xh = new Float32Array(16), _h = new Float32Array(9), Eh = new Float32Array(4);
function Nu(E, t, e) {
  const o = E[0];
  if (o <= 0 || o > 0) return E;
  const a = t * e;
  let l = wh[a];
  if (l === void 0 && (l = new Float32Array(a), wh[a] = l), t !== 0) {
    o.toArray(l, 0);
    for (let s = 1, i = 0; s !== t; ++s) i += e, E[s].toArray(l, i);
  }
  return l;
}
function Qi(E, t) {
  if (E.length !== t.length) return false;
  for (let e = 0, o = E.length; e < o; e++) if (E[e] !== t[e]) return false;
  return true;
}
function Ji(E, t) {
  for (let e = 0, o = t.length; e < o; e++) E[e] = t[e];
}
function $l(E, t) {
  let e = Sh[t];
  e === void 0 && (e = new Int32Array(t), Sh[t] = e);
  for (let o = 0; o !== t; ++o) e[o] = E.allocateTextureUnit();
  return e;
}
function s0(E, t) {
  const e = this.cache;
  e[0] !== t && (E.uniform1f(this.addr, t), e[0] = t);
}
function u0(E, t) {
  const e = this.cache;
  if (t.x !== void 0) (e[0] !== t.x || e[1] !== t.y) && (E.uniform2f(this.addr, t.x, t.y), e[0] = t.x, e[1] = t.y);
  else {
    if (Qi(e, t)) return;
    E.uniform2fv(this.addr, t), Ji(e, t);
  }
}
function c0(E, t) {
  const e = this.cache;
  if (t.x !== void 0) (e[0] !== t.x || e[1] !== t.y || e[2] !== t.z) && (E.uniform3f(this.addr, t.x, t.y, t.z), e[0] = t.x, e[1] = t.y, e[2] = t.z);
  else if (t.r !== void 0) (e[0] !== t.r || e[1] !== t.g || e[2] !== t.b) && (E.uniform3f(this.addr, t.r, t.g, t.b), e[0] = t.r, e[1] = t.g, e[2] = t.b);
  else {
    if (Qi(e, t)) return;
    E.uniform3fv(this.addr, t), Ji(e, t);
  }
}
function l0(E, t) {
  const e = this.cache;
  if (t.x !== void 0) (e[0] !== t.x || e[1] !== t.y || e[2] !== t.z || e[3] !== t.w) && (E.uniform4f(this.addr, t.x, t.y, t.z, t.w), e[0] = t.x, e[1] = t.y, e[2] = t.z, e[3] = t.w);
  else {
    if (Qi(e, t)) return;
    E.uniform4fv(this.addr, t), Ji(e, t);
  }
}
function f0(E, t) {
  const e = this.cache, o = t.elements;
  if (o === void 0) {
    if (Qi(e, t)) return;
    E.uniformMatrix2fv(this.addr, false, t), Ji(e, t);
  } else {
    if (Qi(e, o)) return;
    Eh.set(o), E.uniformMatrix2fv(this.addr, false, Eh), Ji(e, o);
  }
}
function p0(E, t) {
  const e = this.cache, o = t.elements;
  if (o === void 0) {
    if (Qi(e, t)) return;
    E.uniformMatrix3fv(this.addr, false, t), Ji(e, t);
  } else {
    if (Qi(e, o)) return;
    _h.set(o), E.uniformMatrix3fv(this.addr, false, _h), Ji(e, o);
  }
}
function h0(E, t) {
  const e = this.cache, o = t.elements;
  if (o === void 0) {
    if (Qi(e, t)) return;
    E.uniformMatrix4fv(this.addr, false, t), Ji(e, t);
  } else {
    if (Qi(e, o)) return;
    xh.set(o), E.uniformMatrix4fv(this.addr, false, xh), Ji(e, o);
  }
}
function d0(E, t) {
  const e = this.cache;
  e[0] !== t && (E.uniform1i(this.addr, t), e[0] = t);
}
function m0(E, t) {
  const e = this.cache;
  Qi(e, t) || (E.uniform2iv(this.addr, t), Ji(e, t));
}
function y0(E, t) {
  const e = this.cache;
  Qi(e, t) || (E.uniform3iv(this.addr, t), Ji(e, t));
}
function g0(E, t) {
  const e = this.cache;
  Qi(e, t) || (E.uniform4iv(this.addr, t), Ji(e, t));
}
function v0(E, t) {
  const e = this.cache;
  e[0] !== t && (E.uniform1ui(this.addr, t), e[0] = t);
}
function b0(E, t) {
  const e = this.cache;
  Qi(e, t) || (E.uniform2uiv(this.addr, t), Ji(e, t));
}
function w0(E, t) {
  const e = this.cache;
  Qi(e, t) || (E.uniform3uiv(this.addr, t), Ji(e, t));
}
function S0(E, t) {
  const e = this.cache;
  Qi(e, t) || (E.uniform4uiv(this.addr, t), Ji(e, t));
}
function x0(E, t, e) {
  const o = this.cache, a = e.allocateTextureUnit();
  o[0] !== a && (E.uniform1i(this.addr, a), o[0] = a), e.setTexture2D(t || Fd, a);
}
function _0(E, t, e) {
  const o = this.cache, a = e.allocateTextureUnit();
  o[0] !== a && (E.uniform1i(this.addr, a), o[0] = a), e.setTexture3D(t || jd, a);
}
function E0(E, t, e) {
  const o = this.cache, a = e.allocateTextureUnit();
  o[0] !== a && (E.uniform1i(this.addr, a), o[0] = a), e.setTextureCube(t || Vd, a);
}
function A0(E, t, e) {
  const o = this.cache, a = e.allocateTextureUnit();
  o[0] !== a && (E.uniform1i(this.addr, a), o[0] = a), e.setTexture2DArray(t || Ud, a);
}
function T0(E) {
  switch (E) {
    case 5126:
      return s0;
    case 35664:
      return u0;
    case 35665:
      return c0;
    case 35666:
      return l0;
    case 35674:
      return f0;
    case 35675:
      return p0;
    case 35676:
      return h0;
    case 5124:
    case 35670:
      return d0;
    case 35667:
    case 35671:
      return m0;
    case 35668:
    case 35672:
      return y0;
    case 35669:
    case 35673:
      return g0;
    case 5125:
      return v0;
    case 36294:
      return b0;
    case 36295:
      return w0;
    case 36296:
      return S0;
    case 35678:
    case 36198:
    case 36298:
    case 36306:
    case 35682:
      return x0;
    case 35679:
    case 36299:
    case 36307:
      return _0;
    case 35680:
    case 36300:
    case 36308:
    case 36293:
      return E0;
    case 36289:
    case 36303:
    case 36311:
    case 36292:
      return A0;
  }
}
function k0(E, t) {
  E.uniform1fv(this.addr, t);
}
function O0(E, t) {
  const e = Nu(t, this.size, 2);
  E.uniform2fv(this.addr, e);
}
function P0(E, t) {
  const e = Nu(t, this.size, 3);
  E.uniform3fv(this.addr, e);
}
function C0(E, t) {
  const e = Nu(t, this.size, 4);
  E.uniform4fv(this.addr, e);
}
function R0(E, t) {
  const e = Nu(t, this.size, 4);
  E.uniformMatrix2fv(this.addr, false, e);
}
function I0(E, t) {
  const e = Nu(t, this.size, 9);
  E.uniformMatrix3fv(this.addr, false, e);
}
function M0(E, t) {
  const e = Nu(t, this.size, 16);
  E.uniformMatrix4fv(this.addr, false, e);
}
function B0(E, t) {
  E.uniform1iv(this.addr, t);
}
function L0(E, t) {
  E.uniform2iv(this.addr, t);
}
function N0(E, t) {
  E.uniform3iv(this.addr, t);
}
function D0(E, t) {
  E.uniform4iv(this.addr, t);
}
function F0(E, t) {
  E.uniform1uiv(this.addr, t);
}
function U0(E, t) {
  E.uniform2uiv(this.addr, t);
}
function j0(E, t) {
  E.uniform3uiv(this.addr, t);
}
function V0(E, t) {
  E.uniform4uiv(this.addr, t);
}
function z0(E, t, e) {
  const o = t.length, a = $l(e, o);
  E.uniform1iv(this.addr, a);
  for (let l = 0; l !== o; ++l) e.setTexture2D(t[l] || Fd, a[l]);
}
function q0(E, t, e) {
  const o = t.length, a = $l(e, o);
  E.uniform1iv(this.addr, a);
  for (let l = 0; l !== o; ++l) e.setTexture3D(t[l] || jd, a[l]);
}
function H0(E, t, e) {
  const o = t.length, a = $l(e, o);
  E.uniform1iv(this.addr, a);
  for (let l = 0; l !== o; ++l) e.setTextureCube(t[l] || Vd, a[l]);
}
function G0(E, t, e) {
  const o = t.length, a = $l(e, o);
  E.uniform1iv(this.addr, a);
  for (let l = 0; l !== o; ++l) e.setTexture2DArray(t[l] || Ud, a[l]);
}
function W0(E) {
  switch (E) {
    case 5126:
      return k0;
    case 35664:
      return O0;
    case 35665:
      return P0;
    case 35666:
      return C0;
    case 35674:
      return R0;
    case 35675:
      return I0;
    case 35676:
      return M0;
    case 5124:
    case 35670:
      return B0;
    case 35667:
    case 35671:
      return L0;
    case 35668:
    case 35672:
      return N0;
    case 35669:
    case 35673:
      return D0;
    case 5125:
      return F0;
    case 36294:
      return U0;
    case 36295:
      return j0;
    case 36296:
      return V0;
    case 35678:
    case 36198:
    case 36298:
    case 36306:
    case 35682:
      return z0;
    case 35679:
    case 36299:
    case 36307:
      return q0;
    case 35680:
    case 36300:
    case 36308:
    case 36293:
      return H0;
    case 36289:
    case 36303:
    case 36311:
    case 36292:
      return G0;
  }
}
class X0 {
  constructor(t, e, o) {
    this.id = t, this.addr = o, this.cache = [], this.setValue = T0(e.type);
  }
}
class K0 {
  constructor(t, e, o) {
    this.id = t, this.addr = o, this.cache = [], this.size = e.size, this.setValue = W0(e.type);
  }
}
class $0 {
  constructor(t) {
    this.id = t, this.seq = [], this.map = {};
  }
  setValue(t, e, o) {
    const a = this.seq;
    for (let l = 0, s = a.length; l !== s; ++l) {
      const i = a[l];
      i.setValue(t, e[i.id], o);
    }
  }
}
const Df = /(\w+)(\])?(\[|\.)?/g;
function Ah(E, t) {
  E.seq.push(t), E.map[t.id] = t;
}
function Y0(E, t, e) {
  const o = E.name, a = o.length;
  for (Df.lastIndex = 0; ; ) {
    const l = Df.exec(o), s = Df.lastIndex;
    let i = l[1];
    const u = l[2] === "]", d = l[3];
    if (u && (i = i | 0), d === void 0 || d === "[" && s + 2 === a) {
      Ah(e, d === void 0 ? new X0(i, E, t) : new K0(i, E, t));
      break;
    } else {
      let f = e.map[i];
      f === void 0 && (f = new $0(i), Ah(e, f)), e = f;
    }
  }
}
class Ll {
  constructor(t, e) {
    this.seq = [], this.map = {};
    const o = t.getProgramParameter(e, 35718);
    for (let a = 0; a < o; ++a) {
      const l = t.getActiveUniform(e, a), s = t.getUniformLocation(e, l.name);
      Y0(l, s, this);
    }
  }
  setValue(t, e, o, a) {
    const l = this.map[e];
    l !== void 0 && l.setValue(t, o, a);
  }
  setOptional(t, e, o) {
    const a = e[o];
    a !== void 0 && this.setValue(t, o, a);
  }
  static upload(t, e, o, a) {
    for (let l = 0, s = e.length; l !== s; ++l) {
      const i = e[l], u = o[i.id];
      u.needsUpdate !== false && i.setValue(t, u.value, a);
    }
  }
  static seqWithValue(t, e) {
    const o = [];
    for (let a = 0, l = t.length; a !== l; ++a) {
      const s = t[a];
      s.id in e && o.push(s);
    }
    return o;
  }
}
function Th(E, t, e) {
  const o = E.createShader(t);
  return E.shaderSource(o, e), E.compileShader(o), o;
}
let Z0 = 0;
function Q0(E, t) {
  const e = E.split(`
`), o = [], a = Math.max(t - 6, 0), l = Math.min(t + 6, e.length);
  for (let s = a; s < l; s++) {
    const i = s + 1;
    o.push(`${i === t ? ">" : " "} ${i}: ${e[s]}`);
  }
  return o.join(`
`);
}
function J0(E) {
  switch (E) {
    case 3e3:
      return ["Linear", "( value )"];
    case 3001:
      return ["sRGB", "( value )"];
    default:
      return console.warn("THREE.WebGLProgram: Unsupported encoding:", E), ["Linear", "( value )"];
  }
}
function kh(E, t, e) {
  const o = E.getShaderParameter(t, 35713), a = E.getShaderInfoLog(t).trim();
  if (o && a === "") return "";
  const l = /ERROR: 0:(\d+)/.exec(a);
  if (l) {
    const s = parseInt(l[1]);
    return e.toUpperCase() + `

` + a + `

` + Q0(E.getShaderSource(t), s);
  } else return a;
}
function tb(E, t) {
  const e = J0(t);
  return "vec4 " + E + "( vec4 value ) { return LinearTo" + e[0] + e[1] + "; }";
}
function eb(E, t) {
  let e;
  switch (t) {
    case 1:
      e = "Linear";
      break;
    case 2:
      e = "Reinhard";
      break;
    case 3:
      e = "OptimizedCineon";
      break;
    case 4:
      e = "ACESFilmic";
      break;
    case 5:
      e = "Custom";
      break;
    default:
      console.warn("THREE.WebGLProgram: Unsupported toneMapping:", t), e = "Linear";
  }
  return "vec3 " + E + "( vec3 color ) { return " + e + "ToneMapping( color ); }";
}
function rb(E) {
  return [E.extensionDerivatives || E.envMapCubeUVHeight || E.bumpMap || E.tangentSpaceNormalMap || E.clearcoatNormalMap || E.flatShading || E.shaderID === "physical" ? "#extension GL_OES_standard_derivatives : enable" : "", (E.extensionFragDepth || E.logarithmicDepthBuffer) && E.rendererExtensionFragDepth ? "#extension GL_EXT_frag_depth : enable" : "", E.extensionDrawBuffers && E.rendererExtensionDrawBuffers ? "#extension GL_EXT_draw_buffers : require" : "", (E.extensionShaderTextureLOD || E.envMap || E.transmission) && E.rendererExtensionShaderTextureLod ? "#extension GL_EXT_shader_texture_lod : enable" : ""].filter(wc).join(`
`);
}
function nb(E) {
  const t = [];
  for (const e in E) {
    const o = E[e];
    o !== false && t.push("#define " + e + " " + o);
  }
  return t.join(`
`);
}
function ob(E, t) {
  const e = {}, o = E.getProgramParameter(t, 35721);
  for (let a = 0; a < o; a++) {
    const l = E.getActiveAttrib(t, a), s = l.name;
    let i = 1;
    l.type === 35674 && (i = 2), l.type === 35675 && (i = 3), l.type === 35676 && (i = 4), e[s] = { type: l.type, location: E.getAttribLocation(t, s), locationSize: i };
  }
  return e;
}
function wc(E) {
  return E !== "";
}
function Oh(E, t) {
  return E.replace(/NUM_DIR_LIGHTS/g, t.numDirLights).replace(/NUM_SPOT_LIGHTS/g, t.numSpotLights).replace(/NUM_RECT_AREA_LIGHTS/g, t.numRectAreaLights).replace(/NUM_POINT_LIGHTS/g, t.numPointLights).replace(/NUM_HEMI_LIGHTS/g, t.numHemiLights).replace(/NUM_DIR_LIGHT_SHADOWS/g, t.numDirLightShadows).replace(/NUM_SPOT_LIGHT_SHADOWS/g, t.numSpotLightShadows).replace(/NUM_POINT_LIGHT_SHADOWS/g, t.numPointLightShadows);
}
function Ph(E, t) {
  return E.replace(/NUM_CLIPPING_PLANES/g, t.numClippingPlanes).replace(/UNION_CLIPPING_PLANES/g, t.numClippingPlanes - t.numClipIntersection);
}
const ib = /^[ \t]*#include +<([\w\d./]+)>/gm;
function tp(E) {
  return E.replace(ib, ab);
}
function ab(E, t) {
  const e = Go[t];
  if (e === void 0) throw new Error("Can not resolve #include <" + t + ">");
  return tp(e);
}
const sb = /#pragma unroll_loop[\s]+?for \( int i \= (\d+)\; i < (\d+)\; i \+\+ \) \{([\s\S]+?)(?=\})\}/g, ub = /#pragma unroll_loop_start\s+for\s*\(\s*int\s+i\s*=\s*(\d+)\s*;\s*i\s*<\s*(\d+)\s*;\s*i\s*\+\+\s*\)\s*{([\s\S]+?)}\s+#pragma unroll_loop_end/g;
function Ch(E) {
  return E.replace(ub, zd).replace(sb, cb);
}
function cb(E, t, e, o) {
  return console.warn("WebGLProgram: #pragma unroll_loop shader syntax is deprecated. Please use #pragma unroll_loop_start syntax instead."), zd(E, t, e, o);
}
function zd(E, t, e, o) {
  let a = "";
  for (let l = parseInt(t); l < parseInt(e); l++) a += o.replace(/\[\s*i\s*\]/g, "[ " + l + " ]").replace(/UNROLLED_LOOP_INDEX/g, l);
  return a;
}
function Rh(E) {
  let t = "precision " + E.precision + ` float;
precision ` + E.precision + " int;";
  return E.precision === "highp" ? t += `
#define HIGH_PRECISION` : E.precision === "mediump" ? t += `
#define MEDIUM_PRECISION` : E.precision === "lowp" && (t += `
#define LOW_PRECISION`), t;
}
function lb(E) {
  let t = "SHADOWMAP_TYPE_BASIC";
  return E.shadowMapType === 1 ? t = "SHADOWMAP_TYPE_PCF" : E.shadowMapType === 2 ? t = "SHADOWMAP_TYPE_PCF_SOFT" : E.shadowMapType === 3 && (t = "SHADOWMAP_TYPE_VSM"), t;
}
function fb(E) {
  let t = "ENVMAP_TYPE_CUBE";
  if (E.envMap) switch (E.envMapMode) {
    case 301:
    case 302:
      t = "ENVMAP_TYPE_CUBE";
      break;
    case 306:
      t = "ENVMAP_TYPE_CUBE_UV";
      break;
  }
  return t;
}
function pb(E) {
  let t = "ENVMAP_MODE_REFLECTION";
  if (E.envMap) switch (E.envMapMode) {
    case 302:
      t = "ENVMAP_MODE_REFRACTION";
      break;
  }
  return t;
}
function hb(E) {
  let t = "ENVMAP_BLENDING_NONE";
  if (E.envMap) switch (E.combine) {
    case 0:
      t = "ENVMAP_BLENDING_MULTIPLY";
      break;
    case 1:
      t = "ENVMAP_BLENDING_MIX";
      break;
    case 2:
      t = "ENVMAP_BLENDING_ADD";
      break;
  }
  return t;
}
function db(E) {
  const t = E.envMapCubeUVHeight;
  if (t === null) return null;
  const e = Math.log2(t) - 2, o = 1 / t;
  return { texelWidth: 1 / (3 * Math.max(Math.pow(2, e), 7 * 16)), texelHeight: o, maxMip: e };
}
function mb(E, t, e, o) {
  const a = E.getContext(), l = e.defines;
  let s = e.vertexShader, i = e.fragmentShader;
  const u = lb(e), d = fb(e), f = pb(e), p = hb(e), g = db(e), b = e.isWebGL2 ? "" : rb(e), h = nb(l), m = a.createProgram();
  let c, w, T = e.glslVersion ? "#version " + e.glslVersion + `
` : "";
  e.isRawShaderMaterial ? (c = [h].filter(wc).join(`
`), c.length > 0 && (c += `
`), w = [b, h].filter(wc).join(`
`), w.length > 0 && (w += `
`)) : (c = [Rh(e), "#define SHADER_NAME " + e.shaderName, h, e.instancing ? "#define USE_INSTANCING" : "", e.instancingColor ? "#define USE_INSTANCING_COLOR" : "", e.supportsVertexTextures ? "#define VERTEX_TEXTURES" : "", e.useFog && e.fog ? "#define USE_FOG" : "", e.useFog && e.fogExp2 ? "#define FOG_EXP2" : "", e.map ? "#define USE_MAP" : "", e.envMap ? "#define USE_ENVMAP" : "", e.envMap ? "#define " + f : "", e.lightMap ? "#define USE_LIGHTMAP" : "", e.aoMap ? "#define USE_AOMAP" : "", e.emissiveMap ? "#define USE_EMISSIVEMAP" : "", e.bumpMap ? "#define USE_BUMPMAP" : "", e.normalMap ? "#define USE_NORMALMAP" : "", e.normalMap && e.objectSpaceNormalMap ? "#define OBJECTSPACE_NORMALMAP" : "", e.normalMap && e.tangentSpaceNormalMap ? "#define TANGENTSPACE_NORMALMAP" : "", e.clearcoatMap ? "#define USE_CLEARCOATMAP" : "", e.clearcoatRoughnessMap ? "#define USE_CLEARCOAT_ROUGHNESSMAP" : "", e.clearcoatNormalMap ? "#define USE_CLEARCOAT_NORMALMAP" : "", e.iridescenceMap ? "#define USE_IRIDESCENCEMAP" : "", e.iridescenceThicknessMap ? "#define USE_IRIDESCENCE_THICKNESSMAP" : "", e.displacementMap && e.supportsVertexTextures ? "#define USE_DISPLACEMENTMAP" : "", e.specularMap ? "#define USE_SPECULARMAP" : "", e.specularIntensityMap ? "#define USE_SPECULARINTENSITYMAP" : "", e.specularColorMap ? "#define USE_SPECULARCOLORMAP" : "", e.roughnessMap ? "#define USE_ROUGHNESSMAP" : "", e.metalnessMap ? "#define USE_METALNESSMAP" : "", e.alphaMap ? "#define USE_ALPHAMAP" : "", e.transmission ? "#define USE_TRANSMISSION" : "", e.transmissionMap ? "#define USE_TRANSMISSIONMAP" : "", e.thicknessMap ? "#define USE_THICKNESSMAP" : "", e.sheenColorMap ? "#define USE_SHEENCOLORMAP" : "", e.sheenRoughnessMap ? "#define USE_SHEENROUGHNESSMAP" : "", e.vertexTangents ? "#define USE_TANGENT" : "", e.vertexColors ? "#define USE_COLOR" : "", e.vertexAlphas ? "#define USE_COLOR_ALPHA" : "", e.vertexUvs ? "#define USE_UV" : "", e.uvsVertexOnly ? "#define UVS_VERTEX_ONLY" : "", e.flatShading ? "#define FLAT_SHADED" : "", e.skinning ? "#define USE_SKINNING" : "", e.morphTargets ? "#define USE_MORPHTARGETS" : "", e.morphNormals && e.flatShading === false ? "#define USE_MORPHNORMALS" : "", e.morphColors && e.isWebGL2 ? "#define USE_MORPHCOLORS" : "", e.morphTargetsCount > 0 && e.isWebGL2 ? "#define MORPHTARGETS_TEXTURE" : "", e.morphTargetsCount > 0 && e.isWebGL2 ? "#define MORPHTARGETS_TEXTURE_STRIDE " + e.morphTextureStride : "", e.morphTargetsCount > 0 && e.isWebGL2 ? "#define MORPHTARGETS_COUNT " + e.morphTargetsCount : "", e.doubleSided ? "#define DOUBLE_SIDED" : "", e.flipSided ? "#define FLIP_SIDED" : "", e.shadowMapEnabled ? "#define USE_SHADOWMAP" : "", e.shadowMapEnabled ? "#define " + u : "", e.sizeAttenuation ? "#define USE_SIZEATTENUATION" : "", e.logarithmicDepthBuffer ? "#define USE_LOGDEPTHBUF" : "", e.logarithmicDepthBuffer && e.rendererExtensionFragDepth ? "#define USE_LOGDEPTHBUF_EXT" : "", "uniform mat4 modelMatrix;", "uniform mat4 modelViewMatrix;", "uniform mat4 projectionMatrix;", "uniform mat4 viewMatrix;", "uniform mat3 normalMatrix;", "uniform vec3 cameraPosition;", "uniform bool isOrthographic;", "#ifdef USE_INSTANCING", "	attribute mat4 instanceMatrix;", "#endif", "#ifdef USE_INSTANCING_COLOR", "	attribute vec3 instanceColor;", "#endif", "attribute vec3 position;", "attribute vec3 normal;", "attribute vec2 uv;", "#ifdef USE_TANGENT", "	attribute vec4 tangent;", "#endif", "#if defined( USE_COLOR_ALPHA )", "	attribute vec4 color;", "#elif defined( USE_COLOR )", "	attribute vec3 color;", "#endif", "#if ( defined( USE_MORPHTARGETS ) && ! defined( MORPHTARGETS_TEXTURE ) )", "	attribute vec3 morphTarget0;", "	attribute vec3 morphTarget1;", "	attribute vec3 morphTarget2;", "	attribute vec3 morphTarget3;", "	#ifdef USE_MORPHNORMALS", "		attribute vec3 morphNormal0;", "		attribute vec3 morphNormal1;", "		attribute vec3 morphNormal2;", "		attribute vec3 morphNormal3;", "	#else", "		attribute vec3 morphTarget4;", "		attribute vec3 morphTarget5;", "		attribute vec3 morphTarget6;", "		attribute vec3 morphTarget7;", "	#endif", "#endif", "#ifdef USE_SKINNING", "	attribute vec4 skinIndex;", "	attribute vec4 skinWeight;", "#endif", `
`].filter(wc).join(`
`), w = [b, Rh(e), "#define SHADER_NAME " + e.shaderName, h, e.useFog && e.fog ? "#define USE_FOG" : "", e.useFog && e.fogExp2 ? "#define FOG_EXP2" : "", e.map ? "#define USE_MAP" : "", e.matcap ? "#define USE_MATCAP" : "", e.envMap ? "#define USE_ENVMAP" : "", e.envMap ? "#define " + d : "", e.envMap ? "#define " + f : "", e.envMap ? "#define " + p : "", g ? "#define CUBEUV_TEXEL_WIDTH " + g.texelWidth : "", g ? "#define CUBEUV_TEXEL_HEIGHT " + g.texelHeight : "", g ? "#define CUBEUV_MAX_MIP " + g.maxMip + ".0" : "", e.lightMap ? "#define USE_LIGHTMAP" : "", e.aoMap ? "#define USE_AOMAP" : "", e.emissiveMap ? "#define USE_EMISSIVEMAP" : "", e.bumpMap ? "#define USE_BUMPMAP" : "", e.normalMap ? "#define USE_NORMALMAP" : "", e.normalMap && e.objectSpaceNormalMap ? "#define OBJECTSPACE_NORMALMAP" : "", e.normalMap && e.tangentSpaceNormalMap ? "#define TANGENTSPACE_NORMALMAP" : "", e.clearcoat ? "#define USE_CLEARCOAT" : "", e.clearcoatMap ? "#define USE_CLEARCOATMAP" : "", e.clearcoatRoughnessMap ? "#define USE_CLEARCOAT_ROUGHNESSMAP" : "", e.clearcoatNormalMap ? "#define USE_CLEARCOAT_NORMALMAP" : "", e.iridescence ? "#define USE_IRIDESCENCE" : "", e.iridescenceMap ? "#define USE_IRIDESCENCEMAP" : "", e.iridescenceThicknessMap ? "#define USE_IRIDESCENCE_THICKNESSMAP" : "", e.specularMap ? "#define USE_SPECULARMAP" : "", e.specularIntensityMap ? "#define USE_SPECULARINTENSITYMAP" : "", e.specularColorMap ? "#define USE_SPECULARCOLORMAP" : "", e.roughnessMap ? "#define USE_ROUGHNESSMAP" : "", e.metalnessMap ? "#define USE_METALNESSMAP" : "", e.alphaMap ? "#define USE_ALPHAMAP" : "", e.alphaTest ? "#define USE_ALPHATEST" : "", e.sheen ? "#define USE_SHEEN" : "", e.sheenColorMap ? "#define USE_SHEENCOLORMAP" : "", e.sheenRoughnessMap ? "#define USE_SHEENROUGHNESSMAP" : "", e.transmission ? "#define USE_TRANSMISSION" : "", e.transmissionMap ? "#define USE_TRANSMISSIONMAP" : "", e.thicknessMap ? "#define USE_THICKNESSMAP" : "", e.decodeVideoTexture ? "#define DECODE_VIDEO_TEXTURE" : "", e.vertexTangents ? "#define USE_TANGENT" : "", e.vertexColors || e.instancingColor ? "#define USE_COLOR" : "", e.vertexAlphas ? "#define USE_COLOR_ALPHA" : "", e.vertexUvs ? "#define USE_UV" : "", e.uvsVertexOnly ? "#define UVS_VERTEX_ONLY" : "", e.gradientMap ? "#define USE_GRADIENTMAP" : "", e.flatShading ? "#define FLAT_SHADED" : "", e.doubleSided ? "#define DOUBLE_SIDED" : "", e.flipSided ? "#define FLIP_SIDED" : "", e.shadowMapEnabled ? "#define USE_SHADOWMAP" : "", e.shadowMapEnabled ? "#define " + u : "", e.premultipliedAlpha ? "#define PREMULTIPLIED_ALPHA" : "", e.physicallyCorrectLights ? "#define PHYSICALLY_CORRECT_LIGHTS" : "", e.logarithmicDepthBuffer ? "#define USE_LOGDEPTHBUF" : "", e.logarithmicDepthBuffer && e.rendererExtensionFragDepth ? "#define USE_LOGDEPTHBUF_EXT" : "", "uniform mat4 viewMatrix;", "uniform vec3 cameraPosition;", "uniform bool isOrthographic;", e.toneMapping !== 0 ? "#define TONE_MAPPING" : "", e.toneMapping !== 0 ? Go.tonemapping_pars_fragment : "", e.toneMapping !== 0 ? eb("toneMapping", e.toneMapping) : "", e.dithering ? "#define DITHERING" : "", e.opaque ? "#define OPAQUE" : "", Go.encodings_pars_fragment, tb("linearToOutputTexel", e.outputEncoding), e.useDepthPacking ? "#define DEPTH_PACKING " + e.depthPacking : "", `
`].filter(wc).join(`
`)), s = tp(s), s = Oh(s, e), s = Ph(s, e), i = tp(i), i = Oh(i, e), i = Ph(i, e), s = Ch(s), i = Ch(i), e.isWebGL2 && e.isRawShaderMaterial !== true && (T = `#version 300 es
`, c = ["precision mediump sampler2DArray;", "#define attribute in", "#define varying out", "#define texture2D texture"].join(`
`) + `
` + c, w = ["#define varying in", e.glslVersion === th ? "" : "layout(location = 0) out highp vec4 pc_fragColor;", e.glslVersion === th ? "" : "#define gl_FragColor pc_fragColor", "#define gl_FragDepthEXT gl_FragDepth", "#define texture2D texture", "#define textureCube texture", "#define texture2DProj textureProj", "#define texture2DLodEXT textureLod", "#define texture2DProjLodEXT textureProjLod", "#define textureCubeLodEXT textureLod", "#define texture2DGradEXT textureGrad", "#define texture2DProjGradEXT textureProjGrad", "#define textureCubeGradEXT textureGrad"].join(`
`) + `
` + w);
  const P = T + c + s, k = T + w + i, R = Th(a, 35633, P), F = Th(a, 35632, k);
  if (a.attachShader(m, R), a.attachShader(m, F), e.index0AttributeName !== void 0 ? a.bindAttribLocation(m, 0, e.index0AttributeName) : e.morphTargets === true && a.bindAttribLocation(m, 0, "position"), a.linkProgram(m), E.debug.checkShaderErrors) {
    const M = a.getProgramInfoLog(m).trim(), Z = a.getShaderInfoLog(R).trim(), D = a.getShaderInfoLog(F).trim();
    let V = true, S = true;
    if (a.getProgramParameter(m, 35714) === false) {
      V = false;
      const x = kh(a, R, "vertex"), B = kh(a, F, "fragment");
      console.error("THREE.WebGLProgram: Shader Error " + a.getError() + " - VALIDATE_STATUS " + a.getProgramParameter(m, 35715) + `

Program Info Log: ` + M + `
` + x + `
` + B);
    } else M !== "" ? console.warn("THREE.WebGLProgram: Program Info Log:", M) : (Z === "" || D === "") && (S = false);
    S && (this.diagnostics = { runnable: V, programLog: M, vertexShader: { log: Z, prefix: c }, fragmentShader: { log: D, prefix: w } });
  }
  a.deleteShader(R), a.deleteShader(F);
  let v;
  this.getUniforms = function() {
    return v === void 0 && (v = new Ll(a, m)), v;
  };
  let U;
  return this.getAttributes = function() {
    return U === void 0 && (U = ob(a, m)), U;
  }, this.destroy = function() {
    o.releaseStatesOfProgram(this), a.deleteProgram(m), this.program = void 0;
  }, this.name = e.shaderName, this.id = Z0++, this.cacheKey = t, this.usedTimes = 1, this.program = m, this.vertexShader = R, this.fragmentShader = F, this;
}
let yb = 0;
class gb {
  constructor() {
    this.shaderCache = /* @__PURE__ */ new Map(), this.materialCache = /* @__PURE__ */ new Map();
  }
  update(t) {
    const e = t.vertexShader, o = t.fragmentShader, a = this._getShaderStage(e), l = this._getShaderStage(o), s = this._getShaderCacheForMaterial(t);
    return s.has(a) === false && (s.add(a), a.usedTimes++), s.has(l) === false && (s.add(l), l.usedTimes++), this;
  }
  remove(t) {
    const e = this.materialCache.get(t);
    for (const o of e) o.usedTimes--, o.usedTimes === 0 && this.shaderCache.delete(o.code);
    return this.materialCache.delete(t), this;
  }
  getVertexShaderID(t) {
    return this._getShaderStage(t.vertexShader).id;
  }
  getFragmentShaderID(t) {
    return this._getShaderStage(t.fragmentShader).id;
  }
  dispose() {
    this.shaderCache.clear(), this.materialCache.clear();
  }
  _getShaderCacheForMaterial(t) {
    const e = this.materialCache;
    return e.has(t) === false && e.set(t, /* @__PURE__ */ new Set()), e.get(t);
  }
  _getShaderStage(t) {
    const e = this.shaderCache;
    if (e.has(t) === false) {
      const o = new vb(t);
      e.set(t, o);
    }
    return e.get(t);
  }
}
class vb {
  constructor(t) {
    this.id = yb++, this.code = t, this.usedTimes = 0;
  }
}
function bb(E, t, e, o, a, l, s) {
  const i = new Rd(), u = new gb(), d = [], f = a.isWebGL2, p = a.logarithmicDepthBuffer, g = a.vertexTextures;
  let b = a.precision;
  const h = { MeshDepthMaterial: "depth", MeshDistanceMaterial: "distanceRGBA", MeshNormalMaterial: "normal", MeshBasicMaterial: "basic", MeshLambertMaterial: "lambert", MeshPhongMaterial: "phong", MeshToonMaterial: "toon", MeshStandardMaterial: "physical", MeshPhysicalMaterial: "physical", MeshMatcapMaterial: "matcap", LineBasicMaterial: "basic", LineDashedMaterial: "dashed", PointsMaterial: "points", ShadowMaterial: "shadow", SpriteMaterial: "sprite" };
  function m(U, M, Z, D, V) {
    const S = D.fog, x = V.geometry, B = U.isMeshStandardMaterial ? D.environment : null, W = (U.isMeshStandardMaterial ? e : t).get(U.envMap || B), lt = W && W.mapping === 306 ? W.image.height : null, pt = h[U.type];
    U.precision !== null && (b = a.getMaxPrecision(U.precision), b !== U.precision && console.warn("THREE.WebGLProgram.getParameters:", U.precision, "not supported, using", b, "instead."));
    const at = x.morphAttributes.position || x.morphAttributes.normal || x.morphAttributes.color, rt = at !== void 0 ? at.length : 0;
    let ot = 0;
    x.morphAttributes.position !== void 0 && (ot = 1), x.morphAttributes.normal !== void 0 && (ot = 2), x.morphAttributes.color !== void 0 && (ot = 3);
    let X, I, nt, ft;
    if (pt) {
      const mt = Na[pt];
      X = mt.vertexShader, I = mt.fragmentShader;
    } else X = U.vertexShader, I = U.fragmentShader, u.update(U), nt = u.getVertexShaderID(U), ft = u.getFragmentShaderID(U);
    const dt = E.getRenderTarget(), Lt = U.alphaTest > 0, $ = U.clearcoat > 0, it = U.iridescence > 0;
    return { isWebGL2: f, shaderID: pt, shaderName: U.type, vertexShader: X, fragmentShader: I, defines: U.defines, customVertexShaderID: nt, customFragmentShaderID: ft, isRawShaderMaterial: U.isRawShaderMaterial === true, glslVersion: U.glslVersion, precision: b, instancing: V.isInstancedMesh === true, instancingColor: V.isInstancedMesh === true && V.instanceColor !== null, supportsVertexTextures: g, outputEncoding: dt === null ? E.outputEncoding : dt.isXRRenderTarget === true ? dt.texture.encoding : 3e3, map: !!U.map, matcap: !!U.matcap, envMap: !!W, envMapMode: W && W.mapping, envMapCubeUVHeight: lt, lightMap: !!U.lightMap, aoMap: !!U.aoMap, emissiveMap: !!U.emissiveMap, bumpMap: !!U.bumpMap, normalMap: !!U.normalMap, objectSpaceNormalMap: U.normalMapType === 1, tangentSpaceNormalMap: U.normalMapType === 0, decodeVideoTexture: !!U.map && U.map.isVideoTexture === true && U.map.encoding === 3001, clearcoat: $, clearcoatMap: $ && !!U.clearcoatMap, clearcoatRoughnessMap: $ && !!U.clearcoatRoughnessMap, clearcoatNormalMap: $ && !!U.clearcoatNormalMap, iridescence: it, iridescenceMap: it && !!U.iridescenceMap, iridescenceThicknessMap: it && !!U.iridescenceThicknessMap, displacementMap: !!U.displacementMap, roughnessMap: !!U.roughnessMap, metalnessMap: !!U.metalnessMap, specularMap: !!U.specularMap, specularIntensityMap: !!U.specularIntensityMap, specularColorMap: !!U.specularColorMap, opaque: U.transparent === false && U.blending === 1, alphaMap: !!U.alphaMap, alphaTest: Lt, gradientMap: !!U.gradientMap, sheen: U.sheen > 0, sheenColorMap: !!U.sheenColorMap, sheenRoughnessMap: !!U.sheenRoughnessMap, transmission: U.transmission > 0, transmissionMap: !!U.transmissionMap, thicknessMap: !!U.thicknessMap, combine: U.combine, vertexTangents: !!U.normalMap && !!x.attributes.tangent, vertexColors: U.vertexColors, vertexAlphas: U.vertexColors === true && !!x.attributes.color && x.attributes.color.itemSize === 4, vertexUvs: !!U.map || !!U.bumpMap || !!U.normalMap || !!U.specularMap || !!U.alphaMap || !!U.emissiveMap || !!U.roughnessMap || !!U.metalnessMap || !!U.clearcoatMap || !!U.clearcoatRoughnessMap || !!U.clearcoatNormalMap || !!U.iridescenceMap || !!U.iridescenceThicknessMap || !!U.displacementMap || !!U.transmissionMap || !!U.thicknessMap || !!U.specularIntensityMap || !!U.specularColorMap || !!U.sheenColorMap || !!U.sheenRoughnessMap, uvsVertexOnly: !(U.map || U.bumpMap || U.normalMap || U.specularMap || U.alphaMap || U.emissiveMap || U.roughnessMap || U.metalnessMap || U.clearcoatNormalMap || U.iridescenceMap || U.iridescenceThicknessMap || U.transmission > 0 || U.transmissionMap || U.thicknessMap || U.specularIntensityMap || U.specularColorMap || U.sheen > 0 || U.sheenColorMap || U.sheenRoughnessMap) && !!U.displacementMap, fog: !!S, useFog: U.fog === true, fogExp2: S && S.isFogExp2, flatShading: !!U.flatShading, sizeAttenuation: U.sizeAttenuation, logarithmicDepthBuffer: p, skinning: V.isSkinnedMesh === true, morphTargets: x.morphAttributes.position !== void 0, morphNormals: x.morphAttributes.normal !== void 0, morphColors: x.morphAttributes.color !== void 0, morphTargetsCount: rt, morphTextureStride: ot, numDirLights: M.directional.length, numPointLights: M.point.length, numSpotLights: M.spot.length, numRectAreaLights: M.rectArea.length, numHemiLights: M.hemi.length, numDirLightShadows: M.directionalShadowMap.length, numPointLightShadows: M.pointShadowMap.length, numSpotLightShadows: M.spotShadowMap.length, numClippingPlanes: s.numPlanes, numClipIntersection: s.numIntersection, dithering: U.dithering, shadowMapEnabled: E.shadowMap.enabled && Z.length > 0, shadowMapType: E.shadowMap.type, toneMapping: U.toneMapped ? E.toneMapping : 0, physicallyCorrectLights: E.physicallyCorrectLights, premultipliedAlpha: U.premultipliedAlpha, doubleSided: U.side === 2, flipSided: U.side === 1, useDepthPacking: !!U.depthPacking, depthPacking: U.depthPacking || 0, index0AttributeName: U.index0AttributeName, extensionDerivatives: U.extensions && U.extensions.derivatives, extensionFragDepth: U.extensions && U.extensions.fragDepth, extensionDrawBuffers: U.extensions && U.extensions.drawBuffers, extensionShaderTextureLOD: U.extensions && U.extensions.shaderTextureLOD, rendererExtensionFragDepth: f || o.has("EXT_frag_depth"), rendererExtensionDrawBuffers: f || o.has("WEBGL_draw_buffers"), rendererExtensionShaderTextureLod: f || o.has("EXT_shader_texture_lod"), customProgramCacheKey: U.customProgramCacheKey() };
  }
  function c(U) {
    const M = [];
    if (U.shaderID ? M.push(U.shaderID) : (M.push(U.customVertexShaderID), M.push(U.customFragmentShaderID)), U.defines !== void 0) for (const Z in U.defines) M.push(Z), M.push(U.defines[Z]);
    return U.isRawShaderMaterial === false && (w(M, U), T(M, U), M.push(E.outputEncoding)), M.push(U.customProgramCacheKey), M.join();
  }
  function w(U, M) {
    U.push(M.precision), U.push(M.outputEncoding), U.push(M.envMapMode), U.push(M.envMapCubeUVHeight), U.push(M.combine), U.push(M.vertexUvs), U.push(M.fogExp2), U.push(M.sizeAttenuation), U.push(M.morphTargetsCount), U.push(M.morphAttributeCount), U.push(M.numDirLights), U.push(M.numPointLights), U.push(M.numSpotLights), U.push(M.numHemiLights), U.push(M.numRectAreaLights), U.push(M.numDirLightShadows), U.push(M.numPointLightShadows), U.push(M.numSpotLightShadows), U.push(M.shadowMapType), U.push(M.toneMapping), U.push(M.numClippingPlanes), U.push(M.numClipIntersection), U.push(M.depthPacking);
  }
  function T(U, M) {
    i.disableAll(), M.isWebGL2 && i.enable(0), M.supportsVertexTextures && i.enable(1), M.instancing && i.enable(2), M.instancingColor && i.enable(3), M.map && i.enable(4), M.matcap && i.enable(5), M.envMap && i.enable(6), M.lightMap && i.enable(7), M.aoMap && i.enable(8), M.emissiveMap && i.enable(9), M.bumpMap && i.enable(10), M.normalMap && i.enable(11), M.objectSpaceNormalMap && i.enable(12), M.tangentSpaceNormalMap && i.enable(13), M.clearcoat && i.enable(14), M.clearcoatMap && i.enable(15), M.clearcoatRoughnessMap && i.enable(16), M.clearcoatNormalMap && i.enable(17), M.iridescence && i.enable(18), M.iridescenceMap && i.enable(19), M.iridescenceThicknessMap && i.enable(20), M.displacementMap && i.enable(21), M.specularMap && i.enable(22), M.roughnessMap && i.enable(23), M.metalnessMap && i.enable(24), M.gradientMap && i.enable(25), M.alphaMap && i.enable(26), M.alphaTest && i.enable(27), M.vertexColors && i.enable(28), M.vertexAlphas && i.enable(29), M.vertexUvs && i.enable(30), M.vertexTangents && i.enable(31), M.uvsVertexOnly && i.enable(32), M.fog && i.enable(33), U.push(i.mask), i.disableAll(), M.useFog && i.enable(0), M.flatShading && i.enable(1), M.logarithmicDepthBuffer && i.enable(2), M.skinning && i.enable(3), M.morphTargets && i.enable(4), M.morphNormals && i.enable(5), M.morphColors && i.enable(6), M.premultipliedAlpha && i.enable(7), M.shadowMapEnabled && i.enable(8), M.physicallyCorrectLights && i.enable(9), M.doubleSided && i.enable(10), M.flipSided && i.enable(11), M.useDepthPacking && i.enable(12), M.dithering && i.enable(13), M.specularIntensityMap && i.enable(14), M.specularColorMap && i.enable(15), M.transmission && i.enable(16), M.transmissionMap && i.enable(17), M.thicknessMap && i.enable(18), M.sheen && i.enable(19), M.sheenColorMap && i.enable(20), M.sheenRoughnessMap && i.enable(21), M.decodeVideoTexture && i.enable(22), M.opaque && i.enable(23), U.push(i.mask);
  }
  function P(U) {
    const M = h[U.type];
    let Z;
    if (M) {
      const D = Na[M];
      Z = ay.clone(D.uniforms);
    } else Z = U.uniforms;
    return Z;
  }
  function k(U, M) {
    let Z;
    for (let D = 0, V = d.length; D < V; D++) {
      const S = d[D];
      if (S.cacheKey === M) {
        Z = S, ++Z.usedTimes;
        break;
      }
    }
    return Z === void 0 && (Z = new mb(E, M, U, l), d.push(Z)), Z;
  }
  function R(U) {
    if (--U.usedTimes === 0) {
      const M = d.indexOf(U);
      d[M] = d[d.length - 1], d.pop(), U.destroy();
    }
  }
  function F(U) {
    u.remove(U);
  }
  function v() {
    u.dispose();
  }
  return { getParameters: m, getProgramCacheKey: c, getUniforms: P, acquireProgram: k, releaseProgram: R, releaseShaderCache: F, programs: d, dispose: v };
}
function wb() {
  let E = /* @__PURE__ */ new WeakMap();
  function t(l) {
    let s = E.get(l);
    return s === void 0 && (s = {}, E.set(l, s)), s;
  }
  function e(l) {
    E.delete(l);
  }
  function o(l, s, i) {
    E.get(l)[s] = i;
  }
  function a() {
    E = /* @__PURE__ */ new WeakMap();
  }
  return { get: t, remove: e, update: o, dispose: a };
}
function Sb(E, t) {
  return E.groupOrder !== t.groupOrder ? E.groupOrder - t.groupOrder : E.renderOrder !== t.renderOrder ? E.renderOrder - t.renderOrder : E.material.id !== t.material.id ? E.material.id - t.material.id : E.z !== t.z ? E.z - t.z : E.id - t.id;
}
function Ih(E, t) {
  return E.groupOrder !== t.groupOrder ? E.groupOrder - t.groupOrder : E.renderOrder !== t.renderOrder ? E.renderOrder - t.renderOrder : E.z !== t.z ? t.z - E.z : E.id - t.id;
}
function Mh() {
  const E = [];
  let t = 0;
  const e = [], o = [], a = [];
  function l() {
    t = 0, e.length = 0, o.length = 0, a.length = 0;
  }
  function s(p, g, b, h, m, c) {
    let w = E[t];
    return w === void 0 ? (w = { id: p.id, object: p, geometry: g, material: b, groupOrder: h, renderOrder: p.renderOrder, z: m, group: c }, E[t] = w) : (w.id = p.id, w.object = p, w.geometry = g, w.material = b, w.groupOrder = h, w.renderOrder = p.renderOrder, w.z = m, w.group = c), t++, w;
  }
  function i(p, g, b, h, m, c) {
    const w = s(p, g, b, h, m, c);
    b.transmission > 0 ? o.push(w) : b.transparent === true ? a.push(w) : e.push(w);
  }
  function u(p, g, b, h, m, c) {
    const w = s(p, g, b, h, m, c);
    b.transmission > 0 ? o.unshift(w) : b.transparent === true ? a.unshift(w) : e.unshift(w);
  }
  function d(p, g) {
    e.length > 1 && e.sort(p || Sb), o.length > 1 && o.sort(g || Ih), a.length > 1 && a.sort(g || Ih);
  }
  function f() {
    for (let p = t, g = E.length; p < g; p++) {
      const b = E[p];
      if (b.id === null) break;
      b.id = null, b.object = null, b.geometry = null, b.material = null, b.group = null;
    }
  }
  return { opaque: e, transmissive: o, transparent: a, init: l, push: i, unshift: u, finish: f, sort: d };
}
function xb() {
  let E = /* @__PURE__ */ new WeakMap();
  function t(o, a) {
    let l;
    return E.has(o) === false ? (l = new Mh(), E.set(o, [l])) : a >= E.get(o).length ? (l = new Mh(), E.get(o).push(l)) : l = E.get(o)[a], l;
  }
  function e() {
    E = /* @__PURE__ */ new WeakMap();
  }
  return { get: t, dispose: e };
}
function _b() {
  const E = {};
  return { get: function(t) {
    if (E[t.id] !== void 0) return E[t.id];
    let e;
    switch (t.type) {
      case "DirectionalLight":
        e = { direction: new Br(), color: new Yo() };
        break;
      case "SpotLight":
        e = { position: new Br(), direction: new Br(), color: new Yo(), distance: 0, coneCos: 0, penumbraCos: 0, decay: 0 };
        break;
      case "PointLight":
        e = { position: new Br(), color: new Yo(), distance: 0, decay: 0 };
        break;
      case "HemisphereLight":
        e = { direction: new Br(), skyColor: new Yo(), groundColor: new Yo() };
        break;
      case "RectAreaLight":
        e = { color: new Yo(), position: new Br(), halfWidth: new Br(), halfHeight: new Br() };
        break;
    }
    return E[t.id] = e, e;
  } };
}
function Eb() {
  const E = {};
  return { get: function(t) {
    if (E[t.id] !== void 0) return E[t.id];
    let e;
    switch (t.type) {
      case "DirectionalLight":
        e = { shadowBias: 0, shadowNormalBias: 0, shadowRadius: 1, shadowMapSize: new Zo() };
        break;
      case "SpotLight":
        e = { shadowBias: 0, shadowNormalBias: 0, shadowRadius: 1, shadowMapSize: new Zo() };
        break;
      case "PointLight":
        e = { shadowBias: 0, shadowNormalBias: 0, shadowRadius: 1, shadowMapSize: new Zo(), shadowCameraNear: 1, shadowCameraFar: 1e3 };
        break;
    }
    return E[t.id] = e, e;
  } };
}
let Ab = 0;
function Tb(E, t) {
  return (t.castShadow ? 1 : 0) - (E.castShadow ? 1 : 0);
}
function kb(E, t) {
  const e = new _b(), o = Eb(), a = { version: 0, hash: { directionalLength: -1, pointLength: -1, spotLength: -1, rectAreaLength: -1, hemiLength: -1, numDirectionalShadows: -1, numPointShadows: -1, numSpotShadows: -1 }, ambient: [0, 0, 0], probe: [], directional: [], directionalShadow: [], directionalShadowMap: [], directionalShadowMatrix: [], spot: [], spotShadow: [], spotShadowMap: [], spotShadowMatrix: [], rectArea: [], rectAreaLTC1: null, rectAreaLTC2: null, point: [], pointShadow: [], pointShadowMap: [], pointShadowMatrix: [], hemi: [] };
  for (let f = 0; f < 9; f++) a.probe.push(new Br());
  const l = new Br(), s = new Fi(), i = new Fi();
  function u(f, p) {
    let g = 0, b = 0, h = 0;
    for (let M = 0; M < 9; M++) a.probe[M].set(0, 0, 0);
    let m = 0, c = 0, w = 0, T = 0, P = 0, k = 0, R = 0, F = 0;
    f.sort(Tb);
    const v = p !== true ? Math.PI : 1;
    for (let M = 0, Z = f.length; M < Z; M++) {
      const D = f[M], V = D.color, S = D.intensity, x = D.distance, B = D.shadow && D.shadow.map ? D.shadow.map.texture : null;
      if (D.isAmbientLight) g += V.r * S * v, b += V.g * S * v, h += V.b * S * v;
      else if (D.isLightProbe) for (let W = 0; W < 9; W++) a.probe[W].addScaledVector(D.sh.coefficients[W], S);
      else if (D.isDirectionalLight) {
        const W = e.get(D);
        if (W.color.copy(D.color).multiplyScalar(D.intensity * v), D.castShadow) {
          const lt = D.shadow, pt = o.get(D);
          pt.shadowBias = lt.bias, pt.shadowNormalBias = lt.normalBias, pt.shadowRadius = lt.radius, pt.shadowMapSize = lt.mapSize, a.directionalShadow[m] = pt, a.directionalShadowMap[m] = B, a.directionalShadowMatrix[m] = D.shadow.matrix, k++;
        }
        a.directional[m] = W, m++;
      } else if (D.isSpotLight) {
        const W = e.get(D);
        if (W.position.setFromMatrixPosition(D.matrixWorld), W.color.copy(V).multiplyScalar(S * v), W.distance = x, W.coneCos = Math.cos(D.angle), W.penumbraCos = Math.cos(D.angle * (1 - D.penumbra)), W.decay = D.decay, D.castShadow) {
          const lt = D.shadow, pt = o.get(D);
          pt.shadowBias = lt.bias, pt.shadowNormalBias = lt.normalBias, pt.shadowRadius = lt.radius, pt.shadowMapSize = lt.mapSize, a.spotShadow[w] = pt, a.spotShadowMap[w] = B, a.spotShadowMatrix[w] = D.shadow.matrix, F++;
        }
        a.spot[w] = W, w++;
      } else if (D.isRectAreaLight) {
        const W = e.get(D);
        W.color.copy(V).multiplyScalar(S), W.halfWidth.set(D.width * 0.5, 0, 0), W.halfHeight.set(0, D.height * 0.5, 0), a.rectArea[T] = W, T++;
      } else if (D.isPointLight) {
        const W = e.get(D);
        if (W.color.copy(D.color).multiplyScalar(D.intensity * v), W.distance = D.distance, W.decay = D.decay, D.castShadow) {
          const lt = D.shadow, pt = o.get(D);
          pt.shadowBias = lt.bias, pt.shadowNormalBias = lt.normalBias, pt.shadowRadius = lt.radius, pt.shadowMapSize = lt.mapSize, pt.shadowCameraNear = lt.camera.near, pt.shadowCameraFar = lt.camera.far, a.pointShadow[c] = pt, a.pointShadowMap[c] = B, a.pointShadowMatrix[c] = D.shadow.matrix, R++;
        }
        a.point[c] = W, c++;
      } else if (D.isHemisphereLight) {
        const W = e.get(D);
        W.skyColor.copy(D.color).multiplyScalar(S * v), W.groundColor.copy(D.groundColor).multiplyScalar(S * v), a.hemi[P] = W, P++;
      }
    }
    T > 0 && (t.isWebGL2 || E.has("OES_texture_float_linear") === true ? (a.rectAreaLTC1 = Wn.LTC_FLOAT_1, a.rectAreaLTC2 = Wn.LTC_FLOAT_2) : E.has("OES_texture_half_float_linear") === true ? (a.rectAreaLTC1 = Wn.LTC_HALF_1, a.rectAreaLTC2 = Wn.LTC_HALF_2) : console.error("THREE.WebGLRenderer: Unable to use RectAreaLight. Missing WebGL extensions.")), a.ambient[0] = g, a.ambient[1] = b, a.ambient[2] = h;
    const U = a.hash;
    (U.directionalLength !== m || U.pointLength !== c || U.spotLength !== w || U.rectAreaLength !== T || U.hemiLength !== P || U.numDirectionalShadows !== k || U.numPointShadows !== R || U.numSpotShadows !== F) && (a.directional.length = m, a.spot.length = w, a.rectArea.length = T, a.point.length = c, a.hemi.length = P, a.directionalShadow.length = k, a.directionalShadowMap.length = k, a.pointShadow.length = R, a.pointShadowMap.length = R, a.spotShadow.length = F, a.spotShadowMap.length = F, a.directionalShadowMatrix.length = k, a.pointShadowMatrix.length = R, a.spotShadowMatrix.length = F, U.directionalLength = m, U.pointLength = c, U.spotLength = w, U.rectAreaLength = T, U.hemiLength = P, U.numDirectionalShadows = k, U.numPointShadows = R, U.numSpotShadows = F, a.version = Ab++);
  }
  function d(f, p) {
    let g = 0, b = 0, h = 0, m = 0, c = 0;
    const w = p.matrixWorldInverse;
    for (let T = 0, P = f.length; T < P; T++) {
      const k = f[T];
      if (k.isDirectionalLight) {
        const R = a.directional[g];
        R.direction.setFromMatrixPosition(k.matrixWorld), l.setFromMatrixPosition(k.target.matrixWorld), R.direction.sub(l), R.direction.transformDirection(w), g++;
      } else if (k.isSpotLight) {
        const R = a.spot[h];
        R.position.setFromMatrixPosition(k.matrixWorld), R.position.applyMatrix4(w), R.direction.setFromMatrixPosition(k.matrixWorld), l.setFromMatrixPosition(k.target.matrixWorld), R.direction.sub(l), R.direction.transformDirection(w), h++;
      } else if (k.isRectAreaLight) {
        const R = a.rectArea[m];
        R.position.setFromMatrixPosition(k.matrixWorld), R.position.applyMatrix4(w), i.identity(), s.copy(k.matrixWorld), s.premultiply(w), i.extractRotation(s), R.halfWidth.set(k.width * 0.5, 0, 0), R.halfHeight.set(0, k.height * 0.5, 0), R.halfWidth.applyMatrix4(i), R.halfHeight.applyMatrix4(i), m++;
      } else if (k.isPointLight) {
        const R = a.point[b];
        R.position.setFromMatrixPosition(k.matrixWorld), R.position.applyMatrix4(w), b++;
      } else if (k.isHemisphereLight) {
        const R = a.hemi[c];
        R.direction.setFromMatrixPosition(k.matrixWorld), R.direction.transformDirection(w), c++;
      }
    }
  }
  return { setup: u, setupView: d, state: a };
}
function Bh(E, t) {
  const e = new kb(E, t), o = [], a = [];
  function l() {
    o.length = 0, a.length = 0;
  }
  function s(f) {
    o.push(f);
  }
  function i(f) {
    a.push(f);
  }
  function u(f) {
    e.setup(o, f);
  }
  function d(f) {
    e.setupView(o, f);
  }
  return { init: l, state: { lightsArray: o, shadowsArray: a, lights: e }, setupLights: u, setupLightsView: d, pushLight: s, pushShadow: i };
}
function Ob(E, t) {
  let e = /* @__PURE__ */ new WeakMap();
  function o(l, s = 0) {
    let i;
    return e.has(l) === false ? (i = new Bh(E, t), e.set(l, [i])) : s >= e.get(l).length ? (i = new Bh(E, t), e.get(l).push(i)) : i = e.get(l)[s], i;
  }
  function a() {
    e = /* @__PURE__ */ new WeakMap();
  }
  return { get: o, dispose: a };
}
class Pb extends tu {
  constructor(t) {
    super(), this.isMeshDepthMaterial = true, this.type = "MeshDepthMaterial", this.depthPacking = 3200, this.map = null, this.alphaMap = null, this.displacementMap = null, this.displacementScale = 1, this.displacementBias = 0, this.wireframe = false, this.wireframeLinewidth = 1, this.setValues(t);
  }
  copy(t) {
    return super.copy(t), this.depthPacking = t.depthPacking, this.map = t.map, this.alphaMap = t.alphaMap, this.displacementMap = t.displacementMap, this.displacementScale = t.displacementScale, this.displacementBias = t.displacementBias, this.wireframe = t.wireframe, this.wireframeLinewidth = t.wireframeLinewidth, this;
  }
}
class Cb extends tu {
  constructor(t) {
    super(), this.isMeshDistanceMaterial = true, this.type = "MeshDistanceMaterial", this.referencePosition = new Br(), this.nearDistance = 1, this.farDistance = 1e3, this.map = null, this.alphaMap = null, this.displacementMap = null, this.displacementScale = 1, this.displacementBias = 0, this.setValues(t);
  }
  copy(t) {
    return super.copy(t), this.referencePosition.copy(t.referencePosition), this.nearDistance = t.nearDistance, this.farDistance = t.farDistance, this.map = t.map, this.alphaMap = t.alphaMap, this.displacementMap = t.displacementMap, this.displacementScale = t.displacementScale, this.displacementBias = t.displacementBias, this;
  }
}
const Rb = `void main() {
	gl_Position = vec4( position, 1.0 );
}`, Ib = `uniform sampler2D shadow_pass;
uniform vec2 resolution;
uniform float radius;
#include <packing>
void main() {
	const float samples = float( VSM_SAMPLES );
	float mean = 0.0;
	float squared_mean = 0.0;
	float uvStride = samples <= 1.0 ? 0.0 : 2.0 / ( samples - 1.0 );
	float uvStart = samples <= 1.0 ? 0.0 : - 1.0;
	for ( float i = 0.0; i < samples; i ++ ) {
		float uvOffset = uvStart + i * uvStride;
		#ifdef HORIZONTAL_PASS
			vec2 distribution = unpackRGBATo2Half( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( uvOffset, 0.0 ) * radius ) / resolution ) );
			mean += distribution.x;
			squared_mean += distribution.y * distribution.y + distribution.x * distribution.x;
		#else
			float depth = unpackRGBAToDepth( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( 0.0, uvOffset ) * radius ) / resolution ) );
			mean += depth;
			squared_mean += depth * depth;
		#endif
	}
	mean = mean / samples;
	squared_mean = squared_mean / samples;
	float std_dev = sqrt( squared_mean - mean * mean );
	gl_FragColor = pack2HalfToRGBA( vec2( mean, std_dev ) );
}`;
function Mb(E, t, e) {
  let o = new hp();
  const a = new Zo(), l = new Zo(), s = new Di(), i = new Pb({ depthPacking: 3201 }), u = new Cb(), d = {}, f = e.maxTextureSize, p = { 0: 1, 1: 0, 2: 2 }, g = new Js({ defines: { VSM_SAMPLES: 8 }, uniforms: { shadow_pass: { value: null }, resolution: { value: new Zo() }, radius: { value: 4 } }, vertexShader: Rb, fragmentShader: Ib }), b = g.clone();
  b.defines.HORIZONTAL_PASS = 1;
  const h = new ja();
  h.setAttribute("position", new Ua(new Float32Array([-1, -1, 0.5, 3, -1, 0.5, -1, 3, 0.5]), 3));
  const m = new Fa(h, g), c = this;
  this.enabled = false, this.autoUpdate = true, this.needsUpdate = false, this.type = 1, this.render = function(k, R, F) {
    if (c.enabled === false || c.autoUpdate === false && c.needsUpdate === false || k.length === 0) return;
    const v = E.getRenderTarget(), U = E.getActiveCubeFace(), M = E.getActiveMipmapLevel(), Z = E.state;
    Z.setBlending(0), Z.buffers.color.setClear(1, 1, 1, 1), Z.buffers.depth.setTest(true), Z.setScissorTest(false);
    for (let D = 0, V = k.length; D < V; D++) {
      const S = k[D], x = S.shadow;
      if (x === void 0) {
        console.warn("THREE.WebGLShadowMap:", S, "has no shadow.");
        continue;
      }
      if (x.autoUpdate === false && x.needsUpdate === false) continue;
      a.copy(x.mapSize);
      const B = x.getFrameExtents();
      if (a.multiply(B), l.copy(x.mapSize), (a.x > f || a.y > f) && (a.x > f && (l.x = Math.floor(f / B.x), a.x = l.x * B.x, x.mapSize.x = l.x), a.y > f && (l.y = Math.floor(f / B.y), a.y = l.y * B.y, x.mapSize.y = l.y)), x.map === null) {
        const lt = this.type !== 3 ? { minFilter: 1003, magFilter: 1003 } : {};
        x.map = new Qs(a.x, a.y, lt), x.map.texture.name = S.name + ".shadowMap", x.camera.updateProjectionMatrix();
      }
      E.setRenderTarget(x.map), E.clear();
      const W = x.getViewportCount();
      for (let lt = 0; lt < W; lt++) {
        const pt = x.getViewport(lt);
        s.set(l.x * pt.x, l.y * pt.y, l.x * pt.z, l.y * pt.w), Z.viewport(s), x.updateMatrices(S, lt), o = x.getFrustum(), P(R, F, x.camera, S, this.type);
      }
      x.isPointLightShadow !== true && this.type === 3 && w(x, F), x.needsUpdate = false;
    }
    c.needsUpdate = false, E.setRenderTarget(v, U, M);
  };
  function w(k, R) {
    const F = t.update(m);
    g.defines.VSM_SAMPLES !== k.blurSamples && (g.defines.VSM_SAMPLES = k.blurSamples, b.defines.VSM_SAMPLES = k.blurSamples, g.needsUpdate = true, b.needsUpdate = true), k.mapPass === null && (k.mapPass = new Qs(a.x, a.y)), g.uniforms.shadow_pass.value = k.map.texture, g.uniforms.resolution.value = k.mapSize, g.uniforms.radius.value = k.radius, E.setRenderTarget(k.mapPass), E.clear(), E.renderBufferDirect(R, null, F, g, m, null), b.uniforms.shadow_pass.value = k.mapPass.texture, b.uniforms.resolution.value = k.mapSize, b.uniforms.radius.value = k.radius, E.setRenderTarget(k.map), E.clear(), E.renderBufferDirect(R, null, F, b, m, null);
  }
  function T(k, R, F, v, U, M) {
    let Z = null;
    const D = F.isPointLight === true ? k.customDistanceMaterial : k.customDepthMaterial;
    if (D !== void 0 ? Z = D : Z = F.isPointLight === true ? u : i, E.localClippingEnabled && R.clipShadows === true && Array.isArray(R.clippingPlanes) && R.clippingPlanes.length !== 0 || R.displacementMap && R.displacementScale !== 0 || R.alphaMap && R.alphaTest > 0) {
      const V = Z.uuid, S = R.uuid;
      let x = d[V];
      x === void 0 && (x = {}, d[V] = x);
      let B = x[S];
      B === void 0 && (B = Z.clone(), x[S] = B), Z = B;
    }
    return Z.visible = R.visible, Z.wireframe = R.wireframe, M === 3 ? Z.side = R.shadowSide !== null ? R.shadowSide : R.side : Z.side = R.shadowSide !== null ? R.shadowSide : p[R.side], Z.alphaMap = R.alphaMap, Z.alphaTest = R.alphaTest, Z.clipShadows = R.clipShadows, Z.clippingPlanes = R.clippingPlanes, Z.clipIntersection = R.clipIntersection, Z.displacementMap = R.displacementMap, Z.displacementScale = R.displacementScale, Z.displacementBias = R.displacementBias, Z.wireframeLinewidth = R.wireframeLinewidth, Z.linewidth = R.linewidth, F.isPointLight === true && Z.isMeshDistanceMaterial === true && (Z.referencePosition.setFromMatrixPosition(F.matrixWorld), Z.nearDistance = v, Z.farDistance = U), Z;
  }
  function P(k, R, F, v, U) {
    if (k.visible === false) return;
    if (k.layers.test(R.layers) && (k.isMesh || k.isLine || k.isPoints) && (k.castShadow || k.receiveShadow && U === 3) && (!k.frustumCulled || o.intersectsObject(k))) {
      k.modelViewMatrix.multiplyMatrices(F.matrixWorldInverse, k.matrixWorld);
      const Z = t.update(k), D = k.material;
      if (Array.isArray(D)) {
        const V = Z.groups;
        for (let S = 0, x = V.length; S < x; S++) {
          const B = V[S], W = D[B.materialIndex];
          if (W && W.visible) {
            const lt = T(k, W, v, F.near, F.far, U);
            E.renderBufferDirect(F, null, Z, lt, k, B);
          }
        }
      } else if (D.visible) {
        const V = T(k, D, v, F.near, F.far, U);
        E.renderBufferDirect(F, null, Z, V, k, null);
      }
    }
    const M = k.children;
    for (let Z = 0, D = M.length; Z < D; Z++) P(M[Z], R, F, v, U);
  }
}
function Bb(E, t, e) {
  const o = e.isWebGL2;
  function a() {
    let j = false;
    const ut = new Di();
    let gt = null;
    const $t = new Di(0, 0, 0, 0);
    return { setMask: function(Ht) {
      gt !== Ht && !j && (E.colorMask(Ht, Ht, Ht, Ht), gt = Ht);
    }, setLocked: function(Ht) {
      j = Ht;
    }, setClear: function(Ht, wt, Jt, Ee, cr) {
      cr === true && (Ht *= Ee, wt *= Ee, Jt *= Ee), ut.set(Ht, wt, Jt, Ee), $t.equals(ut) === false && (E.clearColor(Ht, wt, Jt, Ee), $t.copy(ut));
    }, reset: function() {
      j = false, gt = null, $t.set(-1, 0, 0, 0);
    } };
  }
  function l() {
    let j = false, ut = null, gt = null, $t = null;
    return { setTest: function(Ht) {
      Ht ? Lt(2929) : $(2929);
    }, setMask: function(Ht) {
      ut !== Ht && !j && (E.depthMask(Ht), ut = Ht);
    }, setFunc: function(Ht) {
      if (gt !== Ht) {
        if (Ht) switch (Ht) {
          case 0:
            E.depthFunc(512);
            break;
          case 1:
            E.depthFunc(519);
            break;
          case 2:
            E.depthFunc(513);
            break;
          case 3:
            E.depthFunc(515);
            break;
          case 4:
            E.depthFunc(514);
            break;
          case 5:
            E.depthFunc(518);
            break;
          case 6:
            E.depthFunc(516);
            break;
          case 7:
            E.depthFunc(517);
            break;
          default:
            E.depthFunc(515);
        }
        else E.depthFunc(515);
        gt = Ht;
      }
    }, setLocked: function(Ht) {
      j = Ht;
    }, setClear: function(Ht) {
      $t !== Ht && (E.clearDepth(Ht), $t = Ht);
    }, reset: function() {
      j = false, ut = null, gt = null, $t = null;
    } };
  }
  function s() {
    let j = false, ut = null, gt = null, $t = null, Ht = null, wt = null, Jt = null, Ee = null, cr = null;
    return { setTest: function(Lr) {
      j || (Lr ? Lt(2960) : $(2960));
    }, setMask: function(Lr) {
      ut !== Lr && !j && (E.stencilMask(Lr), ut = Lr);
    }, setFunc: function(Lr, on, Zr) {
      (gt !== Lr || $t !== on || Ht !== Zr) && (E.stencilFunc(Lr, on, Zr), gt = Lr, $t = on, Ht = Zr);
    }, setOp: function(Lr, on, Zr) {
      (wt !== Lr || Jt !== on || Ee !== Zr) && (E.stencilOp(Lr, on, Zr), wt = Lr, Jt = on, Ee = Zr);
    }, setLocked: function(Lr) {
      j = Lr;
    }, setClear: function(Lr) {
      cr !== Lr && (E.clearStencil(Lr), cr = Lr);
    }, reset: function() {
      j = false, ut = null, gt = null, $t = null, Ht = null, wt = null, Jt = null, Ee = null, cr = null;
    } };
  }
  const i = new a(), u = new l(), d = new s(), f = /* @__PURE__ */ new WeakMap(), p = /* @__PURE__ */ new WeakMap();
  let g = {}, b = {}, h = /* @__PURE__ */ new WeakMap(), m = [], c = null, w = false, T = null, P = null, k = null, R = null, F = null, v = null, U = null, M = false, Z = null, D = null, V = null, S = null, x = null;
  const B = E.getParameter(35661);
  let W = false, lt = 0;
  const pt = E.getParameter(7938);
  pt.indexOf("WebGL") !== -1 ? (lt = parseFloat(/^WebGL (\d)/.exec(pt)[1]), W = lt >= 1) : pt.indexOf("OpenGL ES") !== -1 && (lt = parseFloat(/^OpenGL ES (\d)/.exec(pt)[1]), W = lt >= 2);
  let at = null, rt = {};
  const ot = E.getParameter(3088), X = E.getParameter(2978), I = new Di().fromArray(ot), nt = new Di().fromArray(X);
  function ft(j, ut, gt) {
    const $t = new Uint8Array(4), Ht = E.createTexture();
    E.bindTexture(j, Ht), E.texParameteri(j, 10241, 9728), E.texParameteri(j, 10240, 9728);
    for (let wt = 0; wt < gt; wt++) E.texImage2D(ut + wt, 0, 6408, 1, 1, 0, 6408, 5121, $t);
    return Ht;
  }
  const dt = {};
  dt[3553] = ft(3553, 3553, 1), dt[34067] = ft(34067, 34069, 6), i.setClear(0, 0, 0, 1), u.setClear(1), d.setClear(0), Lt(2929), u.setFunc(3), Bt(false), At(1), Lt(2884), Ct(0);
  function Lt(j) {
    g[j] !== true && (E.enable(j), g[j] = true);
  }
  function $(j) {
    g[j] !== false && (E.disable(j), g[j] = false);
  }
  function it(j, ut) {
    return b[j] !== ut ? (E.bindFramebuffer(j, ut), b[j] = ut, o && (j === 36009 && (b[36160] = ut), j === 36160 && (b[36009] = ut)), true) : false;
  }
  function mt(j, ut) {
    let gt = m, $t = false;
    if (j) if (gt = h.get(ut), gt === void 0 && (gt = [], h.set(ut, gt)), j.isWebGLMultipleRenderTargets) {
      const Ht = j.texture;
      if (gt.length !== Ht.length || gt[0] !== 36064) {
        for (let wt = 0, Jt = Ht.length; wt < Jt; wt++) gt[wt] = 36064 + wt;
        gt.length = Ht.length, $t = true;
      }
    } else gt[0] !== 36064 && (gt[0] = 36064, $t = true);
    else gt[0] !== 1029 && (gt[0] = 1029, $t = true);
    $t && (e.isWebGL2 ? E.drawBuffers(gt) : t.get("WEBGL_draw_buffers").drawBuffersWEBGL(gt));
  }
  function Ot(j) {
    return c !== j ? (E.useProgram(j), c = j, true) : false;
  }
  const bt = { 100: 32774, 101: 32778, 102: 32779 };
  if (o) bt[103] = 32775, bt[104] = 32776;
  else {
    const j = t.get("EXT_blend_minmax");
    j !== null && (bt[103] = j.MIN_EXT, bt[104] = j.MAX_EXT);
  }
  const xt = { 200: 0, 201: 1, 202: 768, 204: 770, 210: 776, 208: 774, 206: 772, 203: 769, 205: 771, 209: 775, 207: 773 };
  function Ct(j, ut, gt, $t, Ht, wt, Jt, Ee) {
    if (j === 0) {
      w === true && ($(3042), w = false);
      return;
    }
    if (w === false && (Lt(3042), w = true), j !== 5) {
      if (j !== T || Ee !== M) {
        if ((P !== 100 || F !== 100) && (E.blendEquation(32774), P = 100, F = 100), Ee) switch (j) {
          case 1:
            E.blendFuncSeparate(1, 771, 1, 771);
            break;
          case 2:
            E.blendFunc(1, 1);
            break;
          case 3:
            E.blendFuncSeparate(0, 769, 0, 1);
            break;
          case 4:
            E.blendFuncSeparate(0, 768, 0, 770);
            break;
          default:
            console.error("THREE.WebGLState: Invalid blending: ", j);
            break;
        }
        else switch (j) {
          case 1:
            E.blendFuncSeparate(770, 771, 1, 771);
            break;
          case 2:
            E.blendFunc(770, 1);
            break;
          case 3:
            E.blendFuncSeparate(0, 769, 0, 1);
            break;
          case 4:
            E.blendFunc(0, 768);
            break;
          default:
            console.error("THREE.WebGLState: Invalid blending: ", j);
            break;
        }
        k = null, R = null, v = null, U = null, T = j, M = Ee;
      }
      return;
    }
    Ht = Ht || ut, wt = wt || gt, Jt = Jt || $t, (ut !== P || Ht !== F) && (E.blendEquationSeparate(bt[ut], bt[Ht]), P = ut, F = Ht), (gt !== k || $t !== R || wt !== v || Jt !== U) && (E.blendFuncSeparate(xt[gt], xt[$t], xt[wt], xt[Jt]), k = gt, R = $t, v = wt, U = Jt), T = j, M = null;
  }
  function Tt(j, ut) {
    j.side === 2 ? $(2884) : Lt(2884);
    let gt = j.side === 1;
    ut && (gt = !gt), Bt(gt), j.blending === 1 && j.transparent === false ? Ct(0) : Ct(j.blending, j.blendEquation, j.blendSrc, j.blendDst, j.blendEquationAlpha, j.blendSrcAlpha, j.blendDstAlpha, j.premultipliedAlpha), u.setFunc(j.depthFunc), u.setTest(j.depthTest), u.setMask(j.depthWrite), i.setMask(j.colorWrite);
    const $t = j.stencilWrite;
    d.setTest($t), $t && (d.setMask(j.stencilWriteMask), d.setFunc(j.stencilFunc, j.stencilRef, j.stencilFuncMask), d.setOp(j.stencilFail, j.stencilZFail, j.stencilZPass)), Vt(j.polygonOffset, j.polygonOffsetFactor, j.polygonOffsetUnits), j.alphaToCoverage === true ? Lt(32926) : $(32926);
  }
  function Bt(j) {
    Z !== j && (j ? E.frontFace(2304) : E.frontFace(2305), Z = j);
  }
  function At(j) {
    j !== 0 ? (Lt(2884), j !== D && (j === 1 ? E.cullFace(1029) : j === 2 ? E.cullFace(1028) : E.cullFace(1032))) : $(2884), D = j;
  }
  function Ut(j) {
    j !== V && (W && E.lineWidth(j), V = j);
  }
  function Vt(j, ut, gt) {
    j ? (Lt(32823), (S !== ut || x !== gt) && (E.polygonOffset(ut, gt), S = ut, x = gt)) : $(32823);
  }
  function oe(j) {
    j ? Lt(3089) : $(3089);
  }
  function te(j) {
    j === void 0 && (j = 33984 + B - 1), at !== j && (E.activeTexture(j), at = j);
  }
  function yt(j, ut) {
    at === null && te();
    let gt = rt[at];
    gt === void 0 && (gt = { type: void 0, texture: void 0 }, rt[at] = gt), (gt.type !== j || gt.texture !== ut) && (E.bindTexture(j, ut || dt[j]), gt.type = j, gt.texture = ut);
  }
  function Mt() {
    const j = rt[at];
    j !== void 0 && j.type !== void 0 && (E.bindTexture(j.type, null), j.type = void 0, j.texture = void 0);
  }
  function O() {
    try {
      E.compressedTexImage2D.apply(E, arguments);
    } catch (j) {
      console.error("THREE.WebGLState:", j);
    }
  }
  function z() {
    try {
      E.texSubImage2D.apply(E, arguments);
    } catch (j) {
      console.error("THREE.WebGLState:", j);
    }
  }
  function J() {
    try {
      E.texSubImage3D.apply(E, arguments);
    } catch (j) {
      console.error("THREE.WebGLState:", j);
    }
  }
  function tt() {
    try {
      E.compressedTexSubImage2D.apply(E, arguments);
    } catch (j) {
      console.error("THREE.WebGLState:", j);
    }
  }
  function H() {
    try {
      E.texStorage2D.apply(E, arguments);
    } catch (j) {
      console.error("THREE.WebGLState:", j);
    }
  }
  function K() {
    try {
      E.texStorage3D.apply(E, arguments);
    } catch (j) {
      console.error("THREE.WebGLState:", j);
    }
  }
  function q() {
    try {
      E.texImage2D.apply(E, arguments);
    } catch (j) {
      console.error("THREE.WebGLState:", j);
    }
  }
  function _() {
    try {
      E.texImage3D.apply(E, arguments);
    } catch (j) {
      console.error("THREE.WebGLState:", j);
    }
  }
  function L(j) {
    I.equals(j) === false && (E.scissor(j.x, j.y, j.z, j.w), I.copy(j));
  }
  function et(j) {
    nt.equals(j) === false && (E.viewport(j.x, j.y, j.z, j.w), nt.copy(j));
  }
  function St(j, ut) {
    let gt = p.get(ut);
    gt === void 0 && (gt = /* @__PURE__ */ new WeakMap(), p.set(ut, gt));
    let $t = gt.get(j);
    $t === void 0 && ($t = E.getUniformBlockIndex(ut, j.name), gt.set(j, $t));
  }
  function kt(j, ut) {
    const gt = p.get(ut).get(j);
    f.get(j) !== gt && (E.uniformBlockBinding(ut, gt, j.__bindingPointIndex), f.set(j, gt));
  }
  function ct() {
    E.disable(3042), E.disable(2884), E.disable(2929), E.disable(32823), E.disable(3089), E.disable(2960), E.disable(32926), E.blendEquation(32774), E.blendFunc(1, 0), E.blendFuncSeparate(1, 0, 1, 0), E.colorMask(true, true, true, true), E.clearColor(0, 0, 0, 0), E.depthMask(true), E.depthFunc(513), E.clearDepth(1), E.stencilMask(4294967295), E.stencilFunc(519, 0, 4294967295), E.stencilOp(7680, 7680, 7680), E.clearStencil(0), E.cullFace(1029), E.frontFace(2305), E.polygonOffset(0, 0), E.activeTexture(33984), E.bindFramebuffer(36160, null), o === true && (E.bindFramebuffer(36009, null), E.bindFramebuffer(36008, null)), E.useProgram(null), E.lineWidth(1), E.scissor(0, 0, E.canvas.width, E.canvas.height), E.viewport(0, 0, E.canvas.width, E.canvas.height), g = {}, at = null, rt = {}, b = {}, h = /* @__PURE__ */ new WeakMap(), m = [], c = null, w = false, T = null, P = null, k = null, R = null, F = null, v = null, U = null, M = false, Z = null, D = null, V = null, S = null, x = null, I.set(0, 0, E.canvas.width, E.canvas.height), nt.set(0, 0, E.canvas.width, E.canvas.height), i.reset(), u.reset(), d.reset();
  }
  return { buffers: { color: i, depth: u, stencil: d }, enable: Lt, disable: $, bindFramebuffer: it, drawBuffers: mt, useProgram: Ot, setBlending: Ct, setMaterial: Tt, setFlipSided: Bt, setCullFace: At, setLineWidth: Ut, setPolygonOffset: Vt, setScissorTest: oe, activeTexture: te, bindTexture: yt, unbindTexture: Mt, compressedTexImage2D: O, texImage2D: q, texImage3D: _, updateUBOMapping: St, uniformBlockBinding: kt, texStorage2D: H, texStorage3D: K, texSubImage2D: z, texSubImage3D: J, compressedTexSubImage2D: tt, scissor: L, viewport: et, reset: ct };
}
function Lb(E, t, e, o, a, l, s) {
  const i = a.isWebGL2, u = a.maxTextures, d = a.maxCubemapSize, f = a.maxTextureSize, p = a.maxSamples, g = t.has("WEBGL_multisampled_render_to_texture") ? t.get("WEBGL_multisampled_render_to_texture") : null, b = /OculusBrowser/g.test(navigator.userAgent), h = /* @__PURE__ */ new WeakMap();
  let m;
  const c = /* @__PURE__ */ new WeakMap();
  let w = false;
  try {
    w = typeof OffscreenCanvas < "u" && new OffscreenCanvas(1, 1).getContext("2d") !== null;
  } catch {
  }
  function T(yt, Mt) {
    return w ? new OffscreenCanvas(yt, Mt) : ql("canvas");
  }
  function P(yt, Mt, O, z) {
    let J = 1;
    if ((yt.width > z || yt.height > z) && (J = z / Math.max(yt.width, yt.height)), J < 1 || Mt === true) if (typeof HTMLImageElement < "u" && yt instanceof HTMLImageElement || typeof HTMLCanvasElement < "u" && yt instanceof HTMLCanvasElement || typeof ImageBitmap < "u" && yt instanceof ImageBitmap) {
      const tt = Mt ? Jf : Math.floor, H = tt(J * yt.width), K = tt(J * yt.height);
      m === void 0 && (m = T(H, K));
      const q = O ? T(H, K) : m;
      return q.width = H, q.height = K, q.getContext("2d").drawImage(yt, 0, 0, H, K), console.warn("THREE.WebGLRenderer: Texture has been resized from (" + yt.width + "x" + yt.height + ") to (" + H + "x" + K + ")."), q;
    } else return "data" in yt && console.warn("THREE.WebGLRenderer: Image in DataTexture is too big (" + yt.width + "x" + yt.height + ")."), yt;
    return yt;
  }
  function k(yt) {
    return eh(yt.width) && eh(yt.height);
  }
  function R(yt) {
    return i ? false : yt.wrapS !== 1001 || yt.wrapT !== 1001 || yt.minFilter !== 1003 && yt.minFilter !== 1006;
  }
  function F(yt, Mt) {
    return yt.generateMipmaps && Mt && yt.minFilter !== 1003 && yt.minFilter !== 1006;
  }
  function v(yt) {
    E.generateMipmap(yt);
  }
  function U(yt, Mt, O, z, J = false) {
    if (i === false) return Mt;
    if (yt !== null) {
      if (E[yt] !== void 0) return E[yt];
      console.warn("THREE.WebGLRenderer: Attempt to use non-existing WebGL internal format '" + yt + "'");
    }
    let tt = Mt;
    return Mt === 6403 && (O === 5126 && (tt = 33326), O === 5131 && (tt = 33325), O === 5121 && (tt = 33321)), Mt === 33319 && (O === 5126 && (tt = 33328), O === 5131 && (tt = 33327), O === 5121 && (tt = 33323)), Mt === 6408 && (O === 5126 && (tt = 34836), O === 5131 && (tt = 34842), O === 5121 && (tt = z === 3001 && J === false ? 35907 : 32856), O === 32819 && (tt = 32854), O === 32820 && (tt = 32855)), (tt === 33325 || tt === 33326 || tt === 33327 || tt === 33328 || tt === 34842 || tt === 34836) && t.get("EXT_color_buffer_float"), tt;
  }
  function M(yt, Mt, O) {
    return F(yt, O) === true || yt.isFramebufferTexture && yt.minFilter !== 1003 && yt.minFilter !== 1006 ? Math.log2(Math.max(Mt.width, Mt.height)) + 1 : yt.mipmaps !== void 0 && yt.mipmaps.length > 0 ? yt.mipmaps.length : yt.isCompressedTexture && Array.isArray(yt.image) ? Mt.mipmaps.length : 1;
  }
  function Z(yt) {
    return yt === 1003 || yt === 1004 || yt === 1005 ? 9728 : 9729;
  }
  function D(yt) {
    const Mt = yt.target;
    Mt.removeEventListener("dispose", D), S(Mt), Mt.isVideoTexture && h.delete(Mt);
  }
  function V(yt) {
    const Mt = yt.target;
    Mt.removeEventListener("dispose", V), B(Mt);
  }
  function S(yt) {
    const Mt = o.get(yt);
    if (Mt.__webglInit === void 0) return;
    const O = yt.source, z = c.get(O);
    if (z) {
      const J = z[Mt.__cacheKey];
      J.usedTimes--, J.usedTimes === 0 && x(yt), Object.keys(z).length === 0 && c.delete(O);
    }
    o.remove(yt);
  }
  function x(yt) {
    const Mt = o.get(yt);
    E.deleteTexture(Mt.__webglTexture);
    const O = yt.source, z = c.get(O);
    delete z[Mt.__cacheKey], s.memory.textures--;
  }
  function B(yt) {
    const Mt = yt.texture, O = o.get(yt), z = o.get(Mt);
    if (z.__webglTexture !== void 0 && (E.deleteTexture(z.__webglTexture), s.memory.textures--), yt.depthTexture && yt.depthTexture.dispose(), yt.isWebGLCubeRenderTarget) for (let J = 0; J < 6; J++) E.deleteFramebuffer(O.__webglFramebuffer[J]), O.__webglDepthbuffer && E.deleteRenderbuffer(O.__webglDepthbuffer[J]);
    else {
      if (E.deleteFramebuffer(O.__webglFramebuffer), O.__webglDepthbuffer && E.deleteRenderbuffer(O.__webglDepthbuffer), O.__webglMultisampledFramebuffer && E.deleteFramebuffer(O.__webglMultisampledFramebuffer), O.__webglColorRenderbuffer) for (let J = 0; J < O.__webglColorRenderbuffer.length; J++) O.__webglColorRenderbuffer[J] && E.deleteRenderbuffer(O.__webglColorRenderbuffer[J]);
      O.__webglDepthRenderbuffer && E.deleteRenderbuffer(O.__webglDepthRenderbuffer);
    }
    if (yt.isWebGLMultipleRenderTargets) for (let J = 0, tt = Mt.length; J < tt; J++) {
      const H = o.get(Mt[J]);
      H.__webglTexture && (E.deleteTexture(H.__webglTexture), s.memory.textures--), o.remove(Mt[J]);
    }
    o.remove(Mt), o.remove(yt);
  }
  let W = 0;
  function lt() {
    W = 0;
  }
  function pt() {
    const yt = W;
    return yt >= u && console.warn("THREE.WebGLTextures: Trying to use " + yt + " texture units while this GPU supports only " + u), W += 1, yt;
  }
  function at(yt) {
    const Mt = [];
    return Mt.push(yt.wrapS), Mt.push(yt.wrapT), Mt.push(yt.magFilter), Mt.push(yt.minFilter), Mt.push(yt.anisotropy), Mt.push(yt.internalFormat), Mt.push(yt.format), Mt.push(yt.type), Mt.push(yt.generateMipmaps), Mt.push(yt.premultiplyAlpha), Mt.push(yt.flipY), Mt.push(yt.unpackAlignment), Mt.push(yt.encoding), Mt.join();
  }
  function rt(yt, Mt) {
    const O = o.get(yt);
    if (yt.isVideoTexture && oe(yt), yt.isRenderTargetTexture === false && yt.version > 0 && O.__version !== yt.version) {
      const z = yt.image;
      if (z === null) console.warn("THREE.WebGLRenderer: Texture marked for update but no image data found.");
      else if (z.complete === false) console.warn("THREE.WebGLRenderer: Texture marked for update but image is incomplete");
      else {
        $(O, yt, Mt);
        return;
      }
    }
    e.activeTexture(33984 + Mt), e.bindTexture(3553, O.__webglTexture);
  }
  function ot(yt, Mt) {
    const O = o.get(yt);
    if (yt.version > 0 && O.__version !== yt.version) {
      $(O, yt, Mt);
      return;
    }
    e.activeTexture(33984 + Mt), e.bindTexture(35866, O.__webglTexture);
  }
  function X(yt, Mt) {
    const O = o.get(yt);
    if (yt.version > 0 && O.__version !== yt.version) {
      $(O, yt, Mt);
      return;
    }
    e.activeTexture(33984 + Mt), e.bindTexture(32879, O.__webglTexture);
  }
  function I(yt, Mt) {
    const O = o.get(yt);
    if (yt.version > 0 && O.__version !== yt.version) {
      it(O, yt, Mt);
      return;
    }
    e.activeTexture(33984 + Mt), e.bindTexture(34067, O.__webglTexture);
  }
  const nt = { 1e3: 10497, 1001: 33071, 1002: 33648 }, ft = { 1003: 9728, 1004: 9984, 1005: 9986, 1006: 9729, 1007: 9985, 1008: 9987 };
  function dt(yt, Mt, O) {
    if (O ? (E.texParameteri(yt, 10242, nt[Mt.wrapS]), E.texParameteri(yt, 10243, nt[Mt.wrapT]), (yt === 32879 || yt === 35866) && E.texParameteri(yt, 32882, nt[Mt.wrapR]), E.texParameteri(yt, 10240, ft[Mt.magFilter]), E.texParameteri(yt, 10241, ft[Mt.minFilter])) : (E.texParameteri(yt, 10242, 33071), E.texParameteri(yt, 10243, 33071), (yt === 32879 || yt === 35866) && E.texParameteri(yt, 32882, 33071), (Mt.wrapS !== 1001 || Mt.wrapT !== 1001) && console.warn("THREE.WebGLRenderer: Texture is not power of two. Texture.wrapS and Texture.wrapT should be set to THREE.ClampToEdgeWrapping."), E.texParameteri(yt, 10240, Z(Mt.magFilter)), E.texParameteri(yt, 10241, Z(Mt.minFilter)), Mt.minFilter !== 1003 && Mt.minFilter !== 1006 && console.warn("THREE.WebGLRenderer: Texture is not power of two. Texture.minFilter should be set to THREE.NearestFilter or THREE.LinearFilter.")), t.has("EXT_texture_filter_anisotropic") === true) {
      const z = t.get("EXT_texture_filter_anisotropic");
      if (Mt.type === 1015 && t.has("OES_texture_float_linear") === false || i === false && Mt.type === 1016 && t.has("OES_texture_half_float_linear") === false) return;
      (Mt.anisotropy > 1 || o.get(Mt).__currentAnisotropy) && (E.texParameterf(yt, z.TEXTURE_MAX_ANISOTROPY_EXT, Math.min(Mt.anisotropy, a.getMaxAnisotropy())), o.get(Mt).__currentAnisotropy = Mt.anisotropy);
    }
  }
  function Lt(yt, Mt) {
    let O = false;
    yt.__webglInit === void 0 && (yt.__webglInit = true, Mt.addEventListener("dispose", D));
    const z = Mt.source;
    let J = c.get(z);
    J === void 0 && (J = {}, c.set(z, J));
    const tt = at(Mt);
    if (tt !== yt.__cacheKey) {
      J[tt] === void 0 && (J[tt] = { texture: E.createTexture(), usedTimes: 0 }, s.memory.textures++, O = true), J[tt].usedTimes++;
      const H = J[yt.__cacheKey];
      H !== void 0 && (J[yt.__cacheKey].usedTimes--, H.usedTimes === 0 && x(Mt)), yt.__cacheKey = tt, yt.__webglTexture = J[tt].texture;
    }
    return O;
  }
  function $(yt, Mt, O) {
    let z = 3553;
    Mt.isDataArrayTexture && (z = 35866), Mt.isData3DTexture && (z = 32879);
    const J = Lt(yt, Mt), tt = Mt.source;
    if (e.activeTexture(33984 + O), e.bindTexture(z, yt.__webglTexture), tt.version !== tt.__currentVersion || J === true) {
      E.pixelStorei(37440, Mt.flipY), E.pixelStorei(37441, Mt.premultiplyAlpha), E.pixelStorei(3317, Mt.unpackAlignment), E.pixelStorei(37443, 0);
      const H = R(Mt) && k(Mt.image) === false;
      let K = P(Mt.image, H, false, f);
      K = te(Mt, K);
      const q = k(K) || i, _ = l.convert(Mt.format, Mt.encoding);
      let L = l.convert(Mt.type), et = U(Mt.internalFormat, _, L, Mt.encoding, Mt.isVideoTexture);
      dt(z, Mt, q);
      let St;
      const kt = Mt.mipmaps, ct = i && Mt.isVideoTexture !== true, j = tt.__currentVersion === void 0 || J === true, ut = M(Mt, K, q);
      if (Mt.isDepthTexture) et = 6402, i ? Mt.type === 1015 ? et = 36012 : Mt.type === 1014 ? et = 33190 : Mt.type === 1020 ? et = 35056 : et = 33189 : Mt.type === 1015 && console.error("WebGLRenderer: Floating point depth texture requires WebGL2."), Mt.format === 1026 && et === 6402 && Mt.type !== 1012 && Mt.type !== 1014 && (console.warn("THREE.WebGLRenderer: Use UnsignedShortType or UnsignedIntType for DepthFormat DepthTexture."), Mt.type = 1014, L = l.convert(Mt.type)), Mt.format === 1027 && et === 6402 && (et = 34041, Mt.type !== 1020 && (console.warn("THREE.WebGLRenderer: Use UnsignedInt248Type for DepthStencilFormat DepthTexture."), Mt.type = 1020, L = l.convert(Mt.type))), j && (ct ? e.texStorage2D(3553, 1, et, K.width, K.height) : e.texImage2D(3553, 0, et, K.width, K.height, 0, _, L, null));
      else if (Mt.isDataTexture) if (kt.length > 0 && q) {
        ct && j && e.texStorage2D(3553, ut, et, kt[0].width, kt[0].height);
        for (let gt = 0, $t = kt.length; gt < $t; gt++) St = kt[gt], ct ? e.texSubImage2D(3553, gt, 0, 0, St.width, St.height, _, L, St.data) : e.texImage2D(3553, gt, et, St.width, St.height, 0, _, L, St.data);
        Mt.generateMipmaps = false;
      } else ct ? (j && e.texStorage2D(3553, ut, et, K.width, K.height), e.texSubImage2D(3553, 0, 0, 0, K.width, K.height, _, L, K.data)) : e.texImage2D(3553, 0, et, K.width, K.height, 0, _, L, K.data);
      else if (Mt.isCompressedTexture) {
        ct && j && e.texStorage2D(3553, ut, et, kt[0].width, kt[0].height);
        for (let gt = 0, $t = kt.length; gt < $t; gt++) St = kt[gt], Mt.format !== 1023 ? _ !== null ? ct ? e.compressedTexSubImage2D(3553, gt, 0, 0, St.width, St.height, _, St.data) : e.compressedTexImage2D(3553, gt, et, St.width, St.height, 0, St.data) : console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()") : ct ? e.texSubImage2D(3553, gt, 0, 0, St.width, St.height, _, L, St.data) : e.texImage2D(3553, gt, et, St.width, St.height, 0, _, L, St.data);
      } else if (Mt.isDataArrayTexture) ct ? (j && e.texStorage3D(35866, ut, et, K.width, K.height, K.depth), e.texSubImage3D(35866, 0, 0, 0, 0, K.width, K.height, K.depth, _, L, K.data)) : e.texImage3D(35866, 0, et, K.width, K.height, K.depth, 0, _, L, K.data);
      else if (Mt.isData3DTexture) ct ? (j && e.texStorage3D(32879, ut, et, K.width, K.height, K.depth), e.texSubImage3D(32879, 0, 0, 0, 0, K.width, K.height, K.depth, _, L, K.data)) : e.texImage3D(32879, 0, et, K.width, K.height, K.depth, 0, _, L, K.data);
      else if (Mt.isFramebufferTexture) {
        if (j) if (ct) e.texStorage2D(3553, ut, et, K.width, K.height);
        else {
          let gt = K.width, $t = K.height;
          for (let Ht = 0; Ht < ut; Ht++) e.texImage2D(3553, Ht, et, gt, $t, 0, _, L, null), gt >>= 1, $t >>= 1;
        }
      } else if (kt.length > 0 && q) {
        ct && j && e.texStorage2D(3553, ut, et, kt[0].width, kt[0].height);
        for (let gt = 0, $t = kt.length; gt < $t; gt++) St = kt[gt], ct ? e.texSubImage2D(3553, gt, 0, 0, _, L, St) : e.texImage2D(3553, gt, et, _, L, St);
        Mt.generateMipmaps = false;
      } else ct ? (j && e.texStorage2D(3553, ut, et, K.width, K.height), e.texSubImage2D(3553, 0, 0, 0, _, L, K)) : e.texImage2D(3553, 0, et, _, L, K);
      F(Mt, q) && v(z), tt.__currentVersion = tt.version, Mt.onUpdate && Mt.onUpdate(Mt);
    }
    yt.__version = Mt.version;
  }
  function it(yt, Mt, O) {
    if (Mt.image.length !== 6) return;
    const z = Lt(yt, Mt), J = Mt.source;
    if (e.activeTexture(33984 + O), e.bindTexture(34067, yt.__webglTexture), J.version !== J.__currentVersion || z === true) {
      E.pixelStorei(37440, Mt.flipY), E.pixelStorei(37441, Mt.premultiplyAlpha), E.pixelStorei(3317, Mt.unpackAlignment), E.pixelStorei(37443, 0);
      const tt = Mt.isCompressedTexture || Mt.image[0].isCompressedTexture, H = Mt.image[0] && Mt.image[0].isDataTexture, K = [];
      for (let gt = 0; gt < 6; gt++) !tt && !H ? K[gt] = P(Mt.image[gt], false, true, d) : K[gt] = H ? Mt.image[gt].image : Mt.image[gt], K[gt] = te(Mt, K[gt]);
      const q = K[0], _ = k(q) || i, L = l.convert(Mt.format, Mt.encoding), et = l.convert(Mt.type), St = U(Mt.internalFormat, L, et, Mt.encoding), kt = i && Mt.isVideoTexture !== true, ct = J.__currentVersion === void 0 || z === true;
      let j = M(Mt, q, _);
      dt(34067, Mt, _);
      let ut;
      if (tt) {
        kt && ct && e.texStorage2D(34067, j, St, q.width, q.height);
        for (let gt = 0; gt < 6; gt++) {
          ut = K[gt].mipmaps;
          for (let $t = 0; $t < ut.length; $t++) {
            const Ht = ut[$t];
            Mt.format !== 1023 ? L !== null ? kt ? e.compressedTexSubImage2D(34069 + gt, $t, 0, 0, Ht.width, Ht.height, L, Ht.data) : e.compressedTexImage2D(34069 + gt, $t, St, Ht.width, Ht.height, 0, Ht.data) : console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .setTextureCube()") : kt ? e.texSubImage2D(34069 + gt, $t, 0, 0, Ht.width, Ht.height, L, et, Ht.data) : e.texImage2D(34069 + gt, $t, St, Ht.width, Ht.height, 0, L, et, Ht.data);
          }
        }
      } else {
        ut = Mt.mipmaps, kt && ct && (ut.length > 0 && j++, e.texStorage2D(34067, j, St, K[0].width, K[0].height));
        for (let gt = 0; gt < 6; gt++) if (H) {
          kt ? e.texSubImage2D(34069 + gt, 0, 0, 0, K[gt].width, K[gt].height, L, et, K[gt].data) : e.texImage2D(34069 + gt, 0, St, K[gt].width, K[gt].height, 0, L, et, K[gt].data);
          for (let $t = 0; $t < ut.length; $t++) {
            const Ht = ut[$t].image[gt].image;
            kt ? e.texSubImage2D(34069 + gt, $t + 1, 0, 0, Ht.width, Ht.height, L, et, Ht.data) : e.texImage2D(34069 + gt, $t + 1, St, Ht.width, Ht.height, 0, L, et, Ht.data);
          }
        } else {
          kt ? e.texSubImage2D(34069 + gt, 0, 0, 0, L, et, K[gt]) : e.texImage2D(34069 + gt, 0, St, L, et, K[gt]);
          for (let $t = 0; $t < ut.length; $t++) {
            const Ht = ut[$t];
            kt ? e.texSubImage2D(34069 + gt, $t + 1, 0, 0, L, et, Ht.image[gt]) : e.texImage2D(34069 + gt, $t + 1, St, L, et, Ht.image[gt]);
          }
        }
      }
      F(Mt, _) && v(34067), J.__currentVersion = J.version, Mt.onUpdate && Mt.onUpdate(Mt);
    }
    yt.__version = Mt.version;
  }
  function mt(yt, Mt, O, z, J) {
    const tt = l.convert(O.format, O.encoding), H = l.convert(O.type), K = U(O.internalFormat, tt, H, O.encoding);
    o.get(Mt).__hasExternalTextures || (J === 32879 || J === 35866 ? e.texImage3D(J, 0, K, Mt.width, Mt.height, Mt.depth, 0, tt, H, null) : e.texImage2D(J, 0, K, Mt.width, Mt.height, 0, tt, H, null)), e.bindFramebuffer(36160, yt), Vt(Mt) ? g.framebufferTexture2DMultisampleEXT(36160, z, J, o.get(O).__webglTexture, 0, Ut(Mt)) : E.framebufferTexture2D(36160, z, J, o.get(O).__webglTexture, 0), e.bindFramebuffer(36160, null);
  }
  function Ot(yt, Mt, O) {
    if (E.bindRenderbuffer(36161, yt), Mt.depthBuffer && !Mt.stencilBuffer) {
      let z = 33189;
      if (O || Vt(Mt)) {
        const J = Mt.depthTexture;
        J && J.isDepthTexture && (J.type === 1015 ? z = 36012 : J.type === 1014 && (z = 33190));
        const tt = Ut(Mt);
        Vt(Mt) ? g.renderbufferStorageMultisampleEXT(36161, tt, z, Mt.width, Mt.height) : E.renderbufferStorageMultisample(36161, tt, z, Mt.width, Mt.height);
      } else E.renderbufferStorage(36161, z, Mt.width, Mt.height);
      E.framebufferRenderbuffer(36160, 36096, 36161, yt);
    } else if (Mt.depthBuffer && Mt.stencilBuffer) {
      const z = Ut(Mt);
      O && Vt(Mt) === false ? E.renderbufferStorageMultisample(36161, z, 35056, Mt.width, Mt.height) : Vt(Mt) ? g.renderbufferStorageMultisampleEXT(36161, z, 35056, Mt.width, Mt.height) : E.renderbufferStorage(36161, 34041, Mt.width, Mt.height), E.framebufferRenderbuffer(36160, 33306, 36161, yt);
    } else {
      const z = Mt.isWebGLMultipleRenderTargets === true ? Mt.texture : [Mt.texture];
      for (let J = 0; J < z.length; J++) {
        const tt = z[J], H = l.convert(tt.format, tt.encoding), K = l.convert(tt.type), q = U(tt.internalFormat, H, K, tt.encoding), _ = Ut(Mt);
        O && Vt(Mt) === false ? E.renderbufferStorageMultisample(36161, _, q, Mt.width, Mt.height) : Vt(Mt) ? g.renderbufferStorageMultisampleEXT(36161, _, q, Mt.width, Mt.height) : E.renderbufferStorage(36161, q, Mt.width, Mt.height);
      }
    }
    E.bindRenderbuffer(36161, null);
  }
  function bt(yt, Mt) {
    if (Mt && Mt.isWebGLCubeRenderTarget) throw new Error("Depth Texture with cube render targets is not supported");
    if (e.bindFramebuffer(36160, yt), !(Mt.depthTexture && Mt.depthTexture.isDepthTexture)) throw new Error("renderTarget.depthTexture must be an instance of THREE.DepthTexture");
    (!o.get(Mt.depthTexture).__webglTexture || Mt.depthTexture.image.width !== Mt.width || Mt.depthTexture.image.height !== Mt.height) && (Mt.depthTexture.image.width = Mt.width, Mt.depthTexture.image.height = Mt.height, Mt.depthTexture.needsUpdate = true), rt(Mt.depthTexture, 0);
    const O = o.get(Mt.depthTexture).__webglTexture, z = Ut(Mt);
    if (Mt.depthTexture.format === 1026) Vt(Mt) ? g.framebufferTexture2DMultisampleEXT(36160, 36096, 3553, O, 0, z) : E.framebufferTexture2D(36160, 36096, 3553, O, 0);
    else if (Mt.depthTexture.format === 1027) Vt(Mt) ? g.framebufferTexture2DMultisampleEXT(36160, 33306, 3553, O, 0, z) : E.framebufferTexture2D(36160, 33306, 3553, O, 0);
    else throw new Error("Unknown depthTexture format");
  }
  function xt(yt) {
    const Mt = o.get(yt), O = yt.isWebGLCubeRenderTarget === true;
    if (yt.depthTexture && !Mt.__autoAllocateDepthBuffer) {
      if (O) throw new Error("target.depthTexture not supported in Cube render targets");
      bt(Mt.__webglFramebuffer, yt);
    } else if (O) {
      Mt.__webglDepthbuffer = [];
      for (let z = 0; z < 6; z++) e.bindFramebuffer(36160, Mt.__webglFramebuffer[z]), Mt.__webglDepthbuffer[z] = E.createRenderbuffer(), Ot(Mt.__webglDepthbuffer[z], yt, false);
    } else e.bindFramebuffer(36160, Mt.__webglFramebuffer), Mt.__webglDepthbuffer = E.createRenderbuffer(), Ot(Mt.__webglDepthbuffer, yt, false);
    e.bindFramebuffer(36160, null);
  }
  function Ct(yt, Mt, O) {
    const z = o.get(yt);
    Mt !== void 0 && mt(z.__webglFramebuffer, yt, yt.texture, 36064, 3553), O !== void 0 && xt(yt);
  }
  function Tt(yt) {
    const Mt = yt.texture, O = o.get(yt), z = o.get(Mt);
    yt.addEventListener("dispose", V), yt.isWebGLMultipleRenderTargets !== true && (z.__webglTexture === void 0 && (z.__webglTexture = E.createTexture()), z.__version = Mt.version, s.memory.textures++);
    const J = yt.isWebGLCubeRenderTarget === true, tt = yt.isWebGLMultipleRenderTargets === true, H = k(yt) || i;
    if (J) {
      O.__webglFramebuffer = [];
      for (let K = 0; K < 6; K++) O.__webglFramebuffer[K] = E.createFramebuffer();
    } else {
      if (O.__webglFramebuffer = E.createFramebuffer(), tt) if (a.drawBuffers) {
        const K = yt.texture;
        for (let q = 0, _ = K.length; q < _; q++) {
          const L = o.get(K[q]);
          L.__webglTexture === void 0 && (L.__webglTexture = E.createTexture(), s.memory.textures++);
        }
      } else console.warn("THREE.WebGLRenderer: WebGLMultipleRenderTargets can only be used with WebGL2 or WEBGL_draw_buffers extension.");
      if (i && yt.samples > 0 && Vt(yt) === false) {
        const K = tt ? Mt : [Mt];
        O.__webglMultisampledFramebuffer = E.createFramebuffer(), O.__webglColorRenderbuffer = [], e.bindFramebuffer(36160, O.__webglMultisampledFramebuffer);
        for (let q = 0; q < K.length; q++) {
          const _ = K[q];
          O.__webglColorRenderbuffer[q] = E.createRenderbuffer(), E.bindRenderbuffer(36161, O.__webglColorRenderbuffer[q]);
          const L = l.convert(_.format, _.encoding), et = l.convert(_.type), St = U(_.internalFormat, L, et, _.encoding), kt = Ut(yt);
          E.renderbufferStorageMultisample(36161, kt, St, yt.width, yt.height), E.framebufferRenderbuffer(36160, 36064 + q, 36161, O.__webglColorRenderbuffer[q]);
        }
        E.bindRenderbuffer(36161, null), yt.depthBuffer && (O.__webglDepthRenderbuffer = E.createRenderbuffer(), Ot(O.__webglDepthRenderbuffer, yt, true)), e.bindFramebuffer(36160, null);
      }
    }
    if (J) {
      e.bindTexture(34067, z.__webglTexture), dt(34067, Mt, H);
      for (let K = 0; K < 6; K++) mt(O.__webglFramebuffer[K], yt, Mt, 36064, 34069 + K);
      F(Mt, H) && v(34067), e.unbindTexture();
    } else if (tt) {
      const K = yt.texture;
      for (let q = 0, _ = K.length; q < _; q++) {
        const L = K[q], et = o.get(L);
        e.bindTexture(3553, et.__webglTexture), dt(3553, L, H), mt(O.__webglFramebuffer, yt, L, 36064 + q, 3553), F(L, H) && v(3553);
      }
      e.unbindTexture();
    } else {
      let K = 3553;
      (yt.isWebGL3DRenderTarget || yt.isWebGLArrayRenderTarget) && (i ? K = yt.isWebGL3DRenderTarget ? 32879 : 35866 : console.error("THREE.WebGLTextures: THREE.Data3DTexture and THREE.DataArrayTexture only supported with WebGL2.")), e.bindTexture(K, z.__webglTexture), dt(K, Mt, H), mt(O.__webglFramebuffer, yt, Mt, 36064, K), F(Mt, H) && v(K), e.unbindTexture();
    }
    yt.depthBuffer && xt(yt);
  }
  function Bt(yt) {
    const Mt = k(yt) || i, O = yt.isWebGLMultipleRenderTargets === true ? yt.texture : [yt.texture];
    for (let z = 0, J = O.length; z < J; z++) {
      const tt = O[z];
      if (F(tt, Mt)) {
        const H = yt.isWebGLCubeRenderTarget ? 34067 : 3553, K = o.get(tt).__webglTexture;
        e.bindTexture(H, K), v(H), e.unbindTexture();
      }
    }
  }
  function At(yt) {
    if (i && yt.samples > 0 && Vt(yt) === false) {
      const Mt = yt.isWebGLMultipleRenderTargets ? yt.texture : [yt.texture], O = yt.width, z = yt.height;
      let J = 16384;
      const tt = [], H = yt.stencilBuffer ? 33306 : 36096, K = o.get(yt), q = yt.isWebGLMultipleRenderTargets === true;
      if (q) for (let _ = 0; _ < Mt.length; _++) e.bindFramebuffer(36160, K.__webglMultisampledFramebuffer), E.framebufferRenderbuffer(36160, 36064 + _, 36161, null), e.bindFramebuffer(36160, K.__webglFramebuffer), E.framebufferTexture2D(36009, 36064 + _, 3553, null, 0);
      e.bindFramebuffer(36008, K.__webglMultisampledFramebuffer), e.bindFramebuffer(36009, K.__webglFramebuffer);
      for (let _ = 0; _ < Mt.length; _++) {
        tt.push(36064 + _), yt.depthBuffer && tt.push(H);
        const L = K.__ignoreDepthValues !== void 0 ? K.__ignoreDepthValues : false;
        if (L === false && (yt.depthBuffer && (J |= 256), yt.stencilBuffer && (J |= 1024)), q && E.framebufferRenderbuffer(36008, 36064, 36161, K.__webglColorRenderbuffer[_]), L === true && (E.invalidateFramebuffer(36008, [H]), E.invalidateFramebuffer(36009, [H])), q) {
          const et = o.get(Mt[_]).__webglTexture;
          E.framebufferTexture2D(36009, 36064, 3553, et, 0);
        }
        E.blitFramebuffer(0, 0, O, z, 0, 0, O, z, J, 9728), b && E.invalidateFramebuffer(36008, tt);
      }
      if (e.bindFramebuffer(36008, null), e.bindFramebuffer(36009, null), q) for (let _ = 0; _ < Mt.length; _++) {
        e.bindFramebuffer(36160, K.__webglMultisampledFramebuffer), E.framebufferRenderbuffer(36160, 36064 + _, 36161, K.__webglColorRenderbuffer[_]);
        const L = o.get(Mt[_]).__webglTexture;
        e.bindFramebuffer(36160, K.__webglFramebuffer), E.framebufferTexture2D(36009, 36064 + _, 3553, L, 0);
      }
      e.bindFramebuffer(36009, K.__webglMultisampledFramebuffer);
    }
  }
  function Ut(yt) {
    return Math.min(p, yt.samples);
  }
  function Vt(yt) {
    const Mt = o.get(yt);
    return i && yt.samples > 0 && t.has("WEBGL_multisampled_render_to_texture") === true && Mt.__useRenderToTexture !== false;
  }
  function oe(yt) {
    const Mt = s.render.frame;
    h.get(yt) !== Mt && (h.set(yt, Mt), yt.update());
  }
  function te(yt, Mt) {
    const O = yt.encoding, z = yt.format, J = yt.type;
    return yt.isCompressedTexture === true || yt.isVideoTexture === true || yt.format === 1035 || O !== 3e3 && (O === 3001 ? i === false ? t.has("EXT_sRGB") === true && z === 1023 ? (yt.format = 1035, yt.minFilter = 1006, yt.generateMipmaps = false) : Mt = Od.sRGBToLinear(Mt) : (z !== 1023 || J !== 1009) && console.warn("THREE.WebGLTextures: sRGB encoded textures have to use RGBAFormat and UnsignedByteType.") : console.error("THREE.WebGLTextures: Unsupported texture encoding:", O)), Mt;
  }
  this.allocateTextureUnit = pt, this.resetTextureUnits = lt, this.setTexture2D = rt, this.setTexture2DArray = ot, this.setTexture3D = X, this.setTextureCube = I, this.rebindTextures = Ct, this.setupRenderTarget = Tt, this.updateRenderTargetMipmap = Bt, this.updateMultisampleRenderTarget = At, this.setupDepthRenderbuffer = xt, this.setupFrameBufferTexture = mt, this.useMultisampledRTT = Vt;
}
function Nb(E, t, e) {
  const o = e.isWebGL2;
  function a(l, s = null) {
    let i;
    if (l === 1009) return 5121;
    if (l === 1017) return 32819;
    if (l === 1018) return 32820;
    if (l === 1010) return 5120;
    if (l === 1011) return 5122;
    if (l === 1012) return 5123;
    if (l === 1013) return 5124;
    if (l === 1014) return 5125;
    if (l === 1015) return 5126;
    if (l === 1016) return o ? 5131 : (i = t.get("OES_texture_half_float"), i !== null ? i.HALF_FLOAT_OES : null);
    if (l === 1021) return 6406;
    if (l === 1023) return 6408;
    if (l === 1024) return 6409;
    if (l === 1025) return 6410;
    if (l === 1026) return 6402;
    if (l === 1027) return 34041;
    if (l === 1028) return 6403;
    if (l === 1022) return console.warn("THREE.WebGLRenderer: THREE.RGBFormat has been removed. Use THREE.RGBAFormat instead. https://github.com/mrdoob/three.js/pull/23228"), 6408;
    if (l === 1035) return i = t.get("EXT_sRGB"), i !== null ? i.SRGB_ALPHA_EXT : null;
    if (l === 1029) return 36244;
    if (l === 1030) return 33319;
    if (l === 1031) return 33320;
    if (l === 1033) return 36249;
    if (l === 33776 || l === 33777 || l === 33778 || l === 33779) if (s === 3001) if (i = t.get("WEBGL_compressed_texture_s3tc_srgb"), i !== null) {
      if (l === 33776) return i.COMPRESSED_SRGB_S3TC_DXT1_EXT;
      if (l === 33777) return i.COMPRESSED_SRGB_ALPHA_S3TC_DXT1_EXT;
      if (l === 33778) return i.COMPRESSED_SRGB_ALPHA_S3TC_DXT3_EXT;
      if (l === 33779) return i.COMPRESSED_SRGB_ALPHA_S3TC_DXT5_EXT;
    } else return null;
    else if (i = t.get("WEBGL_compressed_texture_s3tc"), i !== null) {
      if (l === 33776) return i.COMPRESSED_RGB_S3TC_DXT1_EXT;
      if (l === 33777) return i.COMPRESSED_RGBA_S3TC_DXT1_EXT;
      if (l === 33778) return i.COMPRESSED_RGBA_S3TC_DXT3_EXT;
      if (l === 33779) return i.COMPRESSED_RGBA_S3TC_DXT5_EXT;
    } else return null;
    if (l === 35840 || l === 35841 || l === 35842 || l === 35843) if (i = t.get("WEBGL_compressed_texture_pvrtc"), i !== null) {
      if (l === 35840) return i.COMPRESSED_RGB_PVRTC_4BPPV1_IMG;
      if (l === 35841) return i.COMPRESSED_RGB_PVRTC_2BPPV1_IMG;
      if (l === 35842) return i.COMPRESSED_RGBA_PVRTC_4BPPV1_IMG;
      if (l === 35843) return i.COMPRESSED_RGBA_PVRTC_2BPPV1_IMG;
    } else return null;
    if (l === 36196) return i = t.get("WEBGL_compressed_texture_etc1"), i !== null ? i.COMPRESSED_RGB_ETC1_WEBGL : null;
    if (l === 37492 || l === 37496) if (i = t.get("WEBGL_compressed_texture_etc"), i !== null) {
      if (l === 37492) return s === 3001 ? i.COMPRESSED_SRGB8_ETC2 : i.COMPRESSED_RGB8_ETC2;
      if (l === 37496) return s === 3001 ? i.COMPRESSED_SRGB8_ALPHA8_ETC2_EAC : i.COMPRESSED_RGBA8_ETC2_EAC;
    } else return null;
    if (l === 37808 || l === 37809 || l === 37810 || l === 37811 || l === 37812 || l === 37813 || l === 37814 || l === 37815 || l === 37816 || l === 37817 || l === 37818 || l === 37819 || l === 37820 || l === 37821) if (i = t.get("WEBGL_compressed_texture_astc"), i !== null) {
      if (l === 37808) return s === 3001 ? i.COMPRESSED_SRGB8_ALPHA8_ASTC_4x4_KHR : i.COMPRESSED_RGBA_ASTC_4x4_KHR;
      if (l === 37809) return s === 3001 ? i.COMPRESSED_SRGB8_ALPHA8_ASTC_5x4_KHR : i.COMPRESSED_RGBA_ASTC_5x4_KHR;
      if (l === 37810) return s === 3001 ? i.COMPRESSED_SRGB8_ALPHA8_ASTC_5x5_KHR : i.COMPRESSED_RGBA_ASTC_5x5_KHR;
      if (l === 37811) return s === 3001 ? i.COMPRESSED_SRGB8_ALPHA8_ASTC_6x5_KHR : i.COMPRESSED_RGBA_ASTC_6x5_KHR;
      if (l === 37812) return s === 3001 ? i.COMPRESSED_SRGB8_ALPHA8_ASTC_6x6_KHR : i.COMPRESSED_RGBA_ASTC_6x6_KHR;
      if (l === 37813) return s === 3001 ? i.COMPRESSED_SRGB8_ALPHA8_ASTC_8x5_KHR : i.COMPRESSED_RGBA_ASTC_8x5_KHR;
      if (l === 37814) return s === 3001 ? i.COMPRESSED_SRGB8_ALPHA8_ASTC_8x6_KHR : i.COMPRESSED_RGBA_ASTC_8x6_KHR;
      if (l === 37815) return s === 3001 ? i.COMPRESSED_SRGB8_ALPHA8_ASTC_8x8_KHR : i.COMPRESSED_RGBA_ASTC_8x8_KHR;
      if (l === 37816) return s === 3001 ? i.COMPRESSED_SRGB8_ALPHA8_ASTC_10x5_KHR : i.COMPRESSED_RGBA_ASTC_10x5_KHR;
      if (l === 37817) return s === 3001 ? i.COMPRESSED_SRGB8_ALPHA8_ASTC_10x6_KHR : i.COMPRESSED_RGBA_ASTC_10x6_KHR;
      if (l === 37818) return s === 3001 ? i.COMPRESSED_SRGB8_ALPHA8_ASTC_10x8_KHR : i.COMPRESSED_RGBA_ASTC_10x8_KHR;
      if (l === 37819) return s === 3001 ? i.COMPRESSED_SRGB8_ALPHA8_ASTC_10x10_KHR : i.COMPRESSED_RGBA_ASTC_10x10_KHR;
      if (l === 37820) return s === 3001 ? i.COMPRESSED_SRGB8_ALPHA8_ASTC_12x10_KHR : i.COMPRESSED_RGBA_ASTC_12x10_KHR;
      if (l === 37821) return s === 3001 ? i.COMPRESSED_SRGB8_ALPHA8_ASTC_12x12_KHR : i.COMPRESSED_RGBA_ASTC_12x12_KHR;
    } else return null;
    if (l === 36492) if (i = t.get("EXT_texture_compression_bptc"), i !== null) {
      if (l === 36492) return s === 3001 ? i.COMPRESSED_SRGB_ALPHA_BPTC_UNORM_EXT : i.COMPRESSED_RGBA_BPTC_UNORM_EXT;
    } else return null;
    return l === 1020 ? o ? 34042 : (i = t.get("WEBGL_depth_texture"), i !== null ? i.UNSIGNED_INT_24_8_WEBGL : null) : E[l] !== void 0 ? E[l] : null;
  }
  return { convert: a };
}
class Db extends ua {
  constructor(t = []) {
    super(), this.isArrayCamera = true, this.cameras = t;
  }
}
class bl extends Zi {
  constructor() {
    super(), this.isGroup = true, this.type = "Group";
  }
}
const Fb = { type: "move" };
class Ff {
  constructor() {
    this._targetRay = null, this._grip = null, this._hand = null;
  }
  getHandSpace() {
    return this._hand === null && (this._hand = new bl(), this._hand.matrixAutoUpdate = false, this._hand.visible = false, this._hand.joints = {}, this._hand.inputState = { pinching: false }), this._hand;
  }
  getTargetRaySpace() {
    return this._targetRay === null && (this._targetRay = new bl(), this._targetRay.matrixAutoUpdate = false, this._targetRay.visible = false, this._targetRay.hasLinearVelocity = false, this._targetRay.linearVelocity = new Br(), this._targetRay.hasAngularVelocity = false, this._targetRay.angularVelocity = new Br()), this._targetRay;
  }
  getGripSpace() {
    return this._grip === null && (this._grip = new bl(), this._grip.matrixAutoUpdate = false, this._grip.visible = false, this._grip.hasLinearVelocity = false, this._grip.linearVelocity = new Br(), this._grip.hasAngularVelocity = false, this._grip.angularVelocity = new Br()), this._grip;
  }
  dispatchEvent(t) {
    return this._targetRay !== null && this._targetRay.dispatchEvent(t), this._grip !== null && this._grip.dispatchEvent(t), this._hand !== null && this._hand.dispatchEvent(t), this;
  }
  disconnect(t) {
    return this.dispatchEvent({ type: "disconnected", data: t }), this._targetRay !== null && (this._targetRay.visible = false), this._grip !== null && (this._grip.visible = false), this._hand !== null && (this._hand.visible = false), this;
  }
  update(t, e, o) {
    let a = null, l = null, s = null;
    const i = this._targetRay, u = this._grip, d = this._hand;
    if (t && e.session.visibilityState !== "visible-blurred") {
      if (d && t.hand) {
        s = true;
        for (const m of t.hand.values()) {
          const c = e.getJointPose(m, o);
          if (d.joints[m.jointName] === void 0) {
            const T = new bl();
            T.matrixAutoUpdate = false, T.visible = false, d.joints[m.jointName] = T, d.add(T);
          }
          const w = d.joints[m.jointName];
          c !== null && (w.matrix.fromArray(c.transform.matrix), w.matrix.decompose(w.position, w.rotation, w.scale), w.jointRadius = c.radius), w.visible = c !== null;
        }
        const f = d.joints["index-finger-tip"], p = d.joints["thumb-tip"], g = f.position.distanceTo(p.position), b = 0.02, h = 5e-3;
        d.inputState.pinching && g > b + h ? (d.inputState.pinching = false, this.dispatchEvent({ type: "pinchend", handedness: t.handedness, target: this })) : !d.inputState.pinching && g <= b - h && (d.inputState.pinching = true, this.dispatchEvent({ type: "pinchstart", handedness: t.handedness, target: this }));
      } else u !== null && t.gripSpace && (l = e.getPose(t.gripSpace, o), l !== null && (u.matrix.fromArray(l.transform.matrix), u.matrix.decompose(u.position, u.rotation, u.scale), l.linearVelocity ? (u.hasLinearVelocity = true, u.linearVelocity.copy(l.linearVelocity)) : u.hasLinearVelocity = false, l.angularVelocity ? (u.hasAngularVelocity = true, u.angularVelocity.copy(l.angularVelocity)) : u.hasAngularVelocity = false));
      i !== null && (a = e.getPose(t.targetRaySpace, o), a === null && l !== null && (a = l), a !== null && (i.matrix.fromArray(a.transform.matrix), i.matrix.decompose(i.position, i.rotation, i.scale), a.linearVelocity ? (i.hasLinearVelocity = true, i.linearVelocity.copy(a.linearVelocity)) : i.hasLinearVelocity = false, a.angularVelocity ? (i.hasAngularVelocity = true, i.angularVelocity.copy(a.angularVelocity)) : i.hasAngularVelocity = false, this.dispatchEvent(Fb)));
    }
    return i !== null && (i.visible = a !== null), u !== null && (u.visible = l !== null), d !== null && (d.visible = s !== null), this;
  }
}
class Ub extends ca {
  constructor(t, e, o, a, l, s, i, u, d, f) {
    if (f = f !== void 0 ? f : 1026, f !== 1026 && f !== 1027) throw new Error("DepthTexture format must be either THREE.DepthFormat or THREE.DepthStencilFormat");
    o === void 0 && f === 1026 && (o = 1014), o === void 0 && f === 1027 && (o = 1020), super(null, a, l, s, i, u, f, o, d), this.isDepthTexture = true, this.image = { width: t, height: e }, this.magFilter = i !== void 0 ? i : 1003, this.minFilter = u !== void 0 ? u : 1003, this.flipY = false, this.generateMipmaps = false;
  }
}
class jb extends Lu {
  constructor(t, e) {
    super();
    const o = this;
    let a = null, l = 1, s = null, i = "local-floor", u = null, d = null, f = null, p = null, g = null, b = null;
    const h = e.getContextAttributes();
    let m = null, c = null;
    const w = [], T = [], P = new ua();
    P.layers.enable(1), P.viewport = new Di();
    const k = new ua();
    k.layers.enable(2), k.viewport = new Di();
    const R = [P, k], F = new Db();
    F.layers.enable(1), F.layers.enable(2);
    let v = null, U = null;
    this.cameraAutoUpdate = true, this.enabled = false, this.isPresenting = false, this.getController = function(at) {
      let rt = w[at];
      return rt === void 0 && (rt = new Ff(), w[at] = rt), rt.getTargetRaySpace();
    }, this.getControllerGrip = function(at) {
      let rt = w[at];
      return rt === void 0 && (rt = new Ff(), w[at] = rt), rt.getGripSpace();
    }, this.getHand = function(at) {
      let rt = w[at];
      return rt === void 0 && (rt = new Ff(), w[at] = rt), rt.getHandSpace();
    };
    function M(at) {
      const rt = T.indexOf(at.inputSource);
      if (rt === -1) return;
      const ot = w[rt];
      ot !== void 0 && ot.dispatchEvent({ type: at.type, data: at.inputSource });
    }
    function Z() {
      a.removeEventListener("select", M), a.removeEventListener("selectstart", M), a.removeEventListener("selectend", M), a.removeEventListener("squeeze", M), a.removeEventListener("squeezestart", M), a.removeEventListener("squeezeend", M), a.removeEventListener("end", Z), a.removeEventListener("inputsourceschange", D);
      for (let at = 0; at < w.length; at++) {
        const rt = T[at];
        rt !== null && (T[at] = null, w[at].disconnect(rt));
      }
      v = null, U = null, t.setRenderTarget(m), g = null, p = null, f = null, a = null, c = null, pt.stop(), o.isPresenting = false, o.dispatchEvent({ type: "sessionend" });
    }
    this.setFramebufferScaleFactor = function(at) {
      l = at, o.isPresenting === true && console.warn("THREE.WebXRManager: Cannot change framebuffer scale while presenting.");
    }, this.setReferenceSpaceType = function(at) {
      i = at, o.isPresenting === true && console.warn("THREE.WebXRManager: Cannot change reference space type while presenting.");
    }, this.getReferenceSpace = function() {
      return u || s;
    }, this.setReferenceSpace = function(at) {
      u = at;
    }, this.getBaseLayer = function() {
      return p !== null ? p : g;
    }, this.getBinding = function() {
      return f;
    }, this.getFrame = function() {
      return b;
    }, this.getSession = function() {
      return a;
    }, this.setSession = async function(at) {
      if (a = at, a !== null) {
        if (m = t.getRenderTarget(), a.addEventListener("select", M), a.addEventListener("selectstart", M), a.addEventListener("selectend", M), a.addEventListener("squeeze", M), a.addEventListener("squeezestart", M), a.addEventListener("squeezeend", M), a.addEventListener("end", Z), a.addEventListener("inputsourceschange", D), h.xrCompatible !== true && await e.makeXRCompatible(), a.renderState.layers === void 0 || t.capabilities.isWebGL2 === false) {
          const rt = { antialias: a.renderState.layers === void 0 ? h.antialias : true, alpha: h.alpha, depth: h.depth, stencil: h.stencil, framebufferScaleFactor: l };
          g = new XRWebGLLayer(a, e, rt), a.updateRenderState({ baseLayer: g }), c = new Qs(g.framebufferWidth, g.framebufferHeight, { format: 1023, type: 1009, encoding: t.outputEncoding });
        } else {
          let rt = null, ot = null, X = null;
          h.depth && (X = h.stencil ? 35056 : 33190, rt = h.stencil ? 1027 : 1026, ot = h.stencil ? 1020 : 1014);
          const I = { colorFormat: 32856, depthFormat: X, scaleFactor: l };
          f = new XRWebGLBinding(a, e), p = f.createProjectionLayer(I), a.updateRenderState({ layers: [p] }), c = new Qs(p.textureWidth, p.textureHeight, { format: 1023, type: 1009, depthTexture: new Ub(p.textureWidth, p.textureHeight, ot, void 0, void 0, void 0, void 0, void 0, void 0, rt), stencilBuffer: h.stencil, encoding: t.outputEncoding, samples: h.antialias ? 4 : 0 });
          const nt = t.properties.get(c);
          nt.__ignoreDepthValues = p.ignoreDepthValues;
        }
        c.isXRRenderTarget = true, this.setFoveation(1), u = null, s = await a.requestReferenceSpace(i), pt.setContext(a), pt.start(), o.isPresenting = true, o.dispatchEvent({ type: "sessionstart" });
      }
    };
    function D(at) {
      for (let rt = 0; rt < at.removed.length; rt++) {
        const ot = at.removed[rt], X = T.indexOf(ot);
        X >= 0 && (T[X] = null, w[X].dispatchEvent({ type: "disconnected", data: ot }));
      }
      for (let rt = 0; rt < at.added.length; rt++) {
        const ot = at.added[rt];
        let X = T.indexOf(ot);
        if (X === -1) {
          for (let nt = 0; nt < w.length; nt++) if (nt >= T.length) {
            T.push(ot), X = nt;
            break;
          } else if (T[nt] === null) {
            T[nt] = ot, X = nt;
            break;
          }
          if (X === -1) break;
        }
        const I = w[X];
        I && I.dispatchEvent({ type: "connected", data: ot });
      }
    }
    const V = new Br(), S = new Br();
    function x(at, rt, ot) {
      V.setFromMatrixPosition(rt.matrixWorld), S.setFromMatrixPosition(ot.matrixWorld);
      const X = V.distanceTo(S), I = rt.projectionMatrix.elements, nt = ot.projectionMatrix.elements, ft = I[14] / (I[10] - 1), dt = I[14] / (I[10] + 1), Lt = (I[9] + 1) / I[5], $ = (I[9] - 1) / I[5], it = (I[8] - 1) / I[0], mt = (nt[8] + 1) / nt[0], Ot = ft * it, bt = ft * mt, xt = X / (-it + mt), Ct = xt * -it;
      rt.matrixWorld.decompose(at.position, at.quaternion, at.scale), at.translateX(Ct), at.translateZ(xt), at.matrixWorld.compose(at.position, at.quaternion, at.scale), at.matrixWorldInverse.copy(at.matrixWorld).invert();
      const Tt = ft + xt, Bt = dt + xt, At = Ot - Ct, Ut = bt + (X - Ct), Vt = Lt * dt / Bt * Tt, oe = $ * dt / Bt * Tt;
      at.projectionMatrix.makePerspective(At, Ut, Vt, oe, Tt, Bt);
    }
    function B(at, rt) {
      rt === null ? at.matrixWorld.copy(at.matrix) : at.matrixWorld.multiplyMatrices(rt.matrixWorld, at.matrix), at.matrixWorldInverse.copy(at.matrixWorld).invert();
    }
    this.updateCamera = function(at) {
      if (a === null) return;
      F.near = k.near = P.near = at.near, F.far = k.far = P.far = at.far, (v !== F.near || U !== F.far) && (a.updateRenderState({ depthNear: F.near, depthFar: F.far }), v = F.near, U = F.far);
      const rt = at.parent, ot = F.cameras;
      B(F, rt);
      for (let I = 0; I < ot.length; I++) B(ot[I], rt);
      F.matrixWorld.decompose(F.position, F.quaternion, F.scale), at.position.copy(F.position), at.quaternion.copy(F.quaternion), at.scale.copy(F.scale), at.matrix.copy(F.matrix), at.matrixWorld.copy(F.matrixWorld);
      const X = at.children;
      for (let I = 0, nt = X.length; I < nt; I++) X[I].updateMatrixWorld(true);
      ot.length === 2 ? x(F, P, k) : F.projectionMatrix.copy(P.projectionMatrix);
    }, this.getCamera = function() {
      return F;
    }, this.getFoveation = function() {
      if (p !== null) return p.fixedFoveation;
      if (g !== null) return g.fixedFoveation;
    }, this.setFoveation = function(at) {
      p !== null && (p.fixedFoveation = at), g !== null && g.fixedFoveation !== void 0 && (g.fixedFoveation = at);
    };
    let W = null;
    function lt(at, rt) {
      if (d = rt.getViewerPose(u || s), b = rt, d !== null) {
        const ot = d.views;
        g !== null && (t.setRenderTargetFramebuffer(c, g.framebuffer), t.setRenderTarget(c));
        let X = false;
        ot.length !== F.cameras.length && (F.cameras.length = 0, X = true);
        for (let I = 0; I < ot.length; I++) {
          const nt = ot[I];
          let ft = null;
          if (g !== null) ft = g.getViewport(nt);
          else {
            const Lt = f.getViewSubImage(p, nt);
            ft = Lt.viewport, I === 0 && (t.setRenderTargetTextures(c, Lt.colorTexture, p.ignoreDepthValues ? void 0 : Lt.depthStencilTexture), t.setRenderTarget(c));
          }
          let dt = R[I];
          dt === void 0 && (dt = new ua(), dt.layers.enable(I), dt.viewport = new Di(), R[I] = dt), dt.matrix.fromArray(nt.transform.matrix), dt.projectionMatrix.fromArray(nt.projectionMatrix), dt.viewport.set(ft.x, ft.y, ft.width, ft.height), I === 0 && F.matrix.copy(dt.matrix), X === true && F.cameras.push(dt);
        }
      }
      for (let ot = 0; ot < w.length; ot++) {
        const X = T[ot], I = w[ot];
        X !== null && I !== void 0 && I.update(X, rt, u || s);
      }
      W && W(at, rt), b = null;
    }
    const pt = new Dd();
    pt.setAnimationLoop(lt), this.setAnimationLoop = function(at) {
      W = at;
    }, this.dispose = function() {
    };
  }
}
function Vb(E, t) {
  function e(m, c) {
    m.fogColor.value.copy(c.color), c.isFog ? (m.fogNear.value = c.near, m.fogFar.value = c.far) : c.isFogExp2 && (m.fogDensity.value = c.density);
  }
  function o(m, c, w, T, P) {
    c.isMeshBasicMaterial || c.isMeshLambertMaterial ? a(m, c) : c.isMeshToonMaterial ? (a(m, c), f(m, c)) : c.isMeshPhongMaterial ? (a(m, c), d(m, c)) : c.isMeshStandardMaterial ? (a(m, c), p(m, c), c.isMeshPhysicalMaterial && g(m, c, P)) : c.isMeshMatcapMaterial ? (a(m, c), b(m, c)) : c.isMeshDepthMaterial ? a(m, c) : c.isMeshDistanceMaterial ? (a(m, c), h(m, c)) : c.isMeshNormalMaterial ? a(m, c) : c.isLineBasicMaterial ? (l(m, c), c.isLineDashedMaterial && s(m, c)) : c.isPointsMaterial ? i(m, c, w, T) : c.isSpriteMaterial ? u(m, c) : c.isShadowMaterial ? (m.color.value.copy(c.color), m.opacity.value = c.opacity) : c.isShaderMaterial && (c.uniformsNeedUpdate = false);
  }
  function a(m, c) {
    m.opacity.value = c.opacity, c.color && m.diffuse.value.copy(c.color), c.emissive && m.emissive.value.copy(c.emissive).multiplyScalar(c.emissiveIntensity), c.map && (m.map.value = c.map), c.alphaMap && (m.alphaMap.value = c.alphaMap), c.bumpMap && (m.bumpMap.value = c.bumpMap, m.bumpScale.value = c.bumpScale, c.side === 1 && (m.bumpScale.value *= -1)), c.displacementMap && (m.displacementMap.value = c.displacementMap, m.displacementScale.value = c.displacementScale, m.displacementBias.value = c.displacementBias), c.emissiveMap && (m.emissiveMap.value = c.emissiveMap), c.normalMap && (m.normalMap.value = c.normalMap, m.normalScale.value.copy(c.normalScale), c.side === 1 && m.normalScale.value.negate()), c.specularMap && (m.specularMap.value = c.specularMap), c.alphaTest > 0 && (m.alphaTest.value = c.alphaTest);
    const w = t.get(c).envMap;
    if (w && (m.envMap.value = w, m.flipEnvMap.value = w.isCubeTexture && w.isRenderTargetTexture === false ? -1 : 1, m.reflectivity.value = c.reflectivity, m.ior.value = c.ior, m.refractionRatio.value = c.refractionRatio), c.lightMap) {
      m.lightMap.value = c.lightMap;
      const k = E.physicallyCorrectLights !== true ? Math.PI : 1;
      m.lightMapIntensity.value = c.lightMapIntensity * k;
    }
    c.aoMap && (m.aoMap.value = c.aoMap, m.aoMapIntensity.value = c.aoMapIntensity);
    let T;
    c.map ? T = c.map : c.specularMap ? T = c.specularMap : c.displacementMap ? T = c.displacementMap : c.normalMap ? T = c.normalMap : c.bumpMap ? T = c.bumpMap : c.roughnessMap ? T = c.roughnessMap : c.metalnessMap ? T = c.metalnessMap : c.alphaMap ? T = c.alphaMap : c.emissiveMap ? T = c.emissiveMap : c.clearcoatMap ? T = c.clearcoatMap : c.clearcoatNormalMap ? T = c.clearcoatNormalMap : c.clearcoatRoughnessMap ? T = c.clearcoatRoughnessMap : c.iridescenceMap ? T = c.iridescenceMap : c.iridescenceThicknessMap ? T = c.iridescenceThicknessMap : c.specularIntensityMap ? T = c.specularIntensityMap : c.specularColorMap ? T = c.specularColorMap : c.transmissionMap ? T = c.transmissionMap : c.thicknessMap ? T = c.thicknessMap : c.sheenColorMap ? T = c.sheenColorMap : c.sheenRoughnessMap && (T = c.sheenRoughnessMap), T !== void 0 && (T.isWebGLRenderTarget && (T = T.texture), T.matrixAutoUpdate === true && T.updateMatrix(), m.uvTransform.value.copy(T.matrix));
    let P;
    c.aoMap ? P = c.aoMap : c.lightMap && (P = c.lightMap), P !== void 0 && (P.isWebGLRenderTarget && (P = P.texture), P.matrixAutoUpdate === true && P.updateMatrix(), m.uv2Transform.value.copy(P.matrix));
  }
  function l(m, c) {
    m.diffuse.value.copy(c.color), m.opacity.value = c.opacity;
  }
  function s(m, c) {
    m.dashSize.value = c.dashSize, m.totalSize.value = c.dashSize + c.gapSize, m.scale.value = c.scale;
  }
  function i(m, c, w, T) {
    m.diffuse.value.copy(c.color), m.opacity.value = c.opacity, m.size.value = c.size * w, m.scale.value = T * 0.5, c.map && (m.map.value = c.map), c.alphaMap && (m.alphaMap.value = c.alphaMap), c.alphaTest > 0 && (m.alphaTest.value = c.alphaTest);
    let P;
    c.map ? P = c.map : c.alphaMap && (P = c.alphaMap), P !== void 0 && (P.matrixAutoUpdate === true && P.updateMatrix(), m.uvTransform.value.copy(P.matrix));
  }
  function u(m, c) {
    m.diffuse.value.copy(c.color), m.opacity.value = c.opacity, m.rotation.value = c.rotation, c.map && (m.map.value = c.map), c.alphaMap && (m.alphaMap.value = c.alphaMap), c.alphaTest > 0 && (m.alphaTest.value = c.alphaTest);
    let w;
    c.map ? w = c.map : c.alphaMap && (w = c.alphaMap), w !== void 0 && (w.matrixAutoUpdate === true && w.updateMatrix(), m.uvTransform.value.copy(w.matrix));
  }
  function d(m, c) {
    m.specular.value.copy(c.specular), m.shininess.value = Math.max(c.shininess, 1e-4);
  }
  function f(m, c) {
    c.gradientMap && (m.gradientMap.value = c.gradientMap);
  }
  function p(m, c) {
    m.roughness.value = c.roughness, m.metalness.value = c.metalness, c.roughnessMap && (m.roughnessMap.value = c.roughnessMap), c.metalnessMap && (m.metalnessMap.value = c.metalnessMap), t.get(c).envMap && (m.envMapIntensity.value = c.envMapIntensity);
  }
  function g(m, c, w) {
    m.ior.value = c.ior, c.sheen > 0 && (m.sheenColor.value.copy(c.sheenColor).multiplyScalar(c.sheen), m.sheenRoughness.value = c.sheenRoughness, c.sheenColorMap && (m.sheenColorMap.value = c.sheenColorMap), c.sheenRoughnessMap && (m.sheenRoughnessMap.value = c.sheenRoughnessMap)), c.clearcoat > 0 && (m.clearcoat.value = c.clearcoat, m.clearcoatRoughness.value = c.clearcoatRoughness, c.clearcoatMap && (m.clearcoatMap.value = c.clearcoatMap), c.clearcoatRoughnessMap && (m.clearcoatRoughnessMap.value = c.clearcoatRoughnessMap), c.clearcoatNormalMap && (m.clearcoatNormalScale.value.copy(c.clearcoatNormalScale), m.clearcoatNormalMap.value = c.clearcoatNormalMap, c.side === 1 && m.clearcoatNormalScale.value.negate())), c.iridescence > 0 && (m.iridescence.value = c.iridescence, m.iridescenceIOR.value = c.iridescenceIOR, m.iridescenceThicknessMinimum.value = c.iridescenceThicknessRange[0], m.iridescenceThicknessMaximum.value = c.iridescenceThicknessRange[1], c.iridescenceMap && (m.iridescenceMap.value = c.iridescenceMap), c.iridescenceThicknessMap && (m.iridescenceThicknessMap.value = c.iridescenceThicknessMap)), c.transmission > 0 && (m.transmission.value = c.transmission, m.transmissionSamplerMap.value = w.texture, m.transmissionSamplerSize.value.set(w.width, w.height), c.transmissionMap && (m.transmissionMap.value = c.transmissionMap), m.thickness.value = c.thickness, c.thicknessMap && (m.thicknessMap.value = c.thicknessMap), m.attenuationDistance.value = c.attenuationDistance, m.attenuationColor.value.copy(c.attenuationColor)), m.specularIntensity.value = c.specularIntensity, m.specularColor.value.copy(c.specularColor), c.specularIntensityMap && (m.specularIntensityMap.value = c.specularIntensityMap), c.specularColorMap && (m.specularColorMap.value = c.specularColorMap);
  }
  function b(m, c) {
    c.matcap && (m.matcap.value = c.matcap);
  }
  function h(m, c) {
    m.referencePosition.value.copy(c.referencePosition), m.nearDistance.value = c.nearDistance, m.farDistance.value = c.farDistance;
  }
  return { refreshFogUniforms: e, refreshMaterialUniforms: o };
}
function zb(E, t, e, o) {
  let a = {}, l = {}, s = [];
  const i = e.isWebGL2 ? E.getParameter(35375) : 0;
  function u(T, P) {
    const k = P.program;
    o.uniformBlockBinding(T, k);
  }
  function d(T, P) {
    let k = a[T.id];
    k === void 0 && (h(T), k = f(T), a[T.id] = k, T.addEventListener("dispose", c));
    const R = P.program;
    o.updateUBOMapping(T, R);
    const F = t.render.frame;
    l[T.id] !== F && (g(T), l[T.id] = F);
  }
  function f(T) {
    const P = p();
    T.__bindingPointIndex = P;
    const k = E.createBuffer(), R = T.__size, F = T.usage;
    return E.bindBuffer(35345, k), E.bufferData(35345, R, F), E.bindBuffer(35345, null), E.bindBufferBase(35345, P, k), k;
  }
  function p() {
    for (let T = 0; T < i; T++) if (s.indexOf(T) === -1) return s.push(T), T;
    return console.error("THREE.WebGLRenderer: Maximum number of simultaneously usable uniforms groups reached."), 0;
  }
  function g(T) {
    const P = a[T.id], k = T.uniforms, R = T.__cache;
    E.bindBuffer(35345, P);
    for (let F = 0, v = k.length; F < v; F++) {
      const U = k[F];
      if (b(U, F, R) === true) {
        const M = U.value, Z = U.__offset;
        typeof M == "number" ? (U.__data[0] = M, E.bufferSubData(35345, Z, U.__data)) : (U.value.isMatrix3 ? (U.__data[0] = U.value.elements[0], U.__data[1] = U.value.elements[1], U.__data[2] = U.value.elements[2], U.__data[3] = U.value.elements[0], U.__data[4] = U.value.elements[3], U.__data[5] = U.value.elements[4], U.__data[6] = U.value.elements[5], U.__data[7] = U.value.elements[0], U.__data[8] = U.value.elements[6], U.__data[9] = U.value.elements[7], U.__data[10] = U.value.elements[8], U.__data[11] = U.value.elements[0]) : M.toArray(U.__data), E.bufferSubData(35345, Z, U.__data));
      }
    }
    E.bindBuffer(35345, null);
  }
  function b(T, P, k) {
    const R = T.value;
    if (k[P] === void 0) return typeof R == "number" ? k[P] = R : k[P] = R.clone(), true;
    if (typeof R == "number") {
      if (k[P] !== R) return k[P] = R, true;
    } else {
      const F = k[P];
      if (F.equals(R) === false) return F.copy(R), true;
    }
    return false;
  }
  function h(T) {
    const P = T.uniforms;
    let k = 0;
    const R = 16;
    let F = 0;
    for (let v = 0, U = P.length; v < U; v++) {
      const M = P[v], Z = m(M);
      if (M.__data = new Float32Array(Z.storage / Float32Array.BYTES_PER_ELEMENT), M.__offset = k, v > 0) {
        F = k % R;
        const D = R - F;
        F !== 0 && D - Z.boundary < 0 && (k += R - F, M.__offset = k);
      }
      k += Z.storage;
    }
    return F = k % R, F > 0 && (k += R - F), T.__size = k, T.__cache = {}, this;
  }
  function m(T) {
    const P = T.value, k = { boundary: 0, storage: 0 };
    return typeof P == "number" ? (k.boundary = 4, k.storage = 4) : P.isVector2 ? (k.boundary = 8, k.storage = 8) : P.isVector3 || P.isColor ? (k.boundary = 16, k.storage = 12) : P.isVector4 ? (k.boundary = 16, k.storage = 16) : P.isMatrix3 ? (k.boundary = 48, k.storage = 48) : P.isMatrix4 ? (k.boundary = 64, k.storage = 64) : P.isTexture ? console.warn("THREE.WebGLRenderer: Texture samplers can not be part of an uniforms group.") : console.warn("THREE.WebGLRenderer: Unsupported uniform value type.", P), k;
  }
  function c(T) {
    const P = T.target;
    P.removeEventListener("dispose", c);
    const k = s.indexOf(P.__bindingPointIndex);
    s.splice(k, 1), E.deleteBuffer(a[P.id]), delete a[P.id], delete l[P.id];
  }
  function w() {
    for (const T in a) E.deleteBuffer(a[T]);
    s = [], a = {}, l = {};
  }
  return { bind: u, update: d, dispose: w };
}
function qb() {
  const E = ql("canvas");
  return E.style.display = "block", E;
}
function qd(E = {}) {
  this.isWebGLRenderer = true;
  const t = E.canvas !== void 0 ? E.canvas : qb(), e = E.context !== void 0 ? E.context : null, o = E.depth !== void 0 ? E.depth : true, a = E.stencil !== void 0 ? E.stencil : true, l = E.antialias !== void 0 ? E.antialias : false, s = E.premultipliedAlpha !== void 0 ? E.premultipliedAlpha : true, i = E.preserveDrawingBuffer !== void 0 ? E.preserveDrawingBuffer : false, u = E.powerPreference !== void 0 ? E.powerPreference : "default", d = E.failIfMajorPerformanceCaveat !== void 0 ? E.failIfMajorPerformanceCaveat : false;
  let f;
  e !== null ? f = e.getContextAttributes().alpha : f = E.alpha !== void 0 ? E.alpha : false;
  let p = null, g = null;
  const b = [], h = [];
  this.domElement = t, this.debug = { checkShaderErrors: true }, this.autoClear = true, this.autoClearColor = true, this.autoClearDepth = true, this.autoClearStencil = true, this.sortObjects = true, this.clippingPlanes = [], this.localClippingEnabled = false, this.outputEncoding = 3e3, this.physicallyCorrectLights = false, this.toneMapping = 0, this.toneMappingExposure = 1, Object.defineProperties(this, { gammaFactor: { get: function() {
    return console.warn("THREE.WebGLRenderer: .gammaFactor has been removed."), 2;
  }, set: function() {
    console.warn("THREE.WebGLRenderer: .gammaFactor has been removed.");
  } } });
  const m = this;
  let c = false, w = 0, T = 0, P = null, k = -1, R = null;
  const F = new Di(), v = new Di();
  let U = null, M = t.width, Z = t.height, D = 1, V = null, S = null;
  const x = new Di(0, 0, M, Z), B = new Di(0, 0, M, Z);
  let W = false;
  const lt = new hp();
  let pt = false, at = false, rt = null;
  const ot = new Fi(), X = new Zo(), I = new Br(), nt = { background: null, fog: null, environment: null, overrideMaterial: null, isScene: true };
  function ft() {
    return P === null ? D : 1;
  }
  let dt = e;
  function Lt(se, rr) {
    for (let Tr = 0; Tr < se.length; Tr++) {
      const mr = se[Tr], Ir = t.getContext(mr, rr);
      if (Ir !== null) return Ir;
    }
    return null;
  }
  try {
    const se = { alpha: true, depth: o, stencil: a, antialias: l, premultipliedAlpha: s, preserveDrawingBuffer: i, powerPreference: u, failIfMajorPerformanceCaveat: d };
    if ("setAttribute" in t && t.setAttribute("data-engine", `three.js r${pp}`), t.addEventListener("webglcontextlost", St, false), t.addEventListener("webglcontextrestored", kt, false), t.addEventListener("webglcontextcreationerror", ct, false), dt === null) {
      const rr = ["webgl2", "webgl", "experimental-webgl"];
      if (m.isWebGL1Renderer === true && rr.shift(), dt = Lt(rr, se), dt === null) throw Lt(rr) ? new Error("Error creating WebGL context with your selected attributes.") : new Error("Error creating WebGL context.");
    }
    dt.getShaderPrecisionFormat === void 0 && (dt.getShaderPrecisionFormat = function() {
      return { rangeMin: 1, rangeMax: 1, precision: 1 };
    });
  } catch (se) {
    throw console.error("THREE.WebGLRenderer: " + se.message), se;
  }
  let $, it, mt, Ot, bt, xt, Ct, Tt, Bt, At, Ut, Vt, oe, te, yt, Mt, O, z, J, tt, H, K, q, _;
  function L() {
    $ = new Jv(dt), it = new Wv(dt, $, E), $.init(it), K = new Nb(dt, $, it), mt = new Bb(dt, $, it), Ot = new r0(), bt = new wb(), xt = new Lb(dt, $, mt, bt, it, K, Ot), Ct = new Kv(m), Tt = new Qv(m), Bt = new hy(dt, it), q = new Hv(dt, $, Bt, it), At = new t0(dt, Bt, Ot, q), Ut = new a0(dt, At, Bt, Ot), J = new i0(dt, it, xt), Mt = new Xv(bt), Vt = new bb(m, Ct, Tt, $, it, q, Mt), oe = new Vb(m, bt), te = new xb(), yt = new Ob($, it), z = new qv(m, Ct, mt, Ut, f, s), O = new Mb(m, Ut, it), _ = new zb(dt, Ot, it, mt), tt = new Gv(dt, $, Ot, it), H = new e0(dt, $, Ot, it), Ot.programs = Vt.programs, m.capabilities = it, m.extensions = $, m.properties = bt, m.renderLists = te, m.shadowMap = O, m.state = mt, m.info = Ot;
  }
  L();
  const et = new jb(m, dt);
  this.xr = et, this.getContext = function() {
    return dt;
  }, this.getContextAttributes = function() {
    return dt.getContextAttributes();
  }, this.forceContextLoss = function() {
    const se = $.get("WEBGL_lose_context");
    se && se.loseContext();
  }, this.forceContextRestore = function() {
    const se = $.get("WEBGL_lose_context");
    se && se.restoreContext();
  }, this.getPixelRatio = function() {
    return D;
  }, this.setPixelRatio = function(se) {
    se !== void 0 && (D = se, this.setSize(M, Z, false));
  }, this.getSize = function(se) {
    return se.set(M, Z);
  }, this.setSize = function(se, rr, Tr) {
    if (et.isPresenting) {
      console.warn("THREE.WebGLRenderer: Can't change size while VR device is presenting.");
      return;
    }
    M = se, Z = rr, t.width = Math.floor(se * D), t.height = Math.floor(rr * D), Tr !== false && (t.style.width = se + "px", t.style.height = rr + "px"), this.setViewport(0, 0, se, rr);
  }, this.getDrawingBufferSize = function(se) {
    return se.set(M * D, Z * D).floor();
  }, this.setDrawingBufferSize = function(se, rr, Tr) {
    M = se, Z = rr, D = Tr, t.width = Math.floor(se * Tr), t.height = Math.floor(rr * Tr), this.setViewport(0, 0, se, rr);
  }, this.getCurrentViewport = function(se) {
    return se.copy(F);
  }, this.getViewport = function(se) {
    return se.copy(x);
  }, this.setViewport = function(se, rr, Tr, mr) {
    se.isVector4 ? x.set(se.x, se.y, se.z, se.w) : x.set(se, rr, Tr, mr), mt.viewport(F.copy(x).multiplyScalar(D).floor());
  }, this.getScissor = function(se) {
    return se.copy(B);
  }, this.setScissor = function(se, rr, Tr, mr) {
    se.isVector4 ? B.set(se.x, se.y, se.z, se.w) : B.set(se, rr, Tr, mr), mt.scissor(v.copy(B).multiplyScalar(D).floor());
  }, this.getScissorTest = function() {
    return W;
  }, this.setScissorTest = function(se) {
    mt.setScissorTest(W = se);
  }, this.setOpaqueSort = function(se) {
    V = se;
  }, this.setTransparentSort = function(se) {
    S = se;
  }, this.getClearColor = function(se) {
    return se.copy(z.getClearColor());
  }, this.setClearColor = function() {
    z.setClearColor.apply(z, arguments);
  }, this.getClearAlpha = function() {
    return z.getClearAlpha();
  }, this.setClearAlpha = function() {
    z.setClearAlpha.apply(z, arguments);
  }, this.clear = function(se = true, rr = true, Tr = true) {
    let mr = 0;
    se && (mr |= 16384), rr && (mr |= 256), Tr && (mr |= 1024), dt.clear(mr);
  }, this.clearColor = function() {
    this.clear(true, false, false);
  }, this.clearDepth = function() {
    this.clear(false, true, false);
  }, this.clearStencil = function() {
    this.clear(false, false, true);
  }, this.dispose = function() {
    t.removeEventListener("webglcontextlost", St, false), t.removeEventListener("webglcontextrestored", kt, false), t.removeEventListener("webglcontextcreationerror", ct, false), te.dispose(), yt.dispose(), bt.dispose(), Ct.dispose(), Tt.dispose(), Ut.dispose(), q.dispose(), _.dispose(), Vt.dispose(), et.dispose(), et.removeEventListener("sessionstart", wt), et.removeEventListener("sessionend", Jt), rt && (rt.dispose(), rt = null), Ee.stop();
  };
  function St(se) {
    se.preventDefault(), console.log("THREE.WebGLRenderer: Context Lost."), c = true;
  }
  function kt() {
    console.log("THREE.WebGLRenderer: Context Restored."), c = false;
    const se = Ot.autoReset, rr = O.enabled, Tr = O.autoUpdate, mr = O.needsUpdate, Ir = O.type;
    L(), Ot.autoReset = se, O.enabled = rr, O.autoUpdate = Tr, O.needsUpdate = mr, O.type = Ir;
  }
  function ct(se) {
    console.error("THREE.WebGLRenderer: A WebGL context could not be created. Reason: ", se.statusMessage);
  }
  function j(se) {
    const rr = se.target;
    rr.removeEventListener("dispose", j), ut(rr);
  }
  function ut(se) {
    gt(se), bt.remove(se);
  }
  function gt(se) {
    const rr = bt.get(se).programs;
    rr !== void 0 && (rr.forEach(function(Tr) {
      Vt.releaseProgram(Tr);
    }), se.isShaderMaterial && Vt.releaseShaderCache(se));
  }
  this.renderBufferDirect = function(se, rr, Tr, mr, Ir, En) {
    rr === null && (rr = nt);
    const An = Ir.isMesh && Ir.matrixWorld.determinant() < 0, _n = eo(se, rr, Tr, mr, Ir);
    mt.setMaterial(mr, An);
    let Nn = Tr.index;
    const Zn = Tr.attributes.position;
    if (Nn === null) {
      if (Zn === void 0 || Zn.count === 0) return;
    } else if (Nn.count === 0) return;
    let Jn = 1;
    mr.wireframe === true && (Nn = At.getWireframeAttribute(Tr), Jn = 2), q.setup(Ir, mr, _n, Tr, Nn);
    let Hn, uo = tt;
    Nn !== null && (Hn = Bt.get(Nn), uo = H, uo.setIndex(Hn));
    const Oo = Nn !== null ? Nn.count : Zn.count, jo = Tr.drawRange.start * Jn, Bo = Tr.drawRange.count * Jn, Po = En !== null ? En.start * Jn : 0, yo = En !== null ? En.count * Jn : 1 / 0, ri = Math.max(jo, Po), Eo = Math.min(Oo, jo + Bo, Po + yo) - 1, Ao = Math.max(0, Eo - ri + 1);
    if (Ao !== 0) {
      if (Ir.isMesh) mr.wireframe === true ? (mt.setLineWidth(mr.wireframeLinewidth * ft()), uo.setMode(1)) : uo.setMode(4);
      else if (Ir.isLine) {
        let ti = mr.linewidth;
        ti === void 0 && (ti = 1), mt.setLineWidth(ti * ft()), Ir.isLineSegments ? uo.setMode(1) : Ir.isLineLoop ? uo.setMode(2) : uo.setMode(3);
      } else Ir.isPoints ? uo.setMode(0) : Ir.isSprite && uo.setMode(4);
      if (Ir.isInstancedMesh) uo.renderInstances(ri, Ao, Ir.count);
      else if (Tr.isInstancedBufferGeometry) {
        const ti = Math.min(Tr.instanceCount, Tr._maxInstanceCount);
        uo.renderInstances(ri, Ao, ti);
      } else uo.render(ri, Ao);
    }
  }, this.compile = function(se, rr) {
    g = yt.get(se), g.init(), h.push(g), se.traverseVisible(function(Tr) {
      Tr.isLight && Tr.layers.test(rr.layers) && (g.pushLight(Tr), Tr.castShadow && g.pushShadow(Tr));
    }), g.setupLights(m.physicallyCorrectLights), se.traverse(function(Tr) {
      const mr = Tr.material;
      if (mr) if (Array.isArray(mr)) for (let Ir = 0; Ir < mr.length; Ir++) {
        const En = mr[Ir];
        qn(En, se, Tr);
      }
      else qn(mr, se, Tr);
    }), h.pop(), g = null;
  };
  let $t = null;
  function Ht(se) {
    $t && $t(se);
  }
  function wt() {
    Ee.stop();
  }
  function Jt() {
    Ee.start();
  }
  const Ee = new Dd();
  Ee.setAnimationLoop(Ht), typeof self < "u" && Ee.setContext(self), this.setAnimationLoop = function(se) {
    $t = se, et.setAnimationLoop(se), se === null ? Ee.stop() : Ee.start();
  }, et.addEventListener("sessionstart", wt), et.addEventListener("sessionend", Jt), this.render = function(se, rr) {
    if (rr !== void 0 && rr.isCamera !== true) {
      console.error("THREE.WebGLRenderer.render: camera is not an instance of THREE.Camera.");
      return;
    }
    if (c === true) return;
    se.autoUpdate === true && se.updateMatrixWorld(), rr.parent === null && rr.updateMatrixWorld(), et.enabled === true && et.isPresenting === true && (et.cameraAutoUpdate === true && et.updateCamera(rr), rr = et.getCamera()), se.isScene === true && se.onBeforeRender(m, se, rr, P), g = yt.get(se, h.length), g.init(), h.push(g), ot.multiplyMatrices(rr.projectionMatrix, rr.matrixWorldInverse), lt.setFromProjectionMatrix(ot), at = this.localClippingEnabled, pt = Mt.init(this.clippingPlanes, at, rr), p = te.get(se, b.length), p.init(), b.push(p), cr(se, rr, 0, m.sortObjects), p.finish(), m.sortObjects === true && p.sort(V, S), pt === true && Mt.beginShadows();
    const Tr = g.state.shadowsArray;
    if (O.render(Tr, se, rr), pt === true && Mt.endShadows(), this.info.autoReset === true && this.info.reset(), z.render(p, se), g.setupLights(m.physicallyCorrectLights), rr.isArrayCamera) {
      const mr = rr.cameras;
      for (let Ir = 0, En = mr.length; Ir < En; Ir++) {
        const An = mr[Ir];
        Lr(p, se, An, An.viewport);
      }
    } else Lr(p, se, rr);
    P !== null && (xt.updateMultisampleRenderTarget(P), xt.updateRenderTargetMipmap(P)), se.isScene === true && se.onAfterRender(m, se, rr), q.resetDefaultState(), k = -1, R = null, h.pop(), h.length > 0 ? g = h[h.length - 1] : g = null, b.pop(), b.length > 0 ? p = b[b.length - 1] : p = null;
  };
  function cr(se, rr, Tr, mr) {
    if (se.visible === false) return;
    if (se.layers.test(rr.layers)) {
      if (se.isGroup) Tr = se.renderOrder;
      else if (se.isLOD) se.autoUpdate === true && se.update(rr);
      else if (se.isLight) g.pushLight(se), se.castShadow && g.pushShadow(se);
      else if (se.isSprite) {
        if (!se.frustumCulled || lt.intersectsSprite(se)) {
          mr && I.setFromMatrixPosition(se.matrixWorld).applyMatrix4(ot);
          const En = Ut.update(se), An = se.material;
          An.visible && p.push(se, En, An, Tr, I.z, null);
        }
      } else if ((se.isMesh || se.isLine || se.isPoints) && (se.isSkinnedMesh && se.skeleton.frame !== Ot.render.frame && (se.skeleton.update(), se.skeleton.frame = Ot.render.frame), !se.frustumCulled || lt.intersectsObject(se))) {
        mr && I.setFromMatrixPosition(se.matrixWorld).applyMatrix4(ot);
        const En = Ut.update(se), An = se.material;
        if (Array.isArray(An)) {
          const _n = En.groups;
          for (let Nn = 0, Zn = _n.length; Nn < Zn; Nn++) {
            const Jn = _n[Nn], Hn = An[Jn.materialIndex];
            Hn && Hn.visible && p.push(se, En, Hn, Tr, I.z, Jn);
          }
        } else An.visible && p.push(se, En, An, Tr, I.z, null);
      }
    }
    const Ir = se.children;
    for (let En = 0, An = Ir.length; En < An; En++) cr(Ir[En], rr, Tr, mr);
  }
  function Lr(se, rr, Tr, mr) {
    const Ir = se.opaque, En = se.transmissive, An = se.transparent;
    g.setupLightsView(Tr), En.length > 0 && on(Ir, rr, Tr), mr && mt.viewport(F.copy(mr)), Ir.length > 0 && Zr(Ir, rr, Tr), En.length > 0 && Zr(En, rr, Tr), An.length > 0 && Zr(An, rr, Tr), mt.buffers.depth.setTest(true), mt.buffers.depth.setMask(true), mt.buffers.color.setMask(true), mt.setPolygonOffset(false);
  }
  function on(se, rr, Tr) {
    const mr = it.isWebGL2;
    rt === null && (rt = new Qs(1, 1, { generateMipmaps: true, type: $.has("EXT_color_buffer_half_float") ? 1016 : 1009, minFilter: 1008, samples: mr && l === true ? 4 : 0 })), m.getDrawingBufferSize(X), mr ? rt.setSize(X.x, X.y) : rt.setSize(Jf(X.x), Jf(X.y));
    const Ir = m.getRenderTarget();
    m.setRenderTarget(rt), m.clear();
    const En = m.toneMapping;
    m.toneMapping = 0, Zr(se, rr, Tr), m.toneMapping = En, xt.updateMultisampleRenderTarget(rt), xt.updateRenderTargetMipmap(rt), m.setRenderTarget(Ir);
  }
  function Zr(se, rr, Tr) {
    const mr = rr.isScene === true ? rr.overrideMaterial : null;
    for (let Ir = 0, En = se.length; Ir < En; Ir++) {
      const An = se[Ir], _n = An.object, Nn = An.geometry, Zn = mr === null ? An.material : mr, Jn = An.group;
      _n.layers.test(Tr.layers) && to(_n, rr, Tr, Nn, Zn, Jn);
    }
  }
  function to(se, rr, Tr, mr, Ir, En) {
    se.onBeforeRender(m, rr, Tr, mr, Ir, En), se.modelViewMatrix.multiplyMatrices(Tr.matrixWorldInverse, se.matrixWorld), se.normalMatrix.getNormalMatrix(se.modelViewMatrix), Ir.onBeforeRender(m, rr, Tr, mr, se, En), Ir.transparent === true && Ir.side === 2 ? (Ir.side = 1, Ir.needsUpdate = true, m.renderBufferDirect(Tr, rr, mr, Ir, se, En), Ir.side = 0, Ir.needsUpdate = true, m.renderBufferDirect(Tr, rr, mr, Ir, se, En), Ir.side = 2) : m.renderBufferDirect(Tr, rr, mr, Ir, se, En), se.onAfterRender(m, rr, Tr, mr, Ir, En);
  }
  function qn(se, rr, Tr) {
    rr.isScene !== true && (rr = nt);
    const mr = bt.get(se), Ir = g.state.lights, En = g.state.shadowsArray, An = Ir.state.version, _n = Vt.getParameters(se, Ir.state, En, rr, Tr), Nn = Vt.getProgramCacheKey(_n);
    let Zn = mr.programs;
    mr.environment = se.isMeshStandardMaterial ? rr.environment : null, mr.fog = rr.fog, mr.envMap = (se.isMeshStandardMaterial ? Tt : Ct).get(se.envMap || mr.environment), Zn === void 0 && (se.addEventListener("dispose", j), Zn = /* @__PURE__ */ new Map(), mr.programs = Zn);
    let Jn = Zn.get(Nn);
    if (Jn !== void 0) {
      if (mr.currentProgram === Jn && mr.lightsStateVersion === An) return jn(se, _n), Jn;
    } else _n.uniforms = Vt.getUniforms(se), se.onBuild(Tr, _n, m), se.onBeforeCompile(_n, m), Jn = Vt.acquireProgram(_n, Nn), Zn.set(Nn, Jn), mr.uniforms = _n.uniforms;
    const Hn = mr.uniforms;
    (!se.isShaderMaterial && !se.isRawShaderMaterial || se.clipping === true) && (Hn.clippingPlanes = Mt.uniform), jn(se, _n), mr.needsLights = Dn(se), mr.lightsStateVersion = An, mr.needsLights && (Hn.ambientLightColor.value = Ir.state.ambient, Hn.lightProbe.value = Ir.state.probe, Hn.directionalLights.value = Ir.state.directional, Hn.directionalLightShadows.value = Ir.state.directionalShadow, Hn.spotLights.value = Ir.state.spot, Hn.spotLightShadows.value = Ir.state.spotShadow, Hn.rectAreaLights.value = Ir.state.rectArea, Hn.ltc_1.value = Ir.state.rectAreaLTC1, Hn.ltc_2.value = Ir.state.rectAreaLTC2, Hn.pointLights.value = Ir.state.point, Hn.pointLightShadows.value = Ir.state.pointShadow, Hn.hemisphereLights.value = Ir.state.hemi, Hn.directionalShadowMap.value = Ir.state.directionalShadowMap, Hn.directionalShadowMatrix.value = Ir.state.directionalShadowMatrix, Hn.spotShadowMap.value = Ir.state.spotShadowMap, Hn.spotShadowMatrix.value = Ir.state.spotShadowMatrix, Hn.pointShadowMap.value = Ir.state.pointShadowMap, Hn.pointShadowMatrix.value = Ir.state.pointShadowMatrix);
    const uo = Jn.getUniforms(), Oo = Ll.seqWithValue(uo.seq, Hn);
    return mr.currentProgram = Jn, mr.uniformsList = Oo, Jn;
  }
  function jn(se, rr) {
    const Tr = bt.get(se);
    Tr.outputEncoding = rr.outputEncoding, Tr.instancing = rr.instancing, Tr.skinning = rr.skinning, Tr.morphTargets = rr.morphTargets, Tr.morphNormals = rr.morphNormals, Tr.morphColors = rr.morphColors, Tr.morphTargetsCount = rr.morphTargetsCount, Tr.numClippingPlanes = rr.numClippingPlanes, Tr.numIntersection = rr.numClipIntersection, Tr.vertexAlphas = rr.vertexAlphas, Tr.vertexTangents = rr.vertexTangents, Tr.toneMapping = rr.toneMapping;
  }
  function eo(se, rr, Tr, mr, Ir) {
    rr.isScene !== true && (rr = nt), xt.resetTextureUnits();
    const En = rr.fog, An = mr.isMeshStandardMaterial ? rr.environment : null, _n = P === null ? m.outputEncoding : P.isXRRenderTarget === true ? P.texture.encoding : 3e3, Nn = (mr.isMeshStandardMaterial ? Tt : Ct).get(mr.envMap || An), Zn = mr.vertexColors === true && !!Tr.attributes.color && Tr.attributes.color.itemSize === 4, Jn = !!mr.normalMap && !!Tr.attributes.tangent, Hn = !!Tr.morphAttributes.position, uo = !!Tr.morphAttributes.normal, Oo = !!Tr.morphAttributes.color, jo = mr.toneMapped ? m.toneMapping : 0, Bo = Tr.morphAttributes.position || Tr.morphAttributes.normal || Tr.morphAttributes.color, Po = Bo !== void 0 ? Bo.length : 0, yo = bt.get(mr), ri = g.state.lights;
    if (pt === true && (at === true || se !== R)) {
      const Co = se === R && mr.id === k;
      Mt.setState(mr, se, Co);
    }
    let Eo = false;
    mr.version === yo.__version ? (yo.needsLights && yo.lightsStateVersion !== ri.state.version || yo.outputEncoding !== _n || Ir.isInstancedMesh && yo.instancing === false || !Ir.isInstancedMesh && yo.instancing === true || Ir.isSkinnedMesh && yo.skinning === false || !Ir.isSkinnedMesh && yo.skinning === true || yo.envMap !== Nn || mr.fog === true && yo.fog !== En || yo.numClippingPlanes !== void 0 && (yo.numClippingPlanes !== Mt.numPlanes || yo.numIntersection !== Mt.numIntersection) || yo.vertexAlphas !== Zn || yo.vertexTangents !== Jn || yo.morphTargets !== Hn || yo.morphNormals !== uo || yo.morphColors !== Oo || yo.toneMapping !== jo || it.isWebGL2 === true && yo.morphTargetsCount !== Po) && (Eo = true) : (Eo = true, yo.__version = mr.version);
    let Ao = yo.currentProgram;
    Eo === true && (Ao = qn(mr, rr, Ir));
    let ti = false, li = false, pi = false;
    const Ho = Ao.getUniforms(), ai = yo.uniforms;
    if (mt.useProgram(Ao.program) && (ti = true, li = true, pi = true), mr.id !== k && (k = mr.id, li = true), ti || R !== se) {
      if (Ho.setValue(dt, "projectionMatrix", se.projectionMatrix), it.logarithmicDepthBuffer && Ho.setValue(dt, "logDepthBufFC", 2 / (Math.log(se.far + 1) / Math.LN2)), R !== se && (R = se, li = true, pi = true), mr.isShaderMaterial || mr.isMeshPhongMaterial || mr.isMeshToonMaterial || mr.isMeshStandardMaterial || mr.envMap) {
        const Co = Ho.map.cameraPosition;
        Co !== void 0 && Co.setValue(dt, I.setFromMatrixPosition(se.matrixWorld));
      }
      (mr.isMeshPhongMaterial || mr.isMeshToonMaterial || mr.isMeshLambertMaterial || mr.isMeshBasicMaterial || mr.isMeshStandardMaterial || mr.isShaderMaterial) && Ho.setValue(dt, "isOrthographic", se.isOrthographicCamera === true), (mr.isMeshPhongMaterial || mr.isMeshToonMaterial || mr.isMeshLambertMaterial || mr.isMeshBasicMaterial || mr.isMeshStandardMaterial || mr.isShaderMaterial || mr.isShadowMaterial || Ir.isSkinnedMesh) && Ho.setValue(dt, "viewMatrix", se.matrixWorldInverse);
    }
    if (Ir.isSkinnedMesh) {
      Ho.setOptional(dt, Ir, "bindMatrix"), Ho.setOptional(dt, Ir, "bindMatrixInverse");
      const Co = Ir.skeleton;
      Co && (it.floatVertexTextures ? (Co.boneTexture === null && Co.computeBoneTexture(), Ho.setValue(dt, "boneTexture", Co.boneTexture, xt), Ho.setValue(dt, "boneTextureSize", Co.boneTextureSize)) : console.warn("THREE.WebGLRenderer: SkinnedMesh can only be used with WebGL 2. With WebGL 1 OES_texture_float and vertex textures support is required."));
    }
    const hi = Tr.morphAttributes;
    if ((hi.position !== void 0 || hi.normal !== void 0 || hi.color !== void 0 && it.isWebGL2 === true) && J.update(Ir, Tr, mr, Ao), (li || yo.receiveShadow !== Ir.receiveShadow) && (yo.receiveShadow = Ir.receiveShadow, Ho.setValue(dt, "receiveShadow", Ir.receiveShadow)), li && (Ho.setValue(dt, "toneMappingExposure", m.toneMappingExposure), yo.needsLights && no(ai, pi), En && mr.fog === true && oe.refreshFogUniforms(ai, En), oe.refreshMaterialUniforms(ai, mr, D, Z, rt), Ll.upload(dt, yo.uniformsList, ai, xt)), mr.isShaderMaterial && mr.uniformsNeedUpdate === true && (Ll.upload(dt, yo.uniformsList, ai, xt), mr.uniformsNeedUpdate = false), mr.isSpriteMaterial && Ho.setValue(dt, "center", Ir.center), Ho.setValue(dt, "modelViewMatrix", Ir.modelViewMatrix), Ho.setValue(dt, "normalMatrix", Ir.normalMatrix), Ho.setValue(dt, "modelMatrix", Ir.matrixWorld), mr.isShaderMaterial || mr.isRawShaderMaterial) {
      const Co = mr.uniformsGroups;
      for (let Wo = 0, qt = Co.length; Wo < qt; Wo++) if (it.isWebGL2) {
        const Nt = Co[Wo];
        _.update(Nt, Ao), _.bind(Nt, Ao);
      } else console.warn("THREE.WebGLRenderer: Uniform Buffer Objects can only be used with WebGL 2.");
    }
    return Ao;
  }
  function no(se, rr) {
    se.ambientLightColor.needsUpdate = rr, se.lightProbe.needsUpdate = rr, se.directionalLights.needsUpdate = rr, se.directionalLightShadows.needsUpdate = rr, se.pointLights.needsUpdate = rr, se.pointLightShadows.needsUpdate = rr, se.spotLights.needsUpdate = rr, se.spotLightShadows.needsUpdate = rr, se.rectAreaLights.needsUpdate = rr, se.hemisphereLights.needsUpdate = rr;
  }
  function Dn(se) {
    return se.isMeshLambertMaterial || se.isMeshToonMaterial || se.isMeshPhongMaterial || se.isMeshStandardMaterial || se.isShadowMaterial || se.isShaderMaterial && se.lights === true;
  }
  this.getActiveCubeFace = function() {
    return w;
  }, this.getActiveMipmapLevel = function() {
    return T;
  }, this.getRenderTarget = function() {
    return P;
  }, this.setRenderTargetTextures = function(se, rr, Tr) {
    bt.get(se.texture).__webglTexture = rr, bt.get(se.depthTexture).__webglTexture = Tr;
    const mr = bt.get(se);
    mr.__hasExternalTextures = true, mr.__hasExternalTextures && (mr.__autoAllocateDepthBuffer = Tr === void 0, mr.__autoAllocateDepthBuffer || $.has("WEBGL_multisampled_render_to_texture") === true && (console.warn("THREE.WebGLRenderer: Render-to-texture extension was disabled because an external texture was provided"), mr.__useRenderToTexture = false));
  }, this.setRenderTargetFramebuffer = function(se, rr) {
    const Tr = bt.get(se);
    Tr.__webglFramebuffer = rr, Tr.__useDefaultFramebuffer = rr === void 0;
  }, this.setRenderTarget = function(se, rr = 0, Tr = 0) {
    P = se, w = rr, T = Tr;
    let mr = true;
    if (se) {
      const _n = bt.get(se);
      _n.__useDefaultFramebuffer !== void 0 ? (mt.bindFramebuffer(36160, null), mr = false) : _n.__webglFramebuffer === void 0 ? xt.setupRenderTarget(se) : _n.__hasExternalTextures && xt.rebindTextures(se, bt.get(se.texture).__webglTexture, bt.get(se.depthTexture).__webglTexture);
    }
    let Ir = null, En = false, An = false;
    if (se) {
      const _n = se.texture;
      (_n.isData3DTexture || _n.isDataArrayTexture) && (An = true);
      const Nn = bt.get(se).__webglFramebuffer;
      se.isWebGLCubeRenderTarget ? (Ir = Nn[rr], En = true) : it.isWebGL2 && se.samples > 0 && xt.useMultisampledRTT(se) === false ? Ir = bt.get(se).__webglMultisampledFramebuffer : Ir = Nn, F.copy(se.viewport), v.copy(se.scissor), U = se.scissorTest;
    } else F.copy(x).multiplyScalar(D).floor(), v.copy(B).multiplyScalar(D).floor(), U = W;
    if (mt.bindFramebuffer(36160, Ir) && it.drawBuffers && mr && mt.drawBuffers(se, Ir), mt.viewport(F), mt.scissor(v), mt.setScissorTest(U), En) {
      const _n = bt.get(se.texture);
      dt.framebufferTexture2D(36160, 36064, 34069 + rr, _n.__webglTexture, Tr);
    } else if (An) {
      const _n = bt.get(se.texture), Nn = rr || 0;
      dt.framebufferTextureLayer(36160, 36064, _n.__webglTexture, Tr || 0, Nn);
    }
    k = -1;
  }, this.readRenderTargetPixels = function(se, rr, Tr, mr, Ir, En, An) {
    if (!(se && se.isWebGLRenderTarget)) {
      console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not THREE.WebGLRenderTarget.");
      return;
    }
    let _n = bt.get(se).__webglFramebuffer;
    if (se.isWebGLCubeRenderTarget && An !== void 0 && (_n = _n[An]), _n) {
      mt.bindFramebuffer(36160, _n);
      try {
        const Nn = se.texture, Zn = Nn.format, Jn = Nn.type;
        if (Zn !== 1023 && K.convert(Zn) !== dt.getParameter(35739)) {
          console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in RGBA or implementation defined format.");
          return;
        }
        const Hn = Jn === 1016 && ($.has("EXT_color_buffer_half_float") || it.isWebGL2 && $.has("EXT_color_buffer_float"));
        if (Jn !== 1009 && K.convert(Jn) !== dt.getParameter(35738) && !(Jn === 1015 && (it.isWebGL2 || $.has("OES_texture_float") || $.has("WEBGL_color_buffer_float"))) && !Hn) {
          console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in UnsignedByteType or implementation defined type.");
          return;
        }
        rr >= 0 && rr <= se.width - mr && Tr >= 0 && Tr <= se.height - Ir && dt.readPixels(rr, Tr, mr, Ir, K.convert(Zn), K.convert(Jn), En);
      } finally {
        const Nn = P !== null ? bt.get(P).__webglFramebuffer : null;
        mt.bindFramebuffer(36160, Nn);
      }
    }
  }, this.copyFramebufferToTexture = function(se, rr, Tr = 0) {
    const mr = Math.pow(2, -Tr), Ir = Math.floor(rr.image.width * mr), En = Math.floor(rr.image.height * mr);
    xt.setTexture2D(rr, 0), dt.copyTexSubImage2D(3553, Tr, 0, 0, se.x, se.y, Ir, En), mt.unbindTexture();
  }, this.copyTextureToTexture = function(se, rr, Tr, mr = 0) {
    const Ir = rr.image.width, En = rr.image.height, An = K.convert(Tr.format), _n = K.convert(Tr.type);
    xt.setTexture2D(Tr, 0), dt.pixelStorei(37440, Tr.flipY), dt.pixelStorei(37441, Tr.premultiplyAlpha), dt.pixelStorei(3317, Tr.unpackAlignment), rr.isDataTexture ? dt.texSubImage2D(3553, mr, se.x, se.y, Ir, En, An, _n, rr.image.data) : rr.isCompressedTexture ? dt.compressedTexSubImage2D(3553, mr, se.x, se.y, rr.mipmaps[0].width, rr.mipmaps[0].height, An, rr.mipmaps[0].data) : dt.texSubImage2D(3553, mr, se.x, se.y, An, _n, rr.image), mr === 0 && Tr.generateMipmaps && dt.generateMipmap(3553), mt.unbindTexture();
  }, this.copyTextureToTexture3D = function(se, rr, Tr, mr, Ir = 0) {
    if (m.isWebGL1Renderer) {
      console.warn("THREE.WebGLRenderer.copyTextureToTexture3D: can only be used with WebGL2.");
      return;
    }
    const En = se.max.x - se.min.x + 1, An = se.max.y - se.min.y + 1, _n = se.max.z - se.min.z + 1, Nn = K.convert(mr.format), Zn = K.convert(mr.type);
    let Jn;
    if (mr.isData3DTexture) xt.setTexture3D(mr, 0), Jn = 32879;
    else if (mr.isDataArrayTexture) xt.setTexture2DArray(mr, 0), Jn = 35866;
    else {
      console.warn("THREE.WebGLRenderer.copyTextureToTexture3D: only supports THREE.DataTexture3D and THREE.DataTexture2DArray.");
      return;
    }
    dt.pixelStorei(37440, mr.flipY), dt.pixelStorei(37441, mr.premultiplyAlpha), dt.pixelStorei(3317, mr.unpackAlignment);
    const Hn = dt.getParameter(3314), uo = dt.getParameter(32878), Oo = dt.getParameter(3316), jo = dt.getParameter(3315), Bo = dt.getParameter(32877), Po = Tr.isCompressedTexture ? Tr.mipmaps[0] : Tr.image;
    dt.pixelStorei(3314, Po.width), dt.pixelStorei(32878, Po.height), dt.pixelStorei(3316, se.min.x), dt.pixelStorei(3315, se.min.y), dt.pixelStorei(32877, se.min.z), Tr.isDataTexture || Tr.isData3DTexture ? dt.texSubImage3D(Jn, Ir, rr.x, rr.y, rr.z, En, An, _n, Nn, Zn, Po.data) : Tr.isCompressedTexture ? (console.warn("THREE.WebGLRenderer.copyTextureToTexture3D: untested support for compressed srcTexture."), dt.compressedTexSubImage3D(Jn, Ir, rr.x, rr.y, rr.z, En, An, _n, Nn, Po.data)) : dt.texSubImage3D(Jn, Ir, rr.x, rr.y, rr.z, En, An, _n, Nn, Zn, Po), dt.pixelStorei(3314, Hn), dt.pixelStorei(32878, uo), dt.pixelStorei(3316, Oo), dt.pixelStorei(3315, jo), dt.pixelStorei(32877, Bo), Ir === 0 && mr.generateMipmaps && dt.generateMipmap(Jn), mt.unbindTexture();
  }, this.initTexture = function(se) {
    se.isCubeTexture ? xt.setTextureCube(se, 0) : se.isData3DTexture ? xt.setTexture3D(se, 0) : se.isDataArrayTexture ? xt.setTexture2DArray(se, 0) : xt.setTexture2D(se, 0), mt.unbindTexture();
  }, this.resetState = function() {
    w = 0, T = 0, P = null, mt.reset(), q.reset();
  }, typeof __THREE_DEVTOOLS__ < "u" && __THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("observe", { detail: this }));
}
class Hb extends qd {
}
Hb.prototype.isWebGL1Renderer = true;
class Gb extends Zi {
  constructor() {
    super(), this.isScene = true, this.type = "Scene", this.background = null, this.environment = null, this.fog = null, this.overrideMaterial = null, this.autoUpdate = true, typeof __THREE_DEVTOOLS__ < "u" && __THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("observe", { detail: this }));
  }
  copy(t, e) {
    return super.copy(t, e), t.background !== null && (this.background = t.background.clone()), t.environment !== null && (this.environment = t.environment.clone()), t.fog !== null && (this.fog = t.fog.clone()), t.overrideMaterial !== null && (this.overrideMaterial = t.overrideMaterial.clone()), this.autoUpdate = t.autoUpdate, this.matrixAutoUpdate = t.matrixAutoUpdate, this;
  }
  toJSON(t) {
    const e = super.toJSON(t);
    return this.fog !== null && (e.object.fog = this.fog.toJSON()), e;
  }
}
class Lh extends ca {
  constructor(t, e, o, a, l, s, i, u, d) {
    super(t, e, o, a, l, s, i, u, d), this.isCanvasTexture = true, this.needsUpdate = true;
  }
}
class mp extends ja {
  constructor(t = 1, e = 1, o = 1, a = 8, l = 1, s = false, i = 0, u = Math.PI * 2) {
    super(), this.type = "CylinderGeometry", this.parameters = { radiusTop: t, radiusBottom: e, height: o, radialSegments: a, heightSegments: l, openEnded: s, thetaStart: i, thetaLength: u };
    const d = this;
    a = Math.floor(a), l = Math.floor(l);
    const f = [], p = [], g = [], b = [];
    let h = 0;
    const m = [], c = o / 2;
    let w = 0;
    T(), s === false && (t > 0 && P(true), e > 0 && P(false)), this.setIndex(f), this.setAttribute("position", new Gi(p, 3)), this.setAttribute("normal", new Gi(g, 3)), this.setAttribute("uv", new Gi(b, 2));
    function T() {
      const k = new Br(), R = new Br();
      let F = 0;
      const v = (e - t) / o;
      for (let U = 0; U <= l; U++) {
        const M = [], Z = U / l, D = Z * (e - t) + t;
        for (let V = 0; V <= a; V++) {
          const S = V / a, x = S * u + i, B = Math.sin(x), W = Math.cos(x);
          R.x = D * B, R.y = -Z * o + c, R.z = D * W, p.push(R.x, R.y, R.z), k.set(B, v, W).normalize(), g.push(k.x, k.y, k.z), b.push(S, 1 - Z), M.push(h++);
        }
        m.push(M);
      }
      for (let U = 0; U < a; U++) for (let M = 0; M < l; M++) {
        const Z = m[M][U], D = m[M + 1][U], V = m[M + 1][U + 1], S = m[M][U + 1];
        f.push(Z, D, S), f.push(D, V, S), F += 6;
      }
      d.addGroup(w, F, 0), w += F;
    }
    function P(k) {
      const R = h, F = new Zo(), v = new Br();
      let U = 0;
      const M = k === true ? t : e, Z = k === true ? 1 : -1;
      for (let V = 1; V <= a; V++) p.push(0, c * Z, 0), g.push(0, Z, 0), b.push(0.5, 0.5), h++;
      const D = h;
      for (let V = 0; V <= a; V++) {
        const S = V / a * u + i, x = Math.cos(S), B = Math.sin(S);
        v.x = M * B, v.y = c * Z, v.z = M * x, p.push(v.x, v.y, v.z), g.push(0, Z, 0), F.x = x * 0.5 + 0.5, F.y = B * 0.5 * Z + 0.5, b.push(F.x, F.y), h++;
      }
      for (let V = 0; V < a; V++) {
        const S = R + V, x = D + V;
        k === true ? f.push(x, x + 1, S) : f.push(x + 1, x, S), U += 3;
      }
      d.addGroup(w, U, k === true ? 1 : 2), w += U;
    }
  }
  static fromJSON(t) {
    return new mp(t.radiusTop, t.radiusBottom, t.height, t.radialSegments, t.heightSegments, t.openEnded, t.thetaStart, t.thetaLength);
  }
}
class Wb extends tu {
  constructor(t) {
    super(), this.isShadowMaterial = true, this.type = "ShadowMaterial", this.color = new Yo(0), this.transparent = true, this.fog = true, this.setValues(t);
  }
  copy(t) {
    return super.copy(t), this.color.copy(t.color), this.fog = t.fog, this;
  }
}
class Xb extends tu {
  constructor(t) {
    super(), this.isMeshStandardMaterial = true, this.defines = { STANDARD: "" }, this.type = "MeshStandardMaterial", this.color = new Yo(16777215), this.roughness = 1, this.metalness = 0, this.map = null, this.lightMap = null, this.lightMapIntensity = 1, this.aoMap = null, this.aoMapIntensity = 1, this.emissive = new Yo(0), this.emissiveIntensity = 1, this.emissiveMap = null, this.bumpMap = null, this.bumpScale = 1, this.normalMap = null, this.normalMapType = 0, this.normalScale = new Zo(1, 1), this.displacementMap = null, this.displacementScale = 1, this.displacementBias = 0, this.roughnessMap = null, this.metalnessMap = null, this.alphaMap = null, this.envMap = null, this.envMapIntensity = 1, this.wireframe = false, this.wireframeLinewidth = 1, this.wireframeLinecap = "round", this.wireframeLinejoin = "round", this.flatShading = false, this.fog = true, this.setValues(t);
  }
  copy(t) {
    return super.copy(t), this.defines = { STANDARD: "" }, this.color.copy(t.color), this.roughness = t.roughness, this.metalness = t.metalness, this.map = t.map, this.lightMap = t.lightMap, this.lightMapIntensity = t.lightMapIntensity, this.aoMap = t.aoMap, this.aoMapIntensity = t.aoMapIntensity, this.emissive.copy(t.emissive), this.emissiveMap = t.emissiveMap, this.emissiveIntensity = t.emissiveIntensity, this.bumpMap = t.bumpMap, this.bumpScale = t.bumpScale, this.normalMap = t.normalMap, this.normalMapType = t.normalMapType, this.normalScale.copy(t.normalScale), this.displacementMap = t.displacementMap, this.displacementScale = t.displacementScale, this.displacementBias = t.displacementBias, this.roughnessMap = t.roughnessMap, this.metalnessMap = t.metalnessMap, this.alphaMap = t.alphaMap, this.envMap = t.envMap, this.envMapIntensity = t.envMapIntensity, this.wireframe = t.wireframe, this.wireframeLinewidth = t.wireframeLinewidth, this.wireframeLinecap = t.wireframeLinecap, this.wireframeLinejoin = t.wireframeLinejoin, this.flatShading = t.flatShading, this.fog = t.fog, this;
  }
}
class Kb extends tu {
  constructor(t) {
    super(), this.isMeshPhongMaterial = true, this.type = "MeshPhongMaterial", this.color = new Yo(16777215), this.specular = new Yo(1118481), this.shininess = 30, this.map = null, this.lightMap = null, this.lightMapIntensity = 1, this.aoMap = null, this.aoMapIntensity = 1, this.emissive = new Yo(0), this.emissiveIntensity = 1, this.emissiveMap = null, this.bumpMap = null, this.bumpScale = 1, this.normalMap = null, this.normalMapType = 0, this.normalScale = new Zo(1, 1), this.displacementMap = null, this.displacementScale = 1, this.displacementBias = 0, this.specularMap = null, this.alphaMap = null, this.envMap = null, this.combine = 0, this.reflectivity = 1, this.refractionRatio = 0.98, this.wireframe = false, this.wireframeLinewidth = 1, this.wireframeLinecap = "round", this.wireframeLinejoin = "round", this.flatShading = false, this.fog = true, this.setValues(t);
  }
  copy(t) {
    return super.copy(t), this.color.copy(t.color), this.specular.copy(t.specular), this.shininess = t.shininess, this.map = t.map, this.lightMap = t.lightMap, this.lightMapIntensity = t.lightMapIntensity, this.aoMap = t.aoMap, this.aoMapIntensity = t.aoMapIntensity, this.emissive.copy(t.emissive), this.emissiveMap = t.emissiveMap, this.emissiveIntensity = t.emissiveIntensity, this.bumpMap = t.bumpMap, this.bumpScale = t.bumpScale, this.normalMap = t.normalMap, this.normalMapType = t.normalMapType, this.normalScale.copy(t.normalScale), this.displacementMap = t.displacementMap, this.displacementScale = t.displacementScale, this.displacementBias = t.displacementBias, this.specularMap = t.specularMap, this.alphaMap = t.alphaMap, this.envMap = t.envMap, this.combine = t.combine, this.reflectivity = t.reflectivity, this.refractionRatio = t.refractionRatio, this.wireframe = t.wireframe, this.wireframeLinewidth = t.wireframeLinewidth, this.wireframeLinecap = t.wireframeLinecap, this.wireframeLinejoin = t.wireframeLinejoin, this.flatShading = t.flatShading, this.fog = t.fog, this;
  }
}
class Hd extends Zi {
  constructor(t, e = 1) {
    super(), this.isLight = true, this.type = "Light", this.color = new Yo(t), this.intensity = e;
  }
  dispose() {
  }
  copy(t, e) {
    return super.copy(t, e), this.color.copy(t.color), this.intensity = t.intensity, this;
  }
  toJSON(t) {
    const e = super.toJSON(t);
    return e.object.color = this.color.getHex(), e.object.intensity = this.intensity, this.groundColor !== void 0 && (e.object.groundColor = this.groundColor.getHex()), this.distance !== void 0 && (e.object.distance = this.distance), this.angle !== void 0 && (e.object.angle = this.angle), this.decay !== void 0 && (e.object.decay = this.decay), this.penumbra !== void 0 && (e.object.penumbra = this.penumbra), this.shadow !== void 0 && (e.object.shadow = this.shadow.toJSON()), e;
  }
}
class $b extends Hd {
  constructor(t, e, o) {
    super(t, o), this.isHemisphereLight = true, this.type = "HemisphereLight", this.position.copy(Zi.DefaultUp), this.updateMatrix(), this.groundColor = new Yo(e);
  }
  copy(t, e) {
    return super.copy(t, e), this.groundColor.copy(t.groundColor), this;
  }
}
const Nh = new Fi(), Dh = new Br(), Fh = new Br();
class Yb {
  constructor(t) {
    this.camera = t, this.bias = 0, this.normalBias = 0, this.radius = 1, this.blurSamples = 8, this.mapSize = new Zo(512, 512), this.map = null, this.mapPass = null, this.matrix = new Fi(), this.autoUpdate = true, this.needsUpdate = false, this._frustum = new hp(), this._frameExtents = new Zo(1, 1), this._viewportCount = 1, this._viewports = [new Di(0, 0, 1, 1)];
  }
  getViewportCount() {
    return this._viewportCount;
  }
  getFrustum() {
    return this._frustum;
  }
  updateMatrices(t) {
    const e = this.camera, o = this.matrix;
    Dh.setFromMatrixPosition(t.matrixWorld), e.position.copy(Dh), Fh.setFromMatrixPosition(t.target.matrixWorld), e.lookAt(Fh), e.updateMatrixWorld(), Nh.multiplyMatrices(e.projectionMatrix, e.matrixWorldInverse), this._frustum.setFromProjectionMatrix(Nh), o.set(0.5, 0, 0, 0.5, 0, 0.5, 0, 0.5, 0, 0, 0.5, 0.5, 0, 0, 0, 1), o.multiply(e.projectionMatrix), o.multiply(e.matrixWorldInverse);
  }
  getViewport(t) {
    return this._viewports[t];
  }
  getFrameExtents() {
    return this._frameExtents;
  }
  dispose() {
    this.map && this.map.dispose(), this.mapPass && this.mapPass.dispose();
  }
  copy(t) {
    return this.camera = t.camera.clone(), this.bias = t.bias, this.radius = t.radius, this.mapSize.copy(t.mapSize), this;
  }
  clone() {
    return new this.constructor().copy(this);
  }
  toJSON() {
    const t = {};
    return this.bias !== 0 && (t.bias = this.bias), this.normalBias !== 0 && (t.normalBias = this.normalBias), this.radius !== 1 && (t.radius = this.radius), (this.mapSize.x !== 512 || this.mapSize.y !== 512) && (t.mapSize = this.mapSize.toArray()), t.camera = this.camera.toJSON(false).object, delete t.camera.matrix, t;
  }
}
class Zb extends Yb {
  constructor() {
    super(new ua(50, 1, 0.5, 500)), this.isSpotLightShadow = true, this.focus = 1;
  }
  updateMatrices(t) {
    const e = this.camera, o = Qf * 2 * t.angle * this.focus, a = this.mapSize.width / this.mapSize.height, l = t.distance || e.far;
    (o !== e.fov || a !== e.aspect || l !== e.far) && (e.fov = o, e.aspect = a, e.far = l, e.updateProjectionMatrix()), super.updateMatrices(t);
  }
  copy(t) {
    return super.copy(t), this.focus = t.focus, this;
  }
}
class Qb extends Hd {
  constructor(t, e, o = 0, a = Math.PI / 3, l = 0, s = 1) {
    super(t, e), this.isSpotLight = true, this.type = "SpotLight", this.position.copy(Zi.DefaultUp), this.updateMatrix(), this.target = new Zi(), this.distance = o, this.angle = a, this.penumbra = l, this.decay = s, this.shadow = new Zb();
  }
  get power() {
    return this.intensity * Math.PI;
  }
  set power(t) {
    this.intensity = t / Math.PI;
  }
  dispose() {
    this.shadow.dispose();
  }
  copy(t, e) {
    return super.copy(t, e), this.distance = t.distance, this.angle = t.angle, this.penumbra = t.penumbra, this.decay = t.decay, this.target = t.target.clone(), this.shadow = t.shadow.clone(), this;
  }
}
typeof __THREE_DEVTOOLS__ < "u" && __THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("register", { detail: { revision: pp } }));
typeof window < "u" && (window.__THREE__ ? console.warn("WARNING: Multiple instances of Three.js being imported.") : window.__THREE__ = pp);
class Oa {
  constructor(t) {
    t === void 0 && (t = [0, 0, 0, 0, 0, 0, 0, 0, 0]), this.elements = t;
  }
  identity() {
    const t = this.elements;
    t[0] = 1, t[1] = 0, t[2] = 0, t[3] = 0, t[4] = 1, t[5] = 0, t[6] = 0, t[7] = 0, t[8] = 1;
  }
  setZero() {
    const t = this.elements;
    t[0] = 0, t[1] = 0, t[2] = 0, t[3] = 0, t[4] = 0, t[5] = 0, t[6] = 0, t[7] = 0, t[8] = 0;
  }
  setTrace(t) {
    const e = this.elements;
    e[0] = t.x, e[4] = t.y, e[8] = t.z;
  }
  getTrace(t) {
    t === void 0 && (t = new le());
    const e = this.elements;
    return t.x = e[0], t.y = e[4], t.z = e[8], t;
  }
  vmult(t, e) {
    e === void 0 && (e = new le());
    const o = this.elements, a = t.x, l = t.y, s = t.z;
    return e.x = o[0] * a + o[1] * l + o[2] * s, e.y = o[3] * a + o[4] * l + o[5] * s, e.z = o[6] * a + o[7] * l + o[8] * s, e;
  }
  smult(t) {
    for (let e = 0; e < this.elements.length; e++) this.elements[e] *= t;
  }
  mmult(t, e) {
    e === void 0 && (e = new Oa());
    const o = this.elements, a = t.elements, l = e.elements, s = o[0], i = o[1], u = o[2], d = o[3], f = o[4], p = o[5], g = o[6], b = o[7], h = o[8], m = a[0], c = a[1], w = a[2], T = a[3], P = a[4], k = a[5], R = a[6], F = a[7], v = a[8];
    return l[0] = s * m + i * T + u * R, l[1] = s * c + i * P + u * F, l[2] = s * w + i * k + u * v, l[3] = d * m + f * T + p * R, l[4] = d * c + f * P + p * F, l[5] = d * w + f * k + p * v, l[6] = g * m + b * T + h * R, l[7] = g * c + b * P + h * F, l[8] = g * w + b * k + h * v, e;
  }
  scale(t, e) {
    e === void 0 && (e = new Oa());
    const o = this.elements, a = e.elements;
    for (let l = 0; l !== 3; l++) a[3 * l + 0] = t.x * o[3 * l + 0], a[3 * l + 1] = t.y * o[3 * l + 1], a[3 * l + 2] = t.z * o[3 * l + 2];
    return e;
  }
  solve(t, e) {
    e === void 0 && (e = new le());
    const o = 3, a = 4, l = [];
    let s, i;
    for (s = 0; s < o * a; s++) l.push(0);
    for (s = 0; s < 3; s++) for (i = 0; i < 3; i++) l[s + a * i] = this.elements[s + 3 * i];
    l[3 + 4 * 0] = t.x, l[3 + 4 * 1] = t.y, l[3 + 4 * 2] = t.z;
    let u = 3;
    const d = u;
    let f;
    const p = 4;
    let g;
    do {
      if (s = d - u, l[s + a * s] === 0) {
        for (i = s + 1; i < d; i++) if (l[s + a * i] !== 0) {
          f = p;
          do
            g = p - f, l[g + a * s] += l[g + a * i];
          while (--f);
          break;
        }
      }
      if (l[s + a * s] !== 0) for (i = s + 1; i < d; i++) {
        const b = l[s + a * i] / l[s + a * s];
        f = p;
        do
          g = p - f, l[g + a * i] = g <= s ? 0 : l[g + a * i] - l[g + a * s] * b;
        while (--f);
      }
    } while (--u);
    if (e.z = l[2 * a + 3] / l[2 * a + 2], e.y = (l[1 * a + 3] - l[1 * a + 2] * e.z) / l[1 * a + 1], e.x = (l[0 * a + 3] - l[0 * a + 2] * e.z - l[0 * a + 1] * e.y) / l[0 * a + 0], isNaN(e.x) || isNaN(e.y) || isNaN(e.z) || e.x === 1 / 0 || e.y === 1 / 0 || e.z === 1 / 0) throw `Could not solve equation! Got x=[${e.toString()}], b=[${t.toString()}], A=[${this.toString()}]`;
    return e;
  }
  e(t, e, o) {
    if (o === void 0) return this.elements[e + 3 * t];
    this.elements[e + 3 * t] = o;
  }
  copy(t) {
    for (let e = 0; e < t.elements.length; e++) this.elements[e] = t.elements[e];
    return this;
  }
  toString() {
    let t = "";
    const e = ",";
    for (let o = 0; o < 9; o++) t += this.elements[o] + e;
    return t;
  }
  reverse(t) {
    t === void 0 && (t = new Oa());
    const e = 3, o = 6, a = Jb;
    let l, s;
    for (l = 0; l < 3; l++) for (s = 0; s < 3; s++) a[l + o * s] = this.elements[l + 3 * s];
    a[3 + 6 * 0] = 1, a[3 + 6 * 1] = 0, a[3 + 6 * 2] = 0, a[4 + 6 * 0] = 0, a[4 + 6 * 1] = 1, a[4 + 6 * 2] = 0, a[5 + 6 * 0] = 0, a[5 + 6 * 1] = 0, a[5 + 6 * 2] = 1;
    let i = 3;
    const u = i;
    let d;
    const f = o;
    let p;
    do {
      if (l = u - i, a[l + o * l] === 0) {
        for (s = l + 1; s < u; s++) if (a[l + o * s] !== 0) {
          d = f;
          do
            p = f - d, a[p + o * l] += a[p + o * s];
          while (--d);
          break;
        }
      }
      if (a[l + o * l] !== 0) for (s = l + 1; s < u; s++) {
        const g = a[l + o * s] / a[l + o * l];
        d = f;
        do
          p = f - d, a[p + o * s] = p <= l ? 0 : a[p + o * s] - a[p + o * l] * g;
        while (--d);
      }
    } while (--i);
    l = 2;
    do {
      s = l - 1;
      do {
        const g = a[l + o * s] / a[l + o * l];
        d = o;
        do
          p = o - d, a[p + o * s] = a[p + o * s] - a[p + o * l] * g;
        while (--d);
      } while (s--);
    } while (--l);
    l = 2;
    do {
      const g = 1 / a[l + o * l];
      d = o;
      do
        p = o - d, a[p + o * l] = a[p + o * l] * g;
      while (--d);
    } while (l--);
    l = 2;
    do {
      s = 2;
      do {
        if (p = a[e + s + o * l], isNaN(p) || p === 1 / 0) throw `Could not reverse! A=[${this.toString()}]`;
        t.e(l, s, p);
      } while (s--);
    } while (l--);
    return t;
  }
  setRotationFromQuaternion(t) {
    const e = t.x, o = t.y, a = t.z, l = t.w, s = e + e, i = o + o, u = a + a, d = e * s, f = e * i, p = e * u, g = o * i, b = o * u, h = a * u, m = l * s, c = l * i, w = l * u, T = this.elements;
    return T[3 * 0 + 0] = 1 - (g + h), T[3 * 0 + 1] = f - w, T[3 * 0 + 2] = p + c, T[3 * 1 + 0] = f + w, T[3 * 1 + 1] = 1 - (d + h), T[3 * 1 + 2] = b - m, T[3 * 2 + 0] = p - c, T[3 * 2 + 1] = b + m, T[3 * 2 + 2] = 1 - (d + g), this;
  }
  transpose(t) {
    t === void 0 && (t = new Oa());
    const e = this.elements, o = t.elements;
    let a;
    return o[0] = e[0], o[4] = e[4], o[8] = e[8], a = e[1], o[1] = e[3], o[3] = a, a = e[2], o[2] = e[6], o[6] = a, a = e[5], o[5] = e[7], o[7] = a, t;
  }
}
const Jb = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];
class le {
  constructor(t, e, o) {
    t === void 0 && (t = 0), e === void 0 && (e = 0), o === void 0 && (o = 0), this.x = t, this.y = e, this.z = o;
  }
  cross(t, e) {
    e === void 0 && (e = new le());
    const o = t.x, a = t.y, l = t.z, s = this.x, i = this.y, u = this.z;
    return e.x = i * l - u * a, e.y = u * o - s * l, e.z = s * a - i * o, e;
  }
  set(t, e, o) {
    return this.x = t, this.y = e, this.z = o, this;
  }
  setZero() {
    this.x = this.y = this.z = 0;
  }
  vadd(t, e) {
    if (e) e.x = t.x + this.x, e.y = t.y + this.y, e.z = t.z + this.z;
    else return new le(this.x + t.x, this.y + t.y, this.z + t.z);
  }
  vsub(t, e) {
    if (e) e.x = this.x - t.x, e.y = this.y - t.y, e.z = this.z - t.z;
    else return new le(this.x - t.x, this.y - t.y, this.z - t.z);
  }
  crossmat() {
    return new Oa([0, -this.z, this.y, this.z, 0, -this.x, -this.y, this.x, 0]);
  }
  normalize() {
    const t = this.x, e = this.y, o = this.z, a = Math.sqrt(t * t + e * e + o * o);
    if (a > 0) {
      const l = 1 / a;
      this.x *= l, this.y *= l, this.z *= l;
    } else this.x = 0, this.y = 0, this.z = 0;
    return a;
  }
  unit(t) {
    t === void 0 && (t = new le());
    const e = this.x, o = this.y, a = this.z;
    let l = Math.sqrt(e * e + o * o + a * a);
    return l > 0 ? (l = 1 / l, t.x = e * l, t.y = o * l, t.z = a * l) : (t.x = 1, t.y = 0, t.z = 0), t;
  }
  length() {
    const t = this.x, e = this.y, o = this.z;
    return Math.sqrt(t * t + e * e + o * o);
  }
  lengthSquared() {
    return this.dot(this);
  }
  distanceTo(t) {
    const e = this.x, o = this.y, a = this.z, l = t.x, s = t.y, i = t.z;
    return Math.sqrt((l - e) * (l - e) + (s - o) * (s - o) + (i - a) * (i - a));
  }
  distanceSquared(t) {
    const e = this.x, o = this.y, a = this.z, l = t.x, s = t.y, i = t.z;
    return (l - e) * (l - e) + (s - o) * (s - o) + (i - a) * (i - a);
  }
  scale(t, e) {
    e === void 0 && (e = new le());
    const o = this.x, a = this.y, l = this.z;
    return e.x = t * o, e.y = t * a, e.z = t * l, e;
  }
  vmul(t, e) {
    return e === void 0 && (e = new le()), e.x = t.x * this.x, e.y = t.y * this.y, e.z = t.z * this.z, e;
  }
  addScaledVector(t, e, o) {
    return o === void 0 && (o = new le()), o.x = this.x + t * e.x, o.y = this.y + t * e.y, o.z = this.z + t * e.z, o;
  }
  dot(t) {
    return this.x * t.x + this.y * t.y + this.z * t.z;
  }
  isZero() {
    return this.x === 0 && this.y === 0 && this.z === 0;
  }
  negate(t) {
    return t === void 0 && (t = new le()), t.x = -this.x, t.y = -this.y, t.z = -this.z, t;
  }
  tangents(t, e) {
    const o = this.length();
    if (o > 0) {
      const a = tw, l = 1 / o;
      a.set(this.x * l, this.y * l, this.z * l);
      const s = ew;
      Math.abs(a.x) < 0.9 ? (s.set(1, 0, 0), a.cross(s, t)) : (s.set(0, 1, 0), a.cross(s, t)), a.cross(t, e);
    } else t.set(1, 0, 0), e.set(0, 1, 0);
  }
  toString() {
    return `${this.x},${this.y},${this.z}`;
  }
  toArray() {
    return [this.x, this.y, this.z];
  }
  copy(t) {
    return this.x = t.x, this.y = t.y, this.z = t.z, this;
  }
  lerp(t, e, o) {
    const a = this.x, l = this.y, s = this.z;
    o.x = a + (t.x - a) * e, o.y = l + (t.y - l) * e, o.z = s + (t.z - s) * e;
  }
  almostEquals(t, e) {
    return e === void 0 && (e = 1e-6), !(Math.abs(this.x - t.x) > e || Math.abs(this.y - t.y) > e || Math.abs(this.z - t.z) > e);
  }
  almostZero(t) {
    return t === void 0 && (t = 1e-6), !(Math.abs(this.x) > t || Math.abs(this.y) > t || Math.abs(this.z) > t);
  }
  isAntiparallelTo(t, e) {
    return this.negate(Uh), Uh.almostEquals(t, e);
  }
  clone() {
    return new le(this.x, this.y, this.z);
  }
}
le.ZERO = new le(0, 0, 0);
le.UNIT_X = new le(1, 0, 0);
le.UNIT_Y = new le(0, 1, 0);
le.UNIT_Z = new le(0, 0, 1);
const tw = new le(), ew = new le(), Uh = new le();
class la {
  constructor(t) {
    t === void 0 && (t = {}), this.lowerBound = new le(), this.upperBound = new le(), t.lowerBound && this.lowerBound.copy(t.lowerBound), t.upperBound && this.upperBound.copy(t.upperBound);
  }
  setFromPoints(t, e, o, a) {
    const l = this.lowerBound, s = this.upperBound, i = o;
    l.copy(t[0]), i && i.vmult(l, l), s.copy(l);
    for (let u = 1; u < t.length; u++) {
      let d = t[u];
      i && (i.vmult(d, jh), d = jh), d.x > s.x && (s.x = d.x), d.x < l.x && (l.x = d.x), d.y > s.y && (s.y = d.y), d.y < l.y && (l.y = d.y), d.z > s.z && (s.z = d.z), d.z < l.z && (l.z = d.z);
    }
    return e && (e.vadd(l, l), e.vadd(s, s)), a && (l.x -= a, l.y -= a, l.z -= a, s.x += a, s.y += a, s.z += a), this;
  }
  copy(t) {
    return this.lowerBound.copy(t.lowerBound), this.upperBound.copy(t.upperBound), this;
  }
  clone() {
    return new la().copy(this);
  }
  extend(t) {
    this.lowerBound.x = Math.min(this.lowerBound.x, t.lowerBound.x), this.upperBound.x = Math.max(this.upperBound.x, t.upperBound.x), this.lowerBound.y = Math.min(this.lowerBound.y, t.lowerBound.y), this.upperBound.y = Math.max(this.upperBound.y, t.upperBound.y), this.lowerBound.z = Math.min(this.lowerBound.z, t.lowerBound.z), this.upperBound.z = Math.max(this.upperBound.z, t.upperBound.z);
  }
  overlaps(t) {
    const e = this.lowerBound, o = this.upperBound, a = t.lowerBound, l = t.upperBound, s = a.x <= o.x && o.x <= l.x || e.x <= l.x && l.x <= o.x, i = a.y <= o.y && o.y <= l.y || e.y <= l.y && l.y <= o.y, u = a.z <= o.z && o.z <= l.z || e.z <= l.z && l.z <= o.z;
    return s && i && u;
  }
  volume() {
    const t = this.lowerBound, e = this.upperBound;
    return (e.x - t.x) * (e.y - t.y) * (e.z - t.z);
  }
  contains(t) {
    const e = this.lowerBound, o = this.upperBound, a = t.lowerBound, l = t.upperBound;
    return e.x <= a.x && o.x >= l.x && e.y <= a.y && o.y >= l.y && e.z <= a.z && o.z >= l.z;
  }
  getCorners(t, e, o, a, l, s, i, u) {
    const d = this.lowerBound, f = this.upperBound;
    t.copy(d), e.set(f.x, d.y, d.z), o.set(f.x, f.y, d.z), a.set(d.x, f.y, f.z), l.set(f.x, d.y, f.z), s.set(d.x, f.y, d.z), i.set(d.x, d.y, f.z), u.copy(f);
  }
  toLocalFrame(t, e) {
    const o = Vh, a = o[0], l = o[1], s = o[2], i = o[3], u = o[4], d = o[5], f = o[6], p = o[7];
    this.getCorners(a, l, s, i, u, d, f, p);
    for (let g = 0; g !== 8; g++) {
      const b = o[g];
      t.pointToLocal(b, b);
    }
    return e.setFromPoints(o);
  }
  toWorldFrame(t, e) {
    const o = Vh, a = o[0], l = o[1], s = o[2], i = o[3], u = o[4], d = o[5], f = o[6], p = o[7];
    this.getCorners(a, l, s, i, u, d, f, p);
    for (let g = 0; g !== 8; g++) {
      const b = o[g];
      t.pointToWorld(b, b);
    }
    return e.setFromPoints(o);
  }
  overlapsRay(t) {
    const { direction: e, from: o } = t, a = 1 / e.x, l = 1 / e.y, s = 1 / e.z, i = (this.lowerBound.x - o.x) * a, u = (this.upperBound.x - o.x) * a, d = (this.lowerBound.y - o.y) * l, f = (this.upperBound.y - o.y) * l, p = (this.lowerBound.z - o.z) * s, g = (this.upperBound.z - o.z) * s, b = Math.max(Math.max(Math.min(i, u), Math.min(d, f)), Math.min(p, g)), h = Math.min(Math.min(Math.max(i, u), Math.max(d, f)), Math.max(p, g));
    return !(h < 0 || b > h);
  }
}
const jh = new le(), Vh = [new le(), new le(), new le(), new le(), new le(), new le(), new le(), new le()];
class zh {
  constructor() {
    this.matrix = [];
  }
  get(t, e) {
    let { index: o } = t, { index: a } = e;
    if (a > o) {
      const l = a;
      a = o, o = l;
    }
    return this.matrix[(o * (o + 1) >> 1) + a - 1];
  }
  set(t, e, o) {
    let { index: a } = t, { index: l } = e;
    if (l > a) {
      const s = l;
      l = a, a = s;
    }
    this.matrix[(a * (a + 1) >> 1) + l - 1] = o ? 1 : 0;
  }
  reset() {
    for (let t = 0, e = this.matrix.length; t !== e; t++) this.matrix[t] = 0;
  }
  setNumObjects(t) {
    this.matrix.length = t * (t - 1) >> 1;
  }
}
class Gd {
  addEventListener(t, e) {
    this._listeners === void 0 && (this._listeners = {});
    const o = this._listeners;
    return o[t] === void 0 && (o[t] = []), o[t].includes(e) || o[t].push(e), this;
  }
  hasEventListener(t, e) {
    if (this._listeners === void 0) return false;
    const o = this._listeners;
    return !!(o[t] !== void 0 && o[t].includes(e));
  }
  hasAnyEventListener(t) {
    return this._listeners === void 0 ? false : this._listeners[t] !== void 0;
  }
  removeEventListener(t, e) {
    if (this._listeners === void 0) return this;
    const o = this._listeners;
    if (o[t] === void 0) return this;
    const a = o[t].indexOf(e);
    return a !== -1 && o[t].splice(a, 1), this;
  }
  dispatchEvent(t) {
    if (this._listeners === void 0) return this;
    const e = this._listeners[t.type];
    if (e !== void 0) {
      t.target = this;
      for (let o = 0, a = e.length; o < a; o++) e[o].call(this, t);
    }
    return this;
  }
}
class Ri {
  constructor(t, e, o, a) {
    t === void 0 && (t = 0), e === void 0 && (e = 0), o === void 0 && (o = 0), a === void 0 && (a = 1), this.x = t, this.y = e, this.z = o, this.w = a;
  }
  set(t, e, o, a) {
    return this.x = t, this.y = e, this.z = o, this.w = a, this;
  }
  toString() {
    return `${this.x},${this.y},${this.z},${this.w}`;
  }
  toArray() {
    return [this.x, this.y, this.z, this.w];
  }
  setFromAxisAngle(t, e) {
    const o = Math.sin(e * 0.5);
    return this.x = t.x * o, this.y = t.y * o, this.z = t.z * o, this.w = Math.cos(e * 0.5), this;
  }
  toAxisAngle(t) {
    t === void 0 && (t = new le()), this.normalize();
    const e = 2 * Math.acos(this.w), o = Math.sqrt(1 - this.w * this.w);
    return o < 1e-3 ? (t.x = this.x, t.y = this.y, t.z = this.z) : (t.x = this.x / o, t.y = this.y / o, t.z = this.z / o), [t, e];
  }
  setFromVectors(t, e) {
    if (t.isAntiparallelTo(e)) {
      const o = rw, a = nw;
      t.tangents(o, a), this.setFromAxisAngle(o, Math.PI);
    } else {
      const o = t.cross(e);
      this.x = o.x, this.y = o.y, this.z = o.z, this.w = Math.sqrt(t.length() ** 2 * e.length() ** 2) + t.dot(e), this.normalize();
    }
    return this;
  }
  mult(t, e) {
    e === void 0 && (e = new Ri());
    const o = this.x, a = this.y, l = this.z, s = this.w, i = t.x, u = t.y, d = t.z, f = t.w;
    return e.x = o * f + s * i + a * d - l * u, e.y = a * f + s * u + l * i - o * d, e.z = l * f + s * d + o * u - a * i, e.w = s * f - o * i - a * u - l * d, e;
  }
  inverse(t) {
    t === void 0 && (t = new Ri());
    const e = this.x, o = this.y, a = this.z, l = this.w;
    this.conjugate(t);
    const s = 1 / (e * e + o * o + a * a + l * l);
    return t.x *= s, t.y *= s, t.z *= s, t.w *= s, t;
  }
  conjugate(t) {
    return t === void 0 && (t = new Ri()), t.x = -this.x, t.y = -this.y, t.z = -this.z, t.w = this.w, t;
  }
  normalize() {
    let t = Math.sqrt(this.x * this.x + this.y * this.y + this.z * this.z + this.w * this.w);
    return t === 0 ? (this.x = 0, this.y = 0, this.z = 0, this.w = 0) : (t = 1 / t, this.x *= t, this.y *= t, this.z *= t, this.w *= t), this;
  }
  normalizeFast() {
    const t = (3 - (this.x * this.x + this.y * this.y + this.z * this.z + this.w * this.w)) / 2;
    return t === 0 ? (this.x = 0, this.y = 0, this.z = 0, this.w = 0) : (this.x *= t, this.y *= t, this.z *= t, this.w *= t), this;
  }
  vmult(t, e) {
    e === void 0 && (e = new le());
    const o = t.x, a = t.y, l = t.z, s = this.x, i = this.y, u = this.z, d = this.w, f = d * o + i * l - u * a, p = d * a + u * o - s * l, g = d * l + s * a - i * o, b = -s * o - i * a - u * l;
    return e.x = f * d + b * -s + p * -u - g * -i, e.y = p * d + b * -i + g * -s - f * -u, e.z = g * d + b * -u + f * -i - p * -s, e;
  }
  copy(t) {
    return this.x = t.x, this.y = t.y, this.z = t.z, this.w = t.w, this;
  }
  toEuler(t, e) {
    e === void 0 && (e = "YZX");
    let o, a, l;
    const s = this.x, i = this.y, u = this.z, d = this.w;
    switch (e) {
      case "YZX":
        const f = s * i + u * d;
        if (f > 0.499 && (o = 2 * Math.atan2(s, d), a = Math.PI / 2, l = 0), f < -0.499 && (o = -2 * Math.atan2(s, d), a = -Math.PI / 2, l = 0), o === void 0) {
          const p = s * s, g = i * i, b = u * u;
          o = Math.atan2(2 * i * d - 2 * s * u, 1 - 2 * g - 2 * b), a = Math.asin(2 * f), l = Math.atan2(2 * s * d - 2 * i * u, 1 - 2 * p - 2 * b);
        }
        break;
      default:
        throw new Error(`Euler order ${e} not supported yet.`);
    }
    t.y = o, t.z = a, t.x = l;
  }
  setFromEuler(t, e, o, a) {
    a === void 0 && (a = "XYZ");
    const l = Math.cos(t / 2), s = Math.cos(e / 2), i = Math.cos(o / 2), u = Math.sin(t / 2), d = Math.sin(e / 2), f = Math.sin(o / 2);
    return a === "XYZ" ? (this.x = u * s * i + l * d * f, this.y = l * d * i - u * s * f, this.z = l * s * f + u * d * i, this.w = l * s * i - u * d * f) : a === "YXZ" ? (this.x = u * s * i + l * d * f, this.y = l * d * i - u * s * f, this.z = l * s * f - u * d * i, this.w = l * s * i + u * d * f) : a === "ZXY" ? (this.x = u * s * i - l * d * f, this.y = l * d * i + u * s * f, this.z = l * s * f + u * d * i, this.w = l * s * i - u * d * f) : a === "ZYX" ? (this.x = u * s * i - l * d * f, this.y = l * d * i + u * s * f, this.z = l * s * f - u * d * i, this.w = l * s * i + u * d * f) : a === "YZX" ? (this.x = u * s * i + l * d * f, this.y = l * d * i + u * s * f, this.z = l * s * f - u * d * i, this.w = l * s * i - u * d * f) : a === "XZY" && (this.x = u * s * i - l * d * f, this.y = l * d * i - u * s * f, this.z = l * s * f + u * d * i, this.w = l * s * i + u * d * f), this;
  }
  clone() {
    return new Ri(this.x, this.y, this.z, this.w);
  }
  slerp(t, e, o) {
    o === void 0 && (o = new Ri());
    const a = this.x, l = this.y, s = this.z, i = this.w;
    let u = t.x, d = t.y, f = t.z, p = t.w, g, b, h, m, c;
    return b = a * u + l * d + s * f + i * p, b < 0 && (b = -b, u = -u, d = -d, f = -f, p = -p), 1 - b > 1e-6 ? (g = Math.acos(b), h = Math.sin(g), m = Math.sin((1 - e) * g) / h, c = Math.sin(e * g) / h) : (m = 1 - e, c = e), o.x = m * a + c * u, o.y = m * l + c * d, o.z = m * s + c * f, o.w = m * i + c * p, o;
  }
  integrate(t, e, o, a) {
    a === void 0 && (a = new Ri());
    const l = t.x * o.x, s = t.y * o.y, i = t.z * o.z, u = this.x, d = this.y, f = this.z, p = this.w, g = e * 0.5;
    return a.x += g * (l * p + s * f - i * d), a.y += g * (s * p + i * u - l * f), a.z += g * (i * p + l * d - s * u), a.w += g * (-l * u - s * d - i * f), a;
  }
}
const rw = new le(), nw = new le(), ow = { SPHERE: 1, PLANE: 2, BOX: 4, COMPOUND: 8, CONVEXPOLYHEDRON: 16, HEIGHTFIELD: 32, PARTICLE: 64, CYLINDER: 128, TRIMESH: 256 };
class oo {
  constructor(t) {
    t === void 0 && (t = {}), this.id = oo.idCounter++, this.type = t.type || 0, this.boundingSphereRadius = 0, this.collisionResponse = t.collisionResponse ? t.collisionResponse : true, this.collisionFilterGroup = t.collisionFilterGroup !== void 0 ? t.collisionFilterGroup : 1, this.collisionFilterMask = t.collisionFilterMask !== void 0 ? t.collisionFilterMask : -1, this.material = t.material ? t.material : null, this.body = null;
  }
  updateBoundingSphereRadius() {
    throw `computeBoundingSphereRadius() not implemented for shape type ${this.type}`;
  }
  volume() {
    throw `volume() not implemented for shape type ${this.type}`;
  }
  calculateLocalInertia(t, e) {
    throw `calculateLocalInertia() not implemented for shape type ${this.type}`;
  }
  calculateWorldAABB(t, e, o, a) {
    throw `calculateWorldAABB() not implemented for shape type ${this.type}`;
  }
}
oo.idCounter = 0;
oo.types = ow;
class oi {
  constructor(t) {
    t === void 0 && (t = {}), this.position = new le(), this.quaternion = new Ri(), t.position && this.position.copy(t.position), t.quaternion && this.quaternion.copy(t.quaternion);
  }
  pointToLocal(t, e) {
    return oi.pointToLocalFrame(this.position, this.quaternion, t, e);
  }
  pointToWorld(t, e) {
    return oi.pointToWorldFrame(this.position, this.quaternion, t, e);
  }
  vectorToWorldFrame(t, e) {
    return e === void 0 && (e = new le()), this.quaternion.vmult(t, e), e;
  }
  static pointToLocalFrame(t, e, o, a) {
    return a === void 0 && (a = new le()), o.vsub(t, a), e.conjugate(qh), qh.vmult(a, a), a;
  }
  static pointToWorldFrame(t, e, o, a) {
    return a === void 0 && (a = new le()), e.vmult(o, a), a.vadd(t, a), a;
  }
  static vectorToWorldFrame(t, e, o) {
    return o === void 0 && (o = new le()), t.vmult(e, o), o;
  }
  static vectorToLocalFrame(t, e, o, a) {
    return a === void 0 && (a = new le()), e.w *= -1, e.vmult(o, a), e.w *= -1, a;
  }
}
const qh = new Ri();
class $s extends oo {
  constructor(t) {
    t === void 0 && (t = {});
    const { vertices: e = [], faces: o = [], normals: a = [], axes: l, boundingSphereRadius: s } = t;
    super({ type: oo.types.CONVEXPOLYHEDRON }), this.vertices = e, this.faces = o, this.faceNormals = a, this.faceNormals.length === 0 && this.computeNormals(), s ? this.boundingSphereRadius = s : this.updateBoundingSphereRadius(), this.worldVertices = [], this.worldVerticesNeedsUpdate = true, this.worldFaceNormals = [], this.worldFaceNormalsNeedsUpdate = true, this.uniqueAxes = l ? l.slice() : null, this.uniqueEdges = [], this.computeEdges();
  }
  computeEdges() {
    const t = this.faces, e = this.vertices, o = this.uniqueEdges;
    o.length = 0;
    const a = new le();
    for (let l = 0; l !== t.length; l++) {
      const s = t[l], i = s.length;
      for (let u = 0; u !== i; u++) {
        const d = (u + 1) % i;
        e[s[u]].vsub(e[s[d]], a), a.normalize();
        let f = false;
        for (let p = 0; p !== o.length; p++) if (o[p].almostEquals(a) || o[p].almostEquals(a)) {
          f = true;
          break;
        }
        f || o.push(a.clone());
      }
    }
  }
  computeNormals() {
    this.faceNormals.length = this.faces.length;
    for (let t = 0; t < this.faces.length; t++) {
      for (let a = 0; a < this.faces[t].length; a++) if (!this.vertices[this.faces[t][a]]) throw new Error(`Vertex ${this.faces[t][a]} not found!`);
      const e = this.faceNormals[t] || new le();
      this.getFaceNormal(t, e), e.negate(e), this.faceNormals[t] = e;
      const o = this.vertices[this.faces[t][0]];
      if (e.dot(o) < 0) {
        console.error(`.faceNormals[${t}] = Vec3(${e.toString()}) looks like it points into the shape? The vertices follow. Make sure they are ordered CCW around the normal, using the right hand rule.`);
        for (let a = 0; a < this.faces[t].length; a++) console.warn(`.vertices[${this.faces[t][a]}] = Vec3(${this.vertices[this.faces[t][a]].toString()})`);
      }
    }
  }
  getFaceNormal(t, e) {
    const o = this.faces[t], a = this.vertices[o[0]], l = this.vertices[o[1]], s = this.vertices[o[2]];
    $s.computeNormal(a, l, s, e);
  }
  static computeNormal(t, e, o, a) {
    const l = new le(), s = new le();
    e.vsub(t, s), o.vsub(e, l), l.cross(s, a), a.isZero() || a.normalize();
  }
  clipAgainstHull(t, e, o, a, l, s, i, u, d) {
    const f = new le();
    let p = -1, g = -Number.MAX_VALUE;
    for (let h = 0; h < o.faces.length; h++) {
      f.copy(o.faceNormals[h]), l.vmult(f, f);
      const m = f.dot(s);
      m > g && (g = m, p = h);
    }
    const b = [];
    for (let h = 0; h < o.faces[p].length; h++) {
      const m = o.vertices[o.faces[p][h]], c = new le();
      c.copy(m), l.vmult(c, c), a.vadd(c, c), b.push(c);
    }
    p >= 0 && this.clipFaceAgainstHull(s, t, e, b, i, u, d);
  }
  findSeparatingAxis(t, e, o, a, l, s, i, u) {
    const d = new le(), f = new le(), p = new le(), g = new le(), b = new le(), h = new le();
    let m = Number.MAX_VALUE;
    const c = this;
    if (c.uniqueAxes) for (let w = 0; w !== c.uniqueAxes.length; w++) {
      o.vmult(c.uniqueAxes[w], d);
      const T = c.testSepAxis(d, t, e, o, a, l);
      if (T === false) return false;
      T < m && (m = T, s.copy(d));
    }
    else {
      const w = i ? i.length : c.faces.length;
      for (let T = 0; T < w; T++) {
        const P = i ? i[T] : T;
        d.copy(c.faceNormals[P]), o.vmult(d, d);
        const k = c.testSepAxis(d, t, e, o, a, l);
        if (k === false) return false;
        k < m && (m = k, s.copy(d));
      }
    }
    if (t.uniqueAxes) for (let w = 0; w !== t.uniqueAxes.length; w++) {
      l.vmult(t.uniqueAxes[w], f);
      const T = c.testSepAxis(f, t, e, o, a, l);
      if (T === false) return false;
      T < m && (m = T, s.copy(f));
    }
    else {
      const w = u ? u.length : t.faces.length;
      for (let T = 0; T < w; T++) {
        const P = u ? u[T] : T;
        f.copy(t.faceNormals[P]), l.vmult(f, f);
        const k = c.testSepAxis(f, t, e, o, a, l);
        if (k === false) return false;
        k < m && (m = k, s.copy(f));
      }
    }
    for (let w = 0; w !== c.uniqueEdges.length; w++) {
      o.vmult(c.uniqueEdges[w], g);
      for (let T = 0; T !== t.uniqueEdges.length; T++) if (l.vmult(t.uniqueEdges[T], b), g.cross(b, h), !h.almostZero()) {
        h.normalize();
        const P = c.testSepAxis(h, t, e, o, a, l);
        if (P === false) return false;
        P < m && (m = P, s.copy(h));
      }
    }
    return a.vsub(e, p), p.dot(s) > 0 && s.negate(s), true;
  }
  testSepAxis(t, e, o, a, l, s) {
    const i = this;
    $s.project(i, t, o, a, Uf), $s.project(e, t, l, s, jf);
    const u = Uf[0], d = Uf[1], f = jf[0], p = jf[1];
    if (u < p || f < d) return false;
    const g = u - p, b = f - d;
    return g < b ? g : b;
  }
  calculateLocalInertia(t, e) {
    const o = new le(), a = new le();
    this.computeLocalAABB(a, o);
    const l = o.x - a.x, s = o.y - a.y, i = o.z - a.z;
    e.x = 1 / 12 * t * (2 * s * 2 * s + 2 * i * 2 * i), e.y = 1 / 12 * t * (2 * l * 2 * l + 2 * i * 2 * i), e.z = 1 / 12 * t * (2 * s * 2 * s + 2 * l * 2 * l);
  }
  getPlaneConstantOfFace(t) {
    const e = this.faces[t], o = this.faceNormals[t], a = this.vertices[e[0]];
    return -o.dot(a);
  }
  clipFaceAgainstHull(t, e, o, a, l, s, i) {
    const u = new le(), d = new le(), f = new le(), p = new le(), g = new le(), b = new le(), h = new le(), m = new le(), c = this, w = [], T = a, P = w;
    let k = -1, R = Number.MAX_VALUE;
    for (let Z = 0; Z < c.faces.length; Z++) {
      u.copy(c.faceNormals[Z]), o.vmult(u, u);
      const D = u.dot(t);
      D < R && (R = D, k = Z);
    }
    if (k < 0) return;
    const F = c.faces[k];
    F.connectedFaces = [];
    for (let Z = 0; Z < c.faces.length; Z++) for (let D = 0; D < c.faces[Z].length; D++) F.indexOf(c.faces[Z][D]) !== -1 && Z !== k && F.connectedFaces.indexOf(Z) === -1 && F.connectedFaces.push(Z);
    const v = F.length;
    for (let Z = 0; Z < v; Z++) {
      const D = c.vertices[F[Z]], V = c.vertices[F[(Z + 1) % v]];
      D.vsub(V, d), f.copy(d), o.vmult(f, f), e.vadd(f, f), p.copy(this.faceNormals[k]), o.vmult(p, p), e.vadd(p, p), f.cross(p, g), g.negate(g), b.copy(D), o.vmult(b, b), e.vadd(b, b);
      const S = F.connectedFaces[Z];
      h.copy(this.faceNormals[S]);
      const x = this.getPlaneConstantOfFace(S);
      m.copy(h), o.vmult(m, m);
      const B = x - m.dot(e);
      for (this.clipFaceAgainstPlane(T, P, m, B); T.length; ) T.shift();
      for (; P.length; ) T.push(P.shift());
    }
    h.copy(this.faceNormals[k]);
    const U = this.getPlaneConstantOfFace(k);
    m.copy(h), o.vmult(m, m);
    const M = U - m.dot(e);
    for (let Z = 0; Z < T.length; Z++) {
      let D = m.dot(T[Z]) + M;
      if (D <= l && (D = l), D <= s) {
        const V = T[Z];
        if (D <= 1e-6) {
          const S = { point: V, normal: m, depth: D };
          i.push(S);
        }
      }
    }
  }
  clipFaceAgainstPlane(t, e, o, a) {
    let l, s;
    const i = t.length;
    if (i < 2) return e;
    let u = t[t.length - 1], d = t[0];
    l = o.dot(u) + a;
    for (let f = 0; f < i; f++) {
      if (d = t[f], s = o.dot(d) + a, l < 0) if (s < 0) {
        const p = new le();
        p.copy(d), e.push(p);
      } else {
        const p = new le();
        u.lerp(d, l / (l - s), p), e.push(p);
      }
      else if (s < 0) {
        const p = new le();
        u.lerp(d, l / (l - s), p), e.push(p), e.push(d);
      }
      u = d, l = s;
    }
    return e;
  }
  computeWorldVertices(t, e) {
    for (; this.worldVertices.length < this.vertices.length; ) this.worldVertices.push(new le());
    const o = this.vertices, a = this.worldVertices;
    for (let l = 0; l !== this.vertices.length; l++) e.vmult(o[l], a[l]), t.vadd(a[l], a[l]);
    this.worldVerticesNeedsUpdate = false;
  }
  computeLocalAABB(t, e) {
    const o = this.vertices;
    t.set(Number.MAX_VALUE, Number.MAX_VALUE, Number.MAX_VALUE), e.set(-Number.MAX_VALUE, -Number.MAX_VALUE, -Number.MAX_VALUE);
    for (let a = 0; a < this.vertices.length; a++) {
      const l = o[a];
      l.x < t.x ? t.x = l.x : l.x > e.x && (e.x = l.x), l.y < t.y ? t.y = l.y : l.y > e.y && (e.y = l.y), l.z < t.z ? t.z = l.z : l.z > e.z && (e.z = l.z);
    }
  }
  computeWorldFaceNormals(t) {
    const e = this.faceNormals.length;
    for (; this.worldFaceNormals.length < e; ) this.worldFaceNormals.push(new le());
    const o = this.faceNormals, a = this.worldFaceNormals;
    for (let l = 0; l !== e; l++) t.vmult(o[l], a[l]);
    this.worldFaceNormalsNeedsUpdate = false;
  }
  updateBoundingSphereRadius() {
    let t = 0;
    const e = this.vertices;
    for (let o = 0; o !== e.length; o++) {
      const a = e[o].lengthSquared();
      a > t && (t = a);
    }
    this.boundingSphereRadius = Math.sqrt(t);
  }
  calculateWorldAABB(t, e, o, a) {
    const l = this.vertices;
    let s, i, u, d, f, p, g = new le();
    for (let b = 0; b < l.length; b++) {
      g.copy(l[b]), e.vmult(g, g), t.vadd(g, g);
      const h = g;
      (s === void 0 || h.x < s) && (s = h.x), (d === void 0 || h.x > d) && (d = h.x), (i === void 0 || h.y < i) && (i = h.y), (f === void 0 || h.y > f) && (f = h.y), (u === void 0 || h.z < u) && (u = h.z), (p === void 0 || h.z > p) && (p = h.z);
    }
    o.set(s, i, u), a.set(d, f, p);
  }
  volume() {
    return 4 * Math.PI * this.boundingSphereRadius / 3;
  }
  getAveragePointLocal(t) {
    t === void 0 && (t = new le());
    const e = this.vertices;
    for (let o = 0; o < e.length; o++) t.vadd(e[o], t);
    return t.scale(1 / e.length, t), t;
  }
  transformAllPoints(t, e) {
    const o = this.vertices.length, a = this.vertices;
    if (e) {
      for (let l = 0; l < o; l++) {
        const s = a[l];
        e.vmult(s, s);
      }
      for (let l = 0; l < this.faceNormals.length; l++) {
        const s = this.faceNormals[l];
        e.vmult(s, s);
      }
    }
    if (t) for (let l = 0; l < o; l++) {
      const s = a[l];
      s.vadd(t, s);
    }
  }
  pointIsInside(t) {
    const e = this.vertices, o = this.faces, a = this.faceNormals, l = null, s = new le();
    this.getAveragePointLocal(s);
    for (let i = 0; i < this.faces.length; i++) {
      let u = a[i];
      const d = e[o[i][0]], f = new le();
      t.vsub(d, f);
      const p = u.dot(f), g = new le();
      s.vsub(d, g);
      const b = u.dot(g);
      if (p < 0 && b > 0 || p > 0 && b < 0) return false;
    }
    return l ? 1 : -1;
  }
  static project(t, e, o, a, l) {
    const s = t.vertices.length, i = iw;
    let u = 0, d = 0;
    const f = aw, p = t.vertices;
    f.setZero(), oi.vectorToLocalFrame(o, a, e, i), oi.pointToLocalFrame(o, a, f, f);
    const g = f.dot(i);
    d = u = p[0].dot(i);
    for (let b = 1; b < s; b++) {
      const h = p[b].dot(i);
      h > u && (u = h), h < d && (d = h);
    }
    if (d -= g, u -= g, d > u) {
      const b = d;
      d = u, u = b;
    }
    l[0] = u, l[1] = d;
  }
}
const Uf = [], jf = [];
new le();
const iw = new le(), aw = new le();
class yp extends oo {
  constructor(t) {
    super({ type: oo.types.BOX }), this.halfExtents = t, this.convexPolyhedronRepresentation = null, this.updateConvexPolyhedronRepresentation(), this.updateBoundingSphereRadius();
  }
  updateConvexPolyhedronRepresentation() {
    const t = this.halfExtents.x, e = this.halfExtents.y, o = this.halfExtents.z, a = le, l = [new a(-t, -e, -o), new a(t, -e, -o), new a(t, e, -o), new a(-t, e, -o), new a(-t, -e, o), new a(t, -e, o), new a(t, e, o), new a(-t, e, o)], s = [[3, 2, 1, 0], [4, 5, 6, 7], [5, 4, 0, 1], [2, 3, 7, 6], [0, 4, 7, 3], [1, 2, 6, 5]], i = [new a(0, 0, 1), new a(0, 1, 0), new a(1, 0, 0)], u = new $s({ vertices: l, faces: s, axes: i });
    this.convexPolyhedronRepresentation = u, u.material = this.material;
  }
  calculateLocalInertia(t, e) {
    return e === void 0 && (e = new le()), yp.calculateInertia(this.halfExtents, t, e), e;
  }
  static calculateInertia(t, e, o) {
    const a = t;
    o.x = 1 / 12 * e * (2 * a.y * 2 * a.y + 2 * a.z * 2 * a.z), o.y = 1 / 12 * e * (2 * a.x * 2 * a.x + 2 * a.z * 2 * a.z), o.z = 1 / 12 * e * (2 * a.y * 2 * a.y + 2 * a.x * 2 * a.x);
  }
  getSideNormals(t, e) {
    const o = t, a = this.halfExtents;
    if (o[0].set(a.x, 0, 0), o[1].set(0, a.y, 0), o[2].set(0, 0, a.z), o[3].set(-a.x, 0, 0), o[4].set(0, -a.y, 0), o[5].set(0, 0, -a.z), e !== void 0) for (let l = 0; l !== o.length; l++) e.vmult(o[l], o[l]);
    return o;
  }
  volume() {
    return 8 * this.halfExtents.x * this.halfExtents.y * this.halfExtents.z;
  }
  updateBoundingSphereRadius() {
    this.boundingSphereRadius = this.halfExtents.length();
  }
  forEachWorldCorner(t, e, o) {
    const a = this.halfExtents, l = [[a.x, a.y, a.z], [-a.x, a.y, a.z], [-a.x, -a.y, a.z], [-a.x, -a.y, -a.z], [a.x, -a.y, -a.z], [a.x, a.y, -a.z], [-a.x, a.y, -a.z], [a.x, -a.y, a.z]];
    for (let s = 0; s < l.length; s++) As.set(l[s][0], l[s][1], l[s][2]), e.vmult(As, As), t.vadd(As, As), o(As.x, As.y, As.z);
  }
  calculateWorldAABB(t, e, o, a) {
    const l = this.halfExtents;
    Ma[0].set(l.x, l.y, l.z), Ma[1].set(-l.x, l.y, l.z), Ma[2].set(-l.x, -l.y, l.z), Ma[3].set(-l.x, -l.y, -l.z), Ma[4].set(l.x, -l.y, -l.z), Ma[5].set(l.x, l.y, -l.z), Ma[6].set(-l.x, l.y, -l.z), Ma[7].set(l.x, -l.y, l.z);
    const s = Ma[0];
    e.vmult(s, s), t.vadd(s, s), a.copy(s), o.copy(s);
    for (let i = 1; i < 8; i++) {
      const u = Ma[i];
      e.vmult(u, u), t.vadd(u, u);
      const d = u.x, f = u.y, p = u.z;
      d > a.x && (a.x = d), f > a.y && (a.y = f), p > a.z && (a.z = p), d < o.x && (o.x = d), f < o.y && (o.y = f), p < o.z && (o.z = p);
    }
  }
}
const As = new le(), Ma = [new le(), new le(), new le(), new le(), new le(), new le(), new le(), new le()], gp = { DYNAMIC: 1, STATIC: 2, KINEMATIC: 4 }, vp = { AWAKE: 0, SLEEPY: 1, SLEEPING: 2 };
class Gn extends Gd {
  constructor(t) {
    t === void 0 && (t = {}), super(), this.id = Gn.idCounter++, this.index = -1, this.world = null, this.vlambda = new le(), this.collisionFilterGroup = typeof t.collisionFilterGroup == "number" ? t.collisionFilterGroup : 1, this.collisionFilterMask = typeof t.collisionFilterMask == "number" ? t.collisionFilterMask : -1, this.collisionResponse = typeof t.collisionResponse == "boolean" ? t.collisionResponse : true, this.position = new le(), this.previousPosition = new le(), this.interpolatedPosition = new le(), this.initPosition = new le(), t.position && (this.position.copy(t.position), this.previousPosition.copy(t.position), this.interpolatedPosition.copy(t.position), this.initPosition.copy(t.position)), this.velocity = new le(), t.velocity && this.velocity.copy(t.velocity), this.initVelocity = new le(), this.force = new le();
    const e = typeof t.mass == "number" ? t.mass : 0;
    this.mass = e, this.invMass = e > 0 ? 1 / e : 0, this.material = t.material || null, this.linearDamping = typeof t.linearDamping == "number" ? t.linearDamping : 0.01, this.type = e <= 0 ? Gn.STATIC : Gn.DYNAMIC, typeof t.type == typeof Gn.STATIC && (this.type = t.type), this.allowSleep = typeof t.allowSleep < "u" ? t.allowSleep : true, this.sleepState = Gn.AWAKE, this.sleepSpeedLimit = typeof t.sleepSpeedLimit < "u" ? t.sleepSpeedLimit : 0.1, this.sleepTimeLimit = typeof t.sleepTimeLimit < "u" ? t.sleepTimeLimit : 1, this.timeLastSleepy = 0, this.wakeUpAfterNarrowphase = false, this.torque = new le(), this.quaternion = new Ri(), this.initQuaternion = new Ri(), this.previousQuaternion = new Ri(), this.interpolatedQuaternion = new Ri(), t.quaternion && (this.quaternion.copy(t.quaternion), this.initQuaternion.copy(t.quaternion), this.previousQuaternion.copy(t.quaternion), this.interpolatedQuaternion.copy(t.quaternion)), this.angularVelocity = new le(), t.angularVelocity && this.angularVelocity.copy(t.angularVelocity), this.initAngularVelocity = new le(), this.shapes = [], this.shapeOffsets = [], this.shapeOrientations = [], this.inertia = new le(), this.invInertia = new le(), this.invInertiaWorld = new Oa(), this.invMassSolve = 0, this.invInertiaSolve = new le(), this.invInertiaWorldSolve = new Oa(), this.fixedRotation = typeof t.fixedRotation < "u" ? t.fixedRotation : false, this.angularDamping = typeof t.angularDamping < "u" ? t.angularDamping : 0.01, this.linearFactor = new le(1, 1, 1), t.linearFactor && this.linearFactor.copy(t.linearFactor), this.angularFactor = new le(1, 1, 1), t.angularFactor && this.angularFactor.copy(t.angularFactor), this.aabb = new la(), this.aabbNeedsUpdate = true, this.boundingRadius = 0, this.wlambda = new le(), this.isTrigger = !!t.isTrigger, t.shape && this.addShape(t.shape), this.updateMassProperties();
  }
  wakeUp() {
    const t = this.sleepState;
    this.sleepState = Gn.AWAKE, this.wakeUpAfterNarrowphase = false, t === Gn.SLEEPING && this.dispatchEvent(Gn.wakeupEvent);
  }
  sleep() {
    this.sleepState = Gn.SLEEPING, this.velocity.set(0, 0, 0), this.angularVelocity.set(0, 0, 0), this.wakeUpAfterNarrowphase = false;
  }
  sleepTick(t) {
    if (this.allowSleep) {
      const e = this.sleepState, o = this.velocity.lengthSquared() + this.angularVelocity.lengthSquared(), a = this.sleepSpeedLimit ** 2;
      e === Gn.AWAKE && o < a ? (this.sleepState = Gn.SLEEPY, this.timeLastSleepy = t, this.dispatchEvent(Gn.sleepyEvent)) : e === Gn.SLEEPY && o > a ? this.wakeUp() : e === Gn.SLEEPY && t - this.timeLastSleepy > this.sleepTimeLimit && (this.sleep(), this.dispatchEvent(Gn.sleepEvent));
    }
  }
  updateSolveMassProperties() {
    this.sleepState === Gn.SLEEPING || this.type === Gn.KINEMATIC ? (this.invMassSolve = 0, this.invInertiaSolve.setZero(), this.invInertiaWorldSolve.setZero()) : (this.invMassSolve = this.invMass, this.invInertiaSolve.copy(this.invInertia), this.invInertiaWorldSolve.copy(this.invInertiaWorld));
  }
  pointToLocalFrame(t, e) {
    return e === void 0 && (e = new le()), t.vsub(this.position, e), this.quaternion.conjugate().vmult(e, e), e;
  }
  vectorToLocalFrame(t, e) {
    return e === void 0 && (e = new le()), this.quaternion.conjugate().vmult(t, e), e;
  }
  pointToWorldFrame(t, e) {
    return e === void 0 && (e = new le()), this.quaternion.vmult(t, e), e.vadd(this.position, e), e;
  }
  vectorToWorldFrame(t, e) {
    return e === void 0 && (e = new le()), this.quaternion.vmult(t, e), e;
  }
  addShape(t, e, o) {
    const a = new le(), l = new Ri();
    return e && a.copy(e), o && l.copy(o), this.shapes.push(t), this.shapeOffsets.push(a), this.shapeOrientations.push(l), this.updateMassProperties(), this.updateBoundingRadius(), this.aabbNeedsUpdate = true, t.body = this, this;
  }
  removeShape(t) {
    const e = this.shapes.indexOf(t);
    return e === -1 ? (console.warn("Shape does not belong to the body"), this) : (this.shapes.splice(e, 1), this.shapeOffsets.splice(e, 1), this.shapeOrientations.splice(e, 1), this.updateMassProperties(), this.updateBoundingRadius(), this.aabbNeedsUpdate = true, t.body = null, this);
  }
  updateBoundingRadius() {
    const t = this.shapes, e = this.shapeOffsets, o = t.length;
    let a = 0;
    for (let l = 0; l !== o; l++) {
      const s = t[l];
      s.updateBoundingSphereRadius();
      const i = e[l].length(), u = s.boundingSphereRadius;
      i + u > a && (a = i + u);
    }
    this.boundingRadius = a;
  }
  updateAABB() {
    const t = this.shapes, e = this.shapeOffsets, o = this.shapeOrientations, a = t.length, l = sw, s = uw, i = this.quaternion, u = this.aabb, d = cw;
    for (let f = 0; f !== a; f++) {
      const p = t[f];
      i.vmult(e[f], l), l.vadd(this.position, l), i.mult(o[f], s), p.calculateWorldAABB(l, s, d.lowerBound, d.upperBound), f === 0 ? u.copy(d) : u.extend(d);
    }
    this.aabbNeedsUpdate = false;
  }
  updateInertiaWorld(t) {
    const e = this.invInertia;
    if (!(e.x === e.y && e.y === e.z && !t)) {
      const o = lw, a = fw;
      o.setRotationFromQuaternion(this.quaternion), o.transpose(a), o.scale(e, o), o.mmult(a, this.invInertiaWorld);
    }
  }
  applyForce(t, e) {
    if (e === void 0 && (e = new le()), this.type !== Gn.DYNAMIC) return;
    this.sleepState === Gn.SLEEPING && this.wakeUp();
    const o = pw;
    e.cross(t, o), this.force.vadd(t, this.force), this.torque.vadd(o, this.torque);
  }
  applyLocalForce(t, e) {
    if (e === void 0 && (e = new le()), this.type !== Gn.DYNAMIC) return;
    const o = hw, a = dw;
    this.vectorToWorldFrame(t, o), this.vectorToWorldFrame(e, a), this.applyForce(o, a);
  }
  applyTorque(t) {
    this.type === Gn.DYNAMIC && (this.sleepState === Gn.SLEEPING && this.wakeUp(), this.torque.vadd(t, this.torque));
  }
  applyImpulse(t, e) {
    if (e === void 0 && (e = new le()), this.type !== Gn.DYNAMIC) return;
    this.sleepState === Gn.SLEEPING && this.wakeUp();
    const o = e, a = mw;
    a.copy(t), a.scale(this.invMass, a), this.velocity.vadd(a, this.velocity);
    const l = yw;
    o.cross(t, l), this.invInertiaWorld.vmult(l, l), this.angularVelocity.vadd(l, this.angularVelocity);
  }
  applyLocalImpulse(t, e) {
    if (e === void 0 && (e = new le()), this.type !== Gn.DYNAMIC) return;
    const o = gw, a = vw;
    this.vectorToWorldFrame(t, o), this.vectorToWorldFrame(e, a), this.applyImpulse(o, a);
  }
  updateMassProperties() {
    const t = bw;
    this.invMass = this.mass > 0 ? 1 / this.mass : 0;
    const e = this.inertia, o = this.fixedRotation;
    this.updateAABB(), t.set((this.aabb.upperBound.x - this.aabb.lowerBound.x) / 2, (this.aabb.upperBound.y - this.aabb.lowerBound.y) / 2, (this.aabb.upperBound.z - this.aabb.lowerBound.z) / 2), yp.calculateInertia(t, this.mass, e), this.invInertia.set(e.x > 0 && !o ? 1 / e.x : 0, e.y > 0 && !o ? 1 / e.y : 0, e.z > 0 && !o ? 1 / e.z : 0), this.updateInertiaWorld(true);
  }
  getVelocityAtWorldPoint(t, e) {
    const o = new le();
    return t.vsub(this.position, o), this.angularVelocity.cross(o, e), this.velocity.vadd(e, e), e;
  }
  integrate(t, e, o) {
    if (this.previousPosition.copy(this.position), this.previousQuaternion.copy(this.quaternion), !(this.type === Gn.DYNAMIC || this.type === Gn.KINEMATIC) || this.sleepState === Gn.SLEEPING) return;
    const a = this.velocity, l = this.angularVelocity, s = this.position, i = this.force, u = this.torque, d = this.quaternion, f = this.invMass, p = this.invInertiaWorld, g = this.linearFactor, b = f * t;
    a.x += i.x * b * g.x, a.y += i.y * b * g.y, a.z += i.z * b * g.z;
    const h = p.elements, m = this.angularFactor, c = u.x * m.x, w = u.y * m.y, T = u.z * m.z;
    l.x += t * (h[0] * c + h[1] * w + h[2] * T), l.y += t * (h[3] * c + h[4] * w + h[5] * T), l.z += t * (h[6] * c + h[7] * w + h[8] * T), s.x += a.x * t, s.y += a.y * t, s.z += a.z * t, d.integrate(this.angularVelocity, t, this.angularFactor, d), e && (o ? d.normalizeFast() : d.normalize()), this.aabbNeedsUpdate = true, this.updateInertiaWorld();
  }
}
Gn.idCounter = 0;
Gn.COLLIDE_EVENT_NAME = "collide";
Gn.DYNAMIC = gp.DYNAMIC;
Gn.STATIC = gp.STATIC;
Gn.KINEMATIC = gp.KINEMATIC;
Gn.AWAKE = vp.AWAKE;
Gn.SLEEPY = vp.SLEEPY;
Gn.SLEEPING = vp.SLEEPING;
Gn.wakeupEvent = { type: "wakeup" };
Gn.sleepyEvent = { type: "sleepy" };
Gn.sleepEvent = { type: "sleep" };
const sw = new le(), uw = new Ri(), cw = new la(), lw = new Oa(), fw = new Oa();
new Oa();
const pw = new le(), hw = new le(), dw = new le(), mw = new le(), yw = new le(), gw = new le(), vw = new le(), bw = new le();
class ww {
  constructor() {
    this.world = null, this.useBoundingBoxes = false, this.dirty = true;
  }
  collisionPairs(t, e, o) {
    throw new Error("collisionPairs not implemented for this BroadPhase class!");
  }
  needBroadphaseCollision(t, e) {
    return !((t.collisionFilterGroup & e.collisionFilterMask) === 0 || (e.collisionFilterGroup & t.collisionFilterMask) === 0 || ((t.type & Gn.STATIC) !== 0 || t.sleepState === Gn.SLEEPING) && ((e.type & Gn.STATIC) !== 0 || e.sleepState === Gn.SLEEPING));
  }
  intersectionTest(t, e, o, a) {
    this.useBoundingBoxes ? this.doBoundingBoxBroadphase(t, e, o, a) : this.doBoundingSphereBroadphase(t, e, o, a);
  }
  doBoundingSphereBroadphase(t, e, o, a) {
    const l = Sw;
    e.position.vsub(t.position, l);
    const s = (t.boundingRadius + e.boundingRadius) ** 2;
    l.lengthSquared() < s && (o.push(t), a.push(e));
  }
  doBoundingBoxBroadphase(t, e, o, a) {
    t.aabbNeedsUpdate && t.updateAABB(), e.aabbNeedsUpdate && e.updateAABB(), t.aabb.overlaps(e.aabb) && (o.push(t), a.push(e));
  }
  makePairsUnique(t, e) {
    const o = xw, a = _w, l = Ew, s = t.length;
    for (let i = 0; i !== s; i++) a[i] = t[i], l[i] = e[i];
    t.length = 0, e.length = 0;
    for (let i = 0; i !== s; i++) {
      const u = a[i].id, d = l[i].id, f = u < d ? `${u},${d}` : `${d},${u}`;
      o[f] = i, o.keys.push(f);
    }
    for (let i = 0; i !== o.keys.length; i++) {
      const u = o.keys.pop(), d = o[u];
      t.push(a[d]), e.push(l[d]), delete o[u];
    }
  }
  setWorld(t) {
  }
  static boundingSphereCheck(t, e) {
    const o = new le();
    t.position.vsub(e.position, o);
    const a = t.shapes[0], l = e.shapes[0];
    return Math.pow(a.boundingSphereRadius + l.boundingSphereRadius, 2) > o.lengthSquared();
  }
  aabbQuery(t, e, o) {
    return console.warn(".aabbQuery is not implemented in this Broadphase subclass."), [];
  }
}
const Sw = new le();
new le();
new Ri();
new le();
const xw = { keys: [] }, _w = [], Ew = [];
new le();
new le();
new le();
class Wd extends ww {
  constructor() {
    super();
  }
  collisionPairs(t, e, o) {
    const a = t.bodies, l = a.length;
    let s, i;
    for (let u = 0; u !== l; u++) for (let d = 0; d !== u; d++) s = a[u], i = a[d], this.needBroadphaseCollision(s, i) && this.intersectionTest(s, i, e, o);
  }
  aabbQuery(t, e, o) {
    o === void 0 && (o = []);
    for (let a = 0; a < t.bodies.length; a++) {
      const l = t.bodies[a];
      l.aabbNeedsUpdate && l.updateAABB(), l.aabb.overlaps(e) && o.push(l);
    }
    return o;
  }
}
class Hl {
  constructor() {
    this.rayFromWorld = new le(), this.rayToWorld = new le(), this.hitNormalWorld = new le(), this.hitPointWorld = new le(), this.hasHit = false, this.shape = null, this.body = null, this.hitFaceIndex = -1, this.distance = -1, this.shouldStop = false;
  }
  reset() {
    this.rayFromWorld.setZero(), this.rayToWorld.setZero(), this.hitNormalWorld.setZero(), this.hitPointWorld.setZero(), this.hasHit = false, this.shape = null, this.body = null, this.hitFaceIndex = -1, this.distance = -1, this.shouldStop = false;
  }
  abort() {
    this.shouldStop = true;
  }
  set(t, e, o, a, l, s, i) {
    this.rayFromWorld.copy(t), this.rayToWorld.copy(e), this.hitNormalWorld.copy(o), this.hitPointWorld.copy(a), this.shape = l, this.body = s, this.distance = i;
  }
}
let Xd, Kd, $d, Yd, Zd, Qd, Jd;
const bp = { CLOSEST: 1, ANY: 2, ALL: 4 };
Xd = oo.types.SPHERE;
Kd = oo.types.PLANE;
$d = oo.types.BOX;
Yd = oo.types.CYLINDER;
Zd = oo.types.CONVEXPOLYHEDRON;
Qd = oo.types.HEIGHTFIELD;
Jd = oo.types.TRIMESH;
class Ci {
  get [Xd]() {
    return this._intersectSphere;
  }
  get [Kd]() {
    return this._intersectPlane;
  }
  get [$d]() {
    return this._intersectBox;
  }
  get [Yd]() {
    return this._intersectConvex;
  }
  get [Zd]() {
    return this._intersectConvex;
  }
  get [Qd]() {
    return this._intersectHeightfield;
  }
  get [Jd]() {
    return this._intersectTrimesh;
  }
  constructor(t, e) {
    t === void 0 && (t = new le()), e === void 0 && (e = new le()), this.from = t.clone(), this.to = e.clone(), this.direction = new le(), this.precision = 1e-4, this.checkCollisionResponse = true, this.skipBackfaces = false, this.collisionFilterMask = -1, this.collisionFilterGroup = -1, this.mode = Ci.ANY, this.result = new Hl(), this.hasHit = false, this.callback = (o) => {
    };
  }
  intersectWorld(t, e) {
    return this.mode = e.mode || Ci.ANY, this.result = e.result || new Hl(), this.skipBackfaces = !!e.skipBackfaces, this.collisionFilterMask = typeof e.collisionFilterMask < "u" ? e.collisionFilterMask : -1, this.collisionFilterGroup = typeof e.collisionFilterGroup < "u" ? e.collisionFilterGroup : -1, this.checkCollisionResponse = typeof e.checkCollisionResponse < "u" ? e.checkCollisionResponse : true, e.from && this.from.copy(e.from), e.to && this.to.copy(e.to), this.callback = e.callback || (() => {
    }), this.hasHit = false, this.result.reset(), this.updateDirection(), this.getAABB(Hh), Vf.length = 0, t.broadphase.aabbQuery(t, Hh, Vf), this.intersectBodies(Vf), this.hasHit;
  }
  intersectBody(t, e) {
    e && (this.result = e, this.updateDirection());
    const o = this.checkCollisionResponse;
    if (o && !t.collisionResponse || (this.collisionFilterGroup & t.collisionFilterMask) === 0 || (t.collisionFilterGroup & this.collisionFilterMask) === 0) return;
    const a = Aw, l = Tw;
    for (let s = 0, i = t.shapes.length; s < i; s++) {
      const u = t.shapes[s];
      if (!(o && !u.collisionResponse) && (t.quaternion.mult(t.shapeOrientations[s], l), t.quaternion.vmult(t.shapeOffsets[s], a), a.vadd(t.position, a), this.intersectShape(u, l, a, t), this.result.shouldStop)) break;
    }
  }
  intersectBodies(t, e) {
    e && (this.result = e, this.updateDirection());
    for (let o = 0, a = t.length; !this.result.shouldStop && o < a; o++) this.intersectBody(t[o]);
  }
  updateDirection() {
    this.to.vsub(this.from, this.direction), this.direction.normalize();
  }
  intersectShape(t, e, o, a) {
    const l = this.from;
    if (jw(l, this.direction, o) > t.boundingSphereRadius) return;
    const s = this[t.type];
    s && s.call(this, t, e, o, a, t);
  }
  _intersectBox(t, e, o, a, l) {
    return this._intersectConvex(t.convexPolyhedronRepresentation, e, o, a, l);
  }
  _intersectPlane(t, e, o, a, l) {
    const s = this.from, i = this.to, u = this.direction, d = new le(0, 0, 1);
    e.vmult(d, d);
    const f = new le();
    s.vsub(o, f);
    const p = f.dot(d);
    i.vsub(o, f);
    const g = f.dot(d);
    if (p * g > 0 || s.distanceTo(i) < p) return;
    const b = d.dot(u);
    if (Math.abs(b) < this.precision) return;
    const h = new le(), m = new le(), c = new le();
    s.vsub(o, h);
    const w = -d.dot(h) / b;
    u.scale(w, m), s.vadd(m, c), this.reportIntersection(d, c, l, a, -1);
  }
  getAABB(t) {
    const { lowerBound: e, upperBound: o } = t, a = this.to, l = this.from;
    e.x = Math.min(a.x, l.x), e.y = Math.min(a.y, l.y), e.z = Math.min(a.z, l.z), o.x = Math.max(a.x, l.x), o.y = Math.max(a.y, l.y), o.z = Math.max(a.z, l.z);
  }
  _intersectHeightfield(t, e, o, a, l) {
    t.data, t.elementSize;
    const s = kw;
    s.from.copy(this.from), s.to.copy(this.to), oi.pointToLocalFrame(o, e, s.from, s.from), oi.pointToLocalFrame(o, e, s.to, s.to), s.updateDirection();
    const i = Ow;
    let u, d, f, p;
    u = d = 0, f = p = t.data.length - 1;
    const g = new la();
    s.getAABB(g), t.getIndexOfPosition(g.lowerBound.x, g.lowerBound.y, i, true), u = Math.max(u, i[0]), d = Math.max(d, i[1]), t.getIndexOfPosition(g.upperBound.x, g.upperBound.y, i, true), f = Math.min(f, i[0] + 1), p = Math.min(p, i[1] + 1);
    for (let b = u; b < f; b++) for (let h = d; h < p; h++) {
      if (this.result.shouldStop) return;
      if (t.getAabbAtIndex(b, h, g), !!g.overlapsRay(s)) {
        if (t.getConvexTrianglePillar(b, h, false), oi.pointToWorldFrame(o, e, t.pillarOffset, wl), this._intersectConvex(t.pillarConvex, e, wl, a, l, Gh), this.result.shouldStop) return;
        t.getConvexTrianglePillar(b, h, true), oi.pointToWorldFrame(o, e, t.pillarOffset, wl), this._intersectConvex(t.pillarConvex, e, wl, a, l, Gh);
      }
    }
  }
  _intersectSphere(t, e, o, a, l) {
    const s = this.from, i = this.to, u = t.radius, d = (i.x - s.x) ** 2 + (i.y - s.y) ** 2 + (i.z - s.z) ** 2, f = 2 * ((i.x - s.x) * (s.x - o.x) + (i.y - s.y) * (s.y - o.y) + (i.z - s.z) * (s.z - o.z)), p = (s.x - o.x) ** 2 + (s.y - o.y) ** 2 + (s.z - o.z) ** 2 - u ** 2, g = f ** 2 - 4 * d * p, b = Pw, h = Cw;
    if (!(g < 0)) if (g === 0) s.lerp(i, g, b), b.vsub(o, h), h.normalize(), this.reportIntersection(h, b, l, a, -1);
    else {
      const m = (-f - Math.sqrt(g)) / (2 * d), c = (-f + Math.sqrt(g)) / (2 * d);
      if (m >= 0 && m <= 1 && (s.lerp(i, m, b), b.vsub(o, h), h.normalize(), this.reportIntersection(h, b, l, a, -1)), this.result.shouldStop) return;
      c >= 0 && c <= 1 && (s.lerp(i, c, b), b.vsub(o, h), h.normalize(), this.reportIntersection(h, b, l, a, -1));
    }
  }
  _intersectConvex(t, e, o, a, l, s) {
    const i = Rw, u = Wh, d = s && s.faceList || null, f = t.faces, p = t.vertices, g = t.faceNormals, b = this.direction, h = this.from, m = this.to, c = h.distanceTo(m), w = d ? d.length : f.length, T = this.result;
    for (let P = 0; !T.shouldStop && P < w; P++) {
      const k = d ? d[P] : P, R = f[k], F = g[k], v = e, U = o;
      u.copy(p[R[0]]), v.vmult(u, u), u.vadd(U, u), u.vsub(h, u), v.vmult(F, i);
      const M = b.dot(i);
      if (Math.abs(M) < this.precision) continue;
      const Z = i.dot(u) / M;
      if (!(Z < 0)) {
        b.scale(Z, ta), ta.vadd(h, ta), Ta.copy(p[R[0]]), v.vmult(Ta, Ta), U.vadd(Ta, Ta);
        for (let D = 1; !T.shouldStop && D < R.length - 1; D++) {
          Ba.copy(p[R[D]]), La.copy(p[R[D + 1]]), v.vmult(Ba, Ba), v.vmult(La, La), U.vadd(Ba, Ba), U.vadd(La, La);
          const V = ta.distanceTo(h);
          !(Ci.pointInTriangle(ta, Ta, Ba, La) || Ci.pointInTriangle(ta, Ba, Ta, La)) || V > c || this.reportIntersection(i, ta, l, a, k);
        }
      }
    }
  }
  _intersectTrimesh(t, e, o, a, l, s) {
    const i = Iw, u = Fw, d = Uw, f = Wh, p = Mw, g = Bw, b = Lw, h = Dw, m = Nw, c = t.indices;
    t.vertices;
    const w = this.from, T = this.to, P = this.direction;
    d.position.copy(o), d.quaternion.copy(e), oi.vectorToLocalFrame(o, e, P, p), oi.pointToLocalFrame(o, e, w, g), oi.pointToLocalFrame(o, e, T, b), b.x *= t.scale.x, b.y *= t.scale.y, b.z *= t.scale.z, g.x *= t.scale.x, g.y *= t.scale.y, g.z *= t.scale.z, b.vsub(g, p), p.normalize();
    const k = g.distanceSquared(b);
    t.tree.rayQuery(this, d, u);
    for (let R = 0, F = u.length; !this.result.shouldStop && R !== F; R++) {
      const v = u[R];
      t.getNormal(v, i), t.getVertex(c[v * 3], Ta), Ta.vsub(g, f);
      const U = p.dot(i), M = i.dot(f) / U;
      if (M < 0) continue;
      p.scale(M, ta), ta.vadd(g, ta), t.getVertex(c[v * 3 + 1], Ba), t.getVertex(c[v * 3 + 2], La);
      const Z = ta.distanceSquared(g);
      !(Ci.pointInTriangle(ta, Ba, Ta, La) || Ci.pointInTriangle(ta, Ta, Ba, La)) || Z > k || (oi.vectorToWorldFrame(e, i, m), oi.pointToWorldFrame(o, e, ta, h), this.reportIntersection(m, h, l, a, v));
    }
    u.length = 0;
  }
  reportIntersection(t, e, o, a, l) {
    const s = this.from, i = this.to, u = s.distanceTo(e), d = this.result;
    if (!(this.skipBackfaces && t.dot(this.direction) > 0)) switch (d.hitFaceIndex = typeof l < "u" ? l : -1, this.mode) {
      case Ci.ALL:
        this.hasHit = true, d.set(s, i, t, e, o, a, u), d.hasHit = true, this.callback(d);
        break;
      case Ci.CLOSEST:
        (u < d.distance || !d.hasHit) && (this.hasHit = true, d.hasHit = true, d.set(s, i, t, e, o, a, u));
        break;
      case Ci.ANY:
        this.hasHit = true, d.hasHit = true, d.set(s, i, t, e, o, a, u), d.shouldStop = true;
        break;
    }
  }
  static pointInTriangle(t, e, o, a) {
    a.vsub(e, Ws), o.vsub(e, sc), t.vsub(e, zf);
    const l = Ws.dot(Ws), s = Ws.dot(sc), i = Ws.dot(zf), u = sc.dot(sc), d = sc.dot(zf);
    let f, p;
    return (f = u * i - s * d) >= 0 && (p = l * d - s * i) >= 0 && f + p < l * u - s * s;
  }
}
Ci.CLOSEST = bp.CLOSEST;
Ci.ANY = bp.ANY;
Ci.ALL = bp.ALL;
const Hh = new la(), Vf = [], sc = new le(), zf = new le(), Aw = new le(), Tw = new Ri(), ta = new le(), Ta = new le(), Ba = new le(), La = new le();
new le();
new Hl();
const Gh = { faceList: [0] }, wl = new le(), kw = new Ci(), Ow = [], Pw = new le(), Cw = new le(), Rw = new le();
new le();
new le();
const Wh = new le(), Iw = new le(), Mw = new le(), Bw = new le(), Lw = new le(), Nw = new le(), Dw = new le();
new la();
const Fw = [], Uw = new oi(), Ws = new le(), Sl = new le();
function jw(E, t, e) {
  e.vsub(E, Ws);
  const o = Ws.dot(t);
  return t.scale(o, Sl), Sl.vadd(E, Sl), e.distanceTo(Sl);
}
class Vw {
  static defaults(t, e) {
    t === void 0 && (t = {});
    for (let o in e) o in t || (t[o] = e[o]);
    return t;
  }
}
class Xh {
  constructor() {
    this.spatial = new le(), this.rotational = new le();
  }
  multiplyElement(t) {
    return t.spatial.dot(this.spatial) + t.rotational.dot(this.rotational);
  }
  multiplyVectors(t, e) {
    return t.dot(this.spatial) + e.dot(this.rotational);
  }
}
class Pc {
  constructor(t, e, o, a) {
    o === void 0 && (o = -1e6), a === void 0 && (a = 1e6), this.id = Pc.idCounter++, this.minForce = o, this.maxForce = a, this.bi = t, this.bj = e, this.a = 0, this.b = 0, this.eps = 0, this.jacobianElementA = new Xh(), this.jacobianElementB = new Xh(), this.enabled = true, this.multiplier = 0, this.setSpookParams(1e7, 4, 1 / 60);
  }
  setSpookParams(t, e, o) {
    const a = e, l = t, s = o;
    this.a = 4 / (s * (1 + 4 * a)), this.b = 4 * a / (1 + 4 * a), this.eps = 4 / (s * s * l * (1 + 4 * a));
  }
  computeB(t, e, o) {
    const a = this.computeGW(), l = this.computeGq(), s = this.computeGiMf();
    return -l * t - a * e - s * o;
  }
  computeGq() {
    const t = this.jacobianElementA, e = this.jacobianElementB, o = this.bi, a = this.bj, l = o.position, s = a.position;
    return t.spatial.dot(l) + e.spatial.dot(s);
  }
  computeGW() {
    const t = this.jacobianElementA, e = this.jacobianElementB, o = this.bi, a = this.bj, l = o.velocity, s = a.velocity, i = o.angularVelocity, u = a.angularVelocity;
    return t.multiplyVectors(l, i) + e.multiplyVectors(s, u);
  }
  computeGWlambda() {
    const t = this.jacobianElementA, e = this.jacobianElementB, o = this.bi, a = this.bj, l = o.vlambda, s = a.vlambda, i = o.wlambda, u = a.wlambda;
    return t.multiplyVectors(l, i) + e.multiplyVectors(s, u);
  }
  computeGiMf() {
    const t = this.jacobianElementA, e = this.jacobianElementB, o = this.bi, a = this.bj, l = o.force, s = o.torque, i = a.force, u = a.torque, d = o.invMassSolve, f = a.invMassSolve;
    return l.scale(d, Kh), i.scale(f, $h), o.invInertiaWorldSolve.vmult(s, Yh), a.invInertiaWorldSolve.vmult(u, Zh), t.multiplyVectors(Kh, Yh) + e.multiplyVectors($h, Zh);
  }
  computeGiMGt() {
    const t = this.jacobianElementA, e = this.jacobianElementB, o = this.bi, a = this.bj, l = o.invMassSolve, s = a.invMassSolve, i = o.invInertiaWorldSolve, u = a.invInertiaWorldSolve;
    let d = l + s;
    return i.vmult(t.rotational, xl), d += xl.dot(t.rotational), u.vmult(e.rotational, xl), d += xl.dot(e.rotational), d;
  }
  addToWlambda(t) {
    const e = this.jacobianElementA, o = this.jacobianElementB, a = this.bi, l = this.bj, s = zw;
    a.vlambda.addScaledVector(a.invMassSolve * t, e.spatial, a.vlambda), l.vlambda.addScaledVector(l.invMassSolve * t, o.spatial, l.vlambda), a.invInertiaWorldSolve.vmult(e.rotational, s), a.wlambda.addScaledVector(t, s, a.wlambda), l.invInertiaWorldSolve.vmult(o.rotational, s), l.wlambda.addScaledVector(t, s, l.wlambda);
  }
  computeC() {
    return this.computeGiMGt() + this.eps;
  }
}
Pc.idCounter = 0;
const Kh = new le(), $h = new le(), Yh = new le(), Zh = new le(), xl = new le(), zw = new le();
class qw extends Pc {
  constructor(t, e, o) {
    o === void 0 && (o = 1e6), super(t, e, 0, o), this.restitution = 0, this.ri = new le(), this.rj = new le(), this.ni = new le();
  }
  computeB(t) {
    const e = this.a, o = this.b, a = this.bi, l = this.bj, s = this.ri, i = this.rj, u = Hw, d = Gw, f = a.velocity, p = a.angularVelocity;
    a.force, a.torque;
    const g = l.velocity, b = l.angularVelocity;
    l.force, l.torque;
    const h = Ww, m = this.jacobianElementA, c = this.jacobianElementB, w = this.ni;
    s.cross(w, u), i.cross(w, d), w.negate(m.spatial), u.negate(m.rotational), c.spatial.copy(w), c.rotational.copy(d), h.copy(l.position), h.vadd(i, h), h.vsub(a.position, h), h.vsub(s, h);
    const T = w.dot(h), P = this.restitution + 1, k = P * g.dot(w) - P * f.dot(w) + b.dot(d) - p.dot(u), R = this.computeGiMf();
    return -T * e - k * o - t * R;
  }
  getImpactVelocityAlongNormal() {
    const t = Xw, e = Kw, o = $w, a = Yw, l = Zw;
    return this.bi.position.vadd(this.ri, o), this.bj.position.vadd(this.rj, a), this.bi.getVelocityAtWorldPoint(o, t), this.bj.getVelocityAtWorldPoint(a, e), t.vsub(e, l), this.ni.dot(l);
  }
}
const Hw = new le(), Gw = new le(), Ww = new le(), Xw = new le(), Kw = new le(), $w = new le(), Yw = new le(), Zw = new le();
new le();
new le();
new le();
new le();
new le();
new le();
new le();
new le();
new le();
new le();
class Qh extends Pc {
  constructor(t, e, o) {
    super(t, e, -o, o), this.ri = new le(), this.rj = new le(), this.t = new le();
  }
  computeB(t) {
    this.a;
    const e = this.b;
    this.bi, this.bj;
    const o = this.ri, a = this.rj, l = Qw, s = Jw, i = this.t;
    o.cross(i, l), a.cross(i, s);
    const u = this.jacobianElementA, d = this.jacobianElementB;
    i.negate(u.spatial), l.negate(u.rotational), d.spatial.copy(i), d.rotational.copy(s);
    const f = this.computeGW(), p = this.computeGiMf();
    return -f * e - t * p;
  }
}
const Qw = new le(), Jw = new le();
class Ys {
  constructor(t, e, o) {
    o = Vw.defaults(o, { friction: 0.3, restitution: 0.3, contactEquationStiffness: 1e7, contactEquationRelaxation: 3, frictionEquationStiffness: 1e7, frictionEquationRelaxation: 3 }), this.id = Ys.idCounter++, this.materials = [t, e], this.friction = o.friction, this.restitution = o.restitution, this.contactEquationStiffness = o.contactEquationStiffness, this.contactEquationRelaxation = o.contactEquationRelaxation, this.frictionEquationStiffness = o.frictionEquationStiffness, this.frictionEquationRelaxation = o.frictionEquationRelaxation;
  }
}
Ys.idCounter = 0;
class Zs {
  constructor(t) {
    t === void 0 && (t = {});
    let e = "";
    typeof t == "string" && (e = t, t = {}), this.name = e, this.id = Zs.idCounter++, this.friction = typeof t.friction < "u" ? t.friction : -1, this.restitution = typeof t.restitution < "u" ? t.restitution : -1;
  }
}
Zs.idCounter = 0;
new le();
new le();
new le();
new le();
new le();
new le();
new le();
new le();
new le();
new le();
new le();
new le();
new le();
new le();
new le();
new le();
new le();
new le();
new le();
new Ci();
new le();
new le();
new le();
new le(1, 0, 0), new le(0, 1, 0), new le(0, 0, 1);
new le();
new le();
new le();
new le();
new le();
new le();
new le();
new le();
new le();
new le();
new le();
new le();
new le();
new le();
new le();
new le();
new le();
new le();
new le();
new le();
class t1 extends $s {
  constructor(t, e, o, a) {
    if (t === void 0 && (t = 1), e === void 0 && (e = 1), o === void 0 && (o = 1), a === void 0 && (a = 8), t < 0) throw new Error("The cylinder radiusTop cannot be negative.");
    if (e < 0) throw new Error("The cylinder radiusBottom cannot be negative.");
    const l = a, s = [], i = [], u = [], d = [], f = [], p = Math.cos, g = Math.sin;
    s.push(new le(-e * g(0), -o * 0.5, e * p(0))), d.push(0), s.push(new le(-t * g(0), o * 0.5, t * p(0))), f.push(1);
    for (let h = 0; h < l; h++) {
      const m = 2 * Math.PI / l * (h + 1), c = 2 * Math.PI / l * (h + 0.5);
      h < l - 1 ? (s.push(new le(-e * g(m), -o * 0.5, e * p(m))), d.push(2 * h + 2), s.push(new le(-t * g(m), o * 0.5, t * p(m))), f.push(2 * h + 3), u.push([2 * h, 2 * h + 1, 2 * h + 3, 2 * h + 2])) : u.push([2 * h, 2 * h + 1, 1, 0]), (l % 2 === 1 || h < l / 2) && i.push(new le(-g(c), 0, p(c)));
    }
    u.push(d), i.push(new le(0, 1, 0));
    const b = [];
    for (let h = 0; h < f.length; h++) b.push(f[f.length - h - 1]);
    u.push(b), super({ vertices: s, faces: u, axes: i }), this.type = oo.types.CYLINDER, this.radiusTop = t, this.radiusBottom = e, this.height = o, this.numSegments = a;
  }
}
class uc extends oo {
  constructor() {
    super({ type: oo.types.PLANE }), this.worldNormal = new le(), this.worldNormalNeedsUpdate = true, this.boundingSphereRadius = Number.MAX_VALUE;
  }
  computeWorldNormal(t) {
    const e = this.worldNormal;
    e.set(0, 0, 1), t.vmult(e, e), this.worldNormalNeedsUpdate = false;
  }
  calculateLocalInertia(t, e) {
    return e === void 0 && (e = new le()), e;
  }
  volume() {
    return Number.MAX_VALUE;
  }
  calculateWorldAABB(t, e, o, a) {
    ns.set(0, 0, 1), e.vmult(ns, ns);
    const l = Number.MAX_VALUE;
    o.set(-l, -l, -l), a.set(l, l, l), ns.x === 1 ? a.x = t.x : ns.x === -1 && (o.x = t.x), ns.y === 1 ? a.y = t.y : ns.y === -1 && (o.y = t.y), ns.z === 1 ? a.z = t.z : ns.z === -1 && (o.z = t.z);
  }
  updateBoundingSphereRadius() {
    this.boundingSphereRadius = Number.MAX_VALUE;
  }
}
const ns = new le();
new le();
new le();
new le();
new le();
new le();
new le();
new le();
new le();
new le();
new le();
new la();
new le();
new la();
new le();
new le();
new le();
new le();
new le();
new le();
new le();
new la();
new le();
new oi();
new la();
class e1 {
  constructor() {
    this.equations = [];
  }
  solve(t, e) {
    return 0;
  }
  addEquation(t) {
    t.enabled && !t.bi.isTrigger && !t.bj.isTrigger && this.equations.push(t);
  }
  removeEquation(t) {
    const e = this.equations, o = e.indexOf(t);
    o !== -1 && e.splice(o, 1);
  }
  removeAllEquations() {
    this.equations.length = 0;
  }
}
class r1 extends e1 {
  constructor() {
    super(), this.iterations = 10, this.tolerance = 1e-7;
  }
  solve(t, e) {
    let o = 0;
    const a = this.iterations, l = this.tolerance * this.tolerance, s = this.equations, i = s.length, u = e.bodies, d = u.length, f = t;
    let p, g, b, h, m, c;
    if (i !== 0) for (let k = 0; k !== d; k++) u[k].updateSolveMassProperties();
    const w = o1, T = i1, P = n1;
    w.length = i, T.length = i, P.length = i;
    for (let k = 0; k !== i; k++) {
      const R = s[k];
      P[k] = 0, T[k] = R.computeB(f), w[k] = 1 / R.computeC();
    }
    if (i !== 0) {
      for (let F = 0; F !== d; F++) {
        const v = u[F], U = v.vlambda, M = v.wlambda;
        U.set(0, 0, 0), M.set(0, 0, 0);
      }
      for (o = 0; o !== a; o++) {
        h = 0;
        for (let F = 0; F !== i; F++) {
          const v = s[F];
          p = T[F], g = w[F], c = P[F], m = v.computeGWlambda(), b = g * (p - m - v.eps * c), c + b < v.minForce ? b = v.minForce - c : c + b > v.maxForce && (b = v.maxForce - c), P[F] += b, h += b > 0 ? b : -b, v.addToWlambda(b);
        }
        if (h * h < l) break;
      }
      for (let F = 0; F !== d; F++) {
        const v = u[F], U = v.velocity, M = v.angularVelocity;
        v.vlambda.vmul(v.linearFactor, v.vlambda), U.vadd(v.vlambda, U), v.wlambda.vmul(v.angularFactor, v.wlambda), M.vadd(v.wlambda, M);
      }
      let k = s.length;
      const R = 1 / f;
      for (; k--; ) s[k].multiplier = P[k] * R;
    }
    return o;
  }
}
const n1 = [], o1 = [], i1 = [];
class a1 {
  constructor() {
    this.objects = [], this.type = Object;
  }
  release() {
    const t = arguments.length;
    for (let e = 0; e !== t; e++) this.objects.push(e < 0 || arguments.length <= e ? void 0 : arguments[e]);
    return this;
  }
  get() {
    return this.objects.length === 0 ? this.constructObject() : this.objects.pop();
  }
  constructObject() {
    throw new Error("constructObject() not implemented in this Pool subclass yet!");
  }
  resize(t) {
    const e = this.objects;
    for (; e.length > t; ) e.pop();
    for (; e.length < t; ) e.push(this.constructObject());
    return this;
  }
}
class s1 extends a1 {
  constructor() {
    super(...arguments), this.type = le;
  }
  constructObject() {
    return new le();
  }
}
const wi = { sphereSphere: oo.types.SPHERE, spherePlane: oo.types.SPHERE | oo.types.PLANE, boxBox: oo.types.BOX | oo.types.BOX, sphereBox: oo.types.SPHERE | oo.types.BOX, planeBox: oo.types.PLANE | oo.types.BOX, convexConvex: oo.types.CONVEXPOLYHEDRON, sphereConvex: oo.types.SPHERE | oo.types.CONVEXPOLYHEDRON, planeConvex: oo.types.PLANE | oo.types.CONVEXPOLYHEDRON, boxConvex: oo.types.BOX | oo.types.CONVEXPOLYHEDRON, sphereHeightfield: oo.types.SPHERE | oo.types.HEIGHTFIELD, boxHeightfield: oo.types.BOX | oo.types.HEIGHTFIELD, convexHeightfield: oo.types.CONVEXPOLYHEDRON | oo.types.HEIGHTFIELD, sphereParticle: oo.types.PARTICLE | oo.types.SPHERE, planeParticle: oo.types.PLANE | oo.types.PARTICLE, boxParticle: oo.types.BOX | oo.types.PARTICLE, convexParticle: oo.types.PARTICLE | oo.types.CONVEXPOLYHEDRON, cylinderCylinder: oo.types.CYLINDER, sphereCylinder: oo.types.SPHERE | oo.types.CYLINDER, planeCylinder: oo.types.PLANE | oo.types.CYLINDER, boxCylinder: oo.types.BOX | oo.types.CYLINDER, convexCylinder: oo.types.CONVEXPOLYHEDRON | oo.types.CYLINDER, heightfieldCylinder: oo.types.HEIGHTFIELD | oo.types.CYLINDER, particleCylinder: oo.types.PARTICLE | oo.types.CYLINDER, sphereTrimesh: oo.types.SPHERE | oo.types.TRIMESH, planeTrimesh: oo.types.PLANE | oo.types.TRIMESH };
class u1 {
  get [wi.sphereSphere]() {
    return this.sphereSphere;
  }
  get [wi.spherePlane]() {
    return this.spherePlane;
  }
  get [wi.boxBox]() {
    return this.boxBox;
  }
  get [wi.sphereBox]() {
    return this.sphereBox;
  }
  get [wi.planeBox]() {
    return this.planeBox;
  }
  get [wi.convexConvex]() {
    return this.convexConvex;
  }
  get [wi.sphereConvex]() {
    return this.sphereConvex;
  }
  get [wi.planeConvex]() {
    return this.planeConvex;
  }
  get [wi.boxConvex]() {
    return this.boxConvex;
  }
  get [wi.sphereHeightfield]() {
    return this.sphereHeightfield;
  }
  get [wi.boxHeightfield]() {
    return this.boxHeightfield;
  }
  get [wi.convexHeightfield]() {
    return this.convexHeightfield;
  }
  get [wi.sphereParticle]() {
    return this.sphereParticle;
  }
  get [wi.planeParticle]() {
    return this.planeParticle;
  }
  get [wi.boxParticle]() {
    return this.boxParticle;
  }
  get [wi.convexParticle]() {
    return this.convexParticle;
  }
  get [wi.cylinderCylinder]() {
    return this.convexConvex;
  }
  get [wi.sphereCylinder]() {
    return this.sphereConvex;
  }
  get [wi.planeCylinder]() {
    return this.planeConvex;
  }
  get [wi.boxCylinder]() {
    return this.boxConvex;
  }
  get [wi.convexCylinder]() {
    return this.convexConvex;
  }
  get [wi.heightfieldCylinder]() {
    return this.heightfieldCylinder;
  }
  get [wi.particleCylinder]() {
    return this.particleCylinder;
  }
  get [wi.sphereTrimesh]() {
    return this.sphereTrimesh;
  }
  get [wi.planeTrimesh]() {
    return this.planeTrimesh;
  }
  constructor(t) {
    this.contactPointPool = [], this.frictionEquationPool = [], this.result = [], this.frictionResult = [], this.v3pool = new s1(), this.world = t, this.currentContactMaterial = t.defaultContactMaterial, this.enableFrictionReduction = false;
  }
  createContactEquation(t, e, o, a, l, s) {
    let i;
    this.contactPointPool.length ? (i = this.contactPointPool.pop(), i.bi = t, i.bj = e) : i = new qw(t, e), i.enabled = t.collisionResponse && e.collisionResponse && o.collisionResponse && a.collisionResponse;
    const u = this.currentContactMaterial;
    i.restitution = u.restitution, i.setSpookParams(u.contactEquationStiffness, u.contactEquationRelaxation, this.world.dt);
    const d = o.material || t.material, f = a.material || e.material;
    return d && f && d.restitution >= 0 && f.restitution >= 0 && (i.restitution = d.restitution * f.restitution), i.si = l || o, i.sj = s || a, i;
  }
  createFrictionEquationsFromContact(t, e) {
    const o = t.bi, a = t.bj, l = t.si, s = t.sj, i = this.world, u = this.currentContactMaterial;
    let d = u.friction;
    const f = l.material || o.material, p = s.material || a.material;
    if (f && p && f.friction >= 0 && p.friction >= 0 && (d = f.friction * p.friction), d > 0) {
      const g = d * (i.frictionGravity || i.gravity).length();
      let b = o.invMass + a.invMass;
      b > 0 && (b = 1 / b);
      const h = this.frictionEquationPool, m = h.length ? h.pop() : new Qh(o, a, g * b), c = h.length ? h.pop() : new Qh(o, a, g * b);
      return m.bi = c.bi = o, m.bj = c.bj = a, m.minForce = c.minForce = -g * b, m.maxForce = c.maxForce = g * b, m.ri.copy(t.ri), m.rj.copy(t.rj), c.ri.copy(t.ri), c.rj.copy(t.rj), t.ni.tangents(m.t, c.t), m.setSpookParams(u.frictionEquationStiffness, u.frictionEquationRelaxation, i.dt), c.setSpookParams(u.frictionEquationStiffness, u.frictionEquationRelaxation, i.dt), m.enabled = c.enabled = t.enabled, e.push(m, c), true;
    }
    return false;
  }
  createFrictionFromAverage(t) {
    let e = this.result[this.result.length - 1];
    if (!this.createFrictionEquationsFromContact(e, this.frictionResult) || t === 1) return;
    const o = this.frictionResult[this.frictionResult.length - 2], a = this.frictionResult[this.frictionResult.length - 1];
    js.setZero(), ku.setZero(), Ou.setZero();
    const l = e.bi;
    e.bj;
    for (let i = 0; i !== t; i++) e = this.result[this.result.length - 1 - i], e.bi !== l ? (js.vadd(e.ni, js), ku.vadd(e.ri, ku), Ou.vadd(e.rj, Ou)) : (js.vsub(e.ni, js), ku.vadd(e.rj, ku), Ou.vadd(e.ri, Ou));
    const s = 1 / t;
    ku.scale(s, o.ri), Ou.scale(s, o.rj), a.ri.copy(o.ri), a.rj.copy(o.rj), js.normalize(), js.tangents(o.t, a.t);
  }
  getContacts(t, e, o, a, l, s, i) {
    this.contactPointPool = l, this.frictionEquationPool = i, this.result = a, this.frictionResult = s;
    const u = f1, d = p1, f = c1, p = l1;
    for (let g = 0, b = t.length; g !== b; g++) {
      const h = t[g], m = e[g];
      let c = null;
      h.material && m.material && (c = o.getContactMaterial(h.material, m.material) || null);
      const w = h.type & Gn.KINEMATIC && m.type & Gn.STATIC || h.type & Gn.STATIC && m.type & Gn.KINEMATIC || h.type & Gn.KINEMATIC && m.type & Gn.KINEMATIC;
      for (let T = 0; T < h.shapes.length; T++) {
        h.quaternion.mult(h.shapeOrientations[T], u), h.quaternion.vmult(h.shapeOffsets[T], f), f.vadd(h.position, f);
        const P = h.shapes[T];
        for (let k = 0; k < m.shapes.length; k++) {
          m.quaternion.mult(m.shapeOrientations[k], d), m.quaternion.vmult(m.shapeOffsets[k], p), p.vadd(m.position, p);
          const R = m.shapes[k];
          if (!(P.collisionFilterMask & R.collisionFilterGroup && R.collisionFilterMask & P.collisionFilterGroup) || f.distanceTo(p) > P.boundingSphereRadius + R.boundingSphereRadius) continue;
          let F = null;
          P.material && R.material && (F = o.getContactMaterial(P.material, R.material) || null), this.currentContactMaterial = F || c || o.defaultContactMaterial;
          const v = P.type | R.type, U = this[v];
          if (U) {
            let M = false;
            P.type < R.type ? M = U.call(this, P, R, f, p, u, d, h, m, P, R, w) : M = U.call(this, R, P, p, f, d, u, m, h, P, R, w), M && w && (o.shapeOverlapKeeper.set(P.id, R.id), o.bodyOverlapKeeper.set(h.id, m.id));
          }
        }
      }
    }
  }
  sphereSphere(t, e, o, a, l, s, i, u, d, f, p) {
    if (p) return o.distanceSquared(a) < (t.radius + e.radius) ** 2;
    const g = this.createContactEquation(i, u, t, e, d, f);
    a.vsub(o, g.ni), g.ni.normalize(), g.ri.copy(g.ni), g.rj.copy(g.ni), g.ri.scale(t.radius, g.ri), g.rj.scale(-e.radius, g.rj), g.ri.vadd(o, g.ri), g.ri.vsub(i.position, g.ri), g.rj.vadd(a, g.rj), g.rj.vsub(u.position, g.rj), this.result.push(g), this.createFrictionEquationsFromContact(g, this.frictionResult);
  }
  spherePlane(t, e, o, a, l, s, i, u, d, f, p) {
    const g = this.createContactEquation(i, u, t, e, d, f);
    if (g.ni.set(0, 0, 1), s.vmult(g.ni, g.ni), g.ni.negate(g.ni), g.ni.normalize(), g.ni.scale(t.radius, g.ri), o.vsub(a, _l), g.ni.scale(g.ni.dot(_l), Jh), _l.vsub(Jh, g.rj), -_l.dot(g.ni) <= t.radius) {
      if (p) return true;
      const b = g.ri, h = g.rj;
      b.vadd(o, b), b.vsub(i.position, b), h.vadd(a, h), h.vsub(u.position, h), this.result.push(g), this.createFrictionEquationsFromContact(g, this.frictionResult);
    }
  }
  boxBox(t, e, o, a, l, s, i, u, d, f, p) {
    return t.convexPolyhedronRepresentation.material = t.material, e.convexPolyhedronRepresentation.material = e.material, t.convexPolyhedronRepresentation.collisionResponse = t.collisionResponse, e.convexPolyhedronRepresentation.collisionResponse = e.collisionResponse, this.convexConvex(t.convexPolyhedronRepresentation, e.convexPolyhedronRepresentation, o, a, l, s, i, u, t, e, p);
  }
  sphereBox(t, e, o, a, l, s, i, u, d, f, p) {
    const g = this.v3pool, b = F1;
    o.vsub(a, El), e.getSideNormals(b, s);
    const h = t.radius;
    let m = false;
    const c = j1, w = V1, T = z1;
    let P = null, k = 0, R = 0, F = 0, v = null;
    for (let W = 0, lt = b.length; W !== lt && m === false; W++) {
      const pt = L1;
      pt.copy(b[W]);
      const at = pt.length();
      pt.normalize();
      const rt = El.dot(pt);
      if (rt < at + h && rt > 0) {
        const ot = N1, X = D1;
        ot.copy(b[(W + 1) % 3]), X.copy(b[(W + 2) % 3]);
        const I = ot.length(), nt = X.length();
        ot.normalize(), X.normalize();
        const ft = El.dot(ot), dt = El.dot(X);
        if (ft < I && ft > -I && dt < nt && dt > -nt) {
          const Lt = Math.abs(rt - at - h);
          if ((v === null || Lt < v) && (v = Lt, R = ft, F = dt, P = at, c.copy(pt), w.copy(ot), T.copy(X), k++, p)) return true;
        }
      }
    }
    if (k) {
      m = true;
      const W = this.createContactEquation(i, u, t, e, d, f);
      c.scale(-h, W.ri), W.ni.copy(c), W.ni.negate(W.ni), c.scale(P, c), w.scale(R, w), c.vadd(w, c), T.scale(F, T), c.vadd(T, W.rj), W.ri.vadd(o, W.ri), W.ri.vsub(i.position, W.ri), W.rj.vadd(a, W.rj), W.rj.vsub(u.position, W.rj), this.result.push(W), this.createFrictionEquationsFromContact(W, this.frictionResult);
    }
    let U = g.get();
    const M = U1;
    for (let W = 0; W !== 2 && !m; W++) for (let lt = 0; lt !== 2 && !m; lt++) for (let pt = 0; pt !== 2 && !m; pt++) if (U.set(0, 0, 0), W ? U.vadd(b[0], U) : U.vsub(b[0], U), lt ? U.vadd(b[1], U) : U.vsub(b[1], U), pt ? U.vadd(b[2], U) : U.vsub(b[2], U), a.vadd(U, M), M.vsub(o, M), M.lengthSquared() < h * h) {
      if (p) return true;
      m = true;
      const at = this.createContactEquation(i, u, t, e, d, f);
      at.ri.copy(M), at.ri.normalize(), at.ni.copy(at.ri), at.ri.scale(h, at.ri), at.rj.copy(U), at.ri.vadd(o, at.ri), at.ri.vsub(i.position, at.ri), at.rj.vadd(a, at.rj), at.rj.vsub(u.position, at.rj), this.result.push(at), this.createFrictionEquationsFromContact(at, this.frictionResult);
    }
    g.release(U), U = null;
    const Z = g.get(), D = g.get(), V = g.get(), S = g.get(), x = g.get(), B = b.length;
    for (let W = 0; W !== B && !m; W++) for (let lt = 0; lt !== B && !m; lt++) if (W % 3 !== lt % 3) {
      b[lt].cross(b[W], Z), Z.normalize(), b[W].vadd(b[lt], D), V.copy(o), V.vsub(D, V), V.vsub(a, V);
      const pt = V.dot(Z);
      Z.scale(pt, S);
      let at = 0;
      for (; at === W % 3 || at === lt % 3; ) at++;
      x.copy(o), x.vsub(S, x), x.vsub(D, x), x.vsub(a, x);
      const rt = Math.abs(pt), ot = x.length();
      if (rt < b[at].length() && ot < h) {
        if (p) return true;
        m = true;
        const X = this.createContactEquation(i, u, t, e, d, f);
        D.vadd(S, X.rj), X.rj.copy(X.rj), x.negate(X.ni), X.ni.normalize(), X.ri.copy(X.rj), X.ri.vadd(a, X.ri), X.ri.vsub(o, X.ri), X.ri.normalize(), X.ri.scale(h, X.ri), X.ri.vadd(o, X.ri), X.ri.vsub(i.position, X.ri), X.rj.vadd(a, X.rj), X.rj.vsub(u.position, X.rj), this.result.push(X), this.createFrictionEquationsFromContact(X, this.frictionResult);
      }
    }
    g.release(Z, D, V, S, x);
  }
  planeBox(t, e, o, a, l, s, i, u, d, f, p) {
    return e.convexPolyhedronRepresentation.material = e.material, e.convexPolyhedronRepresentation.collisionResponse = e.collisionResponse, e.convexPolyhedronRepresentation.id = e.id, this.planeConvex(t, e.convexPolyhedronRepresentation, o, a, l, s, i, u, t, e, p);
  }
  convexConvex(t, e, o, a, l, s, i, u, d, f, p, g, b) {
    const h = nS;
    if (!(o.distanceTo(a) > t.boundingSphereRadius + e.boundingSphereRadius) && t.findSeparatingAxis(e, o, l, a, s, h, g, b)) {
      const m = [], c = oS;
      t.clipAgainstHull(o, l, e, a, s, h, -100, 100, m);
      let w = 0;
      for (let T = 0; T !== m.length; T++) {
        if (p) return true;
        const P = this.createContactEquation(i, u, t, e, d, f), k = P.ri, R = P.rj;
        h.negate(P.ni), m[T].normal.negate(c), c.scale(m[T].depth, c), m[T].point.vadd(c, k), R.copy(m[T].point), k.vsub(o, k), R.vsub(a, R), k.vadd(o, k), k.vsub(i.position, k), R.vadd(a, R), R.vsub(u.position, R), this.result.push(P), w++, this.enableFrictionReduction || this.createFrictionEquationsFromContact(P, this.frictionResult);
      }
      this.enableFrictionReduction && w && this.createFrictionFromAverage(w);
    }
  }
  sphereConvex(t, e, o, a, l, s, i, u, d, f, p) {
    const g = this.v3pool;
    o.vsub(a, q1);
    const b = e.faceNormals, h = e.faces, m = e.vertices, c = t.radius;
    let w = false;
    for (let T = 0; T !== m.length; T++) {
      const P = m[T], k = X1;
      s.vmult(P, k), a.vadd(k, k);
      const R = W1;
      if (k.vsub(o, R), R.lengthSquared() < c * c) {
        if (p) return true;
        w = true;
        const F = this.createContactEquation(i, u, t, e, d, f);
        F.ri.copy(R), F.ri.normalize(), F.ni.copy(F.ri), F.ri.scale(c, F.ri), k.vsub(a, F.rj), F.ri.vadd(o, F.ri), F.ri.vsub(i.position, F.ri), F.rj.vadd(a, F.rj), F.rj.vsub(u.position, F.rj), this.result.push(F), this.createFrictionEquationsFromContact(F, this.frictionResult);
        return;
      }
    }
    for (let T = 0, P = h.length; T !== P && w === false; T++) {
      const k = b[T], R = h[T], F = K1;
      s.vmult(k, F);
      const v = $1;
      s.vmult(m[R[0]], v), v.vadd(a, v);
      const U = Y1;
      F.scale(-c, U), o.vadd(U, U);
      const M = Z1;
      U.vsub(v, M);
      const Z = M.dot(F), D = Q1;
      if (o.vsub(v, D), Z < 0 && D.dot(F) > 0) {
        const V = [];
        for (let S = 0, x = R.length; S !== x; S++) {
          const B = g.get();
          s.vmult(m[R[S]], B), a.vadd(B, B), V.push(B);
        }
        if (B1(V, F, o)) {
          if (p) return true;
          w = true;
          const S = this.createContactEquation(i, u, t, e, d, f);
          F.scale(-c, S.ri), F.negate(S.ni);
          const x = g.get();
          F.scale(-Z, x);
          const B = g.get();
          F.scale(-c, B), o.vsub(a, S.rj), S.rj.vadd(B, S.rj), S.rj.vadd(x, S.rj), S.rj.vadd(a, S.rj), S.rj.vsub(u.position, S.rj), S.ri.vadd(o, S.ri), S.ri.vsub(i.position, S.ri), g.release(x), g.release(B), this.result.push(S), this.createFrictionEquationsFromContact(S, this.frictionResult);
          for (let W = 0, lt = V.length; W !== lt; W++) g.release(V[W]);
          return;
        } else for (let S = 0; S !== R.length; S++) {
          const x = g.get(), B = g.get();
          s.vmult(m[R[(S + 1) % R.length]], x), s.vmult(m[R[(S + 2) % R.length]], B), a.vadd(x, x), a.vadd(B, B);
          const W = H1;
          B.vsub(x, W);
          const lt = G1;
          W.unit(lt);
          const pt = g.get(), at = g.get();
          o.vsub(x, at);
          const rt = at.dot(lt);
          lt.scale(rt, pt), pt.vadd(x, pt);
          const ot = g.get();
          if (pt.vsub(o, ot), rt > 0 && rt * rt < W.lengthSquared() && ot.lengthSquared() < c * c) {
            if (p) return true;
            const X = this.createContactEquation(i, u, t, e, d, f);
            pt.vsub(a, X.rj), pt.vsub(o, X.ni), X.ni.normalize(), X.ni.scale(c, X.ri), X.rj.vadd(a, X.rj), X.rj.vsub(u.position, X.rj), X.ri.vadd(o, X.ri), X.ri.vsub(i.position, X.ri), this.result.push(X), this.createFrictionEquationsFromContact(X, this.frictionResult);
            for (let I = 0, nt = V.length; I !== nt; I++) g.release(V[I]);
            g.release(x), g.release(B), g.release(pt), g.release(ot), g.release(at);
            return;
          }
          g.release(x), g.release(B), g.release(pt), g.release(ot), g.release(at);
        }
        for (let S = 0, x = V.length; S !== x; S++) g.release(V[S]);
      }
    }
  }
  planeConvex(t, e, o, a, l, s, i, u, d, f, p) {
    const g = J1, b = tS;
    b.set(0, 0, 1), l.vmult(b, b);
    let h = 0;
    const m = eS;
    for (let c = 0; c !== e.vertices.length; c++) if (g.copy(e.vertices[c]), s.vmult(g, g), a.vadd(g, g), g.vsub(o, m), b.dot(m) <= 0) {
      if (p) return true;
      const w = this.createContactEquation(i, u, t, e, d, f), T = rS;
      b.scale(b.dot(m), T), g.vsub(T, T), T.vsub(o, w.ri), w.ni.copy(b), g.vsub(a, w.rj), w.ri.vadd(o, w.ri), w.ri.vsub(i.position, w.ri), w.rj.vadd(a, w.rj), w.rj.vsub(u.position, w.rj), this.result.push(w), h++, this.enableFrictionReduction || this.createFrictionEquationsFromContact(w, this.frictionResult);
    }
    this.enableFrictionReduction && h && this.createFrictionFromAverage(h);
  }
  boxConvex(t, e, o, a, l, s, i, u, d, f, p) {
    return t.convexPolyhedronRepresentation.material = t.material, t.convexPolyhedronRepresentation.collisionResponse = t.collisionResponse, this.convexConvex(t.convexPolyhedronRepresentation, e, o, a, l, s, i, u, t, e, p);
  }
  sphereHeightfield(t, e, o, a, l, s, i, u, d, f, p) {
    const g = e.data, b = t.radius, h = e.elementSize, m = yS, c = mS;
    oi.pointToLocalFrame(a, s, o, c);
    let w = Math.floor((c.x - b) / h) - 1, T = Math.ceil((c.x + b) / h) + 1, P = Math.floor((c.y - b) / h) - 1, k = Math.ceil((c.y + b) / h) + 1;
    if (T < 0 || k < 0 || w > g.length || P > g[0].length) return;
    w < 0 && (w = 0), T < 0 && (T = 0), P < 0 && (P = 0), k < 0 && (k = 0), w >= g.length && (w = g.length - 1), T >= g.length && (T = g.length - 1), k >= g[0].length && (k = g[0].length - 1), P >= g[0].length && (P = g[0].length - 1);
    const R = [];
    e.getRectMinMax(w, P, T, k, R);
    const F = R[0], v = R[1];
    if (c.z - b > v || c.z + b < F) return;
    const U = this.result;
    for (let M = w; M < T; M++) for (let Z = P; Z < k; Z++) {
      const D = U.length;
      let V = false;
      if (e.getConvexTrianglePillar(M, Z, false), oi.pointToWorldFrame(a, s, e.pillarOffset, m), o.distanceTo(m) < e.pillarConvex.boundingSphereRadius + t.boundingSphereRadius && (V = this.sphereConvex(t, e.pillarConvex, o, m, l, s, i, u, t, e, p)), p && V || (e.getConvexTrianglePillar(M, Z, true), oi.pointToWorldFrame(a, s, e.pillarOffset, m), o.distanceTo(m) < e.pillarConvex.boundingSphereRadius + t.boundingSphereRadius && (V = this.sphereConvex(t, e.pillarConvex, o, m, l, s, i, u, t, e, p)), p && V)) return true;
      if (U.length - D > 2) return;
    }
  }
  boxHeightfield(t, e, o, a, l, s, i, u, d, f, p) {
    return t.convexPolyhedronRepresentation.material = t.material, t.convexPolyhedronRepresentation.collisionResponse = t.collisionResponse, this.convexHeightfield(t.convexPolyhedronRepresentation, e, o, a, l, s, i, u, t, e, p);
  }
  convexHeightfield(t, e, o, a, l, s, i, u, d, f, p) {
    const g = e.data, b = e.elementSize, h = t.boundingSphereRadius, m = hS, c = dS, w = pS;
    oi.pointToLocalFrame(a, s, o, w);
    let T = Math.floor((w.x - h) / b) - 1, P = Math.ceil((w.x + h) / b) + 1, k = Math.floor((w.y - h) / b) - 1, R = Math.ceil((w.y + h) / b) + 1;
    if (P < 0 || R < 0 || T > g.length || k > g[0].length) return;
    T < 0 && (T = 0), P < 0 && (P = 0), k < 0 && (k = 0), R < 0 && (R = 0), T >= g.length && (T = g.length - 1), P >= g.length && (P = g.length - 1), R >= g[0].length && (R = g[0].length - 1), k >= g[0].length && (k = g[0].length - 1);
    const F = [];
    e.getRectMinMax(T, k, P, R, F);
    const v = F[0], U = F[1];
    if (!(w.z - h > U || w.z + h < v)) for (let M = T; M < P; M++) for (let Z = k; Z < R; Z++) {
      let D = false;
      if (e.getConvexTrianglePillar(M, Z, false), oi.pointToWorldFrame(a, s, e.pillarOffset, m), o.distanceTo(m) < e.pillarConvex.boundingSphereRadius + t.boundingSphereRadius && (D = this.convexConvex(t, e.pillarConvex, o, m, l, s, i, u, null, null, p, c, null)), p && D || (e.getConvexTrianglePillar(M, Z, true), oi.pointToWorldFrame(a, s, e.pillarOffset, m), o.distanceTo(m) < e.pillarConvex.boundingSphereRadius + t.boundingSphereRadius && (D = this.convexConvex(t, e.pillarConvex, o, m, l, s, i, u, null, null, p, c, null)), p && D)) return true;
    }
  }
  sphereParticle(t, e, o, a, l, s, i, u, d, f, p) {
    const g = uS;
    if (g.set(0, 0, 1), a.vsub(o, g), g.lengthSquared() <= t.radius * t.radius) {
      if (p) return true;
      const b = this.createContactEquation(u, i, e, t, d, f);
      g.normalize(), b.rj.copy(g), b.rj.scale(t.radius, b.rj), b.ni.copy(g), b.ni.negate(b.ni), b.ri.set(0, 0, 0), this.result.push(b), this.createFrictionEquationsFromContact(b, this.frictionResult);
    }
  }
  planeParticle(t, e, o, a, l, s, i, u, d, f, p) {
    const g = iS;
    g.set(0, 0, 1), i.quaternion.vmult(g, g);
    const b = aS;
    if (a.vsub(i.position, b), g.dot(b) <= 0) {
      if (p) return true;
      const h = this.createContactEquation(u, i, e, t, d, f);
      h.ni.copy(g), h.ni.negate(h.ni), h.ri.set(0, 0, 0);
      const m = sS;
      g.scale(g.dot(a), m), a.vsub(m, m), h.rj.copy(m), this.result.push(h), this.createFrictionEquationsFromContact(h, this.frictionResult);
    }
  }
  boxParticle(t, e, o, a, l, s, i, u, d, f, p) {
    return t.convexPolyhedronRepresentation.material = t.material, t.convexPolyhedronRepresentation.collisionResponse = t.collisionResponse, this.convexParticle(t.convexPolyhedronRepresentation, e, o, a, l, s, i, u, t, e, p);
  }
  convexParticle(t, e, o, a, l, s, i, u, d, f, p) {
    let g = -1;
    const b = lS, h = fS;
    let m = null;
    const c = cS;
    if (c.copy(a), c.vsub(o, c), l.conjugate(td), td.vmult(c, c), t.pointIsInside(c)) {
      t.worldVerticesNeedsUpdate && t.computeWorldVertices(o, l), t.worldFaceNormalsNeedsUpdate && t.computeWorldFaceNormals(l);
      for (let w = 0, T = t.faces.length; w !== T; w++) {
        const P = [t.worldVertices[t.faces[w][0]]], k = t.worldFaceNormals[w];
        a.vsub(P[0], ed);
        const R = -k.dot(ed);
        if (m === null || Math.abs(R) < Math.abs(m)) {
          if (p) return true;
          m = R, g = w, b.copy(k);
        }
      }
      if (g !== -1) {
        const w = this.createContactEquation(u, i, e, t, d, f);
        b.scale(m, h), h.vadd(a, h), h.vsub(o, h), w.rj.copy(h), b.negate(w.ni), w.ri.set(0, 0, 0);
        const T = w.ri, P = w.rj;
        T.vadd(a, T), T.vsub(u.position, T), P.vadd(o, P), P.vsub(i.position, P), this.result.push(w), this.createFrictionEquationsFromContact(w, this.frictionResult);
      } else console.warn("Point found inside convex, but did not find penetrating face!");
    }
  }
  heightfieldCylinder(t, e, o, a, l, s, i, u, d, f, p) {
    return this.convexHeightfield(e, t, a, o, s, l, u, i, d, f, p);
  }
  particleCylinder(t, e, o, a, l, s, i, u, d, f, p) {
    return this.convexParticle(e, t, a, o, s, l, u, i, d, f, p);
  }
  sphereTrimesh(t, e, o, a, l, s, i, u, d, f, p) {
    const g = w1, b = S1, h = x1, m = _1, c = E1, w = A1, T = P1, P = b1, k = g1, R = C1;
    oi.pointToLocalFrame(a, s, o, c);
    const F = t.radius;
    T.lowerBound.set(c.x - F, c.y - F, c.z - F), T.upperBound.set(c.x + F, c.y + F, c.z + F), e.getTrianglesInAABB(T, R);
    const v = v1, U = t.radius * t.radius;
    for (let S = 0; S < R.length; S++) for (let x = 0; x < 3; x++) if (e.getVertex(e.indices[R[S] * 3 + x], v), v.vsub(c, k), k.lengthSquared() <= U) {
      if (P.copy(v), oi.pointToWorldFrame(a, s, P, v), v.vsub(o, k), p) return true;
      let B = this.createContactEquation(i, u, t, e, d, f);
      B.ni.copy(k), B.ni.normalize(), B.ri.copy(B.ni), B.ri.scale(t.radius, B.ri), B.ri.vadd(o, B.ri), B.ri.vsub(i.position, B.ri), B.rj.copy(v), B.rj.vsub(u.position, B.rj), this.result.push(B), this.createFrictionEquationsFromContact(B, this.frictionResult);
    }
    for (let S = 0; S < R.length; S++) for (let x = 0; x < 3; x++) {
      e.getVertex(e.indices[R[S] * 3 + x], g), e.getVertex(e.indices[R[S] * 3 + (x + 1) % 3], b), b.vsub(g, h), c.vsub(b, w);
      const B = w.dot(h);
      c.vsub(g, w);
      let W = w.dot(h);
      if (W > 0 && B < 0 && (c.vsub(g, w), m.copy(h), m.normalize(), W = w.dot(m), m.scale(W, w), w.vadd(g, w), w.distanceTo(c) < t.radius)) {
        if (p) return true;
        const lt = this.createContactEquation(i, u, t, e, d, f);
        w.vsub(c, lt.ni), lt.ni.normalize(), lt.ni.scale(t.radius, lt.ri), lt.ri.vadd(o, lt.ri), lt.ri.vsub(i.position, lt.ri), oi.pointToWorldFrame(a, s, w, w), w.vsub(u.position, lt.rj), oi.vectorToWorldFrame(s, lt.ni, lt.ni), oi.vectorToWorldFrame(s, lt.ri, lt.ri), this.result.push(lt), this.createFrictionEquationsFromContact(lt, this.frictionResult);
      }
    }
    const M = T1, Z = k1, D = O1, V = y1;
    for (let S = 0, x = R.length; S !== x; S++) {
      e.getTriangleVertices(R[S], M, Z, D), e.getNormal(R[S], V), c.vsub(M, w);
      let B = w.dot(V);
      if (V.scale(B, w), c.vsub(w, w), B = w.distanceTo(c), Ci.pointInTriangle(w, M, Z, D) && B < t.radius) {
        if (p) return true;
        let W = this.createContactEquation(i, u, t, e, d, f);
        w.vsub(c, W.ni), W.ni.normalize(), W.ni.scale(t.radius, W.ri), W.ri.vadd(o, W.ri), W.ri.vsub(i.position, W.ri), oi.pointToWorldFrame(a, s, w, w), w.vsub(u.position, W.rj), oi.vectorToWorldFrame(s, W.ni, W.ni), oi.vectorToWorldFrame(s, W.ri, W.ri), this.result.push(W), this.createFrictionEquationsFromContact(W, this.frictionResult);
      }
    }
    R.length = 0;
  }
  planeTrimesh(t, e, o, a, l, s, i, u, d, f, p) {
    const g = new le(), b = h1;
    b.set(0, 0, 1), l.vmult(b, b);
    for (let h = 0; h < e.vertices.length / 3; h++) {
      e.getVertex(h, g);
      const m = new le();
      m.copy(g), oi.pointToWorldFrame(a, s, m, g);
      const c = d1;
      if (g.vsub(o, c), b.dot(c) <= 0) {
        if (p) return true;
        const w = this.createContactEquation(i, u, t, e, d, f);
        w.ni.copy(b);
        const T = m1;
        b.scale(c.dot(b), T), g.vsub(T, T), w.ri.copy(T), w.ri.vsub(i.position, w.ri), w.rj.copy(g), w.rj.vsub(u.position, w.rj), this.result.push(w), this.createFrictionEquationsFromContact(w, this.frictionResult);
      }
    }
  }
}
const js = new le(), ku = new le(), Ou = new le(), c1 = new le(), l1 = new le(), f1 = new Ri(), p1 = new Ri(), h1 = new le(), d1 = new le(), m1 = new le(), y1 = new le(), g1 = new le();
new le();
const v1 = new le(), b1 = new le(), w1 = new le(), S1 = new le(), x1 = new le(), _1 = new le(), E1 = new le(), A1 = new le(), T1 = new le(), k1 = new le(), O1 = new le(), P1 = new la(), C1 = [], _l = new le(), Jh = new le(), R1 = new le(), I1 = new le(), M1 = new le();
function B1(E, t, e) {
  let o = null;
  const a = E.length;
  for (let l = 0; l !== a; l++) {
    const s = E[l], i = R1;
    E[(l + 1) % a].vsub(s, i);
    const u = I1;
    i.cross(t, u);
    const d = M1;
    e.vsub(s, d);
    const f = u.dot(d);
    if (o === null || f > 0 && o === true || f <= 0 && o === false) {
      o === null && (o = f > 0);
      continue;
    } else return false;
  }
  return true;
}
const El = new le(), L1 = new le(), N1 = new le(), D1 = new le(), F1 = [new le(), new le(), new le(), new le(), new le(), new le()], U1 = new le(), j1 = new le(), V1 = new le(), z1 = new le(), q1 = new le(), H1 = new le(), G1 = new le(), W1 = new le(), X1 = new le(), K1 = new le(), $1 = new le(), Y1 = new le(), Z1 = new le(), Q1 = new le();
new le();
new le();
const J1 = new le(), tS = new le(), eS = new le(), rS = new le(), nS = new le(), oS = new le(), iS = new le(), aS = new le(), sS = new le(), uS = new le(), td = new Ri(), cS = new le();
new le();
const lS = new le(), ed = new le(), fS = new le(), pS = new le(), hS = new le(), dS = [0], mS = new le(), yS = new le();
class rd {
  constructor() {
    this.current = [], this.previous = [];
  }
  getKey(t, e) {
    if (e < t) {
      const o = e;
      e = t, t = o;
    }
    return t << 16 | e;
  }
  set(t, e) {
    const o = this.getKey(t, e), a = this.current;
    let l = 0;
    for (; o > a[l]; ) l++;
    if (o !== a[l]) {
      for (let s = a.length - 1; s >= l; s--) a[s + 1] = a[s];
      a[l] = o;
    }
  }
  tick() {
    const t = this.current;
    this.current = this.previous, this.previous = t, this.current.length = 0;
  }
  getDiff(t, e) {
    const o = this.current, a = this.previous, l = o.length, s = a.length;
    let i = 0;
    for (let u = 0; u < l; u++) {
      let d = false;
      const f = o[u];
      for (; f > a[i]; ) i++;
      d = f === a[i], d || nd(t, f);
    }
    i = 0;
    for (let u = 0; u < s; u++) {
      let d = false;
      const f = a[u];
      for (; f > o[i]; ) i++;
      d = o[i] === f, d || nd(e, f);
    }
  }
}
function nd(E, t) {
  E.push((t & 4294901760) >> 16, t & 65535);
}
const qf = (E, t) => E < t ? `${E}-${t}` : `${t}-${E}`;
class gS {
  constructor() {
    this.data = { keys: [] };
  }
  get(t, e) {
    const o = qf(t, e);
    return this.data[o];
  }
  set(t, e, o) {
    const a = qf(t, e);
    this.get(t, e) || this.data.keys.push(a), this.data[a] = o;
  }
  delete(t, e) {
    const o = qf(t, e), a = this.data.keys.indexOf(o);
    a !== -1 && this.data.keys.splice(a, 1), delete this.data[o];
  }
  reset() {
    const t = this.data, e = t.keys;
    for (; e.length > 0; ) {
      const o = e.pop();
      delete t[o];
    }
  }
}
class vS extends Gd {
  constructor(t) {
    t === void 0 && (t = {}), super(), this.dt = -1, this.allowSleep = !!t.allowSleep, this.contacts = [], this.frictionEquations = [], this.quatNormalizeSkip = t.quatNormalizeSkip !== void 0 ? t.quatNormalizeSkip : 0, this.quatNormalizeFast = t.quatNormalizeFast !== void 0 ? t.quatNormalizeFast : false, this.time = 0, this.stepnumber = 0, this.default_dt = 1 / 60, this.nextId = 0, this.gravity = new le(), t.gravity && this.gravity.copy(t.gravity), t.frictionGravity && (this.frictionGravity = new le(), this.frictionGravity.copy(t.frictionGravity)), this.broadphase = t.broadphase !== void 0 ? t.broadphase : new Wd(), this.bodies = [], this.hasActiveBodies = false, this.solver = t.solver !== void 0 ? t.solver : new r1(), this.constraints = [], this.narrowphase = new u1(this), this.collisionMatrix = new zh(), this.collisionMatrixPrevious = new zh(), this.bodyOverlapKeeper = new rd(), this.shapeOverlapKeeper = new rd(), this.contactmaterials = [], this.contactMaterialTable = new gS(), this.defaultMaterial = new Zs("default"), this.defaultContactMaterial = new Ys(this.defaultMaterial, this.defaultMaterial, { friction: 0.3, restitution: 0 }), this.doProfiling = false, this.profile = { solve: 0, makeContactConstraints: 0, broadphase: 0, integrate: 0, narrowphase: 0 }, this.accumulator = 0, this.subsystems = [], this.addBodyEvent = { type: "addBody", body: null }, this.removeBodyEvent = { type: "removeBody", body: null }, this.idToBodyMap = {}, this.broadphase.setWorld(this);
  }
  getContactMaterial(t, e) {
    return this.contactMaterialTable.get(t.id, e.id);
  }
  collisionMatrixTick() {
    const t = this.collisionMatrixPrevious;
    this.collisionMatrixPrevious = this.collisionMatrix, this.collisionMatrix = t, this.collisionMatrix.reset(), this.bodyOverlapKeeper.tick(), this.shapeOverlapKeeper.tick();
  }
  addConstraint(t) {
    this.constraints.push(t);
  }
  removeConstraint(t) {
    const e = this.constraints.indexOf(t);
    e !== -1 && this.constraints.splice(e, 1);
  }
  rayTest(t, e, o) {
    o instanceof Hl ? this.raycastClosest(t, e, { skipBackfaces: true }, o) : this.raycastAll(t, e, { skipBackfaces: true }, o);
  }
  raycastAll(t, e, o, a) {
    return o === void 0 && (o = {}), o.mode = Ci.ALL, o.from = t, o.to = e, o.callback = a, Hf.intersectWorld(this, o);
  }
  raycastAny(t, e, o, a) {
    return o === void 0 && (o = {}), o.mode = Ci.ANY, o.from = t, o.to = e, o.result = a, Hf.intersectWorld(this, o);
  }
  raycastClosest(t, e, o, a) {
    return o === void 0 && (o = {}), o.mode = Ci.CLOSEST, o.from = t, o.to = e, o.result = a, Hf.intersectWorld(this, o);
  }
  addBody(t) {
    this.bodies.includes(t) || (t.index = this.bodies.length, this.bodies.push(t), t.world = this, t.initPosition.copy(t.position), t.initVelocity.copy(t.velocity), t.timeLastSleepy = this.time, t instanceof Gn && (t.initAngularVelocity.copy(t.angularVelocity), t.initQuaternion.copy(t.quaternion)), this.collisionMatrix.setNumObjects(this.bodies.length), this.addBodyEvent.body = t, this.idToBodyMap[t.id] = t, this.dispatchEvent(this.addBodyEvent));
  }
  removeBody(t) {
    t.world = null;
    const e = this.bodies.length - 1, o = this.bodies, a = o.indexOf(t);
    if (a !== -1) {
      o.splice(a, 1);
      for (let l = 0; l !== o.length; l++) o[l].index = l;
      this.collisionMatrix.setNumObjects(e), this.removeBodyEvent.body = t, delete this.idToBodyMap[t.id], this.dispatchEvent(this.removeBodyEvent);
    }
  }
  getBodyById(t) {
    return this.idToBodyMap[t];
  }
  getShapeById(t) {
    const e = this.bodies;
    for (let o = 0; o < e.length; o++) {
      const a = e[o].shapes;
      for (let l = 0; l < a.length; l++) {
        const s = a[l];
        if (s.id === t) return s;
      }
    }
    return null;
  }
  addContactMaterial(t) {
    this.contactmaterials.push(t), this.contactMaterialTable.set(t.materials[0].id, t.materials[1].id, t);
  }
  removeContactMaterial(t) {
    const e = this.contactmaterials.indexOf(t);
    e !== -1 && (this.contactmaterials.splice(e, 1), this.contactMaterialTable.delete(t.materials[0].id, t.materials[1].id));
  }
  fixedStep(t, e) {
    t === void 0 && (t = 1 / 60), e === void 0 && (e = 10);
    const o = Ni.now() / 1e3;
    if (!this.lastCallTime) this.step(t, void 0, e);
    else {
      const a = o - this.lastCallTime;
      this.step(t, a, e);
    }
    this.lastCallTime = o;
  }
  step(t, e, o) {
    if (o === void 0 && (o = 10), e === void 0) this.internalStep(t), this.time += t;
    else {
      this.accumulator += e;
      const a = Ni.now();
      let l = 0;
      for (; this.accumulator >= t && l < o && (this.internalStep(t), this.accumulator -= t, l++, !(Ni.now() - a > t * 1e3)); ) ;
      this.accumulator = this.accumulator % t;
      const s = this.accumulator / t;
      for (let i = 0; i !== this.bodies.length; i++) {
        const u = this.bodies[i];
        u.previousPosition.lerp(u.position, s, u.interpolatedPosition), u.previousQuaternion.slerp(u.quaternion, s, u.interpolatedQuaternion), u.previousQuaternion.normalize();
      }
      this.time += e;
    }
  }
  internalStep(t) {
    this.dt = t;
    const e = this.contacts, o = _S, a = ES, l = this.bodies.length, s = this.bodies, i = this.solver, u = this.gravity, d = this.doProfiling, f = this.profile, p = Gn.DYNAMIC;
    let g = -1 / 0;
    const b = this.constraints, h = xS;
    u.length();
    const m = u.x, c = u.y, w = u.z;
    let T = 0;
    for (d && (g = Ni.now()), T = 0; T !== l; T++) {
      const V = s[T];
      if (V.type === p) {
        const S = V.force, x = V.mass;
        S.x += x * m, S.y += x * c, S.z += x * w;
      }
    }
    for (let V = 0, S = this.subsystems.length; V !== S; V++) this.subsystems[V].update();
    d && (g = Ni.now()), o.length = 0, a.length = 0, this.broadphase.collisionPairs(this, o, a), d && (f.broadphase = Ni.now() - g);
    let P = b.length;
    for (T = 0; T !== P; T++) {
      const V = b[T];
      if (!V.collideConnected) for (let S = o.length - 1; S >= 0; S -= 1) (V.bodyA === o[S] && V.bodyB === a[S] || V.bodyB === o[S] && V.bodyA === a[S]) && (o.splice(S, 1), a.splice(S, 1));
    }
    this.collisionMatrixTick(), d && (g = Ni.now());
    const k = SS, R = e.length;
    for (T = 0; T !== R; T++) k.push(e[T]);
    e.length = 0;
    const F = this.frictionEquations.length;
    for (T = 0; T !== F; T++) h.push(this.frictionEquations[T]);
    for (this.frictionEquations.length = 0, this.narrowphase.getContacts(o, a, this, e, k, this.frictionEquations, h), d && (f.narrowphase = Ni.now() - g), d && (g = Ni.now()), T = 0; T < this.frictionEquations.length; T++) i.addEquation(this.frictionEquations[T]);
    const v = e.length;
    for (let V = 0; V !== v; V++) {
      const S = e[V], x = S.bi, B = S.bj, W = S.si, lt = S.sj;
      let pt;
      if (x.material && B.material ? pt = this.getContactMaterial(x.material, B.material) || this.defaultContactMaterial : pt = this.defaultContactMaterial, pt.friction, x.material && B.material && (x.material.friction >= 0 && B.material.friction >= 0 && x.material.friction * B.material.friction, x.material.restitution >= 0 && B.material.restitution >= 0 && (S.restitution = x.material.restitution * B.material.restitution)), i.addEquation(S), x.allowSleep && x.type === Gn.DYNAMIC && x.sleepState === Gn.SLEEPING && B.sleepState === Gn.AWAKE && B.type !== Gn.STATIC) {
        const at = B.velocity.lengthSquared() + B.angularVelocity.lengthSquared(), rt = B.sleepSpeedLimit ** 2;
        at >= rt * 2 && (x.wakeUpAfterNarrowphase = true);
      }
      if (B.allowSleep && B.type === Gn.DYNAMIC && B.sleepState === Gn.SLEEPING && x.sleepState === Gn.AWAKE && x.type !== Gn.STATIC) {
        const at = x.velocity.lengthSquared() + x.angularVelocity.lengthSquared(), rt = x.sleepSpeedLimit ** 2;
        at >= rt * 2 && (B.wakeUpAfterNarrowphase = true);
      }
      this.collisionMatrix.set(x, B, true), this.collisionMatrixPrevious.get(x, B) || (cc.body = B, cc.contact = S, x.dispatchEvent(cc), cc.body = x, B.dispatchEvent(cc)), this.bodyOverlapKeeper.set(x.id, B.id), this.shapeOverlapKeeper.set(W.id, lt.id);
    }
    for (this.emitContactEvents(), d && (f.makeContactConstraints = Ni.now() - g, g = Ni.now()), T = 0; T !== l; T++) {
      const V = s[T];
      V.wakeUpAfterNarrowphase && (V.wakeUp(), V.wakeUpAfterNarrowphase = false);
    }
    for (P = b.length, T = 0; T !== P; T++) {
      const V = b[T];
      V.update();
      for (let S = 0, x = V.equations.length; S !== x; S++) {
        const B = V.equations[S];
        i.addEquation(B);
      }
    }
    i.solve(t, this), d && (f.solve = Ni.now() - g), i.removeAllEquations();
    const U = Math.pow;
    for (T = 0; T !== l; T++) {
      const V = s[T];
      if (V.type & p) {
        const S = U(1 - V.linearDamping, t), x = V.velocity;
        x.scale(S, x);
        const B = V.angularVelocity;
        if (B) {
          const W = U(1 - V.angularDamping, t);
          B.scale(W, B);
        }
      }
    }
    this.dispatchEvent(wS), d && (g = Ni.now());
    const M = this.stepnumber % (this.quatNormalizeSkip + 1) === 0, Z = this.quatNormalizeFast;
    for (T = 0; T !== l; T++) s[T].integrate(t, M, Z);
    this.clearForces(), this.broadphase.dirty = true, d && (f.integrate = Ni.now() - g), this.stepnumber += 1, this.dispatchEvent(bS);
    let D = true;
    if (this.allowSleep) for (D = false, T = 0; T !== l; T++) {
      const V = s[T];
      V.sleepTick(this.time), V.sleepState !== Gn.SLEEPING && (D = true);
    }
    this.hasActiveBodies = D;
  }
  emitContactEvents() {
    const t = this.hasAnyEventListener("beginContact"), e = this.hasAnyEventListener("endContact");
    if ((t || e) && this.bodyOverlapKeeper.getDiff(os, is), t) {
      for (let l = 0, s = os.length; l < s; l += 2) lc.bodyA = this.getBodyById(os[l]), lc.bodyB = this.getBodyById(os[l + 1]), this.dispatchEvent(lc);
      lc.bodyA = lc.bodyB = null;
    }
    if (e) {
      for (let l = 0, s = is.length; l < s; l += 2) fc.bodyA = this.getBodyById(is[l]), fc.bodyB = this.getBodyById(is[l + 1]), this.dispatchEvent(fc);
      fc.bodyA = fc.bodyB = null;
    }
    os.length = is.length = 0;
    const o = this.hasAnyEventListener("beginShapeContact"), a = this.hasAnyEventListener("endShapeContact");
    if ((o || a) && this.shapeOverlapKeeper.getDiff(os, is), o) {
      for (let l = 0, s = os.length; l < s; l += 2) {
        const i = this.getShapeById(os[l]), u = this.getShapeById(os[l + 1]);
        as.shapeA = i, as.shapeB = u, i && (as.bodyA = i.body), u && (as.bodyB = u.body), this.dispatchEvent(as);
      }
      as.bodyA = as.bodyB = as.shapeA = as.shapeB = null;
    }
    if (a) {
      for (let l = 0, s = is.length; l < s; l += 2) {
        const i = this.getShapeById(is[l]), u = this.getShapeById(is[l + 1]);
        ss.shapeA = i, ss.shapeB = u, i && (ss.bodyA = i.body), u && (ss.bodyB = u.body), this.dispatchEvent(ss);
      }
      ss.bodyA = ss.bodyB = ss.shapeA = ss.shapeB = null;
    }
  }
  clearForces() {
    const t = this.bodies, e = t.length;
    for (let o = 0; o !== e; o++) {
      const a = t[o];
      a.force, a.torque, a.force.set(0, 0, 0), a.torque.set(0, 0, 0);
    }
  }
}
new la();
const Hf = new Ci(), Ni = globalThis.performance || {};
if (!Ni.now) {
  let E = Date.now();
  Ni.timing && Ni.timing.navigationStart && (E = Ni.timing.navigationStart), Ni.now = () => Date.now() - E;
}
new le();
const bS = { type: "postStep" }, wS = { type: "preStep" }, cc = { type: Gn.COLLIDE_EVENT_NAME, body: null, contact: null }, SS = [], xS = [], _S = [], ES = [], os = [], is = [], lc = { type: "beginContact", bodyA: null, bodyB: null }, fc = { type: "endContact", bodyA: null, bodyB: null }, as = { type: "beginShapeContact", bodyA: null, bodyB: null, shapeA: null, shapeB: null }, ss = { type: "endShapeContact", bodyA: null, bodyB: null, shapeA: null, shapeB: null };
class od {
  constructor(t) {
    typeof t == "object" && (t = t.notation), this.set = [], this.setkeys = [], this.setid = 0, this.groups = [], this.totalDice = 0, this.op = "", this.constant = null, this.result = [], this.error = false, this.boost = 1, this.notation = "", this.vectors = [], (!t || t == "0") && (this.error = true), this.parseNotation(t);
  }
  parseNotation(t) {
    if (t) {
      let g = t.split("!").length - 1 || 0;
      g > 0 && (this.boost = Math.min(Math.max(g, 0), 3) * 4), t = t.split("!").join(""), t = t.split(" ").join("");
      let b = t.split("(").length - 1, h = t.split(")").length - 1;
      b != h && (this.error = true);
    }
    const e = this.notation.length > 0 ? "+" : "";
    this.notation += e + t;
    let o = t.split("@"), a = o[0], l = new RegExp(/(\+|\-|\*|\/|\%|\^|){0,1}()(\d*)([a-z]+\d+|[a-z]+|)(?:\{([a-z]+)(.*?|)\}|)()/, "i"), s = new RegExp(/(\b)*(\-\d+|\d+)(\b)*/, "gi"), i, u = 0, d = 30, f = 0, p = 0;
    for (; !this.error && a.length > 0 && (i = l.exec(a)) !== null && u < d; ) {
      u++, a = a.substring(i[0].length);
      let g = i[1], b = i[2] && i[2].length > 0, h = i[3], m = i[4], c = i[5] || "", w = i[6] || "", T = i[7] && i[7].length > 0, P = true;
      b && (f += i[2].length), w = w.split(","), (!w || w.length < 1) && (w = ""), w.shift(), u == 1 && a.length == 0 && !m && g && h ? (m = "d20", this.op = g, this.constant = parseInt(h), h = 1) : u > 1 && a.length == 0 && !m && (this.op = g, this.constant = parseInt(h), P = false), P && this.addSet(h, m, p, f, c, w, g), T && (f -= i[7].length, p += i[7].length);
    }
    !this.error && o[1] && (i = o[1].match(s)) !== null && this.result.push(...i);
  }
  stringify(t = true) {
    let e = "";
    if (this.set.length < 1) return e;
    for (let o = 0; o < this.set.length; o++) {
      let a = this.set[o];
      e += o > 0 && a.op ? a.op : "", e += a.num + a.type, a.func && (e += "{", e += a.func ? a.func : "", e += a.args ? "," + (Array.isArray(a.args) ? a.args.join(",") : a.args) : "", e += "}");
    }
    return e += this.constant ? this.op + "" + Math.abs(this.constant) : "", t && this.result && this.result.length > 0 && (e += "@" + this.result.join(",")), this.boost > 1 && (e += "!".repeat(this.boost / 4)), e;
  }
  addSet(t, e, o = 0, a = 0, l = "", s = "", i = "+") {
    t = Math.abs(parseInt(t || 1));
    let u = i + "" + e + o + a + l + s, d = this.setkeys[u] != null, f = {};
    d && (f = this.set[this.setkeys[u] - 1]), t > 0 && (f.num = d ? t + f.num : t, f.type = e, f.sid = this.setid, f.gid = o, f.glvl = a, l && (f.func = l), s && (f.args = s), i && (f.op = i), d ? this.set[this.setkeys[u] - 1] = f : this.setkeys[u] = this.set.push(f)), d || ++this.setid;
  }
  static mergeNotation(t, e) {
    return { ...t, constant: t.constant + e.constant, notation: t.notation + "+" + e.notation, set: [...t.set, ...e.set], totalDice: t.vectors.length + e.vectors.length, vectors: [...t.vectors, ...e.vectors] };
  }
}
const Gf = { d2: { name: "d2", labels: ["1", "2"], values: [1, 2], inertia: 8, mass: 400, scale: 0.9, system: "dweird" }, dc: { type: "d2", name: "Coin", labels: ["textures/silvercoin/tail.png", "textures/silvercoin/heads.png"], setBumpMaps: ["textures/silvercoin/tail_bump.png", "textures/silvercoin/heads_bump.png"], values: [0, 1], inertia: 8, mass: 400, scale: 0.9, colorset: "coin_silver" }, d1: { name: "One-sided Dice", type: "d6", labels: ["1"], values: [1, 1], scale: 0.9, system: "dweird" }, d3: { name: "Three-Sided Dice", type: "d6", labels: ["1", "2", "3"], values: [1, 3], scale: 0.9, system: "dweird" }, df: { name: "Fudge Dice", type: "d6", labels: ["-", "0", "+"], values: [-1, 1], scale: 0.9, system: "dweird" }, d4: { name: "Four-Sided Dice", labels: ["1", "2", "3", "4"], values: [1, 4], inertia: 5, scale: 1.2 }, d6: { name: "Six-Sided Dice (Numbers)", labels: ["1", "2", "3", "4", "5", "6"], values: [1, 6], scale: 0.9 }, dpip: { name: "Six-Sided Dice (Pips)", type: "d6", labels: [`   
 \u2B24 
   `, `\u2B24  
   
  \u2B24`, `\u2B24  
 \u2B24 
  \u2B24`, `\u2B24 \u2B24
   
\u2B24 \u2B24`, `\u2B24 \u2B24
 \u2B24 
\u2B24 \u2B24`, `\u2B24 \u2B24
\u2B24 \u2B24
\u2B24 \u2B24`], values: [1, 6], scale: 0.9, font: "monospace" }, dsex: { name: "Sex-Sided Emoji Dice", type: "d6", labels: ["\u{1F346}", "\u{1F351}", "\u{1F44C}", "\u{1F4A6}", "\u{1F64F}", "\u{1F4A5}"], values: [1, 6], scale: 0.9, display: "labels", system: "dweird" }, dpoker: { name: "Poker Dice (9-Ace)", type: "d6", labels: ["A", "9", "10", "J", "Q", "K"], values: [1, 6], scale: 0.9, display: "labels", system: "dweird", font: "Times New Roman" }, dspanpoker: { name: "Spanish Poker Dice (7-Ace)", type: "d8", labels: ["A", "7", "8", "9", "10", "J", "Q", "K"], values: [1, 8], display: "labels", system: "dweird", font: "Times New Roman" }, disotope: { name: "Radioactive Twelve-Sided Dice", type: "d12", labels: ["", "", "", "", "", "", "", "", "", "", "", "\u2622\uFE0F"], values: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1], mass: 350, inertia: 8, scale: 0.9, system: "dweird" }, dsuit: { name: "Four-Suited Dice", type: "d4", labels: ["\u2660\uFE0F", "\u2665\uFE0F", "\u2666\uFE0F", "\u2663\uFE0F"], values: [1, 4], inertia: 5, scale: 1.2, display: "labels", system: "dweird" }, d8: { name: "Eight-Sided Dice", labels: ["1", "2", "3", "4", "5", "6", "7", "8"], values: [1, 8] }, d10: { name: "Ten-Sided Dice (Single Digit)", labels: ["1", "2", "3", "4", "5", "6", "7", "8", "9", "0"], values: [1, 10], mass: 350, inertia: 9, scale: 0.9 }, d100: { name: "Ten-Sided Dice (Tens Digit)", type: "d10", labels: ["10", "20", "30", "40", "50", "60", "70", "80", "90", "00"], values: [10, 100, 10], mass: 350, inertia: 9, scale: 0.9 }, d12: { name: "Twelve-Sided Dice", labels: ["1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12"], values: [1, 12], mass: 350, inertia: 8, scale: 0.9 }, d20: { name: "Twenty-Sided Dice", labels: ["1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20"], values: [1, 20], mass: 400, inertia: 6 }, dabi: { name: "Star Wars RPG: Ability Dice", type: "d8", labels: ["s", "a", `s
a`, `s
s`, "a", "s", `a
a`, ""], values: [1, 8], font: "SWRPG-Symbol-Regular", color: "#00FF00", colorset: "swrpg_abi", display: "labels", system: "swrpg" }, ddif: { name: "Star Wars RPG: Difficulty Dice", type: "d8", labels: ["t", "f", `f
t`, "t", "", `t
t`, `f
f`, "t"], values: [1, 8], font: "SWRPG-Symbol-Regular", color: "#8000FC", colorset: "swrpg_dif", display: "labels", system: "swrpg" }, dpro: { name: "Star Wars RPG: Proficiency Dice", type: "d12", labels: [`a
a`, "a", `a
a`, "x", "s", `s
a`, "s", `s
a`, `s
s`, `s
a`, `s
s`, ""], values: [1, 12], mass: 350, inertia: 8, scale: 0.9, font: "SWRPG-Symbol-Regular", color: "#FFFF00", colorset: "swrpg_pro", display: "labels", system: "swrpg" }, dcha: { name: "Star Wars RPG: Challenge Dice", type: "d12", labels: [`t
t`, "t", `t
t`, "t", `t
f`, "f", `t
f`, "f", `f
f`, "y", `f
f`, ""], values: [1, 12], mass: 350, inertia: 8, scale: 0.9, font: "SWRPG-Symbol-Regular", color: "#FF0000", colorset: "swrpg_cha", display: "labels", system: "swrpg" }, dfor: { name: "Star Wars RPG: Force Dice", type: "d12", labels: ["z", `Z
Z`, "z", `Z
Z`, "z", `Z
Z`, "z", "Z", "z", "Z", "z", `z
z`], values: [1, 12], mass: 350, inertia: 8, scale: 0.9, font: "SWRPG-Symbol-Regular", color: "#FFFFFF", colorset: "swrpg_for", display: "labels", system: "swrpg" }, dboo: { name: "Star Wars RPG: Boost Dice", type: "d6", labels: [`s  
  a`, `a  
  a`, "s", "a", "", ""], values: [1, 6], scale: 0.9, font: "SWRPG-Symbol-Regular", color: "#00FFFF", colorset: "swrpg_boo", display: "labels", system: "swrpg" }, dset: { name: "Star Wars RPG: Setback Dice", type: "d6", labels: ["", "t", "f"], values: [1, 3], scale: 0.9, font: "SWRPG-Symbol-Regular", color: "#111111", colorset: "swrpg_set", display: "labels", system: "swrpg" }, swar: { name: "Star Wars Armada: Red Attack Dice", type: "d8", labels: ["F", "F", `F
F`, "E", "E", "G", "", ""], values: [1, 8], font: "Armada-Symbol-Regular", color: "#FF0000", colorset: "swa_red", display: "labels", system: "swarmada" }, swab: { name: "Star Wars Armada: Blue Attack Dice", type: "d8", labels: ["F", "F", "F", "F", "E", "E", "G", "G"], values: [1, 8], font: "Armada-Symbol-Regular", color: "#0000FF", colorset: "swa_blue", display: "labels", system: "swarmada" }, swak: { name: "Star Wars Armada: Black Attack Dice", type: "d8", labels: ["F", "F", "F", "F", `F
E`, `F
E`, "", ""], values: [1, 8], font: "Armada-Symbol-Regular", color: "#111111", colorset: "swa_black", display: "labels", system: "swarmada" }, xwatk: { name: "Star Wars X-Wing: Red Attack Dice", type: "d8", labels: ["c", "d", "d", "d", "f", "f", "", ""], values: [1, 8], font: "XWing-Symbol-Regular", color: "#FF0000", colorset: "xwing_red", display: "labels", system: "xwing" }, xwdef: { name: "Star Wars X-Wing: Green Defense Dice", type: "d8", labels: ["e", "e", "e", "f", "f", "", "", ""], values: [1, 8], font: "XWing-Symbol-Regular", color: "#00FF00", colorset: "xwing_green", display: "labels", system: "xwing" }, swlar: { name: "Star Wars Legion: Red Attack Dice", type: "d8", labels: ["h", "h", "h", "h", "h", "c", "o", ""], values: [1, 8], font: "Legion-Symbol-Regular", color: "#FF0000", colorset: "swl_atkred", display: "labels", system: "legion" }, swlab: { name: "Star Wars Legion: Black Attack Dice", type: "d8", labels: ["h", "h", "h", "", "", "c", "o", ""], values: [1, 8], font: "Legion-Symbol-Regular", color: "#111111", colorset: "swl_atkblack", display: "labels", system: "legion" }, swlaw: { name: "Star Wars Legion: White Attack Dice", type: "d8", labels: ["h", "", "", "", "", "c", "o", ""], values: [1, 8], font: "Legion-Symbol-Regular", color: "#FFFFFF", colorset: "swl_atkwhite", display: "labels", system: "legion" }, swldr: { name: "Star Wars Legion: Red Defense Dice", type: "d6", labels: ["s", "s", "s", "d", "", ""], values: [1, 6], scale: 0.9, font: "Legion-Symbol-Regular", color: "#FF0000", colorset: "swl_defred", display: "labels", system: "legion" }, swldw: { name: "Star Wars Legion: White Defense Dice", type: "d6", labels: ["s", "", "", "d", "", ""], values: [1, 6], scale: 0.9, font: "Legion-Symbol-Regular", color: "#FFFFFF", colorset: "swl_defwhite", display: "labels", system: "legion" } }, ma = { d4: { vertices: [[1, 1, 1], [-1, -1, 1], [-1, 1, -1], [1, -1, -1]], faces: [[1, 0, 2, 1], [0, 1, 3, 2], [0, 3, 2, 3], [1, 2, 3, 4]] }, d6: { vertices: [[-1, -1, -1], [1, -1, -1], [1, 1, -1], [-1, 1, -1], [-1, -1, 1], [1, -1, 1], [1, 1, 1], [-1, 1, 1]], faces: [[0, 3, 2, 1, 1], [1, 2, 6, 5, 2], [0, 1, 5, 4, 3], [3, 7, 6, 2, 4], [0, 4, 7, 3, 5], [4, 5, 6, 7, 6]] }, d8: { vertices: [[1, 0, 0], [-1, 0, 0], [0, 1, 0], [0, -1, 0], [0, 0, 1], [0, 0, -1]], faces: [[0, 2, 4, 1], [0, 4, 3, 2], [0, 3, 5, 3], [0, 5, 2, 4], [1, 3, 4, 5], [1, 4, 2, 6], [1, 2, 5, 7], [1, 5, 3, 8]] }, d10: { vertices: [[1, 0, -0.105], [0.809, 0.5877, 0.105], [0.309, 0.951, -0.105], [-0.309, 0.951, 0.105], [-0.809, 0.5877, -0.105], [-1, 0, 0.105], [-0.809, -0.587, -0.105], [-0.309, -0.951, 0.105], [0.309, -0.951, -0.105], [0.809, -0.5877, 0.105], [0, 0, -1], [0, 0, 1]], faces: [[5, 6, 7, 11, 0], [4, 3, 2, 10, 1], [1, 2, 3, 11, 2], [0, 9, 8, 10, 3], [7, 8, 9, 11, 4], [8, 7, 6, 10, 5], [9, 0, 1, 11, 6], [2, 1, 0, 10, 7], [3, 4, 5, 11, 8], [6, 5, 4, 10, 9]] }, d12: { vertices: [[0, 0.618, 1.618], [0, 0.618, -1.618], [0, -0.618, 1.618], [0, -0.618, -1.618], [1.618, 0, 0.618], [1.618, 0, -0.618], [-1.618, 0, 0.618], [-1.618, 0, -0.618], [0.618, 1.618, 0], [0.618, -1.618, 0], [-0.618, 1.618, 0], [-0.618, -1.618, 0], [1, 1, 1], [1, 1, -1], [1, -1, 1], [1, -1, -1], [-1, 1, 1], [-1, 1, -1], [-1, -1, 1], [-1, -1, -1]], faces: [[2, 14, 4, 12, 0, 1], [15, 9, 11, 19, 3, 2], [16, 10, 17, 7, 6, 3], [6, 7, 19, 11, 18, 4], [6, 18, 2, 0, 16, 5], [18, 11, 9, 14, 2, 6], [1, 17, 10, 8, 13, 7], [1, 13, 5, 15, 3, 8], [13, 8, 12, 4, 5, 9], [5, 4, 14, 9, 15, 10], [0, 12, 8, 10, 16, 11], [3, 19, 7, 17, 1, 12]] }, d20: { vertices: [[-1, 1.618, 0], [1, 1.618, 0], [-1, -1.618, 0], [1, -1.618, 0], [0, -1, 1.618], [0, 1, 1.618], [0, -1, -1.618], [0, 1, -1.618], [1.618, 0, -1], [1.618, 0, 1], [-1.618, 0, -1], [-1.618, 0, 1]], faces: [[0, 11, 5, 1], [0, 5, 1, 2], [0, 1, 7, 3], [0, 7, 10, 4], [0, 10, 11, 5], [1, 5, 9, 6], [5, 11, 4, 7], [11, 10, 2, 8], [10, 7, 6, 9], [7, 1, 8, 10], [3, 9, 4, 11], [3, 4, 2, 12], [3, 2, 6, 13], [3, 6, 8, 14], [3, 8, 9, 15], [4, 9, 5, 16], [2, 4, 11, 17], [6, 2, 10, 18], [8, 6, 7, 19], [9, 8, 1, 20]] } }, AS = { name: "", scale: 1, font: "Arial", color: "", labels: [], valueMap: [], values: [], normals: [], mass: 300, inertia: 13, geometry: null, display: "values", system: "d20" };
class TS {
  constructor(t) {
    if (!Gf.hasOwnProperty(t)) return console.error("dice type unavailable");
    Object.assign(this, AS, Gf[t]), this.shape = Gf[t].type || t, this.type = t, this.setLabels(this.labels), this.setValues(this.values[0], this.values[1], this.values[2]), this.setValueMap(this.valueMap), this.bumpMaps && this.setBumpMaps(this.bumpMaps);
  }
  setValues(t = 1, e = 20, o = 1) {
    this.values = this.range(t, e, o);
  }
  setValueMap(t) {
    for (let e = 0; e < this.values.length; e++) {
      let o = this.values[e];
      t[o] != null && (this.valueMap[o] = t[o]);
    }
  }
  registerFaces(t, e = "labels") {
    let o;
    if (e == "labels" ? o = this.labels : o = this.normals, o.unshift(""), ["d2", "d10"].includes(this.shape) || o.unshift(""), this.shape == "d4") {
      let a = t[0], l = t[1], s = t[2], i = t[3];
      this.labels = [[[], [0, 0, 0], [l, i, s], [a, s, i], [l, a, i], [a, l, s]], [[], [0, 0, 0], [l, s, i], [s, a, i], [l, i, a], [s, l, a]], [[], [0, 0, 0], [i, s, l], [s, i, a], [i, l, a], [s, a, l]], [[], [0, 0, 0], [i, l, s], [a, i, s], [i, a, l], [a, s, l]]];
    } else Array.prototype.push.apply(o, t);
  }
  setLabels(t) {
    this.loadTextures(t, this.registerFaces.bind(this), "labels");
  }
  setBumpMaps(t) {
    this.loadTextures(t, this.registerFaces.bind(this), "bump");
  }
  loadTextures(t, e, o) {
    let a = 0, l = t.length, s = /\.(PNG|JPG|GIF|WEBP)$/i, i = Array(t.length), u = false;
    for (let d = 0; d < l; d++) {
      if (t[d] == "" || !t[d].match(s)) {
        i[d] = t[d], ++a;
        continue;
      }
      u = true, i[d] = new Image(), i[d].onload = function() {
        ++a >= l && e(i, o);
      }, i[d].src = t[d];
    }
    u || e(i, o);
  }
  range(t, e, o = 1) {
    for (var a = [t], l = t; l < e; ) a.push(l += o || 1);
    return a;
  }
}
const kS = { none: { name: "Plastic" }, perfectmetal: { name: "Perfect Metal", color: 14540253, roughness: 0, metalness: 1, envMapIntensity: 1 }, metal: { name: "Metal", color: 14540253, roughness: 0.5, metalness: 0.6, envMapIntensity: 1 }, wood: { name: "Wood", color: 14540253, roughness: 0.9, metalness: 0, envMapIntensity: 1 }, glass: { name: "Glass", color: 14540253, roughness: 0.1, metalness: 0, envMapIntensity: 1 } }, OS = { baseScale: 100, bumpMapping: true }, Sc = class {
  constructor(E) {
    this.geometries = {}, this.materials_cache = {}, this.cache_hits = 0, this.cache_misses = 0, this.label_color = "", this.dice_color = "", this.edge_color = "", this.label_outline = "", this.dice_texture = "", this.dice_material = "", this.material_options = { specular: 16777215, color: 11908533, shininess: 5, flatShading: true }, Object.assign(this, OS, E);
  }
  updateConfig(E = {}) {
    Object.assign(this, E), E.scale && this.scaleGeometry();
  }
  setBumpMapping(E) {
    this.bumpMapping = E, this.materials_cache = {};
  }
  create(E) {
    let t = this.get(E);
    if (!t) return null;
    let e = this.geometries[E];
    if (e || (e = this.createGeometry(t.shape, t.scale * this.baseScale), this.geometries[E] = e), !e) return null;
    this.setMaterialInfo();
    let o = new Fa(e, this.createMaterials(t, this.baseScale / 2, 1));
    switch (o.result = [], o.shape = t.shape, o.rerolls = 0, o.resultReason = "natural", o.mass = t.mass, o.getFaceValue = function() {
      let a = this.resultReason, l = new Br(0, 0, this.shape == "d4" ? -1 : 1), s, i = Math.PI * 2, u = this.geometry.getAttribute("normal").array;
      for (let h = 0, m = this.geometry.groups.length; h < m; ++h) {
        let c = this.geometry.groups[h];
        if (c.materialIndex == 0) continue;
        let w = h * 9, T = new Br(u[w], u[w + 1], u[w + 2]).clone().applyQuaternion(this.body.quaternion).angleTo(l);
        T < i && (i = T, s = c);
      }
      let d = s.materialIndex - 1, f = 2;
      const p = Sc.dice[this.notation.type];
      if (this.shape == "d4") {
        let h = d - 1 == 0 ? 5 : d;
        return { value: d, label: p.labels[d - 1][h][0], reason: a };
      }
      ["d10", "d2"].includes(this.shape) && (d += 1, f -= 1);
      let g = p.values[(d - 1) % p.values.length], b = p.labels[(d - 1) % (p.labels.length - 2) + f];
      return { value: g, label: b, reason: a };
    }, o.storeRolledValue = function(a) {
      this.resultReason = a || this.resultReason, this.result.push(this.getFaceValue());
    }, o.getLastValue = function() {
      return !this.result || this.result.length < 1 ? { value: void 0, label: "", reason: "" } : this.result[this.result.length - 1];
    }, o.ignoreLastValue = function(a) {
      let l = this.getLastValue();
      l.value !== void 0 && (l.ignore = a, this.setLastValue(l));
    }, o.setLastValue = function(a) {
      if (!(!this.result || this.result.length < 1) && !(!a || a.length < 1)) return this.result[this.result.length - 1] = a;
    }, t.color && (o.material[0].color = new Yo(t.color), o.material[0].emissive = new Yo(t.color), o.material[0].emissiveIntensity = 1, o.material[0].needsUpdate = true), t.values.length) {
      case 1:
        return this.fixmaterials(o, 1);
      case 2:
        return this.fixmaterials(o, 2);
      case 3:
        return this.fixmaterials(o, 3);
      default:
        return o;
    }
  }
  get(E) {
    let t;
    return Sc.dice.hasOwnProperty(E) ? t = Sc.dice[E] : (t = new TS(E), Sc.dice[E] = t), t;
  }
  getGeometry(E) {
    return this.geometries[E];
  }
  scaleGeometry() {
  }
  createMaterials(E, t, e, o = true, a = 0) {
    let l = [], s = E.labels;
    E.shape == "d4" && (s = E.labels[a], t = this.baseScale / 2, e = this.baseScale * 2);
    for (var i = 0; i < s.length; ++i) {
      var u;
      this.dice_material != "none" ? (u = new Xb(kS[this.dice_material]), u.envMapIntensity = 0) : u = new Kb(this.material_options);
      let d;
      if (i == 0) {
        let f = { name: "none" };
        this.dice_texture_rand.composite != "source-over" && (f = this.dice_texture_rand), d = this.createTextMaterial(E, s, i, t, e, f, this.label_color_rand, this.label_outline_rand, this.edge_color_rand, o), u.map = d.composite;
      } else if (d = this.createTextMaterial(E, s, i, t, e, this.dice_texture_rand, this.label_color_rand, this.label_outline_rand, this.dice_color_rand, o), u.map = d.composite, this.bumpMapping) {
        {
          let f = 0.75;
          t > 35 && (f = 1), t > 40 && (f = 2.5), t > 45 && (f = 4), u.bumpScale = f;
        }
        d.bump && (u.bumpMap = d.bump), E.shape != "d4" && E.normals[i] && (u.bumpMap = new ca(E.normals[i]), u.bumpScale = 4, u.bumpMap.needsUpdate = true);
      }
      u.opacity = 1, u.transparent = true, u.depthTest = false, u.needUpdate = true, l.push(u);
    }
    return l;
  }
  createTextMaterial(E, t, e, o, a, l, s, i, u, d) {
    if (t[e] === void 0) return null;
    l = l || this.dice_texture_rand, s = s || this.label_color_rand, i = i || this.label_outline_rand, u = u || this.dice_color_rand, d = d ?? true;
    let f = t[e], p = false, g = f;
    f instanceof HTMLImageElement ? g = f.src : f instanceof Array && f.forEach((v) => {
      g += v.src;
    });
    let b = E.type + g + e + l.name + s + i + u;
    if (E.shape == "d4" && (b = E.type + g + l.name + s + i + u), d && this.materials_cache[b] != null) return this.cache_hits++, this.materials_cache[b];
    let h = document.createElement("canvas"), m = h.getContext("2d", { alpha: true });
    m.globalAlpha = 0, m.clearRect(0, 0, h.width, h.height);
    let c = document.createElement("canvas"), w = c.getContext("2d", { alpha: true });
    w.globalAlpha = 0, w.clearRect(0, 0, c.width, c.height);
    let T;
    if (E.shape == "d4" ? T = this.calc_texture_size(o + a) * 4 : T = this.calc_texture_size(o + o * 2 * a) * 4, h.width = h.height = T, c.width = c.height = T, m.fillStyle = u, m.fillRect(0, 0, h.width, h.height), w.fillStyle = "#FFFFFF", w.fillRect(0, 0, c.width, c.height), l.texture && l.name != "" && l.name != "none" ? (m.globalCompositeOperation = l.composite || "source-over", m.drawImage(l.texture, 0, 0, h.width, h.height), m.globalCompositeOperation = "source-over", l.bump && (w.globalCompositeOperation = "source-over", w.drawImage(l.bump, 0, 0, h.width, h.height))) : m.globalCompositeOperation = "source-over", m.globalCompositeOperation = "source-over", m.textAlign = "center", m.textBaseline = "middle", w.textAlign = "center", w.textBaseline = "middle", E.shape != "d4") {
      let v = { d8: { even: -7.5, odd: -127.5 }, d10: { all: -6 }, d12: { all: 5 }, d20: { all: -7.5 } }[E.shape];
      if (v) {
        let U;
        if (v.hasOwnProperty("all") ? U = v.all : e > 0 && e % 2 != 0 ? U = v.odd : U = v.even, U && U != 0) {
          var P = h.width / 2, k = h.height / 2;
          m.translate(P, k), m.rotate(U * (Math.PI / 180)), m.translate(-P, -k), w.translate(P, k), w.rotate(U * (Math.PI / 180)), w.translate(-P, -k);
        }
      }
      if (f instanceof HTMLImageElement) p = true, m.drawImage(f, 0, 0, f.width, f.height, 0, 0, h.width, h.height);
      else {
        let U = T / (1 + 2 * a), M = h.height / 2 + 10, Z = h.width / 2;
        E.shape == "d10" ? (U = U * 0.75, M = M * 1.15 - 10) : E.shape == "d20" && (Z = Z * 0.98), m.font = U + "pt " + E.font, w.font = U + "pt " + E.font;
        let D = m.measureText("M").width * 1.4, V = f.split(`
`);
        V.length > 1 && (U = U / V.length, m.font = U + "pt " + E.font, w.font = U + "pt " + E.font, D = m.measureText("M").width * 1.2, M -= D * V.length / 2);
        for (let S = 0, x = V.length; S < x; S++) {
          let B = V[S].trim();
          i != "none" && i != u && (m.strokeStyle = i, m.lineWidth = 5, m.strokeText(V[S], Z, M), w.strokeStyle = "#000000", w.lineWidth = 5, w.strokeText(V[S], Z, M), (B == "6" || B == "9") && (m.strokeText("  .", Z, M), w.strokeText("  .", Z, M))), m.fillStyle = s, m.fillText(V[S], Z, M), w.fillStyle = "#000000", w.fillText(V[S], Z, M), (B == "6" || B == "9") && (m.fillText("  .", Z, M), w.fillText("  .", Z, M)), M += D * 1.5;
        }
      }
    } else {
      var P = h.width / 2, k = h.height / 2;
      m.font = T / 128 * 24 + "pt " + E.font, w.font = T / 128 * 24 + "pt " + E.font;
      for (let M = 0; M < f.length; M++) {
        if (f[M] instanceof HTMLImageElement) {
          let Z = f[M].width / h.width;
          m.drawImage(f[M], 0, 0, f[M].width, f[M].height, 100 / Z, 25 / Z, 60 / Z, 60 / Z);
        } else i != "none" && i != u && (m.strokeStyle = i, m.lineWidth = 5, m.strokeText(f[M], P, k - T * 0.3), w.strokeStyle = "#000000", w.lineWidth = 5, w.strokeText(f[M], P, k - T * 0.3)), m.fillStyle = s, m.fillText(f[M], P, k - T * 0.3), w.fillStyle = "#000000", w.fillText(f[M], P, k - T * 0.3);
        m.translate(P, k), m.rotate(Math.PI * 2 / 3), m.translate(-P, -k), w.translate(P, k), w.rotate(Math.PI * 2 / 3), w.translate(-P, -k);
      }
    }
    var R = new Lh(h), F;
    return p ? F = null : F = new Lh(c), d && (this.cache_misses++, this.materials_cache[b] = { composite: R, bump: F }), { composite: R, bump: F };
  }
  applyColorSet(E) {
    var t;
    this.colordata = E, this.label_color = E.foreground, this.dice_color = E.background, this.label_outline = E.outline, this.dice_texture = E.texture, this.dice_material = ((t = E == null ? void 0 : E.texture) == null ? void 0 : t.material) || "none", this.edge_color = E.hasOwnProperty("edge") ? E.edge : E.background;
  }
  setMaterialInfo(E = "") {
    let t = this.colordata, e = this.dice_texture, o = this.dice_material;
    if (this.dice_color_rand = "", this.label_color_rand = "", this.label_outline_rand = "", this.dice_texture_rand = "", this.dice_material_rand = "", this.edge_color_rand = "", Array.isArray(this.dice_color)) {
      var a = Math.floor(Math.random() * this.dice_color.length);
      Array.isArray(this.label_color) && this.label_color.length == this.dice_color.length && (this.label_color_rand = this.label_color[a], Array.isArray(this.label_outline) && this.label_outline.length == this.label_color.length && (this.label_outline_rand = this.label_outline[a])), Array.isArray(this.dice_texture) && this.dice_texture.length == this.dice_color.length && (this.dice_texture_rand = this.dice_texture[a], this.dice_material_rand = this.dice_texture_rand.material), Array.isArray(this.edge_color) && this.edge_color.length == this.dice_color.length && (this.edge_color_rand = this.edge_color[a]), this.dice_color_rand = this.dice_color[a];
    } else this.dice_color_rand = this.dice_color;
    if (this.edge_color_rand == "") if (Array.isArray(this.edge_color)) {
      var a = Math.floor(Math.random() * this.edge_color.length);
      this.edge_color_rand = this.edge_color[a];
    } else this.edge_color_rand = this.edge_color;
    if (this.label_color_rand == "" && Array.isArray(this.label_color)) {
      var a = this.label_color[Math.floor(Math.random() * this.label_color.length)];
      Array.isArray(this.label_outline) && this.label_outline.length == this.label_color.length && (this.label_outline_rand = this.label_outline[a]), this.label_color_rand = this.label_color[a];
    } else this.label_color_rand == "" && (this.label_color_rand = this.label_color);
    if (this.label_outline_rand == "" && Array.isArray(this.label_outline)) {
      var a = this.label_outline[Math.floor(Math.random() * this.label_outline.length)];
      this.label_outline_rand = this.label_outline[a];
    } else this.label_outline_rand == "" && (this.label_outline_rand = this.label_outline);
    this.dice_texture_rand == "" && Array.isArray(this.dice_texture) ? (this.dice_texture_rand = this.dice_texture[Math.floor(Math.random() * this.dice_texture.length)], this.dice_material_rand = this.dice_texture_rand.material || this.dice_material) : this.dice_texture_rand == "" && (this.dice_texture_rand = this.dice_texture, this.dice_material_rand = this.dice_texture_rand.material || this.dice_material), this.dice_material_rand == "" && Array.isArray(this.dice_material) ? this.dice_material_rand = this.dice_material[Math.floor(Math.random() * this.dice_material.length)] : this.dice_material_rand == "" && (this.dice_material_rand = this.dice_material), this.colordata && this.colordata.id != t.id && this.applyColorSet(t, e, o);
  }
  calc_texture_size(E) {
    return Math.pow(2, Math.floor(Math.log(E) / Math.log(2)));
  }
  createGeometry(E, t, e = false) {
    const o = e ? "create_shape" : "create_geom";
    switch (E) {
      case "d2":
        var a = new mp(1 * t, 1 * t, 0.1 * t, 32);
        return a.cannon_shape = new t1(1 * t, 1 * t, 0.1 * t, 8), a;
      case "d4":
        return this[o](ma.d4.vertices, ma.d4.faces, t, -0.1, Math.PI * 7 / 6, 0.96);
      case "d6":
        return this[o](ma.d6.vertices, ma.d6.faces, t, 0.1, Math.PI / 4, 0.96);
      case "d8":
        return this[o](ma.d8.vertices, ma.d8.faces, t, 0, -Math.PI / 4 / 2, 0.965);
      case "d10":
        return this[o](ma.d10.vertices, ma.d10.faces, t, 0.3, Math.PI, 0.945);
      case "d12":
        return this[o](ma.d12.vertices, ma.d12.faces, t, 0.2, -Math.PI / 4 / 2, 0.968);
      case "d20":
        return this[o](ma.d20.vertices, ma.d20.faces, t, -0.2, -Math.PI / 4 / 2, 0.955);
      default:
        return console.error(`Geometry for ${E} is not available`), null;
    }
  }
  fixmaterials(E, t) {
    for (let o = 0, a = E.geometry.groups.length; o < a; ++o) {
      var e = E.geometry.groups[o].materialIndex - 2;
      if (e < t) continue;
      let l = e % t;
      E.geometry.groups[o].materialIndex = l + 2;
    }
    return E.geometry.elementsNeedUpdate = true, E;
  }
  create_shape(E, t, e) {
    for (var o = new Array(E.length), a = 0; a < E.length; ++a) o[a] = new Br().fromArray(E[a]).normalize();
    for (var l = new Array(E.length), s = new Array(t.length), a = 0; a < o.length; ++a) {
      var i = o[a];
      l[a] = new le(i.x * e, i.y * e, i.z * e);
    }
    for (var a = 0; a < t.length; ++a) s[a] = t[a].slice(0, t[a].length - 1);
    return new $s({ vertices: l, faces: s });
  }
  make_geom(E, t, e, o, a) {
    let l = new ja();
    for (let b = 0; b < E.length; ++b) E[b] = E[b].multiplyScalar(e);
    let s = [];
    const i = [], u = [], d = new Br(), f = new Br();
    let p, g = 0;
    for (let b = 0; b < t.length; ++b) {
      let h = t[b], m = h.length - 1, c = Math.PI * 2 / m;
      p = h[m] + 1;
      for (let T = 0; T < m - 2; ++T) s.push(...E[h[0]].toArray()), s.push(...E[h[T + 1]].toArray()), s.push(...E[h[T + 2]].toArray()), d.subVectors(E[h[T + 2]], E[h[T + 1]]), f.subVectors(E[h[0]], E[h[T + 1]]), d.cross(f), d.normalize(), i.push(...d.toArray()), i.push(...d.toArray()), i.push(...d.toArray()), u.push((Math.cos(a) + 1 + o) / 2 / (1 + o), (Math.sin(a) + 1 + o) / 2 / (1 + o)), u.push((Math.cos(c * (T + 1) + a) + 1 + o) / 2 / (1 + o), (Math.sin(c * (T + 1) + a) + 1 + o) / 2 / (1 + o)), u.push((Math.cos(c * (T + 2) + a) + 1 + o) / 2 / (1 + o), (Math.sin(c * (T + 2) + a) + 1 + o) / 2 / (1 + o));
      let w = (m - 2) * 3;
      for (let T = 0; T < w / 3; T++) l.addGroup(g, 3, p), g += 3;
    }
    return l.setAttribute("position", new Gi(s, 3)), l.setAttribute("normal", new Gi(i, 3)), l.setAttribute("uv", new Gi(u, 2)), l.boundingSphere = new _c(new Br(), e), l;
  }
  make_d10_geom(E, t, e, o, a) {
    let l = new ja();
    for (let T = 0; T < E.length; ++T) E[T] = E[T].multiplyScalar(e);
    let s = [];
    const i = [], u = [], d = new Br(), f = new Br();
    let p, g = 0;
    for (let T = 0; T < t.length; ++T) {
      let P = t[T], k = P.length - 1, R = Math.PI * 2 / k;
      p = P[k] + 1;
      var b = 0.65, h = 0.85, m = 1 - 1 * h, c = 1 - 0.895 / 1.105 * h, w = 1;
      for (let v = 0; v < k - 2; ++v) s.push(...E[P[0]].toArray()), s.push(...E[P[v + 1]].toArray()), s.push(...E[P[v + 2]].toArray()), d.subVectors(E[P[v + 2]], E[P[v + 1]]), f.subVectors(E[P[0]], E[P[v + 1]]), d.cross(f), d.normalize(), i.push(...d.toArray()), i.push(...d.toArray()), i.push(...d.toArray()), t[T][t[T].length - 1] == -1 || v >= 2 ? (u.push((Math.cos(a) + 1 + o) / 2 / (1 + o), (Math.sin(a) + 1 + o) / 2 / (1 + o)), u.push((Math.cos(R * (v + 1) + a) + 1 + o) / 2 / (1 + o), (Math.sin(R * (v + 1) + a) + 1 + o) / 2 / (1 + o)), u.push((Math.cos(R * (v + 2) + a) + 1 + o) / 2 / (1 + o), (Math.sin(R * (v + 2) + a) + 1 + o) / 2 / (1 + o))) : v == 0 ? (u.push(0.5 - b / 2, c), u.push(0.5, m), u.push(0.5 + b / 2, c)) : v == 1 && (u.push(0.5 - b / 2, c), u.push(0.5 + b / 2, c), u.push(0.5, w));
      let F = (k - 2) * 3;
      for (let v = 0; v < F / 3; v++) l.addGroup(g, 3, p), g += 3;
    }
    return l.setAttribute("position", new Gi(s, 3)), l.setAttribute("normal", new Gi(i, 3)), l.setAttribute("uv", new Gi(u, 2)), l.boundingSphere = new _c(new Br(), e), l;
  }
  chamfer_geom(E, t, e) {
    for (var o = [], a = [], l = new Array(E.length), s = 0; s < E.length; ++s) l[s] = [];
    for (var s = 0; s < t.length; ++s) {
      for (var i = t[s], u = i.length - 1, d = new Br(), f = new Array(u), p = 0; p < u; ++p) {
        var g = E[i[p]].clone();
        d.add(g), l[i[p]].push(f[p] = o.push(g) - 1);
      }
      d.divideScalar(u);
      for (var p = 0; p < u; ++p) {
        var g = o[f[p]];
        g.subVectors(g, d).multiplyScalar(e).addVectors(g, d);
      }
      f.push(i[u]), a.push(f);
    }
    for (var s = 0; s < t.length - 1; ++s) for (var p = s + 1; p < t.length; ++p) {
      for (var b = [], h = -1, m = 0; m < t[s].length - 1; ++m) {
        var c = t[p].indexOf(t[s][m]);
        c >= 0 && c < t[p].length - 1 && (h >= 0 && m != h + 1 ? b.unshift([s, m], [p, c]) : b.push([s, m], [p, c]), h = m);
      }
      b.length == 4 && a.push([a[b[0][0]][b[0][1]], a[b[1][0]][b[1][1]], a[b[3][0]][b[3][1]], a[b[2][0]][b[2][1]], -1]);
    }
    for (var s = 0; s < l.length; ++s) {
      for (var w = l[s], f = [w[0]], T = w.length - 1; T; ) {
        for (var m = t.length; m < a.length; ++m) {
          var P = a[m].indexOf(f[f.length - 1]);
          if (P >= 0 && P < 4) {
            --P == -1 && (P = 3);
            var k = a[m][P];
            if (w.indexOf(k) >= 0) {
              f.push(k);
              break;
            }
          }
        }
        --T;
      }
      f.push(-1), a.push(f);
    }
    return { vectors: o, faces: a };
  }
  create_geom(E, t, e, o, a, l) {
    for (var s = new Array(E.length), i = 0; i < E.length; ++i) s[i] = new Br().fromArray(E[i]).normalize();
    var u = this.chamfer_geom(s, t, l);
    if (t.length != 10) var d = this.make_geom(u.vectors, u.faces, e, o, a);
    else var d = this.make_d10_geom(u.vectors, u.faces, e, o, a);
    return d.cannon_shape = this.create_shape(E, t, e), d.name = "d" + t.length, d;
  }
};
let tm = Sc;
Hm(tm, "dice", {});
const Wf = { cloudy: { name: "Clouds (Transparent)", composite: "destination-in", source: "textures/cloudy.webp", source_bump: "textures/cloudy.alt.webp" }, cloudy_2: { name: "Clouds", composite: "multiply", source: "textures/cloudy.alt.webp", source_bump: "textures/cloudy.alt.webp" }, fire: { name: "Fire", composite: "multiply", source: "textures/fire.webp", source_bump: "textures/fire.webp", material: "metal" }, marble: { name: "Marble", composite: "multiply", source: "textures/marble.webp", source_bump: "", material: "glass" }, water: { name: "Water", composite: "destination-in", source: "textures/water.webp", source_bump: "textures/water.webp", material: "glass" }, ice: { name: "Ice", composite: "destination-in", source: "textures/ice.webp", source_bump: "textures/ice.webp", material: "glass" }, paper: { name: "Paper", composite: "multiply", source: "textures/paper.webp", source_bump: "textures/paper-bump.webp", material: "wood" }, speckles: { name: "Speckles", composite: "multiply", source: "textures/speckles.webp", source_bump: "textures/speckles.webp", material: "none" }, glitter: { name: "Glitter", composite: "multiply", source: "textures/glitter.webp", source_bump: "textures/glitter-bump.webp", material: "none" }, glitter_2: { name: "Glitter (Transparent)", composite: "destination-in", source: "textures/glitter-alpha.webp", source_bump: "", material: "none" }, stars: { name: "Stars", composite: "multiply", source: "textures/stars.webp", source_bump: "textures/stars.webp", material: "none" }, stainedglass: { name: "Stained Glass", composite: "multiply", source: "textures/stainedglass.webp", source_bump: "textures/stainedglass-bump.webp", material: "glass" }, wood: { name: "Wood", composite: "multiply", source: "textures/wood.webp", source_bump: "textures/wood.webp", material: "wood" }, metal: { name: "Stainless Steel", composite: "multiply", source: "textures/metal.webp", source_bump: "textures/metal-bump.webp", material: "metal" }, skulls: { name: "Skulls", composite: "multiply", source: "textures/skulls.webp", source_bump: "textures/skulls.webp" }, leopard: { name: "Leopard", composite: "multiply", source: "textures/leopard.webp", source_bump: "textures/leopard.webp", material: "wood" }, tiger: { name: "Tiger", composite: "multiply", source: "textures/tiger.webp", source_bump: "textures/tiger.webp", material: "wood" }, cheetah: { name: "Cheetah", composite: "multiply", source: "textures/cheetah.webp", source_bump: "textures/cheetah.webp", material: "wood" }, dragon: { name: "Dragon", composite: "multiply", source: "textures/dragon.webp", source_bump: "textures/dragon-bump.webp", material: "none" }, lizard: { name: "Lizard", composite: "multiply", source: "textures/lizard.webp", source_bump: "textures/lizard.webp", material: "none" }, bird: { name: "Bird", composite: "multiply", source: "textures/feather.webp", source_bump: "textures/feather-bump.webp", material: "wood" }, astral: { name: "Astral Sea", composite: "multiply", source: "textures/astral.webp", source_bump: "textures/stars.webp", material: "none" }, acleaf: { name: "AC Leaf", composite: "multiply", source: "textures/acleaf.webp", source_bump: "textures/acleaf.webp", material: "none" }, thecage: { name: "Nicholas Cage", composite: "multiply", source: "textures/thecage.webp", source_bump: "", material: "metal" }, isabelle: { name: "Isabelle", composite: "source-over", source: "textures/isabelle.webp", source_bump: "", material: "none" }, bronze01: { name: "bronze01", composite: "difference", source: "textures/bronze01.webp", source_bump: "", material: "metal" }, bronze02: { name: "bronze02", composite: "difference", source: "textures/bronze02.webp", source_bump: "", material: "metal" }, bronze03: { name: "bronze03", composite: "difference", source: "textures/bronze03.webp", source_bump: "", material: "metal" }, bronze03a: { name: "bronze03a", composite: "difference", source: "textures/bronze03a.webp", source_bump: "", material: "metal" }, bronze03b: { name: "bronze03b", composite: "difference", source: "textures/bronze03b.webp", source_bump: "", material: "metal" }, bronze04: { name: "bronze04", composite: "difference", source: "textures/bronze04.webp", source_bump: "", material: "metal" }, none: { name: "none", composite: "source-over", source: "", source_bump: "", material: "" }, "": { name: "~ Preset ~", composite: "source-over", source: "", source_bump: "", material: "" } }, id = { coin_default: { name: "Gold Coin", description: "Gold Dragonhead Coin", category: "Other", foreground: "#f6c928", background: "#f6c928", outline: "none", texture: "metal" }, coin_silver: { name: "Silver Coin", description: "Gold Dragonhead Coin", category: "Other", foreground: "#f6c928", background: "#f6c928", outline: "none", texture: "metal" }, radiant: { name: "Radiant", category: "Damage Types", foreground: "#F9B333", background: "#FFFFFF", outline: "", texture: "paper", description: "Radiant" }, fire: { name: "Fire", category: "Damage Types", foreground: "#f8d84f", background: ["#f8d84f", "#f9b02d", "#f43c04", "#910200", "#4c1009"], outline: "black", texture: "fire", description: "Fire" }, ice: { name: "Ice", category: "Damage Types", foreground: "#60E9FF", background: ["#214fa3", "#3c6ac1", "#253f70", "#0b56e2", "#09317a"], outline: "black", texture: "ice", description: "Ice" }, poison: { name: "Poison", category: "Damage Types", foreground: "#D6A8FF", background: ["#313866", "#504099", "#66409e", "#934fc3", "#c949fc"], outline: "black", texture: "cloudy", description: "Poison" }, acid: { name: "Acid", category: "Damage Types", foreground: "#A9FF70", background: ["#a6ff00", "#83b625", "#5ace04", "#69f006", "#b0f006", "#93bc25"], outline: "black", texture: "marble", description: "Acid" }, thunder: { name: "Thunder", category: "Damage Types", foreground: "#FFC500", background: "#7D7D7D", outline: "black", texture: "cloudy", description: "Thunder" }, lightning: { name: "Lightning", category: "Damage Types", foreground: "#FFC500", background: ["#f17105", "#f3ca40", "#eddea4", "#df9a57", "#dea54b"], outline: "#7D7D7D", texture: "ice", description: "Lightning" }, air: { name: "Air", category: "Damage Types", foreground: "#ffffff", background: ["#d0e5ea", "#c3dee5", "#a4ccd6", "#8dafb7", "#80a4ad"], outline: "black", texture: "cloudy", description: "Air" }, water: { name: "Water", category: "Damage Types", foreground: "#60E9FF", background: ["#87b8c4", "#77a6b2", "#6b98a3", "#5b8691", "#4b757f"], outline: "black", texture: "water", description: "Water" }, earth: { name: "Earth", category: "Damage Types", foreground: "#6C9943", background: ["#346804", "#184200", "#527f22", "#3a1d04", "#56341a", "#331c17", "#5a352a", "#302210"], outline: "black", texture: "speckles", description: "Earth" }, force: { name: "Force", category: "Damage Types", foreground: "white", background: ["#FF97FF", "#FF68FF", "#C651C6"], outline: "#570000", texture: "stars", description: "Force" }, psychic: { name: "Psychic", category: "Damage Types", foreground: "#D6A8FF", background: ["#313866", "#504099", "#66409E", "#934FC3", "#C949FC", "#313866"], outline: "black", texture: "speckles", description: "Psychic" }, necrotic: { name: "Necrotic", category: "Damage Types", foreground: "#ffffff", background: "#6F0000", outline: "black", texture: "skulls", description: "Necrotic" }, breebaby: { name: "Pastel Sunset", category: "Custom Sets", foreground: ["#5E175E", "#564A5E", "#45455E", "#3D5A5E", "#1E595E", "#5E3F3D", "#5E1E29", "#283C5E", "#25295E"], background: ["#FE89CF", "#DFD4F2", "#C2C2E8", "#CCE7FA", "#A1D9FC", "#F3C3C2", "#EB8993", "#8EA1D2", "#7477AD"], outline: "white", texture: "marble", description: "Pastel Sunset, for Breyanna" }, pinkdreams: { name: "Pink Dreams", category: "Custom Sets", foreground: "white", background: ["#ff007c", "#df73ff", "#f400a1", "#df00ff", "#ff33cc"], outline: "#570000", texture: "skulls", description: "Pink Dreams, for Ethan" }, inspired: { name: "Inspired", category: "Custom Sets", foreground: "#FFD800", background: "#C4C4B6", outline: "#8E8E86", texture: "none", description: "Inspired, for Austin" }, bloodmoon: { name: "Blood Moon", category: "Custom Sets", foreground: "#CDB800", background: "#6F0000", outline: "black", texture: "marble", description: "Blood Moon, for Jared" }, starynight: { name: "Stary Night", category: "Custom Sets", foreground: "#4F708F", background: ["#091636", "#233660", "#4F708F", "#8597AD", "#E2E2E2"], outline: "white", texture: "speckles", description: "Stary Night, for Mai" }, glitterparty: { name: "Glitter Party", category: "Custom Sets", foreground: "white", background: ["#FFB5F5", "#7FC9FF", "#A17FFF"], outline: "none", texture: "glitter", description: "Glitter Party, for Austin" }, astralsea: { name: "Astral Sea", category: "Custom Sets", foreground: "#565656", background: "white", outline: "none", texture: "astral", description: "The Astral Sea, for Austin" }, bronze: { name: "Thylean Bronze", description: "Thylean Bronze by @SpencerThayer", category: "Custom Sets", foreground: ["#FF9159", "#FFB066", "#FFBF59", "#FFD059"], background: ["#705206", "#7A4E06", "#643100", "#7A2D06"], outline: ["#3D2D03", "#472D04", "#301700", "#471A04"], edge: ["#FF5D0D", "#FF7B00", "#FFA20D", "#FFBA0D"], texture: ["bronze01", "bronze02", "bronze03", "bronze03a", "bronze03b", "bronze04"] }, dragons: { name: "Here be Dragons", category: "Custom Sets", foreground: "#FFFFFF", background: ["#B80000", "#4D5A5A", "#5BB8FF", "#7E934E", "#FFFFFF", "#F6ED7C", "#7797A3", "#A78437", "#862C1A", "#FFDF8A"], outline: "black", texture: ["dragon", "lizard"], description: "Here be Dragons" }, birdup: { name: "Bird Up", category: "Custom Sets", foreground: "#FFFFFF", background: ["#F11602", "#FFC000", "#6EC832", "#0094BC", "#05608D", "#FEABB3", "#F75680", "#F3F0DF", "#C7A57F"], outline: "black", texture: "bird", description: "Bird Up!" }, tigerking: { name: "Tiger King", category: "Other", foreground: "#ffffff", background: "#FFCC40", outline: "black", texture: ["leopard", "tiger", "cheetah"], description: "Leopard Print" }, covid: { name: "COViD", category: "Other", foreground: "#A9FF70", background: ["#a6ff00", "#83b625", "#5ace04", "#69f006", "#b0f006", "#93bc25"], outline: "black", texture: "fire", description: "Covid-19" }, acleaf: { name: "Animal Crossing", category: "Other", foreground: "#00FF00", background: "#07540A", outline: "black", texture: "acleaf", description: "Animal Crossing Leaf" }, isabelle: { name: "Isabelle", category: "Other", foreground: "white", background: "#FEE5CC", outline: "black", texture: "isabelle", description: "Isabelle" }, thecage: { name: "Nicholas Cage", category: "Other", foreground: "#ffffff", background: "#ffffff", outline: "black", texture: "thecage", description: "Nicholas Cage" }, test: { name: "Test", category: "Colors", foreground: ["#00FF00", "#0000FF", "#FF0000"], background: ["#FF0000", "#00FF00", "#0000FF"], outline: "black", texture: "none", description: "Test" }, rainbow: { name: "Rainblow", category: "Colors", foreground: ["#FF5959", "#FFA74F", "#FFFF56", "#59FF59", "#2374FF", "#00FFFF", "#FF59FF"], background: ["#900000", "#CE3900", "#BCBC00", "#00B500", "#00008E", "#008282", "#A500A5"], outline: "black", texture: "none", description: "Rainblow" }, black: { name: "Black", category: "Colors", foreground: "#ffffff", background: "#000000", outline: "black", texture: "none", description: "Black" }, white: { name: "White", category: "Colors", foreground: "#000000", background: "#FFFFFF", outline: "#FFFFFF", texture: "none", description: "White" }, swrpg_abi: { name: "Star Wars RPG - Ability", category: "Star Wars\u2122 RPG", foreground: "#00FF00", background: ["#3D9238", "#52B848", "#5EAC56", "#9ECB9A"], outline: "#000000", texture: "cloudy_2", description: "Star Wars\u2122 RPG Ability Dice" }, swrpg_pro: { name: "Star Wars RPG - Proficiency", category: "Star Wars\u2122 RPG", foreground: "#FFFF00", background: ["#CABB1C", "#F9E33B", "#FFE900", "#F0E49D"], outline: "#000000", texture: "paper", description: "Star Wars\u2122 RPG Proficiency Dice" }, swrpg_dif: { name: "Star Wars RPG - Difficulty", category: "Star Wars\u2122 RPG", foreground: "#8000FC", background: ["#39165F", "#664B84", "#50247E", "#745F88"], outline: "#000000", texture: "cloudy_2", description: "Star Wars\u2122 RPG Difficulty Dice" }, swrpg_cha: { name: "Star Wars RPG - Challenge", category: "Star Wars\u2122 RPG", foreground: "#FF0000", background: ["#A91F32", "#EB4254", "#E51836", "#BA3645"], outline: "#000000", texture: "paper", description: "Star Wars\u2122 RPG Challenge Dice" }, swrpg_boo: { name: "Star Wars RPG - Boost", category: "Star Wars\u2122 RPG", foreground: "#00FFFF", background: ["#4B9DC6", "#689FC4", "#85CFF2", "#8FC0D8"], outline: "#000000", texture: "glitter", description: "Star Wars\u2122 RPG Boost Dice" }, swrpg_set: { name: "Star Wars RPG - Setback", category: "Star Wars\u2122 RPG", foreground: "#111111", background: ["#252223", "#241F21", "#282828", "#111111"], outline: "#ffffff", texture: "glitter", description: "Star Wars\u2122 RPG Setback Dice" }, swrpg_for: { name: "Star Wars RPG - Force", category: "Star Wars\u2122 RPG", foreground: "#000000", background: ["#F3F3F3", "#D3D3D3", "#BABABA", "#FFFFFF"], outline: "#FFFFFF", texture: "stars", description: "Star Wars\u2122 RPG Force Dice" }, swa_red: { name: "Armada Attack - Red", category: "Star Wars\u2122 Armada", foreground: "#ffffff", background: ["#440D19", "#8A1425", "#C72336", "#C04551"], outline: "none", texture: "stainedglass", description: "Star Wars\u2122 Armada Red Attack Dice" }, swa_blue: { name: "Armada Attack - Blue", category: "Star Wars\u2122 Armada", foreground: "#ffffff", background: ["#212642", "#28286E", "#2B348C", "#3D4BB5", "#5D64AB"], outline: "none", texture: "stainedglass", description: "Star Wars\u2122 Armada Blue Attack Dice" }, swa_black: { name: "Armada Attack - Black", category: "Star Wars\u2122 Armada", foreground: "#ffffff", background: ["#252223", "#241F21", "#282828", "#111111"], outline: "none", texture: "stainedglass", description: "Star Wars\u2122 Armada Black Attack Dice" }, xwing_red: { name: "X-Wing Attack - Red", category: "Star Wars\u2122 X-Wing", foreground: "#ffffff", background: ["#440D19", "#8A1425", "#C72336", "#C04551"], outline: "none", texture: "stars", description: "Star Wars\u2122 X-Wing Red Attack Dice" }, xwing_green: { name: "X-Wing Attack - Green", category: "Star Wars\u2122 X-Wing", foreground: "#ffffff", background: ["#3D9238", "#52B848", "#5EAC56", "#9ECB9A"], outline: "none", texture: "stars", description: "Star Wars\u2122 X-Wing Green Attack Dice" }, swl_atkred: { name: "Legion Attack - Red", category: "Star Wars\u2122 Legion", foreground: "#ffffff", background: ["#440D19", "#8A1425", "#C72336", "#C04551"], outline: "none", texture: "fire", description: "Star Wars\u2122 Legion Red Attack Dice" }, swl_atkblack: { name: "Legion Attack - Black", category: "Star Wars\u2122 Legion", foreground: "#ffffff", background: ["#252223", "#241F21", "#282828", "#111111"], outline: "none", texture: "fire", description: "Star Wars\u2122 Legion Black Attack Dice" }, swl_atkwhite: { name: "Legion Attack - White", category: "Star Wars\u2122 Legion", foreground: "#000000", background: ["#ffffff", "#DFF4FA", "#BCBCBC", "#F1EDE2", "#F2ECE0"], outline: "none", texture: "fire", description: "Star Wars\u2122 Legion White Attack Dice" }, swl_defred: { name: "Legion Defense - Red", category: "Star Wars\u2122 Legion", foreground: "#ffffff", background: ["#440D19", "#8A1425", "#C72336", "#C04551"], outline: "none", texture: "fire", description: "Star Wars\u2122 Legion Red Defense Dice" }, swl_defwhite: { name: "Legion Defense - White", category: "Star Wars\u2122 Legion", foreground: "#000000", background: ["#ffffff", "#DFF4FA", "#BCBCBC", "#F1EDE2", "#F2ECE0"], outline: "none", texture: "fire", description: "Star Wars\u2122 Legion White Defense Dice" } };
class PS {
  constructor(t = {}) {
    this.colorsets = [], this.assetPath = t.assetPath;
  }
  async ImageLoader(t) {
    if (Array.isArray(t)) {
      for (let e = 0, o = t.length; e < o; e++) t[e] = await this.ImageLoader(t[e]);
      return t;
    }
    return t.source && t.source != "" && (t.texture = await this.loadImage(t.source)), t.source_bump && t.source_bump != "" && (t.bump = await this.loadImage(t.source_bump)), t;
  }
  loadImage(t) {
    return new Promise((e, o) => {
      let a = new Image();
      a.onload = () => e(a), a.crossOrigin = "anonymous", a.src = this.assetPath + t, a.onerror = (l) => o(l);
    }).catch((e) => {
      console.error("Unable to load image texture");
    });
  }
  async getColorSet(t) {
    let e, o;
    if (typeof t == "string" && (e = t), typeof t == "object" && (e = t.colorset), this.colorsets.hasOwnProperty(e)) return this.colorsets[e];
    let a = id[e];
    return o = t.texture || a.texture, a.texture = this.getTexture(o), a.texture = await this.ImageLoader(a.texture), t.material && (a.texture.material = t.material), this.colorsets[e] = a, a;
  }
  async makeColorSet(t = {}) {
    if (this.colorsets.hasOwnProperty(t.name)) return this.colorsets[t.name];
    let e = id.white, o = Object.assign({}, e, t), a = this.getTexture(o.texture);
    return o.texture = await this.ImageLoader(a), t.material && (o.texture.material = t.material), o.name.toLowerCase() === "white" && (o.name = `${Date.now()}`), this.colorsets[o.name] = o, o;
  }
  getTexture(t) {
    if (Array.isArray(t)) {
      let e = [];
      for (let o = 0, a = t.length; o < a; o++) e.push(this.getTexture(t[o]));
      return e;
    }
    return Wf.hasOwnProperty(t) ? Wf[t] : Wf.none;
  }
}
const CS = { default: { name: "Solid Color", author: "MajorVictory", showColorPicker: true, surface: "wood_tray", colors: { fg: "#9794ff", bg: "#0b1a3e" }, cubeMap: ["envmap.jpg", "envmap.jpg", "envmap.jpg", "envmap.jpg", "envmap.jpg", "envmap.jpg"] }, "blue-felt": { name: "Blue Felt", author: "MajorVictory", showColorPicker: true, surface: "felt", colors: { fg: "#9794ff", bg: "#0b1a3e" }, cubeMap: ["envmap.jpg", "envmap.jpg", "envmap.jpg", "envmap.jpg", "envmap.jpg", "envmap.jpg"] }, "red-felt": { name: "Red Felt", author: "MajorVictory", showColorPicker: true, surface: "felt", colors: { fg: "#ff9494", bg: "#4d1e1e" }, cubeMap: ["envmap.jpg", "envmap.jpg", "envmap.jpg", "envmap.jpg", "envmap.jpg", "envmap.jpg"] }, "green-felt": { name: "Green Felt", author: "MajorVictory", showColorPicker: true, surface: "felt", colors: { fg: "#97ff94", bg: "#244d1e" }, cubeMap: ["envmap.jpg", "envmap.jpg", "envmap.jpg", "envmap.jpg", "envmap.jpg", "envmap.jpg"] }, taverntable: { name: "Old Tavern Table", author: "MajorVictory", showColorPicker: true, surface: "wood_table", colors: { fg: "#9794ff", bg: "#0b1a3e" }, cubeMap: ["px.png", "nx.png", "py.png", "ny.png", "pz.png", "nz.png"] }, mahogany: { name: "(Mah-Hog-Any)", author: "MajorVictory", showColorPicker: true, surface: "wood_table", colors: { fg: "#9794ff", bg: "#0b1a3e" }, cubeMap: ["px.png", "nx.png", "py.png", "ny.png", "pz.png", "nz.png"] }, stainless: { name: "Stainless Steel", author: "MajorVictory", showColorPicker: true, surface: "metal", colors: { fg: "#9794ff", bg: "#0b1a3e" }, cubeMap: ["px.png", "nx.png", "py.png", "ny.png", "pz.png", "nz.png"] }, cyberpunk: { name: "Neo-New-Future-City", author: "MajorVictory", showColorPicker: true, surface: "metal", colors: { fg: "#3494A6", bg: "#440B28" }, cubeMap: ["px.png", "nx.png", "py.png", "ny.png", "pz.png", "nz.png"] }, cagetown: { name: "Cage Town", author: "MajorVictory", showColorPicker: true, surface: "wood_table", colors: { fg: "#D7A866", bg: "#282811" }, cubeMap: ["px.png", "nx.png", "py.png", "ny.png", "pz.png", "nz.png"] } }, RS = (E) => {
  let t;
  return function() {
    let e = this, o = arguments;
    t && window.cancelAnimationFrame(t), t = window.requestAnimationFrame(function() {
      E.apply(e, o);
    });
  };
}, IS = { assetPath: "./", framerate: 1 / 60, sounds: false, volume: 100, color_spotlight: 15720405, shadows: true, theme_surface: "green-felt", sound_dieMaterial: "plastic", theme_customColorset: null, theme_colorset: "white", theme_texture: "", theme_material: "glass", gravity_multiplier: 400, light_intensity: 0.7, baseScale: 100, strength: 1, iterationLimit: 1e3, onRollComplete: () => {
}, onRerollComplete: () => {
}, onAddDiceComplete: () => {
}, onRemoveDiceComplete: () => {
} };
class MS {
  constructor(t, e = {}) {
    this.initialized = false, this.container = document.querySelector(t), this.dimensions = new Zo(this.container.clientWidth, this.container.clientHeight), this.adaptive_timestep = false, this.last_time = 0, this.running = false, this.rolling = false, this.threadid, this.display = { currentWidth: null, currentHeight: null, containerWidth: null, containerHeight: null, aspect: null, scale: null }, this.cameraHeight = { max: null, close: null, medium: null, far: null }, this.scene = new Gb(), this.world = new vS(), this.dice_body_material = new Zs(), this.sounds_table = {}, this.sounds_dice = [], this.lastSoundType = "", this.lastSoundStep = 0, this.lastSound = 0, this.iteration, this.renderer, this.barrier, this.camera, this.light, this.light_amb, this.desk, this.box_body = {}, this.bodies = [], this.meshes = [], this.diceList = [], this.notationVectors = null, this.dieIndex = 0, this.soundDelay = 10, this.animstate = "", this.selector = { animate: true, rotate: true, intersected: null, dice: [] }, Object.assign(this, IS, e), this.DiceColors = new PS({ assetPath: this.assetPath }), this.DiceFactory = new tm({ baseScale: this.baseScale }), this.DiceFactory.setBumpMapping(true), this.surface = CS[this.theme_surface].surface;
  }
  enableShadows() {
    this.shadows = true, this.renderer && (this.renderer.shadowMap.enabled = this.shadows), this.light && (this.light.castShadow = this.shadows), this.desk && (this.desk.receiveShadow = this.shadows);
  }
  disableShadows() {
    this.shadows = false, this.renderer && (this.renderer.shadowMap.enabled = this.shadows), this.light && (this.light.castShadow = this.shadows), this.desk && (this.desk.receiveShadow = this.shadows);
  }
  async initialize() {
    this.renderer = new qd({ antialias: true, alpha: true }), this.container.appendChild(this.renderer.domElement), this.renderer.shadowMap.enabled = this.shadows, this.renderer.shadowMap.type = 2, this.renderer.setClearColor(0, 0), this.setDimensions(this.dimensions), this.world.gravity.set(0, 0, -9.8 * this.gravity_multiplier), this.world.broadphase = new Wd(), this.world.solver.iterations = 14, this.world.allowSleep = true, this.makeWorldBox(), this.resizeWorld(), await this.loadTheme({ colorset: this.theme_colorset, texture: this.theme_texture, material: this.theme_material }).catch((t) => {
      throw new Error("Unable to load theme");
    }), this.sounds && await this.loadSounds().catch((t) => {
      throw new Error("Unable to load sounds");
    }), this.initialized = true, this.renderer.render(this.scene, this.camera);
  }
  makeWorldBox() {
    Object.keys(this.box_body).length && (this.world.removeBody(this.box_body.desk), this.world.removeBody(this.box_body.topWall), this.world.removeBody(this.box_body.bottomWall), this.world.removeBody(this.box_body.leftWall), this.world.removeBody(this.box_body.rightWall));
    const t = new Zs(), e = new Zs();
    this.world.addContactMaterial(new Ys(t, this.dice_body_material, { mass: 0, friction: 0.6, restitution: 0.5 })), this.world.addContactMaterial(new Ys(e, this.dice_body_material, { mass: 0, friction: 0.6, restitution: 1 })), this.world.addContactMaterial(new Ys(this.dice_body_material, this.dice_body_material, { mass: 0, friction: 0.6, restitution: 0.5 })), this.box_body.desk = new Gn({ allowSleep: false, mass: 0, shape: new uc(), material: t }), this.world.addBody(this.box_body.desk), this.box_body.topWall = new Gn({ allowSleep: false, mass: 0, shape: new uc(), material: e }), this.box_body.topWall.quaternion.setFromAxisAngle(new le(1, 0, 0), Math.PI / 2), this.box_body.topWall.position.set(0, this.display.containerHeight * 0.93, 0), this.world.addBody(this.box_body.topWall), this.box_body.bottomWall = new Gn({ allowSleep: false, mass: 0, shape: new uc(), material: e }), this.box_body.bottomWall.quaternion.setFromAxisAngle(new le(1, 0, 0), -Math.PI / 2), this.box_body.bottomWall.position.set(0, -this.display.containerHeight * 0.93, 0), this.world.addBody(this.box_body.bottomWall), this.box_body.leftWall = new Gn({ allowSleep: false, mass: 0, shape: new uc(), material: e }), this.box_body.leftWall.quaternion.setFromAxisAngle(new le(0, 1, 0), -Math.PI / 2), this.box_body.leftWall.position.set(this.display.containerWidth * 0.93, 0, 0), this.world.addBody(this.box_body.leftWall), this.box_body.rightWall = new Gn({ allowSleep: false, mass: 0, shape: new uc(), material: e }), this.box_body.rightWall.quaternion.setFromAxisAngle(new le(0, 1, 0), Math.PI / 2), this.box_body.rightWall.position.set(-this.display.containerWidth * 0.93, 0, 0), this.world.addBody(this.box_body.rightWall);
  }
  async loadTheme(t) {
    let e;
    this.theme_customColorset ? e = await this.DiceColors.makeColorSet(this.theme_customColorset) : e = await this.DiceColors.getColorSet(t), this.DiceFactory.applyColorSet(e), this.colorData = e;
  }
  async loadSounds() {
    let t = { felt: 7, wood_table: 7, wood_tray: 7, metal: 9 }, e = { coin: 6, metal: 12, plastic: 15, wood: 12 };
    const o = this.colorData.texture.material.match(/wood|metal/g);
    if (this.sound_dieMaterial = o ? this.colorData.texture.material : "plastic", !this.sounds_table.hasOwnProperty(this.surface)) {
      this.sounds_table[this.surface] = [];
      let a = t[this.surface];
      for (let l = 1; l <= a; ++l) {
        const s = await this.loadAudio(this.assetPath + "sounds/surfaces/surface_" + this.surface + l + ".mp3");
        this.sounds_table[this.surface].push(s);
      }
    }
    if (!this.sounds_dice.hasOwnProperty("coin")) {
      this.sounds_dice.coin = [];
      let a = e.coin;
      for (let l = 1; l <= a; ++l) {
        const s = await this.loadAudio(this.assetPath + "sounds/dicehit/dicehit_coin" + l + ".mp3");
        this.sounds_dice.coin.push(s);
      }
    }
    if (!this.sounds_dice.hasOwnProperty(this.sound_dieMaterial)) {
      this.sounds_dice[this.sound_dieMaterial] = [];
      let a = e[this.sound_dieMaterial];
      for (let l = 1; l <= a; ++l) {
        const s = await this.loadAudio(this.assetPath + "sounds/dicehit/dicehit_" + this.sound_dieMaterial + l + ".mp3");
        this.sounds_dice[this.sound_dieMaterial].push(s);
      }
    }
  }
  loadAudio(t) {
    return new Promise((e, o) => {
      let a = new Audio();
      a.oncanplaythrough = () => e(a), a.crossOrigin = "anonymous", a.src = t, a.onerror = (l) => o(l);
    }).catch((e) => {
      console.error("Unable to load audio");
    });
  }
  async updateConfig(t = {}) {
    Object.apply(this, t), this.theme_customColorset = t.theme_customColorset ? t.theme_customColorset : null, t.theme_colorset && (this.theme_colorset = t.theme_colorset), t.theme_texture && (this.theme_texture = t.theme_texture), t.theme_material && (this.theme_material = t.theme_material), (t.theme_colorset || t.theme_texture || t.theme_material || t.theme_customColorset) && await this.loadTheme({ colorset: this.theme_colorset, texture: this.theme_texture, material: this.theme_material });
  }
  setDimensions(t) {
    switch (this.display.currentWidth = this.container.clientWidth / 2, this.display.currentHeight = this.container.clientHeight / 2, t ? (this.display.containerWidth = t.x, this.display.containerHeight = t.y) : (this.display.containerWidth = this.display.currentWidth, this.display.containerHeight = this.display.currentHeight), this.display.aspect = Math.min(this.display.currentWidth / this.display.containerWidth, this.display.currentHeight / this.display.containerHeight), this.display.scale = Math.sqrt(this.display.containerWidth * this.display.containerWidth + this.display.containerHeight * this.display.containerHeight) / 13, this.makeWorldBox(), this.renderer.setSize(this.display.currentWidth * 2, this.display.currentHeight * 2), this.cameraHeight.max = this.display.currentHeight / this.display.aspect / Math.tan(10 * Math.PI / 180), this.cameraHeight.medium = this.cameraHeight.max / 1.5, this.cameraHeight.far = this.cameraHeight.max, this.cameraHeight.close = this.cameraHeight.max / 2, this.camera && this.scene.remove(this.camera), this.camera = new ua(20, this.display.currentWidth / this.display.currentHeight, 1, this.cameraHeight.max * 1.3), this.animstate) {
      case "selector":
        this.camera.position.z = this.selector.dice.length > 9 ? this.cameraHeight.far : this.selector.dice.length < 6 ? this.cameraHeight.close : this.cameraHeight.medium;
        break;
      case "throw":
      case "afterthrow":
      default:
        this.camera.position.z = this.cameraHeight.far;
    }
    this.camera.lookAt(new Br(0, 0, 0));
    const e = Math.max(this.display.containerWidth, this.display.containerHeight);
    this.light && this.scene.remove(this.light), this.light_amb && this.scene.remove(this.light_amb), this.light = new Qb(this.color_spotlight, this.light_intensity), this.light.position.set(-e / 2, e / 2, e * 3), this.light.target.position.set(0, 0, 0), this.light.distance = e * 5, this.light.angle = Math.PI / 4, this.light.castShadow = this.shadows, this.light.shadow.camera.near = e / 10, this.light.shadow.camera.far = e * 5, this.light.shadow.camera.fov = 50, this.light.shadow.bias = 1e-3, this.light.shadow.mapSize.width = 1024, this.light.shadow.mapSize.height = 1024, this.scene.add(this.light), this.light_amb = new $b(16777147, 6776689, this.light_intensity), this.scene.add(this.light_amb), this.desk && this.scene.remove(this.desk);
    let o = new Wb();
    o.opacity = 0.5, this.desk = new Fa(new Kl(this.display.containerWidth * 6, this.display.containerHeight * 6, 1, 1), o), this.desk.receiveShadow = this.shadows, this.scene.add(this.desk), this.renderer.render(this.scene, this.camera);
  }
  resizeWorld() {
    const t = RS(() => {
      const e = this.renderer.domElement, o = this.container.clientWidth, a = this.container.clientHeight, l = e.width !== o || e.height !== a;
      return l && this.setDimensions(new Zo(this.container.clientWidth, this.container.clientHeight)), l;
    });
    window.addEventListener("resize", t);
  }
  vectorRand({ x: t, y: e }) {
    let o = Math.random() * Math.PI / 5 - Math.PI / 5 / 2, a = { x: t * Math.cos(o) - e * Math.sin(o), y: t * Math.sin(o) + e * Math.cos(o) };
    return a.x == 0 && (a.x = 0.01), a.y == 0 && (a.y = 0.01), a;
  }
  getNotationVectors(t, e, o, a) {
    let l = new od(t);
    for (let s in l.set) {
      const i = this.DiceFactory.get(l.set[s].type);
      let u = l.set[s].num, d = l.set[s].op, f = l.set[s].sid, p = l.set[s].gid, g = l.set[s].glvl, b = l.set[s].func, h = l.set[s].args;
      for (let m = 0; m < u; m++) {
        let c = this.vectorRand(e);
        c.x /= a, c.y /= a;
        let w = { x: this.display.containerWidth * (c.x > 0 ? -1 : 1) * 0.9, y: this.display.containerHeight * (c.y > 0 ? -1 : 1) * 0.9, z: Math.random() * 200 + 200 }, T = Math.abs(c.x / c.y);
        T > 1 ? w.y /= T : w.x *= T;
        let P = this.vectorRand(e);
        P.x /= a, P.y /= a;
        let k, R, F;
        i.shape != "d2" ? (k = { x: P.x * o, y: P.y * o, z: -10 }, R = { x: -(Math.random() * c.y * 5 + i.inertia * c.y), y: Math.random() * c.x * 5 + i.inertia * c.x, z: 0 }, F = { x: Math.random(), y: Math.random(), z: Math.random(), a: Math.random() }) : (k = { x: P.x * o / 10, y: P.y * o / 10, z: 3e3 }, R = { x: 12 * i.inertia, y: 1 * i.inertia, z: 0 }, F = { x: 1, y: 1, z: Math.random(), a: Math.random() }), l.vectors.push({ index: this.dieIndex++, type: i.type, op: d, sid: f, gid: p, glvl: g, func: b, args: h, pos: w, velocity: k, angle: R, axis: F });
      }
    }
    return l;
  }
  swapDiceFace(t, e) {
    const o = this.DiceFactory.get(t.notation.type);
    if (t.resultReason = "forced", o.shape == "d4") {
      this.swapDiceFace_D4(t, e);
      return;
    }
    o.values;
    let a = parseInt(t.getLastValue().value);
    e = parseInt(e), t.notation.type == "d10" && a == 0 && (a = 10), t.notation.type == "d100" && a == 0 && (a = 100), t.notation.type == "d100" && a > 0 && a < 10 && (a *= 10), t.notation.type == "d10" && e == 0 && (e = 10), t.notation.type == "d100" && e == 0 && (e = 100), t.notation.type == "d100" && e > 0 && e < 10 && (e *= 10);
    let l = o.values.indexOf(a), s = o.values.indexOf(e);
    if (l < 0 || s < 0 || l == s) return;
    let i = t.geometry.clone(), u = [], d = [], f = 2;
    o.shape == "d10" && (f = 1);
    let p, g = s + f;
    o.shape != "d2" ? (p = l + f, g = s + f) : (p = l + 1, g = s + 1);
    for (var b = 0, h = i.groups.length; b < h; ++b) {
      const m = i.groups[b].materialIndex;
      if (m == p) {
        u.push(b);
        continue;
      }
      if (m == g) {
        d.push(b);
        continue;
      }
    }
    if (!(u.length <= 0 || d.length <= 0)) {
      for (let m = 0, c = d.length; m < c; m++) i.groups[d[m]].materialIndex = p;
      for (let m = 0, c = u.length; m < c; m++) i.groups[u[m]].materialIndex = g;
      t.geometry = i, t.result = [];
    }
  }
  swapDiceFace_D4(t, e) {
    const o = this.DiceFactory.get(t.notation.type);
    let a = parseInt(t.getLastValue().value);
    if (e = parseInt(e), !(a >= 1 && a <= 4)) return;
    let l = e - a, s = t.geometry.clone();
    for (let i = 0, u = s.groups.length; i < u; ++i) {
      const d = s.groups[i];
      let f = d.materialIndex;
      if (f != 0) {
        for (f += l - 1; f > 4; ) f -= 4;
        for (; f < 1; ) f += 4;
        d.materialIndex = f + 1;
      }
    }
    l != 0 && (l < 0 && (l += 4), t.material = this.DiceFactory.createMaterials(o, 0, 0, false, l)), t.geometry = s;
  }
  spawnDice(t, e = false) {
    const { pos: o, axis: a, angle: l, velocity: s } = t;
    let i;
    if (e) i = e, i.stopped = 0, this.world.removeBody(i.body);
    else {
      if (i = this.DiceFactory.create(t.type, this.colorData), !i) return;
      i.notation = t, i.result = [], i.stopped = 0, i.castShadow = this.shadows, this.scene.add(i), this.diceList.push(i);
    }
    i.body = new Gn({ allowSleep: true, sleepSpeedLimit: 75, sleepTimeLimit: 0.9, mass: i.mass, shape: i.geometry.cannon_shape, material: this.dice_body_material }), i.body.type = Gn.DYNAMIC, i.body.position.set(o.x, o.y, o.z), i.body.quaternion.setFromAxisAngle(new le(a.x, a.y, a.z), a.a * Math.PI * 2), i.body.angularVelocity.set(l.x, l.y, l.z), i.body.velocity.set(s.x, s.y, s.z), i.body.linearDamping = 0.1, i.body.angularDamping = 0.1, i.body.diceShape = i.shape, i.body.sleepState = 0, i.body.addEventListener("collide", this.eventCollide.bind(this)), this.world.addBody(i.body);
  }
  eventCollide({ body: t, target: e }) {
    if (this.animstate == "simulate" || !this.sounds || !t || this.volume <= 0) return;
    let o = Date.now(), a = t.mass > 0 ? "dice" : "table";
    if (!((this.lastSoundStep == t.world.stepnumber || this.lastSound > o) && a != "dice") && !((this.lastSoundStep == t.world.stepnumber || this.lastSound > o) && a == "dice" && this.lastSoundType == "dice")) {
      if (t.mass > 0) {
        let l = t.velocity.length();
        if (l < 250) return;
        let s;
        t.diceShape === "d2" ? s = this.sounds_dice.coin[Math.floor(Math.random() * this.sounds_dice.coin.length)] : s = this.sounds_dice[this.sound_dieMaterial][Math.floor(Math.random() * this.sounds_dice[this.sound_dieMaterial].length)], s && (s.volume = Math.min(l / 8e3, this.volume / 100), s.play().catch((i) => {
        })), this.lastSoundType = "dice";
      } else {
        let l = e.velocity.length();
        if (l < 250) return;
        let s = this.surface, i = this.sounds_table[s], u = i[Math.floor(Math.random() * i.length)];
        u && (u.volume = Math.min(l / 8e3, this.volume / 100), u.play().catch((d) => {
        })), this.lastSoundType = "table";
      }
      this.lastSoundStep = t.world.stepnumber, this.lastSound = o + this.soundDelay;
    }
  }
  checkForRethrow(t) {
    return t.notation.func && t.notation.func.toLowerCase(), false;
  }
  throwFinished() {
    const t = this.iteration > this.iterationLimit;
    for (let e = 0, o = this.diceList.length; e < o; ++e) {
      const a = this.diceList[e], l = Gn.SLEEPING;
      if (a.body.sleepState < l && !t) return false;
      if (a.body.sleepState == l || t) {
        if (a.body.type === Gn.KINEMATIC) continue;
        let s = false;
        if (a.result.length == 0 ? (a.storeRolledValue(a.resultReason), s = this.checkForRethrow(a)) : a.result.length > 0 && a.rerolling && (a.rerolling = false, a.storeRolledValue("reroll"), s = this.checkForRethrow(a)), s) return a.rerolls += 1, a.rerolling = true, a.body.wakeUp(), a.body.type = Gn.DYNAMIC, a.body.angularVelocity = new le(25, 25, 25), a.body.velocity = new le(0, 0, 3e3), false;
        a.rerolling = false, a.body.type = Gn.KINEMATIC;
      }
    }
    return true;
  }
  simulateThrow() {
    for (this.animstate = "simulate", this.iteration = 0, this.rolling = true; !this.throwFinished(true); ) ++this.iteration, this.world.step(this.framerate);
  }
  animateThrow(t, e) {
    this.animstate = "throw";
    let o = Date.now();
    this.last_time = this.last_time || o - this.framerate * 1e3;
    let a = (o - this.last_time) / 1e3;
    ++this.iteration;
    let l = Math.floor(a / this.framerate);
    for (let s = 0; s < l; s++) this.world.step(this.framerate), ++this.steps;
    for (let s in this.scene.children) {
      let i = this.scene.children[s];
      i.body != null && (i.position.copy(i.body.position), i.quaternion.copy(i.body.quaternion));
    }
    if (this.renderer.render(this.scene, this.camera), this.last_time = this.last_time + l * this.framerate * 1e3, this.running == t && this.throwFinished()) {
      this.running = false, this.rolling = false, e && e.call(this, this.notationVectors), this.running = Date.now(), this.animateAfterThrow(this.running);
      return;
    }
    this.running == t && ((s, i, u, d, f) => {
      !u && a < this.framerate ? setTimeout(() => {
        requestAnimationFrame(() => {
          s.call(this, i, d, f);
        });
      }, (this.framerate - a) * 1e3) : requestAnimationFrame(() => {
        s.call(this, i, d, f);
      });
    }).bind(this)(this.animateThrow, t, this.adaptive_timestep, e);
  }
  animateAfterThrow(t) {
    this.animstate = "afterthrow";
    let e = Date.now(), o = (e - this.last_time) / 1e3;
    o > 3 && (o = this.framerate), this.running = false, this.last_time = e, this.renderer.render(this.scene, this.camera), this.running == t && ((a, l, s) => {
      !s && o < this.framerate ? setTimeout(() => {
        requestAnimationFrame(() => {
          a.call(this, l);
        });
      }, (this.framerate - o) * 1e3) : requestAnimationFrame(() => {
        a.call(this, l);
      });
    }).bind(this)(this.animateAfterThrow, t, this.adaptive_timestep);
  }
  startClickThrow(t) {
    this.rolling && (this.clearDice(), this.rolling = false);
    let e = { x: (Math.random() * 2 - 0.5) * this.display.currentWidth, y: -(Math.random() * 2 - 0.5) * this.display.currentHeight }, o = Math.sqrt(e.x * e.x + e.y * e.y) + 100, a = (Math.random() + 3) * o * this.strength;
    return this.getNotationVectors(t, e, a, o);
  }
  clearDice() {
    this.running = false;
    let t;
    for (; t = this.diceList.pop(); ) this.scene.remove(t), t.body && this.world.removeBody(t.body);
    this.renderer.render(this.scene, this.camera), setTimeout(() => {
      this.renderer.render(this.scene, this.camera);
    }, 100);
  }
  getDiceResults(t) {
    if (t !== void 0) return { type: this.diceList[t].shape, sides: parseInt(this.diceList[t].shape.substring(1)), id: t, ...this.diceList[t].result.at(-1) };
    let e = 0;
    const o = this.notationVectors.constant ? parseInt(`${this.notationVectors.op}${this.notationVectors.constant}`) : 0;
    let a = o;
    return { notation: this.notationVectors.notation, sets: this.notationVectors.set.map((l) => {
      const s = e + l.num - 1;
      let i = 0;
      const u = [];
      for (let f = e; f <= s; f++) {
        if (this.diceList[e].result.at(-1).reason === "remove") {
          e++;
          continue;
        }
        u.push({ type: l.type, sides: parseInt(l.type.substring(1)), id: e, ...this.diceList[e].result.at(-1) }), i += this.diceList[e].result.at(-1).value, e++;
      }
      const d = { num: l.num, type: l.type, sides: parseInt(l.type.substring(1)), rolls: u, total: i };
      return a += i, d;
    }), modifier: o, total: a };
  }
  async roll(t) {
    if (this.notationVectors = this.startClickThrow(t), this.notationVectors) return new Promise((e, o) => {
      this.rollDice(() => {
        const a = this.getDiceResults();
        this.onRollComplete(a);
        const l = new CustomEvent("rollComplete", { detail: a });
        document.dispatchEvent(l), e(a);
      });
    });
  }
  async reroll(t) {
    return this.rolling = true, this.running = Date.now(), this.iteration = 0, new Promise((e, o) => {
      t.forEach((a) => {
        const l = this.diceList[a];
        l.rerolls += 1, l.rerolling = true, l.body.wakeUp(), l.body.type = Gn.DYNAMIC, l.body.angularVelocity = new le(25, 25, 25), l.body.velocity = new le(0, 0, 3e3);
      }), this.animateThrow(this.running, () => {
        const a = t.map((s) => this.getDiceResults(s));
        this.onRerollComplete(a);
        const l = new CustomEvent("rerollComplete", { detail: a });
        document.dispatchEvent(l), e(a);
      });
    });
  }
  async add(t) {
    let e = this.diceList.length;
    if (!e) return this.roll(t);
    let o = this.startClickThrow(t), a = [];
    for (let l = 0, s = o.vectors.length; l < s; ++l) this.spawnDice(o.vectors[l]);
    this.simulateThrow(), this.steps = 0, this.iteration = 0;
    for (let l = 0, s = o.vectors.length; l < s; ++l) {
      const i = e + l;
      !this.diceList[i] || (this.spawnDice(o.vectors[l], this.diceList[i]), a.push(i));
    }
    if (o.result && o.result.length > 0) for (let l = 0; l < o.result.length; l++) {
      const s = e + l;
      let i = this.diceList[s];
      !i || i.getLastValue().value != o.result[l] && this.swapDiceFace(i, o.result[l]);
    }
    return this.notationVectors = od.mergeNotation(this.notationVectors, o), new Promise((l, s) => {
      const i = () => {
        const u = a.map((f) => this.getDiceResults(f));
        this.onAddDiceComplete(u);
        const d = new CustomEvent("addDiceComplete", { detail: u });
        document.dispatchEvent(d), l(u);
      };
      this.rolling = true, this.running = Date.now(), this.last_time = 0, this.animateThrow(this.running, i);
    });
  }
  async remove(t) {
    return new Promise((e, o) => {
      const a = [];
      t.forEach((s) => {
        const i = this.diceList[s];
        i.body && this.world.removeBody(i.body), this.scene.remove(i), i.storeRolledValue("remove"), a.push(this.getDiceResults(s));
      }), this.renderer.render(this.scene, this.camera), this.onRemoveDiceComplete(a);
      const l = new CustomEvent("removeDiceComplete", { detail: a });
      document.dispatchEvent(l), e(a);
    });
  }
  rollDice(t) {
    if (this.notationVectors.error) {
      t.call(this);
      return;
    }
    this.clearDice();
    for (let e = 0, o = this.notationVectors.vectors.length; e < o; ++e) this.spawnDice(this.notationVectors.vectors[e]);
    this.simulateThrow(), this.steps = 0, this.iteration = 0;
    for (let e = 0, o = this.diceList.length; e < o; ++e) !this.diceList[e] || this.spawnDice(this.notationVectors.vectors[e], this.diceList[e]);
    if (this.notationVectors.result && this.notationVectors.result.length > 0) for (let e = 0; e < this.notationVectors.result.length; e++) {
      let o = this.diceList[e];
      !o || o.getLastValue().value != this.notationVectors.result[e] && this.swapDiceFace(o, this.notationVectors.result[e]);
    }
    this.rolling = true, this.running = Date.now(), this.last_time = 0, this.animateThrow(this.running, t);
  }
}
var Xf = {}, pc = {}, Vs = {}, ad;
function wp() {
  if (ad) return Vs;
  ad = 1, Object.defineProperty(Vs, "__esModule", { value: true }), Vs.Ok = Vs.Err = void 0;
  function E(s) {
    "@babel/helpers - typeof";
    return E = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(i) {
      return typeof i;
    } : function(i) {
      return i && typeof Symbol == "function" && i.constructor === Symbol && i !== Symbol.prototype ? "symbol" : typeof i;
    }, E(s);
  }
  function t(s, i) {
    if (!(s instanceof i)) throw new TypeError("Cannot call a class as a function");
  }
  function e(s, i) {
    for (var u = 0; u < i.length; u++) {
      var d = i[u];
      d.enumerable = d.enumerable || false, d.configurable = true, "value" in d && (d.writable = true), Object.defineProperty(s, a(d.key), d);
    }
  }
  function o(s, i, u) {
    return i && e(s.prototype, i), Object.defineProperty(s, "prototype", { writable: false }), s;
  }
  function a(s) {
    var i = l(s, "string");
    return E(i) == "symbol" ? i : i + "";
  }
  function l(s, i) {
    if (E(s) != "object" || !s) return s;
    var u = s[Symbol.toPrimitive];
    if (u !== void 0) {
      var d = u.call(s, i);
      if (E(d) != "object") return d;
      throw new TypeError("@@toPrimitive must return a primitive value.");
    }
    return String(s);
  }
  return Vs.Ok = function() {
    function s(i) {
      t(this, s), this.value = i;
    }
    return o(s, [{ key: "unwrapErr", value: function() {
      throw new Error("No error");
    } }, { key: "unwrap", value: function() {
      return this.value;
    } }, { key: "isOk", value: function() {
      return true;
    } }, { key: "isErr", value: function() {
      return false;
    } }]);
  }(), Vs.Err = function() {
    function s(i) {
      t(this, s), this.error = i;
    }
    return o(s, [{ key: "unwrapErr", value: function() {
      return this.error;
    } }, { key: "unwrap", value: function() {
      throw new Error(this.error.message);
    } }, { key: "isOk", value: function() {
      return false;
    } }, { key: "isErr", value: function() {
      return true;
    } }]);
  }(), Vs;
}
var us = {}, zs = {}, sd;
function Yl() {
  return sd || (sd = 1, Object.defineProperty(zs, "__esModule", { value: true }), zs.NULL_ACCOUNT = zs.DEFAULT_TIMEOUT = void 0, ps(), zs.DEFAULT_TIMEOUT = 5 * 60, zs.NULL_ACCOUNT = "GAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAWHF"), zs;
}
var ud;
function Sp() {
  if (ud) return us;
  ud = 1, Object.defineProperty(us, "__esModule", { value: true }), us.contractErrorPattern = void 0, us.getAccount = p, us.implementsToString = d, us.processSpecEntryStream = f, us.withExponentialBackoff = i;
  var E = ps(), t = Yl();
  function e() {
    var b, h, m = typeof Symbol == "function" ? Symbol : {}, c = m.iterator || "@@iterator", w = m.toStringTag || "@@toStringTag";
    function T(Z, D, V, S) {
      var x = D && D.prototype instanceof k ? D : k, B = Object.create(x.prototype);
      return o(B, "_invoke", function(W, lt, pt) {
        var at, rt, ot, X = 0, I = pt || [], nt = false, ft = { p: 0, n: 0, v: b, a: dt, f: dt.bind(b, 4), d: function($, it) {
          return at = $, rt = 0, ot = b, ft.n = it, P;
        } };
        function dt(Lt, $) {
          for (rt = Lt, ot = $, h = 0; !nt && X && !it && h < I.length; h++) {
            var it, mt = I[h], Ot = ft.p, bt = mt[2];
            Lt > 3 ? (it = bt === $) && (ot = mt[(rt = mt[4]) ? 5 : (rt = 3, 3)], mt[4] = mt[5] = b) : mt[0] <= Ot && ((it = Lt < 2 && Ot < mt[1]) ? (rt = 0, ft.v = $, ft.n = mt[1]) : Ot < bt && (it = Lt < 3 || mt[0] > $ || $ > bt) && (mt[4] = Lt, mt[5] = $, ft.n = bt, rt = 0));
          }
          if (it || Lt > 1) return P;
          throw nt = true, $;
        }
        return function(Lt, $, it) {
          if (X > 1) throw TypeError("Generator is already running");
          for (nt && $ === 1 && dt($, it), rt = $, ot = it; (h = rt < 2 ? b : ot) || !nt; ) {
            at || (rt ? rt < 3 ? (rt > 1 && (ft.n = -1), dt(rt, ot)) : ft.n = ot : ft.v = ot);
            try {
              if (X = 2, at) {
                if (rt || (Lt = "next"), h = at[Lt]) {
                  if (!(h = h.call(at, ot))) throw TypeError("iterator result is not an object");
                  if (!h.done) return h;
                  ot = h.value, rt < 2 && (rt = 0);
                } else rt === 1 && (h = at.return) && h.call(at), rt < 2 && (ot = TypeError("The iterator does not provide a '" + Lt + "' method"), rt = 1);
                at = b;
              } else if ((h = (nt = ft.n < 0) ? ot : W.call(lt, ft)) !== P) break;
            } catch (mt) {
              at = b, rt = 1, ot = mt;
            } finally {
              X = 1;
            }
          }
          return { value: h, done: nt };
        };
      }(Z, V, S), true), B;
    }
    var P = {};
    function k() {
    }
    function R() {
    }
    function F() {
    }
    h = Object.getPrototypeOf;
    var v = [][c] ? h(h([][c]())) : (o(h = {}, c, function() {
      return this;
    }), h), U = F.prototype = k.prototype = Object.create(v);
    function M(Z) {
      return Object.setPrototypeOf ? Object.setPrototypeOf(Z, F) : (Z.__proto__ = F, o(Z, w, "GeneratorFunction")), Z.prototype = Object.create(U), Z;
    }
    return R.prototype = F, o(U, "constructor", F), o(F, "constructor", R), R.displayName = "GeneratorFunction", o(F, w, "GeneratorFunction"), o(U), o(U, w, "Generator"), o(U, c, function() {
      return this;
    }), o(U, "toString", function() {
      return "[object Generator]";
    }), (e = function() {
      return { w: T, m: M };
    })();
  }
  function o(b, h, m, c) {
    var w = Object.defineProperty;
    try {
      w({}, "", {});
    } catch {
      w = 0;
    }
    o = function(P, k, R, F) {
      if (k) w ? w(P, k, { value: R, enumerable: !F, configurable: !F, writable: !F }) : P[k] = R;
      else {
        let U = function(M, Z) {
          o(P, M, function(D) {
            return this._invoke(M, Z, D);
          });
        };
        var v = U;
        U("next", 0), U("throw", 1), U("return", 2);
      }
    }, o(b, h, m, c);
  }
  function a(b) {
    "@babel/helpers - typeof";
    return a = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(h) {
      return typeof h;
    } : function(h) {
      return h && typeof Symbol == "function" && h.constructor === Symbol && h !== Symbol.prototype ? "symbol" : typeof h;
    }, a(b);
  }
  function l(b, h, m, c, w, T, P) {
    try {
      var k = b[T](P), R = k.value;
    } catch (F) {
      return void m(F);
    }
    k.done ? h(R) : Promise.resolve(R).then(c, w);
  }
  function s(b) {
    return function() {
      var h = this, m = arguments;
      return new Promise(function(c, w) {
        var T = b.apply(h, m);
        function P(R) {
          l(T, c, w, P, k, "next", R);
        }
        function k(R) {
          l(T, c, w, P, k, "throw", R);
        }
        P(void 0);
      });
    };
  }
  function i(b, h, m) {
    return u.apply(this, arguments);
  }
  function u() {
    return u = s(e().m(function b(h, m, c) {
      var w, T, P, k, R, F, v, U = arguments, M, Z, D, V;
      return e().w(function(S) {
        for (; ; ) switch (S.n) {
          case 0:
            return w = U.length > 3 && U[3] !== void 0 ? U[3] : 1.5, T = U.length > 4 && U[4] !== void 0 ? U[4] : false, P = [], k = 0, M = P, S.n = 1, h();
          case 1:
            if (Z = S.v, M.push.call(M, Z), m(P[P.length - 1])) {
              S.n = 2;
              break;
            }
            return S.a(2, P);
          case 2:
            R = new Date(Date.now() + c * 1e3).valueOf(), F = 1e3, v = F;
          case 3:
            if (!(Date.now() < R && m(P[P.length - 1]))) {
              S.n = 6;
              break;
            }
            return k += 1, T && console.info("Waiting ".concat(F, "ms before trying again (bringing the total wait time to ").concat(v, "ms so far, of total ").concat(c * 1e3, "ms)")), S.n = 4, new Promise(function(x) {
              return setTimeout(x, F);
            });
          case 4:
            return F *= w, new Date(Date.now() + F).valueOf() > R && (F = R - Date.now(), T && console.info("was gonna wait too long; new waitTime: ".concat(F, "ms"))), v = F + v, D = P, S.n = 5, h(P[P.length - 1]);
          case 5:
            V = S.v, D.push.call(D, V), T && m(P[P.length - 1]) && console.info("".concat(k, ". Called ").concat(h, "; ").concat(P.length, " prev attempts. Most recent: ").concat(JSON.stringify(P[P.length - 1], null, 2))), S.n = 3;
            break;
          case 6:
            return S.a(2, P);
        }
      }, b);
    })), u.apply(this, arguments);
  }
  us.contractErrorPattern = /Error\(Contract, #(\d+)\)/;
  function d(b) {
    return a(b) === "object" && b !== null && "toString" in b;
  }
  function f(b) {
    for (var h = new E.cereal.XdrReader(b), m = []; !h.eof; ) m.push(E.xdr.ScSpecEntry.read(h));
    return m;
  }
  function p(b, h) {
    return g.apply(this, arguments);
  }
  function g() {
    return g = s(e().m(function b(h, m) {
      return e().w(function(c) {
        for (; ; ) switch (c.n) {
          case 0:
            return c.a(2, h.publicKey ? m.getAccount(h.publicKey) : new E.Account(t.NULL_ACCOUNT, "0"));
        }
      }, b);
    })), g.apply(this, arguments);
  }
  return us;
}
var hc = {}, cd;
function em() {
  if (cd) return hc;
  cd = 1, Object.defineProperty(hc, "__esModule", { value: true }), hc.SentTransaction = void 0;
  var E = Xl(), t = Bu(), e = Sp(), o = Yl(), a;
  function l(D, V, S) {
    return V = h(V), s(D, p() ? Reflect.construct(V, S || [], h(D).constructor) : V.apply(D, S));
  }
  function s(D, V) {
    if (V && (m(V) == "object" || typeof V == "function")) return V;
    if (V !== void 0) throw new TypeError("Derived constructors may only return object or undefined");
    return i(D);
  }
  function i(D) {
    if (D === void 0) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
    return D;
  }
  function u(D, V) {
    if (typeof V != "function" && V !== null) throw new TypeError("Super expression must either be null or a function");
    D.prototype = Object.create(V && V.prototype, { constructor: { value: D, writable: true, configurable: true } }), Object.defineProperty(D, "prototype", { writable: false }), V && b(D, V);
  }
  function d(D) {
    var V = typeof Map == "function" ? /* @__PURE__ */ new Map() : void 0;
    return d = function(x) {
      if (x === null || !g(x)) return x;
      if (typeof x != "function") throw new TypeError("Super expression must either be null or a function");
      if (V !== void 0) {
        if (V.has(x)) return V.get(x);
        V.set(x, B);
      }
      function B() {
        return f(x, arguments, h(this).constructor);
      }
      return B.prototype = Object.create(x.prototype, { constructor: { value: B, enumerable: false, writable: true, configurable: true } }), b(B, x);
    }, d(D);
  }
  function f(D, V, S) {
    if (p()) return Reflect.construct.apply(null, arguments);
    var x = [null];
    x.push.apply(x, V);
    var B = new (D.bind.apply(D, x))();
    return S && b(B, S.prototype), B;
  }
  function p() {
    try {
      var D = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
      }));
    } catch {
    }
    return (p = function() {
      return !!D;
    })();
  }
  function g(D) {
    try {
      return Function.toString.call(D).indexOf("[native code]") !== -1;
    } catch {
      return typeof D == "function";
    }
  }
  function b(D, V) {
    return b = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function(S, x) {
      return S.__proto__ = x, S;
    }, b(D, V);
  }
  function h(D) {
    return h = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function(V) {
      return V.__proto__ || Object.getPrototypeOf(V);
    }, h(D);
  }
  function m(D) {
    "@babel/helpers - typeof";
    return m = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(V) {
      return typeof V;
    } : function(V) {
      return V && typeof Symbol == "function" && V.constructor === Symbol && V !== Symbol.prototype ? "symbol" : typeof V;
    }, m(D);
  }
  function c() {
    var D, V, S = typeof Symbol == "function" ? Symbol : {}, x = S.iterator || "@@iterator", B = S.toStringTag || "@@toStringTag";
    function W(nt, ft, dt, Lt) {
      var $ = ft && ft.prototype instanceof pt ? ft : pt, it = Object.create($.prototype);
      return w(it, "_invoke", function(mt, Ot, bt) {
        var xt, Ct, Tt, Bt = 0, At = bt || [], Ut = false, Vt = { p: 0, n: 0, v: D, a: oe, f: oe.bind(D, 4), d: function(yt, Mt) {
          return xt = yt, Ct = 0, Tt = D, Vt.n = Mt, lt;
        } };
        function oe(te, yt) {
          for (Ct = te, Tt = yt, V = 0; !Ut && Bt && !Mt && V < At.length; V++) {
            var Mt, O = At[V], z = Vt.p, J = O[2];
            te > 3 ? (Mt = J === yt) && (Tt = O[(Ct = O[4]) ? 5 : (Ct = 3, 3)], O[4] = O[5] = D) : O[0] <= z && ((Mt = te < 2 && z < O[1]) ? (Ct = 0, Vt.v = yt, Vt.n = O[1]) : z < J && (Mt = te < 3 || O[0] > yt || yt > J) && (O[4] = te, O[5] = yt, Vt.n = J, Ct = 0));
          }
          if (Mt || te > 1) return lt;
          throw Ut = true, yt;
        }
        return function(te, yt, Mt) {
          if (Bt > 1) throw TypeError("Generator is already running");
          for (Ut && yt === 1 && oe(yt, Mt), Ct = yt, Tt = Mt; (V = Ct < 2 ? D : Tt) || !Ut; ) {
            xt || (Ct ? Ct < 3 ? (Ct > 1 && (Vt.n = -1), oe(Ct, Tt)) : Vt.n = Tt : Vt.v = Tt);
            try {
              if (Bt = 2, xt) {
                if (Ct || (te = "next"), V = xt[te]) {
                  if (!(V = V.call(xt, Tt))) throw TypeError("iterator result is not an object");
                  if (!V.done) return V;
                  Tt = V.value, Ct < 2 && (Ct = 0);
                } else Ct === 1 && (V = xt.return) && V.call(xt), Ct < 2 && (Tt = TypeError("The iterator does not provide a '" + te + "' method"), Ct = 1);
                xt = D;
              } else if ((V = (Ut = Vt.n < 0) ? Tt : mt.call(Ot, Vt)) !== lt) break;
            } catch (O) {
              xt = D, Ct = 1, Tt = O;
            } finally {
              Bt = 1;
            }
          }
          return { value: V, done: Ut };
        };
      }(nt, dt, Lt), true), it;
    }
    var lt = {};
    function pt() {
    }
    function at() {
    }
    function rt() {
    }
    V = Object.getPrototypeOf;
    var ot = [][x] ? V(V([][x]())) : (w(V = {}, x, function() {
      return this;
    }), V), X = rt.prototype = pt.prototype = Object.create(ot);
    function I(nt) {
      return Object.setPrototypeOf ? Object.setPrototypeOf(nt, rt) : (nt.__proto__ = rt, w(nt, B, "GeneratorFunction")), nt.prototype = Object.create(X), nt;
    }
    return at.prototype = rt, w(X, "constructor", rt), w(rt, "constructor", at), at.displayName = "GeneratorFunction", w(rt, B, "GeneratorFunction"), w(X), w(X, B, "Generator"), w(X, x, function() {
      return this;
    }), w(X, "toString", function() {
      return "[object Generator]";
    }), (c = function() {
      return { w: W, m: I };
    })();
  }
  function w(D, V, S, x) {
    var B = Object.defineProperty;
    try {
      B({}, "", {});
    } catch {
      B = 0;
    }
    w = function(lt, pt, at, rt) {
      if (pt) B ? B(lt, pt, { value: at, enumerable: !rt, configurable: !rt, writable: !rt }) : lt[pt] = at;
      else {
        let X = function(I, nt) {
          w(lt, I, function(ft) {
            return this._invoke(I, nt, ft);
          });
        };
        var ot = X;
        X("next", 0), X("throw", 1), X("return", 2);
      }
    }, w(D, V, S, x);
  }
  function T(D, V, S, x, B, W, lt) {
    try {
      var pt = D[W](lt), at = pt.value;
    } catch (rt) {
      return void S(rt);
    }
    pt.done ? V(at) : Promise.resolve(at).then(x, B);
  }
  function P(D) {
    return function() {
      var V = this, S = arguments;
      return new Promise(function(x, B) {
        var W = D.apply(V, S);
        function lt(at) {
          T(W, x, B, lt, pt, "next", at);
        }
        function pt(at) {
          T(W, x, B, lt, pt, "throw", at);
        }
        lt(void 0);
      });
    };
  }
  function k(D, V) {
    if (!(D instanceof V)) throw new TypeError("Cannot call a class as a function");
  }
  function R(D, V) {
    for (var S = 0; S < V.length; S++) {
      var x = V[S];
      x.enumerable = x.enumerable || false, x.configurable = true, "value" in x && (x.writable = true), Object.defineProperty(D, U(x.key), x);
    }
  }
  function F(D, V, S) {
    return V && R(D.prototype, V), Object.defineProperty(D, "prototype", { writable: false }), D;
  }
  function v(D, V, S) {
    return (V = U(V)) in D ? Object.defineProperty(D, V, { value: S, enumerable: true, configurable: true, writable: true }) : D[V] = S, D;
  }
  function U(D) {
    var V = M(D, "string");
    return m(V) == "symbol" ? V : V + "";
  }
  function M(D, V) {
    if (m(D) != "object" || !D) return D;
    var S = D[Symbol.toPrimitive];
    if (S !== void 0) {
      var x = S.call(D, V);
      if (m(x) != "object") return x;
      throw new TypeError("@@toPrimitive must return a primitive value.");
    }
    return (V === "string" ? String : Number)(D);
  }
  var Z = hc.SentTransaction = function() {
    function D(V) {
      var S = this, x;
      k(this, D), v(this, "send", P(c().m(function B() {
        var W, lt, pt;
        return c().w(function(at) {
          for (; ; ) switch (at.n) {
            case 0:
              return at.n = 1, S.server.sendTransaction(S.assembled.signed);
            case 1:
              if (S.sendTransactionResponse = at.v, S.sendTransactionResponse.status === "PENDING") {
                at.n = 2;
                break;
              }
              throw new D.Errors.SendFailed(`Sending the transaction to the network failed!
`.concat(JSON.stringify(S.sendTransactionResponse, null, 2)));
            case 2:
              return lt = S.sendTransactionResponse.hash, pt = (W = S.assembled.options.timeoutInSeconds) !== null && W !== void 0 ? W : o.DEFAULT_TIMEOUT, at.n = 3, (0, e.withExponentialBackoff)(function() {
                return S.server.getTransaction(lt);
              }, function(rt) {
                return rt.status === t.Api.GetTransactionStatus.NOT_FOUND;
              }, pt);
            case 3:
              if (S.getTransactionResponseAll = at.v, S.getTransactionResponse = S.getTransactionResponseAll[S.getTransactionResponseAll.length - 1], S.getTransactionResponse.status !== t.Api.GetTransactionStatus.NOT_FOUND) {
                at.n = 4;
                break;
              }
              throw new D.Errors.TransactionStillPending("Waited ".concat(pt, " seconds for transaction to complete, but it did not. ") + "Returning anyway. Check the transaction status manually. " + "Sent transaction: ".concat(JSON.stringify(S.sendTransactionResponse, null, 2), `
`) + "All attempts to get the result: ".concat(JSON.stringify(S.getTransactionResponseAll, null, 2)));
            case 4:
              return at.a(2, S);
          }
        }, B);
      }))), this.assembled = V, this.server = new E.Server(this.assembled.options.rpcUrl, { allowHttp: (x = this.assembled.options.allowHttp) !== null && x !== void 0 ? x : false });
    }
    return F(D, [{ key: "result", get: function() {
      if ("getTransactionResponse" in this && this.getTransactionResponse) {
        if ("returnValue" in this.getTransactionResponse) return this.assembled.options.parseResultXdr(this.getTransactionResponse.returnValue);
        throw new Error("Transaction failed! Cannot parse result.");
      }
      if (this.sendTransactionResponse) {
        var S, x = (S = this.sendTransactionResponse.errorResult) === null || S === void 0 ? void 0 : S.result();
        throw x ? new D.Errors.SendFailed("Transaction simulation looked correct, but attempting to send the transaction failed. Check `simulation` and `sendTransactionResponseAll` to troubleshoot. Decoded `sendTransactionResponse.errorResultXdr`: ".concat(x)) : new D.Errors.SendResultOnly("Transaction was sent to the network, but not yet awaited. No result to show. Await transaction completion with `getTransaction(sendTransactionResponse.hash)`");
      }
      throw new Error("Sending transaction failed: ".concat(JSON.stringify(this.assembled.signed)));
    } }]);
  }();
  return a = Z, v(Z, "Errors", { SendFailed: function(D) {
    function V() {
      return k(this, V), l(this, V, arguments);
    }
    return u(V, D), F(V);
  }(d(Error)), SendResultOnly: function(D) {
    function V() {
      return k(this, V), l(this, V, arguments);
    }
    return u(V, D), F(V);
  }(d(Error)), TransactionStillPending: function(D) {
    function V() {
      return k(this, V), l(this, V, arguments);
    }
    return u(V, D), F(V);
  }(d(Error)) }), v(Z, "init", function() {
    var D = P(c().m(function V(S) {
      var x, B;
      return c().w(function(W) {
        for (; ; ) switch (W.n) {
          case 0:
            return x = new a(S), W.n = 1, x.send();
          case 1:
            return B = W.v, W.a(2, B);
        }
      }, V);
    }));
    return function(V) {
      return D.apply(this, arguments);
    };
  }()), hc;
}
var ld;
function rm() {
  if (ld) return pc;
  ld = 1, Object.defineProperty(pc, "__esModule", { value: true }), pc.AssembledTransaction = void 0;
  var E = ps(), t = Xl(), e = Bu(), o = fp(), a = wp(), l = Sp(), s = Yl(), i = em();
  function u($, it, mt) {
    return it = w(it), d($, h() ? Reflect.construct(it, mt || [], w($).constructor) : it.apply($, mt));
  }
  function d($, it) {
    if (it && (T(it) == "object" || typeof it == "function")) return it;
    if (it !== void 0) throw new TypeError("Derived constructors may only return object or undefined");
    return f($);
  }
  function f($) {
    if ($ === void 0) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
    return $;
  }
  function p($, it) {
    if (typeof it != "function" && it !== null) throw new TypeError("Super expression must either be null or a function");
    $.prototype = Object.create(it && it.prototype, { constructor: { value: $, writable: true, configurable: true } }), Object.defineProperty($, "prototype", { writable: false }), it && c($, it);
  }
  function g($) {
    var it = typeof Map == "function" ? /* @__PURE__ */ new Map() : void 0;
    return g = function(Ot) {
      if (Ot === null || !m(Ot)) return Ot;
      if (typeof Ot != "function") throw new TypeError("Super expression must either be null or a function");
      if (it !== void 0) {
        if (it.has(Ot)) return it.get(Ot);
        it.set(Ot, bt);
      }
      function bt() {
        return b(Ot, arguments, w(this).constructor);
      }
      return bt.prototype = Object.create(Ot.prototype, { constructor: { value: bt, enumerable: false, writable: true, configurable: true } }), c(bt, Ot);
    }, g($);
  }
  function b($, it, mt) {
    if (h()) return Reflect.construct.apply(null, arguments);
    var Ot = [null];
    Ot.push.apply(Ot, it);
    var bt = new ($.bind.apply($, Ot))();
    return mt && c(bt, mt.prototype), bt;
  }
  function h() {
    try {
      var $ = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
      }));
    } catch {
    }
    return (h = function() {
      return !!$;
    })();
  }
  function m($) {
    try {
      return Function.toString.call($).indexOf("[native code]") !== -1;
    } catch {
      return typeof $ == "function";
    }
  }
  function c($, it) {
    return c = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function(mt, Ot) {
      return mt.__proto__ = Ot, mt;
    }, c($, it);
  }
  function w($) {
    return w = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function(it) {
      return it.__proto__ || Object.getPrototypeOf(it);
    }, w($);
  }
  function T($) {
    "@babel/helpers - typeof";
    return T = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(it) {
      return typeof it;
    } : function(it) {
      return it && typeof Symbol == "function" && it.constructor === Symbol && it !== Symbol.prototype ? "symbol" : typeof it;
    }, T($);
  }
  function P($, it) {
    var mt = Object.keys($);
    if (Object.getOwnPropertySymbols) {
      var Ot = Object.getOwnPropertySymbols($);
      it && (Ot = Ot.filter(function(bt) {
        return Object.getOwnPropertyDescriptor($, bt).enumerable;
      })), mt.push.apply(mt, Ot);
    }
    return mt;
  }
  function k($) {
    for (var it = 1; it < arguments.length; it++) {
      var mt = arguments[it] != null ? arguments[it] : {};
      it % 2 ? P(Object(mt), true).forEach(function(Ot) {
        nt($, Ot, mt[Ot]);
      }) : Object.getOwnPropertyDescriptors ? Object.defineProperties($, Object.getOwnPropertyDescriptors(mt)) : P(Object(mt)).forEach(function(Ot) {
        Object.defineProperty($, Ot, Object.getOwnPropertyDescriptor(mt, Ot));
      });
    }
    return $;
  }
  function R($) {
    if ($ != null) {
      var it = $[typeof Symbol == "function" && Symbol.iterator || "@@iterator"], mt = 0;
      if (it) return it.call($);
      if (typeof $.next == "function") return $;
      if (!isNaN($.length)) return { next: function() {
        return $ && mt >= $.length && ($ = void 0), { value: $ && $[mt++], done: !$ };
      } };
    }
    throw new TypeError(T($) + " is not iterable");
  }
  function F($, it) {
    return M($) || U($, it) || B($, it) || v();
  }
  function v() {
    throw new TypeError(`Invalid attempt to destructure non-iterable instance.
In order to be iterable, non-array objects must have a [Symbol.iterator]() method.`);
  }
  function U($, it) {
    var mt = $ == null ? null : typeof Symbol < "u" && $[Symbol.iterator] || $["@@iterator"];
    if (mt != null) {
      var Ot, bt, xt, Ct, Tt = [], Bt = true, At = false;
      try {
        if (xt = (mt = mt.call($)).next, it !== 0) for (; !(Bt = (Ot = xt.call(mt)).done) && (Tt.push(Ot.value), Tt.length !== it); Bt = true) ;
      } catch (Ut) {
        At = true, bt = Ut;
      } finally {
        try {
          if (!Bt && mt.return != null && (Ct = mt.return(), Object(Ct) !== Ct)) return;
        } finally {
          if (At) throw bt;
        }
      }
      return Tt;
    }
  }
  function M($) {
    if (Array.isArray($)) return $;
  }
  function Z($, it) {
    var mt = typeof Symbol < "u" && $[Symbol.iterator] || $["@@iterator"];
    if (!mt) {
      if (Array.isArray($) || (mt = B($)) || it) {
        mt && ($ = mt);
        var Ot = 0, bt = function() {
        };
        return { s: bt, n: function() {
          return Ot >= $.length ? { done: true } : { done: false, value: $[Ot++] };
        }, e: function(At) {
          throw At;
        }, f: bt };
      }
      throw new TypeError(`Invalid attempt to iterate non-iterable instance.
In order to be iterable, non-array objects must have a [Symbol.iterator]() method.`);
    }
    var xt, Ct = true, Tt = false;
    return { s: function() {
      mt = mt.call($);
    }, n: function() {
      var At = mt.next();
      return Ct = At.done, At;
    }, e: function(At) {
      Tt = true, xt = At;
    }, f: function() {
      try {
        Ct || mt.return == null || mt.return();
      } finally {
        if (Tt) throw xt;
      }
    } };
  }
  function D() {
    var $, it, mt = typeof Symbol == "function" ? Symbol : {}, Ot = mt.iterator || "@@iterator", bt = mt.toStringTag || "@@toStringTag";
    function xt(te, yt, Mt, O) {
      var z = yt && yt.prototype instanceof Tt ? yt : Tt, J = Object.create(z.prototype);
      return V(J, "_invoke", function(tt, H, K) {
        var q, _, L, et = 0, St = K || [], kt = false, ct = { p: 0, n: 0, v: $, a: j, f: j.bind($, 4), d: function(gt, $t) {
          return q = gt, _ = 0, L = $, ct.n = $t, Ct;
        } };
        function j(ut, gt) {
          for (_ = ut, L = gt, it = 0; !kt && et && !$t && it < St.length; it++) {
            var $t, Ht = St[it], wt = ct.p, Jt = Ht[2];
            ut > 3 ? ($t = Jt === gt) && (L = Ht[(_ = Ht[4]) ? 5 : (_ = 3, 3)], Ht[4] = Ht[5] = $) : Ht[0] <= wt && (($t = ut < 2 && wt < Ht[1]) ? (_ = 0, ct.v = gt, ct.n = Ht[1]) : wt < Jt && ($t = ut < 3 || Ht[0] > gt || gt > Jt) && (Ht[4] = ut, Ht[5] = gt, ct.n = Jt, _ = 0));
          }
          if ($t || ut > 1) return Ct;
          throw kt = true, gt;
        }
        return function(ut, gt, $t) {
          if (et > 1) throw TypeError("Generator is already running");
          for (kt && gt === 1 && j(gt, $t), _ = gt, L = $t; (it = _ < 2 ? $ : L) || !kt; ) {
            q || (_ ? _ < 3 ? (_ > 1 && (ct.n = -1), j(_, L)) : ct.n = L : ct.v = L);
            try {
              if (et = 2, q) {
                if (_ || (ut = "next"), it = q[ut]) {
                  if (!(it = it.call(q, L))) throw TypeError("iterator result is not an object");
                  if (!it.done) return it;
                  L = it.value, _ < 2 && (_ = 0);
                } else _ === 1 && (it = q.return) && it.call(q), _ < 2 && (L = TypeError("The iterator does not provide a '" + ut + "' method"), _ = 1);
                q = $;
              } else if ((it = (kt = ct.n < 0) ? L : tt.call(H, ct)) !== Ct) break;
            } catch (Ht) {
              q = $, _ = 1, L = Ht;
            } finally {
              et = 1;
            }
          }
          return { value: it, done: kt };
        };
      }(te, Mt, O), true), J;
    }
    var Ct = {};
    function Tt() {
    }
    function Bt() {
    }
    function At() {
    }
    it = Object.getPrototypeOf;
    var Ut = [][Ot] ? it(it([][Ot]())) : (V(it = {}, Ot, function() {
      return this;
    }), it), Vt = At.prototype = Tt.prototype = Object.create(Ut);
    function oe(te) {
      return Object.setPrototypeOf ? Object.setPrototypeOf(te, At) : (te.__proto__ = At, V(te, bt, "GeneratorFunction")), te.prototype = Object.create(Vt), te;
    }
    return Bt.prototype = At, V(Vt, "constructor", At), V(At, "constructor", Bt), Bt.displayName = "GeneratorFunction", V(At, bt, "GeneratorFunction"), V(Vt), V(Vt, bt, "Generator"), V(Vt, Ot, function() {
      return this;
    }), V(Vt, "toString", function() {
      return "[object Generator]";
    }), (D = function() {
      return { w: xt, m: oe };
    })();
  }
  function V($, it, mt, Ot) {
    var bt = Object.defineProperty;
    try {
      bt({}, "", {});
    } catch {
      bt = 0;
    }
    V = function(Ct, Tt, Bt, At) {
      if (Tt) bt ? bt(Ct, Tt, { value: Bt, enumerable: !At, configurable: !At, writable: !At }) : Ct[Tt] = Bt;
      else {
        let Vt = function(oe, te) {
          V(Ct, oe, function(yt) {
            return this._invoke(oe, te, yt);
          });
        };
        var Ut = Vt;
        Vt("next", 0), Vt("throw", 1), Vt("return", 2);
      }
    }, V($, it, mt, Ot);
  }
  function S($) {
    return lt($) || W($) || B($) || x();
  }
  function x() {
    throw new TypeError(`Invalid attempt to spread non-iterable instance.
In order to be iterable, non-array objects must have a [Symbol.iterator]() method.`);
  }
  function B($, it) {
    if ($) {
      if (typeof $ == "string") return pt($, it);
      var mt = {}.toString.call($).slice(8, -1);
      return mt === "Object" && $.constructor && (mt = $.constructor.name), mt === "Map" || mt === "Set" ? Array.from($) : mt === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(mt) ? pt($, it) : void 0;
    }
  }
  function W($) {
    if (typeof Symbol < "u" && $[Symbol.iterator] != null || $["@@iterator"] != null) return Array.from($);
  }
  function lt($) {
    if (Array.isArray($)) return pt($);
  }
  function pt($, it) {
    (it == null || it > $.length) && (it = $.length);
    for (var mt = 0, Ot = Array(it); mt < it; mt++) Ot[mt] = $[mt];
    return Ot;
  }
  function at($, it, mt, Ot, bt, xt, Ct) {
    try {
      var Tt = $[xt](Ct), Bt = Tt.value;
    } catch (At) {
      return void mt(At);
    }
    Tt.done ? it(Bt) : Promise.resolve(Bt).then(Ot, bt);
  }
  function rt($) {
    return function() {
      var it = this, mt = arguments;
      return new Promise(function(Ot, bt) {
        var xt = $.apply(it, mt);
        function Ct(Bt) {
          at(xt, Ot, bt, Ct, Tt, "next", Bt);
        }
        function Tt(Bt) {
          at(xt, Ot, bt, Ct, Tt, "throw", Bt);
        }
        Ct(void 0);
      });
    };
  }
  function ot($, it) {
    if (!($ instanceof it)) throw new TypeError("Cannot call a class as a function");
  }
  function X($, it) {
    for (var mt = 0; mt < it.length; mt++) {
      var Ot = it[mt];
      Ot.enumerable = Ot.enumerable || false, Ot.configurable = true, "value" in Ot && (Ot.writable = true), Object.defineProperty($, ft(Ot.key), Ot);
    }
  }
  function I($, it, mt) {
    return it && X($.prototype, it), mt && X($, mt), Object.defineProperty($, "prototype", { writable: false }), $;
  }
  function nt($, it, mt) {
    return (it = ft(it)) in $ ? Object.defineProperty($, it, { value: mt, enumerable: true, configurable: true, writable: true }) : $[it] = mt, $;
  }
  function ft($) {
    var it = dt($, "string");
    return T(it) == "symbol" ? it : it + "";
  }
  function dt($, it) {
    if (T($) != "object" || !$) return $;
    var mt = $[Symbol.toPrimitive];
    if (mt !== void 0) {
      var Ot = mt.call($, it);
      if (T(Ot) != "object") return Ot;
      throw new TypeError("@@toPrimitive must return a primitive value.");
    }
    return (it === "string" ? String : Number)($);
  }
  var Lt = pc.AssembledTransaction = function() {
    function $(it) {
      var mt = this, Ot, bt;
      ot(this, $), nt(this, "simulate", rt(D().m(function xt() {
        var Ct, Tt, Bt, At, Ut, Vt, oe, te, yt = arguments;
        return D().w(function(Mt) {
          for (; ; ) switch (Mt.n) {
            case 0:
              if (Ct = yt.length > 0 && yt[0] !== void 0 ? yt[0] : {}, Tt = Ct.restore, mt.built) {
                Mt.n = 2;
                break;
              }
              if (mt.raw) {
                Mt.n = 1;
                break;
              }
              throw new Error("Transaction has not yet been assembled; call `AssembledTransaction.build` first.");
            case 1:
              mt.built = mt.raw.build();
            case 2:
              return Tt = Tt ?? mt.options.restore, delete mt.simulationResult, delete mt.simulationTransactionData, Mt.n = 3, mt.server.simulateTransaction(mt.built);
            case 3:
              if (mt.simulation = Mt.v, !(Tt && e.Api.isSimulationRestore(mt.simulation))) {
                Mt.n = 8;
                break;
              }
              return Mt.n = 4, (0, l.getAccount)(mt.options, mt.server);
            case 4:
              return Bt = Mt.v, Mt.n = 5, mt.restoreFootprint(mt.simulation.restorePreamble, Bt);
            case 5:
              if (At = Mt.v, At.status !== e.Api.GetTransactionStatus.SUCCESS) {
                Mt.n = 7;
                break;
              }
              return te = new E.Contract(mt.options.contractId), mt.raw = new E.TransactionBuilder(Bt, { fee: (Ut = mt.options.fee) !== null && Ut !== void 0 ? Ut : E.BASE_FEE, networkPassphrase: mt.options.networkPassphrase }).addOperation(te.call.apply(te, [mt.options.method].concat(S((Vt = mt.options.args) !== null && Vt !== void 0 ? Vt : [])))).setTimeout((oe = mt.options.timeoutInSeconds) !== null && oe !== void 0 ? oe : s.DEFAULT_TIMEOUT), Mt.n = 6, mt.simulate();
            case 6:
              return Mt.a(2, mt);
            case 7:
              throw new $.Errors.RestorationFailure(`Automatic restore failed! You set 'restore: true' but the attempted restore did not work. Result:
`.concat(JSON.stringify(At)));
            case 8:
              return e.Api.isSimulationSuccess(mt.simulation) && (mt.built = (0, o.assembleTransaction)(mt.built, mt.simulation).build()), Mt.a(2, mt);
          }
        }, xt);
      }))), nt(this, "sign", rt(D().m(function xt() {
        var Ct, Tt, Bt, At, Ut, Vt, oe, te, yt, Mt, O, z, J = arguments;
        return D().w(function(tt) {
          for (; ; ) switch (tt.n) {
            case 0:
              if (Tt = J.length > 0 && J[0] !== void 0 ? J[0] : {}, Bt = Tt.force, At = Bt === void 0 ? false : Bt, Ut = Tt.signTransaction, Vt = Ut === void 0 ? mt.options.signTransaction : Ut, mt.built) {
                tt.n = 1;
                break;
              }
              throw new Error("Transaction has not yet been simulated");
            case 1:
              if (!(!At && mt.isReadCall)) {
                tt.n = 2;
                break;
              }
              throw new $.Errors.NoSignatureNeeded("This is a read call. It requires no signature or sending. Use `force: true` to sign and send anyway.");
            case 2:
              if (Vt) {
                tt.n = 3;
                break;
              }
              throw new $.Errors.NoSigner("You must provide a signTransaction function, either when calling `signAndSend` or when initializing your Client");
            case 3:
              if (oe = mt.needsNonInvokerSigningBy().filter(function(H) {
                return !H.startsWith("C");
              }), !oe.length) {
                tt.n = 4;
                break;
              }
              throw new $.Errors.NeedsMoreSignatures("Transaction requires signatures from ".concat(oe, ". ") + "See `needsNonInvokerSigningBy` for details.");
            case 4:
              return te = (Ct = mt.options.timeoutInSeconds) !== null && Ct !== void 0 ? Ct : s.DEFAULT_TIMEOUT, mt.built = E.TransactionBuilder.cloneFrom(mt.built, { fee: mt.built.fee, timebounds: void 0, sorobanData: mt.simulationData.transactionData }).setTimeout(te).build(), yt = { networkPassphrase: mt.options.networkPassphrase }, mt.options.address && (yt.address = mt.options.address), mt.options.submit !== void 0 && (yt.submit = mt.options.submit), mt.options.submitUrl && (yt.submitUrl = mt.options.submitUrl), tt.n = 5, Vt(mt.built.toXDR(), yt);
            case 5:
              Mt = tt.v, O = Mt.signedTxXdr, z = Mt.error, mt.handleWalletError(z), mt.signed = E.TransactionBuilder.fromXDR(O, mt.options.networkPassphrase);
            case 6:
              return tt.a(2);
          }
        }, xt);
      }))), nt(this, "signAndSend", rt(D().m(function xt() {
        var Ct, Tt, Bt, At, Ut, Vt, oe = arguments;
        return D().w(function(te) {
          for (; ; ) switch (te.p = te.n) {
            case 0:
              if (Ct = oe.length > 0 && oe[0] !== void 0 ? oe[0] : {}, Tt = Ct.force, Bt = Tt === void 0 ? false : Tt, At = Ct.signTransaction, Ut = At === void 0 ? mt.options.signTransaction : At, mt.signed) {
                te.n = 3;
                break;
              }
              return Vt = mt.options.submit, mt.options.submit && (mt.options.submit = false), te.p = 1, te.n = 2, mt.sign({ force: Bt, signTransaction: Ut });
            case 2:
              return te.p = 2, mt.options.submit = Vt, te.f(2);
            case 3:
              return te.a(2, mt.send());
          }
        }, xt, null, [[1, , 2, 3]]);
      }))), nt(this, "needsNonInvokerSigningBy", function() {
        var xt, Ct = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {}, Tt = Ct.includeAlreadySigned, Bt = Tt === void 0 ? false : Tt;
        if (!mt.built) throw new Error("Transaction has not yet been simulated");
        if (!("operations" in mt.built)) throw new Error("Unexpected Transaction type; no operations: ".concat(JSON.stringify(mt.built)));
        var At = mt.built.operations[0];
        return S(new Set(((xt = At.auth) !== null && xt !== void 0 ? xt : []).filter(function(Ut) {
          return Ut.credentials().switch() === E.xdr.SorobanCredentialsType.sorobanCredentialsAddress() && (Bt || Ut.credentials().address().signature().switch().name === "scvVoid");
        }).map(function(Ut) {
          return E.Address.fromScAddress(Ut.credentials().address().address()).toString();
        })));
      }), nt(this, "signAuthEntries", rt(D().m(function xt() {
        var Ct, Tt, Bt, At, Ut, Vt, oe, te, yt, Mt, O, z, J, tt, H, K, q, _ = arguments, L;
        return D().w(function(et) {
          for (; ; ) switch (et.p = et.n) {
            case 0:
              if (Tt = _.length > 0 && _[0] !== void 0 ? _[0] : {}, Bt = Tt.expiration, At = Bt === void 0 ? rt(D().m(function St() {
                var kt;
                return D().w(function(ct) {
                  for (; ; ) switch (ct.n) {
                    case 0:
                      return ct.n = 1, mt.server.getLatestLedger();
                    case 1:
                      return kt = ct.v.sequence, ct.a(2, kt + 100);
                  }
                }, St);
              }))() : Bt, Ut = Tt.signAuthEntry, Vt = Ut === void 0 ? mt.options.signAuthEntry : Ut, oe = Tt.address, te = oe === void 0 ? mt.options.publicKey : oe, yt = Tt.authorizeEntry, Mt = yt === void 0 ? E.authorizeEntry : yt, mt.built) {
                et.n = 1;
                break;
              }
              throw new Error("Transaction has not yet been assembled or simulated");
            case 1:
              if (Mt !== E.authorizeEntry) {
                et.n = 4;
                break;
              }
              if (O = mt.needsNonInvokerSigningBy(), O.length !== 0) {
                et.n = 2;
                break;
              }
              throw new $.Errors.NoUnsignedNonInvokerAuthEntries("No unsigned non-invoker auth entries; maybe you already signed?");
            case 2:
              if (O.indexOf(te ?? "") !== -1) {
                et.n = 3;
                break;
              }
              throw new $.Errors.NoSignatureNeeded('No auth entries for public key "'.concat(te, '"'));
            case 3:
              if (Vt) {
                et.n = 4;
                break;
              }
              throw new $.Errors.NoSigner("You must provide `signAuthEntry` or a custom `authorizeEntry`");
            case 4:
              z = mt.built.operations[0], J = (Ct = z.auth) !== null && Ct !== void 0 ? Ct : [], tt = Z(J.entries()), et.p = 5, K = D().m(function St() {
                var kt, ct, j, ut, gt, $t, Ht, wt, Jt, Ee, cr;
                return D().w(function(Lr) {
                  for (; ; ) switch (Lr.n) {
                    case 0:
                      if (kt = F(H.value, 2), ct = kt[0], j = kt[1], ut = E.xdr.SorobanCredentials.fromXDR(j.credentials().toXDR()), ut.switch() === E.xdr.SorobanCredentialsType.sorobanCredentialsAddress()) {
                        Lr.n = 1;
                        break;
                      }
                      return Lr.a(2, 0);
                    case 1:
                      if (gt = E.Address.fromScAddress(ut.address().address()).toString(), gt === te) {
                        Lr.n = 2;
                        break;
                      }
                      return Lr.a(2, 0);
                    case 2:
                      return $t = Vt ?? Promise.resolve, Ht = Mt, wt = j, Jt = function() {
                        var on = rt(D().m(function Zr(to) {
                          var qn, jn, eo;
                          return D().w(function(no) {
                            for (; ; ) switch (no.n) {
                              case 0:
                                return no.n = 1, $t(to.toXDR("base64"), { address: te });
                              case 1:
                                return qn = no.v, jn = qn.signedAuthEntry, eo = qn.error, mt.handleWalletError(eo), no.a(2, Buffer.from(jn, "base64"));
                            }
                          }, Zr);
                        }));
                        return function(Zr) {
                          return on.apply(this, arguments);
                        };
                      }(), Lr.n = 3, At;
                    case 3:
                      return Ee = Lr.v, cr = mt.options.networkPassphrase, Lr.n = 4, Ht(wt, Jt, Ee, cr);
                    case 4:
                      J[ct] = Lr.v;
                    case 5:
                      return Lr.a(2);
                  }
                }, St);
              }), tt.s();
            case 6:
              if ((H = tt.n()).done) {
                et.n = 9;
                break;
              }
              return et.d(R(K()), 7);
            case 7:
              if (q = et.v, q !== 0) {
                et.n = 8;
                break;
              }
              return et.a(3, 8);
            case 8:
              et.n = 6;
              break;
            case 9:
              et.n = 11;
              break;
            case 10:
              et.p = 10, L = et.v, tt.e(L);
            case 11:
              return et.p = 11, tt.f(), et.f(11);
            case 12:
              return et.a(2);
          }
        }, xt, null, [[5, 10, 11, 12]]);
      }))), this.options = it, this.options.simulate = (Ot = this.options.simulate) !== null && Ot !== void 0 ? Ot : true, this.server = new t.Server(this.options.rpcUrl, { allowHttp: (bt = this.options.allowHttp) !== null && bt !== void 0 ? bt : false });
    }
    return I($, [{ key: "toJSON", value: function() {
      var mt;
      return JSON.stringify({ method: this.options.method, tx: (mt = this.built) === null || mt === void 0 ? void 0 : mt.toXDR(), simulationResult: { auth: this.simulationData.result.auth.map(function(Ot) {
        return Ot.toXDR("base64");
      }), retval: this.simulationData.result.retval.toXDR("base64") }, simulationTransactionData: this.simulationData.transactionData.toXDR("base64") });
    } }, { key: "toXDR", value: function() {
      var mt;
      if (!this.built) throw new Error("Transaction has not yet been simulated; call `AssembledTransaction.simulate` first.");
      return (mt = this.built) === null || mt === void 0 ? void 0 : mt.toEnvelope().toXDR("base64");
    } }, { key: "handleWalletError", value: function(mt) {
      if (mt) {
        var Ot = mt.message, bt = mt.code, xt = "".concat(Ot).concat(mt.ext ? " (".concat(mt.ext.join(", "), ")") : "");
        switch (bt) {
          case -1:
            throw new $.Errors.InternalWalletError(xt);
          case -2:
            throw new $.Errors.ExternalServiceError(xt);
          case -3:
            throw new $.Errors.InvalidClientRequest(xt);
          case -4:
            throw new $.Errors.UserRejected(xt);
          default:
            throw new Error("Unhandled error: ".concat(xt));
        }
      }
    } }, { key: "simulationData", get: function() {
      var mt;
      if (this.simulationResult && this.simulationTransactionData) return { result: this.simulationResult, transactionData: this.simulationTransactionData };
      var Ot = this.simulation;
      if (!Ot) throw new $.Errors.NotYetSimulated("Transaction has not yet been simulated");
      if (e.Api.isSimulationError(Ot)) throw new $.Errors.SimulationFailed('Transaction simulation failed: "'.concat(Ot.error, '"'));
      if (e.Api.isSimulationRestore(Ot)) throw new $.Errors.ExpiredState("You need to restore some contract state before you can invoke this method.\nYou can set `restore` to true in the method options in order to automatically restore the contract state when needed.");
      return this.simulationResult = (mt = Ot.result) !== null && mt !== void 0 ? mt : { auth: [], retval: E.xdr.ScVal.scvVoid() }, this.simulationTransactionData = Ot.transactionData.build(), { result: this.simulationResult, transactionData: this.simulationTransactionData };
    } }, { key: "result", get: function() {
      try {
        if (!this.simulationData.result) throw new Error("No simulation result!");
        return this.options.parseResultXdr(this.simulationData.result.retval);
      } catch (Ot) {
        if (!(0, l.implementsToString)(Ot)) throw Ot;
        var mt = this.parseError(Ot.toString());
        if (mt) return mt;
        throw Ot;
      }
    } }, { key: "parseError", value: function(mt) {
      if (this.options.errorTypes) {
        var Ot = mt.match(l.contractErrorPattern);
        if (Ot) {
          var bt = parseInt(Ot[1], 10), xt = this.options.errorTypes[bt];
          if (xt) return new a.Err(xt);
        }
      }
    } }, { key: "send", value: function() {
      var it = rt(D().m(function Ot() {
        var bt;
        return D().w(function(xt) {
          for (; ; ) switch (xt.n) {
            case 0:
              if (this.signed) {
                xt.n = 1;
                break;
              }
              throw new Error("The transaction has not yet been signed. Run `sign` first, or use `signAndSend` instead.");
            case 1:
              return xt.n = 2, i.SentTransaction.init(this);
            case 2:
              return bt = xt.v, xt.a(2, bt);
          }
        }, Ot, this);
      }));
      function mt() {
        return it.apply(this, arguments);
      }
      return mt;
    }() }, { key: "isReadCall", get: function() {
      var mt = this.simulationData.result.auth.length, Ot = this.simulationData.transactionData.resources().footprint().readWrite().length;
      return mt === 0 && Ot === 0;
    } }, { key: "restoreFootprint", value: function() {
      var it = rt(D().m(function Ot(bt, xt) {
        var Ct, Tt, Bt;
        return D().w(function(At) {
          for (; ; ) switch (At.n) {
            case 0:
              if (this.options.signTransaction) {
                At.n = 1;
                break;
              }
              throw new Error("For automatic restore to work you must provide a signTransaction function when initializing your Client");
            case 1:
              if (xt == null) {
                At.n = 2;
                break;
              }
              Bt = xt, At.n = 4;
              break;
            case 2:
              return At.n = 3, (0, l.getAccount)(this.options, this.server);
            case 3:
              Bt = At.v;
            case 4:
              return xt = Bt, At.n = 5, $.buildFootprintRestoreTransaction(k({}, this.options), bt.transactionData, xt, bt.minResourceFee);
            case 5:
              return Ct = At.v, At.n = 6, Ct.signAndSend();
            case 6:
              if (Tt = At.v, Tt.getTransactionResponse) {
                At.n = 7;
                break;
              }
              throw new $.Errors.RestorationFailure(`The attempt at automatic restore failed. 
`.concat(JSON.stringify(Tt)));
            case 7:
              return At.a(2, Tt.getTransactionResponse);
          }
        }, Ot, this);
      }));
      function mt(Ot, bt) {
        return it.apply(this, arguments);
      }
      return mt;
    }() }], [{ key: "fromJSON", value: function(mt, Ot) {
      var bt = Ot.tx, xt = Ot.simulationResult, Ct = Ot.simulationTransactionData, Tt = new $(mt);
      return Tt.built = E.TransactionBuilder.fromXDR(bt, mt.networkPassphrase), Tt.simulationResult = { auth: xt.auth.map(function(Bt) {
        return E.xdr.SorobanAuthorizationEntry.fromXDR(Bt, "base64");
      }), retval: E.xdr.ScVal.fromXDR(xt.retval, "base64") }, Tt.simulationTransactionData = E.xdr.SorobanTransactionData.fromXDR(Ct, "base64"), Tt;
    } }, { key: "fromXDR", value: function(mt, Ot, bt) {
      var xt, Ct = E.xdr.TransactionEnvelope.fromXDR(Ot, "base64"), Tt = E.TransactionBuilder.fromXDR(Ct, mt.networkPassphrase), Bt = Tt.operations[0];
      if (!(Bt != null && (xt = Bt.func) !== null && xt !== void 0 && xt.value) || typeof Bt.func.value != "function") throw new Error("Could not extract the method from the transaction envelope.");
      var At = Bt.func.value();
      if (!(At != null && At.functionName)) throw new Error("Could not extract the method name from the transaction envelope.");
      var Ut = At.functionName().toString("utf-8"), Vt = new $(k(k({}, mt), {}, { method: Ut, parseResultXdr: function(te) {
        return bt.funcResToNative(Ut, te);
      } }));
      return Vt.built = Tt, Vt;
    } }, { key: "build", value: function(mt) {
      var Ot, bt = new E.Contract(mt.contractId);
      return $.buildWithOp(bt.call.apply(bt, [mt.method].concat(S((Ot = mt.args) !== null && Ot !== void 0 ? Ot : []))), mt);
    } }, { key: "buildWithOp", value: function() {
      var it = rt(D().m(function Ot(bt, xt) {
        var Ct, Tt, Bt, At;
        return D().w(function(Ut) {
          for (; ; ) switch (Ut.n) {
            case 0:
              return Bt = new $(xt), Ut.n = 1, (0, l.getAccount)(xt, Bt.server);
            case 1:
              if (At = Ut.v, Bt.raw = new E.TransactionBuilder(At, { fee: (Ct = xt.fee) !== null && Ct !== void 0 ? Ct : E.BASE_FEE, networkPassphrase: xt.networkPassphrase }).setTimeout((Tt = xt.timeoutInSeconds) !== null && Tt !== void 0 ? Tt : s.DEFAULT_TIMEOUT).addOperation(bt), !xt.simulate) {
                Ut.n = 2;
                break;
              }
              return Ut.n = 2, Bt.simulate();
            case 2:
              return Ut.a(2, Bt);
          }
        }, Ot);
      }));
      function mt(Ot, bt) {
        return it.apply(this, arguments);
      }
      return mt;
    }() }, { key: "buildFootprintRestoreTransaction", value: function() {
      var it = rt(D().m(function Ot(bt, xt, Ct, Tt) {
        var Bt, At;
        return D().w(function(Ut) {
          for (; ; ) switch (Ut.n) {
            case 0:
              return At = new $(bt), At.raw = new E.TransactionBuilder(Ct, { fee: Tt, networkPassphrase: bt.networkPassphrase }).setSorobanData(xt instanceof E.SorobanDataBuilder ? xt.build() : xt).addOperation(E.Operation.restoreFootprint({})).setTimeout((Bt = bt.timeoutInSeconds) !== null && Bt !== void 0 ? Bt : s.DEFAULT_TIMEOUT), Ut.n = 1, At.simulate({ restore: false });
            case 1:
              return Ut.a(2, At);
          }
        }, Ot);
      }));
      function mt(Ot, bt, xt, Ct) {
        return it.apply(this, arguments);
      }
      return mt;
    }() }]);
  }();
  return nt(Lt, "Errors", { ExpiredState: function($) {
    function it() {
      return ot(this, it), u(this, it, arguments);
    }
    return p(it, $), I(it);
  }(g(Error)), RestorationFailure: function($) {
    function it() {
      return ot(this, it), u(this, it, arguments);
    }
    return p(it, $), I(it);
  }(g(Error)), NeedsMoreSignatures: function($) {
    function it() {
      return ot(this, it), u(this, it, arguments);
    }
    return p(it, $), I(it);
  }(g(Error)), NoSignatureNeeded: function($) {
    function it() {
      return ot(this, it), u(this, it, arguments);
    }
    return p(it, $), I(it);
  }(g(Error)), NoUnsignedNonInvokerAuthEntries: function($) {
    function it() {
      return ot(this, it), u(this, it, arguments);
    }
    return p(it, $), I(it);
  }(g(Error)), NoSigner: function($) {
    function it() {
      return ot(this, it), u(this, it, arguments);
    }
    return p(it, $), I(it);
  }(g(Error)), NotYetSimulated: function($) {
    function it() {
      return ot(this, it), u(this, it, arguments);
    }
    return p(it, $), I(it);
  }(g(Error)), FakeAccount: function($) {
    function it() {
      return ot(this, it), u(this, it, arguments);
    }
    return p(it, $), I(it);
  }(g(Error)), SimulationFailed: function($) {
    function it() {
      return ot(this, it), u(this, it, arguments);
    }
    return p(it, $), I(it);
  }(g(Error)), InternalWalletError: function($) {
    function it() {
      return ot(this, it), u(this, it, arguments);
    }
    return p(it, $), I(it);
  }(g(Error)), ExternalServiceError: function($) {
    function it() {
      return ot(this, it), u(this, it, arguments);
    }
    return p(it, $), I(it);
  }(g(Error)), InvalidClientRequest: function($) {
    function it() {
      return ot(this, it), u(this, it, arguments);
    }
    return p(it, $), I(it);
  }(g(Error)), UserRejected: function($) {
    function it() {
      return ot(this, it), u(this, it, arguments);
    }
    return p(it, $), I(it);
  }(g(Error)) }), pc;
}
var dc = {}, fd;
function BS() {
  if (fd) return dc;
  fd = 1, Object.defineProperty(dc, "__esModule", { value: true }), dc.basicNodeSigner = void 0;
  var E = ps();
  function t() {
    var l, s, i = typeof Symbol == "function" ? Symbol : {}, u = i.iterator || "@@iterator", d = i.toStringTag || "@@toStringTag";
    function f(T, P, k, R) {
      var F = P && P.prototype instanceof g ? P : g, v = Object.create(F.prototype);
      return e(v, "_invoke", function(U, M, Z) {
        var D, V, S, x = 0, B = Z || [], W = false, lt = { p: 0, n: 0, v: l, a: pt, f: pt.bind(l, 4), d: function(rt, ot) {
          return D = rt, V = 0, S = l, lt.n = ot, p;
        } };
        function pt(at, rt) {
          for (V = at, S = rt, s = 0; !W && x && !ot && s < B.length; s++) {
            var ot, X = B[s], I = lt.p, nt = X[2];
            at > 3 ? (ot = nt === rt) && (S = X[(V = X[4]) ? 5 : (V = 3, 3)], X[4] = X[5] = l) : X[0] <= I && ((ot = at < 2 && I < X[1]) ? (V = 0, lt.v = rt, lt.n = X[1]) : I < nt && (ot = at < 3 || X[0] > rt || rt > nt) && (X[4] = at, X[5] = rt, lt.n = nt, V = 0));
          }
          if (ot || at > 1) return p;
          throw W = true, rt;
        }
        return function(at, rt, ot) {
          if (x > 1) throw TypeError("Generator is already running");
          for (W && rt === 1 && pt(rt, ot), V = rt, S = ot; (s = V < 2 ? l : S) || !W; ) {
            D || (V ? V < 3 ? (V > 1 && (lt.n = -1), pt(V, S)) : lt.n = S : lt.v = S);
            try {
              if (x = 2, D) {
                if (V || (at = "next"), s = D[at]) {
                  if (!(s = s.call(D, S))) throw TypeError("iterator result is not an object");
                  if (!s.done) return s;
                  S = s.value, V < 2 && (V = 0);
                } else V === 1 && (s = D.return) && s.call(D), V < 2 && (S = TypeError("The iterator does not provide a '" + at + "' method"), V = 1);
                D = l;
              } else if ((s = (W = lt.n < 0) ? S : U.call(M, lt)) !== p) break;
            } catch (X) {
              D = l, V = 1, S = X;
            } finally {
              x = 1;
            }
          }
          return { value: s, done: W };
        };
      }(T, k, R), true), v;
    }
    var p = {};
    function g() {
    }
    function b() {
    }
    function h() {
    }
    s = Object.getPrototypeOf;
    var m = [][u] ? s(s([][u]())) : (e(s = {}, u, function() {
      return this;
    }), s), c = h.prototype = g.prototype = Object.create(m);
    function w(T) {
      return Object.setPrototypeOf ? Object.setPrototypeOf(T, h) : (T.__proto__ = h, e(T, d, "GeneratorFunction")), T.prototype = Object.create(c), T;
    }
    return b.prototype = h, e(c, "constructor", h), e(h, "constructor", b), b.displayName = "GeneratorFunction", e(h, d, "GeneratorFunction"), e(c), e(c, d, "Generator"), e(c, u, function() {
      return this;
    }), e(c, "toString", function() {
      return "[object Generator]";
    }), (t = function() {
      return { w: f, m: w };
    })();
  }
  function e(l, s, i, u) {
    var d = Object.defineProperty;
    try {
      d({}, "", {});
    } catch {
      d = 0;
    }
    e = function(p, g, b, h) {
      if (g) d ? d(p, g, { value: b, enumerable: !h, configurable: !h, writable: !h }) : p[g] = b;
      else {
        let c = function(w, T) {
          e(p, w, function(P) {
            return this._invoke(w, T, P);
          });
        };
        var m = c;
        c("next", 0), c("throw", 1), c("return", 2);
      }
    }, e(l, s, i, u);
  }
  function o(l, s, i, u, d, f, p) {
    try {
      var g = l[f](p), b = g.value;
    } catch (h) {
      return void i(h);
    }
    g.done ? s(b) : Promise.resolve(b).then(u, d);
  }
  function a(l) {
    return function() {
      var s = this, i = arguments;
      return new Promise(function(u, d) {
        var f = l.apply(s, i);
        function p(b) {
          o(f, u, d, p, g, "next", b);
        }
        function g(b) {
          o(f, u, d, p, g, "throw", b);
        }
        p(void 0);
      });
    };
  }
  return dc.basicNodeSigner = function(s, i) {
    return { signTransaction: function() {
      var u = a(t().m(function f(p, g) {
        var b;
        return t().w(function(h) {
          for (; ; ) switch (h.n) {
            case 0:
              return b = E.TransactionBuilder.fromXDR(p, (g == null ? void 0 : g.networkPassphrase) || i), b.sign(s), h.a(2, { signedTxXdr: b.toXDR(), signerAddress: s.publicKey() });
          }
        }, f);
      }));
      function d(f, p) {
        return u.apply(this, arguments);
      }
      return d;
    }(), signAuthEntry: function() {
      var u = a(t().m(function f(p) {
        var g;
        return t().w(function(b) {
          for (; ; ) switch (b.n) {
            case 0:
              return g = s.sign((0, E.hash)(Buffer.from(p, "base64"))).toString("base64"), b.a(2, { signedAuthEntry: g, signerAddress: s.publicKey() });
          }
        }, f);
      }));
      function d(f) {
        return u.apply(this, arguments);
      }
      return d;
    }() };
  }, dc;
}
var mc = {}, yc = {}, pd;
function nm() {
  if (pd) return yc;
  pd = 1, Object.defineProperty(yc, "__esModule", { value: true }), yc.Spec = void 0;
  var E = ps(), t = wp();
  function e(S, x) {
    var B = Object.keys(S);
    if (Object.getOwnPropertySymbols) {
      var W = Object.getOwnPropertySymbols(S);
      x && (W = W.filter(function(lt) {
        return Object.getOwnPropertyDescriptor(S, lt).enumerable;
      })), B.push.apply(B, W);
    }
    return B;
  }
  function o(S) {
    for (var x = 1; x < arguments.length; x++) {
      var B = arguments[x] != null ? arguments[x] : {};
      x % 2 ? e(Object(B), true).forEach(function(W) {
        u(S, W, B[W]);
      }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(S, Object.getOwnPropertyDescriptors(B)) : e(Object(B)).forEach(function(W) {
        Object.defineProperty(S, W, Object.getOwnPropertyDescriptor(B, W));
      });
    }
    return S;
  }
  function a(S) {
    "@babel/helpers - typeof";
    return a = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(x) {
      return typeof x;
    } : function(x) {
      return x && typeof Symbol == "function" && x.constructor === Symbol && x !== Symbol.prototype ? "symbol" : typeof x;
    }, a(S);
  }
  function l(S, x) {
    if (!(S instanceof x)) throw new TypeError("Cannot call a class as a function");
  }
  function s(S, x) {
    for (var B = 0; B < x.length; B++) {
      var W = x[B];
      W.enumerable = W.enumerable || false, W.configurable = true, "value" in W && (W.writable = true), Object.defineProperty(S, d(W.key), W);
    }
  }
  function i(S, x, B) {
    return x && s(S.prototype, x), Object.defineProperty(S, "prototype", { writable: false }), S;
  }
  function u(S, x, B) {
    return (x = d(x)) in S ? Object.defineProperty(S, x, { value: B, enumerable: true, configurable: true, writable: true }) : S[x] = B, S;
  }
  function d(S) {
    var x = f(S, "string");
    return a(x) == "symbol" ? x : x + "";
  }
  function f(S, x) {
    if (a(S) != "object" || !S) return S;
    var B = S[Symbol.toPrimitive];
    if (B !== void 0) {
      var W = B.call(S, x);
      if (a(W) != "object") return W;
      throw new TypeError("@@toPrimitive must return a primitive value.");
    }
    return String(S);
  }
  function p(S, x) {
    return c(S) || m(S, x) || b(S, x) || g();
  }
  function g() {
    throw new TypeError(`Invalid attempt to destructure non-iterable instance.
In order to be iterable, non-array objects must have a [Symbol.iterator]() method.`);
  }
  function b(S, x) {
    if (S) {
      if (typeof S == "string") return h(S, x);
      var B = {}.toString.call(S).slice(8, -1);
      return B === "Object" && S.constructor && (B = S.constructor.name), B === "Map" || B === "Set" ? Array.from(S) : B === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(B) ? h(S, x) : void 0;
    }
  }
  function h(S, x) {
    (x == null || x > S.length) && (x = S.length);
    for (var B = 0, W = Array(x); B < x; B++) W[B] = S[B];
    return W;
  }
  function m(S, x) {
    var B = S == null ? null : typeof Symbol < "u" && S[Symbol.iterator] || S["@@iterator"];
    if (B != null) {
      var W, lt, pt, at, rt = [], ot = true, X = false;
      try {
        if (pt = (B = B.call(S)).next, x === 0) {
          if (Object(B) !== B) return;
          ot = false;
        } else for (; !(ot = (W = pt.call(B)).done) && (rt.push(W.value), rt.length !== x); ot = true) ;
      } catch (I) {
        X = true, lt = I;
      } finally {
        try {
          if (!ot && B.return != null && (at = B.return(), Object(at) !== at)) return;
        } finally {
          if (X) throw lt;
        }
      }
      return rt;
    }
  }
  function c(S) {
    if (Array.isArray(S)) return S;
  }
  function w(S) {
    var x = S.doc().toString(), B = S.cases(), W = [];
    B.forEach(function(pt) {
      var at = pt.name().toString(), rt = pt.doc().toString();
      W.push({ description: rt, title: at, enum: [pt.value()], type: "number" });
    });
    var lt = { oneOf: W };
    return x.length > 0 && (lt.description = x), lt;
  }
  function T(S) {
    return /^\d+$/.test(S.name().toString());
  }
  function P(S, x) {
    var B = x.name().toString(), W = Object.entries(S).find(function(lt) {
      var pt = p(lt, 1), at = pt[0];
      return at === B;
    });
    if (!W) throw new Error("Missing field ".concat(B));
    return W[1];
  }
  function k(S) {
    return function(B) {
      switch (B.switch().value) {
        case E.xdr.ScSpecUdtUnionCaseV0Kind.scSpecUdtUnionCaseTupleV0().value: {
          var W = B.tupleCase();
          return W.name().toString() === S;
        }
        case E.xdr.ScSpecUdtUnionCaseV0Kind.scSpecUdtUnionCaseVoidV0().value: {
          var lt = B.voidCase();
          return lt.name().toString() === S;
        }
        default:
          return false;
      }
    };
  }
  function R(S, x) {
    switch (x.value) {
      case E.xdr.ScSpecType.scSpecTypeString().value:
        return E.xdr.ScVal.scvString(S);
      case E.xdr.ScSpecType.scSpecTypeSymbol().value:
        return E.xdr.ScVal.scvSymbol(S);
      case E.xdr.ScSpecType.scSpecTypeAddress().value: {
        var B = E.Address.fromString(S);
        return E.xdr.ScVal.scvAddress(B.toScAddress());
      }
      case E.xdr.ScSpecType.scSpecTypeU64().value:
        return new E.XdrLargeInt("u64", S).toScVal();
      case E.xdr.ScSpecType.scSpecTypeI64().value:
        return new E.XdrLargeInt("i64", S).toScVal();
      case E.xdr.ScSpecType.scSpecTypeU128().value:
        return new E.XdrLargeInt("u128", S).toScVal();
      case E.xdr.ScSpecType.scSpecTypeI128().value:
        return new E.XdrLargeInt("i128", S).toScVal();
      case E.xdr.ScSpecType.scSpecTypeU256().value:
        return new E.XdrLargeInt("u256", S).toScVal();
      case E.xdr.ScSpecType.scSpecTypeI256().value:
        return new E.XdrLargeInt("i256", S).toScVal();
      case E.xdr.ScSpecType.scSpecTypeBytes().value:
      case E.xdr.ScSpecType.scSpecTypeBytesN().value:
        return E.xdr.ScVal.scvBytes(Buffer.from(S, "base64"));
      default:
        throw new TypeError("invalid type ".concat(x.name, " specified for string value"));
    }
  }
  var F = { U32: { type: "integer", minimum: 0, maximum: 4294967295 }, I32: { type: "integer", minimum: -2147483648, maximum: 2147483647 }, U64: { type: "string", pattern: "^([1-9][0-9]*|0)$", minLength: 1, maxLength: 20 }, I64: { type: "string", pattern: "^(-?[1-9][0-9]*|0)$", minLength: 1, maxLength: 21 }, U128: { type: "string", pattern: "^([1-9][0-9]*|0)$", minLength: 1, maxLength: 39 }, I128: { type: "string", pattern: "^(-?[1-9][0-9]*|0)$", minLength: 1, maxLength: 40 }, U256: { type: "string", pattern: "^([1-9][0-9]*|0)$", minLength: 1, maxLength: 78 }, I256: { type: "string", pattern: "^(-?[1-9][0-9]*|0)$", minLength: 1, maxLength: 79 }, Address: { type: "string", format: "address", description: "Address can be a public key or contract id" }, ScString: { type: "string", description: "ScString is a string" }, ScSymbol: { type: "string", description: "ScSymbol is a string" }, DataUrl: { type: "string", pattern: "^(?:[A-Za-z0-9+\\/]{4})*(?:[A-Za-z0-9+\\/]{2}==|[A-Za-z0-9+\\/]{3}=)?$" } };
  function v(S) {
    var x = S.switch(), B = x.value, W;
    switch (B) {
      case E.xdr.ScSpecType.scSpecTypeVal().value: {
        W = "Val";
        break;
      }
      case E.xdr.ScSpecType.scSpecTypeBool().value:
        return { type: "boolean" };
      case E.xdr.ScSpecType.scSpecTypeVoid().value:
        return { type: "null" };
      case E.xdr.ScSpecType.scSpecTypeError().value: {
        W = "Error";
        break;
      }
      case E.xdr.ScSpecType.scSpecTypeU32().value: {
        W = "U32";
        break;
      }
      case E.xdr.ScSpecType.scSpecTypeI32().value: {
        W = "I32";
        break;
      }
      case E.xdr.ScSpecType.scSpecTypeU64().value: {
        W = "U64";
        break;
      }
      case E.xdr.ScSpecType.scSpecTypeI64().value: {
        W = "I64";
        break;
      }
      case E.xdr.ScSpecType.scSpecTypeTimepoint().value:
        throw new Error("Timepoint type not supported");
      case E.xdr.ScSpecType.scSpecTypeDuration().value:
        throw new Error("Duration not supported");
      case E.xdr.ScSpecType.scSpecTypeU128().value: {
        W = "U128";
        break;
      }
      case E.xdr.ScSpecType.scSpecTypeI128().value: {
        W = "I128";
        break;
      }
      case E.xdr.ScSpecType.scSpecTypeU256().value: {
        W = "U256";
        break;
      }
      case E.xdr.ScSpecType.scSpecTypeI256().value: {
        W = "I256";
        break;
      }
      case E.xdr.ScSpecType.scSpecTypeBytes().value: {
        W = "DataUrl";
        break;
      }
      case E.xdr.ScSpecType.scSpecTypeString().value: {
        W = "ScString";
        break;
      }
      case E.xdr.ScSpecType.scSpecTypeSymbol().value: {
        W = "ScSymbol";
        break;
      }
      case E.xdr.ScSpecType.scSpecTypeAddress().value: {
        W = "Address";
        break;
      }
      case E.xdr.ScSpecType.scSpecTypeOption().value: {
        var lt = S.option();
        return v(lt.valueType());
      }
      case E.xdr.ScSpecType.scSpecTypeResult().value:
        break;
      case E.xdr.ScSpecType.scSpecTypeVec().value: {
        var pt = S.vec(), at = v(pt.elementType());
        return { type: "array", items: at };
      }
      case E.xdr.ScSpecType.scSpecTypeMap().value: {
        var rt = S.map(), ot = [v(rt.keyType()), v(rt.valueType())];
        return { type: "array", items: { type: "array", items: ot, minItems: 2, maxItems: 2 } };
      }
      case E.xdr.ScSpecType.scSpecTypeTuple().value: {
        var X = S.tuple(), I = X.valueTypes().length, nt = I, ft = X.valueTypes().map(v);
        return { type: "array", items: ft, minItems: I, maxItems: nt };
      }
      case E.xdr.ScSpecType.scSpecTypeBytesN().value: {
        var dt = S.bytesN();
        return { $ref: "#/definitions/DataUrl", maxLength: dt.n() };
      }
      case E.xdr.ScSpecType.scSpecTypeUdt().value: {
        var Lt = S.udt();
        W = Lt.name().toString();
        break;
      }
    }
    return { $ref: "#/definitions/".concat(W) };
  }
  function U(S) {
    return S.switch().value !== E.xdr.ScSpecType.scSpecTypeOption().value;
  }
  function M(S) {
    var x = {}, B = [];
    S.forEach(function(lt) {
      var pt = lt.type(), at = lt.name().toString();
      x[at] = v(pt), U(pt) && B.push(at);
    });
    var W = { properties: x };
    return B.length > 0 && (W.required = B), W;
  }
  function Z(S) {
    var x = S.fields();
    if (x.some(T)) {
      if (!x.every(T)) throw new Error("mixed numeric and non-numeric field names are not allowed");
      var B = x.map(function(rt, ot) {
        return v(x[ot].type());
      });
      return { type: "array", items: B, minItems: x.length, maxItems: x.length };
    }
    var W = S.doc().toString(), lt = M(x), pt = lt.properties, at = lt.required;
    return pt.additionalProperties = false, { description: W, properties: pt, required: at, type: "object" };
  }
  function D(S) {
    var x = M(S.inputs()), B = x.properties, W = x.required, lt = { additionalProperties: false, properties: B, type: "object" };
    (W == null ? void 0 : W.length) > 0 && (lt.required = W);
    var pt = { properties: { args: lt } }, at = S.outputs(), rt = at.length > 0 ? v(at[0]) : v(E.xdr.ScSpecTypeDef.scSpecTypeVoid()), ot = S.doc().toString();
    return ot.length > 0 && (pt.description = ot), pt.additionalProperties = false, rt.additionalProperties = false, { input: pt, output: rt };
  }
  function V(S) {
    var x = S.doc().toString(), B = S.cases(), W = [];
    B.forEach(function(pt) {
      switch (pt.switch().value) {
        case E.xdr.ScSpecUdtUnionCaseV0Kind.scSpecUdtUnionCaseVoidV0().value: {
          var at = pt.voidCase(), rt = at.name().toString();
          W.push({ type: "object", title: rt, properties: { tag: rt }, additionalProperties: false, required: ["tag"] });
          break;
        }
        case E.xdr.ScSpecUdtUnionCaseV0Kind.scSpecUdtUnionCaseTupleV0().value: {
          var ot = pt.tupleCase(), X = ot.name().toString();
          W.push({ type: "object", title: X, properties: { tag: X, values: { type: "array", items: ot.type().map(v) } }, required: ["tag", "values"], additionalProperties: false });
        }
      }
    });
    var lt = { oneOf: W };
    return x.length > 0 && (lt.description = x), lt;
  }
  return yc.Spec = function() {
    function S(x) {
      if (l(this, S), u(this, "entries", []), x.length === 0) throw new Error("Contract spec must have at least one entry");
      var B = x[0];
      typeof B == "string" ? this.entries = x.map(function(W) {
        return E.xdr.ScSpecEntry.fromXDR(W, "base64");
      }) : this.entries = x;
    }
    return i(S, [{ key: "funcs", value: function() {
      return this.entries.filter(function(B) {
        return B.switch().value === E.xdr.ScSpecEntryKind.scSpecEntryFunctionV0().value;
      }).map(function(B) {
        return B.functionV0();
      });
    } }, { key: "getFunc", value: function(B) {
      var W = this.findEntry(B);
      if (W.switch().value !== E.xdr.ScSpecEntryKind.scSpecEntryFunctionV0().value) throw new Error("".concat(B, " is not a function"));
      return W.functionV0();
    } }, { key: "funcArgsToScVals", value: function(B, W) {
      var lt = this, pt = this.getFunc(B);
      return pt.inputs().map(function(at) {
        return lt.nativeToScVal(P(W, at), at.type());
      });
    } }, { key: "funcResToNative", value: function(B, W) {
      var lt = typeof W == "string" ? E.xdr.ScVal.fromXDR(W, "base64") : W, pt = this.getFunc(B), at = pt.outputs();
      if (at.length === 0) {
        var rt = lt.switch();
        if (rt.value !== E.xdr.ScValType.scvVoid().value) throw new Error("Expected void, got ".concat(rt.name));
        return null;
      }
      if (at.length > 1) throw new Error("Multiple outputs not supported");
      var ot = at[0];
      return ot.switch().value === E.xdr.ScSpecType.scSpecTypeResult().value ? new t.Ok(this.scValToNative(lt, ot.result().okType())) : this.scValToNative(lt, ot);
    } }, { key: "findEntry", value: function(B) {
      var W = this.entries.find(function(lt) {
        return lt.value().name().toString() === B;
      });
      if (!W) throw new Error("no such entry: ".concat(B));
      return W;
    } }, { key: "nativeToScVal", value: function(B, W) {
      var lt = this, pt = W.switch(), at = pt.value;
      if (pt.value === E.xdr.ScSpecType.scSpecTypeUdt().value) {
        var rt = W.udt();
        return this.nativeToUdt(B, rt.name().toString());
      }
      if (at === E.xdr.ScSpecType.scSpecTypeOption().value) {
        var ot = W.option();
        return B === void 0 ? E.xdr.ScVal.scvVoid() : this.nativeToScVal(B, ot.valueType());
      }
      switch (a(B)) {
        case "object": {
          var X, I;
          if (B === null) switch (at) {
            case E.xdr.ScSpecType.scSpecTypeVoid().value:
              return E.xdr.ScVal.scvVoid();
            default:
              throw new TypeError("Type ".concat(W, " was not void, but value was null"));
          }
          if (B instanceof E.xdr.ScVal) return B;
          if (B instanceof E.Address) {
            if (W.switch().value !== E.xdr.ScSpecType.scSpecTypeAddress().value) throw new TypeError("Type ".concat(W, " was not address, but value was Address"));
            return B.toScVal();
          }
          if (B instanceof E.Contract) {
            if (W.switch().value !== E.xdr.ScSpecType.scSpecTypeAddress().value) throw new TypeError("Type ".concat(W, " was not address, but value was Address"));
            return B.address().toScVal();
          }
          if (B instanceof Uint8Array || Buffer.isBuffer(B)) {
            var nt = Uint8Array.from(B);
            switch (at) {
              case E.xdr.ScSpecType.scSpecTypeBytesN().value: {
                var ft = W.bytesN();
                if (nt.length !== ft.n()) throw new TypeError("expected ".concat(ft.n(), " bytes, but got ").concat(nt.length));
                return E.xdr.ScVal.scvBytes(nt);
              }
              case E.xdr.ScSpecType.scSpecTypeBytes().value:
                return E.xdr.ScVal.scvBytes(nt);
              default:
                throw new TypeError("invalid type (".concat(W, ") specified for Bytes and BytesN"));
            }
          }
          if (Array.isArray(B)) switch (at) {
            case E.xdr.ScSpecType.scSpecTypeVec().value: {
              var dt = W.vec(), Lt = dt.elementType();
              return E.xdr.ScVal.scvVec(B.map(function(z) {
                return lt.nativeToScVal(z, Lt);
              }));
            }
            case E.xdr.ScSpecType.scSpecTypeTuple().value: {
              var $ = W.tuple(), it = $.valueTypes();
              if (B.length !== it.length) throw new TypeError("Tuple expects ".concat(it.length, " values, but ").concat(B.length, " were provided"));
              return E.xdr.ScVal.scvVec(B.map(function(z, J) {
                return lt.nativeToScVal(z, it[J]);
              }));
            }
            case E.xdr.ScSpecType.scSpecTypeMap().value: {
              var mt = W.map(), Ot = mt.keyType(), bt = mt.valueType();
              return E.xdr.ScVal.scvMap(B.map(function(z) {
                var J = lt.nativeToScVal(z[0], Ot), tt = lt.nativeToScVal(z[1], bt);
                return new E.xdr.ScMapEntry({ key: J, val: tt });
              }));
            }
            default:
              throw new TypeError("Type ".concat(W, " was not vec, but value was Array"));
          }
          if (B.constructor === Map) {
            if (at !== E.xdr.ScSpecType.scSpecTypeMap().value) throw new TypeError("Type ".concat(W, " was not map, but value was Map"));
            for (var xt = W.map(), Ct = B, Tt = [], Bt = Ct.entries(), At = Bt.next(); !At.done; ) {
              var Ut = p(At.value, 2), Vt = Ut[0], oe = Ut[1], te = this.nativeToScVal(Vt, xt.keyType()), yt = this.nativeToScVal(oe, xt.valueType());
              Tt.push(new E.xdr.ScMapEntry({ key: te, val: yt })), At = Bt.next();
            }
            return E.xdr.ScVal.scvMap(Tt);
          }
          if (((X = (I = B.constructor) === null || I === void 0 ? void 0 : I.name) !== null && X !== void 0 ? X : "") !== "Object") {
            var Mt;
            throw new TypeError("cannot interpret ".concat((Mt = B.constructor) === null || Mt === void 0 ? void 0 : Mt.name, " value as ScVal (").concat(JSON.stringify(B), ")"));
          }
          throw new TypeError("Received object ".concat(B, "  did not match the provided type ").concat(W));
        }
        case "number":
        case "bigint":
          switch (at) {
            case E.xdr.ScSpecType.scSpecTypeU32().value:
              return E.xdr.ScVal.scvU32(B);
            case E.xdr.ScSpecType.scSpecTypeI32().value:
              return E.xdr.ScVal.scvI32(B);
            case E.xdr.ScSpecType.scSpecTypeU64().value:
            case E.xdr.ScSpecType.scSpecTypeI64().value:
            case E.xdr.ScSpecType.scSpecTypeU128().value:
            case E.xdr.ScSpecType.scSpecTypeI128().value:
            case E.xdr.ScSpecType.scSpecTypeU256().value:
            case E.xdr.ScSpecType.scSpecTypeI256().value: {
              var O = pt.name.substring(10).toLowerCase();
              return new E.XdrLargeInt(O, B).toScVal();
            }
            default:
              throw new TypeError("invalid type (".concat(W, ") specified for integer"));
          }
        case "string":
          return R(B, pt);
        case "boolean": {
          if (at !== E.xdr.ScSpecType.scSpecTypeBool().value) throw TypeError("Type ".concat(W, " was not bool, but value was bool"));
          return E.xdr.ScVal.scvBool(B);
        }
        case "undefined": {
          if (!W) return E.xdr.ScVal.scvVoid();
          switch (at) {
            case E.xdr.ScSpecType.scSpecTypeVoid().value:
            case E.xdr.ScSpecType.scSpecTypeOption().value:
              return E.xdr.ScVal.scvVoid();
            default:
              throw new TypeError("Type ".concat(W, " was not void, but value was undefined"));
          }
        }
        case "function":
          return this.nativeToScVal(B(), W);
        default:
          throw new TypeError("failed to convert typeof ".concat(a(B), " (").concat(B, ")"));
      }
    } }, { key: "nativeToUdt", value: function(B, W) {
      var lt = this.findEntry(W);
      switch (lt.switch()) {
        case E.xdr.ScSpecEntryKind.scSpecEntryUdtEnumV0():
          if (typeof B != "number") throw new TypeError("expected number for enum ".concat(W, ", but got ").concat(a(B)));
          return this.nativeToEnum(B, lt.udtEnumV0());
        case E.xdr.ScSpecEntryKind.scSpecEntryUdtStructV0():
          return this.nativeToStruct(B, lt.udtStructV0());
        case E.xdr.ScSpecEntryKind.scSpecEntryUdtUnionV0():
          return this.nativeToUnion(B, lt.udtUnionV0());
        default:
          throw new Error("failed to parse udt ".concat(W));
      }
    } }, { key: "nativeToUnion", value: function(B, W) {
      var lt = this, pt = B.tag, at = W.cases().find(function(I) {
        var nt = I.value().name().toString();
        return nt === pt;
      });
      if (!at) throw new TypeError("no such enum entry: ".concat(pt, " in ").concat(W));
      var rt = E.xdr.ScVal.scvSymbol(pt);
      switch (at.switch()) {
        case E.xdr.ScSpecUdtUnionCaseV0Kind.scSpecUdtUnionCaseVoidV0():
          return E.xdr.ScVal.scvVec([rt]);
        case E.xdr.ScSpecUdtUnionCaseV0Kind.scSpecUdtUnionCaseTupleV0(): {
          var ot = at.tupleCase().type();
          if (Array.isArray(B.values)) {
            if (B.values.length !== ot.length) throw new TypeError("union ".concat(W, " expects ").concat(ot.length, " values, but got ").concat(B.values.length));
            var X = B.values.map(function(I, nt) {
              return lt.nativeToScVal(I, ot[nt]);
            });
            return X.unshift(rt), E.xdr.ScVal.scvVec(X);
          }
          throw new Error("failed to parse union case ".concat(at, " with ").concat(B));
        }
        default:
          throw new Error("failed to parse union ".concat(W, " with ").concat(B));
      }
    } }, { key: "nativeToStruct", value: function(B, W) {
      var lt = this, pt = W.fields();
      if (pt.some(T)) {
        if (!pt.every(T)) throw new Error("mixed numeric and non-numeric field names are not allowed");
        return E.xdr.ScVal.scvVec(pt.map(function(at, rt) {
          return lt.nativeToScVal(B[rt], pt[rt].type());
        }));
      }
      return E.xdr.ScVal.scvMap(pt.map(function(at) {
        var rt = at.name().toString();
        return new E.xdr.ScMapEntry({ key: lt.nativeToScVal(rt, E.xdr.ScSpecTypeDef.scSpecTypeSymbol()), val: lt.nativeToScVal(B[rt], at.type()) });
      }));
    } }, { key: "nativeToEnum", value: function(B, W) {
      if (W.cases().some(function(lt) {
        return lt.value() === B;
      })) return E.xdr.ScVal.scvU32(B);
      throw new TypeError("no such enum entry: ".concat(B, " in ").concat(W));
    } }, { key: "scValStrToNative", value: function(B, W) {
      return this.scValToNative(E.xdr.ScVal.fromXDR(B, "base64"), W);
    } }, { key: "scValToNative", value: function(B, W) {
      var lt = this, pt = W.switch(), at = pt.value;
      if (at === E.xdr.ScSpecType.scSpecTypeUdt().value) return this.scValUdtToNative(B, W.udt());
      switch (B.switch().value) {
        case E.xdr.ScValType.scvVoid().value:
          return;
        case E.xdr.ScValType.scvU64().value:
        case E.xdr.ScValType.scvI64().value:
        case E.xdr.ScValType.scvU128().value:
        case E.xdr.ScValType.scvI128().value:
        case E.xdr.ScValType.scvU256().value:
        case E.xdr.ScValType.scvI256().value:
          return (0, E.scValToBigInt)(B);
        case E.xdr.ScValType.scvVec().value: {
          if (at === E.xdr.ScSpecType.scSpecTypeVec().value) {
            var rt, ot = W.vec();
            return ((rt = B.vec()) !== null && rt !== void 0 ? rt : []).map(function(bt) {
              return lt.scValToNative(bt, ot.elementType());
            });
          }
          if (at === E.xdr.ScSpecType.scSpecTypeTuple().value) {
            var X, I = W.tuple(), nt = I.valueTypes();
            return ((X = B.vec()) !== null && X !== void 0 ? X : []).map(function(bt, xt) {
              return lt.scValToNative(bt, nt[xt]);
            });
          }
          throw new TypeError("Type ".concat(W, " was not vec, but ").concat(B, " is"));
        }
        case E.xdr.ScValType.scvAddress().value:
          return E.Address.fromScVal(B).toString();
        case E.xdr.ScValType.scvMap().value: {
          var ft, dt = (ft = B.map()) !== null && ft !== void 0 ? ft : [];
          if (at === E.xdr.ScSpecType.scSpecTypeMap().value) {
            var Lt = W.map(), $ = Lt.keyType(), it = Lt.valueType(), mt = dt.map(function(bt) {
              return [lt.scValToNative(bt.key(), $), lt.scValToNative(bt.val(), it)];
            });
            return mt;
          }
          throw new TypeError("ScSpecType ".concat(pt.name, " was not map, but ").concat(JSON.stringify(B, null, 2), " is"));
        }
        case E.xdr.ScValType.scvBool().value:
        case E.xdr.ScValType.scvU32().value:
        case E.xdr.ScValType.scvI32().value:
        case E.xdr.ScValType.scvBytes().value:
          return B.value();
        case E.xdr.ScValType.scvString().value:
        case E.xdr.ScValType.scvSymbol().value: {
          var Ot;
          if (at !== E.xdr.ScSpecType.scSpecTypeString().value && at !== E.xdr.ScSpecType.scSpecTypeSymbol().value) throw new Error("ScSpecType ".concat(pt.name, " was not string or symbol, but ").concat(JSON.stringify(B, null, 2), " is"));
          return (Ot = B.value()) === null || Ot === void 0 ? void 0 : Ot.toString();
        }
        case E.xdr.ScValType.scvTimepoint().value:
        case E.xdr.ScValType.scvDuration().value:
          return (0, E.scValToBigInt)(E.xdr.ScVal.scvU64(B.u64()));
        default:
          throw new TypeError("failed to convert ".concat(JSON.stringify(B, null, 2), " to native type from type ").concat(pt.name));
      }
    } }, { key: "scValUdtToNative", value: function(B, W) {
      var lt = this.findEntry(W.name().toString());
      switch (lt.switch()) {
        case E.xdr.ScSpecEntryKind.scSpecEntryUdtEnumV0():
          return this.enumToNative(B);
        case E.xdr.ScSpecEntryKind.scSpecEntryUdtStructV0():
          return this.structToNative(B, lt.udtStructV0());
        case E.xdr.ScSpecEntryKind.scSpecEntryUdtUnionV0():
          return this.unionToNative(B, lt.udtUnionV0());
        default:
          throw new Error("failed to parse udt ".concat(W.name().toString(), ": ").concat(lt));
      }
    } }, { key: "unionToNative", value: function(B, W) {
      var lt = this, pt = B.vec();
      if (!pt) throw new Error("".concat(JSON.stringify(B, null, 2), " is not a vec"));
      if (pt.length === 0 && W.cases.length !== 0) throw new Error("".concat(B, " has length 0, but the there are at least one case in the union"));
      var at = pt[0].sym().toString();
      if (pt[0].switch().value !== E.xdr.ScValType.scvSymbol().value) throw new Error("{vec[0]} is not a symbol");
      var rt = W.cases().find(k(at));
      if (!rt) throw new Error("failed to find entry ".concat(at, " in union {udt.name().toString()}"));
      var ot = { tag: at };
      if (rt.switch().value === E.xdr.ScSpecUdtUnionCaseV0Kind.scSpecUdtUnionCaseTupleV0().value) {
        var X = rt.tupleCase(), I = X.type(), nt = I.map(function(ft, dt) {
          return lt.scValToNative(pt[dt + 1], ft);
        });
        ot.values = nt;
      }
      return ot;
    } }, { key: "structToNative", value: function(B, W) {
      var lt = this, pt, at = {}, rt = W.fields();
      if (rt.some(T)) {
        var ot, X = (ot = B.vec()) === null || ot === void 0 ? void 0 : ot.map(function(I, nt) {
          return lt.scValToNative(I, rt[nt].type());
        });
        return X;
      }
      return (pt = B.map()) === null || pt === void 0 || pt.forEach(function(I, nt) {
        var ft = rt[nt];
        at[ft.name().toString()] = lt.scValToNative(I.val(), ft.type());
      }), at;
    } }, { key: "enumToNative", value: function(B) {
      if (B.switch().value !== E.xdr.ScValType.scvU32().value) throw new Error("Enum must have a u32 value");
      var W = B.u32();
      return W;
    } }, { key: "errorCases", value: function() {
      return this.entries.filter(function(B) {
        return B.switch().value === E.xdr.ScSpecEntryKind.scSpecEntryUdtErrorEnumV0().value;
      }).flatMap(function(B) {
        return B.value().cases();
      });
    } }, { key: "jsonSchema", value: function(B) {
      var W = {};
      this.entries.forEach(function(pt) {
        switch (pt.switch().value) {
          case E.xdr.ScSpecEntryKind.scSpecEntryUdtEnumV0().value: {
            var at = pt.udtEnumV0();
            W[at.name().toString()] = w(at);
            break;
          }
          case E.xdr.ScSpecEntryKind.scSpecEntryUdtStructV0().value: {
            var rt = pt.udtStructV0();
            W[rt.name().toString()] = Z(rt);
            break;
          }
          case E.xdr.ScSpecEntryKind.scSpecEntryUdtUnionV0().value: {
            var ot = pt.udtUnionV0();
            W[ot.name().toString()] = V(ot);
            break;
          }
          case E.xdr.ScSpecEntryKind.scSpecEntryFunctionV0().value: {
            var X = pt.functionV0(), I = X.name().toString(), nt = D(X), ft = nt.input;
            W[I] = ft;
            break;
          }
          case E.xdr.ScSpecEntryKind.scSpecEntryUdtErrorEnumV0().value:
        }
      });
      var lt = { $schema: "http://json-schema.org/draft-07/schema#", definitions: o(o({}, F), W) };
      return B && (lt.$ref = "#/definitions/".concat(B)), lt;
    } }]);
  }(), yc;
}
var hd;
function LS() {
  if (hd) return mc;
  hd = 1;
  function E(D) {
    "@babel/helpers - typeof";
    return E = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(V) {
      return typeof V;
    } : function(V) {
      return V && typeof Symbol == "function" && V.constructor === Symbol && V !== Symbol.prototype ? "symbol" : typeof V;
    }, E(D);
  }
  Object.defineProperty(mc, "__esModule", { value: true }), mc.Client = void 0;
  var t = ps(), e = nm(), o = Xl(), a = rm(), l = Sp(), s = ["method"], i = ["wasmHash", "salt", "format", "fee", "timeoutInSeconds", "simulate"];
  function u() {
    var D, V, S = typeof Symbol == "function" ? Symbol : {}, x = S.iterator || "@@iterator", B = S.toStringTag || "@@toStringTag";
    function W(nt, ft, dt, Lt) {
      var $ = ft && ft.prototype instanceof pt ? ft : pt, it = Object.create($.prototype);
      return d(it, "_invoke", function(mt, Ot, bt) {
        var xt, Ct, Tt, Bt = 0, At = bt || [], Ut = false, Vt = { p: 0, n: 0, v: D, a: oe, f: oe.bind(D, 4), d: function(yt, Mt) {
          return xt = yt, Ct = 0, Tt = D, Vt.n = Mt, lt;
        } };
        function oe(te, yt) {
          for (Ct = te, Tt = yt, V = 0; !Ut && Bt && !Mt && V < At.length; V++) {
            var Mt, O = At[V], z = Vt.p, J = O[2];
            te > 3 ? (Mt = J === yt) && (Tt = O[(Ct = O[4]) ? 5 : (Ct = 3, 3)], O[4] = O[5] = D) : O[0] <= z && ((Mt = te < 2 && z < O[1]) ? (Ct = 0, Vt.v = yt, Vt.n = O[1]) : z < J && (Mt = te < 3 || O[0] > yt || yt > J) && (O[4] = te, O[5] = yt, Vt.n = J, Ct = 0));
          }
          if (Mt || te > 1) return lt;
          throw Ut = true, yt;
        }
        return function(te, yt, Mt) {
          if (Bt > 1) throw TypeError("Generator is already running");
          for (Ut && yt === 1 && oe(yt, Mt), Ct = yt, Tt = Mt; (V = Ct < 2 ? D : Tt) || !Ut; ) {
            xt || (Ct ? Ct < 3 ? (Ct > 1 && (Vt.n = -1), oe(Ct, Tt)) : Vt.n = Tt : Vt.v = Tt);
            try {
              if (Bt = 2, xt) {
                if (Ct || (te = "next"), V = xt[te]) {
                  if (!(V = V.call(xt, Tt))) throw TypeError("iterator result is not an object");
                  if (!V.done) return V;
                  Tt = V.value, Ct < 2 && (Ct = 0);
                } else Ct === 1 && (V = xt.return) && V.call(xt), Ct < 2 && (Tt = TypeError("The iterator does not provide a '" + te + "' method"), Ct = 1);
                xt = D;
              } else if ((V = (Ut = Vt.n < 0) ? Tt : mt.call(Ot, Vt)) !== lt) break;
            } catch (O) {
              xt = D, Ct = 1, Tt = O;
            } finally {
              Bt = 1;
            }
          }
          return { value: V, done: Ut };
        };
      }(nt, dt, Lt), true), it;
    }
    var lt = {};
    function pt() {
    }
    function at() {
    }
    function rt() {
    }
    V = Object.getPrototypeOf;
    var ot = [][x] ? V(V([][x]())) : (d(V = {}, x, function() {
      return this;
    }), V), X = rt.prototype = pt.prototype = Object.create(ot);
    function I(nt) {
      return Object.setPrototypeOf ? Object.setPrototypeOf(nt, rt) : (nt.__proto__ = rt, d(nt, B, "GeneratorFunction")), nt.prototype = Object.create(X), nt;
    }
    return at.prototype = rt, d(X, "constructor", rt), d(rt, "constructor", at), at.displayName = "GeneratorFunction", d(rt, B, "GeneratorFunction"), d(X), d(X, B, "Generator"), d(X, x, function() {
      return this;
    }), d(X, "toString", function() {
      return "[object Generator]";
    }), (u = function() {
      return { w: W, m: I };
    })();
  }
  function d(D, V, S, x) {
    var B = Object.defineProperty;
    try {
      B({}, "", {});
    } catch {
      B = 0;
    }
    d = function(lt, pt, at, rt) {
      if (pt) B ? B(lt, pt, { value: at, enumerable: !rt, configurable: !rt, writable: !rt }) : lt[pt] = at;
      else {
        let X = function(I, nt) {
          d(lt, I, function(ft) {
            return this._invoke(I, nt, ft);
          });
        };
        var ot = X;
        X("next", 0), X("throw", 1), X("return", 2);
      }
    }, d(D, V, S, x);
  }
  function f(D, V) {
    var S = Object.keys(D);
    if (Object.getOwnPropertySymbols) {
      var x = Object.getOwnPropertySymbols(D);
      V && (x = x.filter(function(B) {
        return Object.getOwnPropertyDescriptor(D, B).enumerable;
      })), S.push.apply(S, x);
    }
    return S;
  }
  function p(D) {
    for (var V = 1; V < arguments.length; V++) {
      var S = arguments[V] != null ? arguments[V] : {};
      V % 2 ? f(Object(S), true).forEach(function(x) {
        w(D, x, S[x]);
      }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(D, Object.getOwnPropertyDescriptors(S)) : f(Object(S)).forEach(function(x) {
        Object.defineProperty(D, x, Object.getOwnPropertyDescriptor(S, x));
      });
    }
    return D;
  }
  function g(D, V) {
    if (D == null) return {};
    var S, x, B = b(D, V);
    if (Object.getOwnPropertySymbols) {
      var W = Object.getOwnPropertySymbols(D);
      for (x = 0; x < W.length; x++) S = W[x], V.indexOf(S) === -1 && {}.propertyIsEnumerable.call(D, S) && (B[S] = D[S]);
    }
    return B;
  }
  function b(D, V) {
    if (D == null) return {};
    var S = {};
    for (var x in D) if ({}.hasOwnProperty.call(D, x)) {
      if (V.indexOf(x) !== -1) continue;
      S[x] = D[x];
    }
    return S;
  }
  function h(D, V) {
    if (!(D instanceof V)) throw new TypeError("Cannot call a class as a function");
  }
  function m(D, V) {
    for (var S = 0; S < V.length; S++) {
      var x = V[S];
      x.enumerable = x.enumerable || false, x.configurable = true, "value" in x && (x.writable = true), Object.defineProperty(D, T(x.key), x);
    }
  }
  function c(D, V, S) {
    return S && m(D, S), Object.defineProperty(D, "prototype", { writable: false }), D;
  }
  function w(D, V, S) {
    return (V = T(V)) in D ? Object.defineProperty(D, V, { value: S, enumerable: true, configurable: true, writable: true }) : D[V] = S, D;
  }
  function T(D) {
    var V = P(D, "string");
    return E(V) == "symbol" ? V : V + "";
  }
  function P(D, V) {
    if (E(D) != "object" || !D) return D;
    var S = D[Symbol.toPrimitive];
    if (S !== void 0) {
      var x = S.call(D, V);
      if (E(x) != "object") return x;
      throw new TypeError("@@toPrimitive must return a primitive value.");
    }
    return (V === "string" ? String : Number)(D);
  }
  function k(D, V, S, x, B, W, lt) {
    try {
      var pt = D[W](lt), at = pt.value;
    } catch (rt) {
      return void S(rt);
    }
    pt.done ? V(at) : Promise.resolve(at).then(x, B);
  }
  function R(D) {
    return function() {
      var V = this, S = arguments;
      return new Promise(function(x, B) {
        var W = D.apply(V, S);
        function lt(at) {
          k(W, x, B, lt, pt, "next", at);
        }
        function pt(at) {
          k(W, x, B, lt, pt, "throw", at);
        }
        lt(void 0);
      });
    };
  }
  var F = "__constructor";
  function v(D) {
    return U.apply(this, arguments);
  }
  function U() {
    return U = R(u().m(function D(V) {
      var S, x, B, W, lt;
      return u().w(function(pt) {
        for (; ; ) switch (pt.n) {
          case 0:
            return pt.n = 1, WebAssembly.compile(V);
          case 1:
            if (S = pt.v, x = WebAssembly.Module.customSections(S, "contractspecv0"), x.length !== 0) {
              pt.n = 2;
              break;
            }
            throw new Error("Could not obtain contract spec from wasm");
          case 2:
            return B = Buffer.from(x[0]), W = (0, l.processSpecEntryStream)(B), lt = new e.Spec(W), pt.a(2, lt);
        }
      }, D);
    })), U.apply(this, arguments);
  }
  function M(D, V) {
    return Z.apply(this, arguments);
  }
  function Z() {
    return Z = R(u().m(function D(V, S) {
      var x, B, W, lt, pt, at, rt = arguments;
      return u().w(function(ot) {
        for (; ; ) switch (ot.n) {
          case 0:
            if (x = rt.length > 2 && rt[2] !== void 0 ? rt[2] : "hex", !(!S || !S.rpcUrl)) {
              ot.n = 1;
              break;
            }
            throw new TypeError("options must contain rpcUrl");
          case 1:
            return B = S.rpcUrl, W = S.allowHttp, lt = { allowHttp: W }, pt = new o.Server(B, lt), ot.n = 2, pt.getContractWasmByHash(V, x);
          case 2:
            return at = ot.v, ot.a(2, v(at));
        }
      }, D);
    })), Z.apply(this, arguments);
  }
  return mc.Client = function() {
    function D(V, S) {
      var x = this;
      h(this, D), w(this, "txFromJSON", function(B) {
        var W = JSON.parse(B), lt = W.method, pt = g(W, s);
        return a.AssembledTransaction.fromJSON(p(p({}, x.options), {}, { method: lt, parseResultXdr: function(rt) {
          return x.spec.funcResToNative(lt, rt);
        } }), pt);
      }), w(this, "txFromXDR", function(B) {
        return a.AssembledTransaction.fromXDR(x.options, B, x.spec);
      }), this.spec = V, this.options = S, this.spec.funcs().forEach(function(B) {
        var W = B.name().toString();
        if (W !== F) {
          var lt = function(at, rt) {
            return a.AssembledTransaction.build(p(p(p({ method: W, args: at && V.funcArgsToScVals(W, at) }, S), rt), {}, { errorTypes: V.errorCases().reduce(function(ot, X) {
              return p(p({}, ot), {}, w({}, X.value(), { message: X.doc().toString() }));
            }, {}), parseResultXdr: function(X) {
              return V.funcResToNative(W, X);
            } }));
          };
          x[W] = V.getFunc(W).inputs().length === 0 ? function(pt) {
            return lt(void 0, pt);
          } : lt;
        }
      });
    }
    return c(D, null, [{ key: "deploy", value: function() {
      var V = R(u().m(function x(B, W) {
        var lt, pt, at, rt, ot, X, I, nt, ft;
        return u().w(function(dt) {
          for (; ; ) switch (dt.n) {
            case 0:
              return lt = W.wasmHash, pt = W.salt, at = W.format, rt = W.fee, ot = W.timeoutInSeconds, X = W.simulate, I = g(W, i), dt.n = 1, M(lt, I, at);
            case 1:
              return nt = dt.v, ft = t.Operation.createCustomContract({ address: new t.Address(W.publicKey), wasmHash: typeof lt == "string" ? Buffer.from(lt, at ?? "hex") : lt, salt: pt, constructorArgs: B ? nt.funcArgsToScVals(F, B) : [] }), dt.a(2, a.AssembledTransaction.buildWithOp(ft, p(p({ fee: rt, timeoutInSeconds: ot, simulate: X }, I), {}, { contractId: "ignored", method: F, parseResultXdr: function($) {
                return new D(nt, p(p({}, I), {}, { contractId: t.Address.fromScVal($).toString() }));
              } })));
          }
        }, x);
      }));
      function S(x, B) {
        return V.apply(this, arguments);
      }
      return S;
    }() }, { key: "fromWasmHash", value: function() {
      var V = R(u().m(function x(B, W) {
        var lt, pt, at, rt, ot, X, I = arguments;
        return u().w(function(nt) {
          for (; ; ) switch (nt.n) {
            case 0:
              if (lt = I.length > 2 && I[2] !== void 0 ? I[2] : "hex", !(!W || !W.rpcUrl)) {
                nt.n = 1;
                break;
              }
              throw new TypeError("options must contain rpcUrl");
            case 1:
              return pt = W.rpcUrl, at = W.allowHttp, rt = { allowHttp: at }, ot = new o.Server(pt, rt), nt.n = 2, ot.getContractWasmByHash(B, lt);
            case 2:
              return X = nt.v, nt.a(2, D.fromWasm(X, W));
          }
        }, x);
      }));
      function S(x, B) {
        return V.apply(this, arguments);
      }
      return S;
    }() }, { key: "fromWasm", value: function() {
      var V = R(u().m(function x(B, W) {
        var lt;
        return u().w(function(pt) {
          for (; ; ) switch (pt.n) {
            case 0:
              return pt.n = 1, v(B);
            case 1:
              return lt = pt.v, pt.a(2, new D(lt, W));
          }
        }, x);
      }));
      function S(x, B) {
        return V.apply(this, arguments);
      }
      return S;
    }() }, { key: "from", value: function() {
      var V = R(u().m(function x(B) {
        var W, lt, pt, at, rt, ot;
        return u().w(function(X) {
          for (; ; ) switch (X.n) {
            case 0:
              if (!(!B || !B.rpcUrl || !B.contractId)) {
                X.n = 1;
                break;
              }
              throw new TypeError("options must contain rpcUrl and contractId");
            case 1:
              return W = B.rpcUrl, lt = B.contractId, pt = B.allowHttp, at = { allowHttp: pt }, rt = new o.Server(W, at), X.n = 2, rt.getContractWasmByContractId(lt);
            case 2:
              return ot = X.v, X.a(2, D.fromWasm(ot, B));
          }
        }, x);
      }));
      function S(x) {
        return V.apply(this, arguments);
      }
      return S;
    }() }]);
  }(), mc;
}
var dd;
function NS() {
  return dd || (dd = 1, function(E) {
    Object.defineProperty(E, "__esModule", { value: true });
    var t = rm();
    Object.keys(t).forEach(function(u) {
      u === "default" || u === "__esModule" || u in E && E[u] === t[u] || Object.defineProperty(E, u, { enumerable: true, get: function() {
        return t[u];
      } });
    });
    var e = BS();
    Object.keys(e).forEach(function(u) {
      u === "default" || u === "__esModule" || u in E && E[u] === e[u] || Object.defineProperty(E, u, { enumerable: true, get: function() {
        return e[u];
      } });
    });
    var o = LS();
    Object.keys(o).forEach(function(u) {
      u === "default" || u === "__esModule" || u in E && E[u] === o[u] || Object.defineProperty(E, u, { enumerable: true, get: function() {
        return o[u];
      } });
    });
    var a = wp();
    Object.keys(a).forEach(function(u) {
      u === "default" || u === "__esModule" || u in E && E[u] === a[u] || Object.defineProperty(E, u, { enumerable: true, get: function() {
        return a[u];
      } });
    });
    var l = em();
    Object.keys(l).forEach(function(u) {
      u === "default" || u === "__esModule" || u in E && E[u] === l[u] || Object.defineProperty(E, u, { enumerable: true, get: function() {
        return l[u];
      } });
    });
    var s = nm();
    Object.keys(s).forEach(function(u) {
      u === "default" || u === "__esModule" || u in E && E[u] === s[u] || Object.defineProperty(E, u, { enumerable: true, get: function() {
        return s[u];
      } });
    });
    var i = Yl();
    Object.keys(i).forEach(function(u) {
      u === "default" || u === "__esModule" || u in E && E[u] === i[u] || Object.defineProperty(E, u, { enumerable: true, get: function() {
        return i[u];
      } });
    });
  }(Xf)), Xf;
}
var Nl = NS();
typeof window < "u" && (window.Buffer = window.Buffer || up.Buffer);
class DS extends Nl.Client {
  constructor(t) {
    super(new Nl.Spec(["AAAAAgAAAAAAAAAAAAAACFVzZXJEYXRhAAAABwAAAAAAAAAAAAAABVRva2VuAAAAAAAAAQAAAAAAAAAHQmFsYW5jZQAAAAABAAAAEwAAAAEAAAAAAAAABVNjb3JlAAAAAAAAAQAAABMAAAABAAAAAAAAAAlUdXJuU2NvcmUAAAAAAAABAAAAEwAAAAEAAAAAAAAABERpY2UAAAABAAAAEwAAAAEAAAAAAAAABU1hdGNoAAAAAAAAAQAAABMAAAABAAAAAAAAAARUdXJuAAAAAQAAABM=", "AAAAAgAAAAAAAAAAAAAACUFkbWluRGF0YQAAAAAAAAIAAAAAAAAAAAAAAAVUb2tlbgAAAAAAAAAAAAAAAAAABUFkbWluAAAA", "AAAABAAAAAAAAAAAAAAABUVycm9yAAAAAAAABwAAAAAAAAANSW52YWxpZEFtb3VudAAAAAAAAAAAAAAAAAAADk5vdEluaXRpYWxpemVkAAAAAAABAAAAAAAAAA5BbHJlYWR5UGxheWluZwAAAAAAAgAAAAAAAAAHVG9vUG9vcgAAAAADAAAAAAAAAAtOb3RZb3VyVHVybgAAAAAEAAAAAAAAAApXcm9uZ01hdGNoAAAAAAAFAAAAAAAAAApCYWREaWVIb2xkAAAAAAAG", "AAAAAAAAAK0qIEluaXRpYWxpemVzIHRoZSBnYW1lLgogICAgICoKICAgICAqICMgQXJndW1lbnRzCiAgICAgKgogICAgICogLSBgYWRtaW5gIC0gVGhlIG93bmVyIG9mIHRoaXMgaW5zdGFuY2Ugb2YgdGhlIGdhbWUuCiAgICAgKiAtIGB0b2tlbmAgLSBUaGUgdG9rZW4gdXNlZCBmb3Igd2FnZXJzIGluIHRoZSBnYW1lLgAAAAAAAA1fX2NvbnN0cnVjdG9yAAAAAAAAAgAAAAAAAAAFYWRtaW4AAAAAAAATAAAAAAAAAAV0b2tlbgAAAAAAABMAAAAA", "AAAAAAAAAChSZXR1cm5zIHRoZSBjdXJyZW50IHZlcnNpb24gb2YgdGhlIGdhbWUuAAAAB3ZlcnNpb24AAAAAAAAAAAEAAAAE", "AAAAAAAAADJSZXR1cm5zIHRoZSBjdXJyZW50IHdhZ2VyIC8gY29zdCB0byBwbGF5IHRoZSBnYW1lLgAAAAAABXdhZ2VyAAAAAAAAAAAAAAEAAAAL", "AAAAAAAAADxBbGxvd3MgdGhlIGFkbWluIHRvIHVwZ3JhZGUgdGhlIGNvbnRyYWN0IHRvIGEgbmV3IFdhc20gYmxvYi4AAAAHdXBncmFkZQAAAAABAAAAAAAAAA1uZXdfd2FzbV9oYXNoAAAAAAAD7gAAACAAAAAA", "AAAAAAAAAQQqIE9mZmVycyBhIHBzZXVkby1zaHV0ZG93biBtZWNoYW5pc20gdGhhdCBkZS1pbml0aWFsaXplcyBldmVyeXRoaW5nLgogICAgICoKICAgICAqIFdlIHNheSAicHNldWRvIiBiZWNhdXNlIHRoZSBjb250cmFjdCBjb250aW51ZXMgdG8gZXhpc3QsIGJ1dCBub25lIG9mIHRoZQogICAgICogbWV0aG9kcyB3aWxsIHdvcmsgYmVzaWRlcyBgd2l0aGRyYXdgLCBhbGxvd2luZyBwbGF5ZXJzIHRvIHB1bGwgb3V0CiAgICAgKiB0aGVpciBjdXJyZW50IGhvbGRpbmdzLgAAAAhzaHV0ZG93bgAAAAAAAAABAAAACw==", "AAAAAAAAAERSZXR1cm5zIHRoZSBjdXJyZW50IGJhbGFuY2UgYSBwbGF5ZXIgaG9sZHMgaW4gdGhlIGdhbWUgZm9yIHdhZ2VyaW5nLgAAAAdiYWxhbmNlAAAAAAEAAAAAAAAABnBsYXllcgAAAAAAEwAAAAEAAAAL", "AAAAAAAAAT8qIERlcG9zaXRzIHRoZSB0b2tlbiBpbnRvIHRoZSBjb250cmFjdCBmb3Igd2FnZXJpbmcuCiAgICAgKgogICAgICogIyBBcmd1bWVudHMKICAgICAqCiAgICAgKiBgdG9gIC0gVGhlIGFkZHJlc3MgZnJvbSB3aGljaCB0byB0YWtlIGBhbW91bnRgIGFuZCB0cmFuc2ZlciB0byB0aGUgY29udHJhY3QuCiAgICAgKiBgYW1vdW50YCAtIFRoZSBxdWFudGl0eSBvZiB0aGUgdG9rZW4gdG8gdHJhbnNmZXIuCiAgICAgKgogICAgICogIyBSZXR1cm5zCiAgICAgKgogICAgICogVGhlIGN1cnJlbnQgYmFsYW5jZSBvZiB0aGUgYWNjb3VudCBhZnRlciB0aGlzIGRlcG9zaXQuAAAAAAdkZXBvc2l0AAAAAAIAAAAAAAAAAnRvAAAAAAATAAAAAAAAAAZhbW91bnQAAAAAAAsAAAABAAAACw==", "AAAAAAAAAM0qIFdpdGhkcmF3cyBmdW5kcyBmb3IgYW4gYWNjb3VudC4KICAgICAqCiAgICAgKiAjIEFyZ3VtZW50cwogICAgICoKICAgICAqIC0gYGZyb21gIC0gVGhlIGFjY291bnQgZm9yIHdoaWNoIHRvIHBlcmZvcm0gYSB3aXRoZHJhd2FsCiAgICAgKgogICAgICogIyBSZXR1cm5zCiAgICAgKgogICAgICogVGhlIGFtb3VudCB3aXRoZHJhd24sIGZvciByZWZlcmVuY2UuAAAAAAAACHdpdGhkcmF3AAAAAQAAAAAAAAAEZnJvbQAAABMAAAABAAAACw==", "AAAAAAAAAERSZXR1cm5zIHRoZSBjdXJyZW50IHNjb3JlIGZvciBhIHBsYXllciwgYXNzdW1pbmcgdGhleSdyZSBpbiBhIG1hdGNoLgAAAAVzY29yZQAAAAAAAAEAAAAAAAAABnBsYXllcgAAAAAAEwAAAAEAAAAE", "AAAAAAAABAAqIEJlZ2lucyBhIG1hdGNoIGJldHdlZW4gdHdvIHBsYXllcnMuCiAgICAgKgogICAgICogSWYgYm90aCBwbGF5ZXJzIGF1dGhvcml6ZSBiZWdpbm5pbmcgYSBtYXRjaCwgdGhpcyB3aWxsIHNldCB0aGUgZ2FtZSB1cAogICAgICogYnkgaG9sZGluZyB0aGUgd2FnZXIgYW1vdW50IGluIHRoZSBjb250cmFjdCBhcyBhbiBlc2Nyb3cgbWVjaGFuaXNtLiBJdAogICAgICogdGhlbiByYW5kb21seSBkZWNpZGVzIG9uIHdobyBzaG91bGQgZ28gZmlyc3QsIHJldHVybmluZyB0aGF0IGFkZHJlc3MuCiAgICAgKgogICAgICogSXQgd2lsbCBhbHNvIGVtaXQgYW4gZXZlbnQgY29ycmVzcG9uZGluZyB0byB0aGUgaW5pdGlhbGl6YXRpb24gb2YgdGhlCiAgICAgKiBtYXRjaCwgd2l0aCB0aGUgdG9waWNzIFsibWF0Y2giLCAiUGxheWVyIEEiLCAiUGxheWVyIEIiXSBhbmQgdGhlIGRhdGEKICAgICAqIGZpZWxkIGJlaW5nIHRoZSBhZGRyZXNzIHRoYXQgZ29lcyBmaXJzdC4gVGhpcyBzaG91bGQgYWxsb3cgcGxheWVycyB0bwogICAgICogb2JzZXJ2ZSB0aGUgYmVnaW5uaW5nIG9mIHRoZSBtYXRjaCB3aXRob3V0IG5lY2Vzc2FyaWx5IGJlaW5nIHRoZSBvbmVzCiAgICAgKiB0byBzdWJtaXQgdGhlIGludm9jYXRpb24uCiAgICAgKgogICAgICogIyBBcmd1bWVudHMKICAgICAqCiAgICAgKiBgYWAgLSBUaGUgcGxheWVyIG9uIG9uZSBzaWRlIG9mIHRoZSBtYXRjaAogICAgICogYGJgIC0gVGhlIHBsYXllciBvbiB0aGUgb3RoZXIgc2lkZSBvZiB0aGUgbWF0Y2gKICAgICAqCiAgICAgKiAjIFJldHVybnMKICAgICAqCiAgICAgKiBUaGUgYWRkcmVzcyBvZiB0aGUgcGxheWVyIHdobyBzaG91bGQgZ28gKGNhbGwgYHJvbGxgKSBmaXJzdC4KICAgICAqCiAgICAgKiAjIFBhbmljcwogICAgICoKICAgICAqIC0gSWYgZWl0aGVyIHBsYXllciBpcyBhbHJlYWR5IGluIGEgZ2FtZS4KICAgICAqIC0gSWYgYSBwbGF5ZXIgZG9lc24ndCBoYXZlIGEgc3VmZmljaWVudCBhbW91bnQgZGVwb3NpdGVkIHRvIHdhZ2VyIGEgZ2FtZQogICAgAAAABmVuZ2FnZQAAAAAAAgAAAAAAAAABYQAAAAAAABMAAAAAAAAAAWIAAAAAAAATAAAAAQAAABM=", "AAAAAAAABAAqIFBlcmZvcm1zIGEgc2luZ2xlIHJvbGwgaW4gdGhlIGdhbWUgb2YgRmFya2xlLgogICAgICoKICAgICAqIEluIEZhcmtsZSwgZ2FtZXMgYXJlIHBsYXllZCB3aXRoIHJvdW5kcy4gSW4gZWFjaCByb3VuZCwgeW91IHBlcmZvcm0gbXVsdGlwbGUKICAgICAqIHJvbGxzLCBlaXRoZXIgc2V0dGluZyBhc2lkZSBkaWNlIHRvIGFjY3VtdWxhdGUgdG8geW91ciB0dXJuJ3Mgc2NvcmUgYW5kCiAgICAgKiByb2xsaW5nIGFnYWluLCBvciBzZXR0aW5nIGFzaWRlICsgcGFzc2luZyB0byBsb2NrIGluIHlvdXIgdHVybidzIHNjb3JlIGFuZAogICAgICogYWRkIGl0IHRvIHlvdXIgYWNjdW11bGF0ZWQgdG90YWwgc2NvcmUuCiAgICAgKgogICAgICogRmlyc3QgdG8gMjAwMCB3aW5zIQogICAgICoKICAgICAqICMgQXJndW1lbnRzCiAgICAgKgogICAgICogYHBsYXllcmAgLSBUaGUgcGVyc29uIHdobyBpcyByb2xsaW5nIHRoZSBkaWNlLgogICAgICogYHNhdmVgIC0gQSBsaXN0IG9mIGluZGljZXMgaW50byB0aGUgZGljZSB0byBrZWVwIGZyb20gdGhlIHByZXZpb3VzIHJvbGwuCiAgICAgKgogICAgICogICAgICBJbiBvdGhlciB3b3JkcywgaWYgdGhlIHByZXZpb3VzIGByb2xsYCBjYWxsIHJldHVybmVkIGEgNC1kaWNlIHJvbGwKICAgICAqICAgICAgd2l0aCBgWzEsIDYsIDIsIDFdYCAoYmVjYXVzZSB5b3UndmUgYWxyZWFkeSBzZXQgdGhlIG90aGVyIHR3byBhc2lkZSksCiAgICAgKiAgICAgIGFuZCB5b3Ugd2FudGVkIHRvIGtlZXAgYm90aCAxcywgdGhlIGBzYXZlYCBsaXN0IHNob3VsZCBiZSBbMCwgM10KICAgICAqICAgICAgYmVjYXVzZSB5b3Ugd2FudCB0byBrZWVwIHRoZSAxc3QgYW5kIDR0aCBkaWNlICgwLWJhc2VkIGluZGV4aW5nKS4KICAgICAqIGBzdG9wYCAtIFdoZXRoZXIgb3Igbm90IHlvdSB3YW50IHRvIHN0b3AgYWZ0ZXIgdGhpcyBhY2N1bXVsYXRpb24gb2YgcG9pbnRzLgogICAgICoKICAgICAqICMgUmV0dXJucwogICAgICoKICAgICAqIEEgbGlzdCByZXByZXNlbnRpbmcgdGhlIGxhdGVzdCBkAAAABHJvbGwAAAADAAAAAAAAAAZwbGF5ZXIAAAAAABMAAAAAAAAABHNhdmUAAAPqAAAABAAAAAAAAAAEc3RvcAAAAAEAAAABAAAD6gAAAAQ=", "AAAAAAAAADBSZXR1cm5zIHRoZSB0b2tlbiBhZGRyZXNzIGJlaW5nIHVzZWQgZm9yIHdhZ2Vycy4AAAAFdG9rZW4AAAAAAAAAAAAAAQAAABM=", "AAAAAAAAAClQYW5pY3MgaWYgdGhlIGNvbnRyYWN0IGlzbid0IGluaXRpYWxpemVkLgAAAAAAAApjaGVja19pbml0AAAAAAAAAAAAAA==", "AAAAAAAAADdCdW1wcyB0aGUgdGltZS10by1saXZlIGZvciBhIG1hdGNoIGJldHdlZW4gdHdvIHBsYXllcnMuAAAAAA5idW1wX21hdGNoX3R0bAAAAAAAAgAAAAAAAAABYQAAAAAAABMAAAAAAAAAAWIAAAAAAAATAAAAAA==", "AAAAAAAAAAAAAAAJZW5kX21hdGNoAAAAAAAAAgAAAAAAAAAGcGxheWVyAAAAAAATAAAAAAAAAANvcHAAAAAAEwAAAAEAAAAB"]), t);
    __publicField(this, "fromJSON", { version: this.txFromJSON, wager: this.txFromJSON, upgrade: this.txFromJSON, shutdown: this.txFromJSON, balance: this.txFromJSON, deposit: this.txFromJSON, withdraw: this.txFromJSON, score: this.txFromJSON, engage: this.txFromJSON, roll: this.txFromJSON, token: this.txFromJSON, check_init: this.txFromJSON, bump_match_ttl: this.txFromJSON, end_match: this.txFromJSON });
    this.options = t;
  }
  static async deploy({ admin: t, token: e }, o) {
    return Nl.Client.deploy({ admin: t, token: e }, o);
  }
}
const Iu = 10000000n, Mu = "https://soroban-testnet.stellar.org", xp = "CDYTZZSG3IL7XWDUNNVHD5MZ4AVIPH2EQVCA6XWFGSUVL3CXFOBHVQWA", FS = 180, Gl = Ai.Networks.TESTNET, US = window.location.toString();
async function _p(E) {
  const { address: t } = await E.getAddress(), { networkPassphrase: e } = await E.getNetwork();
  return new DS({ contractId: xp, publicKey: t, rpcUrl: Mu, networkPassphrase: e, signTransaction: E.signTransaction, signAuthEntry: E.signAuthEntry });
}
function jS(E, t) {
  let e = E.map((a) => Ai.scValToNative(a)), o = Ai.scValToNative(t);
  switch (e[0]) {
    case "match":
      return { type: e[0], player: e[1], otherPlayer: e[2], first: o };
    case "roll":
      return { type: e[0], player: e[1], dice: o };
    case "reroll":
      return { type: e[0], player: e[1], dice: o[0], score: o[1], stop: o[2] };
    case "bust":
      return { type: e[0], player: e[1], dice: o };
    case "win":
      return { type: e[0], player: e[1], score: o };
    default:
      throw E;
  }
}
class VS {
  constructor() {
    __publicField(this, "listener");
    __publicField(this, "rpc", new Da.Server(Mu));
    window.addEventListener("farkle", (t) => {
      const e = t.detail;
      console.debug("Farkle Event:", e), dispatchEvent(new CustomEvent(`farkle-${e.type}`, { bubbles: true, detail: e }));
    });
  }
  stop() {
    clearInterval(this.listener);
  }
  listen(t) {
    const e = { contractIds: [xp], type: "contract", topics: t.map((l) => ["*", Ai.nativeToScVal(l, { type: "address" }).toXDR("base64")]) };
    let o, a;
    this.listener = setInterval(async () => {
      let l = await this.rpc.getLatestLedger();
      o && o.sequence >= l.sequence || (o = l, a ? a = await this.rpc.getEvents({ filters: [e], cursor: a.cursor, limit: 100 }) : a = await this.rpc.getEvents({ filters: [e], startLedger: o.sequence - 10, limit: 100 }), a.events.forEach((s) => {
        const i = jS(s.topic, s.value);
        dispatchEvent(new CustomEvent("farkle", { detail: i, bubbles: true }));
      }));
    }, 1500);
  }
  on(t, e) {
    window.addEventListener(`farkle-${t}`, e);
  }
}
async function zS(E) {
  const { address: t } = await E.getAddress(), e = Ai.Keypair.fromPublicKey(t);
  let l = (await new Da.Server(Mu).getLedgerEntries(Ai.xdr.LedgerKey.account(new Ai.xdr.LedgerKeyAccount({ accountId: e.xdrAccountId() })))).entries[0].val.account().balance().toBigInt();
  l <= Number.MAX_SAFE_INTEGER ? l = Number(l) / Number(Iu) : l /= Iu, console.debug(`Loaded account info for ${e.publicKey().substring(0, 6)}: ${l} XLM.`);
  const s = bn("#account-balance"), i = s.text(), u = l.toString();
  return s.text(Number(l).toFixed(2)), { element: s, oldBalance: i, newBalance: u };
}
async function qS(E) {
  const t = await _p(E), { address: e } = await E.getAddress(), o = await t.balance({ player: e });
  let a;
  o.result === -1n ? a = 0 : o.result <= Number.MAX_SAFE_INTEGER ? a = Number(o.result) / Number(Iu) : a = o.result / Iu;
  const l = bn("#in-game-balance"), s = l.text(), i = a.toString();
  return l.text(parseFloat(i).toFixed(2)), { element: l, oldBalance: s, newBalance: i };
}
function ep(E = 3e3) {
  return new Promise((t) => setTimeout(t, E));
}
async function HS(E, t, e, o) {
  const a = Math.ceil(40180), { address: l } = await E.getAddress(), i = await (await _p(E)).roll({ player: l, save: e ?? [], stop: o ?? false }, { ...!o && { fee: parseInt(Ai.BASE_FEE) + a } });
  if (!o) {
    const d = [Al("TurnScore", l), Al("Dice", l), Al("Turn", l), Al("Turn", t)];
    if (Da.Api.isSimulationSuccess(i.simulation)) {
      const f = i.simulation.transactionData.build(), p = f.resources().instructions(), g = f.resources().diskReadBytes(), b = f.resources().writeBytes(), m = f.resourceFee().toBigInt() + BigInt(a), c = d.map((w) => w.toXDR("base64"));
      i.simulation.transactionData.setReadWrite(i.simulation.transactionData.getReadWrite().filter((w) => !c.includes(w.toXDR("base64"))).concat(d)).setReadOnly(i.simulation.transactionData.getReadOnly().filter((w) => !c.includes(w.toXDR("base64")))).setResources(p, Math.ceil(g + 1e3), Math.ceil(b + 1e3)).setResourceFee(m.toString());
    }
  }
  return Wl(i);
}
async function Wl(E) {
  var _a2, _b2, _c2, _d2, _e, _f2, _g2;
  let t = null;
  try {
    t = await E.signAndSend();
  } catch (e) {
    return console.debug("Transaction envelope:", E.built.toXDR()), console.error(e), e.toString().includes("TRY_AGAIN_LATER") ? (await ep(5e3), Wl(E)) : (console.log("Returning rejection..."), Promise.reject(e));
  } finally {
    console.debug("Transaction envelope:", (_a2 = E.signed) == null ? void 0 : _a2.toXDR()), (_c2 = (_b2 = t == null ? void 0 : t.sendTransactionResponse) == null ? void 0 : _b2.diagnosticEvents) == null ? void 0 : _c2.forEach((e) => {
      console.error(e.toXDR("base64"));
    });
  }
  switch (console.debug("Transaction status:", (_d2 = t.getTransactionResponse) == null ? void 0 : _d2.status), (_e = t.getTransactionResponse) == null ? void 0 : _e.status) {
    case Da.Api.GetTransactionStatus.SUCCESS:
    case Da.Api.GetTransactionStatus.FAILED:
      console.log(t.getTransactionResponse.resultMetaXdr.toXDR("base64"));
      break;
    default:
      console.log(t);
  }
  switch ((_f2 = t.getTransactionResponse) == null ? void 0 : _f2.status) {
    case Da.Api.GetTransactionStatus.SUCCESS:
      return Ai.scValToNative(t.getTransactionResponse.returnValue);
    case Da.Api.GetTransactionStatus.FAILED:
      (_g2 = t.getTransactionResponse.diagnosticEventsXdr) == null ? void 0 : _g2.forEach((e, o) => {
        console.error(`Event ${o + 1}:`, e), console.error(`Event ${o + 1}:`, e.toXDR("base64"));
      });
      break;
  }
}
function md(E) {
  const t = (s, i) => s.length >= i.length && i.every((u) => s.includes(u)), e = /* @__PURE__ */ new Map();
  E.forEach((s) => {
    e.set(s, (e.get(s) ?? 0) + 1);
  });
  const o = Array.from(e.keys()), a = [1, 2, 3, 4, 5, 6];
  let l = 0;
  return t(o, a) ? 1500 : (t(o, a.slice(0, -1)) ? (l += 500, e.forEach((s, i) => {
    i <= 5 && e.set(i, s - 1);
  })) : t(o, a.slice(1)) && (l += 750, e.forEach((s, i) => {
    i >= 2 && i <= 6 && e.set(i, s - 1);
  })), a.forEach((s) => {
    let i = Math.max(0, e.get(s) ?? 0);
    if (i < 3) return;
    let u = s === 1 ? 1e3 : s * 100;
    i > 3 && (u *= Math.pow(2, i - 3)), l += u, e.set(s, 0);
  }), l += 100 * (e.get(1) ?? 0), l += 50 * (e.get(5) ?? 0), e.set(1, 0), e.set(5, 0), Array.from(e.values()).some((s) => s > 0) ? 0 : l);
}
function Al(E, t) {
  return Ai.xdr.LedgerKey.contractData(new Ai.xdr.LedgerKeyContractData({ contract: new Ai.Address(xp).toScAddress(), key: Ai.xdr.ScVal.scvVec([Ai.nativeToScVal(E, { type: "symbol" }), Ai.nativeToScVal(t, { type: "address" })]), durability: Ai.xdr.ContractDataDurability.temporary() }));
}
function Kf(E) {
  if (E.length === 1) return `a ${E[0]}`;
  const t = E.length > 2 ? "," : "", e = Array.from(E).sort();
  return `${e.slice(0, -1).join(", ")}${t} and ${e.slice(-1)}`;
}
const Va = /* @__PURE__ */ Object.create(null);
Va.open = "0";
Va.close = "1";
Va.ping = "2";
Va.pong = "3";
Va.message = "4";
Va.upgrade = "5";
Va.noop = "6";
const Dl = /* @__PURE__ */ Object.create(null);
Object.keys(Va).forEach((E) => {
  Dl[Va[E]] = E;
});
const rp = { type: "error", data: "parser error" }, om = typeof Blob == "function" || typeof Blob < "u" && Object.prototype.toString.call(Blob) === "[object BlobConstructor]", im = typeof ArrayBuffer == "function", am = (E) => typeof ArrayBuffer.isView == "function" ? ArrayBuffer.isView(E) : E && E.buffer instanceof ArrayBuffer, Ep = ({ type: E, data: t }, e, o) => om && t instanceof Blob ? e ? o(t) : yd(t, o) : im && (t instanceof ArrayBuffer || am(t)) ? e ? o(t) : yd(new Blob([t]), o) : o(Va[E] + (t || "")), yd = (E, t) => {
  const e = new FileReader();
  return e.onload = function() {
    const o = e.result.split(",")[1];
    t("b" + (o || ""));
  }, e.readAsDataURL(E);
};
function gd(E) {
  return E instanceof Uint8Array ? E : E instanceof ArrayBuffer ? new Uint8Array(E) : new Uint8Array(E.buffer, E.byteOffset, E.byteLength);
}
let $f;
function GS(E, t) {
  if (om && E.data instanceof Blob) return E.data.arrayBuffer().then(gd).then(t);
  if (im && (E.data instanceof ArrayBuffer || am(E.data))) return t(gd(E.data));
  Ep(E, false, (e) => {
    $f || ($f = new TextEncoder()), t($f.encode(e));
  });
}
const vd = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/", xc = typeof Uint8Array > "u" ? [] : new Uint8Array(256);
for (let E = 0; E < vd.length; E++) xc[vd.charCodeAt(E)] = E;
const WS = (E) => {
  let t = E.length * 0.75, e = E.length, o, a = 0, l, s, i, u;
  E[E.length - 1] === "=" && (t--, E[E.length - 2] === "=" && t--);
  const d = new ArrayBuffer(t), f = new Uint8Array(d);
  for (o = 0; o < e; o += 4) l = xc[E.charCodeAt(o)], s = xc[E.charCodeAt(o + 1)], i = xc[E.charCodeAt(o + 2)], u = xc[E.charCodeAt(o + 3)], f[a++] = l << 2 | s >> 4, f[a++] = (s & 15) << 4 | i >> 2, f[a++] = (i & 3) << 6 | u & 63;
  return d;
}, XS = typeof ArrayBuffer == "function", Ap = (E, t) => {
  if (typeof E != "string") return { type: "message", data: sm(E, t) };
  const e = E.charAt(0);
  return e === "b" ? { type: "message", data: KS(E.substring(1), t) } : Dl[e] ? E.length > 1 ? { type: Dl[e], data: E.substring(1) } : { type: Dl[e] } : rp;
}, KS = (E, t) => {
  if (XS) {
    const e = WS(E);
    return sm(e, t);
  } else return { base64: true, data: E };
}, sm = (E, t) => {
  switch (t) {
    case "blob":
      return E instanceof Blob ? E : new Blob([E]);
    case "arraybuffer":
    default:
      return E instanceof ArrayBuffer ? E : E.buffer;
  }
}, um = "", $S = (E, t) => {
  const e = E.length, o = new Array(e);
  let a = 0;
  E.forEach((l, s) => {
    Ep(l, false, (i) => {
      o[s] = i, ++a === e && t(o.join(um));
    });
  });
}, YS = (E, t) => {
  const e = E.split(um), o = [];
  for (let a = 0; a < e.length; a++) {
    const l = Ap(e[a], t);
    if (o.push(l), l.type === "error") break;
  }
  return o;
};
function ZS() {
  return new TransformStream({ transform(E, t) {
    GS(E, (e) => {
      const o = e.length;
      let a;
      if (o < 126) a = new Uint8Array(1), new DataView(a.buffer).setUint8(0, o);
      else if (o < 65536) {
        a = new Uint8Array(3);
        const l = new DataView(a.buffer);
        l.setUint8(0, 126), l.setUint16(1, o);
      } else {
        a = new Uint8Array(9);
        const l = new DataView(a.buffer);
        l.setUint8(0, 127), l.setBigUint64(1, BigInt(o));
      }
      E.data && typeof E.data != "string" && (a[0] |= 128), t.enqueue(a), t.enqueue(e);
    });
  } });
}
let Yf;
function Tl(E) {
  return E.reduce((t, e) => t + e.length, 0);
}
function kl(E, t) {
  if (E[0].length === t) return E.shift();
  const e = new Uint8Array(t);
  let o = 0;
  for (let a = 0; a < t; a++) e[a] = E[0][o++], o === E[0].length && (E.shift(), o = 0);
  return E.length && o < E[0].length && (E[0] = E[0].slice(o)), e;
}
function QS(E, t) {
  Yf || (Yf = new TextDecoder());
  const e = [];
  let o = 0, a = -1, l = false;
  return new TransformStream({ transform(s, i) {
    for (e.push(s); ; ) {
      if (o === 0) {
        if (Tl(e) < 1) break;
        const u = kl(e, 1);
        l = (u[0] & 128) === 128, a = u[0] & 127, a < 126 ? o = 3 : a === 126 ? o = 1 : o = 2;
      } else if (o === 1) {
        if (Tl(e) < 2) break;
        const u = kl(e, 2);
        a = new DataView(u.buffer, u.byteOffset, u.length).getUint16(0), o = 3;
      } else if (o === 2) {
        if (Tl(e) < 8) break;
        const u = kl(e, 8), d = new DataView(u.buffer, u.byteOffset, u.length), f = d.getUint32(0);
        if (f > Math.pow(2, 21) - 1) {
          i.enqueue(rp);
          break;
        }
        a = f * Math.pow(2, 32) + d.getUint32(4), o = 3;
      } else {
        if (Tl(e) < a) break;
        const u = kl(e, a);
        i.enqueue(Ap(l ? u : Yf.decode(u), t)), o = 0;
      }
      if (a === 0 || a > E) {
        i.enqueue(rp);
        break;
      }
    }
  } });
}
const cm = 4;
function Ii(E) {
  if (E) return JS(E);
}
function JS(E) {
  for (var t in Ii.prototype) E[t] = Ii.prototype[t];
  return E;
}
Ii.prototype.on = Ii.prototype.addEventListener = function(E, t) {
  return this._callbacks = this._callbacks || {}, (this._callbacks["$" + E] = this._callbacks["$" + E] || []).push(t), this;
};
Ii.prototype.once = function(E, t) {
  function e() {
    this.off(E, e), t.apply(this, arguments);
  }
  return e.fn = t, this.on(E, e), this;
};
Ii.prototype.off = Ii.prototype.removeListener = Ii.prototype.removeAllListeners = Ii.prototype.removeEventListener = function(E, t) {
  if (this._callbacks = this._callbacks || {}, arguments.length == 0) return this._callbacks = {}, this;
  var e = this._callbacks["$" + E];
  if (!e) return this;
  if (arguments.length == 1) return delete this._callbacks["$" + E], this;
  for (var o, a = 0; a < e.length; a++) if (o = e[a], o === t || o.fn === t) {
    e.splice(a, 1);
    break;
  }
  return e.length === 0 && delete this._callbacks["$" + E], this;
};
Ii.prototype.emit = function(E) {
  this._callbacks = this._callbacks || {};
  for (var t = new Array(arguments.length - 1), e = this._callbacks["$" + E], o = 1; o < arguments.length; o++) t[o - 1] = arguments[o];
  if (e) {
    e = e.slice(0);
    for (var o = 0, a = e.length; o < a; ++o) e[o].apply(this, t);
  }
  return this;
};
Ii.prototype.emitReserved = Ii.prototype.emit;
Ii.prototype.listeners = function(E) {
  return this._callbacks = this._callbacks || {}, this._callbacks["$" + E] || [];
};
Ii.prototype.hasListeners = function(E) {
  return !!this.listeners(E).length;
};
const Zl = typeof Promise == "function" && typeof Promise.resolve == "function" ? (t) => Promise.resolve().then(t) : (t, e) => e(t, 0), ya = typeof self < "u" ? self : typeof window < "u" ? window : Function("return this")(), tx = "arraybuffer";
function lm(E, ...t) {
  return t.reduce((e, o) => (E.hasOwnProperty(o) && (e[o] = E[o]), e), {});
}
const ex = ya.setTimeout, rx = ya.clearTimeout;
function Ql(E, t) {
  t.useNativeTimers ? (E.setTimeoutFn = ex.bind(ya), E.clearTimeoutFn = rx.bind(ya)) : (E.setTimeoutFn = ya.setTimeout.bind(ya), E.clearTimeoutFn = ya.clearTimeout.bind(ya));
}
const nx = 1.33;
function ox(E) {
  return typeof E == "string" ? ix(E) : Math.ceil((E.byteLength || E.size) * nx);
}
function ix(E) {
  let t = 0, e = 0;
  for (let o = 0, a = E.length; o < a; o++) t = E.charCodeAt(o), t < 128 ? e += 1 : t < 2048 ? e += 2 : t < 55296 || t >= 57344 ? e += 3 : (o++, e += 4);
  return e;
}
function fm() {
  return Date.now().toString(36).substring(3) + Math.random().toString(36).substring(2, 5);
}
function ax(E) {
  let t = "";
  for (let e in E) E.hasOwnProperty(e) && (t.length && (t += "&"), t += encodeURIComponent(e) + "=" + encodeURIComponent(E[e]));
  return t;
}
function sx(E) {
  let t = {}, e = E.split("&");
  for (let o = 0, a = e.length; o < a; o++) {
    let l = e[o].split("=");
    t[decodeURIComponent(l[0])] = decodeURIComponent(l[1]);
  }
  return t;
}
class ux extends Error {
  constructor(t, e, o) {
    super(t), this.description = e, this.context = o, this.type = "TransportError";
  }
}
class Tp extends Ii {
  constructor(t) {
    super(), this.writable = false, Ql(this, t), this.opts = t, this.query = t.query, this.socket = t.socket, this.supportsBinary = !t.forceBase64;
  }
  onError(t, e, o) {
    return super.emitReserved("error", new ux(t, e, o)), this;
  }
  open() {
    return this.readyState = "opening", this.doOpen(), this;
  }
  close() {
    return (this.readyState === "opening" || this.readyState === "open") && (this.doClose(), this.onClose()), this;
  }
  send(t) {
    this.readyState === "open" && this.write(t);
  }
  onOpen() {
    this.readyState = "open", this.writable = true, super.emitReserved("open");
  }
  onData(t) {
    const e = Ap(t, this.socket.binaryType);
    this.onPacket(e);
  }
  onPacket(t) {
    super.emitReserved("packet", t);
  }
  onClose(t) {
    this.readyState = "closed", super.emitReserved("close", t);
  }
  pause(t) {
  }
  createUri(t, e = {}) {
    return t + "://" + this._hostname() + this._port() + this.opts.path + this._query(e);
  }
  _hostname() {
    const t = this.opts.hostname;
    return t.indexOf(":") === -1 ? t : "[" + t + "]";
  }
  _port() {
    return this.opts.port && (this.opts.secure && +(this.opts.port !== 443) || !this.opts.secure && Number(this.opts.port) !== 80) ? ":" + this.opts.port : "";
  }
  _query(t) {
    const e = ax(t);
    return e.length ? "?" + e : "";
  }
}
class cx extends Tp {
  constructor() {
    super(...arguments), this._polling = false;
  }
  get name() {
    return "polling";
  }
  doOpen() {
    this._poll();
  }
  pause(t) {
    this.readyState = "pausing";
    const e = () => {
      this.readyState = "paused", t();
    };
    if (this._polling || !this.writable) {
      let o = 0;
      this._polling && (o++, this.once("pollComplete", function() {
        --o || e();
      })), this.writable || (o++, this.once("drain", function() {
        --o || e();
      }));
    } else e();
  }
  _poll() {
    this._polling = true, this.doPoll(), this.emitReserved("poll");
  }
  onData(t) {
    const e = (o) => {
      if (this.readyState === "opening" && o.type === "open" && this.onOpen(), o.type === "close") return this.onClose({ description: "transport closed by the server" }), false;
      this.onPacket(o);
    };
    YS(t, this.socket.binaryType).forEach(e), this.readyState !== "closed" && (this._polling = false, this.emitReserved("pollComplete"), this.readyState === "open" && this._poll());
  }
  doClose() {
    const t = () => {
      this.write([{ type: "close" }]);
    };
    this.readyState === "open" ? t() : this.once("open", t);
  }
  write(t) {
    this.writable = false, $S(t, (e) => {
      this.doWrite(e, () => {
        this.writable = true, this.emitReserved("drain");
      });
    });
  }
  uri() {
    const t = this.opts.secure ? "https" : "http", e = this.query || {};
    return this.opts.timestampRequests !== false && (e[this.opts.timestampParam] = fm()), !this.supportsBinary && !e.sid && (e.b64 = 1), this.createUri(t, e);
  }
}
let pm = false;
try {
  pm = typeof XMLHttpRequest < "u" && "withCredentials" in new XMLHttpRequest();
} catch {
}
const lx = pm;
function fx() {
}
class px extends cx {
  constructor(t) {
    if (super(t), typeof location < "u") {
      const e = location.protocol === "https:";
      let o = location.port;
      o || (o = e ? "443" : "80"), this.xd = typeof location < "u" && t.hostname !== location.hostname || o !== t.port;
    }
  }
  doWrite(t, e) {
    const o = this.request({ method: "POST", data: t });
    o.on("success", e), o.on("error", (a, l) => {
      this.onError("xhr post error", a, l);
    });
  }
  doPoll() {
    const t = this.request();
    t.on("data", this.onData.bind(this)), t.on("error", (e, o) => {
      this.onError("xhr poll error", e, o);
    }), this.pollXhr = t;
  }
}
let Cu = class Fl extends Ii {
  constructor(t, e, o) {
    super(), this.createRequest = t, Ql(this, o), this._opts = o, this._method = o.method || "GET", this._uri = e, this._data = o.data !== void 0 ? o.data : null, this._create();
  }
  _create() {
    var t;
    const e = lm(this._opts, "agent", "pfx", "key", "passphrase", "cert", "ca", "ciphers", "rejectUnauthorized", "autoUnref");
    e.xdomain = !!this._opts.xd;
    const o = this._xhr = this.createRequest(e);
    try {
      o.open(this._method, this._uri, true);
      try {
        if (this._opts.extraHeaders) {
          o.setDisableHeaderCheck && o.setDisableHeaderCheck(true);
          for (let a in this._opts.extraHeaders) this._opts.extraHeaders.hasOwnProperty(a) && o.setRequestHeader(a, this._opts.extraHeaders[a]);
        }
      } catch {
      }
      if (this._method === "POST") try {
        o.setRequestHeader("Content-type", "text/plain;charset=UTF-8");
      } catch {
      }
      try {
        o.setRequestHeader("Accept", "*/*");
      } catch {
      }
      (t = this._opts.cookieJar) === null || t === void 0 || t.addCookies(o), "withCredentials" in o && (o.withCredentials = this._opts.withCredentials), this._opts.requestTimeout && (o.timeout = this._opts.requestTimeout), o.onreadystatechange = () => {
        var a;
        o.readyState === 3 && ((a = this._opts.cookieJar) === null || a === void 0 || a.parseCookies(o.getResponseHeader("set-cookie"))), o.readyState === 4 && (o.status === 200 || o.status === 1223 ? this._onLoad() : this.setTimeoutFn(() => {
          this._onError(typeof o.status == "number" ? o.status : 0);
        }, 0));
      }, o.send(this._data);
    } catch (a) {
      this.setTimeoutFn(() => {
        this._onError(a);
      }, 0);
      return;
    }
    typeof document < "u" && (this._index = Fl.requestsCount++, Fl.requests[this._index] = this);
  }
  _onError(t) {
    this.emitReserved("error", t, this._xhr), this._cleanup(true);
  }
  _cleanup(t) {
    if (!(typeof this._xhr > "u" || this._xhr === null)) {
      if (this._xhr.onreadystatechange = fx, t) try {
        this._xhr.abort();
      } catch {
      }
      typeof document < "u" && delete Fl.requests[this._index], this._xhr = null;
    }
  }
  _onLoad() {
    const t = this._xhr.responseText;
    t !== null && (this.emitReserved("data", t), this.emitReserved("success"), this._cleanup());
  }
  abort() {
    this._cleanup();
  }
};
Cu.requestsCount = 0;
Cu.requests = {};
if (typeof document < "u") {
  if (typeof attachEvent == "function") attachEvent("onunload", bd);
  else if (typeof addEventListener == "function") {
    const E = "onpagehide" in ya ? "pagehide" : "unload";
    addEventListener(E, bd, false);
  }
}
function bd() {
  for (let E in Cu.requests) Cu.requests.hasOwnProperty(E) && Cu.requests[E].abort();
}
const hx = function() {
  const E = hm({ xdomain: false });
  return E && E.responseType !== null;
}();
class dx extends px {
  constructor(t) {
    super(t);
    const e = t && t.forceBase64;
    this.supportsBinary = hx && !e;
  }
  request(t = {}) {
    return Object.assign(t, { xd: this.xd }, this.opts), new Cu(hm, this.uri(), t);
  }
}
function hm(E) {
  const t = E.xdomain;
  try {
    if (typeof XMLHttpRequest < "u" && (!t || lx)) return new XMLHttpRequest();
  } catch {
  }
  if (!t) try {
    return new ya[["Active"].concat("Object").join("X")]("Microsoft.XMLHTTP");
  } catch {
  }
}
const dm = typeof navigator < "u" && typeof navigator.product == "string" && navigator.product.toLowerCase() === "reactnative";
class mx extends Tp {
  get name() {
    return "websocket";
  }
  doOpen() {
    const t = this.uri(), e = this.opts.protocols, o = dm ? {} : lm(this.opts, "agent", "perMessageDeflate", "pfx", "key", "passphrase", "cert", "ca", "ciphers", "rejectUnauthorized", "localAddress", "protocolVersion", "origin", "maxPayload", "family", "checkServerIdentity");
    this.opts.extraHeaders && (o.headers = this.opts.extraHeaders);
    try {
      this.ws = this.createSocket(t, e, o);
    } catch (a) {
      return this.emitReserved("error", a);
    }
    this.ws.binaryType = this.socket.binaryType, this.addEventListeners();
  }
  addEventListeners() {
    this.ws.onopen = () => {
      this.opts.autoUnref && this.ws._socket.unref(), this.onOpen();
    }, this.ws.onclose = (t) => this.onClose({ description: "websocket connection closed", context: t }), this.ws.onmessage = (t) => this.onData(t.data), this.ws.onerror = (t) => this.onError("websocket error", t);
  }
  write(t) {
    this.writable = false;
    for (let e = 0; e < t.length; e++) {
      const o = t[e], a = e === t.length - 1;
      Ep(o, this.supportsBinary, (l) => {
        try {
          this.doWrite(o, l);
        } catch {
        }
        a && Zl(() => {
          this.writable = true, this.emitReserved("drain");
        }, this.setTimeoutFn);
      });
    }
  }
  doClose() {
    typeof this.ws < "u" && (this.ws.onerror = () => {
    }, this.ws.close(), this.ws = null);
  }
  uri() {
    const t = this.opts.secure ? "wss" : "ws", e = this.query || {};
    return this.opts.timestampRequests && (e[this.opts.timestampParam] = fm()), this.supportsBinary || (e.b64 = 1), this.createUri(t, e);
  }
}
const Zf = ya.WebSocket || ya.MozWebSocket;
class yx extends mx {
  createSocket(t, e, o) {
    return dm ? new Zf(t, e, o) : e ? new Zf(t, e) : new Zf(t);
  }
  doWrite(t, e) {
    this.ws.send(e);
  }
}
class gx extends Tp {
  get name() {
    return "webtransport";
  }
  doOpen() {
    try {
      this._transport = new WebTransport(this.createUri("https"), this.opts.transportOptions[this.name]);
    } catch (t) {
      return this.emitReserved("error", t);
    }
    this._transport.closed.then(() => {
      this.onClose();
    }).catch((t) => {
      this.onError("webtransport error", t);
    }), this._transport.ready.then(() => {
      this._transport.createBidirectionalStream().then((t) => {
        const e = QS(Number.MAX_SAFE_INTEGER, this.socket.binaryType), o = t.readable.pipeThrough(e).getReader(), a = ZS();
        a.readable.pipeTo(t.writable), this._writer = a.writable.getWriter();
        const l = () => {
          o.read().then(({ done: i, value: u }) => {
            i || (this.onPacket(u), l());
          }).catch((i) => {
          });
        };
        l();
        const s = { type: "open" };
        this.query.sid && (s.data = `{"sid":"${this.query.sid}"}`), this._writer.write(s).then(() => this.onOpen());
      });
    });
  }
  write(t) {
    this.writable = false;
    for (let e = 0; e < t.length; e++) {
      const o = t[e], a = e === t.length - 1;
      this._writer.write(o).then(() => {
        a && Zl(() => {
          this.writable = true, this.emitReserved("drain");
        }, this.setTimeoutFn);
      });
    }
  }
  doClose() {
    var t;
    (t = this._transport) === null || t === void 0 || t.close();
  }
}
const vx = { websocket: yx, webtransport: gx, polling: dx }, bx = /^(?:(?![^:@\/?#]+:[^:@\/]*@)(http|https|ws|wss):\/\/)?((?:(([^:@\/?#]*)(?::([^:@\/?#]*))?)?@)?((?:[a-f0-9]{0,4}:){2,7}[a-f0-9]{0,4}|[^:\/?#]*)(?::(\d*))?)(((\/(?:[^?#](?![^?#\/]*\.[^?#\/.]+(?:[?#]|$)))*\/?)?([^?#\/]*))(?:\?([^#]*))?(?:#(.*))?)/, wx = ["source", "protocol", "authority", "userInfo", "user", "password", "host", "port", "relative", "path", "directory", "file", "query", "anchor"];
function np(E) {
  if (E.length > 8e3) throw "URI too long";
  const t = E, e = E.indexOf("["), o = E.indexOf("]");
  e != -1 && o != -1 && (E = E.substring(0, e) + E.substring(e, o).replace(/:/g, ";") + E.substring(o, E.length));
  let a = bx.exec(E || ""), l = {}, s = 14;
  for (; s--; ) l[wx[s]] = a[s] || "";
  return e != -1 && o != -1 && (l.source = t, l.host = l.host.substring(1, l.host.length - 1).replace(/;/g, ":"), l.authority = l.authority.replace("[", "").replace("]", "").replace(/;/g, ":"), l.ipv6uri = true), l.pathNames = Sx(l, l.path), l.queryKey = xx(l, l.query), l;
}
function Sx(E, t) {
  const e = /\/{2,9}/g, o = t.replace(e, "/").split("/");
  return (t.slice(0, 1) == "/" || t.length === 0) && o.splice(0, 1), t.slice(-1) == "/" && o.splice(o.length - 1, 1), o;
}
function xx(E, t) {
  const e = {};
  return t.replace(/(?:^|&)([^&=]*)=?([^&]*)/g, function(o, a, l) {
    a && (e[a] = l);
  }), e;
}
const op = typeof addEventListener == "function" && typeof removeEventListener == "function", Ul = [];
op && addEventListener("offline", () => {
  Ul.forEach((E) => E());
}, false);
class Ts extends Ii {
  constructor(t, e) {
    if (super(), this.binaryType = tx, this.writeBuffer = [], this._prevBufferLen = 0, this._pingInterval = -1, this._pingTimeout = -1, this._maxPayload = -1, this._pingTimeoutTime = 1 / 0, t && typeof t == "object" && (e = t, t = null), t) {
      const o = np(t);
      e.hostname = o.host, e.secure = o.protocol === "https" || o.protocol === "wss", e.port = o.port, o.query && (e.query = o.query);
    } else e.host && (e.hostname = np(e.host).host);
    Ql(this, e), this.secure = e.secure != null ? e.secure : typeof location < "u" && location.protocol === "https:", e.hostname && !e.port && (e.port = this.secure ? "443" : "80"), this.hostname = e.hostname || (typeof location < "u" ? location.hostname : "localhost"), this.port = e.port || (typeof location < "u" && location.port ? location.port : this.secure ? "443" : "80"), this.transports = [], this._transportsByName = {}, e.transports.forEach((o) => {
      const a = o.prototype.name;
      this.transports.push(a), this._transportsByName[a] = o;
    }), this.opts = Object.assign({ path: "/engine.io", agent: false, withCredentials: false, upgrade: true, timestampParam: "t", rememberUpgrade: false, addTrailingSlash: true, rejectUnauthorized: true, perMessageDeflate: { threshold: 1024 }, transportOptions: {}, closeOnBeforeunload: false }, e), this.opts.path = this.opts.path.replace(/\/$/, "") + (this.opts.addTrailingSlash ? "/" : ""), typeof this.opts.query == "string" && (this.opts.query = sx(this.opts.query)), op && (this.opts.closeOnBeforeunload && (this._beforeunloadEventListener = () => {
      this.transport && (this.transport.removeAllListeners(), this.transport.close());
    }, addEventListener("beforeunload", this._beforeunloadEventListener, false)), this.hostname !== "localhost" && (this._offlineEventListener = () => {
      this._onClose("transport close", { description: "network connection lost" });
    }, Ul.push(this._offlineEventListener))), this.opts.withCredentials && (this._cookieJar = void 0), this._open();
  }
  createTransport(t) {
    const e = Object.assign({}, this.opts.query);
    e.EIO = cm, e.transport = t, this.id && (e.sid = this.id);
    const o = Object.assign({}, this.opts, { query: e, socket: this, hostname: this.hostname, secure: this.secure, port: this.port }, this.opts.transportOptions[t]);
    return new this._transportsByName[t](o);
  }
  _open() {
    if (this.transports.length === 0) {
      this.setTimeoutFn(() => {
        this.emitReserved("error", "No transports available");
      }, 0);
      return;
    }
    const t = this.opts.rememberUpgrade && Ts.priorWebsocketSuccess && this.transports.indexOf("websocket") !== -1 ? "websocket" : this.transports[0];
    this.readyState = "opening";
    const e = this.createTransport(t);
    e.open(), this.setTransport(e);
  }
  setTransport(t) {
    this.transport && this.transport.removeAllListeners(), this.transport = t, t.on("drain", this._onDrain.bind(this)).on("packet", this._onPacket.bind(this)).on("error", this._onError.bind(this)).on("close", (e) => this._onClose("transport close", e));
  }
  onOpen() {
    this.readyState = "open", Ts.priorWebsocketSuccess = this.transport.name === "websocket", this.emitReserved("open"), this.flush();
  }
  _onPacket(t) {
    if (this.readyState === "opening" || this.readyState === "open" || this.readyState === "closing") switch (this.emitReserved("packet", t), this.emitReserved("heartbeat"), t.type) {
      case "open":
        this.onHandshake(JSON.parse(t.data));
        break;
      case "ping":
        this._sendPacket("pong"), this.emitReserved("ping"), this.emitReserved("pong"), this._resetPingTimeout();
        break;
      case "error":
        const e = new Error("server error");
        e.code = t.data, this._onError(e);
        break;
      case "message":
        this.emitReserved("data", t.data), this.emitReserved("message", t.data);
        break;
    }
  }
  onHandshake(t) {
    this.emitReserved("handshake", t), this.id = t.sid, this.transport.query.sid = t.sid, this._pingInterval = t.pingInterval, this._pingTimeout = t.pingTimeout, this._maxPayload = t.maxPayload, this.onOpen(), this.readyState !== "closed" && this._resetPingTimeout();
  }
  _resetPingTimeout() {
    this.clearTimeoutFn(this._pingTimeoutTimer);
    const t = this._pingInterval + this._pingTimeout;
    this._pingTimeoutTime = Date.now() + t, this._pingTimeoutTimer = this.setTimeoutFn(() => {
      this._onClose("ping timeout");
    }, t), this.opts.autoUnref && this._pingTimeoutTimer.unref();
  }
  _onDrain() {
    this.writeBuffer.splice(0, this._prevBufferLen), this._prevBufferLen = 0, this.writeBuffer.length === 0 ? this.emitReserved("drain") : this.flush();
  }
  flush() {
    if (this.readyState !== "closed" && this.transport.writable && !this.upgrading && this.writeBuffer.length) {
      const t = this._getWritablePackets();
      this.transport.send(t), this._prevBufferLen = t.length, this.emitReserved("flush");
    }
  }
  _getWritablePackets() {
    if (!(this._maxPayload && this.transport.name === "polling" && this.writeBuffer.length > 1)) return this.writeBuffer;
    let e = 1;
    for (let o = 0; o < this.writeBuffer.length; o++) {
      const a = this.writeBuffer[o].data;
      if (a && (e += ox(a)), o > 0 && e > this._maxPayload) return this.writeBuffer.slice(0, o);
      e += 2;
    }
    return this.writeBuffer;
  }
  _hasPingExpired() {
    if (!this._pingTimeoutTime) return true;
    const t = Date.now() > this._pingTimeoutTime;
    return t && (this._pingTimeoutTime = 0, Zl(() => {
      this._onClose("ping timeout");
    }, this.setTimeoutFn)), t;
  }
  write(t, e, o) {
    return this._sendPacket("message", t, e, o), this;
  }
  send(t, e, o) {
    return this._sendPacket("message", t, e, o), this;
  }
  _sendPacket(t, e, o, a) {
    if (typeof e == "function" && (a = e, e = void 0), typeof o == "function" && (a = o, o = null), this.readyState === "closing" || this.readyState === "closed") return;
    o = o || {}, o.compress = o.compress !== false;
    const l = { type: t, data: e, options: o };
    this.emitReserved("packetCreate", l), this.writeBuffer.push(l), a && this.once("flush", a), this.flush();
  }
  close() {
    const t = () => {
      this._onClose("forced close"), this.transport.close();
    }, e = () => {
      this.off("upgrade", e), this.off("upgradeError", e), t();
    }, o = () => {
      this.once("upgrade", e), this.once("upgradeError", e);
    };
    return (this.readyState === "opening" || this.readyState === "open") && (this.readyState = "closing", this.writeBuffer.length ? this.once("drain", () => {
      this.upgrading ? o() : t();
    }) : this.upgrading ? o() : t()), this;
  }
  _onError(t) {
    if (Ts.priorWebsocketSuccess = false, this.opts.tryAllTransports && this.transports.length > 1 && this.readyState === "opening") return this.transports.shift(), this._open();
    this.emitReserved("error", t), this._onClose("transport error", t);
  }
  _onClose(t, e) {
    if (this.readyState === "opening" || this.readyState === "open" || this.readyState === "closing") {
      if (this.clearTimeoutFn(this._pingTimeoutTimer), this.transport.removeAllListeners("close"), this.transport.close(), this.transport.removeAllListeners(), op && (this._beforeunloadEventListener && removeEventListener("beforeunload", this._beforeunloadEventListener, false), this._offlineEventListener)) {
        const o = Ul.indexOf(this._offlineEventListener);
        o !== -1 && Ul.splice(o, 1);
      }
      this.readyState = "closed", this.id = null, this.emitReserved("close", t, e), this.writeBuffer = [], this._prevBufferLen = 0;
    }
  }
}
Ts.protocol = cm;
class _x extends Ts {
  constructor() {
    super(...arguments), this._upgrades = [];
  }
  onOpen() {
    if (super.onOpen(), this.readyState === "open" && this.opts.upgrade) for (let t = 0; t < this._upgrades.length; t++) this._probe(this._upgrades[t]);
  }
  _probe(t) {
    let e = this.createTransport(t), o = false;
    Ts.priorWebsocketSuccess = false;
    const a = () => {
      o || (e.send([{ type: "ping", data: "probe" }]), e.once("packet", (p) => {
        if (!o) if (p.type === "pong" && p.data === "probe") {
          if (this.upgrading = true, this.emitReserved("upgrading", e), !e) return;
          Ts.priorWebsocketSuccess = e.name === "websocket", this.transport.pause(() => {
            o || this.readyState !== "closed" && (f(), this.setTransport(e), e.send([{ type: "upgrade" }]), this.emitReserved("upgrade", e), e = null, this.upgrading = false, this.flush());
          });
        } else {
          const g = new Error("probe error");
          g.transport = e.name, this.emitReserved("upgradeError", g);
        }
      }));
    };
    function l() {
      o || (o = true, f(), e.close(), e = null);
    }
    const s = (p) => {
      const g = new Error("probe error: " + p);
      g.transport = e.name, l(), this.emitReserved("upgradeError", g);
    };
    function i() {
      s("transport closed");
    }
    function u() {
      s("socket closed");
    }
    function d(p) {
      e && p.name !== e.name && l();
    }
    const f = () => {
      e.removeListener("open", a), e.removeListener("error", s), e.removeListener("close", i), this.off("close", u), this.off("upgrading", d);
    };
    e.once("open", a), e.once("error", s), e.once("close", i), this.once("close", u), this.once("upgrading", d), this._upgrades.indexOf("webtransport") !== -1 && t !== "webtransport" ? this.setTimeoutFn(() => {
      o || e.open();
    }, 200) : e.open();
  }
  onHandshake(t) {
    this._upgrades = this._filterUpgrades(t.upgrades), super.onHandshake(t);
  }
  _filterUpgrades(t) {
    const e = [];
    for (let o = 0; o < t.length; o++) ~this.transports.indexOf(t[o]) && e.push(t[o]);
    return e;
  }
}
let Ex = class extends _x {
  constructor(t, e = {}) {
    const o = typeof t == "object" ? t : e;
    (!o.transports || o.transports && typeof o.transports[0] == "string") && (o.transports = (o.transports || ["polling", "websocket", "webtransport"]).map((a) => vx[a]).filter((a) => !!a)), super(t, o);
  }
};
function Ax(E, t = "", e) {
  let o = E;
  e = e || typeof location < "u" && location, E == null && (E = e.protocol + "//" + e.host), typeof E == "string" && (E.charAt(0) === "/" && (E.charAt(1) === "/" ? E = e.protocol + E : E = e.host + E), /^(https?|wss?):\/\//.test(E) || (typeof e < "u" ? E = e.protocol + "//" + E : E = "https://" + E), o = np(E)), o.port || (/^(http|ws)$/.test(o.protocol) ? o.port = "80" : /^(http|ws)s$/.test(o.protocol) && (o.port = "443")), o.path = o.path || "/";
  const l = o.host.indexOf(":") !== -1 ? "[" + o.host + "]" : o.host;
  return o.id = o.protocol + "://" + l + ":" + o.port + t, o.href = o.protocol + "://" + l + (e && e.port === o.port ? "" : ":" + o.port), o;
}
const Tx = typeof ArrayBuffer == "function", kx = (E) => typeof ArrayBuffer.isView == "function" ? ArrayBuffer.isView(E) : E.buffer instanceof ArrayBuffer, mm = Object.prototype.toString, Ox = typeof Blob == "function" || typeof Blob < "u" && mm.call(Blob) === "[object BlobConstructor]", Px = typeof File == "function" || typeof File < "u" && mm.call(File) === "[object FileConstructor]";
function kp(E) {
  return Tx && (E instanceof ArrayBuffer || kx(E)) || Ox && E instanceof Blob || Px && E instanceof File;
}
function jl(E, t) {
  if (!E || typeof E != "object") return false;
  if (Array.isArray(E)) {
    for (let e = 0, o = E.length; e < o; e++) if (jl(E[e])) return true;
    return false;
  }
  if (kp(E)) return true;
  if (E.toJSON && typeof E.toJSON == "function" && arguments.length === 1) return jl(E.toJSON(), true);
  for (const e in E) if (Object.prototype.hasOwnProperty.call(E, e) && jl(E[e])) return true;
  return false;
}
function Cx(E) {
  const t = [], e = E.data, o = E;
  return o.data = ip(e, t), o.attachments = t.length, { packet: o, buffers: t };
}
function ip(E, t) {
  if (!E) return E;
  if (kp(E)) {
    const e = { _placeholder: true, num: t.length };
    return t.push(E), e;
  } else if (Array.isArray(E)) {
    const e = new Array(E.length);
    for (let o = 0; o < E.length; o++) e[o] = ip(E[o], t);
    return e;
  } else if (typeof E == "object" && !(E instanceof Date)) {
    const e = {};
    for (const o in E) Object.prototype.hasOwnProperty.call(E, o) && (e[o] = ip(E[o], t));
    return e;
  }
  return E;
}
function Rx(E, t) {
  return E.data = ap(E.data, t), delete E.attachments, E;
}
function ap(E, t) {
  if (!E) return E;
  if (E && E._placeholder === true) {
    if (typeof E.num == "number" && E.num >= 0 && E.num < t.length) return t[E.num];
    throw new Error("illegal attachments");
  } else if (Array.isArray(E)) for (let e = 0; e < E.length; e++) E[e] = ap(E[e], t);
  else if (typeof E == "object") for (const e in E) Object.prototype.hasOwnProperty.call(E, e) && (E[e] = ap(E[e], t));
  return E;
}
const Ix = ["connect", "connect_error", "disconnect", "disconnecting", "newListener", "removeListener"], Mx = 5;
var $o;
(function(E) {
  E[E.CONNECT = 0] = "CONNECT", E[E.DISCONNECT = 1] = "DISCONNECT", E[E.EVENT = 2] = "EVENT", E[E.ACK = 3] = "ACK", E[E.CONNECT_ERROR = 4] = "CONNECT_ERROR", E[E.BINARY_EVENT = 5] = "BINARY_EVENT", E[E.BINARY_ACK = 6] = "BINARY_ACK";
})($o || ($o = {}));
class Bx {
  constructor(t) {
    this.replacer = t;
  }
  encode(t) {
    return (t.type === $o.EVENT || t.type === $o.ACK) && jl(t) ? this.encodeAsBinary({ type: t.type === $o.EVENT ? $o.BINARY_EVENT : $o.BINARY_ACK, nsp: t.nsp, data: t.data, id: t.id }) : [this.encodeAsString(t)];
  }
  encodeAsString(t) {
    let e = "" + t.type;
    return (t.type === $o.BINARY_EVENT || t.type === $o.BINARY_ACK) && (e += t.attachments + "-"), t.nsp && t.nsp !== "/" && (e += t.nsp + ","), t.id != null && (e += t.id), t.data != null && (e += JSON.stringify(t.data, this.replacer)), e;
  }
  encodeAsBinary(t) {
    const e = Cx(t), o = this.encodeAsString(e.packet), a = e.buffers;
    return a.unshift(o), a;
  }
}
function wd(E) {
  return Object.prototype.toString.call(E) === "[object Object]";
}
class Op extends Ii {
  constructor(t) {
    super(), this.reviver = t;
  }
  add(t) {
    let e;
    if (typeof t == "string") {
      if (this.reconstructor) throw new Error("got plaintext data when reconstructing a packet");
      e = this.decodeString(t);
      const o = e.type === $o.BINARY_EVENT;
      o || e.type === $o.BINARY_ACK ? (e.type = o ? $o.EVENT : $o.ACK, this.reconstructor = new Lx(e), e.attachments === 0 && super.emitReserved("decoded", e)) : super.emitReserved("decoded", e);
    } else if (kp(t) || t.base64) if (this.reconstructor) e = this.reconstructor.takeBinaryData(t), e && (this.reconstructor = null, super.emitReserved("decoded", e));
    else throw new Error("got binary data when not reconstructing a packet");
    else throw new Error("Unknown type: " + t);
  }
  decodeString(t) {
    let e = 0;
    const o = { type: Number(t.charAt(0)) };
    if ($o[o.type] === void 0) throw new Error("unknown packet type " + o.type);
    if (o.type === $o.BINARY_EVENT || o.type === $o.BINARY_ACK) {
      const l = e + 1;
      for (; t.charAt(++e) !== "-" && e != t.length; ) ;
      const s = t.substring(l, e);
      if (s != Number(s) || t.charAt(e) !== "-") throw new Error("Illegal attachments");
      o.attachments = Number(s);
    }
    if (t.charAt(e + 1) === "/") {
      const l = e + 1;
      for (; ++e && !(t.charAt(e) === "," || e === t.length); ) ;
      o.nsp = t.substring(l, e);
    } else o.nsp = "/";
    const a = t.charAt(e + 1);
    if (a !== "" && Number(a) == a) {
      const l = e + 1;
      for (; ++e; ) {
        const s = t.charAt(e);
        if (s == null || Number(s) != s) {
          --e;
          break;
        }
        if (e === t.length) break;
      }
      o.id = Number(t.substring(l, e + 1));
    }
    if (t.charAt(++e)) {
      const l = this.tryParse(t.substr(e));
      if (Op.isPayloadValid(o.type, l)) o.data = l;
      else throw new Error("invalid payload");
    }
    return o;
  }
  tryParse(t) {
    try {
      return JSON.parse(t, this.reviver);
    } catch {
      return false;
    }
  }
  static isPayloadValid(t, e) {
    switch (t) {
      case $o.CONNECT:
        return wd(e);
      case $o.DISCONNECT:
        return e === void 0;
      case $o.CONNECT_ERROR:
        return typeof e == "string" || wd(e);
      case $o.EVENT:
      case $o.BINARY_EVENT:
        return Array.isArray(e) && (typeof e[0] == "number" || typeof e[0] == "string" && Ix.indexOf(e[0]) === -1);
      case $o.ACK:
      case $o.BINARY_ACK:
        return Array.isArray(e);
    }
  }
  destroy() {
    this.reconstructor && (this.reconstructor.finishedReconstruction(), this.reconstructor = null);
  }
}
class Lx {
  constructor(t) {
    this.packet = t, this.buffers = [], this.reconPack = t;
  }
  takeBinaryData(t) {
    if (this.buffers.push(t), this.buffers.length === this.reconPack.attachments) {
      const e = Rx(this.reconPack, this.buffers);
      return this.finishedReconstruction(), e;
    }
    return null;
  }
  finishedReconstruction() {
    this.reconPack = null, this.buffers = [];
  }
}
const Nx = Object.freeze(Object.defineProperty({ __proto__: null, Decoder: Op, Encoder: Bx, get PacketType() {
  return $o;
}, protocol: Mx }, Symbol.toStringTag, { value: "Module" }));
function ka(E, t, e) {
  return E.on(t, e), function() {
    E.off(t, e);
  };
}
const Dx = Object.freeze({ connect: 1, connect_error: 1, disconnect: 1, disconnecting: 1, newListener: 1, removeListener: 1 });
class ym extends Ii {
  constructor(t, e, o) {
    super(), this.connected = false, this.recovered = false, this.receiveBuffer = [], this.sendBuffer = [], this._queue = [], this._queueSeq = 0, this.ids = 0, this.acks = {}, this.flags = {}, this.io = t, this.nsp = e, o && o.auth && (this.auth = o.auth), this._opts = Object.assign({}, o), this.io._autoConnect && this.open();
  }
  get disconnected() {
    return !this.connected;
  }
  subEvents() {
    if (this.subs) return;
    const t = this.io;
    this.subs = [ka(t, "open", this.onopen.bind(this)), ka(t, "packet", this.onpacket.bind(this)), ka(t, "error", this.onerror.bind(this)), ka(t, "close", this.onclose.bind(this))];
  }
  get active() {
    return !!this.subs;
  }
  connect() {
    return this.connected ? this : (this.subEvents(), this.io._reconnecting || this.io.open(), this.io._readyState === "open" && this.onopen(), this);
  }
  open() {
    return this.connect();
  }
  send(...t) {
    return t.unshift("message"), this.emit.apply(this, t), this;
  }
  emit(t, ...e) {
    var o, a, l;
    if (Dx.hasOwnProperty(t)) throw new Error('"' + t.toString() + '" is a reserved event name');
    if (e.unshift(t), this._opts.retries && !this.flags.fromQueue && !this.flags.volatile) return this._addToQueue(e), this;
    const s = { type: $o.EVENT, data: e };
    if (s.options = {}, s.options.compress = this.flags.compress !== false, typeof e[e.length - 1] == "function") {
      const f = this.ids++, p = e.pop();
      this._registerAckCallback(f, p), s.id = f;
    }
    const i = (a = (o = this.io.engine) === null || o === void 0 ? void 0 : o.transport) === null || a === void 0 ? void 0 : a.writable, u = this.connected && !(!((l = this.io.engine) === null || l === void 0) && l._hasPingExpired());
    return this.flags.volatile && !i || (u ? (this.notifyOutgoingListeners(s), this.packet(s)) : this.sendBuffer.push(s)), this.flags = {}, this;
  }
  _registerAckCallback(t, e) {
    var o;
    const a = (o = this.flags.timeout) !== null && o !== void 0 ? o : this._opts.ackTimeout;
    if (a === void 0) {
      this.acks[t] = e;
      return;
    }
    const l = this.io.setTimeoutFn(() => {
      delete this.acks[t];
      for (let i = 0; i < this.sendBuffer.length; i++) this.sendBuffer[i].id === t && this.sendBuffer.splice(i, 1);
      e.call(this, new Error("operation has timed out"));
    }, a), s = (...i) => {
      this.io.clearTimeoutFn(l), e.apply(this, i);
    };
    s.withError = true, this.acks[t] = s;
  }
  emitWithAck(t, ...e) {
    return new Promise((o, a) => {
      const l = (s, i) => s ? a(s) : o(i);
      l.withError = true, e.push(l), this.emit(t, ...e);
    });
  }
  _addToQueue(t) {
    let e;
    typeof t[t.length - 1] == "function" && (e = t.pop());
    const o = { id: this._queueSeq++, tryCount: 0, pending: false, args: t, flags: Object.assign({ fromQueue: true }, this.flags) };
    t.push((a, ...l) => o !== this._queue[0] ? void 0 : (a !== null ? o.tryCount > this._opts.retries && (this._queue.shift(), e && e(a)) : (this._queue.shift(), e && e(null, ...l)), o.pending = false, this._drainQueue())), this._queue.push(o), this._drainQueue();
  }
  _drainQueue(t = false) {
    if (!this.connected || this._queue.length === 0) return;
    const e = this._queue[0];
    e.pending && !t || (e.pending = true, e.tryCount++, this.flags = e.flags, this.emit.apply(this, e.args));
  }
  packet(t) {
    t.nsp = this.nsp, this.io._packet(t);
  }
  onopen() {
    typeof this.auth == "function" ? this.auth((t) => {
      this._sendConnectPacket(t);
    }) : this._sendConnectPacket(this.auth);
  }
  _sendConnectPacket(t) {
    this.packet({ type: $o.CONNECT, data: this._pid ? Object.assign({ pid: this._pid, offset: this._lastOffset }, t) : t });
  }
  onerror(t) {
    this.connected || this.emitReserved("connect_error", t);
  }
  onclose(t, e) {
    this.connected = false, delete this.id, this.emitReserved("disconnect", t, e), this._clearAcks();
  }
  _clearAcks() {
    Object.keys(this.acks).forEach((t) => {
      if (!this.sendBuffer.some((o) => String(o.id) === t)) {
        const o = this.acks[t];
        delete this.acks[t], o.withError && o.call(this, new Error("socket has been disconnected"));
      }
    });
  }
  onpacket(t) {
    if (t.nsp === this.nsp) switch (t.type) {
      case $o.CONNECT:
        t.data && t.data.sid ? this.onconnect(t.data.sid, t.data.pid) : this.emitReserved("connect_error", new Error("It seems you are trying to reach a Socket.IO server in v2.x with a v3.x client, but they are not compatible (more information here: https://socket.io/docs/v3/migrating-from-2-x-to-3-0/)"));
        break;
      case $o.EVENT:
      case $o.BINARY_EVENT:
        this.onevent(t);
        break;
      case $o.ACK:
      case $o.BINARY_ACK:
        this.onack(t);
        break;
      case $o.DISCONNECT:
        this.ondisconnect();
        break;
      case $o.CONNECT_ERROR:
        this.destroy();
        const o = new Error(t.data.message);
        o.data = t.data.data, this.emitReserved("connect_error", o);
        break;
    }
  }
  onevent(t) {
    const e = t.data || [];
    t.id != null && e.push(this.ack(t.id)), this.connected ? this.emitEvent(e) : this.receiveBuffer.push(Object.freeze(e));
  }
  emitEvent(t) {
    if (this._anyListeners && this._anyListeners.length) {
      const e = this._anyListeners.slice();
      for (const o of e) o.apply(this, t);
    }
    super.emit.apply(this, t), this._pid && t.length && typeof t[t.length - 1] == "string" && (this._lastOffset = t[t.length - 1]);
  }
  ack(t) {
    const e = this;
    let o = false;
    return function(...a) {
      o || (o = true, e.packet({ type: $o.ACK, id: t, data: a }));
    };
  }
  onack(t) {
    const e = this.acks[t.id];
    typeof e == "function" && (delete this.acks[t.id], e.withError && t.data.unshift(null), e.apply(this, t.data));
  }
  onconnect(t, e) {
    this.id = t, this.recovered = e && this._pid === e, this._pid = e, this.connected = true, this.emitBuffered(), this.emitReserved("connect"), this._drainQueue(true);
  }
  emitBuffered() {
    this.receiveBuffer.forEach((t) => this.emitEvent(t)), this.receiveBuffer = [], this.sendBuffer.forEach((t) => {
      this.notifyOutgoingListeners(t), this.packet(t);
    }), this.sendBuffer = [];
  }
  ondisconnect() {
    this.destroy(), this.onclose("io server disconnect");
  }
  destroy() {
    this.subs && (this.subs.forEach((t) => t()), this.subs = void 0), this.io._destroy(this);
  }
  disconnect() {
    return this.connected && this.packet({ type: $o.DISCONNECT }), this.destroy(), this.connected && this.onclose("io client disconnect"), this;
  }
  close() {
    return this.disconnect();
  }
  compress(t) {
    return this.flags.compress = t, this;
  }
  get volatile() {
    return this.flags.volatile = true, this;
  }
  timeout(t) {
    return this.flags.timeout = t, this;
  }
  onAny(t) {
    return this._anyListeners = this._anyListeners || [], this._anyListeners.push(t), this;
  }
  prependAny(t) {
    return this._anyListeners = this._anyListeners || [], this._anyListeners.unshift(t), this;
  }
  offAny(t) {
    if (!this._anyListeners) return this;
    if (t) {
      const e = this._anyListeners;
      for (let o = 0; o < e.length; o++) if (t === e[o]) return e.splice(o, 1), this;
    } else this._anyListeners = [];
    return this;
  }
  listenersAny() {
    return this._anyListeners || [];
  }
  onAnyOutgoing(t) {
    return this._anyOutgoingListeners = this._anyOutgoingListeners || [], this._anyOutgoingListeners.push(t), this;
  }
  prependAnyOutgoing(t) {
    return this._anyOutgoingListeners = this._anyOutgoingListeners || [], this._anyOutgoingListeners.unshift(t), this;
  }
  offAnyOutgoing(t) {
    if (!this._anyOutgoingListeners) return this;
    if (t) {
      const e = this._anyOutgoingListeners;
      for (let o = 0; o < e.length; o++) if (t === e[o]) return e.splice(o, 1), this;
    } else this._anyOutgoingListeners = [];
    return this;
  }
  listenersAnyOutgoing() {
    return this._anyOutgoingListeners || [];
  }
  notifyOutgoingListeners(t) {
    if (this._anyOutgoingListeners && this._anyOutgoingListeners.length) {
      const e = this._anyOutgoingListeners.slice();
      for (const o of e) o.apply(this, t.data);
    }
  }
}
function Du(E) {
  E = E || {}, this.ms = E.min || 100, this.max = E.max || 1e4, this.factor = E.factor || 2, this.jitter = E.jitter > 0 && E.jitter <= 1 ? E.jitter : 0, this.attempts = 0;
}
Du.prototype.duration = function() {
  var E = this.ms * Math.pow(this.factor, this.attempts++);
  if (this.jitter) {
    var t = Math.random(), e = Math.floor(t * this.jitter * E);
    E = (Math.floor(t * 10) & 1) == 0 ? E - e : E + e;
  }
  return Math.min(E, this.max) | 0;
};
Du.prototype.reset = function() {
  this.attempts = 0;
};
Du.prototype.setMin = function(E) {
  this.ms = E;
};
Du.prototype.setMax = function(E) {
  this.max = E;
};
Du.prototype.setJitter = function(E) {
  this.jitter = E;
};
class sp extends Ii {
  constructor(t, e) {
    var o;
    super(), this.nsps = {}, this.subs = [], t && typeof t == "object" && (e = t, t = void 0), e = e || {}, e.path = e.path || "/socket.io", this.opts = e, Ql(this, e), this.reconnection(e.reconnection !== false), this.reconnectionAttempts(e.reconnectionAttempts || 1 / 0), this.reconnectionDelay(e.reconnectionDelay || 1e3), this.reconnectionDelayMax(e.reconnectionDelayMax || 5e3), this.randomizationFactor((o = e.randomizationFactor) !== null && o !== void 0 ? o : 0.5), this.backoff = new Du({ min: this.reconnectionDelay(), max: this.reconnectionDelayMax(), jitter: this.randomizationFactor() }), this.timeout(e.timeout == null ? 2e4 : e.timeout), this._readyState = "closed", this.uri = t;
    const a = e.parser || Nx;
    this.encoder = new a.Encoder(), this.decoder = new a.Decoder(), this._autoConnect = e.autoConnect !== false, this._autoConnect && this.open();
  }
  reconnection(t) {
    return arguments.length ? (this._reconnection = !!t, t || (this.skipReconnect = true), this) : this._reconnection;
  }
  reconnectionAttempts(t) {
    return t === void 0 ? this._reconnectionAttempts : (this._reconnectionAttempts = t, this);
  }
  reconnectionDelay(t) {
    var e;
    return t === void 0 ? this._reconnectionDelay : (this._reconnectionDelay = t, (e = this.backoff) === null || e === void 0 || e.setMin(t), this);
  }
  randomizationFactor(t) {
    var e;
    return t === void 0 ? this._randomizationFactor : (this._randomizationFactor = t, (e = this.backoff) === null || e === void 0 || e.setJitter(t), this);
  }
  reconnectionDelayMax(t) {
    var e;
    return t === void 0 ? this._reconnectionDelayMax : (this._reconnectionDelayMax = t, (e = this.backoff) === null || e === void 0 || e.setMax(t), this);
  }
  timeout(t) {
    return arguments.length ? (this._timeout = t, this) : this._timeout;
  }
  maybeReconnectOnOpen() {
    !this._reconnecting && this._reconnection && this.backoff.attempts === 0 && this.reconnect();
  }
  open(t) {
    if (~this._readyState.indexOf("open")) return this;
    this.engine = new Ex(this.uri, this.opts);
    const e = this.engine, o = this;
    this._readyState = "opening", this.skipReconnect = false;
    const a = ka(e, "open", function() {
      o.onopen(), t && t();
    }), l = (i) => {
      this.cleanup(), this._readyState = "closed", this.emitReserved("error", i), t ? t(i) : this.maybeReconnectOnOpen();
    }, s = ka(e, "error", l);
    if (this._timeout !== false) {
      const i = this._timeout, u = this.setTimeoutFn(() => {
        a(), l(new Error("timeout")), e.close();
      }, i);
      this.opts.autoUnref && u.unref(), this.subs.push(() => {
        this.clearTimeoutFn(u);
      });
    }
    return this.subs.push(a), this.subs.push(s), this;
  }
  connect(t) {
    return this.open(t);
  }
  onopen() {
    this.cleanup(), this._readyState = "open", this.emitReserved("open");
    const t = this.engine;
    this.subs.push(ka(t, "ping", this.onping.bind(this)), ka(t, "data", this.ondata.bind(this)), ka(t, "error", this.onerror.bind(this)), ka(t, "close", this.onclose.bind(this)), ka(this.decoder, "decoded", this.ondecoded.bind(this)));
  }
  onping() {
    this.emitReserved("ping");
  }
  ondata(t) {
    try {
      this.decoder.add(t);
    } catch (e) {
      this.onclose("parse error", e);
    }
  }
  ondecoded(t) {
    Zl(() => {
      this.emitReserved("packet", t);
    }, this.setTimeoutFn);
  }
  onerror(t) {
    this.emitReserved("error", t);
  }
  socket(t, e) {
    let o = this.nsps[t];
    return o ? this._autoConnect && !o.active && o.connect() : (o = new ym(this, t, e), this.nsps[t] = o), o;
  }
  _destroy(t) {
    const e = Object.keys(this.nsps);
    for (const o of e) if (this.nsps[o].active) return;
    this._close();
  }
  _packet(t) {
    const e = this.encoder.encode(t);
    for (let o = 0; o < e.length; o++) this.engine.write(e[o], t.options);
  }
  cleanup() {
    this.subs.forEach((t) => t()), this.subs.length = 0, this.decoder.destroy();
  }
  _close() {
    this.skipReconnect = true, this._reconnecting = false, this.onclose("forced close");
  }
  disconnect() {
    return this._close();
  }
  onclose(t, e) {
    var o;
    this.cleanup(), (o = this.engine) === null || o === void 0 || o.close(), this.backoff.reset(), this._readyState = "closed", this.emitReserved("close", t, e), this._reconnection && !this.skipReconnect && this.reconnect();
  }
  reconnect() {
    if (this._reconnecting || this.skipReconnect) return this;
    const t = this;
    if (this.backoff.attempts >= this._reconnectionAttempts) this.backoff.reset(), this.emitReserved("reconnect_failed"), this._reconnecting = false;
    else {
      const e = this.backoff.duration();
      this._reconnecting = true;
      const o = this.setTimeoutFn(() => {
        t.skipReconnect || (this.emitReserved("reconnect_attempt", t.backoff.attempts), !t.skipReconnect && t.open((a) => {
          a ? (t._reconnecting = false, t.reconnect(), this.emitReserved("reconnect_error", a)) : t.onreconnect();
        }));
      }, e);
      this.opts.autoUnref && o.unref(), this.subs.push(() => {
        this.clearTimeoutFn(o);
      });
    }
  }
  onreconnect() {
    const t = this.backoff.attempts;
    this._reconnecting = false, this.backoff.reset(), this.emitReserved("reconnect", t);
  }
}
const gc = {};
function Vl(E, t) {
  typeof E == "object" && (t = E, E = void 0), t = t || {};
  const e = Ax(E, t.path || "/socket.io"), o = e.source, a = e.id, l = e.path, s = gc[a] && l in gc[a].nsps, i = t.forceNew || t["force new connection"] || t.multiplex === false || s;
  let u;
  return i ? u = new sp(o, t) : (gc[a] || (gc[a] = new sp(o, t)), u = gc[a]), e.query && !t.query && (t.query = e.queryKey), u.socket(e.path, t);
}
Object.assign(Vl, { Manager: sp, Socket: ym, io: Vl, connect: Vl });
let Hi = Vl(US ?? window.location.toString(), { reconnection: true, reconnectionAttempts: 10, reconnectionDelay: 250, reconnectionDelayMax: 2e3, ackTimeout: 1e3 });
function Jl(E, t) {
  const e = bn("#connectionStatus"), o = bn("#innerConnectionStatus"), a = () => e.children(".status-icon").attr("id", "").removeClass().addClass("status-icon");
  switch (E) {
    case "connected":
      a().addClass(E), o.text("Connected to server.");
      break;
    case "disconnected":
      break;
    case "reconnecting":
      let l = "Reconnecting...";
      (t ?? 0) < 0 ? (l = "Reconnecting failed... click the icon to try again.", a().addClass("disconnected").attr("id", "reconnectBtn"), bn("#reconnectBtn").on("click", () => {
        Hi.connect();
      })) : (a().addClass("connecting"), (t ?? 0) > 1 && (l += ` (attempt ${t}).`)), o.text(l);
      break;
    default:
      console.error(`Unexpected server status: ${E}.`);
  }
}
Hi.on("connect", () => {
  Jl("connected");
});
Hi.on("disconnect", () => {
  Jl("disconnected");
});
Hi.io.on("reconnect_attempt", (E) => {
  Jl("reconnecting", E);
});
Hi.io.on("reconnect_failed", () => {
  Jl("reconnecting", -1);
});
function Pp(E) {
  const t = bn(".waiting-modal-content");
  Sd(), t.append(bn("<button>").addClass("close-button").on("click", () => {
    t.children("div").removeClass().addClass("spinner"), Sd(), bn("#wait-status").text(""), bn("#waitingModal").hide(), E && E();
  }).html("&times;"));
}
function Sd() {
  bn(".waiting-modal-content button").remove();
}
function cs(E, t) {
  Cp(E, "error-icon"), Pp(t);
}
function Ol(E, t) {
  Cp(E, "check-icon").html("&#10003;"), Pp(t);
}
function vc(E, t) {
  Cp(E, "spinner");
}
function Cp(E, t) {
  return bn("#waitingModal").css("display", "flex"), bn("#wait-status").text(E), bn(".waiting-modal-content").children("div").removeClass().addClass(t).html("");
}
function Fx(E, t = "#eee", e = 3e3) {
  let o = bn("#popup");
  o.length === 0 && (o = bn('<div id="popup">').addClass("popup"), bn(document.body).append(o)), o.html(E).css("color", t).removeClass("hide"), o.get(0).offsetWidth, o.addClass("show"), setTimeout(() => {
    o.removeClass("show"), o.addClass("hide");
  }, e);
}
function xd(E) {
  const t = bn("#topPopup").text(E);
  t.addClass("show"), t.on("animationend", () => {
    t.removeClass("show");
  });
}
function _d(E) {
  const t = Nl.basicNodeSigner(E, Gl);
  class e {
    constructor() {
      __publicField(this, "signTransaction", t.signTransaction);
      __publicField(this, "signAuthEntry", t.signAuthEntry);
    }
    getAddress() {
      return Promise.resolve({ address: E.publicKey() });
    }
    isConnected() {
      return Promise.resolve({ isConnected: true });
    }
    requestAccess() {
      return this.getAddress();
    }
    getNetwork() {
      return Promise.resolve({ network: "TESTNET", networkPassphrase: Gl });
    }
    kp() {
      return E;
    }
  }
  return new e();
}
globalThis.Buffer = window.Buffer = up.Buffer;
class Ux {
  constructor() {
    __publicField(this, "handle");
    __publicField(this, "forfeitLedger", 0);
    __publicField(this, "ledElem");
    __publicField(this, "secElem");
    this.secElem = bn("#forfeitSec"), this.ledElem = bn("#forfeitLed");
  }
  async start() {
    bn(".forfeit").show();
    const t = new Da.Server(Mu), e = await t.getLatestLedger();
    this.forfeitLedger = e.sequence + FS, this.handle = setInterval(async () => {
      const o = await t.getLatestLedger(), a = 180 - (o.sequence - e.sequence);
      console.log(o, a), this.ledElem.text(a.toString()), o.sequence >= this.forfeitLedger && this.secElem.text("0");
    }, 2500);
  }
  reset() {
    clearInterval(this.handle), bn(".forfeit").hide();
  }
}
async function Ed() {
  let E, t, e, o;
  function a() {
    window.localStorage.clear(), window.location.href = "/";
  }
  async function l() {
    switch (window.localStorage.getItem("walletMethod")) {
      case "import":
        let [at, rt] = ["username", "secretKey"].map((Lt) => window.localStorage.getItem(Lt));
        t = at, e = Ai.Keypair.fromSecret(rt), E = _d(e), console.debug(`Logged in ${t} as ${(await E.getAddress()).address}`);
        break;
      case "generate":
        const ot = new Da.Server(Mu);
        e = Ai.Keypair.random(), vc("Generating account w/ play money...");
        try {
          await ot.requestAirdrop(e.publicKey());
        } catch (Lt) {
          alert(`Generating account failed: ${Lt.message}`), a();
        }
        Ol(`Account ${e.publicKey().substring(0, 6)}... funded!`), window.localStorage.setItem("secretKey", e.secret()), window.localStorage.setItem("walletMethod", "import"), t = window.localStorage.getItem("username"), E = _d(e);
        break;
      case "freighter":
        const { isConnected: X } = await Qc.isConnected();
        X || a();
        const { address: I, error: nt } = await Qc.requestAccess();
        I || (alert(`Failed to connect to Freighter: ${nt}`), a());
        const { network: ft, networkPassphrase: dt } = await Qc.getNetwork();
        dt != Gl && (console.error(ft, dt), alert("Account is on the wrong network! Please switch to a testnet account."), a()), E = Qc, t = window.localStorage.getItem("username"), e = Ai.Keypair.fromPublicKey(await Z());
        break;
      default:
        alert("Invalid login! Redirecting to login page..."), a();
    }
  }
  window.localStorage.getItem("signedUp") || a(), await l();
  const s = new VS(), i = await _p(E), u = new MS(".game-area", { theme_surface: "taverntable", theme_texture: "wood", theme_material: "wood", sounds: true, sound_dieMaterial: "wood", strength: 2.5, light_intensity: 1, gravity_multiplier: 600, baseScale: 100 }), d = new Ux();
  async function f() {
    bn("#username").text(t), bn("#account-id").text(`${e.publicKey().substring(0, 8)}...`).attr("title", `${e.publicKey()} (click to copy)`).on("click", () => {
      navigator.clipboard.writeText(e.publicKey());
    }), D(), u.initialize(), i.wager().then((at) => {
      bn("#wager").text((at.result / Iu).toString());
    }), bn(".deposit").on("click", m), bn(".withdraw").on("click", c), bn(".refresh").on("click", () => D()), bn("#play").on("click", h), bn("#logout").on("click", () => a()), bn("#rules").on("click", () => bn("#rulesModal").css("display", "flex")), bn(".got-it").on("click", () => bn("#rulesModal").hide()), bn("#refundBtn").on("click", () => {
    }), bn("#holdReroll").on("click", () => T(false)), bn("#holdPass").on("click", () => T(true)), bn("#dicePanel .die").on("click", (at) => {
      if (bn(at).hasClass("active")) {
        const [rt, ot] = w(), X = md(rt);
        bn("#turn-score").text(X.toString());
      }
    }), Hi.onAny((at, ...rt) => console.debug(at, ...rt)), Hi.on("auth_request", p), Hi.on("match_start", b), Hi.on("match_error", g), s.on("roll", P), s.on("reroll", k), s.on("bust", R), s.on("win", F);
  }
  async function p(at) {
    bn("#wait-status").text("Authorizing game...");
    let rt = 0;
    const { network: ot, networkPassphrase: X } = await E.getNetwork();
    switch (ot) {
      case "TESTNET":
        rt = (await new Da.Server(Mu).getLatestLedger()).sequence + Math.floor(60 / 5);
        break;
      default:
        throw `Wrong network: ${ot}.`;
    }
    const I = Ai.xdr.SorobanAuthorizationEntry.fromXDR(at.entry, "base64");
    return console.log(I.toXDR("base64")), Ai.authorizeEntry(I, async (nt) => {
      console.debug("Signing payload:", nt.toXDR("base64"));
      const { signedAuthEntry: ft, signerAddress: dt, error: Lt } = await E.signAuthEntry(nt.toXDR("base64"), { address: e.publicKey(), networkPassphrase: Gl });
      if (!ft || Lt) throw Lt;
      return { signature: typeof ft == "string" ? up.Buffer.from(ft, "base64") : ft, publicKey: e.publicKey() };
    }, rt, X).then((nt) => {
      Hi.emit("auth_response", { match_id: at.match_id, player: e.publicKey(), entry: nt.toXDR("base64") });
    }, (nt) => {
      cs(`Authorization failed: ${(nt == null ? void 0 : nt.message) ?? JSON.stringify(nt)}`);
    });
  }
  async function g(at) {
    cs(at.error ?? JSON.stringify(at), () => {
      bn("#play").show(), Hi.disconnect(), Hi.connect();
    });
  }
  async function b(at) {
    D(), bn("#wait-status").text("Joined!"), bn("#waitingModal").hide(), bn("#play").hide(), bn(".scoreboard").show(), bn(".total").text("0"), bn("#forfeit").show(), window.matchMedia("(max-width: 768px)") && bn(".mobile-game-area").attr("display", "flex");
    const [rt, ot] = at.match_id.split("|"), X = at.users.filter((nt) => nt !== t)[0], I = e.publicKey();
    if (o = rt === I ? ot : rt, s.listen([rt, ot]), bn("#name").text(t).attr("title", I), bn("#opponent-name").text(X).attr("title", o), B(), at.first_player === I) try {
      const nt = await v(E, o, "Building first roll transaction...");
      await u.roll(U(nt));
    } catch (nt) {
      W([]), cs(nt.toString(), () => {
        b(at);
      });
    }
  }
  async function h() {
    Hi.disconnected ? cs("Not connected to server :( Try refreshing?") : Hi.emit("join", { address: e.publicKey(), username: t }, (at) => {
      console.log("Ack:", at), vc("Waiting for opponent...");
    }), Pp(() => {
      Hi.disconnect(), Hi.connect();
    });
  }
  async function m() {
    return vc("Depositing 100 XLM..."), console.debug("Depositing 100 XLM into the contract..."), Wl(await i.deposit({ to: e.publicKey(), amount: 100n * Iu }).then((at) => (bn("#wait-status").text("Authorizing & sending deposit transaction..."), at))).then(() => {
      Ol("Funds deposited."), D();
    }, (at) => {
      cs(`Authorization failed! Reason: ${at.message}`);
    });
  }
  async function c() {
    return vc("Withdrawing funds..."), console.debug("Withdrawing all XLM from the contract..."), Wl(await i.withdraw({ from: e.publicKey() }).then((at) => (bn("#wait-status").text("Authorizing & sending withdrawal transaction..."), at))).then(() => {
      Ol("Funds withdrawn."), D();
    }, (at) => {
      cs(`Authorization failed! Reason: ${at.message}`);
    });
  }
  function w() {
    const at = bn("#dicePanel .die.active").map(function() {
      return parseInt(bn(this).data("value"));
    }).toArray(), rt = bn("#dicePanel .die.active").map(function() {
      return parseInt(bn(this).data("index"));
    }).toArray();
    return [at, rt];
  }
  async function T(at) {
    bn("#dicePanel").hide();
    const [rt, ot] = w(), X = md(rt);
    if (console.log(`Roll ${rt} scored ${X}.`), X === 0) {
      cs("Invalid dice hold! You must only keep scoring dice.", () => {
        M(bn(".die").map(function() {
          return parseInt(bn(this).data("value"));
        }).toArray());
      });
      return;
    }
    let I = `Building roll transaction to save ${Kf(rt)} for ${X} points `, nt = bn("#dicePanel .die").length - ot.length;
    at ? I += "and pass..." : (nt <= 0 && (nt = 6), I += `and re-roll ${nt} ${nt === 1 ? "die" : "dice"}...`);
    try {
      B(at ? 6 : nt);
      const ft = await v(E, o, I, ot, at);
      ft.length > 0 && u.roll(U(ft));
    } catch (ft) {
      console.error(`Caught error, letting player re-choose: ${ft}`), M(bn("#dicePanel .die").map(function() {
        return parseInt(bn(this).text());
      }).toArray());
    }
  }
  async function P(at) {
    const rt = at.detail;
    if (rt.dice.length === 0) {
      const ot = rt.player === e.publicKey() ? "their" : "your";
      if (Fx(`It's ${ot} turn!`), B(6), ot === "your") {
        d.reset();
        try {
          const X = await v(E, o);
          W(X), await u.roll(U(X));
        } catch {
          W(rt.dice), M(rt.dice);
        }
      }
      return;
    }
    B(rt.dice.length), rt.player === e.publicKey() ? (await ep(3e3), M(rt.dice), W(rt.dice)) : (d.start(), W(rt.dice), await u.roll(U(rt.dice)));
  }
  async function k(at) {
    const rt = at.detail;
    if (rt.player !== e.publicKey() && rt.dice.length > 0) {
      const nt = bn("#opponent-name").text(), ft = Kf(rt.dice), dt = rt.stop ? " and passed to you" : "";
      xd(`${nt} kept ${ft} for ${rt.score} points${dt}.`);
    }
    let ot = rt.player !== e.publicKey() ? "opponent-" : "", X = bn(`#${ot}turn-score`);
    const I = parseInt(X.text());
    if (X.text(I + rt.score), rt.stop) {
      const nt = bn(`#${ot}total-score`);
      nt.text(parseInt(nt.text()) + I + rt.score), X.text("0"), i.score({ player: rt.player }).then((ft) => ft.simulate()).then((ft) => {
        nt.text(ft.result.toString());
      });
    }
  }
  async function R(at) {
    const rt = at.detail;
    W(rt.dice);
    const ot = rt.player === e.publicKey();
    ot || await u.roll(U(rt.dice)), xd(`${ot ? "You" : "Opponent"} busted with ${Kf(rt.dice)}!`), bn(`#${ot ? "" : "opponent-"}turn-score`).text("0"), ot || (await ep(3e3), v(E, o, "Building a fresh roll transaction..."));
  }
  async function F(at) {
    const rt = at.detail;
    u.clearDice(), W([]);
    const ot = () => {
      D(), bn(".scoreboard").fadeOut(), bn(".chat-panel").fadeOut(), bn("#play").show();
    };
    rt.player === e.publicKey() ? Ol(`You won with ${rt.score} points! Winnings have been transferred to your account.`, ot) : cs(`You lost :( Your opponent finished with ${rt.score} points.`, ot), d.reset();
  }
  function v(at, rt, ot, X, I) {
    return vc(ot ?? "Building roll transaction..."), console.debug(`Rolling against ${rt}, saving ${X} and stop: ${I}`), HS(at, rt, X, I).then((nt) => (bn("#waitingModal").hide(), nt), (nt) => (cs(`Authorization failed! Reason: ${nt.message}`), Promise.reject(nt)));
  }
  function U(at) {
    const rt = `${at.length}d6@${at.map((ot) => ot.toString()).join(",")}`;
    return console.info("Rolling", rt), rt;
  }
  function M(at) {
    const rt = bn(".dice-container").html("");
    at.forEach((ot, X) => {
      const I = bn("<div>");
      I.addClass(["die", `p${ot}`]).data("value", ot).data("index", X).on("click", () => I.toggleClass("active")).append(new Array(ot).fill(0).map(() => bn("<div>").addClass("pip"))), rt.append(I);
    }), bn("#dicePanel").show();
  }
  async function Z() {
    const { address: at } = await E.getAddress();
    return at;
  }
  async function D() {
    console.log(`Refreshing balances for ${e.publicKey().substring(0, 6)}...`);
    let { element: at, oldBalance: rt, newBalance: ot } = await zS(E);
    V(at, rt, ot), { element: at, oldBalance: rt, newBalance: ot } = await qS(E), V(at, rt, ot);
  }
  function V(at, rt, ot) {
    const X = parseFloat(ot) - parseFloat(rt);
    if (Math.round(X) === 0) return;
    const I = bn("<span>").addClass("balance-change");
    I.addClass(X > 0 ? "win" : "loss").text(`${X > 0 ? "+" : ""}${X.toFixed(2)}`), at.parent().append(I), setTimeout(() => I.remove(), 2500);
  }
  const S = [1, 2, 3, 4, 5, 6];
  let x = null;
  function B(at = 6) {
    x !== null && (clearInterval(x), x = null), console.log(`Shuffling ${at} dice`);
    const rt = bn("#mobileRoller .dice-container").empty();
    for (let ot = 0; ot < at; ot++) rt.append(lt(1));
    bn("#mobileRoller").show(), x = window.setInterval(() => {
      bn("#mobileRoller .die").each((ot, X) => {
        const I = S[Math.floor(Math.random() * 6)];
        pt(bn(X), I);
      });
    }, 90);
  }
  function W(at) {
    console.log(`Stopping shuffle with ${at}`), x !== null && (clearInterval(x), x = null), bn("#mobileRoller .die").each((rt, ot) => {
      rt > at.length - 1 ? bn(ot).remove() : pt(bn(ot), at[rt] ?? 1);
    }), at.length === 0 && bn("#mobileRoller .dice-container").html("");
  }
  function lt(at) {
    const rt = bn("<div>").addClass("die");
    return pt(rt, at), rt;
  }
  function pt(at, rt) {
    for (let ot = 1; ot <= 6; ot++) at.removeClass(`p${ot}`);
    at.empty().addClass(`p${rt}`);
    for (let ot = 0; ot < rt; ot++) at.append(bn("<span>").addClass("pip"));
  }
  f();
}
bn(() => {
  if (localStorage.getItem("signedUp")) {
    bn("#landingContainer").hide(), bn(".container").show(), Ed();
    return;
  }
  bn("#landingForm").on("change", () => {
    bn("#methodImport").is(":checked") ? bn("#importKeyField").show() : bn("#importKeyField").hide();
  }), bn("#landingForm").on("submit", (E) => {
    E.preventDefault();
    const t = bn("#form-username").val().trim(), e = bn("input[name='walletMethod']:checked").val(), o = bn("#secretKey").val().trim();
    if (o && !Ai.StrKey.isValidEd25519SecretSeed(o)) {
      alert("Invalid secret key format!");
      return;
    }
    localStorage.setItem("signedUp", "true"), localStorage.setItem("username", t), localStorage.setItem("walletMethod", e), e === "import" ? localStorage.setItem("secretKey", o) : localStorage.removeItem("secretKey"), bn("#landingContainer").hide(), bn(".container").show(), Ed();
  });
});
